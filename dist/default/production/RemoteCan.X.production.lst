

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Apr 16 17:55:43 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           	psect	idataBANK0
    80  0161D8                     __pidataBANK0:
    81                           	opt stack 0
    82                           
    83                           ;initializer for _delay_quartz_frequency_value
    84  0161D8  10                 	db	16
    85                           
    86                           	psect	mediumconst
    87  00FEB4                     __pmediumconst:
    88                           	opt stack 0
    89  00FEB4  00                 	db	0
    90  00FEB5                     __npowers_:
    91                           	opt stack 0
    92  00FEB5  0000               	dw	0
    93  00FEB7  3F80               	dw	16256
    94  00FEB9  CCCD               	dw	52429
    95  00FEBB  3DCC               	dw	15820
    96  00FEBD  D70A               	dw	55050
    97  00FEBF  3C23               	dw	15395
    98  00FEC1  126F               	dw	4719
    99  00FEC3  3A83               	dw	14979
   100  00FEC5  B717               	dw	46871
   101  00FEC7  38D1               	dw	14545
   102  00FEC9  C5AC               	dw	50604
   103  00FECB  3727               	dw	14119
   104  00FECD  37BD               	dw	14269
   105  00FECF  3586               	dw	13702
   106  00FED1  BF95               	dw	49045
   107  00FED3  33D6               	dw	13270
   108  00FED5  CC77               	dw	52343
   109  00FED7  322B               	dw	12843
   110  00FED9  705F               	dw	28767
   111  00FEDB  3089               	dw	12425
   112  00FEDD  E6FF               	dw	59135
   113  00FEDF  2EDB               	dw	11995
   114  00FEE1  E508               	dw	58632
   115  00FEE3  1E3C               	dw	7740
   116  00FEE5  4260               	dw	16992
   117  00FEE7  0DA2               	dw	3490
   118  00FEE9                     __end_of__npowers_:
   119                           	opt stack 0
   120  00FEE9                     __powers_:
   121                           	opt stack 0
   122  00FEE9  0000               	dw	0
   123  00FEEB  3F80               	dw	16256
   124  00FEED  0000               	dw	0
   125  00FEEF  4120               	dw	16672
   126  00FEF1  0000               	dw	0
   127  00FEF3  42C8               	dw	17096
   128  00FEF5  0000               	dw	0
   129  00FEF7  447A               	dw	17530
   130  00FEF9  4000               	dw	16384
   131  00FEFB  461C               	dw	17948
   132  00FEFD  5000               	dw	20480
   133  00FEFF  47C3               	dw	18371
   134  00FF01  2400               	dw	9216
   135  00FF03  4974               	dw	18804
   136  00FF05  9680               	dw	38528
   137  00FF07  4B18               	dw	19224
   138  00FF09  BC20               	dw	48160
   139  00FF0B  4CBE               	dw	19646
   140  00FF0D  6B28               	dw	27432
   141  00FF0F  4E6E               	dw	20078
   142  00FF11  02F9               	dw	761
   143  00FF13  5015               	dw	20501
   144  00FF15  78EC               	dw	30956
   145  00FF17  60AD               	dw	24749
   146  00FF19  F2CA               	dw	62154
   147  00FF1B  7149               	dw	29001
   148  00FF1D                     __end_of__powers_:
   149                           	opt stack 0
   150  00FF1D                     _dpowers:
   151                           	opt stack 0
   152  00FF1D  0001               	dw	1
   153  00FF1F  0000               	dw	0
   154  00FF21  000A               	dw	10
   155  00FF23  0000               	dw	0
   156  00FF25  0064               	dw	100
   157  00FF27  0000               	dw	0
   158  00FF29  03E8               	dw	1000
   159  00FF2B  0000               	dw	0
   160  00FF2D  2710               	dw	10000
   161  00FF2F  0000               	dw	0
   162  00FF31  86A0               	dw	34464
   163  00FF33  0001               	dw	1
   164  00FF35  4240               	dw	16960
   165  00FF37  000F               	dw	15
   166  00FF39  9680               	dw	38528
   167  00FF3B  0098               	dw	152
   168  00FF3D  E100               	dw	57600
   169  00FF3F  05F5               	dw	1525
   170  00FF41  CA00               	dw	51712
   171  00FF43  3B9A               	dw	15258
   172  00FF45                     __end_of_dpowers:
   173                           	opt stack 0
   174  0000                     _RXB1CON	set	3920
   175  0000                     _RXB1CONbits	set	3920
   176  0000                     _RXB1D0	set	3926
   177  0000                     _RXB1D1	set	3927
   178  0000                     _RXB1D2	set	3928
   179  0000                     _RXB1D3	set	3929
   180  0000                     _RXB1D4	set	3930
   181  0000                     _RXB1D5	set	3931
   182  0000                     _RXB1D6	set	3932
   183  0000                     _RXB1D7	set	3933
   184  0000                     _RXB1DLC	set	3925
   185  0000                     _RXB1DLCbits	set	3925
   186  0000                     _RXB1EIDH	set	3923
   187  0000                     _RXB1EIDL	set	3924
   188  0000                     _RXB1SIDH	set	3921
   189  0000                     _RXB1SIDL	set	3922
   190  0000                     _RXB1SIDLbits	set	3922
   191  0000                     _RXF0EIDH	set	3842
   192  0000                     _RXF0EIDL	set	3843
   193  0000                     _RXF0SIDH	set	3840
   194  0000                     _RXF0SIDL	set	3841
   195  0000                     _RXF0SIDLbits	set	3841
   196  0000                     _RXF1EIDH	set	3846
   197  0000                     _RXF1EIDL	set	3847
   198  0000                     _RXF1SIDH	set	3844
   199  0000                     _RXF1SIDL	set	3845
   200  0000                     _RXF1SIDLbits	set	3845
   201  0000                     _RXF2EIDH	set	3850
   202  0000                     _RXF2EIDL	set	3851
   203  0000                     _RXF2SIDH	set	3848
   204  0000                     _RXF2SIDL	set	3849
   205  0000                     _RXF2SIDLbits	set	3849
   206  0000                     _RXF3EIDH	set	3854
   207  0000                     _RXF3EIDL	set	3855
   208  0000                     _RXF3SIDH	set	3852
   209  0000                     _RXF3SIDL	set	3853
   210  0000                     _RXF3SIDLbits	set	3853
   211  0000                     _RXF4EIDH	set	3858
   212  0000                     _RXF4EIDL	set	3859
   213  0000                     _RXF4SIDH	set	3856
   214  0000                     _RXF4SIDL	set	3857
   215  0000                     _RXF4SIDLbits	set	3857
   216  0000                     _RXF5EIDH	set	3862
   217  0000                     _RXF5EIDL	set	3863
   218  0000                     _RXF5SIDH	set	3860
   219  0000                     _RXF5SIDL	set	3861
   220  0000                     _RXF5SIDLbits	set	3861
   221  0000                     _RXM0EIDH	set	3866
   222  0000                     _RXM0EIDL	set	3867
   223  0000                     _RXM0SIDH	set	3864
   224  0000                     _RXM0SIDL	set	3865
   225  0000                     _RXM0SIDLbits	set	3865
   226  0000                     _RXM1EIDH	set	3870
   227  0000                     _RXM1EIDL	set	3871
   228  0000                     _RXM1SIDH	set	3868
   229  0000                     _RXM1SIDL	set	3869
   230  0000                     _RXM1SIDLbits	set	3869
   231  0000                     _TXB0CONbits	set	3904
   232  0000                     _TXB0D0	set	3910
   233  0000                     _TXB0D1	set	3911
   234  0000                     _TXB0D2	set	3912
   235  0000                     _TXB0D3	set	3913
   236  0000                     _TXB0D4	set	3914
   237  0000                     _TXB0D5	set	3915
   238  0000                     _TXB0D6	set	3916
   239  0000                     _TXB0D7	set	3917
   240  0000                     _TXB0DLC	set	3909
   241  0000                     _TXB0DLCbits	set	3909
   242  0000                     _TXB0EIDH	set	3907
   243  0000                     _TXB0EIDL	set	3908
   244  0000                     _TXB0SIDH	set	3905
   245  0000                     _TXB0SIDL	set	3906
   246  0000                     _TXB0SIDLbits	set	3906
   247  0000                     _TXB1CONbits	set	3888
   248  0000                     _TXB1D0	set	3894
   249  0000                     _TXB1D1	set	3895
   250  0000                     _TXB1D2	set	3896
   251  0000                     _TXB1D3	set	3897
   252  0000                     _TXB1D4	set	3898
   253  0000                     _TXB1D5	set	3899
   254  0000                     _TXB1D6	set	3900
   255  0000                     _TXB1D7	set	3901
   256  0000                     _TXB1DLC	set	3893
   257  0000                     _TXB1DLCbits	set	3893
   258  0000                     _TXB1EIDH	set	3891
   259  0000                     _TXB1EIDL	set	3892
   260  0000                     _TXB1SIDH	set	3889
   261  0000                     _TXB1SIDL	set	3890
   262  0000                     _TXB1SIDLbits	set	3890
   263  0000                     _TXB2CONbits	set	3872
   264  0000                     _TXB2D0	set	3878
   265  0000                     _TXB2D1	set	3879
   266  0000                     _TXB2D2	set	3880
   267  0000                     _TXB2D3	set	3881
   268  0000                     _TXB2D4	set	3882
   269  0000                     _TXB2D5	set	3883
   270  0000                     _TXB2D6	set	3884
   271  0000                     _TXB2D7	set	3885
   272  0000                     _TXB2DLC	set	3877
   273  0000                     _TXB2DLCbits	set	3877
   274  0000                     _TXB2EIDH	set	3875
   275  0000                     _TXB2EIDL	set	3876
   276  0000                     _TXB2SIDH	set	3873
   277  0000                     _TXB2SIDL	set	3874
   278  0000                     _TXB2SIDLbits	set	3874
   279  0000                     _ADCON0bits	set	4034
   280  0000                     _ADCON1	set	4033
   281  0000                     _ADCON2bits	set	4032
   282  0000                     _ADRESH	set	4036
   283  0000                     _BRGCON1	set	3952
   284  0000                     _BRGCON2	set	3953
   285  0000                     _BRGCON2bits	set	3953
   286  0000                     _BRGCON3	set	3954
   287  0000                     _BRGCON3bits	set	3954
   288  0000                     _CANCON	set	3951
   289  0000                     _CANCONbits	set	3951
   290  0000                     _CANSTAT	set	3950
   291  0000                     _COMSTATbits	set	3956
   292  0000                     _INTCONbits	set	4082
   293  0000                     _IPR2bits	set	4002
   294  0000                     _IPR3bits	set	4005
   295  0000                     _LATA	set	3977
   296  0000                     _LATB	set	3978
   297  0000                     _LATC	set	3979
   298  0000                     _LATCbits	set	3979
   299  0000                     _LATD	set	3980
   300  0000                     _LATDbits	set	3980
   301  0000                     _LATE	set	3981
   302  0000                     _LATEbits	set	3981
   303  0000                     _PIE2bits	set	4000
   304  0000                     _PIE3bits	set	4003
   305  0000                     _PIR2bits	set	4001
   306  0000                     _PIR3bits	set	4004
   307  0000                     _PORTAbits	set	3968
   308  0000                     _PORTBbits	set	3969
   309  0000                     _PORTDbits	set	3971
   310  0000                     _RCONbits	set	4048
   311  0000                     _RXB0CON	set	3936
   312  0000                     _RXB0CONbits	set	3936
   313  0000                     _RXB0D0	set	3942
   314  0000                     _RXB0D1	set	3943
   315  0000                     _RXB0D2	set	3944
   316  0000                     _RXB0D3	set	3945
   317  0000                     _RXB0D4	set	3946
   318  0000                     _RXB0D5	set	3947
   319  0000                     _RXB0D6	set	3948
   320  0000                     _RXB0D7	set	3949
   321  0000                     _RXB0DLC	set	3941
   322  0000                     _RXB0DLCbits	set	3941
   323  0000                     _RXB0EIDH	set	3939
   324  0000                     _RXB0EIDL	set	3940
   325  0000                     _RXB0SIDH	set	3937
   326  0000                     _RXB0SIDL	set	3938
   327  0000                     _RXB0SIDLbits	set	3938
   328  0000                     _RXERRCNT	set	3957
   329  0000                     _T3CON	set	4017
   330  0000                     _TMR3H	set	4019
   331  0000                     _TMR3L	set	4018
   332  0000                     _TRISA	set	3986
   333  0000                     _TRISB	set	3987
   334  0000                     _TRISC	set	3988
   335  0000                     _TRISD	set	3989
   336  0000                     _TRISE	set	3990
   337  0000                     _TXERRCNT	set	3958
   338  00FF45                     STR_3:
   339  00FF45  20                 	db	32
   340  00FF46  20                 	db	32
   341  00FF47  50                 	db	80	;'P'
   342  00FF48  72                 	db	114	;'r'
   343  00FF49  65                 	db	101	;'e'
   344  00FF4A  73                 	db	115	;'s'
   345  00FF4B  73                 	db	115	;'s'
   346  00FF4C  20                 	db	32
   347  00FF4D  74                 	db	116	;'t'
   348  00FF4E  68                 	db	104	;'h'
   349  00FF4F  65                 	db	101	;'e'
   350  00FF50  20                 	db	32
   351  00FF51  62                 	db	98	;'b'
   352  00FF52  75                 	db	117	;'u'
   353  00FF53  74                 	db	116	;'t'
   354  00FF54  74                 	db	116	;'t'
   355  00FF55  6F                 	db	111	;'o'
   356  00FF56  6E                 	db	110	;'n'
   357  00FF57  20                 	db	32
   358  00FF58  20                 	db	32
   359  00FF59  00                 	db	0
   360  00FF5A                     STR_2:
   361  00FF5A  3D                 	db	61	;'='
   362  00FF5B  3D                 	db	61	;'='
   363  00FF5C  3E                 	db	62	;'>'
   364  00FF5D  20                 	db	32
   365  00FF5E  56                 	db	86	;'V'
   366  00FF5F  45                 	db	69	;'E'
   367  00FF60  48                 	db	72	;'H'
   368  00FF61  49                 	db	73	;'I'
   369  00FF62  43                 	db	67	;'C'
   370  00FF63  4C                 	db	76	;'L'
   371  00FF64  45                 	db	69	;'E'
   372  00FF65  20                 	db	32
   373  00FF66  20                 	db	32
   374  00FF67  4F                 	db	79	;'O'
   375  00FF68  46                 	db	70	;'F'
   376  00FF69  46                 	db	70	;'F'
   377  00FF6A  20                 	db	32
   378  00FF6B  3C                 	db	60	;'<'
   379  00FF6C  3D                 	db	61	;'='
   380  00FF6D  3D                 	db	61	;'='
   381  00FF6E  00                 	db	0
   382  00FF6F                     STR_6:
   383  00FF6F  3D                 	db	61	;'='
   384  00FF70  3D                 	db	61	;'='
   385  00FF71  3D                 	db	61	;'='
   386  00FF72  20                 	db	32
   387  00FF73  56                 	db	86	;'V'
   388  00FF74  45                 	db	69	;'E'
   389  00FF75  48                 	db	72	;'H'
   390  00FF76  49                 	db	73	;'I'
   391  00FF77  43                 	db	67	;'C'
   392  00FF78  4C                 	db	76	;'L'
   393  00FF79  45                 	db	69	;'E'
   394  00FF7A  20                 	db	32
   395  00FF7B  44                 	db	68	;'D'
   396  00FF7C  41                 	db	65	;'A'
   397  00FF7D  54                 	db	84	;'T'
   398  00FF7E  41                 	db	65	;'A'
   399  00FF7F  20                 	db	32
   400  00FF80  3D                 	db	61	;'='
   401  00FF81  3D                 	db	61	;'='
   402  00FF82  3D                 	db	61	;'='
   403  00FF83  00                 	db	0
   404  00FF84                     STR_1:
   405  00FF84  3D                 	db	61	;'='
   406  00FF85  3D                 	db	61	;'='
   407  00FF86  3D                 	db	61	;'='
   408  00FF87  3D                 	db	61	;'='
   409  00FF88  3D                 	db	61	;'='
   410  00FF89  3D                 	db	61	;'='
   411  00FF8A  3D                 	db	61	;'='
   412  00FF8B  3D                 	db	61	;'='
   413  00FF8C  3D                 	db	61	;'='
   414  00FF8D  3D                 	db	61	;'='
   415  00FF8E  3D                 	db	61	;'='
   416  00FF8F  3D                 	db	61	;'='
   417  00FF90  3D                 	db	61	;'='
   418  00FF91  3D                 	db	61	;'='
   419  00FF92  3D                 	db	61	;'='
   420  00FF93  3D                 	db	61	;'='
   421  00FF94  3D                 	db	61	;'='
   422  00FF95  3D                 	db	61	;'='
   423  00FF96  3D                 	db	61	;'='
   424  00FF97  3D                 	db	61	;'='
   425  00FF98  00                 	db	0
   426  00FF99                     STR_8:
   427  00FF99  53                 	db	83	;'S'
   428  00FF9A  70                 	db	112	;'p'
   429  00FF9B  65                 	db	101	;'e'
   430  00FF9C  65                 	db	101	;'e'
   431  00FF9D  64                 	db	100	;'d'
   432  00FF9E  3A                 	db	58	;':'
   433  00FF9F  20                 	db	32
   434  00FFA0  30                 	db	48	;'0'
   435  00FFA1  2E                 	db	46
   436  00FFA2  30                 	db	48	;'0'
   437  00FFA3  30                 	db	48	;'0'
   438  00FFA4  20                 	db	32
   439  00FFA5  4B                 	db	75	;'K'
   440  00FFA6  6D                 	db	109	;'m'
   441  00FFA7  2F                 	db	47
   442  00FFA8  68                 	db	104	;'h'
   443  00FFA9  00                 	db	0
   444  00FFAA                     STR_9:
   445  00FFAA  50                 	db	80	;'P'
   446  00FFAB  61                 	db	97	;'a'
   447  00FFAC  72                 	db	114	;'r'
   448  00FFAD  6B                 	db	107	;'k'
   449  00FFAE  20                 	db	32
   450  00FFAF  61                 	db	97	;'a'
   451  00FFB0  73                 	db	115	;'s'
   452  00FFB1  73                 	db	115	;'s'
   453  00FFB2  69                 	db	105	;'i'
   454  00FFB3  73                 	db	115	;'s'
   455  00FFB4  74                 	db	116	;'t'
   456  00FFB5  3A                 	db	58	;':'
   457  00FFB6  20                 	db	32
   458  00FFB7  00                 	db	0
   459  00FFB8                     STR_7:
   460  00FFB8  44                 	db	68	;'D'
   461  00FFB9  69                 	db	105	;'i'
   462  00FFBA  72                 	db	114	;'r'
   463  00FFBB  65                 	db	101	;'e'
   464  00FFBC  63                 	db	99	;'c'
   465  00FFBD  74                 	db	116	;'t'
   466  00FFBE  69                 	db	105	;'i'
   467  00FFBF  6F                 	db	111	;'o'
   468  00FFC0  6E                 	db	110	;'n'
   469  00FFC1  3A                 	db	58	;':'
   470  00FFC2  20                 	db	32
   471  00FFC3  00                 	db	0
   472  00FFC4                     STR_14:
   473  00FFC4  4F                 	db	79	;'O'
   474  00FFC5  46                 	db	70	;'F'
   475  00FFC6  46                 	db	70	;'F'
   476  00FFC7  20                 	db	32
   477  00FFC8  20                 	db	32
   478  00FFC9  20                 	db	32
   479  00FFCA  20                 	db	32
   480  00FFCB  00                 	db	0
   481  00FFCC                     STR_16:
   482  00FFCC  46                 	db	70	;'F'
   483  00FFCD  4F                 	db	79	;'O'
   484  00FFCE  55                 	db	85	;'U'
   485  00FFCF  4E                 	db	78	;'N'
   486  00FFD0  44                 	db	68	;'D'
   487  00FFD1  21                 	db	33
   488  00FFD2  20                 	db	32
   489  00FFD3  00                 	db	0
   490  00FFD4                     STR_15:
   491  00FFD4  53                 	db	83	;'S'
   492  00FFD5  45                 	db	69	;'E'
   493  00FFD6  41                 	db	65	;'A'
   494  00FFD7  52                 	db	82	;'R'
   495  00FFD8  43                 	db	67	;'C'
   496  00FFD9  48                 	db	72	;'H'
   497  00FFDA  20                 	db	32
   498  00FFDB  00                 	db	0
   499  00FFDC                     STR_17:
   500  00FFDC  50                 	db	80	;'P'
   501  00FFDD  41                 	db	65	;'A'
   502  00FFDE  52                 	db	82	;'R'
   503  00FFDF  4B                 	db	75	;'K'
   504  00FFE0  49                 	db	73	;'I'
   505  00FFE1  4E                 	db	78	;'N'
   506  00FFE2  47                 	db	71	;'G'
   507  00FFE3  00                 	db	0
   508  00FFE4                     STR_10:
   509  00FFE4  44                 	db	68	;'D'
   510  00FFE5  61                 	db	97	;'a'
   511  00FFE6  74                 	db	116	;'t'
   512  00FFE7  61                 	db	97	;'a'
   513  00FFE8  3A                 	db	58	;':'
   514  00FFE9  20                 	db	32
   515  00FFEA  00                 	db	0
   516  00FFEB                     STR_13:
   517  00FFEB  50                 	db	80	;'P'
   518  00FFEC  20                 	db	32
   519  00FFED  20                 	db	32
   520  00FFEE  20                 	db	32
   521  00FFEF  00                 	db	0
   522  00FFF0                     STR_11:
   523  00FFF0  46                 	db	70	;'F'
   524  00FFF1  57                 	db	87	;'W'
   525  00FFF2  44                 	db	68	;'D'
   526  00FFF3  20                 	db	32
   527  00FFF4  00                 	db	0
   528  00FFF5                     STR_12:
   529  00FFF5  42                 	db	66	;'B'
   530  00FFF6  4B                 	db	75	;'K'
   531  00FFF7  57                 	db	87	;'W'
   532  00FFF8  44                 	db	68	;'D'
   533  00FFF9  00                 	db	0
   534  00FFFA                     STR_5:
   535  00FFFA  25                 	db	37
   536  00FFFB  2E                 	db	46
   537  00FFFC  32                 	db	50	;'2'
   538  00FFFD  66                 	db	102	;'f'
   539  00FFFE  00                 	db	0
   540  0000                     
   541                           ; #config settings
   542  00FFFF  00                 	db	0	; dummy byte at the end
   543  0000                     
   544                           	psect	cinit
   545  015EC0                     __pcinit:
   546                           	opt stack 0
   547  015EC0                     start_initialization:
   548                           	opt stack 0
   549  015EC0                     __initialization:
   550                           	opt stack 0
   551                           
   552                           ; Clear objects allocated to BANK1 (35 bytes)
   553  015EC0  EE01  F029         	lfsr	0,__pbssBANK1
   554  015EC4  0E23               	movlw	35
   555  015EC6                     clear_0:
   556  015EC6  6AEE               	clrf	postinc0,c
   557  015EC8  06E8               	decf	wreg,f,c
   558  015ECA  E1FD               	bnz	clear_0
   559                           
   560                           ; Clear objects allocated to BANK0 (34 bytes)
   561  015ECC  EE00  F0C6         	lfsr	0,__pbssBANK0
   562  015ED0  0E22               	movlw	34
   563  015ED2                     clear_1:
   564  015ED2  6AEE               	clrf	postinc0,c
   565  015ED4  06E8               	decf	wreg,f,c
   566  015ED6  E1FD               	bnz	clear_1
   567                           
   568                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   569  015ED8  6A4C               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   570  015EDA  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   571                           
   572                           ; Clear objects allocated to COMRAM (44 bytes)
   573  015EDC  EE00  F001         	lfsr	0,__pbssCOMRAM
   574  015EE0  0E2C               	movlw	44
   575  015EE2                     clear_2:
   576  015EE2  6AEE               	clrf	postinc0,c
   577  015EE4  06E8               	decf	wreg,f,c
   578  015EE6  E1FD               	bnz	clear_2
   579                           
   580                           ; Initialize objects allocated to BANK0 (1 bytes)
   581                           ; load TBLPTR registers with __pidataBANK0
   582  015EE8  0ED8               	movlw	low __pidataBANK0
   583  015EEA  6EF6               	movwf	tblptrl,c
   584  015EEC  0E61               	movlw	high __pidataBANK0
   585  015EEE  6EF7               	movwf	tblptrh,c
   586  015EF0  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   587  015EF2  6EF8               	movwf	tblptru,c
   588  015EF4  0009               	tblrd		*+	;fetch initializer
   589  015EF6  CFF5 F0E8          	movff	tablat,__pdataBANK0
   590  015EFA                     end_of_initialization:
   591                           	opt stack 0
   592  015EFA                     __end_of__initialization:
   593                           	opt stack 0
   594  015EFA  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   595  015EFC  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   596  015EFE  0100               	movlb	0
   597  015F00  EF02  F091         	goto	_main	;jump to C main() function
   598                           tblptru	equ	0xFF8
   599                           tblptrh	equ	0xFF7
   600                           tblptrl	equ	0xFF6
   601                           tablat	equ	0xFF5
   602                           postinc0	equ	0xFEE
   603                           wreg	equ	0xFE8
   604                           
   605                           	psect	bitbssCOMRAM
   606  000258                     __pbitbssCOMRAM:
   607                           	opt stack 0
   608  000258                     _AbsFlag:
   609                           	opt stack 0
   610  000258                     	ds	1
   611  000259                     _F1_switch:
   612                           	opt stack 0
   613  000259                     	ds	1
   614  00025A                     _F2_switch:
   615                           	opt stack 0
   616  00025A                     	ds	1
   617  00025B                     _MotoreFlag:
   618                           	opt stack 0
   619  00025B                     	ds	1
   620  00025C                     _RTR_Flag:
   621                           	opt stack 0
   622  00025C                     	ds	1
   623  00025D                     _SterzoFlag:
   624                           	opt stack 0
   625  00025D                     	ds	1
   626  00025E                     _display_refresh:
   627                           	opt stack 0
   628  00025E                     	ds	1
   629  00025F                     _newMessageCan:
   630                           	opt stack 0
   631  00025F                     	ds	1
   632  000260                     _power_switch:
   633                           	opt stack 0
   634  000260                     	ds	1
   635  000261                     _space_available:
   636                           	opt stack 0
   637  000261                     	ds	1
   638  000262                     _wait_low_1:
   639                           	opt stack 0
   640  000262                     	ds	1
   641  000263                     _wait_low_2:
   642                           	opt stack 0
   643  000263                     	ds	1
   644  000264                     _wait_low_3:
   645                           	opt stack 0
   646  000264                     	ds	1
   647  000265                     _y:
   648                           	opt stack 0
   649  000265                     	ds	1
   650                           tblptru	equ	0xFF8
   651                           tblptrh	equ	0xFF7
   652                           tblptrl	equ	0xFF6
   653                           tablat	equ	0xFF5
   654                           postinc0	equ	0xFEE
   655                           wreg	equ	0xFE8
   656                           
   657                           	psect	bssCOMRAM
   658  000001                     __pbssCOMRAM:
   659                           	opt stack 0
   660  000001                     _data_speed_rx:
   661                           	opt stack 0
   662  000001                     	ds	7
   663  000008                     LCD_write_integer@F17272:
   664                           	opt stack 0
   665  000008                     	ds	6
   666  00000E                     _actual_speed_kmh:
   667                           	opt stack 0
   668  00000E                     	ds	4
   669  000012                     _id:
   670                           	opt stack 0
   671  000012                     	ds	4
   672  000016                     _pr_time_3:
   673                           	opt stack 0
   674  000016                     	ds	4
   675  00001A                     _pr_time_4:
   676                           	opt stack 0
   677  00001A                     	ds	4
   678  00001E                     _pr_time_5:
   679                           	opt stack 0
   680  00001E                     	ds	4
   681  000022                     _time_counter:
   682                           	opt stack 0
   683  000022                     	ds	4
   684  000026                     _left_speed:
   685                           	opt stack 0
   686  000026                     	ds	2
   687  000028                     _right_speed:
   688                           	opt stack 0
   689  000028                     	ds	2
   690  00002A                     _battery:
   691                           	opt stack 0
   692  00002A                     	ds	1
   693  00002B                     _set_steering:
   694                           	opt stack 0
   695  00002B                     	ds	1
   696  00002C                     _data:
   697                           	opt stack 0
   698  00002C                     	ds	1
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           tblptrl	equ	0xFF6
   702                           tablat	equ	0xFF5
   703                           postinc0	equ	0xFEE
   704                           wreg	equ	0xFE8
   705                           
   706                           	psect	bssBANK0
   707  0000C6                     __pbssBANK0:
   708                           	opt stack 0
   709  0000C6                     _JoystickConstants:
   710                           	opt stack 0
   711  0000C6                     	ds	8
   712  0000CE                     _pr_time_1:
   713                           	opt stack 0
   714  0000CE                     	ds	4
   715  0000D2                     _pr_time_2:
   716                           	opt stack 0
   717  0000D2                     	ds	4
   718  0000D6                     _JoystickValues:
   719                           	opt stack 0
   720  0000D6                     	ds	2
   721  0000D8                     _actual_speed:
   722                           	opt stack 0
   723  0000D8                     	ds	2
   724  0000DA                     _clock_counter_reference:
   725                           	opt stack 0
   726  0000DA                     	ds	2
   727  0000DC                     _set_speed:
   728                           	opt stack 0
   729  0000DC                     	ds	2
   730  0000DE                     _user_data:
   731                           	opt stack 0
   732  0000DE                     	ds	2
   733  0000E0                     _dir:
   734                           	opt stack 0
   735  0000E0                     	ds	1
   736  0000E1                     _parking_state:
   737                           	opt stack 0
   738  0000E1                     	ds	1
   739  0000E2                     _switch_position:
   740                           	opt stack 0
   741  0000E2                     	ds	1
   742  0000E3                     _x:
   743                           	opt stack 0
   744  0000E3                     	ds	1
   745  0000E4                     _z:
   746                           	opt stack 0
   747  0000E4                     	ds	1
   748  0000E5                     _data_brake:
   749                           	opt stack 0
   750  0000E5                     	ds	1
   751  0000E6                     _data_speed:
   752                           	opt stack 0
   753  0000E6                     	ds	1
   754  0000E7                     _data_steering:
   755                           	opt stack 0
   756  0000E7                     	ds	1
   757                           tblptru	equ	0xFF8
   758                           tblptrh	equ	0xFF7
   759                           tblptrl	equ	0xFF6
   760                           tablat	equ	0xFF5
   761                           postinc0	equ	0xFEE
   762                           wreg	equ	0xFE8
   763                           
   764                           	psect	dataBANK0
   765  0000E8                     __pdataBANK0:
   766                           	opt stack 0
   767  0000E8                     _delay_quartz_frequency_value:
   768                           	opt stack 0
   769  0000E8                     	ds	1
   770                           tblptru	equ	0xFF8
   771                           tblptrh	equ	0xFF7
   772                           tblptrl	equ	0xFF6
   773                           tablat	equ	0xFF5
   774                           postinc0	equ	0xFEE
   775                           wreg	equ	0xFE8
   776                           
   777                           	psect	bssBANK1
   778  000129                     __pbssBANK1:
   779                           	opt stack 0
   780  000129                     _msg:
   781                           	opt stack 0
   782  000129                     	ds	15
   783  000138                     _str:
   784                           	opt stack 0
   785  000138                     	ds	12
   786  000144                     _park_assist_state:
   787                           	opt stack 0
   788  000144                     	ds	8
   789                           tblptru	equ	0xFF8
   790                           tblptrh	equ	0xFF7
   791                           tblptrl	equ	0xFF6
   792                           tablat	equ	0xFF5
   793                           postinc0	equ	0xFEE
   794                           wreg	equ	0xFE8
   795                           
   796                           	psect	cstackBANK1
   797  000100                     __pcstackBANK1:
   798                           	opt stack 0
   799  000100                     ?_sprintf:
   800                           	opt stack 0
   801  000100                     sprintf@sp:
   802                           	opt stack 0
   803                           
   804                           ; 2 bytes @ 0x0
   805  000100                     	ds	2
   806  000102                     sprintf@f:
   807                           	opt stack 0
   808                           
   809                           ; 2 bytes @ 0x2
   810  000102                     	ds	6
   811  000108                     _sprintf$4215:
   812                           	opt stack 0
   813                           
   814                           ; 4 bytes @ 0x8
   815  000108                     	ds	4
   816  00010C                     sprintf@ap:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0xC
   820  00010C                     	ds	2
   821  00010E                     sprintf@flag:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0xE
   825  00010E                     	ds	2
   826  000110                     sprintf@val:
   827                           	opt stack 0
   828                           
   829                           ; 4 bytes @ 0x10
   830  000110                     	ds	4
   831  000114                     sprintf@exp:
   832                           	opt stack 0
   833                           
   834                           ; 2 bytes @ 0x14
   835  000114                     	ds	2
   836  000116                     sprintf@tmpval:
   837                           	opt stack 0
   838                           
   839                           ; 4 bytes @ 0x16
   840  000116                     	ds	4
   841  00011A                     sprintf@prec:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0x1A
   845  00011A                     	ds	2
   846  00011C                     sprintf@fval:
   847                           	opt stack 0
   848                           
   849                           ; 4 bytes @ 0x1C
   850  00011C                     	ds	4
   851  000120                     sprintf@c:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x20
   855  000120                     	ds	1
   856  000121                     ??_main:
   857                           
   858                           ; 0 bytes @ 0x21
   859  000121                     	ds	8
   860                           tblptru	equ	0xFF8
   861                           tblptrh	equ	0xFF7
   862                           tblptrl	equ	0xFF6
   863                           tablat	equ	0xFF5
   864                           postinc0	equ	0xFEE
   865                           wreg	equ	0xFE8
   866                           
   867                           	psect	cstackBANK0
   868  000060                     __pcstackBANK0:
   869                           	opt stack 0
   870  000060                     i2CANsendMessage@tamp:
   871                           	opt stack 0
   872                           
   873                           ; 4 bytes @ 0x0
   874  000060                     	ds	4
   875  000064                     ??_ISR_alta:
   876                           
   877                           ; 0 bytes @ 0x4
   878  000064                     	ds	14
   879  000072                     ??_Joystick_Polling:
   880  000072                     ??_CAN_interpreter:
   881  000072                     ??_isdigit:
   882  000072                     ?___wmul:
   883                           	opt stack 0
   884  000072                     ?___awmod:
   885                           	opt stack 0
   886  000072                     ?___lwdiv:
   887                           	opt stack 0
   888  000072                     ?___lwmod:
   889                           	opt stack 0
   890  000072                     ?__tdiv_to_l_:
   891                           	opt stack 0
   892  000072                     ?__div_to_l_:
   893                           	opt stack 0
   894  000072                     ?___lldiv:
   895                           	opt stack 0
   896  000072                     ?___llmod:
   897                           	opt stack 0
   898  000072                     ?___xxtofl:
   899                           	opt stack 0
   900  000072                     CANOperationMode@mode:
   901                           	opt stack 0
   902  000072                     _CANisTxReady$3235:
   903                           	opt stack 0
   904  000072                     delay_set_quartz@frequency:
   905                           	opt stack 0
   906  000072                     ___wmul@multiplier:
   907                           	opt stack 0
   908  000072                     ___awmod@dividend:
   909                           	opt stack 0
   910  000072                     ___lwdiv@dividend:
   911                           	opt stack 0
   912  000072                     ___lwmod@dividend:
   913                           	opt stack 0
   914  000072                     CANsendMessage@identifier:
   915                           	opt stack 0
   916  000072                     CANSetMask@mask:
   917                           	opt stack 0
   918  000072                     CANSetFilter@filter:
   919                           	opt stack 0
   920  000072                     __div_to_l_@f1:
   921                           	opt stack 0
   922  000072                     ___flge@ff1:
   923                           	opt stack 0
   924  000072                     __tdiv_to_l_@f1:
   925                           	opt stack 0
   926  000072                     ___lldiv@dividend:
   927                           	opt stack 0
   928  000072                     ___llmod@dividend:
   929                           	opt stack 0
   930  000072                     ___xxtofl@val:
   931                           	opt stack 0
   932                           
   933                           ; 4 bytes @ 0x12
   934  000072                     	ds	1
   935  000073                     Joystick_Polling@i:
   936                           	opt stack 0
   937  000073                     _isdigit$3798:
   938                           	opt stack 0
   939                           
   940                           ; 1 bytes @ 0x13
   941  000073                     	ds	1
   942  000074                     isdigit@c:
   943                           	opt stack 0
   944  000074                     ___wmul@multiplicand:
   945                           	opt stack 0
   946  000074                     ___awmod@divisor:
   947                           	opt stack 0
   948  000074                     ___lwdiv@divisor:
   949                           	opt stack 0
   950  000074                     ___lwmod@divisor:
   951                           	opt stack 0
   952                           
   953                           ; 2 bytes @ 0x14
   954  000074                     	ds	2
   955  000076                     ??___xxtofl:
   956  000076                     CANSetMask@type:
   957                           	opt stack 0
   958  000076                     CANSetFilter@type:
   959                           	opt stack 0
   960  000076                     ___awmod@counter:
   961                           	opt stack 0
   962  000076                     ___lwmod@counter:
   963                           	opt stack 0
   964  000076                     CANsendMessage@data:
   965                           	opt stack 0
   966  000076                     ___wmul@product:
   967                           	opt stack 0
   968  000076                     ___lwdiv@quotient:
   969                           	opt stack 0
   970  000076                     __div_to_l_@f2:
   971                           	opt stack 0
   972  000076                     ___flge@ff2:
   973                           	opt stack 0
   974  000076                     __tdiv_to_l_@f2:
   975                           	opt stack 0
   976  000076                     ___lldiv@divisor:
   977                           	opt stack 0
   978  000076                     ___llmod@divisor:
   979                           	opt stack 0
   980                           
   981                           ; 4 bytes @ 0x16
   982  000076                     	ds	1
   983  000077                     ??_CANSetMask:
   984  000077                     ??_CANSetFilter:
   985  000077                     ___awmod@sign:
   986                           	opt stack 0
   987                           
   988                           ; 1 bytes @ 0x17
   989  000077                     	ds	1
   990  000078                     ?___awdiv:
   991                           	opt stack 0
   992  000078                     CANsendMessage@dataLength:
   993                           	opt stack 0
   994  000078                     ___lwdiv@counter:
   995                           	opt stack 0
   996  000078                     delay_ms@value_ms:
   997                           	opt stack 0
   998  000078                     ___awdiv@dividend:
   999                           	opt stack 0
  1000                           
  1001                           ; 2 bytes @ 0x18
  1002  000078                     	ds	1
  1003  000079                     CANsendMessage@flags:
  1004                           	opt stack 0
  1005  000079                     utoa@buf:
  1006                           	opt stack 0
  1007                           
  1008                           ; 2 bytes @ 0x19
  1009  000079                     	ds	1
  1010  00007A                     ??__tdiv_to_l_:
  1011  00007A                     ??_CANsendMessage:
  1012  00007A                     ??___flge:
  1013  00007A                     LCD_send_command@D2:
  1014                           	opt stack 0
  1015  00007A                     ___llmod@counter:
  1016                           	opt stack 0
  1017  00007A                     ___xxtofl@sign:
  1018                           	opt stack 0
  1019  00007A                     ___awdiv@divisor:
  1020                           	opt stack 0
  1021  00007A                     __div_to_l_@quot:
  1022                           	opt stack 0
  1023  00007A                     ___lldiv@quotient:
  1024                           	opt stack 0
  1025                           
  1026                           ; 4 bytes @ 0x1A
  1027  00007A                     	ds	1
  1028  00007B                     CANSetMask@numBuffer:
  1029                           	opt stack 0
  1030  00007B                     CANSetFilter@numBuffer:
  1031                           	opt stack 0
  1032  00007B                     LCD_send_command@D1:
  1033                           	opt stack 0
  1034  00007B                     ___xxtofl@exp:
  1035                           	opt stack 0
  1036  00007B                     utoa@val:
  1037                           	opt stack 0
  1038                           
  1039                           ; 2 bytes @ 0x1B
  1040  00007B                     	ds	1
  1041  00007C                     LCD_send_command@D0:
  1042                           	opt stack 0
  1043  00007C                     ___awdiv@counter:
  1044                           	opt stack 0
  1045  00007C                     CANSetMask@tamp:
  1046                           	opt stack 0
  1047  00007C                     CANSetFilter@tamp:
  1048                           	opt stack 0
  1049  00007C                     ___xxtofl@arg:
  1050                           	opt stack 0
  1051                           
  1052                           ; 4 bytes @ 0x1C
  1053  00007C                     	ds	1
  1054  00007D                     LCD_send_command@D3:
  1055                           	opt stack 0
  1056  00007D                     ___awdiv@sign:
  1057                           	opt stack 0
  1058  00007D                     utoa@base:
  1059                           	opt stack 0
  1060  00007D                     __tdiv_to_l_@quot:
  1061                           	opt stack 0
  1062                           
  1063                           ; 4 bytes @ 0x1D
  1064  00007D                     	ds	1
  1065  00007E                     LCD_shift_cursor@number_of_shift:
  1066                           	opt stack 0
  1067  00007E                     LCD_goto_line@line:
  1068                           	opt stack 0
  1069  00007E                     LCD_write_char@D3:
  1070                           	opt stack 0
  1071  00007E                     LCD_cursor@blinking:
  1072                           	opt stack 0
  1073  00007E                     __div_to_l_@cntr:
  1074                           	opt stack 0
  1075  00007E                     ___lldiv@counter:
  1076                           	opt stack 0
  1077  00007E                     ___awdiv@quotient:
  1078                           	opt stack 0
  1079  00007E                     CANsendMessage@tamp:
  1080                           	opt stack 0
  1081                           
  1082                           ; 4 bytes @ 0x1E
  1083  00007E                     	ds	1
  1084  00007F                     LCD_shift_cursor@shift:
  1085                           	opt stack 0
  1086  00007F                     LCD_write_char@D2:
  1087                           	opt stack 0
  1088  00007F                     LCD_cursor@active:
  1089                           	opt stack 0
  1090  00007F                     __div_to_l_@exp1:
  1091                           	opt stack 0
  1092  00007F                     utoa@v:
  1093                           	opt stack 0
  1094                           
  1095                           ; 2 bytes @ 0x1F
  1096  00007F                     	ds	1
  1097  000080                     ?___fldiv:
  1098                           	opt stack 0
  1099  000080                     ?___flmul:
  1100                           	opt stack 0
  1101  000080                     CANInitialize@phaseSeg1:
  1102                           	opt stack 0
  1103  000080                     LCD_shift_cursor@i:
  1104                           	opt stack 0
  1105  000080                     LCD_write_char@D1:
  1106                           	opt stack 0
  1107  000080                     LCD_initialize@quartz_frequency:
  1108                           	opt stack 0
  1109  000080                     ___fldiv@b:
  1110                           	opt stack 0
  1111  000080                     ___flmul@b:
  1112                           	opt stack 0
  1113                           
  1114                           ; 4 bytes @ 0x20
  1115  000080                     	ds	1
  1116  000081                     CANInitialize@phaseSeg2:
  1117                           	opt stack 0
  1118  000081                     LCD_goto_xy@y:
  1119                           	opt stack 0
  1120  000081                     LCD_write_char@D0:
  1121                           	opt stack 0
  1122  000081                     __tdiv_to_l_@cntr:
  1123                           	opt stack 0
  1124  000081                     utoa@c:
  1125                           	opt stack 0
  1126                           
  1127                           ; 1 bytes @ 0x21
  1128  000081                     	ds	1
  1129  000082                     CANInitialize@SJW:
  1130                           	opt stack 0
  1131  000082                     LCD_goto_xy@x:
  1132                           	opt stack 0
  1133  000082                     LCD_write_char@value:
  1134                           	opt stack 0
  1135  000082                     __tdiv_to_l_@exp1:
  1136                           	opt stack 0
  1137  000082                     itoa@buf:
  1138                           	opt stack 0
  1139                           
  1140                           ; 2 bytes @ 0x22
  1141  000082                     	ds	1
  1142  000083                     CANInitialize@BRP:
  1143                           	opt stack 0
  1144  000083                     LCD_write_message@buffer:
  1145                           	opt stack 0
  1146  000083                     LCD_write_string@buffer:
  1147                           	opt stack 0
  1148                           
  1149                           ; 2 bytes @ 0x23
  1150  000083                     	ds	1
  1151  000084                     CANInitialize@flags:
  1152                           	opt stack 0
  1153  000084                     itoa@val:
  1154                           	opt stack 0
  1155  000084                     ___fldiv@a:
  1156                           	opt stack 0
  1157  000084                     ___flmul@a:
  1158                           	opt stack 0
  1159                           
  1160                           ; 4 bytes @ 0x24
  1161  000084                     	ds	1
  1162  000085                     ??_CANInitialize:
  1163  000085                     
  1164                           ; 0 bytes @ 0x25
  1165  000085                     	ds	1
  1166  000086                     itoa@base:
  1167                           	opt stack 0
  1168                           
  1169                           ; 2 bytes @ 0x26
  1170  000086                     	ds	2
  1171  000088                     ??___fldiv:
  1172  000088                     ??___flmul:
  1173  000088                     itoa@cp:
  1174                           	opt stack 0
  1175                           
  1176                           ; 2 bytes @ 0x28
  1177  000088                     	ds	1
  1178  000089                     CANInitialize@propSeg:
  1179                           	opt stack 0
  1180                           
  1181                           ; 1 bytes @ 0x29
  1182  000089                     	ds	1
  1183  00008A                     CANInitialize@FilterConfig1:
  1184                           	opt stack 0
  1185  00008A                     LCD_write_integer@value:
  1186                           	opt stack 0
  1187                           
  1188                           ; 2 bytes @ 0x2A
  1189  00008A                     	ds	1
  1190  00008B                     CANInitialize@FilterConfig2:
  1191                           	opt stack 0
  1192                           
  1193                           ; 1 bytes @ 0x2B
  1194  00008B                     	ds	1
  1195  00008C                     LCD_write_integer@number_of_digits:
  1196                           	opt stack 0
  1197  00008C                     ___fldiv@sign:
  1198                           	opt stack 0
  1199  00008C                     ___flmul@sign:
  1200                           	opt stack 0
  1201                           
  1202                           ; 1 bytes @ 0x2C
  1203  00008C                     	ds	1
  1204  00008D                     LCD_write_integer@zero_cleaning:
  1205                           	opt stack 0
  1206  00008D                     ___flmul@aexp:
  1207                           	opt stack 0
  1208  00008D                     ___fldiv@rem:
  1209                           	opt stack 0
  1210                           
  1211                           ; 4 bytes @ 0x2D
  1212  00008D                     	ds	1
  1213  00008E                     ??_LCD_write_integer:
  1214  00008E                     ___flmul@grs:
  1215                           	opt stack 0
  1216                           
  1217                           ; 4 bytes @ 0x2E
  1218  00008E                     	ds	3
  1219  000091                     ___fldiv@new_exp:
  1220                           	opt stack 0
  1221                           
  1222                           ; 2 bytes @ 0x31
  1223  000091                     	ds	1
  1224  000092                     ___flmul@bexp:
  1225                           	opt stack 0
  1226                           
  1227                           ; 1 bytes @ 0x32
  1228  000092                     	ds	1
  1229  000093                     ___fldiv@grs:
  1230                           	opt stack 0
  1231  000093                     ___flmul@prod:
  1232                           	opt stack 0
  1233  000093                     LCD_write_integer@convertedInt:
  1234                           	opt stack 0
  1235                           
  1236                           ; 6 bytes @ 0x33
  1237  000093                     	ds	4
  1238  000097                     ___fldiv@bexp:
  1239                           	opt stack 0
  1240  000097                     ___flmul@temp:
  1241                           	opt stack 0
  1242                           
  1243                           ; 2 bytes @ 0x37
  1244  000097                     	ds	1
  1245  000098                     ___fldiv@aexp:
  1246                           	opt stack 0
  1247                           
  1248                           ; 1 bytes @ 0x38
  1249  000098                     	ds	1
  1250  000099                     ?_fround:
  1251                           	opt stack 0
  1252  000099                     ?_scale:
  1253                           	opt stack 0
  1254  000099                     ?___flneg:
  1255                           	opt stack 0
  1256  000099                     LCD_write_integer@index:
  1257                           	opt stack 0
  1258  000099                     ___flneg@f1:
  1259                           	opt stack 0
  1260                           
  1261                           ; 4 bytes @ 0x39
  1262  000099                     	ds	4
  1263  00009D                     _fround$4213:
  1264                           	opt stack 0
  1265  00009D                     _scale$4214:
  1266                           	opt stack 0
  1267                           
  1268                           ; 4 bytes @ 0x3D
  1269  00009D                     	ds	4
  1270  0000A1                     scale@scl:
  1271                           	opt stack 0
  1272  0000A1                     _fround$4212:
  1273                           	opt stack 0
  1274                           
  1275                           ; 4 bytes @ 0x41
  1276  0000A1                     	ds	4
  1277  0000A5                     fround@prec:
  1278                           	opt stack 0
  1279                           
  1280                           ; 1 bytes @ 0x45
  1281  0000A5                     	ds	1
  1282  0000A6                     ?___fladd:
  1283                           	opt stack 0
  1284  0000A6                     ___fladd@b:
  1285                           	opt stack 0
  1286                           
  1287                           ; 4 bytes @ 0x46
  1288  0000A6                     	ds	4
  1289  0000AA                     ___fladd@a:
  1290                           	opt stack 0
  1291                           
  1292                           ; 4 bytes @ 0x4A
  1293  0000AA                     	ds	4
  1294  0000AE                     ??___fladd:
  1295                           
  1296                           ; 0 bytes @ 0x4E
  1297  0000AE                     	ds	8
  1298  0000B6                     ___fladd@signs:
  1299                           	opt stack 0
  1300                           
  1301                           ; 1 bytes @ 0x56
  1302  0000B6                     	ds	1
  1303  0000B7                     ___fladd@aexp:
  1304                           	opt stack 0
  1305                           
  1306                           ; 1 bytes @ 0x57
  1307  0000B7                     	ds	1
  1308  0000B8                     ___fladd@bexp:
  1309                           	opt stack 0
  1310                           
  1311                           ; 1 bytes @ 0x58
  1312  0000B8                     	ds	1
  1313  0000B9                     ___fladd@grs:
  1314                           	opt stack 0
  1315                           
  1316                           ; 1 bytes @ 0x59
  1317  0000B9                     	ds	1
  1318  0000BA                     ?___flsub:
  1319                           	opt stack 0
  1320  0000BA                     ?___fltol:
  1321                           	opt stack 0
  1322  0000BA                     ___fltol@f1:
  1323                           	opt stack 0
  1324  0000BA                     ___flsub@b:
  1325                           	opt stack 0
  1326                           
  1327                           ; 4 bytes @ 0x5A
  1328  0000BA                     	ds	4
  1329  0000BE                     ??___fltol:
  1330  0000BE                     ___flsub@a:
  1331                           	opt stack 0
  1332                           
  1333                           ; 4 bytes @ 0x5E
  1334  0000BE                     	ds	4
  1335  0000C2                     ___fltol@sign1:
  1336                           	opt stack 0
  1337                           
  1338                           ; 1 bytes @ 0x62
  1339  0000C2                     	ds	1
  1340  0000C3                     ___fltol@exp1:
  1341                           	opt stack 0
  1342                           
  1343                           ; 1 bytes @ 0x63
  1344  0000C3                     	ds	1
  1345  0000C4                     ??_sprintf:
  1346                           
  1347                           ; 0 bytes @ 0x64
  1348  0000C4                     	ds	2
  1349  0000C6                     tblptru	equ	0xFF8
  1350                           tblptrh	equ	0xFF7
  1351                           tblptrl	equ	0xFF6
  1352                           tablat	equ	0xFF5
  1353                           postinc0	equ	0xFEE
  1354                           wreg	equ	0xFE8
  1355                           
  1356                           ; 0 bytes @ 0x66
  1357                           
  1358                           	psect	cstackCOMRAM
  1359  00002D                     __pcstackCOMRAM:
  1360                           	opt stack 0
  1361  00002D                     ??_ISR_bassa:
  1362  00002D                     
  1363                           ; 1 bytes @ 0x0
  1364  00002D                     	ds	17
  1365  00003E                     _CANisRxReady$3237:
  1366                           	opt stack 0
  1367  00003E                     i2_CANisTxReady$3235:
  1368                           	opt stack 0
  1369  00003E                     CANreceiveMessage@msg:
  1370                           	opt stack 0
  1371  00003E                     i2CANsendMessage@identifier:
  1372                           	opt stack 0
  1373                           
  1374                           ; 4 bytes @ 0x11
  1375  00003E                     	ds	2
  1376  000040                     ??_CANreceiveMessage:
  1377                           
  1378                           ; 0 bytes @ 0x13
  1379  000040                     	ds	2
  1380  000042                     i2CANsendMessage@data:
  1381                           	opt stack 0
  1382                           
  1383                           ; 2 bytes @ 0x15
  1384  000042                     	ds	2
  1385  000044                     i2CANsendMessage@dataLength:
  1386                           	opt stack 0
  1387                           
  1388                           ; 1 bytes @ 0x17
  1389  000044                     	ds	1
  1390  000045                     i2CANsendMessage@flags:
  1391                           	opt stack 0
  1392                           
  1393                           ; 1 bytes @ 0x18
  1394  000045                     	ds	1
  1395  000046                     ??i2_CANsendMessage:
  1396                           
  1397                           ; 0 bytes @ 0x19
  1398  000046                     	ds	2
  1399  000048                     CANreceiveMessage@error:
  1400                           	opt stack 0
  1401                           
  1402                           ; 1 bytes @ 0x1B
  1403  000048                     	ds	1
  1404  000049                     CANreceiveMessage@tamp:
  1405                           	opt stack 0
  1406                           
  1407                           ; 1 bytes @ 0x1C
  1408  000049                     	ds	1
  1409  00004A                     ISR_alta@i:
  1410                           	opt stack 0
  1411                           
  1412                           ; 1 bytes @ 0x1D
  1413  00004A                     	ds	1
  1414                           tblptru	equ	0xFF8
  1415                           tblptrh	equ	0xFF7
  1416                           tblptrl	equ	0xFF6
  1417                           tablat	equ	0xFF5
  1418                           postinc0	equ	0xFEE
  1419                           wreg	equ	0xFE8
  1420                           
  1421 ;;
  1422 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1423 ;;
  1424 ;; *************** function _main *****************
  1425 ;; Defined at:
  1426 ;;		line 161 in file "RemoteCan.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;		None               void
  1433 ;; Registers used:
  1434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1442 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1443 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1444 ;;Total ram usage:        8 bytes
  1445 ;; Hardware stack levels required when called:   11
  1446 ;; This function calls:
  1447 ;;		_CAN_Send
  1448 ;;		_CAN_interpreter
  1449 ;;		_CANisTxReady
  1450 ;;		_CANsendMessage
  1451 ;;		_F1_Button_Polling
  1452 ;;		_F2_Button_Polling
  1453 ;;		_Joystick_Polling
  1454 ;;		_LCD_Handler
  1455 ;;		_LCD_goto_line
  1456 ;;		_LCD_initialize
  1457 ;;		_LCD_write_message
  1458 ;;		_PWR_Button_Polling
  1459 ;;		___fladd
  1460 ;;		___flmul
  1461 ;;		___flneg
  1462 ;;		___fltol
  1463 ;;		___xxtofl
  1464 ;;		_board_initialization
  1465 ;;		_delay_ms
  1466 ;; This function is called by:
  1467 ;;		Startup code after reset
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text0
  1472  012204                     __ptext0:
  1473                           	opt stack 0
  1474  012204                     _main:
  1475                           	opt stack 20
  1476                           
  1477                           ;RemoteCan.c: 162: board_initialization();
  1478                           
  1479                           ;incstack = 0
  1480  012204  EC20  F0AD         	call	_board_initialization	;wreg free
  1481                           
  1482                           ;RemoteCan.c: 170: JoystickConstants[0] = 0.703;
  1483  012208  0ECF               	movlw	207
  1484  01220A  0100               	movlb	0	; () banked
  1485  01220C  6FC6               	movwf	_JoystickConstants& (0+255),b	;volatile
  1486  01220E  0EF7               	movlw	247
  1487  012210  6FC7               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1488  012212  0E33               	movlw	51
  1489  012214  6FC8               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1490  012216  0E3F               	movlw	63
  1491  012218  6FC9               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;RemoteCan.c: 171: JoystickConstants[1] = 10;
  1495  01221A  0E00               	movlw	0
  1496  01221C  0100               	movlb	0	; () banked
  1497  01221E  6FCA               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1498  012220  0E00               	movlw	0
  1499  012222  6FCB               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1500  012224  0E20               	movlw	32
  1501  012226  6FCC               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1502  012228  0E41               	movlw	65
  1503  01222A  6FCD               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;RemoteCan.c: 173: display_refresh = 1;
  1507  01222C  8C4B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1508  01222E                     l9133:
  1509                           
  1510                           ;RemoteCan.c: 177: PWR_Button_Polling();
  1511  01222E  EC99  F0B0         	call	_PWR_Button_Polling	;wreg free
  1512                           
  1513                           ;RemoteCan.c: 178: F1_Button_Polling();
  1514  012232  ECC3  F0B0         	call	_F1_Button_Polling	;wreg free
  1515                           
  1516                           ;RemoteCan.c: 179: F2_Button_Polling();
  1517  012236  ECB5  F0B0         	call	_F2_Button_Polling	;wreg free
  1518                           
  1519                           ;RemoteCan.c: 182: if (power_switch == 0) {
  1520  01223A  B04C               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1521  01223C  D09D               	goto	l9179
  1522                           
  1523                           ;RemoteCan.c: 183: dir = 1;
  1524  01223E  0E01               	movlw	1
  1525  012240  0100               	movlb	0	; () banked
  1526  012242  6FE0               	movwf	_dir& (0+255),b	;volatile
  1527                           
  1528                           ;RemoteCan.c: 184: set_speed = 0;
  1529  012244  0E00               	movlw	0
  1530  012246  0100               	movlb	0	; () banked
  1531  012248  6FDD               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1532  01224A  0E00               	movlw	0
  1533  01224C  6FDC               	movwf	_set_speed& (0+255),b	;volatile
  1534                           
  1535                           ;RemoteCan.c: 185: data_steering [0] = 90;
  1536  01224E  0E5A               	movlw	90
  1537  012250  0100               	movlb	0	; () banked
  1538  012252  6FE7               	movwf	_data_steering& (0+255),b
  1539                           
  1540                           ;RemoteCan.c: 186: data_brake [0] = 0;
  1541  012254  0E00               	movlw	0
  1542  012256  0100               	movlb	0	; () banked
  1543  012258  6FE5               	movwf	_data_brake& (0+255),b
  1544                           
  1545                           ;RemoteCan.c: 187: data_brake [1] = 1;
  1546  01225A  0E01               	movlw	1
  1547  01225C  0100               	movlb	0	; () banked
  1548  01225E  6FE6               	movwf	(_data_brake+1)& (0+255),b
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;RemoteCan.c: 188: CAN_Send();
  1552  012260  EC6E  F0AC         	call	_CAN_Send	;wreg free
  1553                           
  1554                           ;RemoteCan.c: 189: LCD_initialize(16);
  1555  012264  0E10               	movlw	16
  1556  012266  EC9F  F0A9         	call	_LCD_initialize
  1557                           
  1558                           ;RemoteCan.c: 190: PORTDbits.RD6 = 0;
  1559  01226A  9C83               	bcf	3971,6,c	;volatile
  1560                           
  1561                           ;RemoteCan.c: 191: PORTDbits.RD5 = 0;
  1562  01226C  9A83               	bcf	3971,5,c	;volatile
  1563                           
  1564                           ;RemoteCan.c: 192: LCD_goto_line(1);
  1565  01226E  0E01               	movlw	1
  1566  012270  ECDC  F0AA         	call	_LCD_goto_line
  1567                           
  1568                           ;RemoteCan.c: 193: LCD_write_message("====================");
  1569  012274  0E84               	movlw	low STR_1
  1570  012276  0100               	movlb	0	; () banked
  1571  012278  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1572  01227A  0EFF               	movlw	high STR_1
  1573  01227C  0100               	movlb	0	; () banked
  1574  01227E  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1575  012280  ECF3  F0AF         	call	_LCD_write_message	;wreg free
  1576                           
  1577                           ;RemoteCan.c: 194: LCD_goto_line(2);
  1578  012284  0E02               	movlw	2
  1579  012286  ECDC  F0AA         	call	_LCD_goto_line
  1580                           
  1581                           ;RemoteCan.c: 195: LCD_write_message("==> VEHICLE  OFF <==");
  1582  01228A  0E5A               	movlw	low STR_2
  1583  01228C  0100               	movlb	0	; () banked
  1584  01228E  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1585  012290  0EFF               	movlw	high STR_2
  1586  012292  0100               	movlb	0	; () banked
  1587  012294  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1588  012296  ECF3  F0AF         	call	_LCD_write_message	;wreg free
  1589                           
  1590                           ;RemoteCan.c: 196: LCD_goto_line(3);
  1591  01229A  0E03               	movlw	3
  1592  01229C  ECDC  F0AA         	call	_LCD_goto_line
  1593                           
  1594                           ;RemoteCan.c: 197: LCD_write_message("  Press the button  ");
  1595  0122A0  0E45               	movlw	low STR_3
  1596  0122A2  0100               	movlb	0	; () banked
  1597  0122A4  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1598  0122A6  0EFF               	movlw	high STR_3
  1599  0122A8  0100               	movlb	0	; () banked
  1600  0122AA  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1601  0122AC  ECF3  F0AF         	call	_LCD_write_message	;wreg free
  1602                           
  1603                           ;RemoteCan.c: 198: LCD_goto_line(4);
  1604  0122B0  0E04               	movlw	4
  1605  0122B2  ECDC  F0AA         	call	_LCD_goto_line
  1606                           
  1607                           ;RemoteCan.c: 199: LCD_write_message("====================");
  1608  0122B6  0E84               	movlw	low STR_1
  1609  0122B8  0100               	movlb	0	; () banked
  1610  0122BA  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1611  0122BC  0EFF               	movlw	high STR_1
  1612  0122BE  0100               	movlb	0	; () banked
  1613  0122C0  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1614  0122C2  ECF3  F0AF         	call	_LCD_write_message	;wreg free
  1615                           
  1616                           ;RemoteCan.c: 200: while (power_switch == 0) {
  1617  0122C6  D054               	goto	l9177
  1618  0122C8                     l9167:
  1619                           
  1620                           ;RemoteCan.c: 201: if ((time_counter - pr_time_1) >= 30) {
  1621  0122C8  C0CE  F121         	movff	_pr_time_1,??_main	;volatile
  1622  0122CC  C0CF  F122         	movff	_pr_time_1+1,??_main+1	;volatile
  1623  0122D0  C0D0  F123         	movff	_pr_time_1+2,??_main+2	;volatile
  1624  0122D4  C0D1  F124         	movff	_pr_time_1+3,??_main+3	;volatile
  1625  0122D8  0101               	movlb	1	; () banked
  1626  0122DA  1F21               	comf	??_main& (0+255),f,b
  1627  0122DC  1F22               	comf	(??_main+1)& (0+255),f,b
  1628  0122DE  1F23               	comf	(??_main+2)& (0+255),f,b
  1629  0122E0  1F24               	comf	(??_main+3)& (0+255),f,b
  1630  0122E2  2B21               	incf	??_main& (0+255),f,b
  1631  0122E4  0E00               	movlw	0
  1632  0122E6  2322               	addwfc	(??_main+1)& (0+255),f,b
  1633  0122E8  2323               	addwfc	(??_main+2)& (0+255),f,b
  1634  0122EA  2324               	addwfc	(??_main+3)& (0+255),f,b
  1635  0122EC  5022               	movf	_time_counter,w,c	;volatile
  1636  0122EE  0101               	movlb	1	; () banked
  1637  0122F0  2521               	addwf	??_main& (0+255),w,b
  1638  0122F2  0101               	movlb	1	; () banked
  1639  0122F4  6F25               	movwf	(??_main+4)& (0+255),b
  1640  0122F6  5023               	movf	_time_counter+1,w,c	;volatile
  1641  0122F8  0101               	movlb	1	; () banked
  1642  0122FA  2122               	addwfc	(??_main+1)& (0+255),w,b
  1643  0122FC  0101               	movlb	1	; () banked
  1644  0122FE  6F26               	movwf	(??_main+5)& (0+255),b
  1645  012300  5024               	movf	_time_counter+2,w,c	;volatile
  1646  012302  0101               	movlb	1	; () banked
  1647  012304  2123               	addwfc	(??_main+2)& (0+255),w,b
  1648  012306  0101               	movlb	1	; () banked
  1649  012308  6F27               	movwf	(??_main+6)& (0+255),b
  1650  01230A  5025               	movf	_time_counter+3,w,c	;volatile
  1651  01230C  0101               	movlb	1	; () banked
  1652  01230E  2124               	addwfc	(??_main+3)& (0+255),w,b
  1653  012310  0101               	movlb	1	; () banked
  1654  012312  6F28               	movwf	(??_main+7)& (0+255),b
  1655  012314  0101               	movlb	1	; () banked
  1656  012316  5128               	movf	(??_main+7)& (0+255),w,b
  1657  012318  0101               	movlb	1	; () banked
  1658  01231A  1127               	iorwf	(??_main+6)& (0+255),w,b
  1659  01231C  0101               	movlb	1	; () banked
  1660  01231E  1126               	iorwf	(??_main+5)& (0+255),w,b
  1661  012320  E105               	bnz	u12200
  1662  012322  0E1E               	movlw	30
  1663  012324  0101               	movlb	1	; () banked
  1664  012326  5D25               	subwf	(??_main+4)& (0+255),w,b
  1665  012328  A0D8               	btfss	status,0,c
  1666  01232A  D019               	goto	l9173
  1667  01232C                     u12200:
  1668                           
  1669                           ; BSR set to: 1
  1670                           ;RemoteCan.c: 202: pr_time_1 = time_counter;
  1671  01232C  C022  F0CE         	movff	_time_counter,_pr_time_1	;volatile
  1672  012330  C023  F0CF         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1673  012334  C024  F0D0         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1674  012338  C025  F0D1         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1675                           
  1676                           ; BSR set to: 1
  1677                           ;RemoteCan.c: 203: PORTDbits.RD7 = ~PORTDbits.RD7;
  1678  01233C  AE83               	btfss	3971,7,c	;volatile
  1679  01233E  D002               	goto	u12210
  1680  012340  0E01               	movlw	1
  1681  012342  D001               	goto	u12216
  1682  012344                     u12210:
  1683  012344  0E00               	movlw	0
  1684  012346                     u12216:
  1685  012346  0AFF               	xorlw	255
  1686  012348  0101               	movlb	1	; () banked
  1687  01234A  6F21               	movwf	??_main& (0+255),b
  1688  01234C  0101               	movlb	1	; () banked
  1689  01234E  3321               	rrcf	??_main& (0+255),f,b
  1690  012350  3321               	rrcf	??_main& (0+255),f,b
  1691  012352  5083               	movf	3971,w,c	;volatile
  1692  012354  0101               	movlb	1	; () banked
  1693  012356  1921               	xorwf	??_main& (0+255),w,b
  1694  012358  0B7F               	andlw	-129
  1695  01235A  1921               	xorwf	??_main& (0+255),w,b
  1696  01235C  6E83               	movwf	3971,c	;volatile
  1697  01235E                     l9173:
  1698                           
  1699                           ; BSR set to: 1
  1700                           ;RemoteCan.c: 204: }
  1701                           ;RemoteCan.c: 205: PWR_Button_Polling();
  1702  01235E  EC99  F0B0         	call	_PWR_Button_Polling	;wreg free
  1703                           
  1704                           ;RemoteCan.c: 206: delay_ms(10);
  1705  012362  0E00               	movlw	0
  1706  012364  0100               	movlb	0	; () banked
  1707  012366  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1708  012368  0E0A               	movlw	10
  1709  01236A  6F78               	movwf	delay_ms@value_ms& (0+255),b
  1710  01236C  EC9F  F0AF         	call	_delay_ms	;wreg free
  1711  012370                     l9177:
  1712  012370  A04C               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1713  012372  D7AA               	goto	l9167
  1714                           
  1715                           ;RemoteCan.c: 207: }
  1716                           ;RemoteCan.c: 208: PORTDbits.RD7 = 0;
  1717  012374  9E83               	bcf	3971,7,c	;volatile
  1718                           
  1719                           ;RemoteCan.c: 209: display_refresh = 1;
  1720  012376  8C4B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1721  012378                     l9179:
  1722                           
  1723                           ;RemoteCan.c: 210: }
  1724                           ;RemoteCan.c: 212: Joystick_Polling();
  1725  012378  ECC8  F0AE         	call	_Joystick_Polling	;wreg free
  1726                           
  1727                           ;RemoteCan.c: 215: if (PORTAbits.RA2 == 1) {
  1728  01237C  A480               	btfss	3968,2,c	;volatile
  1729  01237E  D004               	goto	l782
  1730                           
  1731                           ;RemoteCan.c: 216: switch_position = 0;
  1732  012380  0E00               	movlw	0
  1733  012382  0100               	movlb	0	; () banked
  1734  012384  6FE2               	movwf	_switch_position& (0+255),b	;volatile
  1735                           
  1736                           ;RemoteCan.c: 217: } else {
  1737  012386  D00D               	goto	l9189
  1738  012388                     l782:
  1739                           
  1740                           ;RemoteCan.c: 218: if (PORTAbits.RA3 == 0) {
  1741  012388  B680               	btfsc	3968,3,c	;volatile
  1742  01238A  D005               	goto	l9187
  1743                           
  1744                           ;RemoteCan.c: 219: switch_position = 1;
  1745  01238C  0E01               	movlw	1
  1746  01238E  0100               	movlb	0	; () banked
  1747  012390  6FE2               	movwf	_switch_position& (0+255),b	;volatile
  1748                           
  1749                           ;RemoteCan.c: 220: dir = 1;
  1750  012392  0E01               	movlw	1
  1751  012394  D004               	goto	L1
  1752  012396                     l9187:
  1753                           
  1754                           ;RemoteCan.c: 222: switch_position = 2;
  1755  012396  0E02               	movlw	2
  1756  012398  0100               	movlb	0	; () banked
  1757  01239A  6FE2               	movwf	_switch_position& (0+255),b	;volatile
  1758                           
  1759                           ;RemoteCan.c: 223: dir = 0;
  1760  01239C  0E00               	movlw	0
  1761  01239E                     L1:
  1762  01239E  0100               	movlb	0	; () banked
  1763  0123A0  6FE0               	movwf	_dir& (0+255),b	;volatile
  1764  0123A2                     l9189:
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;RemoteCan.c: 224: }
  1768                           ;RemoteCan.c: 225: }
  1769                           ;RemoteCan.c: 228: if (F1_switch == 1) {
  1770  0123A2  A24B               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  1771  0123A4  D0C6               	goto	l9237
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;RemoteCan.c: 229: y = 0;
  1775  0123A6  9A4C               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;RemoteCan.c: 230: if ((x < 1)&&(F2_switch == 0)) {
  1779  0123A8  0100               	movlb	0	; () banked
  1780  0123AA  51E3               	movf	_x& (0+255),w,b	;volatile
  1781  0123AC  B4D8               	btfsc	status,2,c
  1782                           
  1783                           ; BSR set to: 0
  1784  0123AE  B44B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1785  0123B0  D02E               	goto	l9209
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;RemoteCan.c: 231: space_available = 0;
  1789  0123B2  924C               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;RemoteCan.c: 232: parking_state = 1;
  1793  0123B4  0E01               	movlw	1
  1794  0123B6  0100               	movlb	0	; () banked
  1795  0123B8  6FE1               	movwf	_parking_state& (0+255),b	;volatile
  1796                           
  1797                           ;RemoteCan.c: 233: JoystickConstants[1] = 1;
  1798  0123BA  0E00               	movlw	0
  1799  0123BC  0100               	movlb	0	; () banked
  1800  0123BE  6FCA               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1801  0123C0  0E00               	movlw	0
  1802  0123C2  6FCB               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1803  0123C4  0E80               	movlw	128
  1804  0123C6  6FCC               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1805  0123C8  0E3F               	movlw	63
  1806  0123CA  6FCD               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1807  0123CC                     l9201:
  1808  0123CC  EC67  F0B0         	call	_CANisTxReady	;wreg free
  1809  0123D0  0900               	iorlw	0
  1810  0123D2  B4D8               	btfsc	status,2,c
  1811  0123D4  D7FB               	goto	l9201
  1812                           
  1813                           ;RemoteCan.c: 235: park_assist_state[0] = 0b00000001;
  1814  0123D6  0E01               	movlw	1
  1815  0123D8  0101               	movlb	1	; () banked
  1816  0123DA  6F44               	movwf	_park_assist_state& (0+255),b
  1817                           
  1818                           ; BSR set to: 1
  1819                           ;RemoteCan.c: 236: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1820  0123DC  0E0A               	movlw	10
  1821  0123DE  0100               	movlb	0	; () banked
  1822  0123E0  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  1823  0123E2  0E00               	movlw	0
  1824  0123E4  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1825  0123E6  0E00               	movlw	0
  1826  0123E8  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1827  0123EA  0E00               	movlw	0
  1828  0123EC  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1829  0123EE  0E44               	movlw	low _park_assist_state
  1830  0123F0  0100               	movlb	0	; () banked
  1831  0123F2  6F76               	movwf	CANsendMessage@data& (0+255),b
  1832  0123F4  0E01               	movlw	high _park_assist_state
  1833  0123F6  0100               	movlb	0	; () banked
  1834  0123F8  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  1835  0123FA  0E08               	movlw	8
  1836  0123FC  0100               	movlb	0	; () banked
  1837  0123FE  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  1838  012400  0EBC               	movlw	188
  1839  012402  0100               	movlb	0	; () banked
  1840  012404  6F79               	movwf	CANsendMessage@flags& (0+255),b
  1841  012406  ECCD  F089         	call	_CANsendMessage	;wreg free
  1842                           
  1843                           ;RemoteCan.c: 237: x++;
  1844  01240A  0100               	movlb	0	; () banked
  1845  01240C  2BE3               	incf	_x& (0+255),f,b	;volatile
  1846  01240E                     l9209:
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;RemoteCan.c: 238: }
  1850                           ;RemoteCan.c: 239: if ((time_counter - pr_time_5) >= 30) {
  1851  01240E  C01E  F121         	movff	_pr_time_5,??_main	;volatile
  1852  012412  C01F  F122         	movff	_pr_time_5+1,??_main+1	;volatile
  1853  012416  C020  F123         	movff	_pr_time_5+2,??_main+2	;volatile
  1854  01241A  C021  F124         	movff	_pr_time_5+3,??_main+3	;volatile
  1855  01241E  0101               	movlb	1	; () banked
  1856  012420  1F21               	comf	??_main& (0+255),f,b
  1857  012422  1F22               	comf	(??_main+1)& (0+255),f,b
  1858  012424  1F23               	comf	(??_main+2)& (0+255),f,b
  1859  012426  1F24               	comf	(??_main+3)& (0+255),f,b
  1860  012428  2B21               	incf	??_main& (0+255),f,b
  1861  01242A  0E00               	movlw	0
  1862  01242C  2322               	addwfc	(??_main+1)& (0+255),f,b
  1863  01242E  2323               	addwfc	(??_main+2)& (0+255),f,b
  1864  012430  2324               	addwfc	(??_main+3)& (0+255),f,b
  1865  012432  5022               	movf	_time_counter,w,c	;volatile
  1866  012434  0101               	movlb	1	; () banked
  1867  012436  2521               	addwf	??_main& (0+255),w,b
  1868  012438  0101               	movlb	1	; () banked
  1869  01243A  6F25               	movwf	(??_main+4)& (0+255),b
  1870  01243C  5023               	movf	_time_counter+1,w,c	;volatile
  1871  01243E  0101               	movlb	1	; () banked
  1872  012440  2122               	addwfc	(??_main+1)& (0+255),w,b
  1873  012442  0101               	movlb	1	; () banked
  1874  012444  6F26               	movwf	(??_main+5)& (0+255),b
  1875  012446  5024               	movf	_time_counter+2,w,c	;volatile
  1876  012448  0101               	movlb	1	; () banked
  1877  01244A  2123               	addwfc	(??_main+2)& (0+255),w,b
  1878  01244C  0101               	movlb	1	; () banked
  1879  01244E  6F27               	movwf	(??_main+6)& (0+255),b
  1880  012450  5025               	movf	_time_counter+3,w,c	;volatile
  1881  012452  0101               	movlb	1	; () banked
  1882  012454  2124               	addwfc	(??_main+3)& (0+255),w,b
  1883  012456  0101               	movlb	1	; () banked
  1884  012458  6F28               	movwf	(??_main+7)& (0+255),b
  1885  01245A  0101               	movlb	1	; () banked
  1886  01245C  5128               	movf	(??_main+7)& (0+255),w,b
  1887  01245E  0101               	movlb	1	; () banked
  1888  012460  1127               	iorwf	(??_main+6)& (0+255),w,b
  1889  012462  0101               	movlb	1	; () banked
  1890  012464  1126               	iorwf	(??_main+5)& (0+255),w,b
  1891  012466  E105               	bnz	u12290
  1892  012468  0E1E               	movlw	30
  1893  01246A  0101               	movlb	1	; () banked
  1894  01246C  5D25               	subwf	(??_main+4)& (0+255),w,b
  1895  01246E  A0D8               	btfss	status,0,c
  1896  012470  D030               	goto	l9219
  1897  012472                     u12290:
  1898                           
  1899                           ; BSR set to: 1
  1900                           ;RemoteCan.c: 240: pr_time_5 = time_counter;
  1901  012472  C022  F01E         	movff	_time_counter,_pr_time_5	;volatile
  1902  012476  C023  F01F         	movff	_time_counter+1,_pr_time_5+1	;volatile
  1903  01247A  C024  F020         	movff	_time_counter+2,_pr_time_5+2	;volatile
  1904  01247E  C025  F021         	movff	_time_counter+3,_pr_time_5+3	;volatile
  1905                           
  1906                           ;RemoteCan.c: 241: if (space_available == 0) {
  1907  012482  B24C               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  1908  012484  D014               	goto	l792
  1909                           
  1910                           ; BSR set to: 1
  1911                           ;RemoteCan.c: 242: PORTDbits.RD6 = ~PORTDbits.RD6;
  1912  012486  AC83               	btfss	3971,6,c	;volatile
  1913  012488  D002               	goto	u12310
  1914  01248A  0E01               	movlw	1
  1915  01248C  D001               	goto	u12316
  1916  01248E                     u12310:
  1917  01248E  0E00               	movlw	0
  1918  012490                     u12316:
  1919  012490  0AFF               	xorlw	255
  1920  012492  0101               	movlb	1	; () banked
  1921  012494  6F21               	movwf	??_main& (0+255),b
  1922  012496  0101               	movlb	1	; () banked
  1923  012498  3B21               	swapf	??_main& (0+255),f,b
  1924  01249A  4721               	rlncf	??_main& (0+255),f,b
  1925  01249C  4721               	rlncf	??_main& (0+255),f,b
  1926  01249E  5083               	movf	3971,w,c	;volatile
  1927  0124A0  0101               	movlb	1	; () banked
  1928  0124A2  1921               	xorwf	??_main& (0+255),w,b
  1929  0124A4  0BBF               	andlw	-65
  1930  0124A6  1921               	xorwf	??_main& (0+255),w,b
  1931  0124A8  6E83               	movwf	3971,c	;volatile
  1932                           
  1933                           ; BSR set to: 1
  1934                           ;RemoteCan.c: 243: PORTDbits.RD5 = 0;
  1935  0124AA  9A83               	bcf	3971,5,c	;volatile
  1936                           
  1937                           ;RemoteCan.c: 244: } else {
  1938  0124AC  D012               	goto	l9219
  1939  0124AE                     l792:
  1940                           
  1941                           ; BSR set to: 1
  1942                           ;RemoteCan.c: 245: PORTDbits.RD6 = 1;
  1943  0124AE  8C83               	bsf	3971,6,c	;volatile
  1944                           
  1945                           ; BSR set to: 1
  1946                           ;RemoteCan.c: 246: PORTDbits.RD5 = ~PORTDbits.RD5;
  1947  0124B0  AA83               	btfss	3971,5,c	;volatile
  1948  0124B2  D002               	goto	u12320
  1949  0124B4  0E01               	movlw	1
  1950  0124B6  D001               	goto	u12326
  1951  0124B8                     u12320:
  1952  0124B8  0E00               	movlw	0
  1953  0124BA                     u12326:
  1954  0124BA  0AFF               	xorlw	255
  1955  0124BC  0101               	movlb	1	; () banked
  1956  0124BE  6F21               	movwf	??_main& (0+255),b
  1957  0124C0  0101               	movlb	1	; () banked
  1958  0124C2  3B21               	swapf	??_main& (0+255),f,b
  1959  0124C4  4721               	rlncf	??_main& (0+255),f,b
  1960  0124C6  5083               	movf	3971,w,c	;volatile
  1961  0124C8  0101               	movlb	1	; () banked
  1962  0124CA  1921               	xorwf	??_main& (0+255),w,b
  1963  0124CC  0BDF               	andlw	-33
  1964  0124CE  1921               	xorwf	??_main& (0+255),w,b
  1965  0124D0  6E83               	movwf	3971,c	;volatile
  1966  0124D2                     l9219:
  1967                           
  1968                           ; BSR set to: 1
  1969                           ;RemoteCan.c: 247: }
  1970                           ;RemoteCan.c: 248: }
  1971                           ;RemoteCan.c: 250: if ((F2_switch == 1)&&(space_available == 1)) {
  1972  0124D2  B44B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1973                           
  1974                           ; BSR set to: 1
  1975  0124D4  A24C               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  1976  0124D6  D029               	goto	l9235
  1977                           
  1978                           ; BSR set to: 1
  1979                           ;RemoteCan.c: 251: if (z < 1) {
  1980  0124D8  0100               	movlb	0	; () banked
  1981  0124DA  51E4               	movf	_z& (0+255),w,b	;volatile
  1982  0124DC  A4D8               	btfss	status,2,c
  1983  0124DE  D062               	goto	l9261
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;RemoteCan.c: 252: parking_state = 2;
  1987  0124E0  0E02               	movlw	2
  1988  0124E2  0100               	movlb	0	; () banked
  1989  0124E4  6FE1               	movwf	_parking_state& (0+255),b	;volatile
  1990  0124E6                     l9227:
  1991  0124E6  EC67  F0B0         	call	_CANisTxReady	;wreg free
  1992  0124EA  0900               	iorlw	0
  1993  0124EC  B4D8               	btfsc	status,2,c
  1994  0124EE  D7FB               	goto	l9227
  1995                           
  1996                           ;RemoteCan.c: 254: CANsendMessage(0b00000001100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  1997  0124F0  0E0C               	movlw	12
  1998  0124F2  0100               	movlb	0	; () banked
  1999  0124F4  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  2000  0124F6  0E00               	movlw	0
  2001  0124F8  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2002  0124FA  0E00               	movlw	0
  2003  0124FC  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2004  0124FE  0E00               	movlw	0
  2005  012500  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2006  012502  0E2C               	movlw	low _data
  2007  012504  0100               	movlb	0	; () banked
  2008  012506  6F76               	movwf	CANsendMessage@data& (0+255),b
  2009  012508  0E00               	movlw	high _data
  2010  01250A  0100               	movlb	0	; () banked
  2011  01250C  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  2012  01250E  0E08               	movlw	8
  2013  012510  0100               	movlb	0	; () banked
  2014  012512  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  2015  012514  0EBC               	movlw	188
  2016  012516  0100               	movlb	0	; () banked
  2017  012518  6F79               	movwf	CANsendMessage@flags& (0+255),b
  2018  01251A  ECCD  F089         	call	_CANsendMessage	;wreg free
  2019                           
  2020                           ;RemoteCan.c: 255: x = 0;
  2021  01251E  0E00               	movlw	0
  2022  012520  0100               	movlb	0	; () banked
  2023  012522  6FE3               	movwf	_x& (0+255),b	;volatile
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;RemoteCan.c: 256: z++;
  2027  012524  0100               	movlb	0	; () banked
  2028  012526  2BE4               	incf	_z& (0+255),f,b	;volatile
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;RemoteCan.c: 257: }
  2032                           ;RemoteCan.c: 258: } else {
  2033  012528  D03D               	goto	l9261
  2034  01252A                     l9235:
  2035                           
  2036                           ;RemoteCan.c: 259: z = 0;
  2037  01252A  0E00               	movlw	0
  2038  01252C  0100               	movlb	0	; () banked
  2039  01252E  6FE4               	movwf	_z& (0+255),b	;volatile
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;RemoteCan.c: 260: }
  2043                           ;RemoteCan.c: 261: } else {
  2044  012530  D039               	goto	l9261
  2045  012532                     l9237:
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;RemoteCan.c: 262: x = 0;
  2049  012532  0E00               	movlw	0
  2050  012534  0100               	movlb	0	; () banked
  2051  012536  6FE3               	movwf	_x& (0+255),b	;volatile
  2052                           
  2053                           ;RemoteCan.c: 263: z = 0;
  2054  012538  0E00               	movlw	0
  2055  01253A  0100               	movlb	0	; () banked
  2056  01253C  6FE4               	movwf	_z& (0+255),b	;volatile
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;RemoteCan.c: 264: F2_switch = 0;
  2060  01253E  944B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;RemoteCan.c: 265: PORTDbits.RD5 = 0;
  2064  012540  9A83               	bcf	3971,5,c	;volatile
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;RemoteCan.c: 266: PORTDbits.RD6 = 0;
  2068  012542  9C83               	bcf	3971,6,c	;volatile
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;RemoteCan.c: 267: if (y == 0) {
  2072  012544  BA4C               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2073  012546  D02C               	goto	l9257
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;RemoteCan.c: 268: parking_state = 0;
  2077  012548  0E00               	movlw	0
  2078  01254A  0100               	movlb	0	; () banked
  2079  01254C  6FE1               	movwf	_parking_state& (0+255),b	;volatile
  2080                           
  2081                           ;RemoteCan.c: 269: JoystickConstants[1] = 15;
  2082  01254E  0E00               	movlw	0
  2083  012550  0100               	movlb	0	; () banked
  2084  012552  6FCA               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2085  012554  0E00               	movlw	0
  2086  012556  6FCB               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2087  012558  0E70               	movlw	112
  2088  01255A  6FCC               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2089  01255C  0E41               	movlw	65
  2090  01255E  6FCD               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2091  012560                     l9249:
  2092  012560  EC67  F0B0         	call	_CANisTxReady	;wreg free
  2093  012564  0900               	iorlw	0
  2094  012566  B4D8               	btfsc	status,2,c
  2095  012568  D7FB               	goto	l9249
  2096                           
  2097                           ;RemoteCan.c: 271: park_assist_state[0] = 0b00000000;
  2098  01256A  0E00               	movlw	0
  2099  01256C  0101               	movlb	1	; () banked
  2100  01256E  6F44               	movwf	_park_assist_state& (0+255),b
  2101                           
  2102                           ; BSR set to: 1
  2103                           ;RemoteCan.c: 272: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2104  012570  0E0A               	movlw	10
  2105  012572  0100               	movlb	0	; () banked
  2106  012574  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  2107  012576  0E00               	movlw	0
  2108  012578  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2109  01257A  0E00               	movlw	0
  2110  01257C  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2111  01257E  0E00               	movlw	0
  2112  012580  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2113  012582  0E44               	movlw	low _park_assist_state
  2114  012584  0100               	movlb	0	; () banked
  2115  012586  6F76               	movwf	CANsendMessage@data& (0+255),b
  2116  012588  0E01               	movlw	high _park_assist_state
  2117  01258A  0100               	movlb	0	; () banked
  2118  01258C  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  2119  01258E  0E08               	movlw	8
  2120  012590  0100               	movlb	0	; () banked
  2121  012592  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  2122  012594  0EBC               	movlw	188
  2123  012596  0100               	movlb	0	; () banked
  2124  012598  6F79               	movwf	CANsendMessage@flags& (0+255),b
  2125  01259A  ECCD  F089         	call	_CANsendMessage	;wreg free
  2126                           
  2127                           ;RemoteCan.c: 273: y = 1;
  2128  01259E  8A4C               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2129  0125A0                     l9257:
  2130                           
  2131                           ;RemoteCan.c: 274: }
  2132                           ;RemoteCan.c: 275: PORTDbits.RD6 = 0;
  2133  0125A0  9C83               	bcf	3971,6,c	;volatile
  2134                           
  2135                           ;RemoteCan.c: 276: PORTDbits.RD5 = 0;
  2136  0125A2  9A83               	bcf	3971,5,c	;volatile
  2137  0125A4                     l9261:
  2138                           
  2139                           ;RemoteCan.c: 277: }
  2140                           ;RemoteCan.c: 279: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2141  0125A4  0E00               	movlw	0
  2142  0125A6  0100               	movlb	0	; () banked
  2143  0125A8  6FAA               	movwf	___fladd@a& (0+255),b
  2144  0125AA  0E00               	movlw	0
  2145  0125AC  6FAB               	movwf	(___fladd@a+1)& (0+255),b
  2146  0125AE  0E34               	movlw	52
  2147  0125B0  6FAC               	movwf	(___fladd@a+2)& (0+255),b
  2148  0125B2  0E43               	movlw	67
  2149  0125B4  6FAD               	movwf	(___fladd@a+3)& (0+255),b
  2150  0125B6  C0C6  F084         	movff	_JoystickConstants,___flmul@a	;volatile
  2151  0125BA  C0C7  F085         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  2152  0125BE  C0C8  F086         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  2153  0125C2  C0C9  F087         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  2154  0125C6  0100               	movlb	0	; () banked
  2155  0125C8  51D6               	movf	_JoystickValues& (0+255),w,b	;volatile
  2156  0125CA  0100               	movlb	0	; () banked
  2157  0125CC  6F72               	movwf	___xxtofl@val& (0+255),b
  2158  0125CE  6B73               	clrf	(___xxtofl@val+1)& (0+255),b
  2159  0125D0  6B74               	clrf	(___xxtofl@val+2)& (0+255),b
  2160  0125D2  6B75               	clrf	(___xxtofl@val+3)& (0+255),b
  2161  0125D4  0E00               	movlw	0
  2162  0125D6  EC07  F0A3         	call	___xxtofl
  2163  0125DA  C072  F080         	movff	?___xxtofl,___flmul@b
  2164  0125DE  C073  F081         	movff	?___xxtofl+1,___flmul@b+1
  2165  0125E2  C074  F082         	movff	?___xxtofl+2,___flmul@b+2
  2166  0125E6  C075  F083         	movff	?___xxtofl+3,___flmul@b+3
  2167  0125EA  EC8A  F09B         	call	___flmul	;wreg free
  2168  0125EE  C080  F099         	movff	?___flmul,___flneg@f1
  2169  0125F2  C081  F09A         	movff	?___flmul+1,___flneg@f1+1
  2170  0125F6  C082  F09B         	movff	?___flmul+2,___flneg@f1+2
  2171  0125FA  C083  F09C         	movff	?___flmul+3,___flneg@f1+3
  2172  0125FE  ECBC  F0AF         	call	___flneg	;wreg free
  2173  012602  C099  F0A6         	movff	?___flneg,___fladd@b
  2174  012606  C09A  F0A7         	movff	?___flneg+1,___fladd@b+1
  2175  01260A  C09B  F0A8         	movff	?___flneg+2,___fladd@b+2
  2176  01260E  C09C  F0A9         	movff	?___flneg+3,___fladd@b+3
  2177  012612  EC36  F099         	call	___fladd	;wreg free
  2178  012616  C0A6  F0BA         	movff	?___fladd,___fltol@f1
  2179  01261A  C0A7  F0BB         	movff	?___fladd+1,___fltol@f1+1
  2180  01261E  C0A8  F0BC         	movff	?___fladd+2,___fltol@f1+2
  2181  012622  C0A9  F0BD         	movff	?___fladd+3,___fltol@f1+3
  2182  012626  EC56  F0AA         	call	___fltol	;wreg free
  2183  01262A  0100               	movlb	0	; () banked
  2184  01262C  51BA               	movf	?___fltol& (0+255),w,b
  2185  01262E  0100               	movlb	0	; () banked
  2186  012630  6FE7               	movwf	_data_steering& (0+255),b
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;RemoteCan.c: 280: if (switch_position != 0) {
  2190  012632  0100               	movlb	0	; () banked
  2191  012634  51E2               	movf	_switch_position& (0+255),w,b	;volatile
  2192  012636  B4D8               	btfsc	status,2,c
  2193  012638  D088               	goto	l9275
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;RemoteCan.c: 281: if (JoystickValues[1] > 132) {
  2197  01263A  0E84               	movlw	132
  2198  01263C  0100               	movlb	0	; () banked
  2199  01263E  65D7               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2200  012640  D042               	goto	l9271
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;RemoteCan.c: 282: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2204  012642  C0CA  F084         	movff	_JoystickConstants+4,___flmul@a	;volatile
  2205  012646  C0CB  F085         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  2206  01264A  C0CC  F086         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  2207  01264E  C0CD  F087         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  2208  012652  0E7E               	movlw	126
  2209  012654  0101               	movlb	1	; () banked
  2210  012656  6F21               	movwf	??_main& (0+255),b
  2211  012658  0EFF               	movlw	255
  2212  01265A  0101               	movlb	1	; () banked
  2213  01265C  6F22               	movwf	(??_main+1)& (0+255),b
  2214  01265E  0100               	movlb	0	; () banked
  2215  012660  51D7               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2216  012662  0101               	movlb	1	; () banked
  2217  012664  6F23               	movwf	(??_main+2)& (0+255),b
  2218  012666  6B24               	clrf	(??_main+3)& (0+255),b
  2219  012668  0101               	movlb	1	; () banked
  2220  01266A  5121               	movf	??_main& (0+255),w,b
  2221  01266C  0101               	movlb	1	; () banked
  2222  01266E  2723               	addwf	(??_main+2)& (0+255),f,b
  2223  012670  0101               	movlb	1	; () banked
  2224  012672  5122               	movf	(??_main+1)& (0+255),w,b
  2225  012674  0101               	movlb	1	; () banked
  2226  012676  2324               	addwfc	(??_main+3)& (0+255),f,b
  2227  012678  C123  F072         	movff	??_main+2,___xxtofl@val
  2228  01267C  C124  F073         	movff	??_main+3,___xxtofl@val+1
  2229  012680  0100               	movlb	0	; () banked
  2230  012682  0E00               	movlw	0
  2231  012684  BF73               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2232  012686  0EFF               	movlw	-1
  2233  012688  6F74               	movwf	(___xxtofl@val+2)& (0+255),b
  2234  01268A  6F75               	movwf	(___xxtofl@val+3)& (0+255),b
  2235  01268C  0E01               	movlw	1
  2236  01268E  EC07  F0A3         	call	___xxtofl
  2237  012692  C072  F080         	movff	?___xxtofl,___flmul@b
  2238  012696  C073  F081         	movff	?___xxtofl+1,___flmul@b+1
  2239  01269A  C074  F082         	movff	?___xxtofl+2,___flmul@b+2
  2240  01269E  C075  F083         	movff	?___xxtofl+3,___flmul@b+3
  2241  0126A2  EC8A  F09B         	call	___flmul	;wreg free
  2242  0126A6  C080  F0BA         	movff	?___flmul,___fltol@f1
  2243  0126AA  C081  F0BB         	movff	?___flmul+1,___fltol@f1+1
  2244  0126AE  C082  F0BC         	movff	?___flmul+2,___fltol@f1+2
  2245  0126B2  C083  F0BD         	movff	?___flmul+3,___fltol@f1+3
  2246  0126B6  EC56  F0AA         	call	___fltol	;wreg free
  2247  0126BA  C0BA  F0DC         	movff	?___fltol,_set_speed	;volatile
  2248  0126BE  C0BB  F0DD         	movff	?___fltol+1,_set_speed+1	;volatile
  2249                           
  2250                           ;RemoteCan.c: 283: data_brake [0] = 0;
  2251  0126C2  0E00               	movlw	0
  2252  0126C4  D040               	goto	L2
  2253  0126C6                     l9271:
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;RemoteCan.c: 285: set_speed = 0;
  2257  0126C6  0E00               	movlw	0
  2258  0126C8  0100               	movlb	0	; () banked
  2259  0126CA  6FDD               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2260  0126CC  0E00               	movlw	0
  2261  0126CE  6FDC               	movwf	_set_speed& (0+255),b	;volatile
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;RemoteCan.c: 286: data_brake [0] = ((130 - JoystickValues[1]))*(1.9);
  2265  0126D0  0E33               	movlw	51
  2266  0126D2  0100               	movlb	0	; () banked
  2267  0126D4  6F84               	movwf	___flmul@a& (0+255),b
  2268  0126D6  0E33               	movlw	51
  2269  0126D8  6F85               	movwf	(___flmul@a+1)& (0+255),b
  2270  0126DA  0EF3               	movlw	243
  2271  0126DC  6F86               	movwf	(___flmul@a+2)& (0+255),b
  2272  0126DE  0E3F               	movlw	63
  2273  0126E0  6F87               	movwf	(___flmul@a+3)& (0+255),b
  2274  0126E2  0100               	movlb	0	; () banked
  2275  0126E4  51D7               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2276  0126E6  0101               	movlb	1	; () banked
  2277  0126E8  6F21               	movwf	??_main& (0+255),b
  2278  0126EA  6B22               	clrf	(??_main+1)& (0+255),b
  2279  0126EC  0101               	movlb	1	; () banked
  2280  0126EE  1F21               	comf	??_main& (0+255),f,b
  2281  0126F0  1F22               	comf	(??_main+1)& (0+255),f,b
  2282  0126F2  4B21               	infsnz	??_main& (0+255),f,b
  2283  0126F4  2B22               	incf	(??_main+1)& (0+255),f,b
  2284  0126F6  0E82               	movlw	130
  2285  0126F8  0101               	movlb	1	; () banked
  2286  0126FA  2721               	addwf	??_main& (0+255),f,b
  2287  0126FC  0E00               	movlw	0
  2288  0126FE  2322               	addwfc	(??_main+1)& (0+255),f,b
  2289  012700  C121  F072         	movff	??_main,___xxtofl@val
  2290  012704  C122  F073         	movff	??_main+1,___xxtofl@val+1
  2291  012708  0100               	movlb	0	; () banked
  2292  01270A  0E00               	movlw	0
  2293  01270C  BF73               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2294  01270E  0EFF               	movlw	-1
  2295  012710  6F74               	movwf	(___xxtofl@val+2)& (0+255),b
  2296  012712  6F75               	movwf	(___xxtofl@val+3)& (0+255),b
  2297  012714  0E01               	movlw	1
  2298  012716  EC07  F0A3         	call	___xxtofl
  2299  01271A  C072  F080         	movff	?___xxtofl,___flmul@b
  2300  01271E  C073  F081         	movff	?___xxtofl+1,___flmul@b+1
  2301  012722  C074  F082         	movff	?___xxtofl+2,___flmul@b+2
  2302  012726  C075  F083         	movff	?___xxtofl+3,___flmul@b+3
  2303  01272A  EC8A  F09B         	call	___flmul	;wreg free
  2304  01272E  C080  F0BA         	movff	?___flmul,___fltol@f1
  2305  012732  C081  F0BB         	movff	?___flmul+1,___fltol@f1+1
  2306  012736  C082  F0BC         	movff	?___flmul+2,___fltol@f1+2
  2307  01273A  C083  F0BD         	movff	?___flmul+3,___fltol@f1+3
  2308  01273E  EC56  F0AA         	call	___fltol	;wreg free
  2309  012742  0100               	movlb	0	; () banked
  2310  012744  51BA               	movf	?___fltol& (0+255),w,b
  2311  012746                     L2:
  2312  012746  0100               	movlb	0	; () banked
  2313  012748  6FE5               	movwf	_data_brake& (0+255),b
  2314  01274A                     l9275:
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;RemoteCan.c: 287: }
  2318                           ;RemoteCan.c: 288: }
  2319                           ;RemoteCan.c: 290: if (newMessageCan == 1) {
  2320  01274A  AE4B               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2321  01274C  D003               	goto	l9281
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;RemoteCan.c: 291: CAN_interpreter();
  2325  01274E  ECCB  F0AC         	call	_CAN_interpreter	;wreg free
  2326                           
  2327                           ;RemoteCan.c: 292: newMessageCan = 0;
  2328  012752  9E4B               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2329  012754                     l9281:
  2330                           
  2331                           ;RemoteCan.c: 293: }
  2332                           ;RemoteCan.c: 295: if ((time_counter - pr_time_2) >= 2) {
  2333  012754  C0D2  F121         	movff	_pr_time_2,??_main	;volatile
  2334  012758  C0D3  F122         	movff	_pr_time_2+1,??_main+1	;volatile
  2335  01275C  C0D4  F123         	movff	_pr_time_2+2,??_main+2	;volatile
  2336  012760  C0D5  F124         	movff	_pr_time_2+3,??_main+3	;volatile
  2337  012764  0101               	movlb	1	; () banked
  2338  012766  1F21               	comf	??_main& (0+255),f,b
  2339  012768  1F22               	comf	(??_main+1)& (0+255),f,b
  2340  01276A  1F23               	comf	(??_main+2)& (0+255),f,b
  2341  01276C  1F24               	comf	(??_main+3)& (0+255),f,b
  2342  01276E  2B21               	incf	??_main& (0+255),f,b
  2343  012770  0E00               	movlw	0
  2344  012772  2322               	addwfc	(??_main+1)& (0+255),f,b
  2345  012774  2323               	addwfc	(??_main+2)& (0+255),f,b
  2346  012776  2324               	addwfc	(??_main+3)& (0+255),f,b
  2347  012778  5022               	movf	_time_counter,w,c	;volatile
  2348  01277A  0101               	movlb	1	; () banked
  2349  01277C  2521               	addwf	??_main& (0+255),w,b
  2350  01277E  0101               	movlb	1	; () banked
  2351  012780  6F25               	movwf	(??_main+4)& (0+255),b
  2352  012782  5023               	movf	_time_counter+1,w,c	;volatile
  2353  012784  0101               	movlb	1	; () banked
  2354  012786  2122               	addwfc	(??_main+1)& (0+255),w,b
  2355  012788  0101               	movlb	1	; () banked
  2356  01278A  6F26               	movwf	(??_main+5)& (0+255),b
  2357  01278C  5024               	movf	_time_counter+2,w,c	;volatile
  2358  01278E  0101               	movlb	1	; () banked
  2359  012790  2123               	addwfc	(??_main+2)& (0+255),w,b
  2360  012792  0101               	movlb	1	; () banked
  2361  012794  6F27               	movwf	(??_main+6)& (0+255),b
  2362  012796  5025               	movf	_time_counter+3,w,c	;volatile
  2363  012798  0101               	movlb	1	; () banked
  2364  01279A  2124               	addwfc	(??_main+3)& (0+255),w,b
  2365  01279C  0101               	movlb	1	; () banked
  2366  01279E  6F28               	movwf	(??_main+7)& (0+255),b
  2367  0127A0  0101               	movlb	1	; () banked
  2368  0127A2  5128               	movf	(??_main+7)& (0+255),w,b
  2369  0127A4  0101               	movlb	1	; () banked
  2370  0127A6  1127               	iorwf	(??_main+6)& (0+255),w,b
  2371  0127A8  0101               	movlb	1	; () banked
  2372  0127AA  1126               	iorwf	(??_main+5)& (0+255),w,b
  2373  0127AC  E105               	bnz	u12420
  2374  0127AE  0E02               	movlw	2
  2375  0127B0  0101               	movlb	1	; () banked
  2376  0127B2  5D25               	subwf	(??_main+4)& (0+255),w,b
  2377  0127B4  A0D8               	btfss	status,0,c
  2378  0127B6  D00A               	goto	l9287
  2379  0127B8                     u12420:
  2380                           
  2381                           ; BSR set to: 1
  2382                           ;RemoteCan.c: 296: pr_time_2 = time_counter;
  2383  0127B8  C022  F0D2         	movff	_time_counter,_pr_time_2	;volatile
  2384  0127BC  C023  F0D3         	movff	_time_counter+1,_pr_time_2+1	;volatile
  2385  0127C0  C024  F0D4         	movff	_time_counter+2,_pr_time_2+2	;volatile
  2386  0127C4  C025  F0D5         	movff	_time_counter+3,_pr_time_2+3	;volatile
  2387                           
  2388                           ; BSR set to: 1
  2389                           ;RemoteCan.c: 297: CAN_Send();
  2390  0127C8  EC6E  F0AC         	call	_CAN_Send	;wreg free
  2391  0127CC                     l9287:
  2392                           
  2393                           ;RemoteCan.c: 298: }
  2394                           ;RemoteCan.c: 300: if ((time_counter - pr_time_3) >= (100 / 10)) {
  2395  0127CC  C016  F121         	movff	_pr_time_3,??_main	;volatile
  2396  0127D0  C017  F122         	movff	_pr_time_3+1,??_main+1	;volatile
  2397  0127D4  C018  F123         	movff	_pr_time_3+2,??_main+2	;volatile
  2398  0127D8  C019  F124         	movff	_pr_time_3+3,??_main+3	;volatile
  2399  0127DC  0101               	movlb	1	; () banked
  2400  0127DE  1F21               	comf	??_main& (0+255),f,b
  2401  0127E0  1F22               	comf	(??_main+1)& (0+255),f,b
  2402  0127E2  1F23               	comf	(??_main+2)& (0+255),f,b
  2403  0127E4  1F24               	comf	(??_main+3)& (0+255),f,b
  2404  0127E6  2B21               	incf	??_main& (0+255),f,b
  2405  0127E8  0E00               	movlw	0
  2406  0127EA  2322               	addwfc	(??_main+1)& (0+255),f,b
  2407  0127EC  2323               	addwfc	(??_main+2)& (0+255),f,b
  2408  0127EE  2324               	addwfc	(??_main+3)& (0+255),f,b
  2409  0127F0  5022               	movf	_time_counter,w,c	;volatile
  2410  0127F2  0101               	movlb	1	; () banked
  2411  0127F4  2521               	addwf	??_main& (0+255),w,b
  2412  0127F6  0101               	movlb	1	; () banked
  2413  0127F8  6F25               	movwf	(??_main+4)& (0+255),b
  2414  0127FA  5023               	movf	_time_counter+1,w,c	;volatile
  2415  0127FC  0101               	movlb	1	; () banked
  2416  0127FE  2122               	addwfc	(??_main+1)& (0+255),w,b
  2417  012800  0101               	movlb	1	; () banked
  2418  012802  6F26               	movwf	(??_main+5)& (0+255),b
  2419  012804  5024               	movf	_time_counter+2,w,c	;volatile
  2420  012806  0101               	movlb	1	; () banked
  2421  012808  2123               	addwfc	(??_main+2)& (0+255),w,b
  2422  01280A  0101               	movlb	1	; () banked
  2423  01280C  6F27               	movwf	(??_main+6)& (0+255),b
  2424  01280E  5025               	movf	_time_counter+3,w,c	;volatile
  2425  012810  0101               	movlb	1	; () banked
  2426  012812  2124               	addwfc	(??_main+3)& (0+255),w,b
  2427  012814  0101               	movlb	1	; () banked
  2428  012816  6F28               	movwf	(??_main+7)& (0+255),b
  2429  012818  0101               	movlb	1	; () banked
  2430  01281A  5128               	movf	(??_main+7)& (0+255),w,b
  2431  01281C  0101               	movlb	1	; () banked
  2432  01281E  1127               	iorwf	(??_main+6)& (0+255),w,b
  2433  012820  0101               	movlb	1	; () banked
  2434  012822  1126               	iorwf	(??_main+5)& (0+255),w,b
  2435  012824  E105               	bnz	u12430
  2436  012826  0E0A               	movlw	10
  2437  012828  0101               	movlb	1	; () banked
  2438  01282A  5D25               	subwf	(??_main+4)& (0+255),w,b
  2439  01282C  A0D8               	btfss	status,0,c
  2440  01282E  D4FF               	goto	l9133
  2441  012830                     u12430:
  2442                           
  2443                           ; BSR set to: 1
  2444                           ;RemoteCan.c: 301: pr_time_3 = time_counter;
  2445  012830  C022  F016         	movff	_time_counter,_pr_time_3	;volatile
  2446  012834  C023  F017         	movff	_time_counter+1,_pr_time_3+1	;volatile
  2447  012838  C024  F018         	movff	_time_counter+2,_pr_time_3+2	;volatile
  2448  01283C  C025  F019         	movff	_time_counter+3,_pr_time_3+3	;volatile
  2449                           
  2450                           ; BSR set to: 1
  2451                           ;RemoteCan.c: 302: LCD_Handler();
  2452  012840  ECB1  F0A5         	call	_LCD_Handler	;wreg free
  2453  012844  D4F4               	goto	l9133
  2454  012846                     __end_of_main:
  2455                           	opt stack 0
  2456                           tblptru	equ	0xFF8
  2457                           tblptrh	equ	0xFF7
  2458                           tblptrl	equ	0xFF6
  2459                           tablat	equ	0xFF5
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           status	equ	0xFD8
  2463                           
  2464 ;; *************** function _board_initialization *****************
  2465 ;; Defined at:
  2466 ;;		line 459 in file "RemoteCan.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;		None               void
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    9
  2487 ;; This function calls:
  2488 ;;		_CANInitialize
  2489 ;;		_LCD_clear
  2490 ;;		_LCD_goto_line
  2491 ;;		_LCD_initialize
  2492 ;; This function is called by:
  2493 ;;		_main
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text1
  2498  015A40                     __ptext1:
  2499                           	opt stack 0
  2500  015A40                     _board_initialization:
  2501                           	opt stack 21
  2502                           
  2503                           ;RemoteCan.c: 461: LATA = 0x00;
  2504                           
  2505                           ;incstack = 0
  2506  015A40  0E00               	movlw	0
  2507  015A42  6E89               	movwf	3977,c	;volatile
  2508                           
  2509                           ;RemoteCan.c: 462: TRISA = 0b00011111;
  2510  015A44  0E1F               	movlw	31
  2511  015A46  6E92               	movwf	3986,c	;volatile
  2512                           
  2513                           ;RemoteCan.c: 463: LATB = 0x00;
  2514  015A48  0E00               	movlw	0
  2515  015A4A  6E8A               	movwf	3978,c	;volatile
  2516                           
  2517                           ;RemoteCan.c: 464: TRISB = 0b11111011;
  2518  015A4C  0EFB               	movlw	251
  2519  015A4E  6E93               	movwf	3987,c	;volatile
  2520                           
  2521                           ;RemoteCan.c: 465: LATC = 0x00;
  2522  015A50  0E00               	movlw	0
  2523  015A52  6E8B               	movwf	3979,c	;volatile
  2524                           
  2525                           ;RemoteCan.c: 466: TRISC = 0b11110000;
  2526  015A54  0EF0               	movlw	240
  2527  015A56  6E94               	movwf	3988,c	;volatile
  2528                           
  2529                           ;RemoteCan.c: 467: LATD = 0x00;
  2530  015A58  0E00               	movlw	0
  2531  015A5A  6E8C               	movwf	3980,c	;volatile
  2532                           
  2533                           ;RemoteCan.c: 468: TRISD = 0x00;
  2534  015A5C  0E00               	movlw	0
  2535  015A5E  6E95               	movwf	3989,c	;volatile
  2536                           
  2537                           ;RemoteCan.c: 469: LATE = 0x00;
  2538  015A60  0E00               	movlw	0
  2539  015A62  6E8D               	movwf	3981,c	;volatile
  2540                           
  2541                           ;RemoteCan.c: 470: TRISE = 0x00;
  2542  015A64  0E00               	movlw	0
  2543  015A66  6E96               	movwf	3990,c	;volatile
  2544                           
  2545                           ;RemoteCan.c: 472: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2546  015A68  0E06               	movlw	6
  2547  015A6A  0100               	movlb	0	; () banked
  2548  015A6C  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2549  015A6E  0E05               	movlw	5
  2550  015A70  0100               	movlb	0	; () banked
  2551  015A72  6F81               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2552  015A74  0E01               	movlw	1
  2553  015A76  0100               	movlb	0	; () banked
  2554  015A78  6F82               	movwf	CANInitialize@SJW& (0+255),b
  2555  015A7A  0E03               	movlw	3
  2556  015A7C  0100               	movlb	0	; () banked
  2557  015A7E  6F83               	movwf	CANInitialize@BRP& (0+255),b
  2558  015A80  0E9D               	movlw	157
  2559  015A82  0100               	movlb	0	; () banked
  2560  015A84  6F84               	movwf	CANInitialize@flags& (0+255),b
  2561  015A86  0E04               	movlw	4
  2562  015A88  ECEE  F0A3         	call	_CANInitialize
  2563                           
  2564                           ;RemoteCan.c: 476: PIR2bits.TMR3IF = 0;
  2565  015A8C  92A1               	bcf	4001,1,c	;volatile
  2566                           
  2567                           ;RemoteCan.c: 477: PIR3bits.RXB1IF = 0;
  2568  015A8E  92A4               	bcf	4004,1,c	;volatile
  2569                           
  2570                           ;RemoteCan.c: 478: PIR3bits.RXB0IF = 0;
  2571  015A90  90A4               	bcf	4004,0,c	;volatile
  2572                           
  2573                           ;RemoteCan.c: 481: RCONbits.IPEN = 1;
  2574  015A92  8ED0               	bsf	4048,7,c	;volatile
  2575                           
  2576                           ;RemoteCan.c: 482: IPR3bits.RXB1IP = 1;
  2577  015A94  82A5               	bsf	4005,1,c	;volatile
  2578                           
  2579                           ;RemoteCan.c: 483: IPR3bits.RXB0IP = 1;
  2580  015A96  80A5               	bsf	4005,0,c	;volatile
  2581                           
  2582                           ;RemoteCan.c: 484: IPR2bits.TMR3IP = 0;
  2583  015A98  92A2               	bcf	4002,1,c	;volatile
  2584                           
  2585                           ;RemoteCan.c: 487: ADCON1 = 0b00001101;
  2586  015A9A  0E0D               	movlw	13
  2587  015A9C  6EC1               	movwf	4033,c	;volatile
  2588                           
  2589                           ;RemoteCan.c: 488: ADCON0bits.CHS2 = 0;
  2590  015A9E  98C2               	bcf	4034,4,c	;volatile
  2591                           
  2592                           ;RemoteCan.c: 489: ADCON0bits.CHS1 = 0;
  2593  015AA0  96C2               	bcf	4034,3,c	;volatile
  2594                           
  2595                           ;RemoteCan.c: 490: ADCON0bits.CHS0 = 0;
  2596  015AA2  94C2               	bcf	4034,2,c	;volatile
  2597                           
  2598                           ;RemoteCan.c: 491: ADCON2bits.ACQT2 = 1;
  2599  015AA4  8AC0               	bsf	4032,5,c	;volatile
  2600                           
  2601                           ;RemoteCan.c: 492: ADCON2bits.ACQT1 = 1;
  2602  015AA6  88C0               	bsf	4032,4,c	;volatile
  2603                           
  2604                           ;RemoteCan.c: 493: ADCON2bits.ACQT0 = 0;
  2605  015AA8  96C0               	bcf	4032,3,c	;volatile
  2606                           
  2607                           ;RemoteCan.c: 494: ADCON2bits.ADCS2 = 1;
  2608  015AAA  84C0               	bsf	4032,2,c	;volatile
  2609                           
  2610                           ;RemoteCan.c: 495: ADCON2bits.ADCS1 = 0;
  2611  015AAC  92C0               	bcf	4032,1,c	;volatile
  2612                           
  2613                           ;RemoteCan.c: 496: ADCON2bits.ADCS0 = 1;
  2614  015AAE  80C0               	bsf	4032,0,c	;volatile
  2615                           
  2616                           ;RemoteCan.c: 497: ADCON2bits.ADFM = 0;
  2617  015AB0  9EC0               	bcf	4032,7,c	;volatile
  2618                           
  2619                           ;RemoteCan.c: 498: ADCON0bits.ADON = 1;
  2620  015AB2  80C2               	bsf	4034,0,c	;volatile
  2621                           
  2622                           ;RemoteCan.c: 501: LCD_initialize(16);
  2623  015AB4  0E10               	movlw	16
  2624  015AB6  EC9F  F0A9         	call	_LCD_initialize
  2625                           
  2626                           ;RemoteCan.c: 503: LCD_clear();
  2627  015ABA  EC26  F0B0         	call	_LCD_clear	;wreg free
  2628                           
  2629                           ;RemoteCan.c: 504: LCD_goto_line(1);
  2630  015ABE  0E01               	movlw	1
  2631  015AC0  ECDC  F0AA         	call	_LCD_goto_line
  2632                           
  2633                           ;RemoteCan.c: 508: PORTDbits.RD2 = 0;
  2634  015AC4  9483               	bcf	3971,2,c	;volatile
  2635                           
  2636                           ;RemoteCan.c: 509: PORTDbits.RD3 = 0;
  2637  015AC6  9683               	bcf	3971,3,c	;volatile
  2638                           
  2639                           ;RemoteCan.c: 512: TMR3H = 0x63;
  2640  015AC8  0E63               	movlw	99
  2641  015ACA  6EB3               	movwf	4019,c	;volatile
  2642                           
  2643                           ;RemoteCan.c: 513: TMR3L = 0xC0;
  2644  015ACC  0EC0               	movlw	192
  2645  015ACE  6EB2               	movwf	4018,c	;volatile
  2646                           
  2647                           ;RemoteCan.c: 516: PIE3bits.RXB1IE = 1;
  2648  015AD0  82A3               	bsf	4003,1,c	;volatile
  2649                           
  2650                           ;RemoteCan.c: 517: PIE3bits.RXB0IE = 1;
  2651  015AD2  80A3               	bsf	4003,0,c	;volatile
  2652                           
  2653                           ;RemoteCan.c: 518: PIE2bits.TMR3IE = 1;
  2654  015AD4  82A0               	bsf	4000,1,c	;volatile
  2655                           
  2656                           ;RemoteCan.c: 521: T3CON = 0x01;
  2657  015AD6  0E01               	movlw	1
  2658  015AD8  6EB1               	movwf	4017,c	;volatile
  2659                           
  2660                           ;RemoteCan.c: 522: LCD_clear();
  2661  015ADA  EC26  F0B0         	call	_LCD_clear	;wreg free
  2662                           
  2663                           ;RemoteCan.c: 523: INTCONbits.GIEH = 1;
  2664  015ADE  8EF2               	bsf	intcon,7,c	;volatile
  2665                           
  2666                           ;RemoteCan.c: 524: INTCONbits.GIEL = 1;
  2667  015AE0  8CF2               	bsf	intcon,6,c	;volatile
  2668  015AE2  0012               	return		;funcret
  2669  015AE4                     __end_of_board_initialization:
  2670                           	opt stack 0
  2671                           tblptru	equ	0xFF8
  2672                           tblptrh	equ	0xFF7
  2673                           tblptrl	equ	0xFF6
  2674                           tablat	equ	0xFF5
  2675                           intcon	equ	0xFF2
  2676                           postinc0	equ	0xFEE
  2677                           wreg	equ	0xFE8
  2678                           status	equ	0xFD8
  2679                           
  2680 ;; *************** function _CANInitialize *****************
  2681 ;; Defined at:
  2682 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  propSeg         1    wreg     unsigned char 
  2685 ;;  phaseSeg1       1   32[BANK0 ] unsigned char 
  2686 ;;  phaseSeg2       1   33[BANK0 ] unsigned char 
  2687 ;;  SJW             1   34[BANK0 ] unsigned char 
  2688 ;;  BRP             1   35[BANK0 ] unsigned char 
  2689 ;;  flags           1   36[BANK0 ] enum E16887
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;  propSeg         1   41[BANK0 ] unsigned char 
  2692 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  2693 ;;  FilterConfig    1   42[BANK0 ] unsigned char 
  2694 ;; Return value:  Size  Location     Type
  2695 ;;		None               void
  2696 ;; Registers used:
  2697 ;;		wreg, status,2, status,0, cstack
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2703 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2704 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2705 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2706 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2707 ;;Total ram usage:       12 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:    4
  2710 ;; This function calls:
  2711 ;;		_CANOperationMode
  2712 ;;		_CANSetFilter
  2713 ;;		_CANSetMask
  2714 ;; This function is called by:
  2715 ;;		_board_initialization
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text2
  2720  0147DC                     __ptext2:
  2721                           	opt stack 0
  2722  0147DC                     _CANInitialize:
  2723                           	opt stack 25
  2724                           
  2725                           ;incstack = 0
  2726                           ;CANInitialize@propSeg stored from wreg
  2727  0147DC  0100               	movlb	0	; () banked
  2728  0147DE  6F89               	movwf	CANInitialize@propSeg& (0+255),b
  2729                           
  2730                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2731                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2732                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2733  0147E0  0E80               	movlw	128
  2734  0147E2  ECD1  F0B0         	call	_CANOperationMode
  2735                           
  2736                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2737  0147E6  0E00               	movlw	0
  2738  0147E8  6E70               	movwf	3952,c	;volatile
  2739                           
  2740                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2741  0147EA  0E00               	movlw	0
  2742  0147EC  6E71               	movwf	3953,c	;volatile
  2743                           
  2744                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2745  0147EE  0E00               	movlw	0
  2746  0147F0  6E72               	movwf	3954,c	;volatile
  2747                           
  2748                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2749  0147F2  0100               	movlb	0	; () banked
  2750  0147F4  4182               	rrncf	CANInitialize@SJW& (0+255),w,b
  2751  0147F6  42E8               	rrncf	wreg,f,c
  2752  0147F8  0BC0               	andlw	192
  2753  0147FA  0100               	movlb	0	; () banked
  2754  0147FC  6F82               	movwf	CANInitialize@SJW& (0+255),b
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  2758  0147FE  0100               	movlb	0	; () banked
  2759  014800  5182               	movf	CANInitialize@SJW& (0+255),w,b
  2760  014802  1270               	iorwf	3952,f,c	;volatile
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  2764  014804  0100               	movlb	0	; () banked
  2765  014806  5183               	movf	CANInitialize@BRP& (0+255),w,b
  2766  014808  1270               	iorwf	3952,f,c	;volatile
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  2770  01480A  0100               	movlb	0	; () banked
  2771  01480C  5189               	movf	CANInitialize@propSeg& (0+255),w,b
  2772  01480E  1271               	iorwf	3953,f,c	;volatile
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2776  014810  0100               	movlb	0	; () banked
  2777  014812  3980               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2778  014814  42E8               	rrncf	wreg,f,c
  2779  014816  0BF8               	andlw	248
  2780  014818  0100               	movlb	0	; () banked
  2781  01481A  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2785  01481C  0100               	movlb	0	; () banked
  2786  01481E  5180               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2787  014820  1271               	iorwf	3953,f,c	;volatile
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2791  014822  0100               	movlb	0	; () banked
  2792  014824  A584               	btfss	CANInitialize@flags& (0+255),2,b
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  2796  014826  8C71               	bsf	3953,6,c	;volatile
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2800  014828  0100               	movlb	0	; () banked
  2801  01482A  B184               	btfsc	CANInitialize@flags& (0+255),0,b
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2805  01482C  8E71               	bsf	3953,7,c	;volatile
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2809                           
  2810                           ; BSR set to: 0
  2811  01482E  0100               	movlb	0	; () banked
  2812  014830  5181               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2813  014832  1272               	iorwf	3954,f,c	;volatile
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2817  014834  0100               	movlb	0	; () banked
  2818  014836  B384               	btfsc	CANInitialize@flags& (0+255),1,b
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2822  014838  8C72               	bsf	3954,6,c	;volatile
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2826                           
  2827                           ; BSR set to: 0
  2828  01483A  0100               	movlb	0	; () banked
  2829  01483C  5184               	movf	CANInitialize@flags& (0+255),w,b
  2830  01483E  0B60               	andlw	96
  2831  014840  6E60               	movwf	3936,c	;volatile
  2832                           
  2833                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2834  014842  0100               	movlb	0	; () banked
  2835  014844  5184               	movf	CANInitialize@flags& (0+255),w,b
  2836  014846  0B10               	andlw	16
  2837  014848  0AFF               	xorlw	255
  2838  01484A  B4D8               	btfsc	status,2,c
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2842  01484C  8460               	bsf	3936,2,c	;volatile
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  2846  01484E  CF60 FF50          	movff	3936,3920	;volatile
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2850  014852  0E00               	movlw	0
  2851  014854  0100               	movlb	0	; () banked
  2852  014856  6F72               	movwf	CANSetMask@mask& (0+255),b
  2853  014858  0E00               	movlw	0
  2854  01485A  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  2855  01485C  0E00               	movlw	0
  2856  01485E  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  2857  014860  0E00               	movlw	0
  2858  014862  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  2859  014864  0EF7               	movlw	247
  2860  014866  0100               	movlb	0	; () banked
  2861  014868  6F76               	movwf	CANSetMask@type& (0+255),b
  2862  01486A  0E01               	movlw	1
  2863  01486C  ECBD  F09F         	call	_CANSetMask
  2864                           
  2865                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2866  014870  0E00               	movlw	0
  2867  014872  0100               	movlb	0	; () banked
  2868  014874  6F72               	movwf	CANSetMask@mask& (0+255),b
  2869  014876  0E00               	movlw	0
  2870  014878  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  2871  01487A  0E00               	movlw	0
  2872  01487C  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  2873  01487E  0E00               	movlw	0
  2874  014880  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  2875  014882  0EF7               	movlw	247
  2876  014884  0100               	movlb	0	; () banked
  2877  014886  6F76               	movwf	CANSetMask@type& (0+255),b
  2878  014888  0E02               	movlw	2
  2879  01488A  ECBD  F09F         	call	_CANSetMask
  2880                           
  2881                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2882  01488E  D00F               	goto	l6003
  2883  014890                     l5997:
  2884                           
  2885                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2886  014890  0EF7               	movlw	247
  2887  014892  0100               	movlb	0	; () banked
  2888  014894  6F8A               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2889  014896  D007               	goto	l5999
  2890  014898                     l370:
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2894  014898  0100               	movlb	0	; () banked
  2895  01489A  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  2896                           
  2897                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2898  01489C  0100               	movlb	0	; () banked
  2899  01489E  698B               	setf	CANInitialize@FilterConfig2& (0+255),b
  2900                           
  2901                           ;inc\CANlib.h: 273: break;
  2902  0148A0  D028               	goto	l6005
  2903  0148A2                     l371:
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2907  0148A2  0100               	movlb	0	; () banked
  2908  0148A4  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  2909  0148A6                     l5999:
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2913  0148A6  0EF7               	movlw	247
  2914  0148A8  0100               	movlb	0	; () banked
  2915  0148AA  6F8B               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;inc\CANlib.h: 278: }
  2919                           
  2920                           ;inc\CANlib.h: 277: break;
  2921  0148AC  D022               	goto	l6005
  2922  0148AE                     l6003:
  2923  0148AE  0E9F               	movlw	159
  2924  0148B0  0100               	movlb	0	; () banked
  2925  0148B2  6F85               	movwf	??_CANInitialize& (0+255),b
  2926  0148B4  0EFF               	movlw	255
  2927  0148B6  0100               	movlb	0	; () banked
  2928  0148B8  6F86               	movwf	(??_CANInitialize+1)& (0+255),b
  2929  0148BA  0100               	movlb	0	; () banked
  2930  0148BC  5184               	movf	CANInitialize@flags& (0+255),w,b
  2931  0148BE  0B60               	andlw	96
  2932  0148C0  0100               	movlb	0	; () banked
  2933  0148C2  6F87               	movwf	(??_CANInitialize+2)& (0+255),b
  2934  0148C4  6B88               	clrf	(??_CANInitialize+3)& (0+255),b
  2935  0148C6  0100               	movlb	0	; () banked
  2936  0148C8  5185               	movf	??_CANInitialize& (0+255),w,b
  2937  0148CA  0100               	movlb	0	; () banked
  2938  0148CC  1387               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2939  0148CE  0100               	movlb	0	; () banked
  2940  0148D0  5186               	movf	(??_CANInitialize+1)& (0+255),w,b
  2941  0148D2  0100               	movlb	0	; () banked
  2942  0148D4  1388               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2943                           
  2944                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2945                           ; Switch size 1, requested type "space"
  2946                           ; Number of cases is 1, Range of values is 0 to 0
  2947                           ; switch strategies available:
  2948                           ; Name         Instructions Cycles
  2949                           ; simple_byte            4     3 (average)
  2950                           ;	Chosen strategy is simple_byte
  2951  0148D6  0100               	movlb	0	; () banked
  2952  0148D8  5188               	movf	(??_CANInitialize+3)& (0+255),w,b
  2953  0148DA  0A00               	xorlw	0	; case 0
  2954  0148DC  A4D8               	btfss	status,2,c
  2955  0148DE  D7E1               	goto	l371
  2956                           
  2957                           ; BSR set to: 0
  2958                           ; Switch size 1, requested type "space"
  2959                           ; Number of cases is 2, Range of values is 191 to 223
  2960                           ; switch strategies available:
  2961                           ; Name         Instructions Cycles
  2962                           ; simple_byte            7     4 (average)
  2963                           ;	Chosen strategy is simple_byte
  2964  0148E0  0100               	movlb	0	; () banked
  2965  0148E2  5187               	movf	(??_CANInitialize+2)& (0+255),w,b
  2966  0148E4  0ABF               	xorlw	191	; case 191
  2967  0148E6  B4D8               	btfsc	status,2,c
  2968  0148E8  D7D7               	goto	l370
  2969  0148EA  0A60               	xorlw	96	; case 223
  2970  0148EC  B4D8               	btfsc	status,2,c
  2971  0148EE  D7D0               	goto	l5997
  2972  0148F0  D7D8               	goto	l371
  2973  0148F2                     l6005:
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2977  0148F2  0E00               	movlw	0
  2978  0148F4  0100               	movlb	0	; () banked
  2979  0148F6  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2980  0148F8  0E00               	movlw	0
  2981  0148FA  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2982  0148FC  0E00               	movlw	0
  2983  0148FE  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2984  014900  0E00               	movlw	0
  2985  014902  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2986  014904  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2987  014908  0E00               	movlw	0
  2988  01490A  EC00  F080         	call	_CANSetFilter
  2989                           
  2990                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2991  01490E  0E00               	movlw	0
  2992  014910  0100               	movlb	0	; () banked
  2993  014912  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2994  014914  0E00               	movlw	0
  2995  014916  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2996  014918  0E00               	movlw	0
  2997  01491A  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2998  01491C  0E00               	movlw	0
  2999  01491E  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3000  014920  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3001  014924  0E01               	movlw	1
  3002  014926  EC00  F080         	call	_CANSetFilter
  3003                           
  3004                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3005  01492A  0E00               	movlw	0
  3006  01492C  0100               	movlb	0	; () banked
  3007  01492E  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3008  014930  0E00               	movlw	0
  3009  014932  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3010  014934  0E00               	movlw	0
  3011  014936  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3012  014938  0E00               	movlw	0
  3013  01493A  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3014  01493C  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3015  014940  0E02               	movlw	2
  3016  014942  EC00  F080         	call	_CANSetFilter
  3017                           
  3018                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3019  014946  0E00               	movlw	0
  3020  014948  0100               	movlb	0	; () banked
  3021  01494A  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3022  01494C  0E00               	movlw	0
  3023  01494E  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3024  014950  0E00               	movlw	0
  3025  014952  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3026  014954  0E00               	movlw	0
  3027  014956  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3028  014958  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3029  01495C  0E03               	movlw	3
  3030  01495E  EC00  F080         	call	_CANSetFilter
  3031                           
  3032                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3033  014962  0E00               	movlw	0
  3034  014964  0100               	movlb	0	; () banked
  3035  014966  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3036  014968  0E00               	movlw	0
  3037  01496A  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3038  01496C  0E00               	movlw	0
  3039  01496E  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3040  014970  0E00               	movlw	0
  3041  014972  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3042  014974  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3043  014978  0E04               	movlw	4
  3044  01497A  EC00  F080         	call	_CANSetFilter
  3045                           
  3046                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3047  01497E  0E00               	movlw	0
  3048  014980  0100               	movlb	0	; () banked
  3049  014982  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3050  014984  0E00               	movlw	0
  3051  014986  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3052  014988  0E00               	movlw	0
  3053  01498A  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3054  01498C  0E00               	movlw	0
  3055  01498E  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3056  014990  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3057  014994  0E05               	movlw	5
  3058  014996  EC00  F080         	call	_CANSetFilter
  3059                           
  3060                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3061  01499A  0E00               	movlw	0
  3062  01499C  ECD1  F0B0         	call	_CANOperationMode
  3063  0149A0  0012               	return		;funcret
  3064  0149A2                     __end_of_CANInitialize:
  3065                           	opt stack 0
  3066                           tblptru	equ	0xFF8
  3067                           tblptrh	equ	0xFF7
  3068                           tblptrl	equ	0xFF6
  3069                           tablat	equ	0xFF5
  3070                           intcon	equ	0xFF2
  3071                           postinc0	equ	0xFEE
  3072                           wreg	equ	0xFE8
  3073                           status	equ	0xFD8
  3074                           
  3075 ;; *************** function _CANSetMask *****************
  3076 ;; Defined at:
  3077 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  numBuffer       1    wreg     enum E16921
  3080 ;;  mask            4   18[BANK0 ] unsigned long 
  3081 ;;  type            1   22[BANK0 ] enum E16887
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  numBuffer       1   27[BANK0 ] enum E16921
  3084 ;;  tamp            4   28[BANK0 ] unsigned long 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;		None               void
  3087 ;; Registers used:
  3088 ;;		wreg, status,2, status,0
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3094 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3095 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3096 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3097 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3098 ;;Total ram usage:       14 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    3
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_CANInitialize
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text3
  3109  013F7A                     __ptext3:
  3110                           	opt stack 0
  3111  013F7A                     _CANSetMask:
  3112                           	opt stack 25
  3113                           
  3114                           ;incstack = 0
  3115                           ;CANSetMask@numBuffer stored from wreg
  3116  013F7A  0100               	movlb	0	; () banked
  3117  013F7C  6F7B               	movwf	CANSetMask@numBuffer& (0+255),b
  3118                           
  3119                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3120  013F7E  0100               	movlb	0	; () banked
  3121  013F80  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  3122  013F82  A4D8               	btfss	status,2,c
  3123  013F84  D056               	goto	l5173
  3124                           
  3125                           ; BSR set to: 0
  3126  013F86  0100               	movlb	0	; () banked
  3127  013F88  2976               	incf	CANSetMask@type& (0+255),w,b
  3128  013F8A  A4D8               	btfss	status,2,c
  3129  013F8C  D052               	goto	l5173
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;inc\CANlib.h: 644: {
  3133                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3134  013F8E  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3135  013F92  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3136  013F96  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3137  013F9A  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3138  013F9E  0E04               	movlw	4
  3139  013FA0  D006               	goto	u5810
  3140  013FA2                     u5815:
  3141  013FA2  0100               	movlb	0	; () banked
  3142  013FA4  90D8               	bcf	status,0,c
  3143  013FA6  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3144  013FA8  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3145  013FAA  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3146  013FAC  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3147  013FAE                     u5810:
  3148  013FAE  2EE8               	decfsz	wreg,f,c
  3149  013FB0  D7F8               	goto	u5815
  3150  013FB2  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3151  013FB6  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3152  013FBA  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3153  013FBE  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3157  013FC2  0100               	movlb	0	; () banked
  3158  013FC4  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3159  013FC6  0100               	movlb	0	; () banked
  3160  013FC8  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3161  013FCA  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3162  013FCC  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3163  013FCE  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3167  013FD0  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3171  013FD4  0E07               	movlw	7
  3172  013FD6  0100               	movlb	0	; () banked
  3173  013FD8  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3174  013FDA  0100               	movlb	0	; () banked
  3175  013FDC  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3176  013FDE  0E00               	movlw	0
  3177  013FE0  0100               	movlb	0	; () banked
  3178  013FE2  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3179  013FE4  0100               	movlb	0	; () banked
  3180  013FE6  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3181  013FE8  0E00               	movlw	0
  3182  013FEA  0100               	movlb	0	; () banked
  3183  013FEC  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3184  013FEE  0100               	movlb	0	; () banked
  3185  013FF0  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3186  013FF2  0E00               	movlw	0
  3187  013FF4  0100               	movlb	0	; () banked
  3188  013FF6  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3189  013FF8  0100               	movlb	0	; () banked
  3190  013FFA  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3194  013FFC  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3195  014000  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3196  014004  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3197  014008  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3198  01400C  0E05               	movlw	5
  3199  01400E                     u5825:
  3200  01400E  90D8               	bcf	status,0,c
  3201  014010  0100               	movlb	0	; () banked
  3202  014012  3777               	rlcf	??_CANSetMask& (0+255),f,b
  3203  014014  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3204  014016  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3205  014018  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3206  01401A  2EE8               	decfsz	wreg,f,c
  3207  01401C  D7F8               	goto	u5825
  3208  01401E  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3209  014022  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3210  014026  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3211  01402A  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3215  01402E  C07C  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3216  014032                     l5173:
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;inc\CANlib.h: 652: }
  3220                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3221  014032  0E02               	movlw	2
  3222  014034  0100               	movlb	0	; () banked
  3223  014036  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3224  014038  A4D8               	btfss	status,2,c
  3225  01403A  D056               	goto	l5189
  3226                           
  3227                           ; BSR set to: 0
  3228  01403C  0100               	movlb	0	; () banked
  3229  01403E  2976               	incf	CANSetMask@type& (0+255),w,b
  3230  014040  A4D8               	btfss	status,2,c
  3231  014042  D052               	goto	l5189
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;inc\CANlib.h: 655: {
  3235                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3236  014044  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3237  014048  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3238  01404C  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3239  014050  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3240  014054  0E04               	movlw	4
  3241  014056  D006               	goto	u5850
  3242  014058                     u5855:
  3243  014058  0100               	movlb	0	; () banked
  3244  01405A  90D8               	bcf	status,0,c
  3245  01405C  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3246  01405E  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3247  014060  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3248  014062  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3249  014064                     u5850:
  3250  014064  2EE8               	decfsz	wreg,f,c
  3251  014066  D7F8               	goto	u5855
  3252  014068  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3253  01406C  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3254  014070  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3255  014074  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3259  014078  0100               	movlb	0	; () banked
  3260  01407A  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3261  01407C  0100               	movlb	0	; () banked
  3262  01407E  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3263  014080  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3264  014082  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3265  014084  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3269  014086  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3273  01408A  0E07               	movlw	7
  3274  01408C  0100               	movlb	0	; () banked
  3275  01408E  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3276  014090  0100               	movlb	0	; () banked
  3277  014092  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3278  014094  0E00               	movlw	0
  3279  014096  0100               	movlb	0	; () banked
  3280  014098  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3281  01409A  0100               	movlb	0	; () banked
  3282  01409C  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3283  01409E  0E00               	movlw	0
  3284  0140A0  0100               	movlb	0	; () banked
  3285  0140A2  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3286  0140A4  0100               	movlb	0	; () banked
  3287  0140A6  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3288  0140A8  0E00               	movlw	0
  3289  0140AA  0100               	movlb	0	; () banked
  3290  0140AC  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3291  0140AE  0100               	movlb	0	; () banked
  3292  0140B0  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3296  0140B2  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3297  0140B6  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3298  0140BA  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3299  0140BE  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3300  0140C2  0E05               	movlw	5
  3301  0140C4                     u5865:
  3302  0140C4  90D8               	bcf	status,0,c
  3303  0140C6  0100               	movlb	0	; () banked
  3304  0140C8  3777               	rlcf	??_CANSetMask& (0+255),f,b
  3305  0140CA  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3306  0140CC  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3307  0140CE  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3308  0140D0  2EE8               	decfsz	wreg,f,c
  3309  0140D2  D7F8               	goto	u5865
  3310  0140D4  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3311  0140D8  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3312  0140DC  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3313  0140E0  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3317  0140E4  C07C  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3318  0140E8                     l5189:
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;inc\CANlib.h: 663: }
  3322                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3323  0140E8  0100               	movlb	0	; () banked
  3324  0140EA  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  3325  0140EC  A4D8               	btfss	status,2,c
  3326  0140EE  D087               	goto	l5221
  3327                           
  3328                           ; BSR set to: 0
  3329  0140F0  0EF7               	movlw	247
  3330  0140F2  0100               	movlb	0	; () banked
  3331  0140F4  1976               	xorwf	CANSetMask@type& (0+255),w,b
  3332  0140F6  A4D8               	btfss	status,2,c
  3333  0140F8  D082               	goto	l5221
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;inc\CANlib.h: 666: {
  3337                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3338  0140FA  0100               	movlb	0	; () banked
  3339  0140FC  5172               	movf	CANSetMask@mask& (0+255),w,b
  3340  0140FE  0100               	movlb	0	; () banked
  3341  014100  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3342  014102  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3343  014104  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3344  014106  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3348  014108  C07C  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3352  01410C  0E00               	movlw	0
  3353  01410E  0100               	movlb	0	; () banked
  3354  014110  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3355  014112  0100               	movlb	0	; () banked
  3356  014114  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3357  014116  0EFF               	movlw	255
  3358  014118  0100               	movlb	0	; () banked
  3359  01411A  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3360  01411C  0100               	movlb	0	; () banked
  3361  01411E  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3362  014120  0E00               	movlw	0
  3363  014122  0100               	movlb	0	; () banked
  3364  014124  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3365  014126  0100               	movlb	0	; () banked
  3366  014128  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3367  01412A  0E00               	movlw	0
  3368  01412C  0100               	movlb	0	; () banked
  3369  01412E  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3370  014130  0100               	movlb	0	; () banked
  3371  014132  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3375  014134  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3376  014138  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3377  01413C  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3378  014140  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3379  014144  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  3380  014148  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  3381  01414C  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  3382  014150  0100               	movlb	0	; () banked
  3383  014152  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  3384  014154  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3385  014158  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3386  01415C  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3387  014160  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3391  014164  C07C  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3395  014168  0100               	movlb	0	; () banked
  3396  01416A  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3397  01416C  D003               	goto	l444
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3401  01416E  010F               	movlb	15	; () banked
  3402  014170  8119               	bsf	25,0,b	;volatile
  3403  014172  D002               	goto	l445
  3404  014174                     l444:
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;inc\CANlib.h: 676: else
  3408                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3409  014174  010F               	movlb	15	; () banked
  3410  014176  9119               	bcf	25,0,b	;volatile
  3411  014178                     l445:
  3412                           
  3413                           ; BSR set to: 15
  3414                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3415  014178  0100               	movlb	0	; () banked
  3416  01417A  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3417  01417C  D003               	goto	l446
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3421  01417E  010F               	movlb	15	; () banked
  3422  014180  8319               	bsf	25,1,b	;volatile
  3423  014182  D002               	goto	l447
  3424  014184                     l446:
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;inc\CANlib.h: 681: else
  3428                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3429  014184  010F               	movlb	15	; () banked
  3430  014186  9319               	bcf	25,1,b	;volatile
  3431  014188                     l447:
  3432                           
  3433                           ; BSR set to: 15
  3434                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3435  014188  0100               	movlb	0	; () banked
  3436  01418A  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3437  01418C  D003               	goto	l448
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3441  01418E  010F               	movlb	15	; () banked
  3442  014190  8B19               	bsf	25,5,b	;volatile
  3443  014192  D002               	goto	l449
  3444  014194                     l448:
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;inc\CANlib.h: 686: else
  3448                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3449  014194  010F               	movlb	15	; () banked
  3450  014196  9B19               	bcf	25,5,b	;volatile
  3451  014198                     l449:
  3452                           
  3453                           ; BSR set to: 15
  3454                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3455  014198  0100               	movlb	0	; () banked
  3456  01419A  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3457  01419C  D003               	goto	l450
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3461  01419E  010F               	movlb	15	; () banked
  3462  0141A0  8D19               	bsf	25,6,b	;volatile
  3463  0141A2  D002               	goto	l451
  3464  0141A4                     l450:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;inc\CANlib.h: 691: else
  3468                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3469  0141A4  010F               	movlb	15	; () banked
  3470  0141A6  9D19               	bcf	25,6,b	;volatile
  3471  0141A8                     l451:
  3472                           
  3473                           ; BSR set to: 15
  3474                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3475  0141A8  0100               	movlb	0	; () banked
  3476  0141AA  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3477  0141AC  D003               	goto	l452
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3481  0141AE  010F               	movlb	15	; () banked
  3482  0141B0  8F19               	bsf	25,7,b	;volatile
  3483  0141B2  D002               	goto	l5215
  3484  0141B4                     l452:
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;inc\CANlib.h: 696: else
  3488                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3489  0141B4  010F               	movlb	15	; () banked
  3490  0141B6  9F19               	bcf	25,7,b	;volatile
  3491  0141B8                     l5215:
  3492                           
  3493                           ; BSR set to: 15
  3494                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3495  0141B8  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3496  0141BC  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3497  0141C0  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3498  0141C4  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3499  0141C8  0E16               	movlw	22
  3500  0141CA  D006               	goto	u5940
  3501  0141CC                     u5945:
  3502  0141CC  0100               	movlb	0	; () banked
  3503  0141CE  90D8               	bcf	status,0,c
  3504  0141D0  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3505  0141D2  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3506  0141D4  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3507  0141D6  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3508  0141D8                     u5940:
  3509  0141D8  2EE8               	decfsz	wreg,f,c
  3510  0141DA  D7F8               	goto	u5945
  3511  0141DC  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3512  0141E0  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3513  0141E4  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3514  0141E8  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3518  0141EC  0100               	movlb	0	; () banked
  3519  0141EE  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3520  0141F0  0100               	movlb	0	; () banked
  3521  0141F2  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3522  0141F4  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3523  0141F6  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3524  0141F8  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3528  0141FA  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3529  0141FE                     l5221:
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;inc\CANlib.h: 702: }
  3533                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3534  0141FE  0E02               	movlw	2
  3535  014200  0100               	movlb	0	; () banked
  3536  014202  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3537  014204  A4D8               	btfss	status,2,c
  3538  014206  0012               	return	
  3539                           
  3540                           ; BSR set to: 0
  3541  014208  0EF7               	movlw	247
  3542  01420A  0100               	movlb	0	; () banked
  3543  01420C  1976               	xorwf	CANSetMask@type& (0+255),w,b
  3544  01420E  A4D8               	btfss	status,2,c
  3545  014210  0012               	return	
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;inc\CANlib.h: 705: {
  3549                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3550  014212  0100               	movlb	0	; () banked
  3551  014214  5172               	movf	CANSetMask@mask& (0+255),w,b
  3552  014216  0100               	movlb	0	; () banked
  3553  014218  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3554  01421A  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3555  01421C  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3556  01421E  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3560  014220  C07C  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3564  014224  0E00               	movlw	0
  3565  014226  0100               	movlb	0	; () banked
  3566  014228  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3567  01422A  0100               	movlb	0	; () banked
  3568  01422C  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3569  01422E  0EFF               	movlw	255
  3570  014230  0100               	movlb	0	; () banked
  3571  014232  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3572  014234  0100               	movlb	0	; () banked
  3573  014236  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3574  014238  0E00               	movlw	0
  3575  01423A  0100               	movlb	0	; () banked
  3576  01423C  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3577  01423E  0100               	movlb	0	; () banked
  3578  014240  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3579  014242  0E00               	movlw	0
  3580  014244  0100               	movlb	0	; () banked
  3581  014246  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3582  014248  0100               	movlb	0	; () banked
  3583  01424A  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3587  01424C  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3588  014250  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3589  014254  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3590  014258  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3591  01425C  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  3592  014260  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  3593  014264  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  3594  014268  0100               	movlb	0	; () banked
  3595  01426A  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  3596  01426C  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3597  014270  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3598  014274  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3599  014278  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3603  01427C  C07C  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3607  014280  0100               	movlb	0	; () banked
  3608  014282  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3609  014284  D003               	goto	l455
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3613  014286  010F               	movlb	15	; () banked
  3614  014288  811D               	bsf	29,0,b	;volatile
  3615  01428A  D002               	goto	l456
  3616  01428C                     l455:
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;inc\CANlib.h: 715: else
  3620                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3621  01428C  010F               	movlb	15	; () banked
  3622  01428E  911D               	bcf	29,0,b	;volatile
  3623  014290                     l456:
  3624                           
  3625                           ; BSR set to: 15
  3626                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3627  014290  0100               	movlb	0	; () banked
  3628  014292  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3629  014294  D003               	goto	l457
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3633  014296  010F               	movlb	15	; () banked
  3634  014298  831D               	bsf	29,1,b	;volatile
  3635  01429A  D002               	goto	l458
  3636  01429C                     l457:
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;inc\CANlib.h: 720: else
  3640                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3641  01429C  010F               	movlb	15	; () banked
  3642  01429E  931D               	bcf	29,1,b	;volatile
  3643  0142A0                     l458:
  3644                           
  3645                           ; BSR set to: 15
  3646                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3647  0142A0  0100               	movlb	0	; () banked
  3648  0142A2  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3649  0142A4  D003               	goto	l459
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3653  0142A6  010F               	movlb	15	; () banked
  3654  0142A8  8B1D               	bsf	29,5,b	;volatile
  3655  0142AA  D002               	goto	l460
  3656  0142AC                     l459:
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;inc\CANlib.h: 725: else
  3660                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3661  0142AC  010F               	movlb	15	; () banked
  3662  0142AE  9B1D               	bcf	29,5,b	;volatile
  3663  0142B0                     l460:
  3664                           
  3665                           ; BSR set to: 15
  3666                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3667  0142B0  0100               	movlb	0	; () banked
  3668  0142B2  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3669  0142B4  D003               	goto	l461
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3673  0142B6  010F               	movlb	15	; () banked
  3674  0142B8  8D1D               	bsf	29,6,b	;volatile
  3675  0142BA  D002               	goto	l462
  3676  0142BC                     l461:
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;inc\CANlib.h: 730: else
  3680                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3681  0142BC  010F               	movlb	15	; () banked
  3682  0142BE  9D1D               	bcf	29,6,b	;volatile
  3683  0142C0                     l462:
  3684                           
  3685                           ; BSR set to: 15
  3686                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3687  0142C0  0100               	movlb	0	; () banked
  3688  0142C2  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3689  0142C4  D003               	goto	l463
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3693  0142C6  010F               	movlb	15	; () banked
  3694  0142C8  8F1D               	bsf	29,7,b	;volatile
  3695  0142CA  D002               	goto	l5247
  3696  0142CC                     l463:
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;inc\CANlib.h: 735: else
  3700                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3701  0142CC  010F               	movlb	15	; () banked
  3702  0142CE  9F1D               	bcf	29,7,b	;volatile
  3703  0142D0                     l5247:
  3704                           
  3705                           ; BSR set to: 15
  3706                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3707  0142D0  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3708  0142D4  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3709  0142D8  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3710  0142DC  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3711  0142E0  0E16               	movlw	22
  3712  0142E2  D006               	goto	u6020
  3713  0142E4                     u6025:
  3714  0142E4  0100               	movlb	0	; () banked
  3715  0142E6  90D8               	bcf	status,0,c
  3716  0142E8  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3717  0142EA  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3718  0142EC  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3719  0142EE  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3720  0142F0                     u6020:
  3721  0142F0  2EE8               	decfsz	wreg,f,c
  3722  0142F2  D7F8               	goto	u6025
  3723  0142F4  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3724  0142F8  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3725  0142FC  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3726  014300  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3730  014304  0100               	movlb	0	; () banked
  3731  014306  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3732  014308  0100               	movlb	0	; () banked
  3733  01430A  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3734  01430C  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3735  01430E  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3736  014310  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3740  014312  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3741  014316  0012               	return	
  3742  014318                     __end_of_CANSetMask:
  3743                           	opt stack 0
  3744                           tblptru	equ	0xFF8
  3745                           tblptrh	equ	0xFF7
  3746                           tblptrl	equ	0xFF6
  3747                           tablat	equ	0xFF5
  3748                           intcon	equ	0xFF2
  3749                           postinc0	equ	0xFEE
  3750                           wreg	equ	0xFE8
  3751                           status	equ	0xFD8
  3752                           
  3753 ;; *************** function _CANSetFilter *****************
  3754 ;; Defined at:
  3755 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  numBuffer       1    wreg     enum E16924
  3758 ;;  filter          4   18[BANK0 ] unsigned long 
  3759 ;;  type            1   22[BANK0 ] enum E16887
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  numBuffer       1   27[BANK0 ] enum E16924
  3762 ;;  tamp            4   28[BANK0 ] unsigned long 
  3763 ;; Return value:  Size  Location     Type
  3764 ;;		None               void
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3772 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3773 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3774 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3775 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3776 ;;Total ram usage:       14 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    3
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_CANInitialize
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text4
  3787  010000                     __ptext4:
  3788                           	opt stack 0
  3789  010000                     _CANSetFilter:
  3790                           	opt stack 25
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;incstack = 0
  3794                           ;CANSetFilter@numBuffer stored from wreg
  3795  010000  0100               	movlb	0	; () banked
  3796  010002  6F7B               	movwf	CANSetFilter@numBuffer& (0+255),b
  3797                           
  3798                           ;inc\CANlib.h: 750: unsigned long tamp;
  3799                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3800  010004  0100               	movlb	0	; () banked
  3801  010006  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3802  010008  0100               	movlb	0	; () banked
  3803  01000A  A4D8               	btfss	status,2,c
  3804  01000C  D058               	goto	l5271
  3805                           
  3806                           ; BSR set to: 0
  3807  01000E  0100               	movlb	0	; () banked
  3808  010010  2976               	incf	CANSetFilter@type& (0+255),w,b
  3809  010012  A4D8               	btfss	status,2,c
  3810  010014  D054               	goto	l5271
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;inc\CANlib.h: 753: {
  3814                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3815  010016  010F               	movlb	15	; () banked
  3816  010018  9701               	bcf	1,3,b	;volatile
  3817                           
  3818                           ; BSR set to: 15
  3819                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  3820  01001A  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  3821  01001E  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3822  010022  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3823  010026  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3824  01002A  0E04               	movlw	4
  3825  01002C  D006               	goto	u6050
  3826  01002E                     u6055:
  3827  01002E  0100               	movlb	0	; () banked
  3828  010030  90D8               	bcf	status,0,c
  3829  010032  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3830  010034  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3831  010036  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3832  010038  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  3833  01003A                     u6050:
  3834  01003A  2EE8               	decfsz	wreg,f,c
  3835  01003C  D7F8               	goto	u6055
  3836  01003E  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3837  010042  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3838  010046  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3839  01004A  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  3843  01004E  0100               	movlb	0	; () banked
  3844  010050  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  3845  010052  0100               	movlb	0	; () banked
  3846  010054  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3847  010056  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3848  010058  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3849  01005A  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3853  01005C  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  3857  010060  0E07               	movlw	7
  3858  010062  0100               	movlb	0	; () banked
  3859  010064  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  3860  010066  0100               	movlb	0	; () banked
  3861  010068  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3862  01006A  0E00               	movlw	0
  3863  01006C  0100               	movlb	0	; () banked
  3864  01006E  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3865  010070  0100               	movlb	0	; () banked
  3866  010072  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3867  010074  0E00               	movlw	0
  3868  010076  0100               	movlb	0	; () banked
  3869  010078  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3870  01007A  0100               	movlb	0	; () banked
  3871  01007C  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3872  01007E  0E00               	movlw	0
  3873  010080  0100               	movlb	0	; () banked
  3874  010082  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3875  010084  0100               	movlb	0	; () banked
  3876  010086  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  3880  010088  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  3881  01008C  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3882  010090  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3883  010094  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3884  010098  0E05               	movlw	5
  3885  01009A                     u6065:
  3886  01009A  90D8               	bcf	status,0,c
  3887  01009C  0100               	movlb	0	; () banked
  3888  01009E  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  3889  0100A0  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3890  0100A2  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3891  0100A4  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3892  0100A6  2EE8               	decfsz	wreg,f,c
  3893  0100A8  D7F8               	goto	u6065
  3894  0100AA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3895  0100AE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3896  0100B2  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3897  0100B6  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3901  0100BA  C07C  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3902  0100BE                     l5271:
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;inc\CANlib.h: 763: }
  3906                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3907  0100BE  0100               	movlb	0	; () banked
  3908  0100C0  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3909  0100C2  A4D8               	btfss	status,2,c
  3910  0100C4  D058               	goto	l5289
  3911                           
  3912                           ; BSR set to: 0
  3913  0100C6  0100               	movlb	0	; () banked
  3914  0100C8  2976               	incf	CANSetFilter@type& (0+255),w,b
  3915  0100CA  A4D8               	btfss	status,2,c
  3916  0100CC  D054               	goto	l5289
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;inc\CANlib.h: 766: {
  3920                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3921  0100CE  010F               	movlb	15	; () banked
  3922  0100D0  9705               	bcf	5,3,b	;volatile
  3923                           
  3924                           ; BSR set to: 15
  3925                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  3926  0100D2  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  3927  0100D6  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3928  0100DA  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3929  0100DE  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3930  0100E2  0E04               	movlw	4
  3931  0100E4  D006               	goto	u6090
  3932  0100E6                     u6095:
  3933  0100E6  0100               	movlb	0	; () banked
  3934  0100E8  90D8               	bcf	status,0,c
  3935  0100EA  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3936  0100EC  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3937  0100EE  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3938  0100F0  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  3939  0100F2                     u6090:
  3940  0100F2  2EE8               	decfsz	wreg,f,c
  3941  0100F4  D7F8               	goto	u6095
  3942  0100F6  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3943  0100FA  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3944  0100FE  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3945  010102  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  3949  010106  0100               	movlb	0	; () banked
  3950  010108  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  3951  01010A  0100               	movlb	0	; () banked
  3952  01010C  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3953  01010E  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3954  010110  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3955  010112  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3959  010114  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  3963  010118  0E07               	movlw	7
  3964  01011A  0100               	movlb	0	; () banked
  3965  01011C  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  3966  01011E  0100               	movlb	0	; () banked
  3967  010120  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3968  010122  0E00               	movlw	0
  3969  010124  0100               	movlb	0	; () banked
  3970  010126  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3971  010128  0100               	movlb	0	; () banked
  3972  01012A  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3973  01012C  0E00               	movlw	0
  3974  01012E  0100               	movlb	0	; () banked
  3975  010130  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3976  010132  0100               	movlb	0	; () banked
  3977  010134  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3978  010136  0E00               	movlw	0
  3979  010138  0100               	movlb	0	; () banked
  3980  01013A  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3981  01013C  0100               	movlb	0	; () banked
  3982  01013E  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  3986  010140  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  3987  010144  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3988  010148  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3989  01014C  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3990  010150  0E05               	movlw	5
  3991  010152                     u6105:
  3992  010152  90D8               	bcf	status,0,c
  3993  010154  0100               	movlb	0	; () banked
  3994  010156  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  3995  010158  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3996  01015A  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3997  01015C  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3998  01015E  2EE8               	decfsz	wreg,f,c
  3999  010160  D7F8               	goto	u6105
  4000  010162  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4001  010166  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4002  01016A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4003  01016E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4007  010172  C07C  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4008  010176                     l5289:
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;inc\CANlib.h: 776: }
  4012                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4013  010176  0E02               	movlw	2
  4014  010178  0100               	movlb	0	; () banked
  4015  01017A  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4016  01017C  A4D8               	btfss	status,2,c
  4017  01017E  D058               	goto	l5307
  4018                           
  4019                           ; BSR set to: 0
  4020  010180  0100               	movlb	0	; () banked
  4021  010182  2976               	incf	CANSetFilter@type& (0+255),w,b
  4022  010184  A4D8               	btfss	status,2,c
  4023  010186  D054               	goto	l5307
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;inc\CANlib.h: 779: {
  4027                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4028  010188  010F               	movlb	15	; () banked
  4029  01018A  9709               	bcf	9,3,b	;volatile
  4030                           
  4031                           ; BSR set to: 15
  4032                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4033  01018C  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4034  010190  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4035  010194  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4036  010198  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4037  01019C  0E04               	movlw	4
  4038  01019E  D006               	goto	u6130
  4039  0101A0                     u6135:
  4040  0101A0  0100               	movlb	0	; () banked
  4041  0101A2  90D8               	bcf	status,0,c
  4042  0101A4  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4043  0101A6  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4044  0101A8  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4045  0101AA  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4046  0101AC                     u6130:
  4047  0101AC  2EE8               	decfsz	wreg,f,c
  4048  0101AE  D7F8               	goto	u6135
  4049  0101B0  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4050  0101B4  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4051  0101B8  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4052  0101BC  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4056  0101C0  0100               	movlb	0	; () banked
  4057  0101C2  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4058  0101C4  0100               	movlb	0	; () banked
  4059  0101C6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4060  0101C8  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4061  0101CA  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4062  0101CC  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4066  0101CE  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4070  0101D2  0E07               	movlw	7
  4071  0101D4  0100               	movlb	0	; () banked
  4072  0101D6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4073  0101D8  0100               	movlb	0	; () banked
  4074  0101DA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4075  0101DC  0E00               	movlw	0
  4076  0101DE  0100               	movlb	0	; () banked
  4077  0101E0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4078  0101E2  0100               	movlb	0	; () banked
  4079  0101E4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4080  0101E6  0E00               	movlw	0
  4081  0101E8  0100               	movlb	0	; () banked
  4082  0101EA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4083  0101EC  0100               	movlb	0	; () banked
  4084  0101EE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4085  0101F0  0E00               	movlw	0
  4086  0101F2  0100               	movlb	0	; () banked
  4087  0101F4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4088  0101F6  0100               	movlb	0	; () banked
  4089  0101F8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4093  0101FA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4094  0101FE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4095  010202  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4096  010206  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4097  01020A  0E05               	movlw	5
  4098  01020C                     u6145:
  4099  01020C  90D8               	bcf	status,0,c
  4100  01020E  0100               	movlb	0	; () banked
  4101  010210  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4102  010212  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4103  010214  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4104  010216  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4105  010218  2EE8               	decfsz	wreg,f,c
  4106  01021A  D7F8               	goto	u6145
  4107  01021C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4108  010220  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4109  010224  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4110  010228  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4114  01022C  C07C  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4115  010230                     l5307:
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;inc\CANlib.h: 789: }
  4119                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4120  010230  0E03               	movlw	3
  4121  010232  0100               	movlb	0	; () banked
  4122  010234  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4123  010236  A4D8               	btfss	status,2,c
  4124  010238  D058               	goto	l5325
  4125                           
  4126                           ; BSR set to: 0
  4127  01023A  0100               	movlb	0	; () banked
  4128  01023C  2976               	incf	CANSetFilter@type& (0+255),w,b
  4129  01023E  A4D8               	btfss	status,2,c
  4130  010240  D054               	goto	l5325
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;inc\CANlib.h: 792: {
  4134                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4135  010242  010F               	movlb	15	; () banked
  4136  010244  970D               	bcf	13,3,b	;volatile
  4137                           
  4138                           ; BSR set to: 15
  4139                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4140  010246  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4141  01024A  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4142  01024E  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4143  010252  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4144  010256  0E04               	movlw	4
  4145  010258  D006               	goto	u6170
  4146  01025A                     u6175:
  4147  01025A  0100               	movlb	0	; () banked
  4148  01025C  90D8               	bcf	status,0,c
  4149  01025E  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4150  010260  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4151  010262  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4152  010264  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4153  010266                     u6170:
  4154  010266  2EE8               	decfsz	wreg,f,c
  4155  010268  D7F8               	goto	u6175
  4156  01026A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4157  01026E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4158  010272  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4159  010276  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4163  01027A  0100               	movlb	0	; () banked
  4164  01027C  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4165  01027E  0100               	movlb	0	; () banked
  4166  010280  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4167  010282  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4168  010284  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4169  010286  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4173  010288  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4177  01028C  0E07               	movlw	7
  4178  01028E  0100               	movlb	0	; () banked
  4179  010290  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4180  010292  0100               	movlb	0	; () banked
  4181  010294  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4182  010296  0E00               	movlw	0
  4183  010298  0100               	movlb	0	; () banked
  4184  01029A  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4185  01029C  0100               	movlb	0	; () banked
  4186  01029E  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4187  0102A0  0E00               	movlw	0
  4188  0102A2  0100               	movlb	0	; () banked
  4189  0102A4  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4190  0102A6  0100               	movlb	0	; () banked
  4191  0102A8  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4192  0102AA  0E00               	movlw	0
  4193  0102AC  0100               	movlb	0	; () banked
  4194  0102AE  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4195  0102B0  0100               	movlb	0	; () banked
  4196  0102B2  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4200  0102B4  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4201  0102B8  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4202  0102BC  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4203  0102C0  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4204  0102C4  0E05               	movlw	5
  4205  0102C6                     u6185:
  4206  0102C6  90D8               	bcf	status,0,c
  4207  0102C8  0100               	movlb	0	; () banked
  4208  0102CA  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4209  0102CC  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4210  0102CE  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4211  0102D0  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4212  0102D2  2EE8               	decfsz	wreg,f,c
  4213  0102D4  D7F8               	goto	u6185
  4214  0102D6  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4215  0102DA  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4216  0102DE  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4217  0102E2  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4221  0102E6  C07C  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4222  0102EA                     l5325:
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;inc\CANlib.h: 802: }
  4226                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4227  0102EA  0E04               	movlw	4
  4228  0102EC  0100               	movlb	0	; () banked
  4229  0102EE  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4230  0102F0  A4D8               	btfss	status,2,c
  4231  0102F2  D058               	goto	l5343
  4232                           
  4233                           ; BSR set to: 0
  4234  0102F4  0100               	movlb	0	; () banked
  4235  0102F6  2976               	incf	CANSetFilter@type& (0+255),w,b
  4236  0102F8  A4D8               	btfss	status,2,c
  4237  0102FA  D054               	goto	l5343
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;inc\CANlib.h: 805: {
  4241                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4242  0102FC  010F               	movlb	15	; () banked
  4243  0102FE  9711               	bcf	17,3,b	;volatile
  4244                           
  4245                           ; BSR set to: 15
  4246                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4247  010300  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4248  010304  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4249  010308  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4250  01030C  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4251  010310  0E04               	movlw	4
  4252  010312  D006               	goto	u6210
  4253  010314                     u6215:
  4254  010314  0100               	movlb	0	; () banked
  4255  010316  90D8               	bcf	status,0,c
  4256  010318  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4257  01031A  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4258  01031C  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4259  01031E  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4260  010320                     u6210:
  4261  010320  2EE8               	decfsz	wreg,f,c
  4262  010322  D7F8               	goto	u6215
  4263  010324  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4264  010328  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4265  01032C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4266  010330  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4270  010334  0100               	movlb	0	; () banked
  4271  010336  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4272  010338  0100               	movlb	0	; () banked
  4273  01033A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4274  01033C  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4275  01033E  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4276  010340  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4280  010342  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4284  010346  0E07               	movlw	7
  4285  010348  0100               	movlb	0	; () banked
  4286  01034A  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4287  01034C  0100               	movlb	0	; () banked
  4288  01034E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4289  010350  0E00               	movlw	0
  4290  010352  0100               	movlb	0	; () banked
  4291  010354  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4292  010356  0100               	movlb	0	; () banked
  4293  010358  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4294  01035A  0E00               	movlw	0
  4295  01035C  0100               	movlb	0	; () banked
  4296  01035E  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4297  010360  0100               	movlb	0	; () banked
  4298  010362  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4299  010364  0E00               	movlw	0
  4300  010366  0100               	movlb	0	; () banked
  4301  010368  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4302  01036A  0100               	movlb	0	; () banked
  4303  01036C  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4307  01036E  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4308  010372  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4309  010376  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4310  01037A  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4311  01037E  0E05               	movlw	5
  4312  010380                     u6225:
  4313  010380  90D8               	bcf	status,0,c
  4314  010382  0100               	movlb	0	; () banked
  4315  010384  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4316  010386  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4317  010388  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4318  01038A  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4319  01038C  2EE8               	decfsz	wreg,f,c
  4320  01038E  D7F8               	goto	u6225
  4321  010390  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4322  010394  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4323  010398  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4324  01039C  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4328  0103A0  C07C  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4329  0103A4                     l5343:
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;inc\CANlib.h: 815: }
  4333                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4334  0103A4  0E05               	movlw	5
  4335  0103A6  0100               	movlb	0	; () banked
  4336  0103A8  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4337  0103AA  A4D8               	btfss	status,2,c
  4338  0103AC  D058               	goto	l5361
  4339                           
  4340                           ; BSR set to: 0
  4341  0103AE  0100               	movlb	0	; () banked
  4342  0103B0  2976               	incf	CANSetFilter@type& (0+255),w,b
  4343  0103B2  A4D8               	btfss	status,2,c
  4344  0103B4  D054               	goto	l5361
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;inc\CANlib.h: 818: {
  4348                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4349  0103B6  010F               	movlb	15	; () banked
  4350  0103B8  9715               	bcf	21,3,b	;volatile
  4351                           
  4352                           ; BSR set to: 15
  4353                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4354  0103BA  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4355  0103BE  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4356  0103C2  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4357  0103C6  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4358  0103CA  0E04               	movlw	4
  4359  0103CC  D006               	goto	u6250
  4360  0103CE                     u6255:
  4361  0103CE  0100               	movlb	0	; () banked
  4362  0103D0  90D8               	bcf	status,0,c
  4363  0103D2  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4364  0103D4  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4365  0103D6  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4366  0103D8  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4367  0103DA                     u6250:
  4368  0103DA  2EE8               	decfsz	wreg,f,c
  4369  0103DC  D7F8               	goto	u6255
  4370  0103DE  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4371  0103E2  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4372  0103E6  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4373  0103EA  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4377  0103EE  0100               	movlb	0	; () banked
  4378  0103F0  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4379  0103F2  0100               	movlb	0	; () banked
  4380  0103F4  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4381  0103F6  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4382  0103F8  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4383  0103FA  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4387  0103FC  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4391  010400  0E07               	movlw	7
  4392  010402  0100               	movlb	0	; () banked
  4393  010404  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4394  010406  0100               	movlb	0	; () banked
  4395  010408  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4396  01040A  0E00               	movlw	0
  4397  01040C  0100               	movlb	0	; () banked
  4398  01040E  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4399  010410  0100               	movlb	0	; () banked
  4400  010412  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4401  010414  0E00               	movlw	0
  4402  010416  0100               	movlb	0	; () banked
  4403  010418  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4404  01041A  0100               	movlb	0	; () banked
  4405  01041C  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4406  01041E  0E00               	movlw	0
  4407  010420  0100               	movlb	0	; () banked
  4408  010422  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4409  010424  0100               	movlb	0	; () banked
  4410  010426  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4414  010428  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4415  01042C  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4416  010430  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4417  010434  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4418  010438  0E05               	movlw	5
  4419  01043A                     u6265:
  4420  01043A  90D8               	bcf	status,0,c
  4421  01043C  0100               	movlb	0	; () banked
  4422  01043E  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4423  010440  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4424  010442  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4425  010444  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4426  010446  2EE8               	decfsz	wreg,f,c
  4427  010448  D7F8               	goto	u6265
  4428  01044A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4429  01044E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4430  010452  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4431  010456  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4435  01045A  C07C  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4436  01045E                     l5361:
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;inc\CANlib.h: 828: }
  4440                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4441  01045E  0100               	movlb	0	; () banked
  4442  010460  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4443  010462  0100               	movlb	0	; () banked
  4444  010464  A4D8               	btfss	status,2,c
  4445  010466  D089               	goto	l5395
  4446                           
  4447                           ; BSR set to: 0
  4448  010468  0EF7               	movlw	247
  4449  01046A  0100               	movlb	0	; () banked
  4450  01046C  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  4451  01046E  A4D8               	btfss	status,2,c
  4452  010470  D084               	goto	l5395
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;inc\CANlib.h: 832: {
  4456                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4457  010472  010F               	movlb	15	; () banked
  4458  010474  8701               	bsf	1,3,b	;volatile
  4459                           
  4460                           ; BSR set to: 15
  4461                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4462  010476  0100               	movlb	0	; () banked
  4463  010478  5172               	movf	CANSetFilter@filter& (0+255),w,b
  4464  01047A  0100               	movlb	0	; () banked
  4465  01047C  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4466  01047E  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4467  010480  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4468  010482  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4472  010484  C07C  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4476  010488  0E00               	movlw	0
  4477  01048A  0100               	movlb	0	; () banked
  4478  01048C  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4479  01048E  0100               	movlb	0	; () banked
  4480  010490  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4481  010492  0EFF               	movlw	255
  4482  010494  0100               	movlb	0	; () banked
  4483  010496  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4484  010498  0100               	movlb	0	; () banked
  4485  01049A  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4486  01049C  0E00               	movlw	0
  4487  01049E  0100               	movlb	0	; () banked
  4488  0104A0  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4489  0104A2  0100               	movlb	0	; () banked
  4490  0104A4  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4491  0104A6  0E00               	movlw	0
  4492  0104A8  0100               	movlb	0	; () banked
  4493  0104AA  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4494  0104AC  0100               	movlb	0	; () banked
  4495  0104AE  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4499  0104B0  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4500  0104B4  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4501  0104B8  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4502  0104BC  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4503  0104C0  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  4504  0104C4  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4505  0104C8  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4506  0104CC  0100               	movlb	0	; () banked
  4507  0104CE  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  4508  0104D0  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4509  0104D4  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4510  0104D8  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4511  0104DC  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4515  0104E0  C07C  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4519  0104E4  0100               	movlb	0	; () banked
  4520  0104E6  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4521  0104E8  D003               	goto	l475
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4525  0104EA  010F               	movlb	15	; () banked
  4526  0104EC  8101               	bsf	1,0,b	;volatile
  4527  0104EE  D002               	goto	l476
  4528  0104F0                     l475:
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;inc\CANlib.h: 844: else
  4532                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4533  0104F0  010F               	movlb	15	; () banked
  4534  0104F2  9101               	bcf	1,0,b	;volatile
  4535  0104F4                     l476:
  4536                           
  4537                           ; BSR set to: 15
  4538                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4539  0104F4  0100               	movlb	0	; () banked
  4540  0104F6  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4541  0104F8  D003               	goto	l477
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4545  0104FA  010F               	movlb	15	; () banked
  4546  0104FC  8301               	bsf	1,1,b	;volatile
  4547  0104FE  D002               	goto	l478
  4548  010500                     l477:
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;inc\CANlib.h: 849: else
  4552                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4553  010500  010F               	movlb	15	; () banked
  4554  010502  9301               	bcf	1,1,b	;volatile
  4555  010504                     l478:
  4556                           
  4557                           ; BSR set to: 15
  4558                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4559  010504  0100               	movlb	0	; () banked
  4560  010506  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4561  010508  D003               	goto	l479
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4565  01050A  010F               	movlb	15	; () banked
  4566  01050C  8B01               	bsf	1,5,b	;volatile
  4567  01050E  D002               	goto	l480
  4568  010510                     l479:
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;inc\CANlib.h: 854: else
  4572                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4573  010510  010F               	movlb	15	; () banked
  4574  010512  9B01               	bcf	1,5,b	;volatile
  4575  010514                     l480:
  4576                           
  4577                           ; BSR set to: 15
  4578                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4579  010514  0100               	movlb	0	; () banked
  4580  010516  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4581  010518  D003               	goto	l481
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4585  01051A  010F               	movlb	15	; () banked
  4586  01051C  8D01               	bsf	1,6,b	;volatile
  4587  01051E  D002               	goto	l482
  4588  010520                     l481:
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;inc\CANlib.h: 859: else
  4592                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4593  010520  010F               	movlb	15	; () banked
  4594  010522  9D01               	bcf	1,6,b	;volatile
  4595  010524                     l482:
  4596                           
  4597                           ; BSR set to: 15
  4598                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4599  010524  0100               	movlb	0	; () banked
  4600  010526  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4601  010528  D003               	goto	l483
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4605  01052A  010F               	movlb	15	; () banked
  4606  01052C  8F01               	bsf	1,7,b	;volatile
  4607  01052E  D002               	goto	l5389
  4608  010530                     l483:
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;inc\CANlib.h: 864: else
  4612                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4613  010530  010F               	movlb	15	; () banked
  4614  010532  9F01               	bcf	1,7,b	;volatile
  4615  010534                     l5389:
  4616                           
  4617                           ; BSR set to: 15
  4618                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4619  010534  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4620  010538  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4621  01053C  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4622  010540  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4623  010544  0E16               	movlw	22
  4624  010546  D006               	goto	u6340
  4625  010548                     u6345:
  4626  010548  0100               	movlb	0	; () banked
  4627  01054A  90D8               	bcf	status,0,c
  4628  01054C  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4629  01054E  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4630  010550  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4631  010552  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4632  010554                     u6340:
  4633  010554  2EE8               	decfsz	wreg,f,c
  4634  010556  D7F8               	goto	u6345
  4635  010558  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4636  01055C  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4637  010560  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4638  010564  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4642  010568  0100               	movlb	0	; () banked
  4643  01056A  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4644  01056C  0100               	movlb	0	; () banked
  4645  01056E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4646  010570  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4647  010572  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4648  010574  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4652  010576  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4653  01057A                     l5395:
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;inc\CANlib.h: 870: }
  4657                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4658  01057A  0100               	movlb	0	; () banked
  4659  01057C  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4660  01057E  A4D8               	btfss	status,2,c
  4661  010580  D089               	goto	l5429
  4662                           
  4663                           ; BSR set to: 0
  4664  010582  0EF7               	movlw	247
  4665  010584  0100               	movlb	0	; () banked
  4666  010586  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  4667  010588  A4D8               	btfss	status,2,c
  4668  01058A  D084               	goto	l5429
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;inc\CANlib.h: 873: {
  4672                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4673  01058C  010F               	movlb	15	; () banked
  4674  01058E  8705               	bsf	5,3,b	;volatile
  4675                           
  4676                           ; BSR set to: 15
  4677                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4678  010590  0100               	movlb	0	; () banked
  4679  010592  5172               	movf	CANSetFilter@filter& (0+255),w,b
  4680  010594  0100               	movlb	0	; () banked
  4681  010596  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4682  010598  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4683  01059A  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4684  01059C  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4688  01059E  C07C  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4692  0105A2  0E00               	movlw	0
  4693  0105A4  0100               	movlb	0	; () banked
  4694  0105A6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4695  0105A8  0100               	movlb	0	; () banked
  4696  0105AA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4697  0105AC  0EFF               	movlw	255
  4698  0105AE  0100               	movlb	0	; () banked
  4699  0105B0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4700  0105B2  0100               	movlb	0	; () banked
  4701  0105B4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4702  0105B6  0E00               	movlw	0
  4703  0105B8  0100               	movlb	0	; () banked
  4704  0105BA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4705  0105BC  0100               	movlb	0	; () banked
  4706  0105BE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4707  0105C0  0E00               	movlw	0
  4708  0105C2  0100               	movlb	0	; () banked
  4709  0105C4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4710  0105C6  0100               	movlb	0	; () banked
  4711  0105C8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4715  0105CA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4716  0105CE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4717  0105D2  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4718  0105D6  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4719  0105DA  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  4720  0105DE  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4721  0105E2  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4722  0105E6  0100               	movlb	0	; () banked
  4723  0105E8  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  4724  0105EA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4725  0105EE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4726  0105F2  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4727  0105F6  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4731  0105FA  C07C  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  4735  0105FE  0100               	movlb	0	; () banked
  4736  010600  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4737  010602  D003               	goto	l486
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4741  010604  010F               	movlb	15	; () banked
  4742  010606  8105               	bsf	5,0,b	;volatile
  4743  010608  D002               	goto	l487
  4744  01060A                     l486:
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;inc\CANlib.h: 885: else
  4748                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4749  01060A  010F               	movlb	15	; () banked
  4750  01060C  9105               	bcf	5,0,b	;volatile
  4751  01060E                     l487:
  4752                           
  4753                           ; BSR set to: 15
  4754                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  4755  01060E  0100               	movlb	0	; () banked
  4756  010610  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4757  010612  D003               	goto	l488
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4761  010614  010F               	movlb	15	; () banked
  4762  010616  8305               	bsf	5,1,b	;volatile
  4763  010618  D002               	goto	l489
  4764  01061A                     l488:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;inc\CANlib.h: 890: else
  4768                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4769  01061A  010F               	movlb	15	; () banked
  4770  01061C  9305               	bcf	5,1,b	;volatile
  4771  01061E                     l489:
  4772                           
  4773                           ; BSR set to: 15
  4774                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  4775  01061E  0100               	movlb	0	; () banked
  4776  010620  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4777  010622  D003               	goto	l490
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4781  010624  010F               	movlb	15	; () banked
  4782  010626  8B05               	bsf	5,5,b	;volatile
  4783  010628  D002               	goto	l491
  4784  01062A                     l490:
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;inc\CANlib.h: 895: else
  4788                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4789  01062A  010F               	movlb	15	; () banked
  4790  01062C  9B05               	bcf	5,5,b	;volatile
  4791  01062E                     l491:
  4792                           
  4793                           ; BSR set to: 15
  4794                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  4795  01062E  0100               	movlb	0	; () banked
  4796  010630  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4797  010632  D003               	goto	l492
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4801  010634  010F               	movlb	15	; () banked
  4802  010636  8D05               	bsf	5,6,b	;volatile
  4803  010638  D002               	goto	l493
  4804  01063A                     l492:
  4805                           
  4806                           ; BSR set to: 0
  4807                           ;inc\CANlib.h: 900: else
  4808                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4809  01063A  010F               	movlb	15	; () banked
  4810  01063C  9D05               	bcf	5,6,b	;volatile
  4811  01063E                     l493:
  4812                           
  4813                           ; BSR set to: 15
  4814                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  4815  01063E  0100               	movlb	0	; () banked
  4816  010640  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4817  010642  D003               	goto	l494
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4821  010644  010F               	movlb	15	; () banked
  4822  010646  8F05               	bsf	5,7,b	;volatile
  4823  010648  D002               	goto	l5423
  4824  01064A                     l494:
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;inc\CANlib.h: 905: else
  4828                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4829  01064A  010F               	movlb	15	; () banked
  4830  01064C  9F05               	bcf	5,7,b	;volatile
  4831  01064E                     l5423:
  4832                           
  4833                           ; BSR set to: 15
  4834                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  4835  01064E  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4836  010652  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4837  010656  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4838  01065A  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4839  01065E  0E16               	movlw	22
  4840  010660  D006               	goto	u6420
  4841  010662                     u6425:
  4842  010662  0100               	movlb	0	; () banked
  4843  010664  90D8               	bcf	status,0,c
  4844  010666  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4845  010668  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4846  01066A  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4847  01066C  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4848  01066E                     u6420:
  4849  01066E  2EE8               	decfsz	wreg,f,c
  4850  010670  D7F8               	goto	u6425
  4851  010672  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4852  010676  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4853  01067A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4854  01067E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  4858  010682  0100               	movlb	0	; () banked
  4859  010684  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4860  010686  0100               	movlb	0	; () banked
  4861  010688  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4862  01068A  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4863  01068C  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4864  01068E  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4868  010690  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4869  010694                     l5429:
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;inc\CANlib.h: 911: }
  4873                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4874  010694  0E02               	movlw	2
  4875  010696  0100               	movlb	0	; () banked
  4876  010698  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4877  01069A  A4D8               	btfss	status,2,c
  4878  01069C  D089               	goto	l5463
  4879                           
  4880                           ; BSR set to: 0
  4881  01069E  0EF7               	movlw	247
  4882  0106A0  0100               	movlb	0	; () banked
  4883  0106A2  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  4884  0106A4  A4D8               	btfss	status,2,c
  4885  0106A6  D084               	goto	l5463
  4886                           
  4887                           ; BSR set to: 0
  4888                           ;inc\CANlib.h: 915: {
  4889                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4890  0106A8  010F               	movlb	15	; () banked
  4891  0106AA  8709               	bsf	9,3,b	;volatile
  4892                           
  4893                           ; BSR set to: 15
  4894                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  4895  0106AC  0100               	movlb	0	; () banked
  4896  0106AE  5172               	movf	CANSetFilter@filter& (0+255),w,b
  4897  0106B0  0100               	movlb	0	; () banked
  4898  0106B2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4899  0106B4  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4900  0106B6  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4901  0106B8  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4905  0106BA  C07C  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  4909  0106BE  0E00               	movlw	0
  4910  0106C0  0100               	movlb	0	; () banked
  4911  0106C2  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4912  0106C4  0100               	movlb	0	; () banked
  4913  0106C6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4914  0106C8  0EFF               	movlw	255
  4915  0106CA  0100               	movlb	0	; () banked
  4916  0106CC  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4917  0106CE  0100               	movlb	0	; () banked
  4918  0106D0  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4919  0106D2  0E00               	movlw	0
  4920  0106D4  0100               	movlb	0	; () banked
  4921  0106D6  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4922  0106D8  0100               	movlb	0	; () banked
  4923  0106DA  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4924  0106DC  0E00               	movlw	0
  4925  0106DE  0100               	movlb	0	; () banked
  4926  0106E0  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4927  0106E2  0100               	movlb	0	; () banked
  4928  0106E4  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  4932  0106E6  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4933  0106EA  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4934  0106EE  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4935  0106F2  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4936  0106F6  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  4937  0106FA  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4938  0106FE  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4939  010702  0100               	movlb	0	; () banked
  4940  010704  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  4941  010706  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4942  01070A  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4943  01070E  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4944  010712  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4948  010716  C07C  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  4952  01071A  0100               	movlb	0	; () banked
  4953  01071C  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4954  01071E  D003               	goto	l497
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4958  010720  010F               	movlb	15	; () banked
  4959  010722  8109               	bsf	9,0,b	;volatile
  4960  010724  D002               	goto	l498
  4961  010726                     l497:
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;inc\CANlib.h: 927: else
  4965                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4966  010726  010F               	movlb	15	; () banked
  4967  010728  9109               	bcf	9,0,b	;volatile
  4968  01072A                     l498:
  4969                           
  4970                           ; BSR set to: 15
  4971                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  4972  01072A  0100               	movlb	0	; () banked
  4973  01072C  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4974  01072E  D003               	goto	l499
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4978  010730  010F               	movlb	15	; () banked
  4979  010732  8309               	bsf	9,1,b	;volatile
  4980  010734  D002               	goto	l500
  4981  010736                     l499:
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;inc\CANlib.h: 932: else
  4985                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4986  010736  010F               	movlb	15	; () banked
  4987  010738  9309               	bcf	9,1,b	;volatile
  4988  01073A                     l500:
  4989                           
  4990                           ; BSR set to: 15
  4991                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  4992  01073A  0100               	movlb	0	; () banked
  4993  01073C  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4994  01073E  D003               	goto	l501
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4998  010740  010F               	movlb	15	; () banked
  4999  010742  8B09               	bsf	9,5,b	;volatile
  5000  010744  D002               	goto	l502
  5001  010746                     l501:
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;inc\CANlib.h: 937: else
  5005                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5006  010746  010F               	movlb	15	; () banked
  5007  010748  9B09               	bcf	9,5,b	;volatile
  5008  01074A                     l502:
  5009                           
  5010                           ; BSR set to: 15
  5011                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5012  01074A  0100               	movlb	0	; () banked
  5013  01074C  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5014  01074E  D003               	goto	l503
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5018  010750  010F               	movlb	15	; () banked
  5019  010752  8D09               	bsf	9,6,b	;volatile
  5020  010754  D002               	goto	l504
  5021  010756                     l503:
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;inc\CANlib.h: 942: else
  5025                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5026  010756  010F               	movlb	15	; () banked
  5027  010758  9D09               	bcf	9,6,b	;volatile
  5028  01075A                     l504:
  5029                           
  5030                           ; BSR set to: 15
  5031                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5032  01075A  0100               	movlb	0	; () banked
  5033  01075C  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5034  01075E  D003               	goto	l505
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5038  010760  010F               	movlb	15	; () banked
  5039  010762  8F09               	bsf	9,7,b	;volatile
  5040  010764  D002               	goto	l5457
  5041  010766                     l505:
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;inc\CANlib.h: 947: else
  5045                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5046  010766  010F               	movlb	15	; () banked
  5047  010768  9F09               	bcf	9,7,b	;volatile
  5048  01076A                     l5457:
  5049                           
  5050                           ; BSR set to: 15
  5051                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5052  01076A  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5053  01076E  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5054  010772  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5055  010776  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5056  01077A  0E16               	movlw	22
  5057  01077C  D006               	goto	u6500
  5058  01077E                     u6505:
  5059  01077E  0100               	movlb	0	; () banked
  5060  010780  90D8               	bcf	status,0,c
  5061  010782  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5062  010784  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5063  010786  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5064  010788  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5065  01078A                     u6500:
  5066  01078A  2EE8               	decfsz	wreg,f,c
  5067  01078C  D7F8               	goto	u6505
  5068  01078E  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5069  010792  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5070  010796  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5071  01079A  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5075  01079E  0100               	movlb	0	; () banked
  5076  0107A0  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5077  0107A2  0100               	movlb	0	; () banked
  5078  0107A4  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5079  0107A6  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5080  0107A8  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5081  0107AA  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5085  0107AC  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5086  0107B0                     l5463:
  5087                           
  5088                           ; BSR set to: 0
  5089                           ;inc\CANlib.h: 953: }
  5090                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5091  0107B0  0E03               	movlw	3
  5092  0107B2  0100               	movlb	0	; () banked
  5093  0107B4  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5094  0107B6  A4D8               	btfss	status,2,c
  5095  0107B8  D089               	goto	l5497
  5096                           
  5097                           ; BSR set to: 0
  5098  0107BA  0EF7               	movlw	247
  5099  0107BC  0100               	movlb	0	; () banked
  5100  0107BE  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5101  0107C0  A4D8               	btfss	status,2,c
  5102  0107C2  D084               	goto	l5497
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;inc\CANlib.h: 956: {
  5106                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5107  0107C4  010F               	movlb	15	; () banked
  5108  0107C6  870D               	bsf	13,3,b	;volatile
  5109                           
  5110                           ; BSR set to: 15
  5111                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5112  0107C8  0100               	movlb	0	; () banked
  5113  0107CA  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5114  0107CC  0100               	movlb	0	; () banked
  5115  0107CE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5116  0107D0  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5117  0107D2  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5118  0107D4  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5122  0107D6  C07C  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5126  0107DA  0E00               	movlw	0
  5127  0107DC  0100               	movlb	0	; () banked
  5128  0107DE  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5129  0107E0  0100               	movlb	0	; () banked
  5130  0107E2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5131  0107E4  0EFF               	movlw	255
  5132  0107E6  0100               	movlb	0	; () banked
  5133  0107E8  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5134  0107EA  0100               	movlb	0	; () banked
  5135  0107EC  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5136  0107EE  0E00               	movlw	0
  5137  0107F0  0100               	movlb	0	; () banked
  5138  0107F2  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5139  0107F4  0100               	movlb	0	; () banked
  5140  0107F6  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5141  0107F8  0E00               	movlw	0
  5142  0107FA  0100               	movlb	0	; () banked
  5143  0107FC  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5144  0107FE  0100               	movlb	0	; () banked
  5145  010800  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5149  010802  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5150  010806  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5151  01080A  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5152  01080E  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5153  010812  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5154  010816  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5155  01081A  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5156  01081E  0100               	movlb	0	; () banked
  5157  010820  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5158  010822  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5159  010826  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5160  01082A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5161  01082E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5165  010832  C07C  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5169  010836  0100               	movlb	0	; () banked
  5170  010838  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5171  01083A  D003               	goto	l508
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5175  01083C  010F               	movlb	15	; () banked
  5176  01083E  810D               	bsf	13,0,b	;volatile
  5177  010840  D002               	goto	l509
  5178  010842                     l508:
  5179                           
  5180                           ; BSR set to: 0
  5181                           ;inc\CANlib.h: 968: else
  5182                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5183  010842  010F               	movlb	15	; () banked
  5184  010844  910D               	bcf	13,0,b	;volatile
  5185  010846                     l509:
  5186                           
  5187                           ; BSR set to: 15
  5188                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5189  010846  0100               	movlb	0	; () banked
  5190  010848  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5191  01084A  D003               	goto	l510
  5192                           
  5193                           ; BSR set to: 0
  5194                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5195  01084C  010F               	movlb	15	; () banked
  5196  01084E  830D               	bsf	13,1,b	;volatile
  5197  010850  D002               	goto	l511
  5198  010852                     l510:
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;inc\CANlib.h: 973: else
  5202                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5203  010852  010F               	movlb	15	; () banked
  5204  010854  930D               	bcf	13,1,b	;volatile
  5205  010856                     l511:
  5206                           
  5207                           ; BSR set to: 15
  5208                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5209  010856  0100               	movlb	0	; () banked
  5210  010858  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5211  01085A  D003               	goto	l512
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5215  01085C  010F               	movlb	15	; () banked
  5216  01085E  8B0D               	bsf	13,5,b	;volatile
  5217  010860  D002               	goto	l513
  5218  010862                     l512:
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;inc\CANlib.h: 978: else
  5222                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5223  010862  010F               	movlb	15	; () banked
  5224  010864  9B0D               	bcf	13,5,b	;volatile
  5225  010866                     l513:
  5226                           
  5227                           ; BSR set to: 15
  5228                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5229  010866  0100               	movlb	0	; () banked
  5230  010868  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5231  01086A  D003               	goto	l514
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5235  01086C  010F               	movlb	15	; () banked
  5236  01086E  8D0D               	bsf	13,6,b	;volatile
  5237  010870  D002               	goto	l515
  5238  010872                     l514:
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;inc\CANlib.h: 983: else
  5242                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5243  010872  010F               	movlb	15	; () banked
  5244  010874  9D0D               	bcf	13,6,b	;volatile
  5245  010876                     l515:
  5246                           
  5247                           ; BSR set to: 15
  5248                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5249  010876  0100               	movlb	0	; () banked
  5250  010878  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5251  01087A  D003               	goto	l516
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5255  01087C  010F               	movlb	15	; () banked
  5256  01087E  8F0D               	bsf	13,7,b	;volatile
  5257  010880  D002               	goto	l5491
  5258  010882                     l516:
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;inc\CANlib.h: 988: else
  5262                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5263  010882  010F               	movlb	15	; () banked
  5264  010884  9F0D               	bcf	13,7,b	;volatile
  5265  010886                     l5491:
  5266                           
  5267                           ; BSR set to: 15
  5268                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5269  010886  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5270  01088A  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5271  01088E  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5272  010892  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5273  010896  0E16               	movlw	22
  5274  010898  D006               	goto	u6580
  5275  01089A                     u6585:
  5276  01089A  0100               	movlb	0	; () banked
  5277  01089C  90D8               	bcf	status,0,c
  5278  01089E  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5279  0108A0  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5280  0108A2  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5281  0108A4  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5282  0108A6                     u6580:
  5283  0108A6  2EE8               	decfsz	wreg,f,c
  5284  0108A8  D7F8               	goto	u6585
  5285  0108AA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5286  0108AE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5287  0108B2  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5288  0108B6  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5292  0108BA  0100               	movlb	0	; () banked
  5293  0108BC  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5294  0108BE  0100               	movlb	0	; () banked
  5295  0108C0  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5296  0108C2  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5297  0108C4  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5298  0108C6  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5302  0108C8  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5303  0108CC                     l5497:
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;inc\CANlib.h: 994: }
  5307                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5308  0108CC  0E04               	movlw	4
  5309  0108CE  0100               	movlb	0	; () banked
  5310  0108D0  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5311  0108D2  A4D8               	btfss	status,2,c
  5312  0108D4  D089               	goto	l5531
  5313                           
  5314                           ; BSR set to: 0
  5315  0108D6  0EF7               	movlw	247
  5316  0108D8  0100               	movlb	0	; () banked
  5317  0108DA  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5318  0108DC  A4D8               	btfss	status,2,c
  5319  0108DE  D084               	goto	l5531
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;inc\CANlib.h: 997: {
  5323                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5324  0108E0  010F               	movlb	15	; () banked
  5325  0108E2  8711               	bsf	17,3,b	;volatile
  5326                           
  5327                           ; BSR set to: 15
  5328                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5329  0108E4  0100               	movlb	0	; () banked
  5330  0108E6  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5331  0108E8  0100               	movlb	0	; () banked
  5332  0108EA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5333  0108EC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5334  0108EE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5335  0108F0  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5339  0108F2  C07C  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5343  0108F6  0E00               	movlw	0
  5344  0108F8  0100               	movlb	0	; () banked
  5345  0108FA  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5346  0108FC  0100               	movlb	0	; () banked
  5347  0108FE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5348  010900  0EFF               	movlw	255
  5349  010902  0100               	movlb	0	; () banked
  5350  010904  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5351  010906  0100               	movlb	0	; () banked
  5352  010908  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5353  01090A  0E00               	movlw	0
  5354  01090C  0100               	movlb	0	; () banked
  5355  01090E  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5356  010910  0100               	movlb	0	; () banked
  5357  010912  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5358  010914  0E00               	movlw	0
  5359  010916  0100               	movlb	0	; () banked
  5360  010918  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5361  01091A  0100               	movlb	0	; () banked
  5362  01091C  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5366  01091E  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5367  010922  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5368  010926  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5369  01092A  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5370  01092E  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5371  010932  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5372  010936  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5373  01093A  0100               	movlb	0	; () banked
  5374  01093C  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5375  01093E  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5376  010942  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5377  010946  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5378  01094A  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5382  01094E  C07C  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5386  010952  0100               	movlb	0	; () banked
  5387  010954  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5388  010956  D003               	goto	l519
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5392  010958  010F               	movlb	15	; () banked
  5393  01095A  8111               	bsf	17,0,b	;volatile
  5394  01095C  D002               	goto	l520
  5395  01095E                     l519:
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;inc\CANlib.h: 1009: else
  5399                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5400  01095E  010F               	movlb	15	; () banked
  5401  010960  9111               	bcf	17,0,b	;volatile
  5402  010962                     l520:
  5403                           
  5404                           ; BSR set to: 15
  5405                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5406  010962  0100               	movlb	0	; () banked
  5407  010964  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5408  010966  D003               	goto	l521
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5412  010968  010F               	movlb	15	; () banked
  5413  01096A  8311               	bsf	17,1,b	;volatile
  5414  01096C  D002               	goto	l522
  5415  01096E                     l521:
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;inc\CANlib.h: 1014: else
  5419                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5420  01096E  010F               	movlb	15	; () banked
  5421  010970  9311               	bcf	17,1,b	;volatile
  5422  010972                     l522:
  5423                           
  5424                           ; BSR set to: 15
  5425                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5426  010972  0100               	movlb	0	; () banked
  5427  010974  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5428  010976  D003               	goto	l523
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5432  010978  010F               	movlb	15	; () banked
  5433  01097A  8B11               	bsf	17,5,b	;volatile
  5434  01097C  D002               	goto	l524
  5435  01097E                     l523:
  5436                           
  5437                           ; BSR set to: 0
  5438                           ;inc\CANlib.h: 1019: else
  5439                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5440  01097E  010F               	movlb	15	; () banked
  5441  010980  9B11               	bcf	17,5,b	;volatile
  5442  010982                     l524:
  5443                           
  5444                           ; BSR set to: 15
  5445                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5446  010982  0100               	movlb	0	; () banked
  5447  010984  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5448  010986  D003               	goto	l525
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5452  010988  010F               	movlb	15	; () banked
  5453  01098A  8D11               	bsf	17,6,b	;volatile
  5454  01098C  D002               	goto	l526
  5455  01098E                     l525:
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;inc\CANlib.h: 1024: else
  5459                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5460  01098E  010F               	movlb	15	; () banked
  5461  010990  9D11               	bcf	17,6,b	;volatile
  5462  010992                     l526:
  5463                           
  5464                           ; BSR set to: 15
  5465                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5466  010992  0100               	movlb	0	; () banked
  5467  010994  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5468  010996  D003               	goto	l527
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5472  010998  010F               	movlb	15	; () banked
  5473  01099A  8F11               	bsf	17,7,b	;volatile
  5474  01099C  D002               	goto	l5525
  5475  01099E                     l527:
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;inc\CANlib.h: 1029: else
  5479                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5480  01099E  010F               	movlb	15	; () banked
  5481  0109A0  9F11               	bcf	17,7,b	;volatile
  5482  0109A2                     l5525:
  5483                           
  5484                           ; BSR set to: 15
  5485                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5486  0109A2  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5487  0109A6  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5488  0109AA  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5489  0109AE  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5490  0109B2  0E16               	movlw	22
  5491  0109B4  D006               	goto	u6660
  5492  0109B6                     u6665:
  5493  0109B6  0100               	movlb	0	; () banked
  5494  0109B8  90D8               	bcf	status,0,c
  5495  0109BA  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5496  0109BC  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5497  0109BE  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5498  0109C0  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5499  0109C2                     u6660:
  5500  0109C2  2EE8               	decfsz	wreg,f,c
  5501  0109C4  D7F8               	goto	u6665
  5502  0109C6  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5503  0109CA  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5504  0109CE  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5505  0109D2  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5509  0109D6  0100               	movlb	0	; () banked
  5510  0109D8  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5511  0109DA  0100               	movlb	0	; () banked
  5512  0109DC  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5513  0109DE  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5514  0109E0  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5515  0109E2  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5519  0109E4  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5520  0109E8                     l5531:
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;inc\CANlib.h: 1035: }
  5524                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5525  0109E8  0E05               	movlw	5
  5526  0109EA  0100               	movlb	0	; () banked
  5527  0109EC  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5528  0109EE  A4D8               	btfss	status,2,c
  5529  0109F0  0012               	return	
  5530                           
  5531                           ; BSR set to: 0
  5532  0109F2  0EF7               	movlw	247
  5533  0109F4  0100               	movlb	0	; () banked
  5534  0109F6  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5535  0109F8  A4D8               	btfss	status,2,c
  5536  0109FA  0012               	return	
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;inc\CANlib.h: 1038: {
  5540                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5541  0109FC  010F               	movlb	15	; () banked
  5542  0109FE  8715               	bsf	21,3,b	;volatile
  5543                           
  5544                           ; BSR set to: 15
  5545                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5546  010A00  0100               	movlb	0	; () banked
  5547  010A02  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5548  010A04  0100               	movlb	0	; () banked
  5549  010A06  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5550  010A08  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5551  010A0A  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5552  010A0C  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5556  010A0E  C07C  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5560  010A12  0E00               	movlw	0
  5561  010A14  0100               	movlb	0	; () banked
  5562  010A16  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5563  010A18  0100               	movlb	0	; () banked
  5564  010A1A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5565  010A1C  0EFF               	movlw	255
  5566  010A1E  0100               	movlb	0	; () banked
  5567  010A20  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5568  010A22  0100               	movlb	0	; () banked
  5569  010A24  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5570  010A26  0E00               	movlw	0
  5571  010A28  0100               	movlb	0	; () banked
  5572  010A2A  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5573  010A2C  0100               	movlb	0	; () banked
  5574  010A2E  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5575  010A30  0E00               	movlw	0
  5576  010A32  0100               	movlb	0	; () banked
  5577  010A34  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5578  010A36  0100               	movlb	0	; () banked
  5579  010A38  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5583  010A3A  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5584  010A3E  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5585  010A42  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5586  010A46  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5587  010A4A  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5588  010A4E  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5589  010A52  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5590  010A56  0100               	movlb	0	; () banked
  5591  010A58  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5592  010A5A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5593  010A5E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5594  010A62  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5595  010A66  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5599  010A6A  C07C  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5603  010A6E  0100               	movlb	0	; () banked
  5604  010A70  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5605  010A72  D003               	goto	l530
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5609  010A74  010F               	movlb	15	; () banked
  5610  010A76  8115               	bsf	21,0,b	;volatile
  5611  010A78  D002               	goto	l531
  5612  010A7A                     l530:
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;inc\CANlib.h: 1050: else
  5616                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5617  010A7A  010F               	movlb	15	; () banked
  5618  010A7C  9115               	bcf	21,0,b	;volatile
  5619  010A7E                     l531:
  5620                           
  5621                           ; BSR set to: 15
  5622                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5623  010A7E  0100               	movlb	0	; () banked
  5624  010A80  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5625  010A82  D003               	goto	l532
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5629  010A84  010F               	movlb	15	; () banked
  5630  010A86  8315               	bsf	21,1,b	;volatile
  5631  010A88  D002               	goto	l533
  5632  010A8A                     l532:
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;inc\CANlib.h: 1055: else
  5636                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5637  010A8A  010F               	movlb	15	; () banked
  5638  010A8C  9315               	bcf	21,1,b	;volatile
  5639  010A8E                     l533:
  5640                           
  5641                           ; BSR set to: 15
  5642                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5643  010A8E  0100               	movlb	0	; () banked
  5644  010A90  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5645  010A92  D003               	goto	l534
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5649  010A94  010F               	movlb	15	; () banked
  5650  010A96  8B15               	bsf	21,5,b	;volatile
  5651  010A98  D002               	goto	l535
  5652  010A9A                     l534:
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;inc\CANlib.h: 1060: else
  5656                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5657  010A9A  010F               	movlb	15	; () banked
  5658  010A9C  9B15               	bcf	21,5,b	;volatile
  5659  010A9E                     l535:
  5660                           
  5661                           ; BSR set to: 15
  5662                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5663  010A9E  0100               	movlb	0	; () banked
  5664  010AA0  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5665  010AA2  D003               	goto	l536
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5669  010AA4  010F               	movlb	15	; () banked
  5670  010AA6  8D15               	bsf	21,6,b	;volatile
  5671  010AA8  D002               	goto	l537
  5672  010AAA                     l536:
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;inc\CANlib.h: 1065: else
  5676                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5677  010AAA  010F               	movlb	15	; () banked
  5678  010AAC  9D15               	bcf	21,6,b	;volatile
  5679  010AAE                     l537:
  5680                           
  5681                           ; BSR set to: 15
  5682                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5683  010AAE  0100               	movlb	0	; () banked
  5684  010AB0  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5685  010AB2  D003               	goto	l538
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5689  010AB4  010F               	movlb	15	; () banked
  5690  010AB6  8F15               	bsf	21,7,b	;volatile
  5691  010AB8  D002               	goto	l5559
  5692  010ABA                     l538:
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;inc\CANlib.h: 1070: else
  5696                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5697  010ABA  010F               	movlb	15	; () banked
  5698  010ABC  9F15               	bcf	21,7,b	;volatile
  5699  010ABE                     l5559:
  5700                           
  5701                           ; BSR set to: 15
  5702                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5703  010ABE  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5704  010AC2  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5705  010AC6  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5706  010ACA  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5707  010ACE  0E16               	movlw	22
  5708  010AD0  D006               	goto	u6740
  5709  010AD2                     u6745:
  5710  010AD2  0100               	movlb	0	; () banked
  5711  010AD4  90D8               	bcf	status,0,c
  5712  010AD6  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5713  010AD8  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5714  010ADA  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5715  010ADC  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5716  010ADE                     u6740:
  5717  010ADE  2EE8               	decfsz	wreg,f,c
  5718  010AE0  D7F8               	goto	u6745
  5719  010AE2  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5720  010AE6  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5721  010AEA  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5722  010AEE  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5726  010AF2  0100               	movlb	0	; () banked
  5727  010AF4  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5728  010AF6  0100               	movlb	0	; () banked
  5729  010AF8  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5730  010AFA  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5731  010AFC  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5732  010AFE  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5736  010B00  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5737  010B04  0012               	return	
  5738  010B06                     __end_of_CANSetFilter:
  5739                           	opt stack 0
  5740                           tblptru	equ	0xFF8
  5741                           tblptrh	equ	0xFF7
  5742                           tblptrl	equ	0xFF6
  5743                           tablat	equ	0xFF5
  5744                           intcon	equ	0xFF2
  5745                           postinc0	equ	0xFEE
  5746                           wreg	equ	0xFE8
  5747                           status	equ	0xFD8
  5748                           
  5749 ;; *************** function _CANOperationMode *****************
  5750 ;; Defined at:
  5751 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  mode            1    wreg     enum E16881
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  mode            1   18[BANK0 ] enum E16881
  5756 ;; Return value:  Size  Location     Type
  5757 ;;		None               void
  5758 ;; Registers used:
  5759 ;;		wreg, status,2, status,0
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5768 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5769 ;;Total ram usage:        1 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; Hardware stack levels required when called:    3
  5772 ;; This function calls:
  5773 ;;		Nothing
  5774 ;; This function is called by:
  5775 ;;		_CANInitialize
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text5
  5780  0161A2                     __ptext5:
  5781                           	opt stack 0
  5782  0161A2                     _CANOperationMode:
  5783                           	opt stack 25
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;incstack = 0
  5787                           ;CANOperationMode@mode stored from wreg
  5788  0161A2  0100               	movlb	0	; () banked
  5789  0161A4  6F72               	movwf	CANOperationMode@mode& (0+255),b
  5790                           
  5791                           ;inc\CANlib.h: 208: CANCON = mode;
  5792  0161A6  C072  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5793  0161AA                     l5155:
  5794  0161AA  506E               	movf	3950,w,c	;volatile
  5795  0161AC  0BE0               	andlw	224
  5796  0161AE  0100               	movlb	0	; () banked
  5797  0161B0  1972               	xorwf	CANOperationMode@mode& (0+255),w,b
  5798  0161B2  B4D8               	btfsc	status,2,c
  5799  0161B4  0012               	return	
  5800  0161B6  D7F9               	goto	l5155
  5801  0161B8                     __end_of_CANOperationMode:
  5802                           	opt stack 0
  5803                           tblptru	equ	0xFF8
  5804                           tblptrh	equ	0xFF7
  5805                           tblptrl	equ	0xFF6
  5806                           tablat	equ	0xFF5
  5807                           intcon	equ	0xFF2
  5808                           postinc0	equ	0xFEE
  5809                           wreg	equ	0xFE8
  5810                           status	equ	0xFD8
  5811                           
  5812 ;; *************** function _PWR_Button_Polling *****************
  5813 ;; Defined at:
  5814 ;;		line 420 in file "RemoteCan.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;		None
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;		None
  5819 ;; Return value:  Size  Location     Type
  5820 ;;		None               void
  5821 ;; Registers used:
  5822 ;;		None
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;Total ram usage:        0 bytes
  5833 ;; Hardware stack levels used:    1
  5834 ;; Hardware stack levels required when called:    3
  5835 ;; This function calls:
  5836 ;;		Nothing
  5837 ;; This function is called by:
  5838 ;;		_main
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           	psect	text6
  5843  016132                     __ptext6:
  5844                           	opt stack 0
  5845  016132                     _PWR_Button_Polling:
  5846                           	opt stack 27
  5847                           
  5848                           ;RemoteCan.c: 421: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;incstack = 0
  5852  016132  AA81               	btfss	3969,5,c	;volatile
  5853  016134  D002               	goto	l862
  5854  016136  B44C               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5855  016138  0012               	return	
  5856  01613A                     l862:
  5857                           
  5858                           ;RemoteCan.c: 422: wait_low_1 = 0;
  5859  01613A  944C               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5860                           
  5861                           ;RemoteCan.c: 423: if (PORTBbits.RB5 == 1) {
  5862  01613C  AA81               	btfss	3969,5,c	;volatile
  5863  01613E  0012               	return	
  5864                           
  5865                           ;RemoteCan.c: 424: power_switch = ~power_switch;
  5866  016140  B04C               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5867  016142  D002               	goto	u8700
  5868  016144  804C               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5869  016146  D001               	goto	u8715
  5870  016148                     u8700:
  5871  016148  904C               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5872  01614A                     u8715:
  5873                           
  5874                           ;RemoteCan.c: 425: wait_low_1 = 1;
  5875  01614A  844C               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5876  01614C  0012               	return	
  5877  01614E                     __end_of_PWR_Button_Polling:
  5878                           	opt stack 0
  5879                           tblptru	equ	0xFF8
  5880                           tblptrh	equ	0xFF7
  5881                           tblptrl	equ	0xFF6
  5882                           tablat	equ	0xFF5
  5883                           intcon	equ	0xFF2
  5884                           postinc0	equ	0xFEE
  5885                           wreg	equ	0xFE8
  5886                           status	equ	0xFD8
  5887                           
  5888 ;; *************** function _LCD_Handler *****************
  5889 ;; Defined at:
  5890 ;;		line 320 in file "RemoteCan.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;		None
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;		None
  5895 ;; Return value:  Size  Location     Type
  5896 ;;		None               void
  5897 ;; Registers used:
  5898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5908 ;;Total ram usage:        0 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; Hardware stack levels required when called:   10
  5911 ;; This function calls:
  5912 ;;		_CANisTxReady
  5913 ;;		_CANsendMessage
  5914 ;;		_LCD_clear
  5915 ;;		_LCD_goto_line
  5916 ;;		_LCD_goto_xy
  5917 ;;		_LCD_initialize
  5918 ;;		_LCD_write_integer
  5919 ;;		_LCD_write_message
  5920 ;;		_LCD_write_string
  5921 ;;		___fldiv
  5922 ;;		___xxtofl
  5923 ;;		_sprintf
  5924 ;; This function is called by:
  5925 ;;		_main
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           
  5929                           	psect	text7
  5930  014B62                     __ptext7:
  5931                           	opt stack 0
  5932  014B62                     _LCD_Handler:
  5933                           	opt stack 20
  5934  014B62                     l8753:
  5935  014B62  EC67  F0B0         	call	_CANisTxReady	;wreg free
  5936  014B66  06E8               	decf	wreg,f,c
  5937  014B68  A4D8               	btfss	status,2,c
  5938  014B6A  D7FB               	goto	l8753
  5939                           
  5940                           ;RemoteCan.c: 323: CANsendMessage(0b00000000110, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5941  014B6C  0E06               	movlw	6
  5942  014B6E  0100               	movlb	0	; () banked
  5943  014B70  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  5944  014B72  0E00               	movlw	0
  5945  014B74  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5946  014B76  0E00               	movlw	0
  5947  014B78  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5948  014B7A  0E00               	movlw	0
  5949  014B7C  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5950  014B7E  0EE6               	movlw	low _data_speed
  5951  014B80  0100               	movlb	0	; () banked
  5952  014B82  6F76               	movwf	CANsendMessage@data& (0+255),b
  5953  014B84  0E00               	movlw	high _data_speed
  5954  014B86  0100               	movlb	0	; () banked
  5955  014B88  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  5956  014B8A  0E08               	movlw	8
  5957  014B8C  0100               	movlb	0	; () banked
  5958  014B8E  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  5959  014B90  0EFC               	movlw	252
  5960  014B92  0100               	movlb	0	; () banked
  5961  014B94  6F79               	movwf	CANsendMessage@flags& (0+255),b
  5962  014B96  ECCD  F089         	call	_CANsendMessage	;wreg free
  5963                           
  5964                           ;RemoteCan.c: 325: actual_speed_kmh = ((actual_speed) / 278.0);
  5965  014B9A  C0D8  F072         	movff	_actual_speed,___xxtofl@val
  5966  014B9E  C0D9  F073         	movff	_actual_speed+1,___xxtofl@val+1
  5967  014BA2  0100               	movlb	0	; () banked
  5968  014BA4  6B74               	clrf	(___xxtofl@val+2)& (0+255),b
  5969  014BA6  6B75               	clrf	(___xxtofl@val+3)& (0+255),b
  5970  014BA8  0E00               	movlw	0
  5971  014BAA  EC07  F0A3         	call	___xxtofl
  5972  014BAE  C072  F080         	movff	?___xxtofl,___fldiv@b
  5973  014BB2  C073  F081         	movff	?___xxtofl+1,___fldiv@b+1
  5974  014BB6  C074  F082         	movff	?___xxtofl+2,___fldiv@b+2
  5975  014BBA  C075  F083         	movff	?___xxtofl+3,___fldiv@b+3
  5976  014BBE  0E00               	movlw	0
  5977  014BC0  0100               	movlb	0	; () banked
  5978  014BC2  6F84               	movwf	___fldiv@a& (0+255),b
  5979  014BC4  0E00               	movlw	0
  5980  014BC6  6F85               	movwf	(___fldiv@a+1)& (0+255),b
  5981  014BC8  0E8B               	movlw	139
  5982  014BCA  6F86               	movwf	(___fldiv@a+2)& (0+255),b
  5983  014BCC  0E43               	movlw	67
  5984  014BCE  6F87               	movwf	(___fldiv@a+3)& (0+255),b
  5985  014BD0  ECDD  F09D         	call	___fldiv	;wreg free
  5986  014BD4  C080  F00E         	movff	?___fldiv,_actual_speed_kmh
  5987  014BD8  C081  F00F         	movff	?___fldiv+1,_actual_speed_kmh+1
  5988  014BDC  C082  F010         	movff	?___fldiv+2,_actual_speed_kmh+2
  5989  014BE0  C083  F011         	movff	?___fldiv+3,_actual_speed_kmh+3
  5990                           
  5991                           ;RemoteCan.c: 326: sprintf(str, "%.2f", actual_speed_kmh);
  5992  014BE4  0E38               	movlw	low _str
  5993  014BE6  0101               	movlb	1	; () banked
  5994  014BE8  6F00               	movwf	sprintf@sp& (0+255),b
  5995  014BEA  0E01               	movlw	high _str
  5996  014BEC  0101               	movlb	1	; () banked
  5997  014BEE  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  5998  014BF0  0EFA               	movlw	low STR_5
  5999  014BF2  0101               	movlb	1	; () banked
  6000  014BF4  6F02               	movwf	sprintf@f& (0+255),b
  6001  014BF6  0EFF               	movlw	high STR_5
  6002  014BF8  0101               	movlb	1	; () banked
  6003  014BFA  6F03               	movwf	(sprintf@f+1)& (0+255),b
  6004  014BFC  C00E  F104         	movff	_actual_speed_kmh,?_sprintf+4
  6005  014C00  C00F  F105         	movff	_actual_speed_kmh+1,?_sprintf+5
  6006  014C04  C010  F106         	movff	_actual_speed_kmh+2,?_sprintf+6
  6007  014C08  C011  F107         	movff	_actual_speed_kmh+3,?_sprintf+7
  6008  014C0C  EC83  F085         	call	_sprintf	;wreg free
  6009                           
  6010                           ;RemoteCan.c: 327: str[11] = '\0';
  6011  014C10  0E00               	movlw	0
  6012  014C12  0101               	movlb	1	; () banked
  6013  014C14  6F43               	movwf	(_str+11)& (0+255),b
  6014                           
  6015                           ; BSR set to: 1
  6016                           ;RemoteCan.c: 329: if (display_refresh == 1) {
  6017  014C16  AC4B               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6018  014C18  D032               	goto	l8781
  6019                           
  6020                           ; BSR set to: 1
  6021                           ;RemoteCan.c: 330: LCD_initialize(16);
  6022  014C1A  0E10               	movlw	16
  6023  014C1C  EC9F  F0A9         	call	_LCD_initialize
  6024                           
  6025                           ;RemoteCan.c: 331: LCD_clear();
  6026  014C20  EC26  F0B0         	call	_LCD_clear	;wreg free
  6027                           
  6028                           ;RemoteCan.c: 332: LCD_goto_line(1);
  6029  014C24  0E01               	movlw	1
  6030  014C26  ECDC  F0AA         	call	_LCD_goto_line
  6031                           
  6032                           ;RemoteCan.c: 333: LCD_write_message("=== VEHICLE DATA ===");
  6033  014C2A  0E6F               	movlw	low STR_6
  6034  014C2C  0100               	movlb	0	; () banked
  6035  014C2E  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6036  014C30  0EFF               	movlw	high STR_6
  6037  014C32  0100               	movlb	0	; () banked
  6038  014C34  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6039  014C36  ECF3  F0AF         	call	_LCD_write_message	;wreg free
  6040                           
  6041                           ;RemoteCan.c: 334: LCD_goto_line(2);
  6042  014C3A  0E02               	movlw	2
  6043  014C3C  ECDC  F0AA         	call	_LCD_goto_line
  6044                           
  6045                           ;RemoteCan.c: 335: LCD_write_message("Direction: ");
  6046  014C40  0EB8               	movlw	low STR_7
  6047  014C42  0100               	movlb	0	; () banked
  6048  014C44  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6049  014C46  0EFF               	movlw	high STR_7
  6050  014C48  0100               	movlb	0	; () banked
  6051  014C4A  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6052  014C4C  ECF3  F0AF         	call	_LCD_write_message	;wreg free
  6053                           
  6054                           ;RemoteCan.c: 336: LCD_goto_line(3);
  6055  014C50  0E03               	movlw	3
  6056  014C52  ECDC  F0AA         	call	_LCD_goto_line
  6057                           
  6058                           ;RemoteCan.c: 337: LCD_write_message("Speed: 0.00 Km/h");
  6059  014C56  0E99               	movlw	low STR_8
  6060  014C58  0100               	movlb	0	; () banked
  6061  014C5A  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6062  014C5C  0EFF               	movlw	high STR_8
  6063  014C5E  0100               	movlb	0	; () banked
  6064  014C60  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6065  014C62  ECF3  F0AF         	call	_LCD_write_message	;wreg free
  6066                           
  6067                           ;RemoteCan.c: 338: LCD_goto_line(4);
  6068  014C66  0E04               	movlw	4
  6069  014C68  ECDC  F0AA         	call	_LCD_goto_line
  6070                           
  6071                           ;RemoteCan.c: 342: LCD_write_message("Data: ");
  6072                           
  6073                           ;RemoteCan.c: 341: } else {
  6074                           
  6075                           ;RemoteCan.c: 340: LCD_write_message("Park assist: ");
  6076                           
  6077                           ;RemoteCan.c: 339: if (1 == 0) {
  6078  014C6C  0EE4               	movlw	low STR_10
  6079  014C6E  0100               	movlb	0	; () banked
  6080  014C70  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6081  014C72  0EFF               	movlw	high STR_10
  6082  014C74  0100               	movlb	0	; () banked
  6083  014C76  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6084  014C78  ECF3  F0AF         	call	_LCD_write_message	;wreg free
  6085                           
  6086                           ;RemoteCan.c: 343: }
  6087                           ;RemoteCan.c: 344: display_refresh = 0;
  6088  014C7C  9C4B               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6089  014C7E                     l8781:
  6090                           
  6091                           ;RemoteCan.c: 345: }
  6092                           ;RemoteCan.c: 348: LCD_goto_xy(12, 2);
  6093  014C7E  0E02               	movlw	2
  6094  014C80  0100               	movlb	0	; () banked
  6095  014C82  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  6096  014C84  0E0C               	movlw	12
  6097  014C86  ECA7  F0B0         	call	_LCD_goto_xy
  6098                           
  6099                           ;RemoteCan.c: 349: if (switch_position != 0) {
  6100  014C8A  0100               	movlb	0	; () banked
  6101  014C8C  51E2               	movf	_switch_position& (0+255),w,b	;volatile
  6102  014C8E  B4D8               	btfsc	status,2,c
  6103  014C90  D016               	goto	l8791
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;RemoteCan.c: 350: if (dir == 1) {
  6107  014C92  0100               	movlb	0	; () banked
  6108  014C94  05E0               	decf	_dir& (0+255),w,b	;volatile
  6109  014C96  A4D8               	btfss	status,2,c
  6110  014C98  D009               	goto	l8789
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;RemoteCan.c: 351: LCD_write_message("FWD ");
  6114  014C9A  0EF0               	movlw	low STR_11
  6115  014C9C  0100               	movlb	0	; () banked
  6116  014C9E  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6117  014CA0  0EFF               	movlw	high STR_11
  6118  014CA2  0100               	movlb	0	; () banked
  6119  014CA4  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6120  014CA6  ECF3  F0AF         	call	_LCD_write_message	;wreg free
  6121                           
  6122                           ;RemoteCan.c: 352: } else {
  6123  014CAA  D011               	goto	l8793
  6124  014CAC                     l8789:
  6125                           
  6126                           ;RemoteCan.c: 353: LCD_write_message("BKWD");
  6127  014CAC  0EF5               	movlw	low STR_12
  6128  014CAE  0100               	movlb	0	; () banked
  6129  014CB0  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6130  014CB2  0EFF               	movlw	high STR_12
  6131  014CB4  0100               	movlb	0	; () banked
  6132  014CB6  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6133  014CB8  ECF3  F0AF         	call	_LCD_write_message	;wreg free
  6134                           
  6135                           ;RemoteCan.c: 354: }
  6136                           ;RemoteCan.c: 355: } else {
  6137  014CBC  D008               	goto	l8793
  6138  014CBE                     l8791:
  6139                           
  6140                           ;RemoteCan.c: 356: LCD_write_message("P   ");
  6141  014CBE  0EEB               	movlw	low STR_13
  6142  014CC0  0100               	movlb	0	; () banked
  6143  014CC2  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6144  014CC4  0EFF               	movlw	high STR_13
  6145  014CC6  0100               	movlb	0	; () banked
  6146  014CC8  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6147  014CCA  ECF3  F0AF         	call	_LCD_write_message	;wreg free
  6148  014CCE                     l8793:
  6149                           
  6150                           ;RemoteCan.c: 357: }
  6151                           ;RemoteCan.c: 360: LCD_goto_xy(8, 3);
  6152  014CCE  0E03               	movlw	3
  6153  014CD0  0100               	movlb	0	; () banked
  6154  014CD2  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  6155  014CD4  0E08               	movlw	8
  6156  014CD6  ECA7  F0B0         	call	_LCD_goto_xy
  6157                           
  6158                           ;RemoteCan.c: 361: LCD_write_string(str);
  6159  014CDA  0E38               	movlw	low _str
  6160  014CDC  0100               	movlb	0	; () banked
  6161  014CDE  6F83               	movwf	LCD_write_string@buffer& (0+255),b
  6162  014CE0  0E01               	movlw	high _str
  6163  014CE2  0100               	movlb	0	; () banked
  6164  014CE4  6F84               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  6165  014CE6  EC54  F0B0         	call	_LCD_write_string	;wreg free
  6166                           
  6167                           ;RemoteCan.c: 381: LCD_goto_xy(7, 4);
  6168                           
  6169                           ;RemoteCan.c: 377: }
  6170                           ;RemoteCan.c: 378: }
  6171                           ;RemoteCan.c: 379: } else {
  6172                           
  6173                           ;RemoteCan.c: 376: LCD_write_message("PARKING");
  6174                           
  6175                           ;RemoteCan.c: 374: }
  6176                           ;RemoteCan.c: 375: } else {
  6177                           
  6178                           ;RemoteCan.c: 373: LCD_write_message("FOUND! ");
  6179                           
  6180                           ;RemoteCan.c: 372: } else {
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;RemoteCan.c: 371: LCD_write_message("SEARCH ");
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;RemoteCan.c: 370: if (space_available == 0) {
  6187                           
  6188                           ;RemoteCan.c: 369: if (parking_state == 1) {
  6189                           
  6190                           ;RemoteCan.c: 368: } else {
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;RemoteCan.c: 367: LCD_write_message("OFF    ");
  6194                           
  6195                           ;RemoteCan.c: 366: if (parking_state == 0) {
  6196                           
  6197                           ;RemoteCan.c: 365: LCD_goto_xy(14, 4);
  6198                           
  6199                           ;RemoteCan.c: 363: if (1 == 0) {
  6200  014CEA  0E04               	movlw	4
  6201  014CEC  0100               	movlb	0	; () banked
  6202  014CEE  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  6203  014CF0  0E07               	movlw	7
  6204  014CF2  ECA7  F0B0         	call	_LCD_goto_xy
  6205                           
  6206                           ;RemoteCan.c: 382: LCD_write_integer(user_data, 0, 0x01);
  6207  014CF6  C0DE  F08A         	movff	_user_data,LCD_write_integer@value
  6208  014CFA  C0DF  F08B         	movff	_user_data+1,LCD_write_integer@value+1
  6209  014CFE  0E00               	movlw	0
  6210  014D00  0100               	movlb	0	; () banked
  6211  014D02  6F8C               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  6212  014D04  0E01               	movlw	1
  6213  014D06  0100               	movlb	0	; () banked
  6214  014D08  6F8D               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  6215  014D0A  ECD1  F0A4         	call	_LCD_write_integer	;wreg free
  6216  014D0E  0012               	return	
  6217  014D10                     __end_of_LCD_Handler:
  6218                           	opt stack 0
  6219                           tblptru	equ	0xFF8
  6220                           tblptrh	equ	0xFF7
  6221                           tblptrl	equ	0xFF6
  6222                           tablat	equ	0xFF5
  6223                           intcon	equ	0xFF2
  6224                           postinc0	equ	0xFEE
  6225                           wreg	equ	0xFE8
  6226                           status	equ	0xFD8
  6227                           
  6228 ;; *************** function _sprintf *****************
  6229 ;; Defined at:
  6230 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;  sp              2    0[BANK1 ] PTR unsigned char 
  6233 ;;		 -> str(12), 
  6234 ;;  f               2    2[BANK1 ] PTR const unsigned char 
  6235 ;;		 -> STR_5(5), 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;  fval            4   28[BANK1 ] PTR const unsigned char 
  6238 ;;  tmpval          4   22[BANK1 ] struct .
  6239 ;;  val             4   16[BANK1 ] unsigned long 
  6240 ;;  cp              3    0        PTR const unsigned char 
  6241 ;;  prec            2   26[BANK1 ] int 
  6242 ;;  exp             2   20[BANK1 ] int 
  6243 ;;  flag            2   14[BANK1 ] unsigned short 
  6244 ;;  ap              2   12[BANK1 ] PTR void [1]
  6245 ;;		 -> ?_sprintf(2), 
  6246 ;;  len             2    0        unsigned int 
  6247 ;;  width           2    0        int 
  6248 ;;  c               1   32[BANK1 ] char 
  6249 ;;  d               1    0        unsigned char 
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  2    0[BANK1 ] int 
  6252 ;; Registers used:
  6253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6259 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6260 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6262 ;;      Totals:         0       2      33       0       0       0       0       0       0       0       0       0       
      +0       0
  6263 ;;Total ram usage:       35 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; Hardware stack levels required when called:    5
  6266 ;; This function calls:
  6267 ;;		___awdiv
  6268 ;;		___fladd
  6269 ;;		___flge
  6270 ;;		___flmul
  6271 ;;		___flneg
  6272 ;;		___flsub
  6273 ;;		___fltol
  6274 ;;		___lldiv
  6275 ;;		___llmod
  6276 ;;		___wmul
  6277 ;;		___xxtofl
  6278 ;;		__div_to_l_
  6279 ;;		__tdiv_to_l_
  6280 ;;		_fround
  6281 ;;		_isdigit
  6282 ;;		_scale
  6283 ;; This function is called by:
  6284 ;;		_LCD_Handler
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           	psect	text8
  6289  010B06                     __ptext8:
  6290                           	opt stack 0
  6291  010B06                     _sprintf:
  6292                           	opt stack 24
  6293                           
  6294                           ;doprnt.c: 494: va_list ap;
  6295                           ;doprnt.c: 499: signed char c;
  6296                           ;doprnt.c: 501: int width;
  6297                           ;doprnt.c: 504: int prec;
  6298                           ;doprnt.c: 508: unsigned short flag;
  6299                           ;doprnt.c: 515: char d;
  6300                           ;doprnt.c: 516: double fval;
  6301                           ;doprnt.c: 517: int exp;
  6302                           ;doprnt.c: 523: union {
  6303                           ;doprnt.c: 524: unsigned long vd;
  6304                           ;doprnt.c: 525: double integ;
  6305                           ;doprnt.c: 526: } tmpval;
  6306                           ;doprnt.c: 528: unsigned long val;
  6307                           ;doprnt.c: 529: unsigned len;
  6308                           ;doprnt.c: 530: const char * cp;
  6309                           ;doprnt.c: 533: *ap = __va_start();
  6310                           
  6311                           ;incstack = 0
  6312  010B06  0E04               	movlw	low (?_sprintf+4)
  6313  010B08  0101               	movlb	1	; () banked
  6314  010B0A  6F0C               	movwf	sprintf@ap& (0+255),b
  6315  010B0C  0E01               	movlw	high (?_sprintf+4)
  6316  010B0E  0101               	movlb	1	; () banked
  6317  010B10  6F0D               	movwf	(sprintf@ap+1)& (0+255),b
  6318                           
  6319                           ;doprnt.c: 536: while(c = *f++) {
  6320  010B12  EFB5  F089         	goto	l8675
  6321  010B16                     l8477:
  6322                           
  6323                           ; BSR set to: 1
  6324                           ;doprnt.c: 538: if(c != '%')
  6325  010B16  0E25               	movlw	37
  6326  010B18  0101               	movlb	1	; () banked
  6327  010B1A  1920               	xorwf	sprintf@c& (0+255),w,b
  6328  010B1C  B4D8               	btfsc	status,2,c
  6329  010B1E  D008               	goto	l8483
  6330                           
  6331                           ; BSR set to: 1
  6332                           ;doprnt.c: 540: {
  6333                           ;doprnt.c: 541: ((*sp++ = (c)));
  6334  010B20  C100  FFD9         	movff	sprintf@sp,fsr2l
  6335  010B24  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  6336  010B28  C120  FFDF         	movff	sprintf@c,indf2
  6337  010B2C  EFB2  F089         	goto	l8673
  6338  010B30                     l8483:
  6339                           
  6340                           ; BSR set to: 1
  6341                           ;doprnt.c: 543: }
  6342                           ;doprnt.c: 548: flag = 0;
  6343  010B30  0E00               	movlw	0
  6344  010B32  0101               	movlb	1	; () banked
  6345  010B34  6F0F               	movwf	(sprintf@flag+1)& (0+255),b
  6346  010B36  0E00               	movlw	0
  6347  010B38  6F0E               	movwf	sprintf@flag& (0+255),b
  6348                           
  6349                           ; BSR set to: 1
  6350                           ;doprnt.c: 611: if(*f == '.') {
  6351  010B3A  C102  FFF6         	movff	sprintf@f,tblptrl
  6352  010B3E  C103  FFF7         	movff	sprintf@f+1,tblptrh
  6353  010B42                     	if	0	;tblptru may be non-zero
  6354  010B42                     	endif
  6355  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6356  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  6357  010B44  6EF8               	movwf	tblptru,c
  6358  010B46                     	endif
  6359  010B46  0008               	tblrd		*
  6360  010B48  50F5               	movf	tablat,w,c
  6361  010B4A  0A2E               	xorlw	46
  6362  010B4C  A4D8               	btfss	status,2,c
  6363  010B4E  D03D               	goto	l8497
  6364                           
  6365                           ; BSR set to: 1
  6366                           ;doprnt.c: 612: flag |= 0x4000;
  6367  010B50  0101               	movlb	1	; () banked
  6368  010B52  8D0F               	bsf	(sprintf@flag+1)& (0+255),6,b
  6369                           
  6370                           ;doprnt.c: 613: f++;
  6371  010B54  0101               	movlb	1	; () banked
  6372  010B56  4B02               	infsnz	sprintf@f& (0+255),f,b
  6373  010B58  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  6374                           
  6375                           ; BSR set to: 1
  6376                           ;doprnt.c: 620: {
  6377                           ;doprnt.c: 621: prec = 0;
  6378  010B5A  0E00               	movlw	0
  6379  010B5C  0101               	movlb	1	; () banked
  6380  010B5E  6F1B               	movwf	(sprintf@prec+1)& (0+255),b
  6381  010B60  0E00               	movlw	0
  6382  010B62  6F1A               	movwf	sprintf@prec& (0+255),b
  6383                           
  6384                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6385  010B64  D025               	goto	l8495
  6386  010B66                     l8491:
  6387                           
  6388                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6389  010B66  C11A  F072         	movff	sprintf@prec,___wmul@multiplier
  6390  010B6A  C11B  F073         	movff	sprintf@prec+1,___wmul@multiplier+1
  6391  010B6E  0E00               	movlw	0
  6392  010B70  0100               	movlb	0	; () banked
  6393  010B72  6F75               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6394  010B74  0E0A               	movlw	10
  6395  010B76  6F74               	movwf	___wmul@multiplicand& (0+255),b
  6396  010B78  ECD8  F0AF         	call	___wmul	;wreg free
  6397  010B7C  C102  FFF6         	movff	sprintf@f,tblptrl
  6398  010B80  C103  FFF7         	movff	sprintf@f+1,tblptrh
  6399  010B84                     	if	0	;tblptru may be non-zero
  6400  010B84                     	endif
  6401  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6402  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  6403  010B86  6EF8               	movwf	tblptru,c
  6404  010B88                     	endif
  6405  010B88  0008               	tblrd		*
  6406  010B8A  50F5               	movf	tablat,w,c
  6407  010B8C  0100               	movlb	0	; () banked
  6408  010B8E  2772               	addwf	?___wmul& (0+255),f,b
  6409  010B90  0E00               	movlw	0
  6410  010B92  0100               	movlb	0	; () banked
  6411  010B94  2373               	addwfc	(?___wmul+1)& (0+255),f,b
  6412  010B96  0ED0               	movlw	208
  6413  010B98  0100               	movlb	0	; () banked
  6414  010B9A  2572               	addwf	?___wmul& (0+255),w,b
  6415  010B9C  0101               	movlb	1	; () banked
  6416  010B9E  6F1A               	movwf	sprintf@prec& (0+255),b
  6417  010BA0  0EFF               	movlw	255
  6418  010BA2  0100               	movlb	0	; () banked
  6419  010BA4  2173               	addwfc	(?___wmul+1)& (0+255),w,b
  6420  010BA6  0101               	movlb	1	; () banked
  6421  010BA8  6F1B               	movwf	(sprintf@prec+1)& (0+255),b
  6422                           
  6423                           ; BSR set to: 1
  6424  010BAA  0101               	movlb	1	; () banked
  6425  010BAC  4B02               	infsnz	sprintf@f& (0+255),f,b
  6426  010BAE  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  6427  010BB0                     l8495:
  6428                           
  6429                           ; BSR set to: 1
  6430  010BB0  C102  FFF6         	movff	sprintf@f,tblptrl
  6431  010BB4  C103  FFF7         	movff	sprintf@f+1,tblptrh
  6432  010BB8                     	if	0	;tblptru may be non-zero
  6433  010BB8                     	endif
  6434  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6435  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  6436  010BBA  6EF8               	movwf	tblptru,c
  6437  010BBC                     	endif
  6438  010BBC  0008               	tblrd		*
  6439  010BBE  50F5               	movf	tablat,w,c
  6440  010BC0  EC3F  F0B0         	call	_isdigit
  6441  010BC4  A0D8               	btfss	status,0,c
  6442  010BC6  D00C               	goto	l8505
  6443  010BC8  D7CE               	goto	l8491
  6444  010BCA                     l8497:
  6445                           
  6446                           ;doprnt.c: 626: prec = 0;
  6447  010BCA  0E00               	movlw	0
  6448  010BCC  0101               	movlb	1	; () banked
  6449  010BCE  6F1B               	movwf	(sprintf@prec+1)& (0+255),b
  6450  010BD0  0E00               	movlw	0
  6451  010BD2  6F1A               	movwf	sprintf@prec& (0+255),b
  6452                           
  6453                           ; BSR set to: 1
  6454                           ;doprnt.c: 628: flag |= 0x1000;
  6455  010BD4  0101               	movlb	1	; () banked
  6456  010BD6  890F               	bsf	(sprintf@flag+1)& (0+255),4,b
  6457                           
  6458                           ; BSR set to: 1
  6459                           ;doprnt.c: 630: }
  6460                           ;doprnt.c: 635: switch(c = *f++) {
  6461  010BD8  D003               	goto	l8505
  6462  010BDA                     l8501:
  6463                           
  6464                           ; BSR set to: 1
  6465                           ;doprnt.c: 663: flag |= 0x400;
  6466  010BDA  0101               	movlb	1	; () banked
  6467  010BDC  850F               	bsf	(sprintf@flag+1)& (0+255),2,b
  6468                           
  6469                           ;doprnt.c: 664: break;
  6470  010BDE  D015               	goto	l8507
  6471  010BE0                     l8505:
  6472  010BE0  C102  FFF6         	movff	sprintf@f,tblptrl
  6473  010BE4  C103  FFF7         	movff	sprintf@f+1,tblptrh
  6474  010BE8  0101               	movlb	1	; () banked
  6475  010BEA  4B02               	infsnz	sprintf@f& (0+255),f,b
  6476  010BEC  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  6477  010BEE                     	if	0	;tblptru may be non-zero
  6478  010BEE                     	endif
  6479  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6480  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  6481  010BF0  6EF8               	movwf	tblptru,c
  6482  010BF2                     	endif
  6483  010BF2  0008               	tblrd		*
  6484  010BF4  CFF5 F120          	movff	tablat,sprintf@c
  6485  010BF8  0101               	movlb	1	; () banked
  6486  010BFA  5120               	movf	sprintf@c& (0+255),w,b
  6487                           
  6488                           ; Switch size 1, requested type "space"
  6489                           ; Number of cases is 2, Range of values is 0 to 102
  6490                           ; switch strategies available:
  6491                           ; Name         Instructions Cycles
  6492                           ; simple_byte            7     4 (average)
  6493                           ;	Chosen strategy is simple_byte
  6494  010BFC  0A00               	xorlw	0	; case 0
  6495  010BFE  B4D8               	btfsc	status,2,c
  6496  010C00  D3C5               	goto	l8677
  6497  010C02  0A66               	xorlw	102	; case 102
  6498  010C04  B4D8               	btfsc	status,2,c
  6499  010C06  D7E9               	goto	l8501
  6500  010C08  D3B0               	goto	l8675
  6501  010C0A                     l8507:
  6502                           
  6503                           ; BSR set to: 1
  6504                           ;doprnt.c: 825: if(flag & (0x700)) {
  6505  010C0A  0E07               	movlw	7
  6506  010C0C  0101               	movlb	1	; () banked
  6507  010C0E  150F               	andwf	(sprintf@flag+1)& (0+255),w,b
  6508  010C10  B4D8               	btfsc	status,2,c
  6509  010C12  D353               	goto	l8655
  6510                           
  6511                           ; BSR set to: 1
  6512                           ;doprnt.c: 827: if(flag & 0x1000)
  6513  010C14  0101               	movlb	1	; () banked
  6514  010C16  A90F               	btfss	(sprintf@flag+1)& (0+255),4,b
  6515  010C18  D005               	goto	l8513
  6516                           
  6517                           ; BSR set to: 1
  6518                           ;doprnt.c: 829: prec = 6;
  6519  010C1A  0E00               	movlw	0
  6520  010C1C  0101               	movlb	1	; () banked
  6521  010C1E  6F1B               	movwf	(sprintf@prec+1)& (0+255),b
  6522  010C20  0E06               	movlw	6
  6523  010C22  6F1A               	movwf	sprintf@prec& (0+255),b
  6524  010C24                     l8513:
  6525                           
  6526                           ; BSR set to: 1
  6527                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6528  010C24  C10C  FFD9         	movff	sprintf@ap,fsr2l
  6529  010C28  C10D  FFDA         	movff	sprintf@ap+1,fsr2h
  6530  010C2C  CFDE F11C          	movff	postinc2,sprintf@fval
  6531  010C30  CFDE F11D          	movff	postinc2,sprintf@fval+1
  6532  010C34  CFDE F11E          	movff	postinc2,sprintf@fval+2
  6533  010C38  CFDE F11F          	movff	postinc2,sprintf@fval+3
  6534                           
  6535                           ; BSR set to: 1
  6536  010C3C  0E04               	movlw	4
  6537  010C3E  0101               	movlb	1	; () banked
  6538  010C40  270C               	addwf	sprintf@ap& (0+255),f,b
  6539  010C42  0E00               	movlw	0
  6540  010C44  230D               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6541                           
  6542                           ; BSR set to: 1
  6543                           ;doprnt.c: 831: if(fval < 0.0) {
  6544  010C46  0101               	movlb	1	; () banked
  6545  010C48  AF1F               	btfss	(sprintf@fval+3)& (0+255),7,b
  6546  010C4A  D015               	goto	l8523
  6547                           
  6548                           ; BSR set to: 1
  6549                           ;doprnt.c: 832: fval = -fval;
  6550  010C4C  C11C  F099         	movff	sprintf@fval,___flneg@f1
  6551  010C50  C11D  F09A         	movff	sprintf@fval+1,___flneg@f1+1
  6552  010C54  C11E  F09B         	movff	sprintf@fval+2,___flneg@f1+2
  6553  010C58  C11F  F09C         	movff	sprintf@fval+3,___flneg@f1+3
  6554  010C5C  ECBC  F0AF         	call	___flneg	;wreg free
  6555  010C60  C099  F11C         	movff	?___flneg,sprintf@fval
  6556  010C64  C09A  F11D         	movff	?___flneg+1,sprintf@fval+1
  6557  010C68  C09B  F11E         	movff	?___flneg+2,sprintf@fval+2
  6558  010C6C  C09C  F11F         	movff	?___flneg+3,sprintf@fval+3
  6559                           
  6560                           ;doprnt.c: 833: flag |= 0x03;
  6561  010C70  0E03               	movlw	3
  6562  010C72  0101               	movlb	1	; () banked
  6563  010C74  130E               	iorwf	sprintf@flag& (0+255),f,b
  6564  010C76                     l8523:
  6565                           
  6566                           ; BSR set to: 1
  6567                           ;doprnt.c: 834: }
  6568                           ;doprnt.c: 835: exp = 0;
  6569  010C76  0E00               	movlw	0
  6570  010C78  0101               	movlb	1	; () banked
  6571  010C7A  6F15               	movwf	(sprintf@exp+1)& (0+255),b
  6572  010C7C  0E00               	movlw	0
  6573  010C7E  6F14               	movwf	sprintf@exp& (0+255),b
  6574                           
  6575                           ; BSR set to: 1
  6576                           ;doprnt.c: 836: if( fval!=0) {
  6577  010C80  0101               	movlb	1	; () banked
  6578  010C82  511C               	movf	sprintf@fval& (0+255),w,b
  6579  010C84  0101               	movlb	1	; () banked
  6580  010C86  111D               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6581  010C88  0101               	movlb	1	; () banked
  6582  010C8A  111E               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6583  010C8C  0101               	movlb	1	; () banked
  6584  010C8E  111F               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6585  010C90  B4D8               	btfsc	status,2,c
  6586  010C92  D08E               	goto	l8551
  6587                           
  6588                           ; BSR set to: 1
  6589                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  6590  010C94  0101               	movlb	1	; () banked
  6591  010C96  351E               	rlcf	(sprintf@fval+2)& (0+255),w,b
  6592  010C98  351F               	rlcf	(sprintf@fval+3)& (0+255),w,b
  6593  010C9A  0F82               	addlw	130
  6594  010C9C  0101               	movlb	1	; () banked
  6595  010C9E  6F14               	movwf	sprintf@exp& (0+255),b
  6596  010CA0  0101               	movlb	1	; () banked
  6597  010CA2  6B15               	clrf	(sprintf@exp+1)& (0+255),b
  6598  010CA4  0EFF               	movlw	255
  6599  010CA6  2315               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6600                           
  6601                           ; BSR set to: 1
  6602                           ;doprnt.c: 838: exp--;
  6603  010CA8  0101               	movlb	1	; () banked
  6604  010CAA  0714               	decf	sprintf@exp& (0+255),f,b
  6605  010CAC  A0D8               	btfss	status,0,c
  6606  010CAE  0715               	decf	(sprintf@exp+1)& (0+255),f,b
  6607                           
  6608                           ; BSR set to: 1
  6609                           ;doprnt.c: 839: exp *= 3;
  6610  010CB0  C114  F072         	movff	sprintf@exp,___wmul@multiplier
  6611  010CB4  C115  F073         	movff	sprintf@exp+1,___wmul@multiplier+1
  6612  010CB8  0E00               	movlw	0
  6613  010CBA  0100               	movlb	0	; () banked
  6614  010CBC  6F75               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6615  010CBE  0E03               	movlw	3
  6616  010CC0  6F74               	movwf	___wmul@multiplicand& (0+255),b
  6617  010CC2  ECD8  F0AF         	call	___wmul	;wreg free
  6618  010CC6  C072  F114         	movff	?___wmul,sprintf@exp
  6619  010CCA  C073  F115         	movff	?___wmul+1,sprintf@exp+1
  6620                           
  6621                           ;doprnt.c: 840: exp /= 10;
  6622  010CCE  C114  F078         	movff	sprintf@exp,___awdiv@dividend
  6623  010CD2  C115  F079         	movff	sprintf@exp+1,___awdiv@dividend+1
  6624  010CD6  0E00               	movlw	0
  6625  010CD8  0100               	movlb	0	; () banked
  6626  010CDA  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  6627  010CDC  0E0A               	movlw	10
  6628  010CDE  6F7A               	movwf	___awdiv@divisor& (0+255),b
  6629  010CE0  EC52  F0AB         	call	___awdiv	;wreg free
  6630  010CE4  C078  F114         	movff	?___awdiv,sprintf@exp
  6631  010CE8  C079  F115         	movff	?___awdiv+1,sprintf@exp+1
  6632                           
  6633                           ;doprnt.c: 841: if(exp < 0)
  6634  010CEC  0101               	movlb	1	; () banked
  6635  010CEE  AF15               	btfss	(sprintf@exp+1)& (0+255),7,b
  6636  010CF0  D004               	goto	l8539
  6637                           
  6638                           ; BSR set to: 1
  6639                           ;doprnt.c: 842: exp--;
  6640  010CF2  0101               	movlb	1	; () banked
  6641  010CF4  0714               	decf	sprintf@exp& (0+255),f,b
  6642  010CF6  A0D8               	btfss	status,0,c
  6643  010CF8  0715               	decf	(sprintf@exp+1)& (0+255),f,b
  6644  010CFA                     l8539:
  6645                           
  6646                           ; BSR set to: 1
  6647                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6648  010CFA  0101               	movlb	1	; () banked
  6649  010CFC  5114               	movf	sprintf@exp& (0+255),w,b
  6650  010CFE  0800               	sublw	0
  6651  010D00  EC23  F094         	call	_scale
  6652  010D04  C099  F116         	movff	?_scale,sprintf@tmpval
  6653  010D08  C09A  F117         	movff	?_scale+1,sprintf@tmpval+1
  6654  010D0C  C09B  F118         	movff	?_scale+2,sprintf@tmpval+2
  6655  010D10  C09C  F119         	movff	?_scale+3,sprintf@tmpval+3
  6656                           
  6657                           ;doprnt.c: 847: tmpval.integ *= fval;
  6658  010D14  C116  F080         	movff	sprintf@tmpval,___flmul@b
  6659  010D18  C117  F081         	movff	sprintf@tmpval+1,___flmul@b+1
  6660  010D1C  C118  F082         	movff	sprintf@tmpval+2,___flmul@b+2
  6661  010D20  C119  F083         	movff	sprintf@tmpval+3,___flmul@b+3
  6662  010D24  C11C  F084         	movff	sprintf@fval,___flmul@a
  6663  010D28  C11D  F085         	movff	sprintf@fval+1,___flmul@a+1
  6664  010D2C  C11E  F086         	movff	sprintf@fval+2,___flmul@a+2
  6665  010D30  C11F  F087         	movff	sprintf@fval+3,___flmul@a+3
  6666  010D34  EC8A  F09B         	call	___flmul	;wreg free
  6667  010D38  C080  F116         	movff	?___flmul,sprintf@tmpval
  6668  010D3C  C081  F117         	movff	?___flmul+1,sprintf@tmpval+1
  6669  010D40  C082  F118         	movff	?___flmul+2,sprintf@tmpval+2
  6670  010D44  C083  F119         	movff	?___flmul+3,sprintf@tmpval+3
  6671                           
  6672                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6673  010D48  C116  F072         	movff	sprintf@tmpval,___flge@ff1
  6674  010D4C  C117  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  6675  010D50  C118  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  6676  010D54  C119  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  6677  010D58  0E00               	movlw	0
  6678  010D5A  0100               	movlb	0	; () banked
  6679  010D5C  6F76               	movwf	___flge@ff2& (0+255),b
  6680  010D5E  0E00               	movlw	0
  6681  010D60  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  6682  010D62  0E80               	movlw	128
  6683  010D64  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  6684  010D66  0E3F               	movlw	63
  6685  010D68  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  6686  010D6A  EC57  F0A7         	call	___flge	;wreg free
  6687  010D6E  0100               	movlb	0	; () banked
  6688  010D70  B0D8               	btfsc	status,0,c
  6689  010D72  D005               	goto	l8547
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;doprnt.c: 849: exp--;
  6693  010D74  0101               	movlb	1	; () banked
  6694  010D76  0714               	decf	sprintf@exp& (0+255),f,b
  6695  010D78  A0D8               	btfss	status,0,c
  6696  010D7A  0715               	decf	(sprintf@exp+1)& (0+255),f,b
  6697  010D7C  D019               	goto	l8551
  6698  010D7E                     l8547:
  6699                           
  6700                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6701  010D7E  C116  F072         	movff	sprintf@tmpval,___flge@ff1
  6702  010D82  C117  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  6703  010D86  C118  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  6704  010D8A  C119  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  6705  010D8E  0E00               	movlw	0
  6706  010D90  0100               	movlb	0	; () banked
  6707  010D92  6F76               	movwf	___flge@ff2& (0+255),b
  6708  010D94  0E00               	movlw	0
  6709  010D96  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  6710  010D98  0E20               	movlw	32
  6711  010D9A  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  6712  010D9C  0E41               	movlw	65
  6713  010D9E  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  6714  010DA0  EC57  F0A7         	call	___flge	;wreg free
  6715  010DA4  0100               	movlb	0	; () banked
  6716  010DA6  A0D8               	btfss	status,0,c
  6717  010DA8  D003               	goto	l8551
  6718                           
  6719                           ; BSR set to: 0
  6720                           ;doprnt.c: 851: exp++;
  6721  010DAA  0101               	movlb	1	; () banked
  6722  010DAC  4B14               	infsnz	sprintf@exp& (0+255),f,b
  6723  010DAE  2B15               	incf	(sprintf@exp+1)& (0+255),f,b
  6724  010DB0                     l8551:
  6725                           
  6726                           ;doprnt.c: 852: }
  6727                           ;doprnt.c: 1112: if(prec <= 12)
  6728  010DB0  0101               	movlb	1	; () banked
  6729  010DB2  BF1B               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6730  010DB4  D008               	goto	l8553
  6731  010DB6  0101               	movlb	1	; () banked
  6732  010DB8  511B               	movf	(sprintf@prec+1)& (0+255),w,b
  6733  010DBA  E123               	bnz	l8555
  6734  010DBC  0E0D               	movlw	13
  6735  010DBE  0101               	movlb	1	; () banked
  6736  010DC0  5D1A               	subwf	sprintf@prec& (0+255),w,b
  6737  010DC2  B0D8               	btfsc	status,0,c
  6738  010DC4  D01E               	goto	l8555
  6739  010DC6                     l8553:
  6740                           
  6741                           ; BSR set to: 1
  6742                           ;doprnt.c: 1113: fval += fround(prec);
  6743  010DC6  C11C  F0A6         	movff	sprintf@fval,___fladd@b
  6744  010DCA  C11D  F0A7         	movff	sprintf@fval+1,___fladd@b+1
  6745  010DCE  C11E  F0A8         	movff	sprintf@fval+2,___fladd@b+2
  6746  010DD2  C11F  F0A9         	movff	sprintf@fval+3,___fladd@b+3
  6747  010DD6  0101               	movlb	1	; () banked
  6748  010DD8  511A               	movf	sprintf@prec& (0+255),w,b
  6749  010DDA  EC8C  F0A1         	call	_fround
  6750  010DDE  C099  F0AA         	movff	?_fround,___fladd@a
  6751  010DE2  C09A  F0AB         	movff	?_fround+1,___fladd@a+1
  6752  010DE6  C09B  F0AC         	movff	?_fround+2,___fladd@a+2
  6753  010DEA  C09C  F0AD         	movff	?_fround+3,___fladd@a+3
  6754  010DEE  EC36  F099         	call	___fladd	;wreg free
  6755  010DF2  C0A6  F11C         	movff	?___fladd,sprintf@fval
  6756  010DF6  C0A7  F11D         	movff	?___fladd+1,sprintf@fval+1
  6757  010DFA  C0A8  F11E         	movff	?___fladd+2,sprintf@fval+2
  6758  010DFE  C0A9  F11F         	movff	?___fladd+3,sprintf@fval+3
  6759  010E02                     l8555:
  6760                           
  6761                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6762  010E02  0101               	movlb	1	; () banked
  6763  010E04  BF15               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6764  010E06  D008               	goto	l8557
  6765  010E08  0101               	movlb	1	; () banked
  6766  010E0A  5115               	movf	(sprintf@exp+1)& (0+255),w,b
  6767  010E0C  E12E               	bnz	l8563
  6768  010E0E  0E0A               	movlw	10
  6769  010E10  0101               	movlb	1	; () banked
  6770  010E12  5D14               	subwf	sprintf@exp& (0+255),w,b
  6771  010E14  B0D8               	btfsc	status,0,c
  6772  010E16  D029               	goto	l8563
  6773  010E18                     l8557:
  6774                           
  6775                           ; BSR set to: 1
  6776  010E18  0101               	movlb	1	; () banked
  6777  010E1A  511C               	movf	sprintf@fval& (0+255),w,b
  6778  010E1C  0101               	movlb	1	; () banked
  6779  010E1E  111D               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6780  010E20  0101               	movlb	1	; () banked
  6781  010E22  111E               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6782  010E24  0101               	movlb	1	; () banked
  6783  010E26  111F               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6784  010E28  B4D8               	btfsc	status,2,c
  6785  010E2A  D06D               	goto	l8577
  6786                           
  6787                           ; BSR set to: 1
  6788  010E2C  C11C  F0BA         	movff	sprintf@fval,___fltol@f1
  6789  010E30  C11D  F0BB         	movff	sprintf@fval+1,___fltol@f1+1
  6790  010E34  C11E  F0BC         	movff	sprintf@fval+2,___fltol@f1+2
  6791  010E38  C11F  F0BD         	movff	sprintf@fval+3,___fltol@f1+3
  6792  010E3C  EC56  F0AA         	call	___fltol	;wreg free
  6793  010E40  0100               	movlb	0	; () banked
  6794  010E42  51BA               	movf	?___fltol& (0+255),w,b
  6795  010E44  0100               	movlb	0	; () banked
  6796  010E46  11BB               	iorwf	(?___fltol+1)& (0+255),w,b
  6797  010E48  0100               	movlb	0	; () banked
  6798  010E4A  11BC               	iorwf	(?___fltol+2)& (0+255),w,b
  6799  010E4C  0100               	movlb	0	; () banked
  6800  010E4E  11BD               	iorwf	(?___fltol+3)& (0+255),w,b
  6801  010E50  A4D8               	btfss	status,2,c
  6802  010E52  D059               	goto	l8577
  6803                           
  6804                           ; BSR set to: 0
  6805  010E54  0101               	movlb	1	; () banked
  6806  010E56  BF15               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6807  010E58  D056               	goto	l8577
  6808  010E5A  0101               	movlb	1	; () banked
  6809  010E5C  5115               	movf	(sprintf@exp+1)& (0+255),w,b
  6810  010E5E  E105               	bnz	l8563
  6811  010E60  0E02               	movlw	2
  6812  010E62  0101               	movlb	1	; () banked
  6813  010E64  5D14               	subwf	sprintf@exp& (0+255),w,b
  6814  010E66  A0D8               	btfss	status,0,c
  6815  010E68  D04E               	goto	l8577
  6816  010E6A                     l8563:
  6817                           
  6818                           ; BSR set to: 1
  6819                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6820  010E6A  C116  F072         	movff	sprintf@tmpval,___flge@ff1
  6821  010E6E  C117  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  6822  010E72  C118  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  6823  010E76  C119  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  6824  010E7A  0E5F               	movlw	95
  6825  010E7C  0100               	movlb	0	; () banked
  6826  010E7E  6F76               	movwf	___flge@ff2& (0+255),b
  6827  010E80  0E70               	movlw	112
  6828  010E82  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  6829  010E84  0E89               	movlw	137
  6830  010E86  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  6831  010E88  0E40               	movlw	64
  6832  010E8A  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  6833  010E8C  EC57  F0A7         	call	___flge	;wreg free
  6834  010E90  0100               	movlb	0	; () banked
  6835  010E92  B0D8               	btfsc	status,0,c
  6836  010E94  D003               	goto	l8567
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6840  010E96  0101               	movlb	1	; () banked
  6841  010E98  0EF7               	movlw	247
  6842  010E9A  D002               	goto	L3
  6843  010E9C                     l8567:
  6844                           
  6845                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6846  010E9C  0101               	movlb	1	; () banked
  6847  010E9E  0EF8               	movlw	248
  6848  010EA0                     L3:
  6849  010EA0  2714               	addwf	sprintf@exp& (0+255),f,b
  6850  010EA2  0EFF               	movlw	255
  6851  010EA4  2315               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6852                           
  6853                           ; BSR set to: 1
  6854                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6855                           
  6856                           ; BSR set to: 1
  6857  010EA6  0101               	movlb	1	; () banked
  6858  010EA8  5114               	movf	sprintf@exp& (0+255),w,b
  6859  010EAA  EC23  F094         	call	_scale
  6860  010EAE  C099  F116         	movff	?_scale,sprintf@tmpval
  6861  010EB2  C09A  F117         	movff	?_scale+1,sprintf@tmpval+1
  6862  010EB6  C09B  F118         	movff	?_scale+2,sprintf@tmpval+2
  6863  010EBA  C09C  F119         	movff	?_scale+3,sprintf@tmpval+3
  6864  010EBE  C11C  F072         	movff	sprintf@fval,__div_to_l_@f1
  6865  010EC2  C11D  F073         	movff	sprintf@fval+1,__div_to_l_@f1+1
  6866  010EC6  C11E  F074         	movff	sprintf@fval+2,__div_to_l_@f1+2
  6867  010ECA  C11F  F075         	movff	sprintf@fval+3,__div_to_l_@f1+3
  6868  010ECE  C116  F076         	movff	sprintf@tmpval,__div_to_l_@f2
  6869  010ED2  C117  F077         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  6870  010ED6  C118  F078         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  6871  010EDA  C119  F079         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  6872  010EDE  EC1F  F0A8         	call	__div_to_l_	;wreg free
  6873  010EE2  C072  F110         	movff	?__div_to_l_,sprintf@val
  6874  010EE6  C073  F111         	movff	?__div_to_l_+1,sprintf@val+1
  6875  010EEA  C074  F112         	movff	?__div_to_l_+2,sprintf@val+2
  6876  010EEE  C075  F113         	movff	?__div_to_l_+3,sprintf@val+3
  6877                           
  6878                           ;doprnt.c: 1129: fval = 0.0;
  6879  010EF2  0E00               	movlw	0
  6880  010EF4  0101               	movlb	1	; () banked
  6881  010EF6  6F1C               	movwf	sprintf@fval& (0+255),b
  6882  010EF8  0E00               	movlw	0
  6883  010EFA  6F1D               	movwf	(sprintf@fval+1)& (0+255),b
  6884  010EFC  0E00               	movlw	0
  6885  010EFE  6F1E               	movwf	(sprintf@fval+2)& (0+255),b
  6886  010F00  0E00               	movlw	0
  6887  010F02  6F1F               	movwf	(sprintf@fval+3)& (0+255),b
  6888                           
  6889                           ;doprnt.c: 1130: } else {
  6890  010F04  D03C               	goto	l8581
  6891  010F06                     l8577:
  6892                           
  6893                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6894  010F06  C11C  F0BA         	movff	sprintf@fval,___fltol@f1
  6895  010F0A  C11D  F0BB         	movff	sprintf@fval+1,___fltol@f1+1
  6896  010F0E  C11E  F0BC         	movff	sprintf@fval+2,___fltol@f1+2
  6897  010F12  C11F  F0BD         	movff	sprintf@fval+3,___fltol@f1+3
  6898  010F16  EC56  F0AA         	call	___fltol	;wreg free
  6899  010F1A  C0BA  F110         	movff	?___fltol,sprintf@val
  6900  010F1E  C0BB  F111         	movff	?___fltol+1,sprintf@val+1
  6901  010F22  C0BC  F112         	movff	?___fltol+2,sprintf@val+2
  6902  010F26  C0BD  F113         	movff	?___fltol+3,sprintf@val+3
  6903                           
  6904                           ;doprnt.c: 1132: fval -= (double)val;
  6905  010F2A  C11C  F0BA         	movff	sprintf@fval,___flsub@b
  6906  010F2E  C11D  F0BB         	movff	sprintf@fval+1,___flsub@b+1
  6907  010F32  C11E  F0BC         	movff	sprintf@fval+2,___flsub@b+2
  6908  010F36  C11F  F0BD         	movff	sprintf@fval+3,___flsub@b+3
  6909  010F3A  C110  F072         	movff	sprintf@val,___xxtofl@val
  6910  010F3E  C111  F073         	movff	sprintf@val+1,___xxtofl@val+1
  6911  010F42  C112  F074         	movff	sprintf@val+2,___xxtofl@val+2
  6912  010F46  C113  F075         	movff	sprintf@val+3,___xxtofl@val+3
  6913  010F4A  0E00               	movlw	0
  6914  010F4C  EC07  F0A3         	call	___xxtofl
  6915  010F50  C072  F0BE         	movff	?___xxtofl,___flsub@a
  6916  010F54  C073  F0BF         	movff	?___xxtofl+1,___flsub@a+1
  6917  010F58  C074  F0C0         	movff	?___xxtofl+2,___flsub@a+2
  6918  010F5C  C075  F0C1         	movff	?___xxtofl+3,___flsub@a+3
  6919  010F60  EC18  F0AF         	call	___flsub	;wreg free
  6920  010F64  C0BA  F11C         	movff	?___flsub,sprintf@fval
  6921  010F68  C0BB  F11D         	movff	?___flsub+1,sprintf@fval+1
  6922  010F6C  C0BC  F11E         	movff	?___flsub+2,sprintf@fval+2
  6923  010F70  C0BD  F11F         	movff	?___flsub+3,sprintf@fval+3
  6924                           
  6925                           ;doprnt.c: 1133: exp = 0;
  6926  010F74  0E00               	movlw	0
  6927  010F76  0101               	movlb	1	; () banked
  6928  010F78  6F15               	movwf	(sprintf@exp+1)& (0+255),b
  6929  010F7A  0E00               	movlw	0
  6930  010F7C  6F14               	movwf	sprintf@exp& (0+255),b
  6931  010F7E                     l8581:
  6932                           
  6933                           ; BSR set to: 1
  6934                           ;doprnt.c: 1134: }
  6935                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6936  010F7E  0E01               	movlw	1
  6937  010F80  0101               	movlb	1	; () banked
  6938  010F82  6F20               	movwf	sprintf@c& (0+255),b
  6939  010F84                     l8583:
  6940                           
  6941                           ; BSR set to: 1
  6942  010F84  0E0A               	movlw	10
  6943  010F86  0101               	movlb	1	; () banked
  6944  010F88  1920               	xorwf	sprintf@c& (0+255),w,b
  6945  010F8A  B4D8               	btfsc	status,2,c
  6946  010F8C  D021               	goto	l8595
  6947                           
  6948                           ; BSR set to: 1
  6949                           ;doprnt.c: 1137: if(val < dpowers[c])
  6950                           
  6951                           ; BSR set to: 1
  6952                           
  6953                           ; BSR set to: 1
  6954  010F8E  0101               	movlb	1	; () banked
  6955  010F90  5120               	movf	sprintf@c& (0+255),w,b
  6956  010F92  0D04               	mullw	4
  6957  010F94  0E1D               	movlw	low _dpowers
  6958  010F96  24F3               	addwf	prodl,w,c
  6959  010F98  6EF6               	movwf	tblptrl,c
  6960  010F9A  0EFF               	movlw	high _dpowers
  6961  010F9C  20F4               	addwfc	prodh,w,c
  6962  010F9E  6EF7               	movwf	tblptrh,c
  6963  010FA0                     	if	1	;There are 3 active tblptr bytes
  6964  010FA0  6AF8               	clrf	tblptru,c
  6965  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  6966  010FA4  22F8               	addwfc	tblptru,f,c
  6967  010FA6                     	endif
  6968  010FA6  0009               	tblrd		*+
  6969  010FA8  50F5               	movf	tablat,w,c
  6970  010FAA  0101               	movlb	1	; () banked
  6971  010FAC  5D10               	subwf	sprintf@val& (0+255),w,b
  6972  010FAE  0009               	tblrd		*+
  6973  010FB0  50F5               	movf	tablat,w,c
  6974  010FB2  0101               	movlb	1	; () banked
  6975  010FB4  5911               	subwfb	(sprintf@val+1)& (0+255),w,b
  6976  010FB6  0009               	tblrd		*+
  6977  010FB8  50F5               	movf	tablat,w,c
  6978  010FBA  0101               	movlb	1	; () banked
  6979  010FBC  5912               	subwfb	(sprintf@val+2)& (0+255),w,b
  6980  010FBE  0009               	tblrd		*+
  6981  010FC0  50F5               	movf	tablat,w,c
  6982  010FC2  0101               	movlb	1	; () banked
  6983  010FC4  5913               	subwfb	(sprintf@val+3)& (0+255),w,b
  6984  010FC6  A0D8               	btfss	status,0,c
  6985  010FC8  D003               	goto	l8595
  6986                           
  6987                           ; BSR set to: 1
  6988                           
  6989                           ; BSR set to: 1
  6990                           
  6991                           ; BSR set to: 1
  6992                           ;doprnt.c: 1138: break;
  6993  010FCA  0101               	movlb	1	; () banked
  6994  010FCC  2B20               	incf	sprintf@c& (0+255),f,b
  6995  010FCE  D7DA               	goto	l8583
  6996  010FD0                     l8595:
  6997                           
  6998                           ; BSR set to: 1
  6999                           ;doprnt.c: 1175: {
  7000                           ;doprnt.c: 1188: if(flag & 0x03)
  7001  010FD0  0E03               	movlw	3
  7002  010FD2  0101               	movlb	1	; () banked
  7003  010FD4  150E               	andwf	sprintf@flag& (0+255),w,b
  7004  010FD6  0100               	movlb	0	; () banked
  7005  010FD8  6FC4               	movwf	??_sprintf& (0+255),b
  7006  010FDA  0E00               	movlw	0
  7007  010FDC  0101               	movlb	1	; () banked
  7008  010FDE  150F               	andwf	(sprintf@flag+1)& (0+255),w,b
  7009  010FE0  0100               	movlb	0	; () banked
  7010  010FE2  6FC5               	movwf	(??_sprintf+1)& (0+255),b
  7011  010FE4  0100               	movlb	0	; () banked
  7012  010FE6  51C4               	movf	??_sprintf& (0+255),w,b
  7013  010FE8  0100               	movlb	0	; () banked
  7014  010FEA  11C5               	iorwf	(??_sprintf+1)& (0+255),w,b
  7015  010FEC  B4D8               	btfsc	status,2,c
  7016  010FEE  D058               	goto	l8609
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7020  010FF0  C100  FFD9         	movff	sprintf@sp,fsr2l
  7021  010FF4  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  7022  010FF8  0E2D               	movlw	45
  7023  010FFA  D050               	goto	L4
  7024  010FFC                     l8599:
  7025                           
  7026                           ; BSR set to: 0
  7027  010FFC  0101               	movlb	1	; () banked
  7028  010FFE  4B00               	infsnz	sprintf@sp& (0+255),f,b
  7029  011000  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  7030                           
  7031                           ; BSR set to: 1
  7032                           ;doprnt.c: 1195: }
  7033                           ;doprnt.c: 1196: while(c--) {
  7034  011002  D04E               	goto	l8609
  7035  011004                     l8601:
  7036                           
  7037                           ; BSR set to: 1
  7038                           ;doprnt.c: 1200: {
  7039                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7040  011004  C110  F072         	movff	sprintf@val,___lldiv@dividend
  7041  011008  C111  F073         	movff	sprintf@val+1,___lldiv@dividend+1
  7042  01100C  C112  F074         	movff	sprintf@val+2,___lldiv@dividend+2
  7043  011010  C113  F075         	movff	sprintf@val+3,___lldiv@dividend+3
  7044  011014  0101               	movlb	1	; () banked
  7045  011016  5120               	movf	sprintf@c& (0+255),w,b
  7046  011018  0D04               	mullw	4
  7047  01101A  0E1D               	movlw	low _dpowers
  7048  01101C  24F3               	addwf	prodl,w,c
  7049  01101E  6EF6               	movwf	tblptrl,c
  7050  011020  0EFF               	movlw	high _dpowers
  7051  011022  20F4               	addwfc	prodh,w,c
  7052  011024  6EF7               	movwf	tblptrh,c
  7053  011026                     	if	1	;There are 3 active tblptr bytes
  7054  011026  6AF8               	clrf	tblptru,c
  7055  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  7056  01102A  22F8               	addwfc	tblptru,f,c
  7057  01102C                     	endif
  7058  01102C  0009               	tblrd		*+
  7059  01102E  CFF5 F076          	movff	tablat,___lldiv@divisor
  7060  011032  0009               	tblrd		*+
  7061  011034  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  7062  011038  0009               	tblrd		*+
  7063  01103A  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  7064  01103E  000A               	tblrd		*-
  7065  011040  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  7066  011044  EC10  F0AC         	call	___lldiv	;wreg free
  7067  011048  C072  F116         	movff	?___lldiv,sprintf@tmpval
  7068  01104C  C073  F117         	movff	?___lldiv+1,sprintf@tmpval+1
  7069  011050  C074  F118         	movff	?___lldiv+2,sprintf@tmpval+2
  7070  011054  C075  F119         	movff	?___lldiv+3,sprintf@tmpval+3
  7071                           
  7072                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7073  011058  C116  F072         	movff	sprintf@tmpval,___llmod@dividend
  7074  01105C  C117  F073         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7075  011060  C118  F074         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7076  011064  C119  F075         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7077  011068  0E0A               	movlw	10
  7078  01106A  0100               	movlb	0	; () banked
  7079  01106C  6F76               	movwf	___llmod@divisor& (0+255),b
  7080  01106E  0E00               	movlw	0
  7081  011070  6F77               	movwf	(___llmod@divisor+1)& (0+255),b
  7082  011072  0E00               	movlw	0
  7083  011074  6F78               	movwf	(___llmod@divisor+2)& (0+255),b
  7084  011076  0E00               	movlw	0
  7085  011078  6F79               	movwf	(___llmod@divisor+3)& (0+255),b
  7086  01107A  ECC3  F0AD         	call	___llmod	;wreg free
  7087  01107E  C072  F116         	movff	?___llmod,sprintf@tmpval
  7088  011082  C073  F117         	movff	?___llmod+1,sprintf@tmpval+1
  7089  011086  C074  F118         	movff	?___llmod+2,sprintf@tmpval+2
  7090  01108A  C075  F119         	movff	?___llmod+3,sprintf@tmpval+3
  7091                           
  7092                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7093  01108E  0101               	movlb	1	; () banked
  7094  011090  5116               	movf	sprintf@tmpval& (0+255),w,b
  7095  011092  0F30               	addlw	48
  7096  011094  C100  FFD9         	movff	sprintf@sp,fsr2l
  7097  011098  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  7098  01109C                     L4:
  7099  01109C  6EDF               	movwf	indf2,c
  7100  01109E  D7AE               	goto	l8599
  7101  0110A0                     l8609:
  7102  0110A0  0101               	movlb	1	; () banked
  7103  0110A2  0720               	decf	sprintf@c& (0+255),f,b
  7104  0110A4  0101               	movlb	1	; () banked
  7105  0110A6  2920               	incf	sprintf@c& (0+255),w,b
  7106  0110A8  B4D8               	btfsc	status,2,c
  7107  0110AA  D00E               	goto	l8617
  7108  0110AC  D7AB               	goto	l8601
  7109  0110AE                     l8611:
  7110                           
  7111                           ; BSR set to: 1
  7112                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7113  0110AE  C100  FFD9         	movff	sprintf@sp,fsr2l
  7114  0110B2  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  7115  0110B6  0E30               	movlw	48
  7116  0110B8  6EDF               	movwf	indf2,c
  7117                           
  7118                           ; BSR set to: 1
  7119  0110BA  0101               	movlb	1	; () banked
  7120  0110BC  4B00               	infsnz	sprintf@sp& (0+255),f,b
  7121  0110BE  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  7122                           
  7123                           ; BSR set to: 1
  7124                           ;doprnt.c: 1209: exp--;
  7125  0110C0  0101               	movlb	1	; () banked
  7126  0110C2  0714               	decf	sprintf@exp& (0+255),f,b
  7127  0110C4  A0D8               	btfss	status,0,c
  7128  0110C6  0715               	decf	(sprintf@exp+1)& (0+255),f,b
  7129  0110C8                     l8617:
  7130                           
  7131                           ; BSR set to: 1
  7132  0110C8  0101               	movlb	1	; () banked
  7133  0110CA  BF15               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7134  0110CC  D007               	goto	l8619
  7135  0110CE  0101               	movlb	1	; () banked
  7136  0110D0  5115               	movf	(sprintf@exp+1)& (0+255),w,b
  7137  0110D2  E1ED               	bnz	l8611
  7138  0110D4  0101               	movlb	1	; () banked
  7139  0110D6  0514               	decf	sprintf@exp& (0+255),w,b
  7140  0110D8  B0D8               	btfsc	status,0,c
  7141  0110DA  D7E9               	goto	l8611
  7142  0110DC                     l8619:
  7143                           
  7144                           ; BSR set to: 1
  7145                           ;doprnt.c: 1210: }
  7146                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7147  0110DC  0101               	movlb	1	; () banked
  7148  0110DE  BF1B               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7149  0110E0  D00C               	goto	l967
  7150  0110E2  0101               	movlb	1	; () banked
  7151  0110E4  511B               	movf	(sprintf@prec+1)& (0+255),w,b
  7152  0110E6  E105               	bnz	u11470
  7153  0110E8  0E09               	movlw	9
  7154  0110EA  0101               	movlb	1	; () banked
  7155  0110EC  5D1A               	subwf	sprintf@prec& (0+255),w,b
  7156  0110EE  A0D8               	btfss	status,0,c
  7157  0110F0  D004               	goto	l967
  7158  0110F2                     u11470:
  7159                           
  7160                           ; BSR set to: 1
  7161                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7162  0110F2  0E08               	movlw	8
  7163  0110F4  0101               	movlb	1	; () banked
  7164  0110F6  6F20               	movwf	sprintf@c& (0+255),b
  7165  0110F8  D002               	goto	l8623
  7166  0110FA                     l967:
  7167                           
  7168                           ; BSR set to: 1
  7169                           ;doprnt.c: 1213: else
  7170                           ;doprnt.c: 1214: c = prec;
  7171  0110FA  C11A  F120         	movff	sprintf@prec,sprintf@c
  7172  0110FE                     l8623:
  7173                           
  7174                           ; BSR set to: 1
  7175                           ;doprnt.c: 1215: prec -= c;
  7176  0110FE  0101               	movlb	1	; () banked
  7177  011100  5120               	movf	sprintf@c& (0+255),w,b
  7178  011102  0101               	movlb	1	; () banked
  7179  011104  5F1A               	subwf	sprintf@prec& (0+255),f,b
  7180  011106  0E00               	movlw	0
  7181  011108  0101               	movlb	1	; () banked
  7182  01110A  BF20               	btfsc	sprintf@c& (0+255),7,b
  7183  01110C  0EFF               	movlw	255
  7184  01110E  0101               	movlb	1	; () banked
  7185  011110  5B1B               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7186                           
  7187                           ; BSR set to: 1
  7188                           ;doprnt.c: 1219: if(c)
  7189  011112  0101               	movlb	1	; () banked
  7190  011114  5120               	movf	sprintf@c& (0+255),w,b
  7191  011116  0101               	movlb	1	; () banked
  7192  011118  B4D8               	btfsc	status,2,c
  7193  01111A  D009               	goto	l8631
  7194                           
  7195                           ; BSR set to: 1
  7196                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7197  01111C  C100  FFD9         	movff	sprintf@sp,fsr2l
  7198  011120  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  7199  011124  0E2E               	movlw	46
  7200  011126  6EDF               	movwf	indf2,c
  7201                           
  7202                           ; BSR set to: 1
  7203  011128  0101               	movlb	1	; () banked
  7204  01112A  4B00               	infsnz	sprintf@sp& (0+255),f,b
  7205  01112C  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  7206  01112E                     l8631:
  7207                           
  7208                           ; BSR set to: 1
  7209                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7210  01112E  0101               	movlb	1	; () banked
  7211  011130  5120               	movf	sprintf@c& (0+255),w,b
  7212  011132  EC23  F094         	call	_scale
  7213  011136  C099  F108         	movff	?_scale,_sprintf$4215
  7214  01113A  C09A  F109         	movff	?_scale+1,_sprintf$4215+1
  7215  01113E  C09B  F10A         	movff	?_scale+2,_sprintf$4215+2
  7216  011142  C09C  F10B         	movff	?_scale+3,_sprintf$4215+3
  7217                           
  7218                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7219  011146  C11C  F084         	movff	sprintf@fval,___flmul@a
  7220  01114A  C11D  F085         	movff	sprintf@fval+1,___flmul@a+1
  7221  01114E  C11E  F086         	movff	sprintf@fval+2,___flmul@a+2
  7222  011152  C11F  F087         	movff	sprintf@fval+3,___flmul@a+3
  7223  011156  C108  F080         	movff	_sprintf$4215,___flmul@b
  7224  01115A  C109  F081         	movff	_sprintf$4215+1,___flmul@b+1
  7225  01115E  C10A  F082         	movff	_sprintf$4215+2,___flmul@b+2
  7226  011162  C10B  F083         	movff	_sprintf$4215+3,___flmul@b+3
  7227  011166  EC8A  F09B         	call	___flmul	;wreg free
  7228  01116A  C080  F0BA         	movff	?___flmul,___fltol@f1
  7229  01116E  C081  F0BB         	movff	?___flmul+1,___fltol@f1+1
  7230  011172  C082  F0BC         	movff	?___flmul+2,___fltol@f1+2
  7231  011176  C083  F0BD         	movff	?___flmul+3,___fltol@f1+3
  7232  01117A  EC56  F0AA         	call	___fltol	;wreg free
  7233  01117E  C0BA  F110         	movff	?___fltol,sprintf@val
  7234  011182  C0BB  F111         	movff	?___fltol+1,sprintf@val+1
  7235  011186  C0BC  F112         	movff	?___fltol+2,sprintf@val+2
  7236  01118A  C0BD  F113         	movff	?___fltol+3,sprintf@val+3
  7237                           
  7238                           ;doprnt.c: 1228: while(c--) {
  7239  01118E  D07A               	goto	l8645
  7240  011190                     l8635:
  7241                           
  7242                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7243  011190  C110  F072         	movff	sprintf@val,___lldiv@dividend
  7244  011194  C111  F073         	movff	sprintf@val+1,___lldiv@dividend+1
  7245  011198  C112  F074         	movff	sprintf@val+2,___lldiv@dividend+2
  7246  01119C  C113  F075         	movff	sprintf@val+3,___lldiv@dividend+3
  7247  0111A0  0101               	movlb	1	; () banked
  7248  0111A2  5120               	movf	sprintf@c& (0+255),w,b
  7249  0111A4  0D04               	mullw	4
  7250  0111A6  0E1D               	movlw	low _dpowers
  7251  0111A8  24F3               	addwf	prodl,w,c
  7252  0111AA  6EF6               	movwf	tblptrl,c
  7253  0111AC  0EFF               	movlw	high _dpowers
  7254  0111AE  20F4               	addwfc	prodh,w,c
  7255  0111B0  6EF7               	movwf	tblptrh,c
  7256  0111B2                     	if	1	;There are 3 active tblptr bytes
  7257  0111B2  6AF8               	clrf	tblptru,c
  7258  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  7259  0111B6  22F8               	addwfc	tblptru,f,c
  7260  0111B8                     	endif
  7261  0111B8  0009               	tblrd		*+
  7262  0111BA  CFF5 F076          	movff	tablat,___lldiv@divisor
  7263  0111BE  0009               	tblrd		*+
  7264  0111C0  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  7265  0111C4  0009               	tblrd		*+
  7266  0111C6  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  7267  0111CA  000A               	tblrd		*-
  7268  0111CC  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  7269  0111D0  EC10  F0AC         	call	___lldiv	;wreg free
  7270  0111D4  C072  F116         	movff	?___lldiv,sprintf@tmpval
  7271  0111D8  C073  F117         	movff	?___lldiv+1,sprintf@tmpval+1
  7272  0111DC  C074  F118         	movff	?___lldiv+2,sprintf@tmpval+2
  7273  0111E0  C075  F119         	movff	?___lldiv+3,sprintf@tmpval+3
  7274                           
  7275                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7276  0111E4  C116  F072         	movff	sprintf@tmpval,___llmod@dividend
  7277  0111E8  C117  F073         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7278  0111EC  C118  F074         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7279  0111F0  C119  F075         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7280  0111F4  0E0A               	movlw	10
  7281  0111F6  0100               	movlb	0	; () banked
  7282  0111F8  6F76               	movwf	___llmod@divisor& (0+255),b
  7283  0111FA  0E00               	movlw	0
  7284  0111FC  6F77               	movwf	(___llmod@divisor+1)& (0+255),b
  7285  0111FE  0E00               	movlw	0
  7286  011200  6F78               	movwf	(___llmod@divisor+2)& (0+255),b
  7287  011202  0E00               	movlw	0
  7288  011204  6F79               	movwf	(___llmod@divisor+3)& (0+255),b
  7289  011206  ECC3  F0AD         	call	___llmod	;wreg free
  7290  01120A  C072  F116         	movff	?___llmod,sprintf@tmpval
  7291  01120E  C073  F117         	movff	?___llmod+1,sprintf@tmpval+1
  7292  011212  C074  F118         	movff	?___llmod+2,sprintf@tmpval+2
  7293  011216  C075  F119         	movff	?___llmod+3,sprintf@tmpval+3
  7294                           
  7295                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7296  01121A  0101               	movlb	1	; () banked
  7297  01121C  5116               	movf	sprintf@tmpval& (0+255),w,b
  7298  01121E  0F30               	addlw	48
  7299  011220  C100  FFD9         	movff	sprintf@sp,fsr2l
  7300  011224  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  7301  011228  6EDF               	movwf	indf2,c
  7302                           
  7303                           ; BSR set to: 1
  7304  01122A  0101               	movlb	1	; () banked
  7305  01122C  4B00               	infsnz	sprintf@sp& (0+255),f,b
  7306  01122E  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  7307                           
  7308                           ; BSR set to: 1
  7309                           ;doprnt.c: 1232: val %= dpowers[c];
  7310  011230  C110  F072         	movff	sprintf@val,___llmod@dividend
  7311  011234  C111  F073         	movff	sprintf@val+1,___llmod@dividend+1
  7312  011238  C112  F074         	movff	sprintf@val+2,___llmod@dividend+2
  7313  01123C  C113  F075         	movff	sprintf@val+3,___llmod@dividend+3
  7314  011240  0101               	movlb	1	; () banked
  7315  011242  5120               	movf	sprintf@c& (0+255),w,b
  7316  011244  0D04               	mullw	4
  7317  011246  0E1D               	movlw	low _dpowers
  7318  011248  24F3               	addwf	prodl,w,c
  7319  01124A  6EF6               	movwf	tblptrl,c
  7320  01124C  0EFF               	movlw	high _dpowers
  7321  01124E  20F4               	addwfc	prodh,w,c
  7322  011250  6EF7               	movwf	tblptrh,c
  7323  011252                     	if	1	;There are 3 active tblptr bytes
  7324  011252  6AF8               	clrf	tblptru,c
  7325  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  7326  011256  22F8               	addwfc	tblptru,f,c
  7327  011258                     	endif
  7328  011258  0009               	tblrd		*+
  7329  01125A  CFF5 F076          	movff	tablat,___llmod@divisor
  7330  01125E  0009               	tblrd		*+
  7331  011260  CFF5 F077          	movff	tablat,___llmod@divisor+1
  7332  011264  0009               	tblrd		*+
  7333  011266  CFF5 F078          	movff	tablat,___llmod@divisor+2
  7334  01126A  000A               	tblrd		*-
  7335  01126C  CFF5 F079          	movff	tablat,___llmod@divisor+3
  7336  011270  ECC3  F0AD         	call	___llmod	;wreg free
  7337  011274  C072  F110         	movff	?___llmod,sprintf@val
  7338  011278  C073  F111         	movff	?___llmod+1,sprintf@val+1
  7339  01127C  C074  F112         	movff	?___llmod+2,sprintf@val+2
  7340  011280  C075  F113         	movff	?___llmod+3,sprintf@val+3
  7341  011284                     l8645:
  7342  011284  0101               	movlb	1	; () banked
  7343  011286  0720               	decf	sprintf@c& (0+255),f,b
  7344  011288  0101               	movlb	1	; () banked
  7345  01128A  2920               	incf	sprintf@c& (0+255),w,b
  7346  01128C  B4D8               	btfsc	status,2,c
  7347  01128E  D00E               	goto	l8653
  7348  011290  D77F               	goto	l8635
  7349  011292                     l8647:
  7350                           
  7351                           ; BSR set to: 1
  7352                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7353  011292  C100  FFD9         	movff	sprintf@sp,fsr2l
  7354  011296  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  7355  01129A  0E30               	movlw	48
  7356  01129C  6EDF               	movwf	indf2,c
  7357                           
  7358                           ; BSR set to: 1
  7359  01129E  0101               	movlb	1	; () banked
  7360  0112A0  4B00               	infsnz	sprintf@sp& (0+255),f,b
  7361  0112A2  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  7362                           
  7363                           ; BSR set to: 1
  7364                           ;doprnt.c: 1237: prec--;
  7365  0112A4  0101               	movlb	1	; () banked
  7366  0112A6  071A               	decf	sprintf@prec& (0+255),f,b
  7367  0112A8  A0D8               	btfss	status,0,c
  7368  0112AA  071B               	decf	(sprintf@prec+1)& (0+255),f,b
  7369  0112AC                     l8653:
  7370                           
  7371                           ; BSR set to: 1
  7372  0112AC  0101               	movlb	1	; () banked
  7373  0112AE  511A               	movf	sprintf@prec& (0+255),w,b
  7374  0112B0  0101               	movlb	1	; () banked
  7375  0112B2  111B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7376  0112B4  B4D8               	btfsc	status,2,c
  7377  0112B6  D059               	goto	l8675
  7378  0112B8  D7EC               	goto	l8647
  7379  0112BA                     l8655:
  7380                           
  7381                           ; BSR set to: 1
  7382                           ;doprnt.c: 1246: }
  7383                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7384  0112BA  0101               	movlb	1	; () banked
  7385  0112BC  511A               	movf	sprintf@prec& (0+255),w,b
  7386  0112BE  0101               	movlb	1	; () banked
  7387  0112C0  111B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7388  0112C2  A4D8               	btfss	status,2,c
  7389  0112C4  D00D               	goto	l8661
  7390                           
  7391                           ; BSR set to: 1
  7392  0112C6  0101               	movlb	1	; () banked
  7393  0112C8  5110               	movf	sprintf@val& (0+255),w,b
  7394  0112CA  0101               	movlb	1	; () banked
  7395  0112CC  1111               	iorwf	(sprintf@val+1)& (0+255),w,b
  7396  0112CE  0101               	movlb	1	; () banked
  7397  0112D0  1112               	iorwf	(sprintf@val+2)& (0+255),w,b
  7398  0112D2  0101               	movlb	1	; () banked
  7399  0112D4  1113               	iorwf	(sprintf@val+3)& (0+255),w,b
  7400  0112D6  A4D8               	btfss	status,2,c
  7401  0112D8  D003               	goto	l8661
  7402                           
  7403                           ; BSR set to: 1
  7404                           ;doprnt.c: 1291: prec++;
  7405  0112DA  0101               	movlb	1	; () banked
  7406  0112DC  4B1A               	infsnz	sprintf@prec& (0+255),f,b
  7407  0112DE  2B1B               	incf	(sprintf@prec+1)& (0+255),f,b
  7408  0112E0                     l8661:
  7409                           
  7410                           ; BSR set to: 1
  7411                           ;doprnt.c: 1339: if(c < prec)
  7412  0112E0  0E80               	movlw	128
  7413  0112E2  0101               	movlb	1	; () banked
  7414  0112E4  BF20               	btfsc	sprintf@c& (0+255),7,b
  7415  0112E6  0E7F               	movlw	127
  7416  0112E8  0100               	movlb	0	; () banked
  7417  0112EA  6FC4               	movwf	??_sprintf& (0+255),b
  7418  0112EC  0101               	movlb	1	; () banked
  7419  0112EE  511A               	movf	sprintf@prec& (0+255),w,b
  7420  0112F0  0101               	movlb	1	; () banked
  7421  0112F2  5D20               	subwf	sprintf@c& (0+255),w,b
  7422  0112F4  0101               	movlb	1	; () banked
  7423  0112F6  511B               	movf	(sprintf@prec+1)& (0+255),w,b
  7424  0112F8  0A80               	xorlw	128
  7425  0112FA  0100               	movlb	0	; () banked
  7426  0112FC  59C4               	subwfb	??_sprintf& (0+255),w,b
  7427  0112FE  B0D8               	btfsc	status,0,c
  7428  011300  D003               	goto	l8665
  7429                           
  7430                           ; BSR set to: 0
  7431                           ;doprnt.c: 1340: c = prec;
  7432  011302  C11A  F120         	movff	sprintf@prec,sprintf@c
  7433  011306  D018               	goto	l8669
  7434  011308                     l8665:
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;doprnt.c: 1341: else if(prec < c)
  7438  011308  0101               	movlb	1	; () banked
  7439  01130A  511B               	movf	(sprintf@prec+1)& (0+255),w,b
  7440  01130C  0A80               	xorlw	128
  7441  01130E  0100               	movlb	0	; () banked
  7442  011310  6FC4               	movwf	??_sprintf& (0+255),b
  7443  011312  0101               	movlb	1	; () banked
  7444  011314  5120               	movf	sprintf@c& (0+255),w,b
  7445  011316  0101               	movlb	1	; () banked
  7446  011318  5D1A               	subwf	sprintf@prec& (0+255),w,b
  7447  01131A  0E80               	movlw	128
  7448  01131C  0101               	movlb	1	; () banked
  7449  01131E  BF20               	btfsc	sprintf@c& (0+255),7,b
  7450  011320  0E7F               	movlw	127
  7451  011322  0100               	movlb	0	; () banked
  7452  011324  59C4               	subwfb	??_sprintf& (0+255),w,b
  7453  011326  B0D8               	btfsc	status,0,c
  7454  011328  D007               	goto	l8669
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;doprnt.c: 1342: prec = c;
  7458  01132A  0101               	movlb	1	; () banked
  7459  01132C  5120               	movf	sprintf@c& (0+255),w,b
  7460  01132E  0101               	movlb	1	; () banked
  7461  011330  6F1A               	movwf	sprintf@prec& (0+255),b
  7462  011332  6B1B               	clrf	(sprintf@prec+1)& (0+255),b
  7463  011334  BF1A               	btfsc	sprintf@prec& (0+255),7,b
  7464  011336  071B               	decf	(sprintf@prec+1)& (0+255),f,b
  7465  011338                     l8669:
  7466                           
  7467                           ;doprnt.c: 1422: {
  7468                           ;doprnt.c: 1438: if(flag & 0x03)
  7469  011338  0E03               	movlw	3
  7470  01133A  0101               	movlb	1	; () banked
  7471  01133C  150E               	andwf	sprintf@flag& (0+255),w,b
  7472  01133E  0100               	movlb	0	; () banked
  7473  011340  6FC4               	movwf	??_sprintf& (0+255),b
  7474  011342  0E00               	movlw	0
  7475  011344  0101               	movlb	1	; () banked
  7476  011346  150F               	andwf	(sprintf@flag+1)& (0+255),w,b
  7477  011348  0100               	movlb	0	; () banked
  7478  01134A  6FC5               	movwf	(??_sprintf+1)& (0+255),b
  7479  01134C  0100               	movlb	0	; () banked
  7480  01134E  51C4               	movf	??_sprintf& (0+255),w,b
  7481  011350  0100               	movlb	0	; () banked
  7482  011352  11C5               	iorwf	(??_sprintf+1)& (0+255),w,b
  7483  011354  B4D8               	btfsc	status,2,c
  7484  011356  D009               	goto	l8675
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7488  011358  C100  FFD9         	movff	sprintf@sp,fsr2l
  7489  01135C  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  7490  011360  0E2D               	movlw	45
  7491  011362  6EDF               	movwf	indf2,c
  7492  011364                     l8673:
  7493                           
  7494                           ; BSR set to: 0
  7495  011364  0101               	movlb	1	; () banked
  7496  011366  4B00               	infsnz	sprintf@sp& (0+255),f,b
  7497  011368  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  7498  01136A                     l8675:
  7499  01136A  C102  FFF6         	movff	sprintf@f,tblptrl
  7500  01136E  C103  FFF7         	movff	sprintf@f+1,tblptrh
  7501  011372  0101               	movlb	1	; () banked
  7502  011374  4B02               	infsnz	sprintf@f& (0+255),f,b
  7503  011376  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  7504  011378                     	if	0	;tblptru may be non-zero
  7505  011378                     	endif
  7506  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7507  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  7508  01137A  6EF8               	movwf	tblptru,c
  7509  01137C                     	endif
  7510  01137C  0008               	tblrd		*
  7511  01137E  CFF5 F120          	movff	tablat,sprintf@c
  7512  011382  0101               	movlb	1	; () banked
  7513  011384  5120               	movf	sprintf@c& (0+255),w,b
  7514  011386  A4D8               	btfss	status,2,c
  7515  011388  EF8B  F085         	goto	l8477
  7516  01138C                     l8677:
  7517                           
  7518                           ; BSR set to: 1
  7519                           ;doprnt.c: 1538: *sp = 0;
  7520  01138C  C100  FFD9         	movff	sprintf@sp,fsr2l
  7521  011390  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  7522  011394  0E00               	movlw	0
  7523  011396  6EDF               	movwf	indf2,c
  7524  011398  0012               	return	
  7525  01139A                     __end_of_sprintf:
  7526                           	opt stack 0
  7527                           tblptru	equ	0xFF8
  7528                           tblptrh	equ	0xFF7
  7529                           tblptrl	equ	0xFF6
  7530                           tablat	equ	0xFF5
  7531                           prodh	equ	0xFF4
  7532                           prodl	equ	0xFF3
  7533                           intcon	equ	0xFF2
  7534                           postinc0	equ	0xFEE
  7535                           wreg	equ	0xFE8
  7536                           indf2	equ	0xFDF
  7537                           postinc2	equ	0xFDE
  7538                           fsr2h	equ	0xFDA
  7539                           fsr2l	equ	0xFD9
  7540                           status	equ	0xFD8
  7541                           
  7542 ;; *************** function _scale *****************
  7543 ;; Defined at:
  7544 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;  scl             1    wreg     char 
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;  scl             1   65[BANK0 ] char 
  7549 ;; Return value:  Size  Location     Type
  7550 ;;                  4   57[BANK0 ] char 
  7551 ;; Registers used:
  7552 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7553 ;; Tracked objects:
  7554 ;;		On entry : 0/0
  7555 ;;		On exit  : 0/0
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7558 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7559 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7561 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7562 ;;Total ram usage:        9 bytes
  7563 ;; Hardware stack levels used:    1
  7564 ;; Hardware stack levels required when called:    4
  7565 ;; This function calls:
  7566 ;;		___awdiv
  7567 ;;		___awmod
  7568 ;;		___flmul
  7569 ;; This function is called by:
  7570 ;;		_sprintf
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           	psect	text9
  7575  012846                     __ptext9:
  7576                           	opt stack 0
  7577  012846                     _scale:
  7578                           	opt stack 24
  7579                           
  7580                           ; BSR set to: 1
  7581                           ;incstack = 0
  7582                           ;scale@scl stored from wreg
  7583  012846  0100               	movlb	0	; () banked
  7584  012848  6FA1               	movwf	scale@scl& (0+255),b
  7585                           
  7586                           ;doprnt.c: 428: if(scl < 0) {
  7587  01284A  0100               	movlb	0	; () banked
  7588  01284C  AFA1               	btfss	scale@scl& (0+255),7,b
  7589  01284E  D145               	goto	l8085
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;doprnt.c: 429: scl = -scl;
  7593  012850  0100               	movlb	0	; () banked
  7594  012852  6DA1               	negf	scale@scl& (0+255),b
  7595                           
  7596                           ;doprnt.c: 430: if(scl>=110)
  7597  012854  0100               	movlb	0	; () banked
  7598  012856  51A1               	movf	scale@scl& (0+255),w,b
  7599  012858  0A80               	xorlw	128
  7600  01285A  0F12               	addlw	-238
  7601  01285C  A0D8               	btfss	status,0,c
  7602  01285E  D0BB               	goto	l8075
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7606  012860  0E00               	movlw	0
  7607  012862  0100               	movlb	0	; () banked
  7608  012864  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7609  012866  0E0A               	movlw	10
  7610  012868  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7611  01286A  0E00               	movlw	0
  7612  01286C  0100               	movlb	0	; () banked
  7613  01286E  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7614  012870  0E64               	movlw	100
  7615  012872  6F74               	movwf	___awmod@divisor& (0+255),b
  7616  012874  0100               	movlb	0	; () banked
  7617  012876  51A1               	movf	scale@scl& (0+255),w,b
  7618  012878  0100               	movlb	0	; () banked
  7619  01287A  6F72               	movwf	___awmod@dividend& (0+255),b
  7620  01287C  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7621  01287E  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7622  012880  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7623  012882  EC72  F0AD         	call	___awmod	;wreg free
  7624  012886  C072  F078         	movff	?___awmod,___awdiv@dividend
  7625  01288A  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  7626  01288E  EC52  F0AB         	call	___awdiv	;wreg free
  7627  012892  0100               	movlb	0	; () banked
  7628  012894  90D8               	bcf	status,0,c
  7629  012896  3778               	rlcf	?___awdiv& (0+255),f,b
  7630  012898  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7631  01289A  0100               	movlb	0	; () banked
  7632  01289C  90D8               	bcf	status,0,c
  7633  01289E  3778               	rlcf	?___awdiv& (0+255),f,b
  7634  0128A0  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7635  0128A2  0E24               	movlw	36
  7636  0128A4  0100               	movlb	0	; () banked
  7637  0128A6  2778               	addwf	?___awdiv& (0+255),f,b
  7638  0128A8  0E00               	movlw	0
  7639  0128AA  0100               	movlb	0	; () banked
  7640  0128AC  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7641  0128AE  0EB5               	movlw	low __npowers_
  7642  0128B0  0100               	movlb	0	; () banked
  7643  0128B2  2578               	addwf	?___awdiv& (0+255),w,b
  7644  0128B4  6EF6               	movwf	tblptrl,c
  7645  0128B6  0EFE               	movlw	high __npowers_
  7646  0128B8  0100               	movlb	0	; () banked
  7647  0128BA  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7648  0128BC  6EF7               	movwf	tblptrh,c
  7649  0128BE                     	if	1	;There are 3 active tblptr bytes
  7650  0128BE  6AF8               	clrf	tblptru,c
  7651  0128C0  0E00               	movlw	low (__mediumconst shr (0+16))
  7652  0128C2  22F8               	addwfc	tblptru,f,c
  7653  0128C4                     	endif
  7654  0128C4  0009               	tblrd		*+
  7655  0128C6  CFF5 F084          	movff	tablat,___flmul@a
  7656  0128CA  0009               	tblrd		*+
  7657  0128CC  CFF5 F085          	movff	tablat,___flmul@a+1
  7658  0128D0  0009               	tblrd		*+
  7659  0128D2  CFF5 F086          	movff	tablat,___flmul@a+2
  7660  0128D6  000A               	tblrd		*-
  7661  0128D8  CFF5 F087          	movff	tablat,___flmul@a+3
  7662  0128DC  0E00               	movlw	0
  7663  0128DE  0100               	movlb	0	; () banked
  7664  0128E0  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7665  0128E2  0E64               	movlw	100
  7666  0128E4  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7667  0128E6  0100               	movlb	0	; () banked
  7668  0128E8  51A1               	movf	scale@scl& (0+255),w,b
  7669  0128EA  0100               	movlb	0	; () banked
  7670  0128EC  6F78               	movwf	___awdiv@dividend& (0+255),b
  7671  0128EE  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  7672  0128F0  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  7673  0128F2  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7674  0128F4  EC52  F0AB         	call	___awdiv	;wreg free
  7675  0128F8  0100               	movlb	0	; () banked
  7676  0128FA  90D8               	bcf	status,0,c
  7677  0128FC  3778               	rlcf	?___awdiv& (0+255),f,b
  7678  0128FE  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7679  012900  0100               	movlb	0	; () banked
  7680  012902  90D8               	bcf	status,0,c
  7681  012904  3778               	rlcf	?___awdiv& (0+255),f,b
  7682  012906  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7683  012908  0E48               	movlw	72
  7684  01290A  0100               	movlb	0	; () banked
  7685  01290C  2778               	addwf	?___awdiv& (0+255),f,b
  7686  01290E  0E00               	movlw	0
  7687  012910  0100               	movlb	0	; () banked
  7688  012912  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7689  012914  0EB5               	movlw	low __npowers_
  7690  012916  0100               	movlb	0	; () banked
  7691  012918  2578               	addwf	?___awdiv& (0+255),w,b
  7692  01291A  6EF6               	movwf	tblptrl,c
  7693  01291C  0EFE               	movlw	high __npowers_
  7694  01291E  0100               	movlb	0	; () banked
  7695  012920  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7696  012922  6EF7               	movwf	tblptrh,c
  7697  012924                     	if	1	;There are 3 active tblptr bytes
  7698  012924  6AF8               	clrf	tblptru,c
  7699  012926  0E00               	movlw	low (__mediumconst shr (0+16))
  7700  012928  22F8               	addwfc	tblptru,f,c
  7701  01292A                     	endif
  7702  01292A  0009               	tblrd		*+
  7703  01292C  CFF5 F080          	movff	tablat,___flmul@b
  7704  012930  0009               	tblrd		*+
  7705  012932  CFF5 F081          	movff	tablat,___flmul@b+1
  7706  012936  0009               	tblrd		*+
  7707  012938  CFF5 F082          	movff	tablat,___flmul@b+2
  7708  01293C  000A               	tblrd		*-
  7709  01293E  CFF5 F083          	movff	tablat,___flmul@b+3
  7710  012942  EC8A  F09B         	call	___flmul	;wreg free
  7711  012946  C080  F09D         	movff	?___flmul,_scale$4214
  7712  01294A  C081  F09E         	movff	?___flmul+1,_scale$4214+1
  7713  01294E  C082  F09F         	movff	?___flmul+2,_scale$4214+2
  7714  012952  C083  F0A0         	movff	?___flmul+3,_scale$4214+3
  7715                           
  7716                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7717  012956  C09D  F080         	movff	_scale$4214,___flmul@b
  7718  01295A  C09E  F081         	movff	_scale$4214+1,___flmul@b+1
  7719  01295E  C09F  F082         	movff	_scale$4214+2,___flmul@b+2
  7720  012962  C0A0  F083         	movff	_scale$4214+3,___flmul@b+3
  7721  012966  0E00               	movlw	0
  7722  012968  0100               	movlb	0	; () banked
  7723  01296A  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7724  01296C  0E0A               	movlw	10
  7725  01296E  6F74               	movwf	___awmod@divisor& (0+255),b
  7726  012970  0100               	movlb	0	; () banked
  7727  012972  51A1               	movf	scale@scl& (0+255),w,b
  7728  012974  0100               	movlb	0	; () banked
  7729  012976  6F72               	movwf	___awmod@dividend& (0+255),b
  7730  012978  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7731  01297A  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7732  01297C  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7733  01297E  EC72  F0AD         	call	___awmod	;wreg free
  7734  012982  0100               	movlb	0	; () banked
  7735  012984  90D8               	bcf	status,0,c
  7736  012986  3772               	rlcf	?___awmod& (0+255),f,b
  7737  012988  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7738  01298A  0100               	movlb	0	; () banked
  7739  01298C  90D8               	bcf	status,0,c
  7740  01298E  3772               	rlcf	?___awmod& (0+255),f,b
  7741  012990  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7742  012992  0EB5               	movlw	low __npowers_
  7743  012994  0100               	movlb	0	; () banked
  7744  012996  2572               	addwf	?___awmod& (0+255),w,b
  7745  012998  6EF6               	movwf	tblptrl,c
  7746  01299A  0EFE               	movlw	high __npowers_
  7747  01299C  0100               	movlb	0	; () banked
  7748  01299E  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  7749  0129A0  6EF7               	movwf	tblptrh,c
  7750  0129A2                     	if	1	;There are 3 active tblptr bytes
  7751  0129A2  6AF8               	clrf	tblptru,c
  7752  0129A4  0E00               	movlw	low (__mediumconst shr (0+16))
  7753  0129A6  22F8               	addwfc	tblptru,f,c
  7754  0129A8                     	endif
  7755  0129A8  0009               	tblrd		*+
  7756  0129AA  CFF5 F084          	movff	tablat,___flmul@a
  7757  0129AE  0009               	tblrd		*+
  7758  0129B0  CFF5 F085          	movff	tablat,___flmul@a+1
  7759  0129B4  0009               	tblrd		*+
  7760  0129B6  CFF5 F086          	movff	tablat,___flmul@a+2
  7761  0129BA  000A               	tblrd		*-
  7762  0129BC  CFF5 F087          	movff	tablat,___flmul@a+3
  7763  0129C0  EC8A  F09B         	call	___flmul	;wreg free
  7764  0129C4  C080  F099         	movff	?___flmul,?_scale
  7765  0129C8  C081  F09A         	movff	?___flmul+1,?_scale+1
  7766  0129CC  C082  F09B         	movff	?___flmul+2,?_scale+2
  7767  0129D0  C083  F09C         	movff	?___flmul+3,?_scale+3
  7768  0129D4  0012               	return	
  7769  0129D6                     l8075:
  7770                           
  7771                           ;doprnt.c: 432: else if(scl > 10)
  7772  0129D6  0100               	movlb	0	; () banked
  7773  0129D8  51A1               	movf	scale@scl& (0+255),w,b
  7774  0129DA  0A80               	xorlw	128
  7775  0129DC  0F75               	addlw	-139
  7776  0129DE  A0D8               	btfss	status,0,c
  7777  0129E0  D063               	goto	l8081
  7778                           
  7779                           ; BSR set to: 0
  7780                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7781  0129E2  0E00               	movlw	0
  7782  0129E4  0100               	movlb	0	; () banked
  7783  0129E6  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7784  0129E8  0E0A               	movlw	10
  7785  0129EA  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7786  0129EC  0100               	movlb	0	; () banked
  7787  0129EE  51A1               	movf	scale@scl& (0+255),w,b
  7788  0129F0  0100               	movlb	0	; () banked
  7789  0129F2  6F78               	movwf	___awdiv@dividend& (0+255),b
  7790  0129F4  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  7791  0129F6  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  7792  0129F8  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7793  0129FA  EC52  F0AB         	call	___awdiv	;wreg free
  7794  0129FE  0100               	movlb	0	; () banked
  7795  012A00  90D8               	bcf	status,0,c
  7796  012A02  3778               	rlcf	?___awdiv& (0+255),f,b
  7797  012A04  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7798  012A06  0100               	movlb	0	; () banked
  7799  012A08  90D8               	bcf	status,0,c
  7800  012A0A  3778               	rlcf	?___awdiv& (0+255),f,b
  7801  012A0C  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7802  012A0E  0E24               	movlw	36
  7803  012A10  0100               	movlb	0	; () banked
  7804  012A12  2778               	addwf	?___awdiv& (0+255),f,b
  7805  012A14  0E00               	movlw	0
  7806  012A16  0100               	movlb	0	; () banked
  7807  012A18  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7808  012A1A  0EB5               	movlw	low __npowers_
  7809  012A1C  0100               	movlb	0	; () banked
  7810  012A1E  2578               	addwf	?___awdiv& (0+255),w,b
  7811  012A20  6EF6               	movwf	tblptrl,c
  7812  012A22  0EFE               	movlw	high __npowers_
  7813  012A24  0100               	movlb	0	; () banked
  7814  012A26  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7815  012A28  6EF7               	movwf	tblptrh,c
  7816  012A2A                     	if	1	;There are 3 active tblptr bytes
  7817  012A2A  6AF8               	clrf	tblptru,c
  7818  012A2C  0E00               	movlw	low (__mediumconst shr (0+16))
  7819  012A2E  22F8               	addwfc	tblptru,f,c
  7820  012A30                     	endif
  7821  012A30  0009               	tblrd		*+
  7822  012A32  CFF5 F080          	movff	tablat,___flmul@b
  7823  012A36  0009               	tblrd		*+
  7824  012A38  CFF5 F081          	movff	tablat,___flmul@b+1
  7825  012A3C  0009               	tblrd		*+
  7826  012A3E  CFF5 F082          	movff	tablat,___flmul@b+2
  7827  012A42  000A               	tblrd		*-
  7828  012A44  CFF5 F083          	movff	tablat,___flmul@b+3
  7829  012A48  0E00               	movlw	0
  7830  012A4A  0100               	movlb	0	; () banked
  7831  012A4C  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7832  012A4E  0E0A               	movlw	10
  7833  012A50  6F74               	movwf	___awmod@divisor& (0+255),b
  7834  012A52  0100               	movlb	0	; () banked
  7835  012A54  51A1               	movf	scale@scl& (0+255),w,b
  7836  012A56  0100               	movlb	0	; () banked
  7837  012A58  6F72               	movwf	___awmod@dividend& (0+255),b
  7838  012A5A  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7839  012A5C  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7840  012A5E  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7841  012A60  EC72  F0AD         	call	___awmod	;wreg free
  7842  012A64  0100               	movlb	0	; () banked
  7843  012A66  90D8               	bcf	status,0,c
  7844  012A68  3772               	rlcf	?___awmod& (0+255),f,b
  7845  012A6A  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7846  012A6C  0100               	movlb	0	; () banked
  7847  012A6E  90D8               	bcf	status,0,c
  7848  012A70  3772               	rlcf	?___awmod& (0+255),f,b
  7849  012A72  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7850  012A74  0EB5               	movlw	low __npowers_
  7851  012A76  0100               	movlb	0	; () banked
  7852  012A78  2572               	addwf	?___awmod& (0+255),w,b
  7853  012A7A  6EF6               	movwf	tblptrl,c
  7854  012A7C  0EFE               	movlw	high __npowers_
  7855  012A7E  0100               	movlb	0	; () banked
  7856  012A80  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  7857  012A82  6EF7               	movwf	tblptrh,c
  7858  012A84                     	if	1	;There are 3 active tblptr bytes
  7859  012A84  6AF8               	clrf	tblptru,c
  7860  012A86  0E00               	movlw	low (__mediumconst shr (0+16))
  7861  012A88  22F8               	addwfc	tblptru,f,c
  7862  012A8A                     	endif
  7863  012A8A  0009               	tblrd		*+
  7864  012A8C  CFF5 F084          	movff	tablat,___flmul@a
  7865  012A90  0009               	tblrd		*+
  7866  012A92  CFF5 F085          	movff	tablat,___flmul@a+1
  7867  012A96  0009               	tblrd		*+
  7868  012A98  CFF5 F086          	movff	tablat,___flmul@a+2
  7869  012A9C  000A               	tblrd		*-
  7870  012A9E  CFF5 F087          	movff	tablat,___flmul@a+3
  7871  012AA2  EC8A  F09B         	call	___flmul	;wreg free
  7872  012AA6  D78E               	goto	L5
  7873  012AA8                     l8081:
  7874                           
  7875                           ;doprnt.c: 434: return _npowers_[scl];
  7876  012AA8  0100               	movlb	0	; () banked
  7877  012AAA  51A1               	movf	scale@scl& (0+255),w,b
  7878  012AAC  0D04               	mullw	4
  7879  012AAE  0EB5               	movlw	low __npowers_
  7880  012AB0  24F3               	addwf	prodl,w,c
  7881  012AB2  6EF6               	movwf	tblptrl,c
  7882  012AB4  0EFE               	movlw	high __npowers_
  7883  012AB6  20F4               	addwfc	prodh,w,c
  7884  012AB8  6EF7               	movwf	tblptrh,c
  7885  012ABA                     	if	1	;There are 3 active tblptr bytes
  7886  012ABA  6AF8               	clrf	tblptru,c
  7887  012ABC  0E00               	movlw	low (__mediumconst shr (0+16))
  7888  012ABE  22F8               	addwfc	tblptru,f,c
  7889  012AC0                     	endif
  7890  012AC0  0009               	tblrd		*+
  7891  012AC2  CFF5 F099          	movff	tablat,?_scale
  7892  012AC6  0009               	tblrd		*+
  7893  012AC8  CFF5 F09A          	movff	tablat,?_scale+1
  7894  012ACC  0009               	tblrd		*+
  7895  012ACE  CFF5 F09B          	movff	tablat,?_scale+2
  7896  012AD2  000A               	tblrd		*-
  7897  012AD4  CFF5 F09C          	movff	tablat,?_scale+3
  7898                           
  7899                           ; BSR set to: 0
  7900  012AD8  0012               	return	
  7901  012ADA                     l8085:
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;doprnt.c: 435: }
  7905                           ;doprnt.c: 436: if(scl>=110)
  7906  012ADA  0100               	movlb	0	; () banked
  7907  012ADC  51A1               	movf	scale@scl& (0+255),w,b
  7908  012ADE  0A80               	xorlw	128
  7909  012AE0  0F12               	addlw	-238
  7910  012AE2  A0D8               	btfss	status,0,c
  7911  012AE4  D0BB               	goto	l8093
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7915  012AE6  0E00               	movlw	0
  7916  012AE8  0100               	movlb	0	; () banked
  7917  012AEA  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7918  012AEC  0E0A               	movlw	10
  7919  012AEE  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7920  012AF0  0E00               	movlw	0
  7921  012AF2  0100               	movlb	0	; () banked
  7922  012AF4  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7923  012AF6  0E64               	movlw	100
  7924  012AF8  6F74               	movwf	___awmod@divisor& (0+255),b
  7925  012AFA  0100               	movlb	0	; () banked
  7926  012AFC  51A1               	movf	scale@scl& (0+255),w,b
  7927  012AFE  0100               	movlb	0	; () banked
  7928  012B00  6F72               	movwf	___awmod@dividend& (0+255),b
  7929  012B02  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7930  012B04  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7931  012B06  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7932  012B08  EC72  F0AD         	call	___awmod	;wreg free
  7933  012B0C  C072  F078         	movff	?___awmod,___awdiv@dividend
  7934  012B10  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  7935  012B14  EC52  F0AB         	call	___awdiv	;wreg free
  7936  012B18  0100               	movlb	0	; () banked
  7937  012B1A  90D8               	bcf	status,0,c
  7938  012B1C  3778               	rlcf	?___awdiv& (0+255),f,b
  7939  012B1E  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7940  012B20  0100               	movlb	0	; () banked
  7941  012B22  90D8               	bcf	status,0,c
  7942  012B24  3778               	rlcf	?___awdiv& (0+255),f,b
  7943  012B26  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7944  012B28  0E24               	movlw	36
  7945  012B2A  0100               	movlb	0	; () banked
  7946  012B2C  2778               	addwf	?___awdiv& (0+255),f,b
  7947  012B2E  0E00               	movlw	0
  7948  012B30  0100               	movlb	0	; () banked
  7949  012B32  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7950  012B34  0EE9               	movlw	low __powers_
  7951  012B36  0100               	movlb	0	; () banked
  7952  012B38  2578               	addwf	?___awdiv& (0+255),w,b
  7953  012B3A  6EF6               	movwf	tblptrl,c
  7954  012B3C  0EFE               	movlw	high __powers_
  7955  012B3E  0100               	movlb	0	; () banked
  7956  012B40  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7957  012B42  6EF7               	movwf	tblptrh,c
  7958  012B44                     	if	1	;There are 3 active tblptr bytes
  7959  012B44  6AF8               	clrf	tblptru,c
  7960  012B46  0E00               	movlw	low (__mediumconst shr (0+16))
  7961  012B48  22F8               	addwfc	tblptru,f,c
  7962  012B4A                     	endif
  7963  012B4A  0009               	tblrd		*+
  7964  012B4C  CFF5 F084          	movff	tablat,___flmul@a
  7965  012B50  0009               	tblrd		*+
  7966  012B52  CFF5 F085          	movff	tablat,___flmul@a+1
  7967  012B56  0009               	tblrd		*+
  7968  012B58  CFF5 F086          	movff	tablat,___flmul@a+2
  7969  012B5C  000A               	tblrd		*-
  7970  012B5E  CFF5 F087          	movff	tablat,___flmul@a+3
  7971  012B62  0E00               	movlw	0
  7972  012B64  0100               	movlb	0	; () banked
  7973  012B66  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7974  012B68  0E64               	movlw	100
  7975  012B6A  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7976  012B6C  0100               	movlb	0	; () banked
  7977  012B6E  51A1               	movf	scale@scl& (0+255),w,b
  7978  012B70  0100               	movlb	0	; () banked
  7979  012B72  6F78               	movwf	___awdiv@dividend& (0+255),b
  7980  012B74  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  7981  012B76  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  7982  012B78  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7983  012B7A  EC52  F0AB         	call	___awdiv	;wreg free
  7984  012B7E  0100               	movlb	0	; () banked
  7985  012B80  90D8               	bcf	status,0,c
  7986  012B82  3778               	rlcf	?___awdiv& (0+255),f,b
  7987  012B84  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7988  012B86  0100               	movlb	0	; () banked
  7989  012B88  90D8               	bcf	status,0,c
  7990  012B8A  3778               	rlcf	?___awdiv& (0+255),f,b
  7991  012B8C  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7992  012B8E  0E48               	movlw	72
  7993  012B90  0100               	movlb	0	; () banked
  7994  012B92  2778               	addwf	?___awdiv& (0+255),f,b
  7995  012B94  0E00               	movlw	0
  7996  012B96  0100               	movlb	0	; () banked
  7997  012B98  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7998  012B9A  0EE9               	movlw	low __powers_
  7999  012B9C  0100               	movlb	0	; () banked
  8000  012B9E  2578               	addwf	?___awdiv& (0+255),w,b
  8001  012BA0  6EF6               	movwf	tblptrl,c
  8002  012BA2  0EFE               	movlw	high __powers_
  8003  012BA4  0100               	movlb	0	; () banked
  8004  012BA6  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8005  012BA8  6EF7               	movwf	tblptrh,c
  8006  012BAA                     	if	1	;There are 3 active tblptr bytes
  8007  012BAA  6AF8               	clrf	tblptru,c
  8008  012BAC  0E00               	movlw	low (__mediumconst shr (0+16))
  8009  012BAE  22F8               	addwfc	tblptru,f,c
  8010  012BB0                     	endif
  8011  012BB0  0009               	tblrd		*+
  8012  012BB2  CFF5 F080          	movff	tablat,___flmul@b
  8013  012BB6  0009               	tblrd		*+
  8014  012BB8  CFF5 F081          	movff	tablat,___flmul@b+1
  8015  012BBC  0009               	tblrd		*+
  8016  012BBE  CFF5 F082          	movff	tablat,___flmul@b+2
  8017  012BC2  000A               	tblrd		*-
  8018  012BC4  CFF5 F083          	movff	tablat,___flmul@b+3
  8019  012BC8  EC8A  F09B         	call	___flmul	;wreg free
  8020  012BCC  C080  F09D         	movff	?___flmul,_scale$4214
  8021  012BD0  C081  F09E         	movff	?___flmul+1,_scale$4214+1
  8022  012BD4  C082  F09F         	movff	?___flmul+2,_scale$4214+2
  8023  012BD8  C083  F0A0         	movff	?___flmul+3,_scale$4214+3
  8024                           
  8025                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8026  012BDC  C09D  F080         	movff	_scale$4214,___flmul@b
  8027  012BE0  C09E  F081         	movff	_scale$4214+1,___flmul@b+1
  8028  012BE4  C09F  F082         	movff	_scale$4214+2,___flmul@b+2
  8029  012BE8  C0A0  F083         	movff	_scale$4214+3,___flmul@b+3
  8030  012BEC  0E00               	movlw	0
  8031  012BEE  0100               	movlb	0	; () banked
  8032  012BF0  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8033  012BF2  0E0A               	movlw	10
  8034  012BF4  6F74               	movwf	___awmod@divisor& (0+255),b
  8035  012BF6  0100               	movlb	0	; () banked
  8036  012BF8  51A1               	movf	scale@scl& (0+255),w,b
  8037  012BFA  0100               	movlb	0	; () banked
  8038  012BFC  6F72               	movwf	___awmod@dividend& (0+255),b
  8039  012BFE  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8040  012C00  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  8041  012C02  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  8042  012C04  EC72  F0AD         	call	___awmod	;wreg free
  8043  012C08  0100               	movlb	0	; () banked
  8044  012C0A  90D8               	bcf	status,0,c
  8045  012C0C  3772               	rlcf	?___awmod& (0+255),f,b
  8046  012C0E  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8047  012C10  0100               	movlb	0	; () banked
  8048  012C12  90D8               	bcf	status,0,c
  8049  012C14  3772               	rlcf	?___awmod& (0+255),f,b
  8050  012C16  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8051  012C18  0EE9               	movlw	low __powers_
  8052  012C1A  0100               	movlb	0	; () banked
  8053  012C1C  2572               	addwf	?___awmod& (0+255),w,b
  8054  012C1E  6EF6               	movwf	tblptrl,c
  8055  012C20  0EFE               	movlw	high __powers_
  8056  012C22  0100               	movlb	0	; () banked
  8057  012C24  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  8058  012C26  6EF7               	movwf	tblptrh,c
  8059  012C28                     	if	1	;There are 3 active tblptr bytes
  8060  012C28  6AF8               	clrf	tblptru,c
  8061  012C2A  0E00               	movlw	low (__mediumconst shr (0+16))
  8062  012C2C  22F8               	addwfc	tblptru,f,c
  8063  012C2E                     	endif
  8064  012C2E  0009               	tblrd		*+
  8065  012C30  CFF5 F084          	movff	tablat,___flmul@a
  8066  012C34  0009               	tblrd		*+
  8067  012C36  CFF5 F085          	movff	tablat,___flmul@a+1
  8068  012C3A  0009               	tblrd		*+
  8069  012C3C  CFF5 F086          	movff	tablat,___flmul@a+2
  8070  012C40  000A               	tblrd		*-
  8071  012C42  CFF5 F087          	movff	tablat,___flmul@a+3
  8072  012C46  EC8A  F09B         	call	___flmul	;wreg free
  8073  012C4A  C080  F099         	movff	?___flmul,?_scale
  8074  012C4E  C081  F09A         	movff	?___flmul+1,?_scale+1
  8075  012C52  C082  F09B         	movff	?___flmul+2,?_scale+2
  8076  012C56  C083  F09C         	movff	?___flmul+3,?_scale+3
  8077  012C5A  0012               	return	
  8078  012C5C                     l8093:
  8079                           
  8080                           ;doprnt.c: 438: else if(scl > 10)
  8081  012C5C  0100               	movlb	0	; () banked
  8082  012C5E  51A1               	movf	scale@scl& (0+255),w,b
  8083  012C60  0A80               	xorlw	128
  8084  012C62  0F75               	addlw	-139
  8085  012C64  A0D8               	btfss	status,0,c
  8086  012C66  D063               	goto	l8099
  8087                           
  8088                           ; BSR set to: 0
  8089                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8090  012C68  0E00               	movlw	0
  8091  012C6A  0100               	movlb	0	; () banked
  8092  012C6C  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8093  012C6E  0E0A               	movlw	10
  8094  012C70  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8095  012C72  0100               	movlb	0	; () banked
  8096  012C74  51A1               	movf	scale@scl& (0+255),w,b
  8097  012C76  0100               	movlb	0	; () banked
  8098  012C78  6F78               	movwf	___awdiv@dividend& (0+255),b
  8099  012C7A  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  8100  012C7C  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  8101  012C7E  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8102  012C80  EC52  F0AB         	call	___awdiv	;wreg free
  8103  012C84  0100               	movlb	0	; () banked
  8104  012C86  90D8               	bcf	status,0,c
  8105  012C88  3778               	rlcf	?___awdiv& (0+255),f,b
  8106  012C8A  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8107  012C8C  0100               	movlb	0	; () banked
  8108  012C8E  90D8               	bcf	status,0,c
  8109  012C90  3778               	rlcf	?___awdiv& (0+255),f,b
  8110  012C92  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8111  012C94  0E24               	movlw	36
  8112  012C96  0100               	movlb	0	; () banked
  8113  012C98  2778               	addwf	?___awdiv& (0+255),f,b
  8114  012C9A  0E00               	movlw	0
  8115  012C9C  0100               	movlb	0	; () banked
  8116  012C9E  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8117  012CA0  0EE9               	movlw	low __powers_
  8118  012CA2  0100               	movlb	0	; () banked
  8119  012CA4  2578               	addwf	?___awdiv& (0+255),w,b
  8120  012CA6  6EF6               	movwf	tblptrl,c
  8121  012CA8  0EFE               	movlw	high __powers_
  8122  012CAA  0100               	movlb	0	; () banked
  8123  012CAC  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8124  012CAE  6EF7               	movwf	tblptrh,c
  8125  012CB0                     	if	1	;There are 3 active tblptr bytes
  8126  012CB0  6AF8               	clrf	tblptru,c
  8127  012CB2  0E00               	movlw	low (__mediumconst shr (0+16))
  8128  012CB4  22F8               	addwfc	tblptru,f,c
  8129  012CB6                     	endif
  8130  012CB6  0009               	tblrd		*+
  8131  012CB8  CFF5 F080          	movff	tablat,___flmul@b
  8132  012CBC  0009               	tblrd		*+
  8133  012CBE  CFF5 F081          	movff	tablat,___flmul@b+1
  8134  012CC2  0009               	tblrd		*+
  8135  012CC4  CFF5 F082          	movff	tablat,___flmul@b+2
  8136  012CC8  000A               	tblrd		*-
  8137  012CCA  CFF5 F083          	movff	tablat,___flmul@b+3
  8138  012CCE  0E00               	movlw	0
  8139  012CD0  0100               	movlb	0	; () banked
  8140  012CD2  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8141  012CD4  0E0A               	movlw	10
  8142  012CD6  6F74               	movwf	___awmod@divisor& (0+255),b
  8143  012CD8  0100               	movlb	0	; () banked
  8144  012CDA  51A1               	movf	scale@scl& (0+255),w,b
  8145  012CDC  0100               	movlb	0	; () banked
  8146  012CDE  6F72               	movwf	___awmod@dividend& (0+255),b
  8147  012CE0  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8148  012CE2  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  8149  012CE4  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  8150  012CE6  EC72  F0AD         	call	___awmod	;wreg free
  8151  012CEA  0100               	movlb	0	; () banked
  8152  012CEC  90D8               	bcf	status,0,c
  8153  012CEE  3772               	rlcf	?___awmod& (0+255),f,b
  8154  012CF0  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8155  012CF2  0100               	movlb	0	; () banked
  8156  012CF4  90D8               	bcf	status,0,c
  8157  012CF6  3772               	rlcf	?___awmod& (0+255),f,b
  8158  012CF8  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8159  012CFA  0EE9               	movlw	low __powers_
  8160  012CFC  0100               	movlb	0	; () banked
  8161  012CFE  2572               	addwf	?___awmod& (0+255),w,b
  8162  012D00  6EF6               	movwf	tblptrl,c
  8163  012D02  0EFE               	movlw	high __powers_
  8164  012D04  0100               	movlb	0	; () banked
  8165  012D06  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  8166  012D08  6EF7               	movwf	tblptrh,c
  8167  012D0A                     	if	1	;There are 3 active tblptr bytes
  8168  012D0A  6AF8               	clrf	tblptru,c
  8169  012D0C  0E00               	movlw	low (__mediumconst shr (0+16))
  8170  012D0E  22F8               	addwfc	tblptru,f,c
  8171  012D10                     	endif
  8172  012D10  0009               	tblrd		*+
  8173  012D12  CFF5 F084          	movff	tablat,___flmul@a
  8174  012D16  0009               	tblrd		*+
  8175  012D18  CFF5 F085          	movff	tablat,___flmul@a+1
  8176  012D1C  0009               	tblrd		*+
  8177  012D1E  CFF5 F086          	movff	tablat,___flmul@a+2
  8178  012D22  000A               	tblrd		*-
  8179  012D24  CFF5 F087          	movff	tablat,___flmul@a+3
  8180  012D28  EC8A  F09B         	call	___flmul	;wreg free
  8181  012D2C  D78E               	goto	L6
  8182  012D2E                     l8099:
  8183                           
  8184                           ;doprnt.c: 440: return _powers_[scl];
  8185  012D2E  0100               	movlb	0	; () banked
  8186  012D30  51A1               	movf	scale@scl& (0+255),w,b
  8187  012D32  0D04               	mullw	4
  8188  012D34  0EE9               	movlw	low __powers_
  8189  012D36  24F3               	addwf	prodl,w,c
  8190  012D38  6EF6               	movwf	tblptrl,c
  8191  012D3A  0EFE               	movlw	high __powers_
  8192  012D3C  20F4               	addwfc	prodh,w,c
  8193  012D3E  6EF7               	movwf	tblptrh,c
  8194  012D40                     	if	1	;There are 3 active tblptr bytes
  8195  012D40  6AF8               	clrf	tblptru,c
  8196  012D42  0E00               	movlw	low (__mediumconst shr (0+16))
  8197  012D44  22F8               	addwfc	tblptru,f,c
  8198  012D46                     	endif
  8199  012D46  0009               	tblrd		*+
  8200  012D48  CFF5 F099          	movff	tablat,?_scale
  8201  012D4C  0009               	tblrd		*+
  8202  012D4E  CFF5 F09A          	movff	tablat,?_scale+1
  8203  012D52  0009               	tblrd		*+
  8204  012D54  CFF5 F09B          	movff	tablat,?_scale+2
  8205  012D58  000A               	tblrd		*-
  8206  012D5A  CFF5 F09C          	movff	tablat,?_scale+3
  8207  012D5E  0012               	return	
  8208  012D60                     __end_of_scale:
  8209                           	opt stack 0
  8210                           tblptru	equ	0xFF8
  8211                           tblptrh	equ	0xFF7
  8212                           tblptrl	equ	0xFF6
  8213                           tablat	equ	0xFF5
  8214                           prodh	equ	0xFF4
  8215                           prodl	equ	0xFF3
  8216                           intcon	equ	0xFF2
  8217                           postinc0	equ	0xFEE
  8218                           wreg	equ	0xFE8
  8219                           indf2	equ	0xFDF
  8220                           postinc2	equ	0xFDE
  8221                           fsr2h	equ	0xFDA
  8222                           fsr2l	equ	0xFD9
  8223                           status	equ	0xFD8
  8224                           
  8225 ;; *************** function _isdigit *****************
  8226 ;; Defined at:
  8227 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;  c               1    wreg     unsigned char 
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;  c               1   20[BANK0 ] unsigned char 
  8232 ;; Return value:  Size  Location     Type
  8233 ;;		None               void
  8234 ;; Registers used:
  8235 ;;		wreg, status,2, status,0
  8236 ;; Tracked objects:
  8237 ;;		On entry : 0/0
  8238 ;;		On exit  : 0/0
  8239 ;;		Unchanged: 0/0
  8240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8242 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8243 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8244 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8245 ;;Total ram usage:        3 bytes
  8246 ;; Hardware stack levels used:    1
  8247 ;; Hardware stack levels required when called:    3
  8248 ;; This function calls:
  8249 ;;		Nothing
  8250 ;; This function is called by:
  8251 ;;		_sprintf
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           
  8255                           	psect	text10
  8256  01607E                     __ptext10:
  8257                           	opt stack 0
  8258  01607E                     _isdigit:
  8259                           	opt stack 25
  8260                           
  8261                           ;incstack = 0
  8262                           ;isdigit@c stored from wreg
  8263  01607E  0100               	movlb	0	; () banked
  8264  016080  6F74               	movwf	isdigit@c& (0+255),b
  8265  016082  0E00               	movlw	0
  8266  016084  0100               	movlb	0	; () banked
  8267  016086  6F73               	movwf	_isdigit$3798& (0+255),b
  8268                           
  8269                           ; BSR set to: 0
  8270  016088  0E3A               	movlw	58
  8271  01608A  0100               	movlb	0	; () banked
  8272  01608C  6174               	cpfslt	isdigit@c& (0+255),b
  8273  01608E  D007               	goto	l8111
  8274                           
  8275                           ; BSR set to: 0
  8276  016090  0E2F               	movlw	47
  8277  016092  0100               	movlb	0	; () banked
  8278  016094  6574               	cpfsgt	isdigit@c& (0+255),b
  8279  016096  D003               	goto	l8111
  8280                           
  8281                           ; BSR set to: 0
  8282  016098  0E01               	movlw	1
  8283  01609A  0100               	movlb	0	; () banked
  8284  01609C  6F73               	movwf	_isdigit$3798& (0+255),b
  8285  01609E                     l8111:
  8286                           
  8287                           ; BSR set to: 0
  8288  01609E  C073  F072         	movff	_isdigit$3798,??_isdigit
  8289  0160A2  0100               	movlb	0	; () banked
  8290  0160A4  3172               	rrcf	??_isdigit& (0+255),w,b
  8291  0160A6  0012               	return	
  8292  0160A8                     __end_of_isdigit:
  8293                           	opt stack 0
  8294                           tblptru	equ	0xFF8
  8295                           tblptrh	equ	0xFF7
  8296                           tblptrl	equ	0xFF6
  8297                           tablat	equ	0xFF5
  8298                           prodh	equ	0xFF4
  8299                           prodl	equ	0xFF3
  8300                           intcon	equ	0xFF2
  8301                           postinc0	equ	0xFEE
  8302                           wreg	equ	0xFE8
  8303                           indf2	equ	0xFDF
  8304                           postinc2	equ	0xFDE
  8305                           fsr2h	equ	0xFDA
  8306                           fsr2l	equ	0xFD9
  8307                           status	equ	0xFD8
  8308                           
  8309 ;; *************** function _fround *****************
  8310 ;; Defined at:
  8311 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8312 ;; Parameters:    Size  Location     Type
  8313 ;;  prec            1    wreg     unsigned char 
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;  prec            1   69[BANK0 ] unsigned char 
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  4   57[BANK0 ] unsigned char 
  8318 ;; Registers used:
  8319 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8325 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8328 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8329 ;;Total ram usage:       13 bytes
  8330 ;; Hardware stack levels used:    1
  8331 ;; Hardware stack levels required when called:    4
  8332 ;; This function calls:
  8333 ;;		___awdiv
  8334 ;;		___awmod
  8335 ;;		___flmul
  8336 ;; This function is called by:
  8337 ;;		_sprintf
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           	psect	text11
  8342  014318                     __ptext11:
  8343                           	opt stack 0
  8344  014318                     _fround:
  8345                           	opt stack 24
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;incstack = 0
  8349                           ;fround@prec stored from wreg
  8350  014318  0100               	movlb	0	; () banked
  8351  01431A  6FA5               	movwf	fround@prec& (0+255),b
  8352                           
  8353                           ;doprnt.c: 413: if(prec>=110)
  8354  01431C  0E6D               	movlw	109
  8355  01431E  0100               	movlb	0	; () banked
  8356  014320  65A5               	cpfsgt	fround@prec& (0+255),b
  8357  014322  D0CD               	goto	l8053
  8358                           
  8359                           ; BSR set to: 0
  8360                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8361  014324  0E00               	movlw	0
  8362  014326  0100               	movlb	0	; () banked
  8363  014328  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8364  01432A  0E0A               	movlw	10
  8365  01432C  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8366  01432E  0E00               	movlw	0
  8367  014330  0100               	movlb	0	; () banked
  8368  014332  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8369  014334  0E64               	movlw	100
  8370  014336  6F74               	movwf	___awmod@divisor& (0+255),b
  8371  014338  C0A5  F072         	movff	fround@prec,___awmod@dividend
  8372  01433C  0100               	movlb	0	; () banked
  8373  01433E  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8374  014340  EC72  F0AD         	call	___awmod	;wreg free
  8375  014344  C072  F078         	movff	?___awmod,___awdiv@dividend
  8376  014348  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  8377  01434C  EC52  F0AB         	call	___awdiv	;wreg free
  8378  014350  0100               	movlb	0	; () banked
  8379  014352  90D8               	bcf	status,0,c
  8380  014354  3778               	rlcf	?___awdiv& (0+255),f,b
  8381  014356  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8382  014358  0100               	movlb	0	; () banked
  8383  01435A  90D8               	bcf	status,0,c
  8384  01435C  3778               	rlcf	?___awdiv& (0+255),f,b
  8385  01435E  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8386  014360  0E24               	movlw	36
  8387  014362  0100               	movlb	0	; () banked
  8388  014364  2778               	addwf	?___awdiv& (0+255),f,b
  8389  014366  0E00               	movlw	0
  8390  014368  0100               	movlb	0	; () banked
  8391  01436A  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8392  01436C  0EB5               	movlw	low __npowers_
  8393  01436E  0100               	movlb	0	; () banked
  8394  014370  2578               	addwf	?___awdiv& (0+255),w,b
  8395  014372  6EF6               	movwf	tblptrl,c
  8396  014374  0EFE               	movlw	high __npowers_
  8397  014376  0100               	movlb	0	; () banked
  8398  014378  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8399  01437A  6EF7               	movwf	tblptrh,c
  8400  01437C                     	if	1	;There are 3 active tblptr bytes
  8401  01437C  6AF8               	clrf	tblptru,c
  8402  01437E  0E00               	movlw	low (__mediumconst shr (0+16))
  8403  014380  22F8               	addwfc	tblptru,f,c
  8404  014382                     	endif
  8405  014382  0009               	tblrd		*+
  8406  014384  CFF5 F084          	movff	tablat,___flmul@a
  8407  014388  0009               	tblrd		*+
  8408  01438A  CFF5 F085          	movff	tablat,___flmul@a+1
  8409  01438E  0009               	tblrd		*+
  8410  014390  CFF5 F086          	movff	tablat,___flmul@a+2
  8411  014394  000A               	tblrd		*-
  8412  014396  CFF5 F087          	movff	tablat,___flmul@a+3
  8413  01439A  0E00               	movlw	0
  8414  01439C  0100               	movlb	0	; () banked
  8415  01439E  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8416  0143A0  0E64               	movlw	100
  8417  0143A2  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8418  0143A4  C0A5  F078         	movff	fround@prec,___awdiv@dividend
  8419  0143A8  0100               	movlb	0	; () banked
  8420  0143AA  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  8421  0143AC  EC52  F0AB         	call	___awdiv	;wreg free
  8422  0143B0  0100               	movlb	0	; () banked
  8423  0143B2  90D8               	bcf	status,0,c
  8424  0143B4  3778               	rlcf	?___awdiv& (0+255),f,b
  8425  0143B6  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8426  0143B8  0100               	movlb	0	; () banked
  8427  0143BA  90D8               	bcf	status,0,c
  8428  0143BC  3778               	rlcf	?___awdiv& (0+255),f,b
  8429  0143BE  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8430  0143C0  0E48               	movlw	72
  8431  0143C2  0100               	movlb	0	; () banked
  8432  0143C4  2778               	addwf	?___awdiv& (0+255),f,b
  8433  0143C6  0E00               	movlw	0
  8434  0143C8  0100               	movlb	0	; () banked
  8435  0143CA  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8436  0143CC  0EB5               	movlw	low __npowers_
  8437  0143CE  0100               	movlb	0	; () banked
  8438  0143D0  2578               	addwf	?___awdiv& (0+255),w,b
  8439  0143D2  6EF6               	movwf	tblptrl,c
  8440  0143D4  0EFE               	movlw	high __npowers_
  8441  0143D6  0100               	movlb	0	; () banked
  8442  0143D8  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8443  0143DA  6EF7               	movwf	tblptrh,c
  8444  0143DC                     	if	1	;There are 3 active tblptr bytes
  8445  0143DC  6AF8               	clrf	tblptru,c
  8446  0143DE  0E00               	movlw	low (__mediumconst shr (0+16))
  8447  0143E0  22F8               	addwfc	tblptru,f,c
  8448  0143E2                     	endif
  8449  0143E2  0009               	tblrd		*+
  8450  0143E4  CFF5 F080          	movff	tablat,___flmul@b
  8451  0143E8  0009               	tblrd		*+
  8452  0143EA  CFF5 F081          	movff	tablat,___flmul@b+1
  8453  0143EE  0009               	tblrd		*+
  8454  0143F0  CFF5 F082          	movff	tablat,___flmul@b+2
  8455  0143F4  000A               	tblrd		*-
  8456  0143F6  CFF5 F083          	movff	tablat,___flmul@b+3
  8457  0143FA  EC8A  F09B         	call	___flmul	;wreg free
  8458  0143FE  C080  F0A1         	movff	?___flmul,_fround$4212
  8459  014402  C081  F0A2         	movff	?___flmul+1,_fround$4212+1
  8460  014406  C082  F0A3         	movff	?___flmul+2,_fround$4212+2
  8461  01440A  C083  F0A4         	movff	?___flmul+3,_fround$4212+3
  8462                           
  8463                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8464  01440E  0E00               	movlw	0
  8465  014410  0100               	movlb	0	; () banked
  8466  014412  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8467  014414  0E0A               	movlw	10
  8468  014416  6F74               	movwf	___awmod@divisor& (0+255),b
  8469  014418  C0A5  F072         	movff	fround@prec,___awmod@dividend
  8470  01441C  0100               	movlb	0	; () banked
  8471  01441E  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8472  014420  EC72  F0AD         	call	___awmod	;wreg free
  8473  014424  0100               	movlb	0	; () banked
  8474  014426  90D8               	bcf	status,0,c
  8475  014428  3772               	rlcf	?___awmod& (0+255),f,b
  8476  01442A  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8477  01442C  0100               	movlb	0	; () banked
  8478  01442E  90D8               	bcf	status,0,c
  8479  014430  3772               	rlcf	?___awmod& (0+255),f,b
  8480  014432  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8481  014434  0EB5               	movlw	low __npowers_
  8482  014436  0100               	movlb	0	; () banked
  8483  014438  2572               	addwf	?___awmod& (0+255),w,b
  8484  01443A  6EF6               	movwf	tblptrl,c
  8485  01443C  0EFE               	movlw	high __npowers_
  8486  01443E  0100               	movlb	0	; () banked
  8487  014440  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  8488  014442  6EF7               	movwf	tblptrh,c
  8489  014444                     	if	1	;There are 3 active tblptr bytes
  8490  014444  6AF8               	clrf	tblptru,c
  8491  014446  0E00               	movlw	low (__mediumconst shr (0+16))
  8492  014448  22F8               	addwfc	tblptru,f,c
  8493  01444A                     	endif
  8494  01444A  0009               	tblrd		*+
  8495  01444C  CFF5 F084          	movff	tablat,___flmul@a
  8496  014450  0009               	tblrd		*+
  8497  014452  CFF5 F085          	movff	tablat,___flmul@a+1
  8498  014456  0009               	tblrd		*+
  8499  014458  CFF5 F086          	movff	tablat,___flmul@a+2
  8500  01445C  000A               	tblrd		*-
  8501  01445E  CFF5 F087          	movff	tablat,___flmul@a+3
  8502  014462  C0A1  F080         	movff	_fround$4212,___flmul@b
  8503  014466  C0A2  F081         	movff	_fround$4212+1,___flmul@b+1
  8504  01446A  C0A3  F082         	movff	_fround$4212+2,___flmul@b+2
  8505  01446E  C0A4  F083         	movff	_fround$4212+3,___flmul@b+3
  8506  014472  EC8A  F09B         	call	___flmul	;wreg free
  8507  014476  C080  F09D         	movff	?___flmul,_fround$4213
  8508  01447A  C081  F09E         	movff	?___flmul+1,_fround$4213+1
  8509  01447E  C082  F09F         	movff	?___flmul+2,_fround$4213+2
  8510  014482  C083  F0A0         	movff	?___flmul+3,_fround$4213+3
  8511                           
  8512                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8513  014486  C09D  F080         	movff	_fround$4213,___flmul@b
  8514  01448A  C09E  F081         	movff	_fround$4213+1,___flmul@b+1
  8515  01448E  C09F  F082         	movff	_fround$4213+2,___flmul@b+2
  8516  014492  C0A0  F083         	movff	_fround$4213+3,___flmul@b+3
  8517  014496  0E00               	movlw	0
  8518  014498  0100               	movlb	0	; () banked
  8519  01449A  6F84               	movwf	___flmul@a& (0+255),b
  8520  01449C  0E00               	movlw	0
  8521  01449E  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8522  0144A0  0E00               	movlw	0
  8523  0144A2  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8524  0144A4  0E3F               	movlw	63
  8525  0144A6  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8526  0144A8  EC8A  F09B         	call	___flmul	;wreg free
  8527  0144AC  C080  F099         	movff	?___flmul,?_fround
  8528  0144B0  C081  F09A         	movff	?___flmul+1,?_fround+1
  8529  0144B4  C082  F09B         	movff	?___flmul+2,?_fround+2
  8530  0144B8  C083  F09C         	movff	?___flmul+3,?_fround+3
  8531  0144BC  0012               	return	
  8532  0144BE                     l8053:
  8533                           
  8534                           ;doprnt.c: 415: else if(prec > 10)
  8535  0144BE  0E0A               	movlw	10
  8536  0144C0  0100               	movlb	0	; () banked
  8537  0144C2  65A5               	cpfsgt	fround@prec& (0+255),b
  8538  0144C4  D078               	goto	l8061
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8542  0144C6  0E00               	movlw	0
  8543  0144C8  0100               	movlb	0	; () banked
  8544  0144CA  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8545  0144CC  0E0A               	movlw	10
  8546  0144CE  6F74               	movwf	___awmod@divisor& (0+255),b
  8547  0144D0  C0A5  F072         	movff	fround@prec,___awmod@dividend
  8548  0144D4  0100               	movlb	0	; () banked
  8549  0144D6  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8550  0144D8  EC72  F0AD         	call	___awmod	;wreg free
  8551  0144DC  0100               	movlb	0	; () banked
  8552  0144DE  90D8               	bcf	status,0,c
  8553  0144E0  3772               	rlcf	?___awmod& (0+255),f,b
  8554  0144E2  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8555  0144E4  0100               	movlb	0	; () banked
  8556  0144E6  90D8               	bcf	status,0,c
  8557  0144E8  3772               	rlcf	?___awmod& (0+255),f,b
  8558  0144EA  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8559  0144EC  0EB5               	movlw	low __npowers_
  8560  0144EE  0100               	movlb	0	; () banked
  8561  0144F0  2572               	addwf	?___awmod& (0+255),w,b
  8562  0144F2  6EF6               	movwf	tblptrl,c
  8563  0144F4  0EFE               	movlw	high __npowers_
  8564  0144F6  0100               	movlb	0	; () banked
  8565  0144F8  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  8566  0144FA  6EF7               	movwf	tblptrh,c
  8567  0144FC                     	if	1	;There are 3 active tblptr bytes
  8568  0144FC  6AF8               	clrf	tblptru,c
  8569  0144FE  0E00               	movlw	low (__mediumconst shr (0+16))
  8570  014500  22F8               	addwfc	tblptru,f,c
  8571  014502                     	endif
  8572  014502  0009               	tblrd		*+
  8573  014504  CFF5 F084          	movff	tablat,___flmul@a
  8574  014508  0009               	tblrd		*+
  8575  01450A  CFF5 F085          	movff	tablat,___flmul@a+1
  8576  01450E  0009               	tblrd		*+
  8577  014510  CFF5 F086          	movff	tablat,___flmul@a+2
  8578  014514  000A               	tblrd		*-
  8579  014516  CFF5 F087          	movff	tablat,___flmul@a+3
  8580  01451A  0E00               	movlw	0
  8581  01451C  0100               	movlb	0	; () banked
  8582  01451E  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8583  014520  0E0A               	movlw	10
  8584  014522  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8585  014524  C0A5  F078         	movff	fround@prec,___awdiv@dividend
  8586  014528  0100               	movlb	0	; () banked
  8587  01452A  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  8588  01452C  EC52  F0AB         	call	___awdiv	;wreg free
  8589  014530  0100               	movlb	0	; () banked
  8590  014532  90D8               	bcf	status,0,c
  8591  014534  3778               	rlcf	?___awdiv& (0+255),f,b
  8592  014536  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8593  014538  0100               	movlb	0	; () banked
  8594  01453A  90D8               	bcf	status,0,c
  8595  01453C  3778               	rlcf	?___awdiv& (0+255),f,b
  8596  01453E  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8597  014540  0E24               	movlw	36
  8598  014542  0100               	movlb	0	; () banked
  8599  014544  2778               	addwf	?___awdiv& (0+255),f,b
  8600  014546  0E00               	movlw	0
  8601  014548  0100               	movlb	0	; () banked
  8602  01454A  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8603  01454C  0EB5               	movlw	low __npowers_
  8604  01454E  0100               	movlb	0	; () banked
  8605  014550  2578               	addwf	?___awdiv& (0+255),w,b
  8606  014552  6EF6               	movwf	tblptrl,c
  8607  014554  0EFE               	movlw	high __npowers_
  8608  014556  0100               	movlb	0	; () banked
  8609  014558  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8610  01455A  6EF7               	movwf	tblptrh,c
  8611  01455C                     	if	1	;There are 3 active tblptr bytes
  8612  01455C  6AF8               	clrf	tblptru,c
  8613  01455E  0E00               	movlw	low (__mediumconst shr (0+16))
  8614  014560  22F8               	addwfc	tblptru,f,c
  8615  014562                     	endif
  8616  014562  0009               	tblrd		*+
  8617  014564  CFF5 F080          	movff	tablat,___flmul@b
  8618  014568  0009               	tblrd		*+
  8619  01456A  CFF5 F081          	movff	tablat,___flmul@b+1
  8620  01456E  0009               	tblrd		*+
  8621  014570  CFF5 F082          	movff	tablat,___flmul@b+2
  8622  014574  000A               	tblrd		*-
  8623  014576  CFF5 F083          	movff	tablat,___flmul@b+3
  8624  01457A  EC8A  F09B         	call	___flmul	;wreg free
  8625  01457E  C080  F0A1         	movff	?___flmul,_fround$4212
  8626  014582  C081  F0A2         	movff	?___flmul+1,_fround$4212+1
  8627  014586  C082  F0A3         	movff	?___flmul+2,_fround$4212+2
  8628  01458A  C083  F0A4         	movff	?___flmul+3,_fround$4212+3
  8629                           
  8630                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8631  01458E  C0A1  F080         	movff	_fround$4212,___flmul@b
  8632  014592  C0A2  F081         	movff	_fround$4212+1,___flmul@b+1
  8633  014596  C0A3  F082         	movff	_fround$4212+2,___flmul@b+2
  8634  01459A  C0A4  F083         	movff	_fround$4212+3,___flmul@b+3
  8635  01459E  0E00               	movlw	0
  8636  0145A0  0100               	movlb	0	; () banked
  8637  0145A2  6F84               	movwf	___flmul@a& (0+255),b
  8638  0145A4  0E00               	movlw	0
  8639  0145A6  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8640  0145A8  0E00               	movlw	0
  8641  0145AA  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8642  0145AC  0E3F               	movlw	63
  8643  0145AE  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8644  0145B0  EC8A  F09B         	call	___flmul	;wreg free
  8645  0145B4  D77B               	goto	L7
  8646  0145B6                     l8061:
  8647                           
  8648                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8649  0145B6  0100               	movlb	0	; () banked
  8650  0145B8  51A5               	movf	fround@prec& (0+255),w,b
  8651  0145BA  0D04               	mullw	4
  8652  0145BC  0EB5               	movlw	low __npowers_
  8653  0145BE  24F3               	addwf	prodl,w,c
  8654  0145C0  6EF6               	movwf	tblptrl,c
  8655  0145C2  0EFE               	movlw	high __npowers_
  8656  0145C4  20F4               	addwfc	prodh,w,c
  8657  0145C6  6EF7               	movwf	tblptrh,c
  8658  0145C8                     	if	1	;There are 3 active tblptr bytes
  8659  0145C8  6AF8               	clrf	tblptru,c
  8660  0145CA  0E00               	movlw	low (__mediumconst shr (0+16))
  8661  0145CC  22F8               	addwfc	tblptru,f,c
  8662  0145CE                     	endif
  8663  0145CE  0009               	tblrd		*+
  8664  0145D0  CFF5 F080          	movff	tablat,___flmul@b
  8665  0145D4  0009               	tblrd		*+
  8666  0145D6  CFF5 F081          	movff	tablat,___flmul@b+1
  8667  0145DA  0009               	tblrd		*+
  8668  0145DC  CFF5 F082          	movff	tablat,___flmul@b+2
  8669  0145E0  000A               	tblrd		*-
  8670  0145E2  CFF5 F083          	movff	tablat,___flmul@b+3
  8671  0145E6  0E00               	movlw	0
  8672  0145E8  0100               	movlb	0	; () banked
  8673  0145EA  6F84               	movwf	___flmul@a& (0+255),b
  8674  0145EC  0E00               	movlw	0
  8675  0145EE  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8676  0145F0  0E00               	movlw	0
  8677  0145F2  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8678  0145F4  0E3F               	movlw	63
  8679  0145F6  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8680  0145F8  EC8A  F09B         	call	___flmul	;wreg free
  8681  0145FC  C080  F099         	movff	?___flmul,?_fround
  8682  014600  C081  F09A         	movff	?___flmul+1,?_fround+1
  8683  014604  C082  F09B         	movff	?___flmul+2,?_fround+2
  8684  014608  C083  F09C         	movff	?___flmul+3,?_fround+3
  8685  01460C  0012               	return	
  8686  01460E                     __end_of_fround:
  8687                           	opt stack 0
  8688                           tblptru	equ	0xFF8
  8689                           tblptrh	equ	0xFF7
  8690                           tblptrl	equ	0xFF6
  8691                           tablat	equ	0xFF5
  8692                           prodh	equ	0xFF4
  8693                           prodl	equ	0xFF3
  8694                           intcon	equ	0xFF2
  8695                           postinc0	equ	0xFEE
  8696                           wreg	equ	0xFE8
  8697                           indf2	equ	0xFDF
  8698                           postinc2	equ	0xFDE
  8699                           fsr2h	equ	0xFDA
  8700                           fsr2l	equ	0xFD9
  8701                           status	equ	0xFD8
  8702                           
  8703 ;; *************** function ___flmul *****************
  8704 ;; Defined at:
  8705 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8706 ;; Parameters:    Size  Location     Type
  8707 ;;  b               4   32[BANK0 ] unsigned char 
  8708 ;;  a               4   36[BANK0 ] unsigned char 
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;  prod            4   51[BANK0 ] struct .
  8711 ;;  grs             4   46[BANK0 ] unsigned long 
  8712 ;;  temp            2   55[BANK0 ] struct .
  8713 ;;  bexp            1   50[BANK0 ] unsigned char 
  8714 ;;  aexp            1   45[BANK0 ] unsigned char 
  8715 ;;  sign            1   44[BANK0 ] unsigned char 
  8716 ;; Return value:  Size  Location     Type
  8717 ;;                  4   32[BANK0 ] unsigned char 
  8718 ;; Registers used:
  8719 ;;		wreg, status,2, status,0, prodl, prodh
  8720 ;; Tracked objects:
  8721 ;;		On entry : 0/0
  8722 ;;		On exit  : 0/0
  8723 ;;		Unchanged: 0/0
  8724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8725 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8726 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8727 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8728 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8729 ;;Total ram usage:       25 bytes
  8730 ;; Hardware stack levels used:    1
  8731 ;; Hardware stack levels required when called:    3
  8732 ;; This function calls:
  8733 ;;		Nothing
  8734 ;; This function is called by:
  8735 ;;		_main
  8736 ;;		_fround
  8737 ;;		_scale
  8738 ;;		_sprintf
  8739 ;; This function uses a non-reentrant model
  8740 ;;
  8741                           
  8742                           	psect	text12
  8743  013714                     __ptext12:
  8744                           	opt stack 0
  8745  013714                     ___flmul:
  8746                           	opt stack 27
  8747                           
  8748                           ;incstack = 0
  8749  013714  0100               	movlb	0	; () banked
  8750  013716  5183               	movf	(___flmul@b+3)& (0+255),w,b
  8751  013718  0B80               	andlw	128
  8752  01371A  0100               	movlb	0	; () banked
  8753  01371C  6F8C               	movwf	___flmul@sign& (0+255),b
  8754  01371E  0100               	movlb	0	; () banked
  8755  013720  5183               	movf	(___flmul@b+3)& (0+255),w,b
  8756  013722  2583               	addwf	(___flmul@b+3)& (0+255),w,b
  8757  013724  0100               	movlb	0	; () banked
  8758  013726  6F92               	movwf	___flmul@bexp& (0+255),b
  8759                           
  8760                           ; BSR set to: 0
  8761  013728  0100               	movlb	0	; () banked
  8762  01372A  AF82               	btfss	(___flmul@b+2)& (0+255),7,b
  8763  01372C  D002               	goto	l7807
  8764                           
  8765                           ; BSR set to: 0
  8766  01372E  0100               	movlb	0	; () banked
  8767  013730  8192               	bsf	___flmul@bexp& (0+255),0,b
  8768  013732                     l7807:
  8769                           
  8770                           ; BSR set to: 0
  8771  013732  0100               	movlb	0	; () banked
  8772  013734  5192               	movf	___flmul@bexp& (0+255),w,b
  8773  013736  0100               	movlb	0	; () banked
  8774  013738  B4D8               	btfsc	status,2,c
  8775  01373A  D010               	goto	l7815
  8776                           
  8777                           ; BSR set to: 0
  8778  01373C  0100               	movlb	0	; () banked
  8779  01373E  2992               	incf	___flmul@bexp& (0+255),w,b
  8780  013740  A4D8               	btfss	status,2,c
  8781  013742  D009               	goto	l7813
  8782                           
  8783                           ; BSR set to: 0
  8784  013744  0E00               	movlw	0
  8785  013746  0100               	movlb	0	; () banked
  8786  013748  6F80               	movwf	___flmul@b& (0+255),b
  8787  01374A  0E00               	movlw	0
  8788  01374C  6F81               	movwf	(___flmul@b+1)& (0+255),b
  8789  01374E  0E00               	movlw	0
  8790  013750  6F82               	movwf	(___flmul@b+2)& (0+255),b
  8791  013752  0E00               	movlw	0
  8792  013754  6F83               	movwf	(___flmul@b+3)& (0+255),b
  8793  013756                     l7813:
  8794                           
  8795                           ; BSR set to: 0
  8796  013756  0100               	movlb	0	; () banked
  8797  013758  8F82               	bsf	(___flmul@b+2)& (0+255),7,b
  8798  01375A  D009               	goto	l7817
  8799  01375C                     l7815:
  8800                           
  8801                           ; BSR set to: 0
  8802  01375C  0E00               	movlw	0
  8803  01375E  0100               	movlb	0	; () banked
  8804  013760  6F80               	movwf	___flmul@b& (0+255),b
  8805  013762  0E00               	movlw	0
  8806  013764  6F81               	movwf	(___flmul@b+1)& (0+255),b
  8807  013766  0E00               	movlw	0
  8808  013768  6F82               	movwf	(___flmul@b+2)& (0+255),b
  8809  01376A  0E00               	movlw	0
  8810  01376C  6F83               	movwf	(___flmul@b+3)& (0+255),b
  8811  01376E                     l7817:
  8812                           
  8813                           ; BSR set to: 0
  8814  01376E  0100               	movlb	0	; () banked
  8815  013770  5187               	movf	(___flmul@a+3)& (0+255),w,b
  8816  013772  0B80               	andlw	128
  8817  013774  0100               	movlb	0	; () banked
  8818  013776  1B8C               	xorwf	___flmul@sign& (0+255),f,b
  8819                           
  8820                           ; BSR set to: 0
  8821  013778  0100               	movlb	0	; () banked
  8822  01377A  5187               	movf	(___flmul@a+3)& (0+255),w,b
  8823  01377C  2587               	addwf	(___flmul@a+3)& (0+255),w,b
  8824  01377E  0100               	movlb	0	; () banked
  8825  013780  6F8D               	movwf	___flmul@aexp& (0+255),b
  8826                           
  8827                           ; BSR set to: 0
  8828  013782  0100               	movlb	0	; () banked
  8829  013784  AF86               	btfss	(___flmul@a+2)& (0+255),7,b
  8830  013786  D002               	goto	l7825
  8831                           
  8832                           ; BSR set to: 0
  8833  013788  0100               	movlb	0	; () banked
  8834  01378A  818D               	bsf	___flmul@aexp& (0+255),0,b
  8835  01378C                     l7825:
  8836                           
  8837                           ; BSR set to: 0
  8838  01378C  0100               	movlb	0	; () banked
  8839  01378E  518D               	movf	___flmul@aexp& (0+255),w,b
  8840  013790  0100               	movlb	0	; () banked
  8841  013792  B4D8               	btfsc	status,2,c
  8842  013794  D010               	goto	l7833
  8843                           
  8844                           ; BSR set to: 0
  8845  013796  0100               	movlb	0	; () banked
  8846  013798  298D               	incf	___flmul@aexp& (0+255),w,b
  8847  01379A  A4D8               	btfss	status,2,c
  8848  01379C  D009               	goto	l7831
  8849                           
  8850                           ; BSR set to: 0
  8851  01379E  0E00               	movlw	0
  8852  0137A0  0100               	movlb	0	; () banked
  8853  0137A2  6F84               	movwf	___flmul@a& (0+255),b
  8854  0137A4  0E00               	movlw	0
  8855  0137A6  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8856  0137A8  0E00               	movlw	0
  8857  0137AA  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8858  0137AC  0E00               	movlw	0
  8859  0137AE  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8860  0137B0                     l7831:
  8861                           
  8862                           ; BSR set to: 0
  8863  0137B0  0100               	movlb	0	; () banked
  8864  0137B2  8F86               	bsf	(___flmul@a+2)& (0+255),7,b
  8865  0137B4  D009               	goto	l1565
  8866  0137B6                     l7833:
  8867                           
  8868                           ; BSR set to: 0
  8869  0137B6  0E00               	movlw	0
  8870  0137B8  0100               	movlb	0	; () banked
  8871  0137BA  6F84               	movwf	___flmul@a& (0+255),b
  8872  0137BC  0E00               	movlw	0
  8873  0137BE  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8874  0137C0  0E00               	movlw	0
  8875  0137C2  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8876  0137C4  0E00               	movlw	0
  8877  0137C6  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8878  0137C8                     l1565:
  8879                           
  8880                           ; BSR set to: 0
  8881  0137C8  0100               	movlb	0	; () banked
  8882  0137CA  518D               	movf	___flmul@aexp& (0+255),w,b
  8883  0137CC  0100               	movlb	0	; () banked
  8884  0137CE  B4D8               	btfsc	status,2,c
  8885  0137D0  D005               	goto	l7837
  8886                           
  8887                           ; BSR set to: 0
  8888  0137D2  0100               	movlb	0	; () banked
  8889  0137D4  5192               	movf	___flmul@bexp& (0+255),w,b
  8890  0137D6  0100               	movlb	0	; () banked
  8891  0137D8  A4D8               	btfss	status,2,c
  8892  0137DA  D00A               	goto	l7841
  8893  0137DC                     l7837:
  8894                           
  8895                           ; BSR set to: 0
  8896  0137DC  0E00               	movlw	0
  8897  0137DE  0100               	movlb	0	; () banked
  8898  0137E0  6F80               	movwf	?___flmul& (0+255),b
  8899  0137E2  0E00               	movlw	0
  8900  0137E4  6F81               	movwf	(?___flmul+1)& (0+255),b
  8901  0137E6  0E00               	movlw	0
  8902  0137E8  6F82               	movwf	(?___flmul+2)& (0+255),b
  8903  0137EA  0E00               	movlw	0
  8904  0137EC  6F83               	movwf	(?___flmul+3)& (0+255),b
  8905                           
  8906                           ; BSR set to: 0
  8907  0137EE  0012               	return	
  8908  0137F0                     l7841:
  8909                           
  8910                           ; BSR set to: 0
  8911  0137F0  0100               	movlb	0	; () banked
  8912  0137F2  5186               	movf	(___flmul@a+2)& (0+255),w,b
  8913  0137F4  0100               	movlb	0	; () banked
  8914  0137F6  0380               	mulwf	___flmul@b& (0+255),b
  8915  0137F8  CFF3 F097          	movff	prodl,___flmul@temp
  8916  0137FC  CFF4 F098          	movff	prodh,___flmul@temp+1
  8917                           
  8918                           ; BSR set to: 0
  8919  013800  0100               	movlb	0	; () banked
  8920  013802  5197               	movf	___flmul@temp& (0+255),w,b
  8921  013804  0100               	movlb	0	; () banked
  8922  013806  6F8E               	movwf	___flmul@grs& (0+255),b
  8923  013808  6B8F               	clrf	(___flmul@grs+1)& (0+255),b
  8924  01380A  6B90               	clrf	(___flmul@grs+2)& (0+255),b
  8925  01380C  6B91               	clrf	(___flmul@grs+3)& (0+255),b
  8926                           
  8927                           ; BSR set to: 0
  8928  01380E  0100               	movlb	0	; () banked
  8929  013810  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8930  013812  0100               	movlb	0	; () banked
  8931  013814  6F93               	movwf	___flmul@prod& (0+255),b
  8932  013816  6B94               	clrf	(___flmul@prod+1)& (0+255),b
  8933  013818  6B95               	clrf	(___flmul@prod+2)& (0+255),b
  8934  01381A  6B96               	clrf	(___flmul@prod+3)& (0+255),b
  8935  01381C  0100               	movlb	0	; () banked
  8936  01381E  5185               	movf	(___flmul@a+1)& (0+255),w,b
  8937  013820  0100               	movlb	0	; () banked
  8938  013822  0381               	mulwf	(___flmul@b+1)& (0+255),b
  8939  013824  CFF3 F097          	movff	prodl,___flmul@temp
  8940  013828  CFF4 F098          	movff	prodh,___flmul@temp+1
  8941                           
  8942                           ; BSR set to: 0
  8943  01382C  0100               	movlb	0	; () banked
  8944  01382E  5197               	movf	___flmul@temp& (0+255),w,b
  8945  013830  0100               	movlb	0	; () banked
  8946  013832  278E               	addwf	___flmul@grs& (0+255),f,b
  8947  013834  0E00               	movlw	0
  8948  013836  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8949  013838  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8950  01383A  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8951                           
  8952                           ; BSR set to: 0
  8953  01383C  0100               	movlb	0	; () banked
  8954  01383E  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8955  013840  0100               	movlb	0	; () banked
  8956  013842  2793               	addwf	___flmul@prod& (0+255),f,b
  8957  013844  0E00               	movlw	0
  8958  013846  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8959  013848  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8960  01384A  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8961  01384C  0100               	movlb	0	; () banked
  8962  01384E  5184               	movf	___flmul@a& (0+255),w,b
  8963  013850  0100               	movlb	0	; () banked
  8964  013852  0382               	mulwf	(___flmul@b+2)& (0+255),b
  8965  013854  CFF3 F097          	movff	prodl,___flmul@temp
  8966  013858  CFF4 F098          	movff	prodh,___flmul@temp+1
  8967                           
  8968                           ; BSR set to: 0
  8969  01385C  0100               	movlb	0	; () banked
  8970  01385E  5197               	movf	___flmul@temp& (0+255),w,b
  8971  013860  0100               	movlb	0	; () banked
  8972  013862  278E               	addwf	___flmul@grs& (0+255),f,b
  8973  013864  0E00               	movlw	0
  8974  013866  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8975  013868  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8976  01386A  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8977                           
  8978                           ; BSR set to: 0
  8979  01386C  0100               	movlb	0	; () banked
  8980  01386E  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8981  013870  0100               	movlb	0	; () banked
  8982  013872  2793               	addwf	___flmul@prod& (0+255),f,b
  8983  013874  0E00               	movlw	0
  8984  013876  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8985  013878  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8986  01387A  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8987                           
  8988                           ; BSR set to: 0
  8989  01387C  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  8990  013880  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  8991  013884  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  8992  013888  0100               	movlb	0	; () banked
  8993  01388A  6B8E               	clrf	___flmul@grs& (0+255),b
  8994                           
  8995                           ; BSR set to: 0
  8996  01388C  0100               	movlb	0	; () banked
  8997  01388E  5184               	movf	___flmul@a& (0+255),w,b
  8998  013890  0100               	movlb	0	; () banked
  8999  013892  0381               	mulwf	(___flmul@b+1)& (0+255),b
  9000  013894  CFF3 F097          	movff	prodl,___flmul@temp
  9001  013898  CFF4 F098          	movff	prodh,___flmul@temp+1
  9002                           
  9003                           ; BSR set to: 0
  9004  01389C  0100               	movlb	0	; () banked
  9005  01389E  5197               	movf	___flmul@temp& (0+255),w,b
  9006  0138A0  0100               	movlb	0	; () banked
  9007  0138A2  278E               	addwf	___flmul@grs& (0+255),f,b
  9008  0138A4  0100               	movlb	0	; () banked
  9009  0138A6  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9010  0138A8  0100               	movlb	0	; () banked
  9011  0138AA  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9012  0138AC  0E00               	movlw	0
  9013  0138AE  0100               	movlb	0	; () banked
  9014  0138B0  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9015  0138B2  0E00               	movlw	0
  9016  0138B4  0100               	movlb	0	; () banked
  9017  0138B6  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9018                           
  9019                           ; BSR set to: 0
  9020  0138B8  0100               	movlb	0	; () banked
  9021  0138BA  5185               	movf	(___flmul@a+1)& (0+255),w,b
  9022  0138BC  0100               	movlb	0	; () banked
  9023  0138BE  0380               	mulwf	___flmul@b& (0+255),b
  9024  0138C0  CFF3 F097          	movff	prodl,___flmul@temp
  9025  0138C4  CFF4 F098          	movff	prodh,___flmul@temp+1
  9026                           
  9027                           ; BSR set to: 0
  9028  0138C8  0100               	movlb	0	; () banked
  9029  0138CA  5197               	movf	___flmul@temp& (0+255),w,b
  9030  0138CC  0100               	movlb	0	; () banked
  9031  0138CE  278E               	addwf	___flmul@grs& (0+255),f,b
  9032  0138D0  0100               	movlb	0	; () banked
  9033  0138D2  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9034  0138D4  0100               	movlb	0	; () banked
  9035  0138D6  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9036  0138D8  0E00               	movlw	0
  9037  0138DA  0100               	movlb	0	; () banked
  9038  0138DC  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9039  0138DE  0E00               	movlw	0
  9040  0138E0  0100               	movlb	0	; () banked
  9041  0138E2  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9042                           
  9043                           ; BSR set to: 0
  9044  0138E4  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  9045  0138E8  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  9046  0138EC  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  9047  0138F0  0100               	movlb	0	; () banked
  9048  0138F2  6B8E               	clrf	___flmul@grs& (0+255),b
  9049  0138F4  0100               	movlb	0	; () banked
  9050  0138F6  5184               	movf	___flmul@a& (0+255),w,b
  9051  0138F8  0100               	movlb	0	; () banked
  9052  0138FA  0380               	mulwf	___flmul@b& (0+255),b
  9053  0138FC  CFF3 F097          	movff	prodl,___flmul@temp
  9054  013900  CFF4 F098          	movff	prodh,___flmul@temp+1
  9055                           
  9056                           ; BSR set to: 0
  9057  013904  0100               	movlb	0	; () banked
  9058  013906  5197               	movf	___flmul@temp& (0+255),w,b
  9059  013908  0100               	movlb	0	; () banked
  9060  01390A  278E               	addwf	___flmul@grs& (0+255),f,b
  9061  01390C  0100               	movlb	0	; () banked
  9062  01390E  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9063  013910  0100               	movlb	0	; () banked
  9064  013912  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9065  013914  0E00               	movlw	0
  9066  013916  0100               	movlb	0	; () banked
  9067  013918  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9068  01391A  0E00               	movlw	0
  9069  01391C  0100               	movlb	0	; () banked
  9070  01391E  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9071                           
  9072                           ; BSR set to: 0
  9073  013920  0100               	movlb	0	; () banked
  9074  013922  5186               	movf	(___flmul@a+2)& (0+255),w,b
  9075  013924  0100               	movlb	0	; () banked
  9076  013926  0381               	mulwf	(___flmul@b+1)& (0+255),b
  9077  013928  CFF3 F097          	movff	prodl,___flmul@temp
  9078  01392C  CFF4 F098          	movff	prodh,___flmul@temp+1
  9079  013930  0100               	movlb	0	; () banked
  9080  013932  5197               	movf	___flmul@temp& (0+255),w,b
  9081  013934  0100               	movlb	0	; () banked
  9082  013936  2793               	addwf	___flmul@prod& (0+255),f,b
  9083  013938  0100               	movlb	0	; () banked
  9084  01393A  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9085  01393C  0100               	movlb	0	; () banked
  9086  01393E  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9087  013940  0E00               	movlw	0
  9088  013942  0100               	movlb	0	; () banked
  9089  013944  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9090  013946  0E00               	movlw	0
  9091  013948  0100               	movlb	0	; () banked
  9092  01394A  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9093                           
  9094                           ; BSR set to: 0
  9095  01394C  0100               	movlb	0	; () banked
  9096  01394E  5185               	movf	(___flmul@a+1)& (0+255),w,b
  9097  013950  0100               	movlb	0	; () banked
  9098  013952  0382               	mulwf	(___flmul@b+2)& (0+255),b
  9099  013954  CFF3 F097          	movff	prodl,___flmul@temp
  9100  013958  CFF4 F098          	movff	prodh,___flmul@temp+1
  9101                           
  9102                           ; BSR set to: 0
  9103  01395C  0100               	movlb	0	; () banked
  9104  01395E  5197               	movf	___flmul@temp& (0+255),w,b
  9105  013960  0100               	movlb	0	; () banked
  9106  013962  2793               	addwf	___flmul@prod& (0+255),f,b
  9107  013964  0100               	movlb	0	; () banked
  9108  013966  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9109  013968  0100               	movlb	0	; () banked
  9110  01396A  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9111  01396C  0E00               	movlw	0
  9112  01396E  0100               	movlb	0	; () banked
  9113  013970  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9114  013972  0E00               	movlw	0
  9115  013974  0100               	movlb	0	; () banked
  9116  013976  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9117  013978  0100               	movlb	0	; () banked
  9118  01397A  5186               	movf	(___flmul@a+2)& (0+255),w,b
  9119  01397C  0100               	movlb	0	; () banked
  9120  01397E  0382               	mulwf	(___flmul@b+2)& (0+255),b
  9121  013980  CFF3 F097          	movff	prodl,___flmul@temp
  9122  013984  CFF4 F098          	movff	prodh,___flmul@temp+1
  9123                           
  9124                           ; BSR set to: 0
  9125  013988  0100               	movlb	0	; () banked
  9126  01398A  5197               	movf	___flmul@temp& (0+255),w,b
  9127  01398C  0100               	movlb	0	; () banked
  9128  01398E  6F88               	movwf	??___flmul& (0+255),b
  9129  013990  0100               	movlb	0	; () banked
  9130  013992  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9131  013994  0100               	movlb	0	; () banked
  9132  013996  6F89               	movwf	(??___flmul+1)& (0+255),b
  9133  013998  0100               	movlb	0	; () banked
  9134  01399A  6B8A               	clrf	(??___flmul+2)& (0+255),b
  9135  01399C  0100               	movlb	0	; () banked
  9136  01399E  6B8B               	clrf	(??___flmul+3)& (0+255),b
  9137  0139A0  C08A  F08B         	movff	??___flmul+2,??___flmul+3
  9138  0139A4  C089  F08A         	movff	??___flmul+1,??___flmul+2
  9139  0139A8  C088  F089         	movff	??___flmul,??___flmul+1
  9140  0139AC  0100               	movlb	0	; () banked
  9141  0139AE  6B88               	clrf	??___flmul& (0+255),b
  9142  0139B0  0100               	movlb	0	; () banked
  9143  0139B2  5188               	movf	??___flmul& (0+255),w,b
  9144  0139B4  0100               	movlb	0	; () banked
  9145  0139B6  2793               	addwf	___flmul@prod& (0+255),f,b
  9146  0139B8  0100               	movlb	0	; () banked
  9147  0139BA  5189               	movf	(??___flmul+1)& (0+255),w,b
  9148  0139BC  0100               	movlb	0	; () banked
  9149  0139BE  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9150  0139C0  0100               	movlb	0	; () banked
  9151  0139C2  518A               	movf	(??___flmul+2)& (0+255),w,b
  9152  0139C4  0100               	movlb	0	; () banked
  9153  0139C6  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9154  0139C8  0100               	movlb	0	; () banked
  9155  0139CA  518B               	movf	(??___flmul+3)& (0+255),w,b
  9156  0139CC  0100               	movlb	0	; () banked
  9157  0139CE  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9158                           
  9159                           ; BSR set to: 0
  9160  0139D0  C08E  F088         	movff	___flmul@grs,??___flmul
  9161  0139D4  C08F  F089         	movff	___flmul@grs+1,??___flmul+1
  9162  0139D8  C090  F08A         	movff	___flmul@grs+2,??___flmul+2
  9163  0139DC  C091  F08B         	movff	___flmul@grs+3,??___flmul+3
  9164  0139E0  0E19               	movlw	25
  9165  0139E2  D006               	goto	u10380
  9166  0139E4                     u10385:
  9167  0139E4  0100               	movlb	0	; () banked
  9168  0139E6  90D8               	bcf	status,0,c
  9169  0139E8  338B               	rrcf	(??___flmul+3)& (0+255),f,b
  9170  0139EA  338A               	rrcf	(??___flmul+2)& (0+255),f,b
  9171  0139EC  3389               	rrcf	(??___flmul+1)& (0+255),f,b
  9172  0139EE  3388               	rrcf	??___flmul& (0+255),f,b
  9173  0139F0                     u10380:
  9174  0139F0  2EE8               	decfsz	wreg,f,c
  9175  0139F2  D7F8               	goto	u10385
  9176  0139F4  0100               	movlb	0	; () banked
  9177  0139F6  5188               	movf	??___flmul& (0+255),w,b
  9178  0139F8  0100               	movlb	0	; () banked
  9179  0139FA  2793               	addwf	___flmul@prod& (0+255),f,b
  9180  0139FC  0100               	movlb	0	; () banked
  9181  0139FE  5189               	movf	(??___flmul+1)& (0+255),w,b
  9182  013A00  0100               	movlb	0	; () banked
  9183  013A02  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9184  013A04  0100               	movlb	0	; () banked
  9185  013A06  518A               	movf	(??___flmul+2)& (0+255),w,b
  9186  013A08  0100               	movlb	0	; () banked
  9187  013A0A  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9188  013A0C  0100               	movlb	0	; () banked
  9189  013A0E  518B               	movf	(??___flmul+3)& (0+255),w,b
  9190  013A10  0100               	movlb	0	; () banked
  9191  013A12  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9192                           
  9193                           ; BSR set to: 0
  9194  013A14  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  9195  013A18  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  9196  013A1C  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  9197  013A20  0100               	movlb	0	; () banked
  9198  013A22  6B8E               	clrf	___flmul@grs& (0+255),b
  9199                           
  9200                           ; BSR set to: 0
  9201  013A24  0100               	movlb	0	; () banked
  9202  013A26  518D               	movf	___flmul@aexp& (0+255),w,b
  9203  013A28  C092  F088         	movff	___flmul@bexp,??___flmul
  9204  013A2C  0100               	movlb	0	; () banked
  9205  013A2E  6B89               	clrf	(??___flmul+1)& (0+255),b
  9206  013A30  0100               	movlb	0	; () banked
  9207  013A32  2788               	addwf	??___flmul& (0+255),f,b
  9208  013A34  0E00               	movlw	0
  9209  013A36  2389               	addwfc	(??___flmul+1)& (0+255),f,b
  9210  013A38  0E82               	movlw	130
  9211  013A3A  0100               	movlb	0	; () banked
  9212  013A3C  2588               	addwf	??___flmul& (0+255),w,b
  9213  013A3E  0100               	movlb	0	; () banked
  9214  013A40  6F97               	movwf	___flmul@temp& (0+255),b
  9215  013A42  0EFF               	movlw	255
  9216  013A44  0100               	movlb	0	; () banked
  9217  013A46  2189               	addwfc	(??___flmul+1)& (0+255),w,b
  9218  013A48  0100               	movlb	0	; () banked
  9219  013A4A  6F98               	movwf	(___flmul@temp+1)& (0+255),b
  9220  013A4C  D015               	goto	l7889
  9221  013A4E                     l7883:
  9222                           
  9223                           ; BSR set to: 0
  9224  013A4E  0100               	movlb	0	; () banked
  9225  013A50  90D8               	bcf	status,0,c
  9226  013A52  3793               	rlcf	___flmul@prod& (0+255),f,b
  9227  013A54  3794               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9228  013A56  3795               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9229  013A58  3796               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9230                           
  9231                           ; BSR set to: 0
  9232  013A5A  0100               	movlb	0	; () banked
  9233  013A5C  AF91               	btfss	(___flmul@grs+3)& (0+255),7,b
  9234  013A5E  D002               	goto	l1572
  9235                           
  9236                           ; BSR set to: 0
  9237  013A60  0100               	movlb	0	; () banked
  9238  013A62  8193               	bsf	___flmul@prod& (0+255),0,b
  9239  013A64                     l1572:
  9240                           
  9241                           ; BSR set to: 0
  9242  013A64  0100               	movlb	0	; () banked
  9243  013A66  90D8               	bcf	status,0,c
  9244  013A68  378E               	rlcf	___flmul@grs& (0+255),f,b
  9245  013A6A  378F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9246  013A6C  3790               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9247  013A6E  3791               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9248  013A70  0100               	movlb	0	; () banked
  9249  013A72  0797               	decf	___flmul@temp& (0+255),f,b
  9250  013A74  A0D8               	btfss	status,0,c
  9251  013A76  0798               	decf	(___flmul@temp+1)& (0+255),f,b
  9252  013A78                     l7889:
  9253                           
  9254                           ; BSR set to: 0
  9255  013A78  0100               	movlb	0	; () banked
  9256  013A7A  AF95               	btfss	(___flmul@prod+2)& (0+255),7,b
  9257  013A7C  D7E8               	goto	l7883
  9258                           
  9259                           ; BSR set to: 0
  9260                           
  9261                           ; BSR set to: 0
  9262  013A7E  0E00               	movlw	0
  9263  013A80  0100               	movlb	0	; () banked
  9264  013A82  6F8D               	movwf	___flmul@aexp& (0+255),b
  9265                           
  9266                           ; BSR set to: 0
  9267  013A84  0100               	movlb	0	; () banked
  9268  013A86  AF91               	btfss	(___flmul@grs+3)& (0+255),7,b
  9269  013A88  D024               	goto	l1574
  9270                           
  9271                           ; BSR set to: 0
  9272  013A8A  0EFF               	movlw	255
  9273  013A8C  0100               	movlb	0	; () banked
  9274  013A8E  158E               	andwf	___flmul@grs& (0+255),w,b
  9275  013A90  0100               	movlb	0	; () banked
  9276  013A92  6F88               	movwf	??___flmul& (0+255),b
  9277  013A94  0EFF               	movlw	255
  9278  013A96  0100               	movlb	0	; () banked
  9279  013A98  158F               	andwf	(___flmul@grs+1)& (0+255),w,b
  9280  013A9A  0100               	movlb	0	; () banked
  9281  013A9C  6F89               	movwf	(??___flmul+1)& (0+255),b
  9282  013A9E  0EFF               	movlw	255
  9283  013AA0  0100               	movlb	0	; () banked
  9284  013AA2  1590               	andwf	(___flmul@grs+2)& (0+255),w,b
  9285  013AA4  0100               	movlb	0	; () banked
  9286  013AA6  6F8A               	movwf	(??___flmul+2)& (0+255),b
  9287  013AA8  0E7F               	movlw	127
  9288  013AAA  0100               	movlb	0	; () banked
  9289  013AAC  1591               	andwf	(___flmul@grs+3)& (0+255),w,b
  9290  013AAE  0100               	movlb	0	; () banked
  9291  013AB0  6F8B               	movwf	(??___flmul+3)& (0+255),b
  9292  013AB2  0100               	movlb	0	; () banked
  9293  013AB4  5188               	movf	??___flmul& (0+255),w,b
  9294  013AB6  0100               	movlb	0	; () banked
  9295  013AB8  1189               	iorwf	(??___flmul+1)& (0+255),w,b
  9296  013ABA  0100               	movlb	0	; () banked
  9297  013ABC  118A               	iorwf	(??___flmul+2)& (0+255),w,b
  9298  013ABE  0100               	movlb	0	; () banked
  9299  013AC0  118B               	iorwf	(??___flmul+3)& (0+255),w,b
  9300  013AC2  A4D8               	btfss	status,2,c
  9301  013AC4  D003               	goto	l7899
  9302                           
  9303                           ; BSR set to: 0
  9304                           
  9305                           ; BSR set to: 0
  9306  013AC6  0100               	movlb	0	; () banked
  9307  013AC8  A193               	btfss	___flmul@prod& (0+255),0,b
  9308  013ACA  D003               	goto	l1574
  9309  013ACC                     l7899:
  9310                           
  9311                           ; BSR set to: 0
  9312  013ACC  0E01               	movlw	1
  9313  013ACE  0100               	movlb	0	; () banked
  9314  013AD0  6F8D               	movwf	___flmul@aexp& (0+255),b
  9315  013AD2                     l1574:
  9316                           
  9317                           ; BSR set to: 0
  9318  013AD2  0100               	movlb	0	; () banked
  9319  013AD4  518D               	movf	___flmul@aexp& (0+255),w,b
  9320  013AD6  0100               	movlb	0	; () banked
  9321  013AD8  B4D8               	btfsc	status,2,c
  9322  013ADA  D023               	goto	l7909
  9323                           
  9324                           ; BSR set to: 0
  9325  013ADC  0E01               	movlw	1
  9326  013ADE  0100               	movlb	0	; () banked
  9327  013AE0  2793               	addwf	___flmul@prod& (0+255),f,b
  9328  013AE2  0E00               	movlw	0
  9329  013AE4  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9330  013AE6  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9331  013AE8  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9332                           
  9333                           ; BSR set to: 0
  9334  013AEA  0100               	movlb	0	; () banked
  9335  013AEC  A196               	btfss	(___flmul@prod+3)& (0+255),0,b
  9336  013AEE  D019               	goto	l7909
  9337                           
  9338                           ; BSR set to: 0
  9339  013AF0  C093  F088         	movff	___flmul@prod,??___flmul
  9340  013AF4  C094  F089         	movff	___flmul@prod+1,??___flmul+1
  9341  013AF8  C095  F08A         	movff	___flmul@prod+2,??___flmul+2
  9342  013AFC  C096  F08B         	movff	___flmul@prod+3,??___flmul+3
  9343  013B00  0100               	movlb	0	; () banked
  9344  013B02  358B               	rlcf	(??___flmul+3)& (0+255),w,b
  9345  013B04  338B               	rrcf	(??___flmul+3)& (0+255),f,b
  9346  013B06  338A               	rrcf	(??___flmul+2)& (0+255),f,b
  9347  013B08  3389               	rrcf	(??___flmul+1)& (0+255),f,b
  9348  013B0A  3388               	rrcf	??___flmul& (0+255),f,b
  9349  013B0C  C088  F093         	movff	??___flmul,___flmul@prod
  9350  013B10  C089  F094         	movff	??___flmul+1,___flmul@prod+1
  9351  013B14  C08A  F095         	movff	??___flmul+2,___flmul@prod+2
  9352  013B18  C08B  F096         	movff	??___flmul+3,___flmul@prod+3
  9353                           
  9354                           ; BSR set to: 0
  9355  013B1C  0100               	movlb	0	; () banked
  9356  013B1E  4B97               	infsnz	___flmul@temp& (0+255),f,b
  9357  013B20  2B98               	incf	(___flmul@temp+1)& (0+255),f,b
  9358  013B22                     l7909:
  9359                           
  9360                           ; BSR set to: 0
  9361  013B22  0100               	movlb	0	; () banked
  9362  013B24  BF98               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9363  013B26  D010               	goto	l7913
  9364  013B28  0100               	movlb	0	; () banked
  9365  013B2A  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9366  013B2C  E104               	bnz	u10460
  9367  013B2E  0100               	movlb	0	; () banked
  9368  013B30  2997               	incf	___flmul@temp& (0+255),w,b
  9369  013B32  A0D8               	btfss	status,0,c
  9370  013B34  D009               	goto	l7913
  9371  013B36                     u10460:
  9372                           
  9373                           ; BSR set to: 0
  9374  013B36  0E00               	movlw	0
  9375  013B38  0100               	movlb	0	; () banked
  9376  013B3A  6F93               	movwf	___flmul@prod& (0+255),b
  9377  013B3C  0E00               	movlw	0
  9378  013B3E  6F94               	movwf	(___flmul@prod+1)& (0+255),b
  9379  013B40  0E80               	movlw	128
  9380  013B42  6F95               	movwf	(___flmul@prod+2)& (0+255),b
  9381  013B44  0E7F               	movlw	127
  9382  013B46  D02B               	goto	L8
  9383  013B48                     l7913:
  9384                           
  9385                           ; BSR set to: 0
  9386  013B48  0100               	movlb	0	; () banked
  9387  013B4A  BF98               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9388  013B4C  D007               	goto	l7915
  9389  013B4E  0100               	movlb	0	; () banked
  9390  013B50  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9391  013B52  E111               	bnz	l1582
  9392  013B54  0100               	movlb	0	; () banked
  9393  013B56  0597               	decf	___flmul@temp& (0+255),w,b
  9394  013B58  B0D8               	btfsc	status,0,c
  9395  013B5A  D00D               	goto	l1582
  9396  013B5C                     l7915:
  9397                           
  9398                           ; BSR set to: 0
  9399  013B5C  0E00               	movlw	0
  9400  013B5E  0100               	movlb	0	; () banked
  9401  013B60  6F93               	movwf	___flmul@prod& (0+255),b
  9402  013B62  0E00               	movlw	0
  9403  013B64  6F94               	movwf	(___flmul@prod+1)& (0+255),b
  9404  013B66  0E00               	movlw	0
  9405  013B68  6F95               	movwf	(___flmul@prod+2)& (0+255),b
  9406  013B6A  0E00               	movlw	0
  9407  013B6C  6F96               	movwf	(___flmul@prod+3)& (0+255),b
  9408  013B6E  0E00               	movlw	0
  9409  013B70  0100               	movlb	0	; () banked
  9410  013B72  6F8C               	movwf	___flmul@sign& (0+255),b
  9411  013B74  D015               	goto	l7925
  9412  013B76                     l1582:
  9413                           
  9414                           ; BSR set to: 0
  9415  013B76  C097  F092         	movff	___flmul@temp,___flmul@bexp
  9416                           
  9417                           ; BSR set to: 0
  9418  013B7A  0EFF               	movlw	255
  9419  013B7C  0100               	movlb	0	; () banked
  9420  013B7E  1793               	andwf	___flmul@prod& (0+255),f,b
  9421  013B80  0EFF               	movlw	255
  9422  013B82  1794               	andwf	(___flmul@prod+1)& (0+255),f,b
  9423  013B84  0E7F               	movlw	127
  9424  013B86  1795               	andwf	(___flmul@prod+2)& (0+255),f,b
  9425  013B88  0E00               	movlw	0
  9426  013B8A  1796               	andwf	(___flmul@prod+3)& (0+255),f,b
  9427                           
  9428                           ; BSR set to: 0
  9429  013B8C  0100               	movlb	0	; () banked
  9430  013B8E  A192               	btfss	___flmul@bexp& (0+255),0,b
  9431  013B90  D002               	goto	l7923
  9432                           
  9433                           ; BSR set to: 0
  9434  013B92  0100               	movlb	0	; () banked
  9435  013B94  8F95               	bsf	(___flmul@prod+2)& (0+255),7,b
  9436  013B96                     l7923:
  9437                           
  9438                           ; BSR set to: 0
  9439  013B96  0100               	movlb	0	; () banked
  9440  013B98  90D8               	bcf	status,0,c
  9441  013B9A  3192               	rrcf	___flmul@bexp& (0+255),w,b
  9442  013B9C  0100               	movlb	0	; () banked
  9443  013B9E                     L8:
  9444  013B9E  6F96               	movwf	(___flmul@prod+3)& (0+255),b
  9445  013BA0                     l7925:
  9446                           
  9447                           ; BSR set to: 0
  9448  013BA0  0100               	movlb	0	; () banked
  9449  013BA2  518C               	movf	___flmul@sign& (0+255),w,b
  9450  013BA4  0100               	movlb	0	; () banked
  9451  013BA6  1396               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9452                           
  9453                           ; BSR set to: 0
  9454  013BA8  C093  F080         	movff	___flmul@prod,?___flmul
  9455  013BAC  C094  F081         	movff	___flmul@prod+1,?___flmul+1
  9456  013BB0  C095  F082         	movff	___flmul@prod+2,?___flmul+2
  9457  013BB4  C096  F083         	movff	___flmul@prod+3,?___flmul+3
  9458  013BB8  0012               	return	
  9459  013BBA                     __end_of___flmul:
  9460                           	opt stack 0
  9461                           tblptru	equ	0xFF8
  9462                           tblptrh	equ	0xFF7
  9463                           tblptrl	equ	0xFF6
  9464                           tablat	equ	0xFF5
  9465                           prodh	equ	0xFF4
  9466                           prodl	equ	0xFF3
  9467                           intcon	equ	0xFF2
  9468                           postinc0	equ	0xFEE
  9469                           wreg	equ	0xFE8
  9470                           indf2	equ	0xFDF
  9471                           postinc2	equ	0xFDE
  9472                           fsr2h	equ	0xFDA
  9473                           fsr2l	equ	0xFD9
  9474                           status	equ	0xFD8
  9475                           
  9476 ;; *************** function ___awmod *****************
  9477 ;; Defined at:
  9478 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  9479 ;; Parameters:    Size  Location     Type
  9480 ;;  dividend        2   18[BANK0 ] int 
  9481 ;;  divisor         2   20[BANK0 ] int 
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;  sign            1   23[BANK0 ] unsigned char 
  9484 ;;  counter         1   22[BANK0 ] unsigned char 
  9485 ;; Return value:  Size  Location     Type
  9486 ;;                  2   18[BANK0 ] int 
  9487 ;; Registers used:
  9488 ;;		wreg, status,2, status,0
  9489 ;; Tracked objects:
  9490 ;;		On entry : 0/0
  9491 ;;		On exit  : 0/0
  9492 ;;		Unchanged: 0/0
  9493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9494 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9495 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9497 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9498 ;;Total ram usage:        6 bytes
  9499 ;; Hardware stack levels used:    1
  9500 ;; Hardware stack levels required when called:    3
  9501 ;; This function calls:
  9502 ;;		Nothing
  9503 ;; This function is called by:
  9504 ;;		_fround
  9505 ;;		_scale
  9506 ;; This function uses a non-reentrant model
  9507 ;;
  9508                           
  9509                           	psect	text13
  9510  015AE4                     __ptext13:
  9511                           	opt stack 0
  9512  015AE4                     ___awmod:
  9513                           	opt stack 24
  9514                           
  9515                           ; BSR set to: 0
  9516                           ;incstack = 0
  9517  015AE4  0E00               	movlw	0
  9518  015AE6  0100               	movlb	0	; () banked
  9519  015AE8  6F77               	movwf	___awmod@sign& (0+255),b
  9520                           
  9521                           ; BSR set to: 0
  9522  015AEA  0100               	movlb	0	; () banked
  9523  015AEC  AF73               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9524  015AEE  D008               	goto	l7983
  9525                           
  9526                           ; BSR set to: 0
  9527  015AF0  0100               	movlb	0	; () banked
  9528  015AF2  6D72               	negf	___awmod@dividend& (0+255),b
  9529  015AF4  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
  9530  015AF6  B0D8               	btfsc	status,0,c
  9531  015AF8  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
  9532                           
  9533                           ; BSR set to: 0
  9534  015AFA  0E01               	movlw	1
  9535  015AFC  0100               	movlb	0	; () banked
  9536  015AFE  6F77               	movwf	___awmod@sign& (0+255),b
  9537  015B00                     l7983:
  9538                           
  9539                           ; BSR set to: 0
  9540  015B00  0100               	movlb	0	; () banked
  9541  015B02  AF75               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9542  015B04  D005               	goto	l7987
  9543                           
  9544                           ; BSR set to: 0
  9545  015B06  0100               	movlb	0	; () banked
  9546  015B08  6D74               	negf	___awmod@divisor& (0+255),b
  9547  015B0A  1F75               	comf	(___awmod@divisor+1)& (0+255),f,b
  9548  015B0C  B0D8               	btfsc	status,0,c
  9549  015B0E  2B75               	incf	(___awmod@divisor+1)& (0+255),f,b
  9550  015B10                     l7987:
  9551                           
  9552                           ; BSR set to: 0
  9553  015B10  0100               	movlb	0	; () banked
  9554  015B12  5174               	movf	___awmod@divisor& (0+255),w,b
  9555  015B14  0100               	movlb	0	; () banked
  9556  015B16  1175               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9557  015B18  B4D8               	btfsc	status,2,c
  9558  015B1A  D026               	goto	l8003
  9559                           
  9560                           ; BSR set to: 0
  9561  015B1C  0E01               	movlw	1
  9562  015B1E  0100               	movlb	0	; () banked
  9563  015B20  6F76               	movwf	___awmod@counter& (0+255),b
  9564  015B22  D006               	goto	l7993
  9565  015B24                     l7991:
  9566                           
  9567                           ; BSR set to: 0
  9568  015B24  0100               	movlb	0	; () banked
  9569  015B26  90D8               	bcf	status,0,c
  9570  015B28  3774               	rlcf	___awmod@divisor& (0+255),f,b
  9571  015B2A  3775               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9572  015B2C  0100               	movlb	0	; () banked
  9573  015B2E  2B76               	incf	___awmod@counter& (0+255),f,b
  9574  015B30                     l7993:
  9575                           
  9576                           ; BSR set to: 0
  9577  015B30  0100               	movlb	0	; () banked
  9578  015B32  AF75               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9579  015B34  D7F7               	goto	l7991
  9580  015B36                     l7995:
  9581                           
  9582                           ; BSR set to: 0
  9583  015B36  0100               	movlb	0	; () banked
  9584  015B38  5174               	movf	___awmod@divisor& (0+255),w,b
  9585  015B3A  0100               	movlb	0	; () banked
  9586  015B3C  5D72               	subwf	___awmod@dividend& (0+255),w,b
  9587  015B3E  0100               	movlb	0	; () banked
  9588  015B40  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
  9589  015B42  0100               	movlb	0	; () banked
  9590  015B44  5973               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9591  015B46  A0D8               	btfss	status,0,c
  9592  015B48  D008               	goto	l7999
  9593                           
  9594                           ; BSR set to: 0
  9595  015B4A  0100               	movlb	0	; () banked
  9596  015B4C  5174               	movf	___awmod@divisor& (0+255),w,b
  9597  015B4E  0100               	movlb	0	; () banked
  9598  015B50  5F72               	subwf	___awmod@dividend& (0+255),f,b
  9599  015B52  0100               	movlb	0	; () banked
  9600  015B54  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
  9601  015B56  0100               	movlb	0	; () banked
  9602  015B58  5B73               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9603  015B5A                     l7999:
  9604                           
  9605                           ; BSR set to: 0
  9606  015B5A  0100               	movlb	0	; () banked
  9607  015B5C  90D8               	bcf	status,0,c
  9608  015B5E  3375               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9609  015B60  3374               	rrcf	___awmod@divisor& (0+255),f,b
  9610                           
  9611                           ; BSR set to: 0
  9612  015B62  0100               	movlb	0	; () banked
  9613  015B64  2F76               	decfsz	___awmod@counter& (0+255),f,b
  9614  015B66  D7E7               	goto	l7995
  9615  015B68                     l8003:
  9616                           
  9617                           ; BSR set to: 0
  9618  015B68  0100               	movlb	0	; () banked
  9619  015B6A  5177               	movf	___awmod@sign& (0+255),w,b
  9620  015B6C  0100               	movlb	0	; () banked
  9621  015B6E  B4D8               	btfsc	status,2,c
  9622  015B70  D005               	goto	l8007
  9623                           
  9624                           ; BSR set to: 0
  9625  015B72  0100               	movlb	0	; () banked
  9626  015B74  6D72               	negf	___awmod@dividend& (0+255),b
  9627  015B76  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
  9628  015B78  B0D8               	btfsc	status,0,c
  9629  015B7A  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
  9630  015B7C                     l8007:
  9631                           
  9632                           ; BSR set to: 0
  9633  015B7C  C072  F072         	movff	___awmod@dividend,?___awmod
  9634  015B80  C073  F073         	movff	___awmod@dividend+1,?___awmod+1
  9635  015B84  0012               	return	
  9636  015B86                     __end_of___awmod:
  9637                           	opt stack 0
  9638                           tblptru	equ	0xFF8
  9639                           tblptrh	equ	0xFF7
  9640                           tblptrl	equ	0xFF6
  9641                           tablat	equ	0xFF5
  9642                           prodh	equ	0xFF4
  9643                           prodl	equ	0xFF3
  9644                           intcon	equ	0xFF2
  9645                           postinc0	equ	0xFEE
  9646                           wreg	equ	0xFE8
  9647                           indf2	equ	0xFDF
  9648                           postinc2	equ	0xFDE
  9649                           fsr2h	equ	0xFDA
  9650                           fsr2l	equ	0xFD9
  9651                           status	equ	0xFD8
  9652                           
  9653 ;; *************** function ___awdiv *****************
  9654 ;; Defined at:
  9655 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9656 ;; Parameters:    Size  Location     Type
  9657 ;;  dividend        2   24[BANK0 ] int 
  9658 ;;  divisor         2   26[BANK0 ] int 
  9659 ;; Auto vars:     Size  Location     Type
  9660 ;;  quotient        2   30[BANK0 ] int 
  9661 ;;  sign            1   29[BANK0 ] unsigned char 
  9662 ;;  counter         1   28[BANK0 ] unsigned char 
  9663 ;; Return value:  Size  Location     Type
  9664 ;;                  2   24[BANK0 ] int 
  9665 ;; Registers used:
  9666 ;;		wreg, status,2, status,0
  9667 ;; Tracked objects:
  9668 ;;		On entry : 0/0
  9669 ;;		On exit  : 0/0
  9670 ;;		Unchanged: 0/0
  9671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9672 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9673 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9675 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9676 ;;Total ram usage:        8 bytes
  9677 ;; Hardware stack levels used:    1
  9678 ;; Hardware stack levels required when called:    3
  9679 ;; This function calls:
  9680 ;;		Nothing
  9681 ;; This function is called by:
  9682 ;;		_fround
  9683 ;;		_scale
  9684 ;;		_sprintf
  9685 ;; This function uses a non-reentrant model
  9686 ;;
  9687                           
  9688                           	psect	text14
  9689  0156A4                     __ptext14:
  9690                           	opt stack 0
  9691  0156A4                     ___awdiv:
  9692                           	opt stack 24
  9693                           
  9694                           ; BSR set to: 0
  9695                           ;incstack = 0
  9696  0156A4  0E00               	movlw	0
  9697  0156A6  0100               	movlb	0	; () banked
  9698  0156A8  6F7D               	movwf	___awdiv@sign& (0+255),b
  9699                           
  9700                           ; BSR set to: 0
  9701  0156AA  0100               	movlb	0	; () banked
  9702  0156AC  AF7B               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9703  0156AE  D008               	goto	l7939
  9704                           
  9705                           ; BSR set to: 0
  9706  0156B0  0100               	movlb	0	; () banked
  9707  0156B2  6D7A               	negf	___awdiv@divisor& (0+255),b
  9708  0156B4  1F7B               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9709  0156B6  B0D8               	btfsc	status,0,c
  9710  0156B8  2B7B               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9711                           
  9712                           ; BSR set to: 0
  9713  0156BA  0E01               	movlw	1
  9714  0156BC  0100               	movlb	0	; () banked
  9715  0156BE  6F7D               	movwf	___awdiv@sign& (0+255),b
  9716  0156C0                     l7939:
  9717                           
  9718                           ; BSR set to: 0
  9719  0156C0  0100               	movlb	0	; () banked
  9720  0156C2  AF79               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9721  0156C4  D008               	goto	l7945
  9722                           
  9723                           ; BSR set to: 0
  9724  0156C6  0100               	movlb	0	; () banked
  9725  0156C8  6D78               	negf	___awdiv@dividend& (0+255),b
  9726  0156CA  1F79               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9727  0156CC  B0D8               	btfsc	status,0,c
  9728  0156CE  2B79               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9729                           
  9730                           ; BSR set to: 0
  9731  0156D0  0E01               	movlw	1
  9732  0156D2  0100               	movlb	0	; () banked
  9733  0156D4  1B7D               	xorwf	___awdiv@sign& (0+255),f,b
  9734  0156D6                     l7945:
  9735                           
  9736                           ; BSR set to: 0
  9737  0156D6  0E00               	movlw	0
  9738  0156D8  0100               	movlb	0	; () banked
  9739  0156DA  6F7F               	movwf	(___awdiv@quotient+1)& (0+255),b
  9740  0156DC  0E00               	movlw	0
  9741  0156DE  6F7E               	movwf	___awdiv@quotient& (0+255),b
  9742                           
  9743                           ; BSR set to: 0
  9744  0156E0  0100               	movlb	0	; () banked
  9745  0156E2  517A               	movf	___awdiv@divisor& (0+255),w,b
  9746  0156E4  0100               	movlb	0	; () banked
  9747  0156E6  117B               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9748  0156E8  B4D8               	btfsc	status,2,c
  9749  0156EA  D02C               	goto	l7967
  9750                           
  9751                           ; BSR set to: 0
  9752  0156EC  0E01               	movlw	1
  9753  0156EE  0100               	movlb	0	; () banked
  9754  0156F0  6F7C               	movwf	___awdiv@counter& (0+255),b
  9755  0156F2  D006               	goto	l7953
  9756  0156F4                     l7951:
  9757                           
  9758                           ; BSR set to: 0
  9759  0156F4  0100               	movlb	0	; () banked
  9760  0156F6  90D8               	bcf	status,0,c
  9761  0156F8  377A               	rlcf	___awdiv@divisor& (0+255),f,b
  9762  0156FA  377B               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9763  0156FC  0100               	movlb	0	; () banked
  9764  0156FE  2B7C               	incf	___awdiv@counter& (0+255),f,b
  9765  015700                     l7953:
  9766                           
  9767                           ; BSR set to: 0
  9768  015700  0100               	movlb	0	; () banked
  9769  015702  AF7B               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9770  015704  D7F7               	goto	l7951
  9771  015706                     l7955:
  9772                           
  9773                           ; BSR set to: 0
  9774  015706  0100               	movlb	0	; () banked
  9775  015708  90D8               	bcf	status,0,c
  9776  01570A  377E               	rlcf	___awdiv@quotient& (0+255),f,b
  9777  01570C  377F               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9778                           
  9779                           ; BSR set to: 0
  9780  01570E  0100               	movlb	0	; () banked
  9781  015710  517A               	movf	___awdiv@divisor& (0+255),w,b
  9782  015712  0100               	movlb	0	; () banked
  9783  015714  5D78               	subwf	___awdiv@dividend& (0+255),w,b
  9784  015716  0100               	movlb	0	; () banked
  9785  015718  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9786  01571A  0100               	movlb	0	; () banked
  9787  01571C  5979               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9788  01571E  A0D8               	btfss	status,0,c
  9789  015720  D00A               	goto	l7963
  9790                           
  9791                           ; BSR set to: 0
  9792  015722  0100               	movlb	0	; () banked
  9793  015724  517A               	movf	___awdiv@divisor& (0+255),w,b
  9794  015726  0100               	movlb	0	; () banked
  9795  015728  5F78               	subwf	___awdiv@dividend& (0+255),f,b
  9796  01572A  0100               	movlb	0	; () banked
  9797  01572C  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9798  01572E  0100               	movlb	0	; () banked
  9799  015730  5B79               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9800                           
  9801                           ; BSR set to: 0
  9802  015732  0100               	movlb	0	; () banked
  9803  015734  817E               	bsf	___awdiv@quotient& (0+255),0,b
  9804  015736                     l7963:
  9805                           
  9806                           ; BSR set to: 0
  9807  015736  0100               	movlb	0	; () banked
  9808  015738  90D8               	bcf	status,0,c
  9809  01573A  337B               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9810  01573C  337A               	rrcf	___awdiv@divisor& (0+255),f,b
  9811                           
  9812                           ; BSR set to: 0
  9813  01573E  0100               	movlb	0	; () banked
  9814  015740  2F7C               	decfsz	___awdiv@counter& (0+255),f,b
  9815  015742  D7E1               	goto	l7955
  9816  015744                     l7967:
  9817                           
  9818                           ; BSR set to: 0
  9819  015744  0100               	movlb	0	; () banked
  9820  015746  517D               	movf	___awdiv@sign& (0+255),w,b
  9821  015748  0100               	movlb	0	; () banked
  9822  01574A  B4D8               	btfsc	status,2,c
  9823  01574C  D005               	goto	l7971
  9824                           
  9825                           ; BSR set to: 0
  9826  01574E  0100               	movlb	0	; () banked
  9827  015750  6D7E               	negf	___awdiv@quotient& (0+255),b
  9828  015752  1F7F               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9829  015754  B0D8               	btfsc	status,0,c
  9830  015756  2B7F               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9831  015758                     l7971:
  9832                           
  9833                           ; BSR set to: 0
  9834  015758  C07E  F078         	movff	___awdiv@quotient,?___awdiv
  9835  01575C  C07F  F079         	movff	___awdiv@quotient+1,?___awdiv+1
  9836  015760  0012               	return	
  9837  015762                     __end_of___awdiv:
  9838                           	opt stack 0
  9839                           tblptru	equ	0xFF8
  9840                           tblptrh	equ	0xFF7
  9841                           tblptrl	equ	0xFF6
  9842                           tablat	equ	0xFF5
  9843                           prodh	equ	0xFF4
  9844                           prodl	equ	0xFF3
  9845                           intcon	equ	0xFF2
  9846                           postinc0	equ	0xFEE
  9847                           wreg	equ	0xFE8
  9848                           indf2	equ	0xFDF
  9849                           postinc2	equ	0xFDE
  9850                           fsr2h	equ	0xFDA
  9851                           fsr2l	equ	0xFD9
  9852                           status	equ	0xFD8
  9853                           
  9854 ;; *************** function __tdiv_to_l_ *****************
  9855 ;; Defined at:
  9856 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  9857 ;; Parameters:    Size  Location     Type
  9858 ;;  f1              4   18[BANK0 ] float 
  9859 ;;  f2              4   22[BANK0 ] float 
  9860 ;; Auto vars:     Size  Location     Type
  9861 ;;  quot            4   29[BANK0 ] unsigned long 
  9862 ;;  exp1            1   34[BANK0 ] unsigned char 
  9863 ;;  cntr            1   33[BANK0 ] unsigned char 
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  4   18[BANK0 ] unsigned long 
  9866 ;; Registers used:
  9867 ;;		wreg, status,2, status,0
  9868 ;; Tracked objects:
  9869 ;;		On entry : 0/0
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9873 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9874 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9875 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9876 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9877 ;;Total ram usage:       17 bytes
  9878 ;; Hardware stack levels used:    1
  9879 ;; Hardware stack levels required when called:    3
  9880 ;; This function calls:
  9881 ;;		Nothing
  9882 ;; This function is called by:
  9883 ;;		_sprintf
  9884 ;; This function uses a non-reentrant model
  9885 ;;
  9886                           
  9887                           	psect	text15
  9888  014D10                     __ptext15:
  9889                           	opt stack 0
  9890  014D10                     __tdiv_to_l_:
  9891                           	opt stack 25
  9892                           
  9893                           ; BSR set to: 0
  9894                           ;incstack = 0
  9895  014D10  C074  F07A         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9896  014D14  0100               	movlb	0	; () banked
  9897  014D16  6B7B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9898  014D18  6B7C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9899  014D1A  0100               	movlb	0	; () banked
  9900  014D1C  3573               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9901  014D1E  0100               	movlb	0	; () banked
  9902  014D20  377A               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9903  014D22  E301               	bnc	u10721
  9904  014D24  817B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9905  014D26                     u10721:
  9906  014D26  0100               	movlb	0	; () banked
  9907  014D28  517A               	movf	??__tdiv_to_l_& (0+255),w,b
  9908  014D2A  0100               	movlb	0	; () banked
  9909  014D2C  6F82               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9910  014D2E  0100               	movlb	0	; () banked
  9911  014D30  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9912  014D32  A4D8               	btfss	status,2,c
  9913  014D34  D00A               	goto	l8121
  9914                           
  9915                           ; BSR set to: 0
  9916  014D36  0E00               	movlw	0
  9917  014D38  0100               	movlb	0	; () banked
  9918  014D3A  6F72               	movwf	?__tdiv_to_l_& (0+255),b
  9919  014D3C  0E00               	movlw	0
  9920  014D3E  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9921  014D40  0E00               	movlw	0
  9922  014D42  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9923  014D44  0E00               	movlw	0
  9924  014D46  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9925                           
  9926                           ; BSR set to: 0
  9927  014D48  0012               	return	
  9928  014D4A                     l8121:
  9929                           
  9930                           ; BSR set to: 0
  9931  014D4A  C078  F07A         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9932  014D4E  0100               	movlb	0	; () banked
  9933  014D50  6B7B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9934  014D52  6B7C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9935  014D54  0100               	movlb	0	; () banked
  9936  014D56  3577               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9937  014D58  0100               	movlb	0	; () banked
  9938  014D5A  377A               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9939  014D5C  E301               	bnc	u10741
  9940  014D5E  817B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9941  014D60                     u10741:
  9942  014D60  0100               	movlb	0	; () banked
  9943  014D62  517A               	movf	??__tdiv_to_l_& (0+255),w,b
  9944  014D64  0100               	movlb	0	; () banked
  9945  014D66  6F81               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9946  014D68  0100               	movlb	0	; () banked
  9947  014D6A  5181               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9948  014D6C  A4D8               	btfss	status,2,c
  9949  014D6E  D00A               	goto	l8127
  9950                           
  9951                           ; BSR set to: 0
  9952  014D70  0E00               	movlw	0
  9953  014D72  0100               	movlb	0	; () banked
  9954  014D74  6F72               	movwf	?__tdiv_to_l_& (0+255),b
  9955  014D76  0E00               	movlw	0
  9956  014D78  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9957  014D7A  0E00               	movlw	0
  9958  014D7C  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9959  014D7E  0E00               	movlw	0
  9960  014D80  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9961                           
  9962                           ; BSR set to: 0
  9963  014D82  0012               	return	
  9964  014D84                     l8127:
  9965                           
  9966                           ; BSR set to: 0
  9967  014D84  0100               	movlb	0	; () banked
  9968  014D86  8F73               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9969                           
  9970                           ; BSR set to: 0
  9971  014D88  0EFF               	movlw	255
  9972  014D8A  0100               	movlb	0	; () banked
  9973  014D8C  1772               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9974  014D8E  0EFF               	movlw	255
  9975  014D90  0100               	movlb	0	; () banked
  9976  014D92  1773               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9977  014D94  0E00               	movlw	0
  9978  014D96  0100               	movlb	0	; () banked
  9979  014D98  1774               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9980  014D9A  0100               	movlb	0	; () banked
  9981  014D9C  8F77               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9982                           
  9983                           ; BSR set to: 0
  9984  014D9E  0EFF               	movlw	255
  9985  014DA0  0100               	movlb	0	; () banked
  9986  014DA2  1776               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9987  014DA4  0EFF               	movlw	255
  9988  014DA6  0100               	movlb	0	; () banked
  9989  014DA8  1777               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9990  014DAA  0E00               	movlw	0
  9991  014DAC  0100               	movlb	0	; () banked
  9992  014DAE  1778               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9993                           
  9994                           ; BSR set to: 0
  9995  014DB0  0E00               	movlw	0
  9996  014DB2  0100               	movlb	0	; () banked
  9997  014DB4  6F7D               	movwf	__tdiv_to_l_@quot& (0+255),b
  9998  014DB6  0E00               	movlw	0
  9999  014DB8  6F7E               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 10000  014DBA  0E00               	movlw	0
 10001  014DBC  6F7F               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 10002  014DBE  0E00               	movlw	0
 10003  014DC0  6F80               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 10004                           
 10005                           ; BSR set to: 0
 10006  014DC2  0E7F               	movlw	127
 10007  014DC4  0100               	movlb	0	; () banked
 10008  014DC6  5F82               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10009                           
 10010                           ; BSR set to: 0
 10011  014DC8  0100               	movlb	0	; () banked
 10012  014DCA  5181               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10013  014DCC  0F98               	addlw	152
 10014  014DCE  0100               	movlb	0	; () banked
 10015  014DD0  5F82               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10016                           
 10017                           ; BSR set to: 0
 10018  014DD2  0E18               	movlw	24
 10019  014DD4  0100               	movlb	0	; () banked
 10020  014DD6  6F81               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10021  014DD8                     l1289:
 10022                           
 10023                           ; BSR set to: 0
 10024  014DD8  0100               	movlb	0	; () banked
 10025  014DDA  90D8               	bcf	status,0,c
 10026  014DDC  377D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10027  014DDE  377E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10028  014DE0  377F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10029  014DE2  3780               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10030                           
 10031                           ; BSR set to: 0
 10032  014DE4  0100               	movlb	0	; () banked
 10033  014DE6  5176               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10034  014DE8  0100               	movlb	0	; () banked
 10035  014DEA  5D72               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10036  014DEC  0100               	movlb	0	; () banked
 10037  014DEE  5177               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10038  014DF0  0100               	movlb	0	; () banked
 10039  014DF2  5973               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10040  014DF4  0100               	movlb	0	; () banked
 10041  014DF6  5178               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10042  014DF8  0100               	movlb	0	; () banked
 10043  014DFA  5974               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10044  014DFC  A0D8               	btfss	status,0,c
 10045  014DFE  D00E               	goto	l1290
 10046                           
 10047                           ; BSR set to: 0
 10048  014E00  0100               	movlb	0	; () banked
 10049  014E02  5176               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10050  014E04  0100               	movlb	0	; () banked
 10051  014E06  5F72               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10052  014E08  0100               	movlb	0	; () banked
 10053  014E0A  5177               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10054  014E0C  0100               	movlb	0	; () banked
 10055  014E0E  5B73               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10056  014E10  0100               	movlb	0	; () banked
 10057  014E12  5178               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10058  014E14  0100               	movlb	0	; () banked
 10059  014E16  5B74               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10060                           
 10061                           ; BSR set to: 0
 10062  014E18  0100               	movlb	0	; () banked
 10063  014E1A  817D               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10064  014E1C                     l1290:
 10065                           
 10066                           ; BSR set to: 0
 10067  014E1C  0100               	movlb	0	; () banked
 10068  014E1E  90D8               	bcf	status,0,c
 10069  014E20  3772               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10070  014E22  3773               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10071  014E24  3774               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10072                           
 10073                           ; BSR set to: 0
 10074  014E26  0100               	movlb	0	; () banked
 10075  014E28  2F81               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10076  014E2A  D7D6               	goto	l1289
 10077                           
 10078                           ; BSR set to: 0
 10079                           
 10080                           ; BSR set to: 0
 10081  014E2C  0100               	movlb	0	; () banked
 10082  014E2E  AF82               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10083  014E30  D01A               	goto	l8161
 10084                           
 10085                           ; BSR set to: 0
 10086  014E32  0100               	movlb	0	; () banked
 10087  014E34  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10088  014E36  0A80               	xorlw	128
 10089  014E38  0F97               	addlw	151
 10090  014E3A  B0D8               	btfsc	status,0,c
 10091  014E3C  D00A               	goto	l8157
 10092                           
 10093                           ; BSR set to: 0
 10094  014E3E  0E00               	movlw	0
 10095  014E40  0100               	movlb	0	; () banked
 10096  014E42  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 10097  014E44  0E00               	movlw	0
 10098  014E46  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10099  014E48  0E00               	movlw	0
 10100  014E4A  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10101  014E4C  0E00               	movlw	0
 10102  014E4E  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10103                           
 10104                           ; BSR set to: 0
 10105  014E50  0012               	return	
 10106  014E52                     l8157:
 10107                           
 10108                           ; BSR set to: 0
 10109  014E52  0100               	movlb	0	; () banked
 10110  014E54  90D8               	bcf	status,0,c
 10111  014E56  3380               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10112  014E58  337F               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10113  014E5A  337E               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10114  014E5C  337D               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10115                           
 10116                           ; BSR set to: 0
 10117  014E5E  0100               	movlb	0	; () banked
 10118  014E60  3F82               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10119  014E62  D7F7               	goto	l8157
 10120                           
 10121                           ; BSR set to: 0
 10122  014E64  D01B               	goto	l1296
 10123  014E66                     l8161:
 10124                           
 10125                           ; BSR set to: 0
 10126  014E66  0E17               	movlw	23
 10127  014E68  0100               	movlb	0	; () banked
 10128  014E6A  6582               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10129  014E6C  D012               	goto	l8169
 10130                           
 10131                           ; BSR set to: 0
 10132  014E6E  0E00               	movlw	0
 10133  014E70  0100               	movlb	0	; () banked
 10134  014E72  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 10135  014E74  0E00               	movlw	0
 10136  014E76  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10137  014E78  0E00               	movlw	0
 10138  014E7A  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10139  014E7C  0E00               	movlw	0
 10140  014E7E  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10141                           
 10142                           ; BSR set to: 0
 10143  014E80  0012               	return	
 10144  014E82                     l8167:
 10145                           
 10146                           ; BSR set to: 0
 10147  014E82  0100               	movlb	0	; () banked
 10148  014E84  90D8               	bcf	status,0,c
 10149  014E86  377D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10150  014E88  377E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10151  014E8A  377F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10152  014E8C  3780               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10153  014E8E  0100               	movlb	0	; () banked
 10154  014E90  0782               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10155  014E92                     l8169:
 10156                           
 10157                           ; BSR set to: 0
 10158  014E92  0100               	movlb	0	; () banked
 10159  014E94  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10160  014E96  0100               	movlb	0	; () banked
 10161  014E98  A4D8               	btfss	status,2,c
 10162  014E9A  D7F3               	goto	l8167
 10163  014E9C                     l1296:
 10164                           
 10165                           ; BSR set to: 0
 10166  014E9C  C07D  F072         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10167  014EA0  C07E  F073         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10168  014EA4  C07F  F074         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10169  014EA8  C080  F075         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10170                           
 10171                           ; BSR set to: 0
 10172  014EAC  0012               	return		;funcret
 10173  014EAE                     __end_of__tdiv_to_l_:
 10174                           	opt stack 0
 10175                           tblptru	equ	0xFF8
 10176                           tblptrh	equ	0xFF7
 10177                           tblptrl	equ	0xFF6
 10178                           tablat	equ	0xFF5
 10179                           prodh	equ	0xFF4
 10180                           prodl	equ	0xFF3
 10181                           intcon	equ	0xFF2
 10182                           postinc0	equ	0xFEE
 10183                           wreg	equ	0xFE8
 10184                           indf2	equ	0xFDF
 10185                           postinc2	equ	0xFDE
 10186                           fsr2h	equ	0xFDA
 10187                           fsr2l	equ	0xFD9
 10188                           status	equ	0xFD8
 10189                           
 10190 ;; *************** function __div_to_l_ *****************
 10191 ;; Defined at:
 10192 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
 10193 ;; Parameters:    Size  Location     Type
 10194 ;;  f1              4   18[BANK0 ] unsigned long 
 10195 ;;  f2              4   22[BANK0 ] unsigned long 
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;  quot            4   26[BANK0 ] unsigned long 
 10198 ;;  exp1            1   31[BANK0 ] unsigned char 
 10199 ;;  cntr            1   30[BANK0 ] unsigned char 
 10200 ;; Return value:  Size  Location     Type
 10201 ;;                  4   18[BANK0 ] unsigned long 
 10202 ;; Registers used:
 10203 ;;		wreg, status,2, status,0
 10204 ;; Tracked objects:
 10205 ;;		On entry : 0/0
 10206 ;;		On exit  : 0/0
 10207 ;;		Unchanged: 0/0
 10208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10209 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10210 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10212 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10213 ;;Total ram usage:       14 bytes
 10214 ;; Hardware stack levels used:    1
 10215 ;; Hardware stack levels required when called:    3
 10216 ;; This function calls:
 10217 ;;		Nothing
 10218 ;; This function is called by:
 10219 ;;		_sprintf
 10220 ;; This function uses a non-reentrant model
 10221 ;;
 10222                           
 10223                           	psect	text16
 10224  01503E                     __ptext16:
 10225                           	opt stack 0
 10226  01503E                     __div_to_l_:
 10227                           	opt stack 25
 10228                           
 10229                           ; BSR set to: 0
 10230                           ;incstack = 0
 10231  01503E  0100               	movlb	0	; () banked
 10232  015040  3574               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10233  015042  3575               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10234  015044  0100               	movlb	0	; () banked
 10235  015046  6F7F               	movwf	__div_to_l_@exp1& (0+255),b
 10236  015048  0100               	movlb	0	; () banked
 10237  01504A  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 10238  01504C  A4D8               	btfss	status,2,c
 10239  01504E  D00A               	goto	l8177
 10240                           
 10241                           ; BSR set to: 0
 10242  015050  0E00               	movlw	0
 10243  015052  0100               	movlb	0	; () banked
 10244  015054  6F72               	movwf	?__div_to_l_& (0+255),b
 10245  015056  0E00               	movlw	0
 10246  015058  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10247  01505A  0E00               	movlw	0
 10248  01505C  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10249  01505E  0E00               	movlw	0
 10250  015060  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10251                           
 10252                           ; BSR set to: 0
 10253  015062  0012               	return	
 10254  015064                     l8177:
 10255                           
 10256                           ; BSR set to: 0
 10257  015064  0100               	movlb	0	; () banked
 10258  015066  3578               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10259  015068  3579               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10260  01506A  0100               	movlb	0	; () banked
 10261  01506C  6F7E               	movwf	__div_to_l_@cntr& (0+255),b
 10262  01506E  0100               	movlb	0	; () banked
 10263  015070  517E               	movf	__div_to_l_@cntr& (0+255),w,b
 10264  015072  A4D8               	btfss	status,2,c
 10265  015074  D00A               	goto	l8183
 10266                           
 10267                           ; BSR set to: 0
 10268  015076  0E00               	movlw	0
 10269  015078  0100               	movlb	0	; () banked
 10270  01507A  6F72               	movwf	?__div_to_l_& (0+255),b
 10271  01507C  0E00               	movlw	0
 10272  01507E  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10273  015080  0E00               	movlw	0
 10274  015082  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10275  015084  0E00               	movlw	0
 10276  015086  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10277                           
 10278                           ; BSR set to: 0
 10279  015088  0012               	return	
 10280  01508A                     l8183:
 10281                           
 10282                           ; BSR set to: 0
 10283  01508A  0100               	movlb	0	; () banked
 10284  01508C  8F74               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10285                           
 10286                           ; BSR set to: 0
 10287  01508E  0EFF               	movlw	255
 10288  015090  0100               	movlb	0	; () banked
 10289  015092  1772               	andwf	__div_to_l_@f1& (0+255),f,b
 10290  015094  0EFF               	movlw	255
 10291  015096  1773               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10292  015098  0EFF               	movlw	255
 10293  01509A  1774               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10294  01509C  0E00               	movlw	0
 10295  01509E  1775               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10296                           
 10297                           ; BSR set to: 0
 10298  0150A0  0100               	movlb	0	; () banked
 10299  0150A2  8F78               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10300  0150A4  0EFF               	movlw	255
 10301  0150A6  0100               	movlb	0	; () banked
 10302  0150A8  1776               	andwf	__div_to_l_@f2& (0+255),f,b
 10303  0150AA  0EFF               	movlw	255
 10304  0150AC  1777               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10305  0150AE  0EFF               	movlw	255
 10306  0150B0  1778               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10307  0150B2  0E00               	movlw	0
 10308  0150B4  1779               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10309                           
 10310                           ; BSR set to: 0
 10311  0150B6  0E00               	movlw	0
 10312  0150B8  0100               	movlb	0	; () banked
 10313  0150BA  6F7A               	movwf	__div_to_l_@quot& (0+255),b
 10314  0150BC  0E00               	movlw	0
 10315  0150BE  6F7B               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10316  0150C0  0E00               	movlw	0
 10317  0150C2  6F7C               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10318  0150C4  0E00               	movlw	0
 10319  0150C6  6F7D               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10320                           
 10321                           ; BSR set to: 0
 10322  0150C8  0E7F               	movlw	127
 10323  0150CA  0100               	movlb	0	; () banked
 10324  0150CC  5F7F               	subwf	__div_to_l_@exp1& (0+255),f,b
 10325                           
 10326                           ; BSR set to: 0
 10327  0150CE  0100               	movlb	0	; () banked
 10328  0150D0  517E               	movf	__div_to_l_@cntr& (0+255),w,b
 10329  0150D2  0FA0               	addlw	160
 10330  0150D4  0100               	movlb	0	; () banked
 10331  0150D6  5F7F               	subwf	__div_to_l_@exp1& (0+255),f,b
 10332                           
 10333                           ; BSR set to: 0
 10334  0150D8  0E20               	movlw	32
 10335  0150DA  0100               	movlb	0	; () banked
 10336  0150DC  6F7E               	movwf	__div_to_l_@cntr& (0+255),b
 10337  0150DE                     l8197:
 10338                           
 10339                           ; BSR set to: 0
 10340  0150DE  0100               	movlb	0	; () banked
 10341  0150E0  90D8               	bcf	status,0,c
 10342  0150E2  377A               	rlcf	__div_to_l_@quot& (0+255),f,b
 10343  0150E4  377B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10344  0150E6  377C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10345  0150E8  377D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10346                           
 10347                           ; BSR set to: 0
 10348  0150EA  0100               	movlb	0	; () banked
 10349  0150EC  5176               	movf	__div_to_l_@f2& (0+255),w,b
 10350  0150EE  0100               	movlb	0	; () banked
 10351  0150F0  5D72               	subwf	__div_to_l_@f1& (0+255),w,b
 10352  0150F2  0100               	movlb	0	; () banked
 10353  0150F4  5177               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10354  0150F6  0100               	movlb	0	; () banked
 10355  0150F8  5973               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10356  0150FA  0100               	movlb	0	; () banked
 10357  0150FC  5178               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10358  0150FE  0100               	movlb	0	; () banked
 10359  015100  5974               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10360  015102  0100               	movlb	0	; () banked
 10361  015104  5179               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10362  015106  0100               	movlb	0	; () banked
 10363  015108  5975               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10364  01510A  A0D8               	btfss	status,0,c
 10365  01510C  D012               	goto	l8205
 10366                           
 10367                           ; BSR set to: 0
 10368  01510E  0100               	movlb	0	; () banked
 10369  015110  5176               	movf	__div_to_l_@f2& (0+255),w,b
 10370  015112  0100               	movlb	0	; () banked
 10371  015114  5F72               	subwf	__div_to_l_@f1& (0+255),f,b
 10372  015116  0100               	movlb	0	; () banked
 10373  015118  5177               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10374  01511A  0100               	movlb	0	; () banked
 10375  01511C  5B73               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10376  01511E  0100               	movlb	0	; () banked
 10377  015120  5178               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10378  015122  0100               	movlb	0	; () banked
 10379  015124  5B74               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10380  015126  0100               	movlb	0	; () banked
 10381  015128  5179               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10382  01512A  0100               	movlb	0	; () banked
 10383  01512C  5B75               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10384                           
 10385                           ; BSR set to: 0
 10386  01512E  0100               	movlb	0	; () banked
 10387  015130  817A               	bsf	__div_to_l_@quot& (0+255),0,b
 10388  015132                     l8205:
 10389                           
 10390                           ; BSR set to: 0
 10391  015132  0100               	movlb	0	; () banked
 10392  015134  90D8               	bcf	status,0,c
 10393  015136  3772               	rlcf	__div_to_l_@f1& (0+255),f,b
 10394  015138  3773               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10395  01513A  3774               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10396  01513C  3775               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10397                           
 10398                           ; BSR set to: 0
 10399  01513E  0100               	movlb	0	; () banked
 10400  015140  2F7E               	decfsz	__div_to_l_@cntr& (0+255),f,b
 10401  015142  D7CD               	goto	l8197
 10402                           
 10403                           ; BSR set to: 0
 10404                           
 10405                           ; BSR set to: 0
 10406  015144  0100               	movlb	0	; () banked
 10407  015146  AF7F               	btfss	__div_to_l_@exp1& (0+255),7,b
 10408  015148  D01A               	goto	l8221
 10409                           
 10410                           ; BSR set to: 0
 10411  01514A  0100               	movlb	0	; () banked
 10412  01514C  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 10413  01514E  0A80               	xorlw	128
 10414  015150  0F9F               	addlw	159
 10415  015152  B0D8               	btfsc	status,0,c
 10416  015154  D00A               	goto	l8217
 10417                           
 10418                           ; BSR set to: 0
 10419  015156  0E00               	movlw	0
 10420  015158  0100               	movlb	0	; () banked
 10421  01515A  6F72               	movwf	?__div_to_l_& (0+255),b
 10422  01515C  0E00               	movlw	0
 10423  01515E  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10424  015160  0E00               	movlw	0
 10425  015162  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10426  015164  0E00               	movlw	0
 10427  015166  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10428                           
 10429                           ; BSR set to: 0
 10430  015168  0012               	return	
 10431  01516A                     l8217:
 10432                           
 10433                           ; BSR set to: 0
 10434  01516A  0100               	movlb	0	; () banked
 10435  01516C  90D8               	bcf	status,0,c
 10436  01516E  337D               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 10437  015170  337C               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 10438  015172  337B               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 10439  015174  337A               	rrcf	__div_to_l_@quot& (0+255),f,b
 10440                           
 10441                           ; BSR set to: 0
 10442  015176  0100               	movlb	0	; () banked
 10443  015178  3F7F               	incfsz	__div_to_l_@exp1& (0+255),f,b
 10444  01517A  D7F7               	goto	l8217
 10445                           
 10446                           ; BSR set to: 0
 10447  01517C  D01B               	goto	l1192
 10448  01517E                     l8221:
 10449                           
 10450                           ; BSR set to: 0
 10451  01517E  0E1F               	movlw	31
 10452  015180  0100               	movlb	0	; () banked
 10453  015182  657F               	cpfsgt	__div_to_l_@exp1& (0+255),b
 10454  015184  D012               	goto	l8229
 10455                           
 10456                           ; BSR set to: 0
 10457  015186  0E00               	movlw	0
 10458  015188  0100               	movlb	0	; () banked
 10459  01518A  6F72               	movwf	?__div_to_l_& (0+255),b
 10460  01518C  0E00               	movlw	0
 10461  01518E  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10462  015190  0E00               	movlw	0
 10463  015192  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10464  015194  0E00               	movlw	0
 10465  015196  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10466                           
 10467                           ; BSR set to: 0
 10468  015198  0012               	return	
 10469  01519A                     l8227:
 10470                           
 10471                           ; BSR set to: 0
 10472  01519A  0100               	movlb	0	; () banked
 10473  01519C  90D8               	bcf	status,0,c
 10474  01519E  377A               	rlcf	__div_to_l_@quot& (0+255),f,b
 10475  0151A0  377B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10476  0151A2  377C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10477  0151A4  377D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10478  0151A6  0100               	movlb	0	; () banked
 10479  0151A8  077F               	decf	__div_to_l_@exp1& (0+255),f,b
 10480  0151AA                     l8229:
 10481                           
 10482                           ; BSR set to: 0
 10483  0151AA  0100               	movlb	0	; () banked
 10484  0151AC  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 10485  0151AE  0100               	movlb	0	; () banked
 10486  0151B0  A4D8               	btfss	status,2,c
 10487  0151B2  D7F3               	goto	l8227
 10488  0151B4                     l1192:
 10489                           
 10490                           ; BSR set to: 0
 10491  0151B4  C07A  F072         	movff	__div_to_l_@quot,?__div_to_l_
 10492  0151B8  C07B  F073         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10493  0151BC  C07C  F074         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10494  0151C0  C07D  F075         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10495                           
 10496                           ; BSR set to: 0
 10497  0151C4  0012               	return		;funcret
 10498  0151C6                     __end_of__div_to_l_:
 10499                           	opt stack 0
 10500                           tblptru	equ	0xFF8
 10501                           tblptrh	equ	0xFF7
 10502                           tblptrl	equ	0xFF6
 10503                           tablat	equ	0xFF5
 10504                           prodh	equ	0xFF4
 10505                           prodl	equ	0xFF3
 10506                           intcon	equ	0xFF2
 10507                           postinc0	equ	0xFEE
 10508                           wreg	equ	0xFE8
 10509                           indf2	equ	0xFDF
 10510                           postinc2	equ	0xFDE
 10511                           fsr2h	equ	0xFDA
 10512                           fsr2l	equ	0xFD9
 10513                           status	equ	0xFD8
 10514                           
 10515 ;; *************** function ___xxtofl *****************
 10516 ;; Defined at:
 10517 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;  sign            1    wreg     unsigned char 
 10520 ;;  val             4   18[BANK0 ] long 
 10521 ;; Auto vars:     Size  Location     Type
 10522 ;;  sign            1   26[BANK0 ] unsigned char 
 10523 ;;  arg             4   28[BANK0 ] unsigned long 
 10524 ;;  exp             1   27[BANK0 ] unsigned char 
 10525 ;; Return value:  Size  Location     Type
 10526 ;;                  4   18[BANK0 ] unsigned char 
 10527 ;; Registers used:
 10528 ;;		wreg, status,2, status,0
 10529 ;; Tracked objects:
 10530 ;;		On entry : 0/0
 10531 ;;		On exit  : 0/0
 10532 ;;		Unchanged: 0/0
 10533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10534 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10535 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10536 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10537 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10538 ;;Total ram usage:       14 bytes
 10539 ;; Hardware stack levels used:    1
 10540 ;; Hardware stack levels required when called:    3
 10541 ;; This function calls:
 10542 ;;		Nothing
 10543 ;; This function is called by:
 10544 ;;		_main
 10545 ;;		_LCD_Handler
 10546 ;;		_sprintf
 10547 ;; This function uses a non-reentrant model
 10548 ;;
 10549                           
 10550                           	psect	text17
 10551  01460E                     __ptext17:
 10552                           	opt stack 0
 10553  01460E                     ___xxtofl:
 10554                           	opt stack 27
 10555                           
 10556                           ; BSR set to: 0
 10557                           ;incstack = 0
 10558                           ;___xxtofl@sign stored from wreg
 10559  01460E  0100               	movlb	0	; () banked
 10560  014610  6F7A               	movwf	___xxtofl@sign& (0+255),b
 10561  014612  0100               	movlb	0	; () banked
 10562  014614  517A               	movf	___xxtofl@sign& (0+255),w,b
 10563  014616  0100               	movlb	0	; () banked
 10564  014618  B4D8               	btfsc	status,2,c
 10565  01461A  D01E               	goto	l1587
 10566                           
 10567                           ; BSR set to: 0
 10568  01461C  0100               	movlb	0	; () banked
 10569  01461E  AF75               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10570  014620  D01B               	goto	l1587
 10571                           
 10572                           ; BSR set to: 0
 10573  014622  C072  F076         	movff	___xxtofl@val,??___xxtofl
 10574  014626  C073  F077         	movff	___xxtofl@val+1,??___xxtofl+1
 10575  01462A  C074  F078         	movff	___xxtofl@val+2,??___xxtofl+2
 10576  01462E  C075  F079         	movff	___xxtofl@val+3,??___xxtofl+3
 10577  014632  0100               	movlb	0	; () banked
 10578  014634  1F76               	comf	??___xxtofl& (0+255),f,b
 10579  014636  1F77               	comf	(??___xxtofl+1)& (0+255),f,b
 10580  014638  1F78               	comf	(??___xxtofl+2)& (0+255),f,b
 10581  01463A  1F79               	comf	(??___xxtofl+3)& (0+255),f,b
 10582  01463C  2B76               	incf	??___xxtofl& (0+255),f,b
 10583  01463E  0E00               	movlw	0
 10584  014640  2377               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10585  014642  2378               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10586  014644  2379               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10587  014646  C076  F07C         	movff	??___xxtofl,___xxtofl@arg
 10588  01464A  C077  F07D         	movff	??___xxtofl+1,___xxtofl@arg+1
 10589  01464E  C078  F07E         	movff	??___xxtofl+2,___xxtofl@arg+2
 10590  014652  C079  F07F         	movff	??___xxtofl+3,___xxtofl@arg+3
 10591  014656  D008               	goto	l8355
 10592  014658                     l1587:
 10593                           
 10594                           ; BSR set to: 0
 10595  014658  C072  F07C         	movff	___xxtofl@val,___xxtofl@arg
 10596  01465C  C073  F07D         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10597  014660  C074  F07E         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10598  014664  C075  F07F         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10599  014668                     l8355:
 10600                           
 10601                           ; BSR set to: 0
 10602  014668  0100               	movlb	0	; () banked
 10603  01466A  5172               	movf	___xxtofl@val& (0+255),w,b
 10604  01466C  0100               	movlb	0	; () banked
 10605  01466E  1173               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10606  014670  0100               	movlb	0	; () banked
 10607  014672  1174               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10608  014674  0100               	movlb	0	; () banked
 10609  014676  1175               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 10610  014678  A4D8               	btfss	status,2,c
 10611  01467A  D00A               	goto	l8361
 10612                           
 10613                           ; BSR set to: 0
 10614  01467C  0E00               	movlw	0
 10615  01467E  0100               	movlb	0	; () banked
 10616  014680  6F72               	movwf	?___xxtofl& (0+255),b
 10617  014682  0E00               	movlw	0
 10618  014684  6F73               	movwf	(?___xxtofl+1)& (0+255),b
 10619  014686  0E00               	movlw	0
 10620  014688  6F74               	movwf	(?___xxtofl+2)& (0+255),b
 10621  01468A  0E00               	movlw	0
 10622  01468C  6F75               	movwf	(?___xxtofl+3)& (0+255),b
 10623                           
 10624                           ; BSR set to: 0
 10625  01468E  0012               	return	
 10626  014690                     l8361:
 10627                           
 10628                           ; BSR set to: 0
 10629  014690  0E96               	movlw	150
 10630  014692  0100               	movlb	0	; () banked
 10631  014694  6F7B               	movwf	___xxtofl@exp& (0+255),b
 10632  014696  D008               	goto	l8365
 10633  014698                     l8363:
 10634                           
 10635                           ; BSR set to: 0
 10636  014698  0100               	movlb	0	; () banked
 10637  01469A  2B7B               	incf	___xxtofl@exp& (0+255),f,b
 10638  01469C  0100               	movlb	0	; () banked
 10639  01469E  90D8               	bcf	status,0,c
 10640  0146A0  337F               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10641  0146A2  337E               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10642  0146A4  337D               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10643  0146A6  337C               	rrcf	___xxtofl@arg& (0+255),f,b
 10644  0146A8                     l8365:
 10645                           
 10646                           ; BSR set to: 0
 10647  0146A8  0E00               	movlw	0
 10648  0146AA  0100               	movlb	0	; () banked
 10649  0146AC  157C               	andwf	___xxtofl@arg& (0+255),w,b
 10650  0146AE  0100               	movlb	0	; () banked
 10651  0146B0  6F76               	movwf	??___xxtofl& (0+255),b
 10652  0146B2  0E00               	movlw	0
 10653  0146B4  0100               	movlb	0	; () banked
 10654  0146B6  157D               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10655  0146B8  0100               	movlb	0	; () banked
 10656  0146BA  6F77               	movwf	(??___xxtofl+1)& (0+255),b
 10657  0146BC  0E00               	movlw	0
 10658  0146BE  0100               	movlb	0	; () banked
 10659  0146C0  157E               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10660  0146C2  0100               	movlb	0	; () banked
 10661  0146C4  6F78               	movwf	(??___xxtofl+2)& (0+255),b
 10662  0146C6  0EFE               	movlw	254
 10663  0146C8  0100               	movlb	0	; () banked
 10664  0146CA  157F               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10665  0146CC  0100               	movlb	0	; () banked
 10666  0146CE  6F79               	movwf	(??___xxtofl+3)& (0+255),b
 10667  0146D0  0100               	movlb	0	; () banked
 10668  0146D2  5176               	movf	??___xxtofl& (0+255),w,b
 10669  0146D4  0100               	movlb	0	; () banked
 10670  0146D6  1177               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10671  0146D8  0100               	movlb	0	; () banked
 10672  0146DA  1178               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10673  0146DC  0100               	movlb	0	; () banked
 10674  0146DE  1179               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10675  0146E0  B4D8               	btfsc	status,2,c
 10676  0146E2  D010               	goto	l1594
 10677  0146E4  D7D9               	goto	l8363
 10678  0146E6                     l8367:
 10679                           
 10680                           ; BSR set to: 0
 10681  0146E6  0100               	movlb	0	; () banked
 10682  0146E8  2B7B               	incf	___xxtofl@exp& (0+255),f,b
 10683                           
 10684                           ; BSR set to: 0
 10685  0146EA  0E01               	movlw	1
 10686  0146EC  0100               	movlb	0	; () banked
 10687  0146EE  277C               	addwf	___xxtofl@arg& (0+255),f,b
 10688  0146F0  0E00               	movlw	0
 10689  0146F2  237D               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10690  0146F4  237E               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10691  0146F6  237F               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10692                           
 10693                           ; BSR set to: 0
 10694  0146F8  0100               	movlb	0	; () banked
 10695  0146FA  90D8               	bcf	status,0,c
 10696  0146FC  337F               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10697  0146FE  337E               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10698  014700  337D               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10699  014702  337C               	rrcf	___xxtofl@arg& (0+255),f,b
 10700  014704                     l1594:
 10701                           
 10702                           ; BSR set to: 0
 10703  014704  0E00               	movlw	0
 10704  014706  0100               	movlb	0	; () banked
 10705  014708  157C               	andwf	___xxtofl@arg& (0+255),w,b
 10706  01470A  0100               	movlb	0	; () banked
 10707  01470C  6F76               	movwf	??___xxtofl& (0+255),b
 10708  01470E  0E00               	movlw	0
 10709  014710  0100               	movlb	0	; () banked
 10710  014712  157D               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10711  014714  0100               	movlb	0	; () banked
 10712  014716  6F77               	movwf	(??___xxtofl+1)& (0+255),b
 10713  014718  0E00               	movlw	0
 10714  01471A  0100               	movlb	0	; () banked
 10715  01471C  157E               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10716  01471E  0100               	movlb	0	; () banked
 10717  014720  6F78               	movwf	(??___xxtofl+2)& (0+255),b
 10718  014722  0EFF               	movlw	255
 10719  014724  0100               	movlb	0	; () banked
 10720  014726  157F               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10721  014728  0100               	movlb	0	; () banked
 10722  01472A  6F79               	movwf	(??___xxtofl+3)& (0+255),b
 10723  01472C  0100               	movlb	0	; () banked
 10724  01472E  5176               	movf	??___xxtofl& (0+255),w,b
 10725  014730  0100               	movlb	0	; () banked
 10726  014732  1177               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10727  014734  0100               	movlb	0	; () banked
 10728  014736  1178               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10729  014738  0100               	movlb	0	; () banked
 10730  01473A  1179               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10731  01473C  B4D8               	btfsc	status,2,c
 10732  01473E  D009               	goto	l8375
 10733  014740  D7D2               	goto	l8367
 10734  014742                     l8373:
 10735                           
 10736                           ; BSR set to: 0
 10737  014742  0100               	movlb	0	; () banked
 10738  014744  077B               	decf	___xxtofl@exp& (0+255),f,b
 10739  014746  0100               	movlb	0	; () banked
 10740  014748  90D8               	bcf	status,0,c
 10741  01474A  377C               	rlcf	___xxtofl@arg& (0+255),f,b
 10742  01474C  377D               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10743  01474E  377E               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10744  014750  377F               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10745  014752                     l8375:
 10746                           
 10747                           ; BSR set to: 0
 10748  014752  0100               	movlb	0	; () banked
 10749  014754  BF7E               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10750  014756  D004               	goto	l1601
 10751                           
 10752                           ; BSR set to: 0
 10753  014758  0E02               	movlw	2
 10754  01475A  0100               	movlb	0	; () banked
 10755  01475C  617B               	cpfslt	___xxtofl@exp& (0+255),b
 10756  01475E  D7F1               	goto	l8373
 10757  014760                     l1601:
 10758                           
 10759                           ; BSR set to: 0
 10760  014760  0100               	movlb	0	; () banked
 10761  014762  B17B               	btfsc	___xxtofl@exp& (0+255),0,b
 10762  014764  D009               	goto	l1602
 10763                           
 10764                           ; BSR set to: 0
 10765  014766  0EFF               	movlw	255
 10766  014768  0100               	movlb	0	; () banked
 10767  01476A  177C               	andwf	___xxtofl@arg& (0+255),f,b
 10768  01476C  0EFF               	movlw	255
 10769  01476E  177D               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 10770  014770  0E7F               	movlw	127
 10771  014772  177E               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 10772  014774  0EFF               	movlw	255
 10773  014776  177F               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 10774  014778                     l1602:
 10775                           
 10776                           ; BSR set to: 0
 10777  014778  0100               	movlb	0	; () banked
 10778  01477A  90D8               	bcf	status,0,c
 10779  01477C  337B               	rrcf	___xxtofl@exp& (0+255),f,b
 10780  01477E  C07B  F076         	movff	___xxtofl@exp,??___xxtofl
 10781  014782  0100               	movlb	0	; () banked
 10782  014784  6B77               	clrf	(??___xxtofl+1)& (0+255),b
 10783  014786  6B78               	clrf	(??___xxtofl+2)& (0+255),b
 10784  014788  6B79               	clrf	(??___xxtofl+3)& (0+255),b
 10785  01478A  C076  F079         	movff	??___xxtofl,??___xxtofl+3
 10786  01478E  0100               	movlb	0	; () banked
 10787  014790  6B78               	clrf	(??___xxtofl+2)& (0+255),b
 10788  014792  6B77               	clrf	(??___xxtofl+1)& (0+255),b
 10789  014794  6B76               	clrf	??___xxtofl& (0+255),b
 10790  014796  0100               	movlb	0	; () banked
 10791  014798  5176               	movf	??___xxtofl& (0+255),w,b
 10792  01479A  0100               	movlb	0	; () banked
 10793  01479C  137C               	iorwf	___xxtofl@arg& (0+255),f,b
 10794  01479E  0100               	movlb	0	; () banked
 10795  0147A0  5177               	movf	(??___xxtofl+1)& (0+255),w,b
 10796  0147A2  0100               	movlb	0	; () banked
 10797  0147A4  137D               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10798  0147A6  0100               	movlb	0	; () banked
 10799  0147A8  5178               	movf	(??___xxtofl+2)& (0+255),w,b
 10800  0147AA  0100               	movlb	0	; () banked
 10801  0147AC  137E               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10802  0147AE  0100               	movlb	0	; () banked
 10803  0147B0  5179               	movf	(??___xxtofl+3)& (0+255),w,b
 10804  0147B2  0100               	movlb	0	; () banked
 10805  0147B4  137F               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10806                           
 10807                           ; BSR set to: 0
 10808  0147B6  0100               	movlb	0	; () banked
 10809  0147B8  517A               	movf	___xxtofl@sign& (0+255),w,b
 10810  0147BA  0100               	movlb	0	; () banked
 10811  0147BC  B4D8               	btfsc	status,2,c
 10812  0147BE  D005               	goto	l8387
 10813                           
 10814                           ; BSR set to: 0
 10815  0147C0  0100               	movlb	0	; () banked
 10816  0147C2  AF75               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10817  0147C4  D002               	goto	l8387
 10818                           
 10819                           ; BSR set to: 0
 10820  0147C6  0100               	movlb	0	; () banked
 10821  0147C8  8F7F               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10822  0147CA                     l8387:
 10823                           
 10824                           ; BSR set to: 0
 10825  0147CA  C07C  F072         	movff	___xxtofl@arg,?___xxtofl
 10826  0147CE  C07D  F073         	movff	___xxtofl@arg+1,?___xxtofl+1
 10827  0147D2  C07E  F074         	movff	___xxtofl@arg+2,?___xxtofl+2
 10828  0147D6  C07F  F075         	movff	___xxtofl@arg+3,?___xxtofl+3
 10829  0147DA  0012               	return	
 10830  0147DC                     __end_of___xxtofl:
 10831                           	opt stack 0
 10832                           tblptru	equ	0xFF8
 10833                           tblptrh	equ	0xFF7
 10834                           tblptrl	equ	0xFF6
 10835                           tablat	equ	0xFF5
 10836                           prodh	equ	0xFF4
 10837                           prodl	equ	0xFF3
 10838                           intcon	equ	0xFF2
 10839                           postinc0	equ	0xFEE
 10840                           wreg	equ	0xFE8
 10841                           indf2	equ	0xFDF
 10842                           postinc2	equ	0xFDE
 10843                           fsr2h	equ	0xFDA
 10844                           fsr2l	equ	0xFD9
 10845                           status	equ	0xFD8
 10846                           
 10847 ;; *************** function ___llmod *****************
 10848 ;; Defined at:
 10849 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 10850 ;; Parameters:    Size  Location     Type
 10851 ;;  dividend        4   18[BANK0 ] unsigned long 
 10852 ;;  divisor         4   22[BANK0 ] unsigned long 
 10853 ;; Auto vars:     Size  Location     Type
 10854 ;;  counter         1   26[BANK0 ] unsigned char 
 10855 ;; Return value:  Size  Location     Type
 10856 ;;                  4   18[BANK0 ] unsigned long 
 10857 ;; Registers used:
 10858 ;;		wreg, status,2, status,0
 10859 ;; Tracked objects:
 10860 ;;		On entry : 0/0
 10861 ;;		On exit  : 0/0
 10862 ;;		Unchanged: 0/0
 10863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10864 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10865 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10867 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10868 ;;Total ram usage:        9 bytes
 10869 ;; Hardware stack levels used:    1
 10870 ;; Hardware stack levels required when called:    3
 10871 ;; This function calls:
 10872 ;;		Nothing
 10873 ;; This function is called by:
 10874 ;;		_sprintf
 10875 ;; This function uses a non-reentrant model
 10876 ;;
 10877                           
 10878                           	psect	text18
 10879  015B86                     __ptext18:
 10880                           	opt stack 0
 10881  015B86                     ___llmod:
 10882                           	opt stack 25
 10883                           
 10884                           ; BSR set to: 0
 10885                           ;incstack = 0
 10886  015B86  0100               	movlb	0	; () banked
 10887  015B88  5176               	movf	___llmod@divisor& (0+255),w,b
 10888  015B8A  0100               	movlb	0	; () banked
 10889  015B8C  1177               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10890  015B8E  0100               	movlb	0	; () banked
 10891  015B90  1178               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10892  015B92  0100               	movlb	0	; () banked
 10893  015B94  1179               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10894  015B96  B4D8               	btfsc	status,2,c
 10895  015B98  D03A               	goto	l1395
 10896                           
 10897                           ; BSR set to: 0
 10898  015B9A  0E01               	movlw	1
 10899  015B9C  0100               	movlb	0	; () banked
 10900  015B9E  6F7A               	movwf	___llmod@counter& (0+255),b
 10901  015BA0  D008               	goto	l8339
 10902  015BA2                     l8337:
 10903                           
 10904                           ; BSR set to: 0
 10905  015BA2  0100               	movlb	0	; () banked
 10906  015BA4  90D8               	bcf	status,0,c
 10907  015BA6  3776               	rlcf	___llmod@divisor& (0+255),f,b
 10908  015BA8  3777               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10909  015BAA  3778               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10910  015BAC  3779               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10911  015BAE  0100               	movlb	0	; () banked
 10912  015BB0  2B7A               	incf	___llmod@counter& (0+255),f,b
 10913  015BB2                     l8339:
 10914                           
 10915                           ; BSR set to: 0
 10916  015BB2  0100               	movlb	0	; () banked
 10917  015BB4  AF79               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10918  015BB6  D7F5               	goto	l8337
 10919  015BB8                     l8341:
 10920                           
 10921                           ; BSR set to: 0
 10922  015BB8  0100               	movlb	0	; () banked
 10923  015BBA  5176               	movf	___llmod@divisor& (0+255),w,b
 10924  015BBC  0100               	movlb	0	; () banked
 10925  015BBE  5D72               	subwf	___llmod@dividend& (0+255),w,b
 10926  015BC0  0100               	movlb	0	; () banked
 10927  015BC2  5177               	movf	(___llmod@divisor+1)& (0+255),w,b
 10928  015BC4  0100               	movlb	0	; () banked
 10929  015BC6  5973               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10930  015BC8  0100               	movlb	0	; () banked
 10931  015BCA  5178               	movf	(___llmod@divisor+2)& (0+255),w,b
 10932  015BCC  0100               	movlb	0	; () banked
 10933  015BCE  5974               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10934  015BD0  0100               	movlb	0	; () banked
 10935  015BD2  5179               	movf	(___llmod@divisor+3)& (0+255),w,b
 10936  015BD4  0100               	movlb	0	; () banked
 10937  015BD6  5975               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10938  015BD8  A0D8               	btfss	status,0,c
 10939  015BDA  D010               	goto	l8345
 10940                           
 10941                           ; BSR set to: 0
 10942  015BDC  0100               	movlb	0	; () banked
 10943  015BDE  5176               	movf	___llmod@divisor& (0+255),w,b
 10944  015BE0  0100               	movlb	0	; () banked
 10945  015BE2  5F72               	subwf	___llmod@dividend& (0+255),f,b
 10946  015BE4  0100               	movlb	0	; () banked
 10947  015BE6  5177               	movf	(___llmod@divisor+1)& (0+255),w,b
 10948  015BE8  0100               	movlb	0	; () banked
 10949  015BEA  5B73               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10950  015BEC  0100               	movlb	0	; () banked
 10951  015BEE  5178               	movf	(___llmod@divisor+2)& (0+255),w,b
 10952  015BF0  0100               	movlb	0	; () banked
 10953  015BF2  5B74               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10954  015BF4  0100               	movlb	0	; () banked
 10955  015BF6  5179               	movf	(___llmod@divisor+3)& (0+255),w,b
 10956  015BF8  0100               	movlb	0	; () banked
 10957  015BFA  5B75               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10958  015BFC                     l8345:
 10959                           
 10960                           ; BSR set to: 0
 10961  015BFC  0100               	movlb	0	; () banked
 10962  015BFE  90D8               	bcf	status,0,c
 10963  015C00  3379               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10964  015C02  3378               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10965  015C04  3377               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10966  015C06  3376               	rrcf	___llmod@divisor& (0+255),f,b
 10967                           
 10968                           ; BSR set to: 0
 10969  015C08  0100               	movlb	0	; () banked
 10970  015C0A  2F7A               	decfsz	___llmod@counter& (0+255),f,b
 10971  015C0C  D7D5               	goto	l8341
 10972  015C0E                     l1395:
 10973                           
 10974                           ; BSR set to: 0
 10975  015C0E  C072  F072         	movff	___llmod@dividend,?___llmod
 10976  015C12  C073  F073         	movff	___llmod@dividend+1,?___llmod+1
 10977  015C16  C074  F074         	movff	___llmod@dividend+2,?___llmod+2
 10978  015C1A  C075  F075         	movff	___llmod@dividend+3,?___llmod+3
 10979                           
 10980                           ; BSR set to: 0
 10981  015C1E  0012               	return		;funcret
 10982  015C20                     __end_of___llmod:
 10983                           	opt stack 0
 10984                           tblptru	equ	0xFF8
 10985                           tblptrh	equ	0xFF7
 10986                           tblptrl	equ	0xFF6
 10987                           tablat	equ	0xFF5
 10988                           prodh	equ	0xFF4
 10989                           prodl	equ	0xFF3
 10990                           intcon	equ	0xFF2
 10991                           postinc0	equ	0xFEE
 10992                           wreg	equ	0xFE8
 10993                           indf2	equ	0xFDF
 10994                           postinc2	equ	0xFDE
 10995                           fsr2h	equ	0xFDA
 10996                           fsr2l	equ	0xFD9
 10997                           status	equ	0xFD8
 10998                           
 10999 ;; *************** function ___lldiv *****************
 11000 ;; Defined at:
 11001 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 11002 ;; Parameters:    Size  Location     Type
 11003 ;;  dividend        4   18[BANK0 ] unsigned long 
 11004 ;;  divisor         4   22[BANK0 ] unsigned long 
 11005 ;; Auto vars:     Size  Location     Type
 11006 ;;  quotient        4   26[BANK0 ] unsigned long 
 11007 ;;  counter         1   30[BANK0 ] unsigned char 
 11008 ;; Return value:  Size  Location     Type
 11009 ;;                  4   18[BANK0 ] unsigned long 
 11010 ;; Registers used:
 11011 ;;		wreg, status,2, status,0
 11012 ;; Tracked objects:
 11013 ;;		On entry : 0/0
 11014 ;;		On exit  : 0/0
 11015 ;;		Unchanged: 0/0
 11016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11017 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11020 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11021 ;;Total ram usage:       13 bytes
 11022 ;; Hardware stack levels used:    1
 11023 ;; Hardware stack levels required when called:    3
 11024 ;; This function calls:
 11025 ;;		Nothing
 11026 ;; This function is called by:
 11027 ;;		_sprintf
 11028 ;; This function uses a non-reentrant model
 11029 ;;
 11030                           
 11031                           	psect	text19
 11032  015820                     __ptext19:
 11033                           	opt stack 0
 11034  015820                     ___lldiv:
 11035                           	opt stack 25
 11036                           
 11037                           ; BSR set to: 0
 11038                           ;incstack = 0
 11039  015820  0E00               	movlw	0
 11040  015822  0100               	movlb	0	; () banked
 11041  015824  6F7A               	movwf	___lldiv@quotient& (0+255),b
 11042  015826  0E00               	movlw	0
 11043  015828  6F7B               	movwf	(___lldiv@quotient+1)& (0+255),b
 11044  01582A  0E00               	movlw	0
 11045  01582C  6F7C               	movwf	(___lldiv@quotient+2)& (0+255),b
 11046  01582E  0E00               	movlw	0
 11047  015830  6F7D               	movwf	(___lldiv@quotient+3)& (0+255),b
 11048                           
 11049                           ; BSR set to: 0
 11050  015832  0100               	movlb	0	; () banked
 11051  015834  5176               	movf	___lldiv@divisor& (0+255),w,b
 11052  015836  0100               	movlb	0	; () banked
 11053  015838  1177               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11054  01583A  0100               	movlb	0	; () banked
 11055  01583C  1178               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11056  01583E  0100               	movlb	0	; () banked
 11057  015840  1179               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11058  015842  B4D8               	btfsc	status,2,c
 11059  015844  D042               	goto	l1385
 11060                           
 11061                           ; BSR set to: 0
 11062  015846  0E01               	movlw	1
 11063  015848  0100               	movlb	0	; () banked
 11064  01584A  6F7E               	movwf	___lldiv@counter& (0+255),b
 11065  01584C  D008               	goto	l8319
 11066  01584E                     l8317:
 11067                           
 11068                           ; BSR set to: 0
 11069  01584E  0100               	movlb	0	; () banked
 11070  015850  90D8               	bcf	status,0,c
 11071  015852  3776               	rlcf	___lldiv@divisor& (0+255),f,b
 11072  015854  3777               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11073  015856  3778               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11074  015858  3779               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11075  01585A  0100               	movlb	0	; () banked
 11076  01585C  2B7E               	incf	___lldiv@counter& (0+255),f,b
 11077  01585E                     l8319:
 11078                           
 11079                           ; BSR set to: 0
 11080  01585E  0100               	movlb	0	; () banked
 11081  015860  AF79               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11082  015862  D7F5               	goto	l8317
 11083  015864                     l8321:
 11084                           
 11085                           ; BSR set to: 0
 11086  015864  0100               	movlb	0	; () banked
 11087  015866  90D8               	bcf	status,0,c
 11088  015868  377A               	rlcf	___lldiv@quotient& (0+255),f,b
 11089  01586A  377B               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11090  01586C  377C               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11091  01586E  377D               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11092                           
 11093                           ; BSR set to: 0
 11094  015870  0100               	movlb	0	; () banked
 11095  015872  5176               	movf	___lldiv@divisor& (0+255),w,b
 11096  015874  0100               	movlb	0	; () banked
 11097  015876  5D72               	subwf	___lldiv@dividend& (0+255),w,b
 11098  015878  0100               	movlb	0	; () banked
 11099  01587A  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11100  01587C  0100               	movlb	0	; () banked
 11101  01587E  5973               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11102  015880  0100               	movlb	0	; () banked
 11103  015882  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11104  015884  0100               	movlb	0	; () banked
 11105  015886  5974               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11106  015888  0100               	movlb	0	; () banked
 11107  01588A  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11108  01588C  0100               	movlb	0	; () banked
 11109  01588E  5975               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11110  015890  A0D8               	btfss	status,0,c
 11111  015892  D012               	goto	l8329
 11112                           
 11113                           ; BSR set to: 0
 11114  015894  0100               	movlb	0	; () banked
 11115  015896  5176               	movf	___lldiv@divisor& (0+255),w,b
 11116  015898  0100               	movlb	0	; () banked
 11117  01589A  5F72               	subwf	___lldiv@dividend& (0+255),f,b
 11118  01589C  0100               	movlb	0	; () banked
 11119  01589E  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11120  0158A0  0100               	movlb	0	; () banked
 11121  0158A2  5B73               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11122  0158A4  0100               	movlb	0	; () banked
 11123  0158A6  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11124  0158A8  0100               	movlb	0	; () banked
 11125  0158AA  5B74               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11126  0158AC  0100               	movlb	0	; () banked
 11127  0158AE  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11128  0158B0  0100               	movlb	0	; () banked
 11129  0158B2  5B75               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11130                           
 11131                           ; BSR set to: 0
 11132  0158B4  0100               	movlb	0	; () banked
 11133  0158B6  817A               	bsf	___lldiv@quotient& (0+255),0,b
 11134  0158B8                     l8329:
 11135                           
 11136                           ; BSR set to: 0
 11137  0158B8  0100               	movlb	0	; () banked
 11138  0158BA  90D8               	bcf	status,0,c
 11139  0158BC  3379               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11140  0158BE  3378               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11141  0158C0  3377               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11142  0158C2  3376               	rrcf	___lldiv@divisor& (0+255),f,b
 11143                           
 11144                           ; BSR set to: 0
 11145  0158C4  0100               	movlb	0	; () banked
 11146  0158C6  2F7E               	decfsz	___lldiv@counter& (0+255),f,b
 11147  0158C8  D7CD               	goto	l8321
 11148  0158CA                     l1385:
 11149                           
 11150                           ; BSR set to: 0
 11151  0158CA  C07A  F072         	movff	___lldiv@quotient,?___lldiv
 11152  0158CE  C07B  F073         	movff	___lldiv@quotient+1,?___lldiv+1
 11153  0158D2  C07C  F074         	movff	___lldiv@quotient+2,?___lldiv+2
 11154  0158D6  C07D  F075         	movff	___lldiv@quotient+3,?___lldiv+3
 11155                           
 11156                           ; BSR set to: 0
 11157  0158DA  0012               	return		;funcret
 11158  0158DC                     __end_of___lldiv:
 11159                           	opt stack 0
 11160                           tblptru	equ	0xFF8
 11161                           tblptrh	equ	0xFF7
 11162                           tblptrl	equ	0xFF6
 11163                           tablat	equ	0xFF5
 11164                           prodh	equ	0xFF4
 11165                           prodl	equ	0xFF3
 11166                           intcon	equ	0xFF2
 11167                           postinc0	equ	0xFEE
 11168                           wreg	equ	0xFE8
 11169                           indf2	equ	0xFDF
 11170                           postinc2	equ	0xFDE
 11171                           fsr2h	equ	0xFDA
 11172                           fsr2l	equ	0xFD9
 11173                           status	equ	0xFD8
 11174                           
 11175 ;; *************** function ___fltol *****************
 11176 ;; Defined at:
 11177 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 11178 ;; Parameters:    Size  Location     Type
 11179 ;;  f1              4   90[BANK0 ] unsigned long 
 11180 ;; Auto vars:     Size  Location     Type
 11181 ;;  exp1            1   99[BANK0 ] unsigned char 
 11182 ;;  sign1           1   98[BANK0 ] unsigned char 
 11183 ;; Return value:  Size  Location     Type
 11184 ;;                  4   90[BANK0 ] long 
 11185 ;; Registers used:
 11186 ;;		wreg, status,2, status,0
 11187 ;; Tracked objects:
 11188 ;;		On entry : 0/0
 11189 ;;		On exit  : 0/0
 11190 ;;		Unchanged: 0/0
 11191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11192 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11193 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11195 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11196 ;;Total ram usage:       10 bytes
 11197 ;; Hardware stack levels used:    1
 11198 ;; Hardware stack levels required when called:    3
 11199 ;; This function calls:
 11200 ;;		Nothing
 11201 ;; This function is called by:
 11202 ;;		_main
 11203 ;;		_sprintf
 11204 ;; This function uses a non-reentrant model
 11205 ;;
 11206                           
 11207                           	psect	text20
 11208  0154AC                     __ptext20:
 11209                           	opt stack 0
 11210  0154AC                     ___fltol:
 11211                           	opt stack 27
 11212                           
 11213                           ; BSR set to: 0
 11214                           ;incstack = 0
 11215  0154AC  0100               	movlb	0	; () banked
 11216  0154AE  35BC               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11217  0154B0  35BD               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11218  0154B2  0100               	movlb	0	; () banked
 11219  0154B4  6FC3               	movwf	___fltol@exp1& (0+255),b
 11220  0154B6  0100               	movlb	0	; () banked
 11221  0154B8  51C3               	movf	___fltol@exp1& (0+255),w,b
 11222  0154BA  A4D8               	btfss	status,2,c
 11223  0154BC  D00A               	goto	l8273
 11224                           
 11225                           ; BSR set to: 0
 11226  0154BE  0E00               	movlw	0
 11227  0154C0  0100               	movlb	0	; () banked
 11228  0154C2  6FBA               	movwf	?___fltol& (0+255),b
 11229  0154C4  0E00               	movlw	0
 11230  0154C6  6FBB               	movwf	(?___fltol+1)& (0+255),b
 11231  0154C8  0E00               	movlw	0
 11232  0154CA  6FBC               	movwf	(?___fltol+2)& (0+255),b
 11233  0154CC  0E00               	movlw	0
 11234  0154CE  6FBD               	movwf	(?___fltol+3)& (0+255),b
 11235                           
 11236                           ; BSR set to: 0
 11237  0154D0  0012               	return	
 11238  0154D2                     l8273:
 11239                           
 11240                           ; BSR set to: 0
 11241  0154D2  C0BA  F0BE         	movff	___fltol@f1,??___fltol
 11242  0154D6  C0BB  F0BF         	movff	___fltol@f1+1,??___fltol+1
 11243  0154DA  C0BC  F0C0         	movff	___fltol@f1+2,??___fltol+2
 11244  0154DE  C0BD  F0C1         	movff	___fltol@f1+3,??___fltol+3
 11245  0154E2  0E20               	movlw	32
 11246  0154E4  D006               	goto	u10950
 11247  0154E6                     u10955:
 11248  0154E6  0100               	movlb	0	; () banked
 11249  0154E8  90D8               	bcf	status,0,c
 11250  0154EA  33C1               	rrcf	(??___fltol+3)& (0+255),f,b
 11251  0154EC  33C0               	rrcf	(??___fltol+2)& (0+255),f,b
 11252  0154EE  33BF               	rrcf	(??___fltol+1)& (0+255),f,b
 11253  0154F0  33BE               	rrcf	??___fltol& (0+255),f,b
 11254  0154F2                     u10950:
 11255  0154F2  2EE8               	decfsz	wreg,f,c
 11256  0154F4  D7F8               	goto	u10955
 11257  0154F6  0100               	movlb	0	; () banked
 11258  0154F8  51BE               	movf	??___fltol& (0+255),w,b
 11259  0154FA  0100               	movlb	0	; () banked
 11260  0154FC  6FC2               	movwf	___fltol@sign1& (0+255),b
 11261                           
 11262                           ; BSR set to: 0
 11263  0154FE  0100               	movlb	0	; () banked
 11264  015500  8FBC               	bsf	(___fltol@f1+2)& (0+255),7,b
 11265                           
 11266                           ; BSR set to: 0
 11267  015502  0EFF               	movlw	255
 11268  015504  0100               	movlb	0	; () banked
 11269  015506  17BA               	andwf	___fltol@f1& (0+255),f,b
 11270  015508  0EFF               	movlw	255
 11271  01550A  17BB               	andwf	(___fltol@f1+1)& (0+255),f,b
 11272  01550C  0EFF               	movlw	255
 11273  01550E  17BC               	andwf	(___fltol@f1+2)& (0+255),f,b
 11274  015510  0E00               	movlw	0
 11275  015512  17BD               	andwf	(___fltol@f1+3)& (0+255),f,b
 11276                           
 11277                           ; BSR set to: 0
 11278  015514  0E96               	movlw	150
 11279  015516  0100               	movlb	0	; () banked
 11280  015518  5FC3               	subwf	___fltol@exp1& (0+255),f,b
 11281                           
 11282                           ; BSR set to: 0
 11283  01551A  0100               	movlb	0	; () banked
 11284  01551C  AFC3               	btfss	___fltol@exp1& (0+255),7,b
 11285  01551E  D01A               	goto	l8293
 11286                           
 11287                           ; BSR set to: 0
 11288  015520  0100               	movlb	0	; () banked
 11289  015522  51C3               	movf	___fltol@exp1& (0+255),w,b
 11290  015524  0A80               	xorlw	128
 11291  015526  0F97               	addlw	151
 11292  015528  B0D8               	btfsc	status,0,c
 11293  01552A  D00A               	goto	l8289
 11294                           
 11295                           ; BSR set to: 0
 11296  01552C  0E00               	movlw	0
 11297  01552E  0100               	movlb	0	; () banked
 11298  015530  6FBA               	movwf	?___fltol& (0+255),b
 11299  015532  0E00               	movlw	0
 11300  015534  6FBB               	movwf	(?___fltol+1)& (0+255),b
 11301  015536  0E00               	movlw	0
 11302  015538  6FBC               	movwf	(?___fltol+2)& (0+255),b
 11303  01553A  0E00               	movlw	0
 11304  01553C  6FBD               	movwf	(?___fltol+3)& (0+255),b
 11305                           
 11306                           ; BSR set to: 0
 11307  01553E  0012               	return	
 11308  015540                     l8289:
 11309                           
 11310                           ; BSR set to: 0
 11311  015540  0100               	movlb	0	; () banked
 11312  015542  90D8               	bcf	status,0,c
 11313  015544  33BD               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11314  015546  33BC               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11315  015548  33BB               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11316  01554A  33BA               	rrcf	___fltol@f1& (0+255),f,b
 11317                           
 11318                           ; BSR set to: 0
 11319  01554C  0100               	movlb	0	; () banked
 11320  01554E  3FC3               	incfsz	___fltol@exp1& (0+255),f,b
 11321  015550  D7F7               	goto	l8289
 11322                           
 11323                           ; BSR set to: 0
 11324  015552  D01B               	goto	l8303
 11325  015554                     l8293:
 11326                           
 11327                           ; BSR set to: 0
 11328  015554  0E1F               	movlw	31
 11329  015556  0100               	movlb	0	; () banked
 11330  015558  65C3               	cpfsgt	___fltol@exp1& (0+255),b
 11331  01555A  D012               	goto	l8301
 11332                           
 11333                           ; BSR set to: 0
 11334  01555C  0E00               	movlw	0
 11335  01555E  0100               	movlb	0	; () banked
 11336  015560  6FBA               	movwf	?___fltol& (0+255),b
 11337  015562  0E00               	movlw	0
 11338  015564  6FBB               	movwf	(?___fltol+1)& (0+255),b
 11339  015566  0E00               	movlw	0
 11340  015568  6FBC               	movwf	(?___fltol+2)& (0+255),b
 11341  01556A  0E00               	movlw	0
 11342  01556C  6FBD               	movwf	(?___fltol+3)& (0+255),b
 11343                           
 11344                           ; BSR set to: 0
 11345  01556E  0012               	return	
 11346  015570                     l8299:
 11347                           
 11348                           ; BSR set to: 0
 11349  015570  0100               	movlb	0	; () banked
 11350  015572  90D8               	bcf	status,0,c
 11351  015574  37BA               	rlcf	___fltol@f1& (0+255),f,b
 11352  015576  37BB               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11353  015578  37BC               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11354  01557A  37BD               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11355  01557C  0100               	movlb	0	; () banked
 11356  01557E  07C3               	decf	___fltol@exp1& (0+255),f,b
 11357  015580                     l8301:
 11358                           
 11359                           ; BSR set to: 0
 11360  015580  0100               	movlb	0	; () banked
 11361  015582  51C3               	movf	___fltol@exp1& (0+255),w,b
 11362  015584  0100               	movlb	0	; () banked
 11363  015586  A4D8               	btfss	status,2,c
 11364  015588  D7F3               	goto	l8299
 11365  01558A                     l8303:
 11366                           
 11367                           ; BSR set to: 0
 11368  01558A  0100               	movlb	0	; () banked
 11369  01558C  51C2               	movf	___fltol@sign1& (0+255),w,b
 11370  01558E  0100               	movlb	0	; () banked
 11371  015590  B4D8               	btfsc	status,2,c
 11372  015592  D009               	goto	l8307
 11373                           
 11374                           ; BSR set to: 0
 11375  015594  0100               	movlb	0	; () banked
 11376  015596  1FBD               	comf	(___fltol@f1+3)& (0+255),f,b
 11377  015598  1FBC               	comf	(___fltol@f1+2)& (0+255),f,b
 11378  01559A  1FBB               	comf	(___fltol@f1+1)& (0+255),f,b
 11379  01559C  6DBA               	negf	___fltol@f1& (0+255),b
 11380  01559E  0E00               	movlw	0
 11381  0155A0  23BB               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11382  0155A2  23BC               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11383  0155A4  23BD               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11384  0155A6                     l8307:
 11385                           
 11386                           ; BSR set to: 0
 11387  0155A6  C0BA  F0BA         	movff	___fltol@f1,?___fltol
 11388  0155AA  C0BB  F0BB         	movff	___fltol@f1+1,?___fltol+1
 11389  0155AE  C0BC  F0BC         	movff	___fltol@f1+2,?___fltol+2
 11390  0155B2  C0BD  F0BD         	movff	___fltol@f1+3,?___fltol+3
 11391  0155B6  0012               	return	
 11392  0155B8                     __end_of___fltol:
 11393                           	opt stack 0
 11394                           tblptru	equ	0xFF8
 11395                           tblptrh	equ	0xFF7
 11396                           tblptrl	equ	0xFF6
 11397                           tablat	equ	0xFF5
 11398                           prodh	equ	0xFF4
 11399                           prodl	equ	0xFF3
 11400                           intcon	equ	0xFF2
 11401                           postinc0	equ	0xFEE
 11402                           wreg	equ	0xFE8
 11403                           indf2	equ	0xFDF
 11404                           postinc2	equ	0xFDE
 11405                           fsr2h	equ	0xFDA
 11406                           fsr2l	equ	0xFD9
 11407                           status	equ	0xFD8
 11408                           
 11409 ;; *************** function ___flsub *****************
 11410 ;; Defined at:
 11411 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11412 ;; Parameters:    Size  Location     Type
 11413 ;;  b               4   90[BANK0 ] long 
 11414 ;;  a               4   94[BANK0 ] long 
 11415 ;; Auto vars:     Size  Location     Type
 11416 ;;		None
 11417 ;; Return value:  Size  Location     Type
 11418 ;;                  4   90[BANK0 ] long 
 11419 ;; Registers used:
 11420 ;;		wreg, status,2, status,0, cstack
 11421 ;; Tracked objects:
 11422 ;;		On entry : 0/0
 11423 ;;		On exit  : 0/0
 11424 ;;		Unchanged: 0/0
 11425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11426 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11429 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11430 ;;Total ram usage:        8 bytes
 11431 ;; Hardware stack levels used:    1
 11432 ;; Hardware stack levels required when called:    4
 11433 ;; This function calls:
 11434 ;;		___fladd
 11435 ;; This function is called by:
 11436 ;;		_sprintf
 11437 ;; This function uses a non-reentrant model
 11438 ;;
 11439                           
 11440                           	psect	text21
 11441  015E30                     __ptext21:
 11442                           	opt stack 0
 11443  015E30                     ___flsub:
 11444                           	opt stack 24
 11445                           
 11446                           ; BSR set to: 0
 11447                           ;incstack = 0
 11448  015E30  0E00               	movlw	0
 11449  015E32  0100               	movlb	0	; () banked
 11450  015E34  1BBE               	xorwf	___flsub@a& (0+255),f,b
 11451  015E36  0E00               	movlw	0
 11452  015E38  1BBF               	xorwf	(___flsub@a+1)& (0+255),f,b
 11453  015E3A  0E00               	movlw	0
 11454  015E3C  1BC0               	xorwf	(___flsub@a+2)& (0+255),f,b
 11455  015E3E  0E80               	movlw	128
 11456  015E40  1BC1               	xorwf	(___flsub@a+3)& (0+255),f,b
 11457                           
 11458                           ; BSR set to: 0
 11459  015E42  C0BA  F0A6         	movff	___flsub@b,___fladd@b
 11460  015E46  C0BB  F0A7         	movff	___flsub@b+1,___fladd@b+1
 11461  015E4A  C0BC  F0A8         	movff	___flsub@b+2,___fladd@b+2
 11462  015E4E  C0BD  F0A9         	movff	___flsub@b+3,___fladd@b+3
 11463  015E52  C0BE  F0AA         	movff	___flsub@a,___fladd@a
 11464  015E56  C0BF  F0AB         	movff	___flsub@a+1,___fladd@a+1
 11465  015E5A  C0C0  F0AC         	movff	___flsub@a+2,___fladd@a+2
 11466  015E5E  C0C1  F0AD         	movff	___flsub@a+3,___fladd@a+3
 11467  015E62  EC36  F099         	call	___fladd	;wreg free
 11468  015E66  C0A6  F0BA         	movff	?___fladd,?___flsub
 11469  015E6A  C0A7  F0BB         	movff	?___fladd+1,?___flsub+1
 11470  015E6E  C0A8  F0BC         	movff	?___fladd+2,?___flsub+2
 11471  015E72  C0A9  F0BD         	movff	?___fladd+3,?___flsub+3
 11472  015E76  0012               	return	
 11473  015E78                     __end_of___flsub:
 11474                           	opt stack 0
 11475                           tblptru	equ	0xFF8
 11476                           tblptrh	equ	0xFF7
 11477                           tblptrl	equ	0xFF6
 11478                           tablat	equ	0xFF5
 11479                           prodh	equ	0xFF4
 11480                           prodl	equ	0xFF3
 11481                           intcon	equ	0xFF2
 11482                           postinc0	equ	0xFEE
 11483                           wreg	equ	0xFE8
 11484                           indf2	equ	0xFDF
 11485                           postinc2	equ	0xFDE
 11486                           fsr2h	equ	0xFDA
 11487                           fsr2l	equ	0xFD9
 11488                           status	equ	0xFD8
 11489                           
 11490 ;; *************** function ___fladd *****************
 11491 ;; Defined at:
 11492 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11493 ;; Parameters:    Size  Location     Type
 11494 ;;  b               4   70[BANK0 ] long 
 11495 ;;  a               4   74[BANK0 ] long 
 11496 ;; Auto vars:     Size  Location     Type
 11497 ;;  grs             1   89[BANK0 ] unsigned char 
 11498 ;;  bexp            1   88[BANK0 ] unsigned char 
 11499 ;;  aexp            1   87[BANK0 ] unsigned char 
 11500 ;;  signs           1   86[BANK0 ] unsigned char 
 11501 ;; Return value:  Size  Location     Type
 11502 ;;                  4   70[BANK0 ] unsigned char 
 11503 ;; Registers used:
 11504 ;;		wreg, status,2, status,0
 11505 ;; Tracked objects:
 11506 ;;		On entry : 0/0
 11507 ;;		On exit  : 0/0
 11508 ;;		Unchanged: 0/0
 11509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11510 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11511 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11512 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11513 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11514 ;;Total ram usage:       20 bytes
 11515 ;; Hardware stack levels used:    1
 11516 ;; Hardware stack levels required when called:    3
 11517 ;; This function calls:
 11518 ;;		Nothing
 11519 ;; This function is called by:
 11520 ;;		_main
 11521 ;;		_sprintf
 11522 ;;		___flsub
 11523 ;; This function uses a non-reentrant model
 11524 ;;
 11525                           
 11526                           	psect	text22
 11527  01326C                     __ptext22:
 11528                           	opt stack 0
 11529  01326C                     ___fladd:
 11530                           	opt stack 27
 11531                           
 11532                           ;incstack = 0
 11533  01326C  0100               	movlb	0	; () banked
 11534  01326E  51A9               	movf	(___fladd@b+3)& (0+255),w,b
 11535  013270  0B80               	andlw	128
 11536  013272  0100               	movlb	0	; () banked
 11537  013274  6FB6               	movwf	___fladd@signs& (0+255),b
 11538  013276  0100               	movlb	0	; () banked
 11539  013278  51A9               	movf	(___fladd@b+3)& (0+255),w,b
 11540  01327A  25A9               	addwf	(___fladd@b+3)& (0+255),w,b
 11541  01327C  0100               	movlb	0	; () banked
 11542  01327E  6FB8               	movwf	___fladd@bexp& (0+255),b
 11543                           
 11544                           ; BSR set to: 0
 11545  013280  0100               	movlb	0	; () banked
 11546  013282  AFA8               	btfss	(___fladd@b+2)& (0+255),7,b
 11547  013284  D002               	goto	l7605
 11548                           
 11549                           ; BSR set to: 0
 11550  013286  0100               	movlb	0	; () banked
 11551  013288  81B8               	bsf	___fladd@bexp& (0+255),0,b
 11552  01328A                     l7605:
 11553                           
 11554                           ; BSR set to: 0
 11555  01328A  0100               	movlb	0	; () banked
 11556  01328C  51B8               	movf	___fladd@bexp& (0+255),w,b
 11557  01328E  0100               	movlb	0	; () banked
 11558  013290  B4D8               	btfsc	status,2,c
 11559  013292  D012               	goto	l7615
 11560                           
 11561                           ; BSR set to: 0
 11562  013294  0100               	movlb	0	; () banked
 11563  013296  29B8               	incf	___fladd@bexp& (0+255),w,b
 11564  013298  A4D8               	btfss	status,2,c
 11565  01329A  D009               	goto	l7611
 11566                           
 11567                           ; BSR set to: 0
 11568  01329C  0E00               	movlw	0
 11569  01329E  0100               	movlb	0	; () banked
 11570  0132A0  6FA6               	movwf	___fladd@b& (0+255),b
 11571  0132A2  0E00               	movlw	0
 11572  0132A4  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11573  0132A6  0E00               	movlw	0
 11574  0132A8  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11575  0132AA  0E00               	movlw	0
 11576  0132AC  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11577  0132AE                     l7611:
 11578                           
 11579                           ; BSR set to: 0
 11580  0132AE  0100               	movlb	0	; () banked
 11581  0132B0  8FA8               	bsf	(___fladd@b+2)& (0+255),7,b
 11582                           
 11583                           ; BSR set to: 0
 11584  0132B2  0E00               	movlw	0
 11585  0132B4  0100               	movlb	0	; () banked
 11586  0132B6  D008               	goto	L9
 11587  0132B8                     l7615:
 11588                           
 11589                           ; BSR set to: 0
 11590  0132B8  0E00               	movlw	0
 11591  0132BA  0100               	movlb	0	; () banked
 11592  0132BC  6FA6               	movwf	___fladd@b& (0+255),b
 11593  0132BE  0E00               	movlw	0
 11594  0132C0  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11595  0132C2  0E00               	movlw	0
 11596  0132C4  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11597  0132C6  0E00               	movlw	0
 11598  0132C8                     L9:
 11599  0132C8  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11600                           
 11601                           ; BSR set to: 0
 11602                           
 11603                           ; BSR set to: 0
 11604  0132CA  0100               	movlb	0	; () banked
 11605  0132CC  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11606  0132CE  0B80               	andlw	128
 11607  0132D0  0100               	movlb	0	; () banked
 11608  0132D2  6FB7               	movwf	___fladd@aexp& (0+255),b
 11609                           
 11610                           ; BSR set to: 0
 11611  0132D4  0100               	movlb	0	; () banked
 11612  0132D6  51B6               	movf	___fladd@signs& (0+255),w,b
 11613  0132D8  0100               	movlb	0	; () banked
 11614  0132DA  19B7               	xorwf	___fladd@aexp& (0+255),w,b
 11615  0132DC  B4D8               	btfsc	status,2,c
 11616  0132DE  D002               	goto	l7623
 11617                           
 11618                           ; BSR set to: 0
 11619  0132E0  0100               	movlb	0	; () banked
 11620  0132E2  8DB6               	bsf	___fladd@signs& (0+255),6,b
 11621  0132E4                     l7623:
 11622                           
 11623                           ; BSR set to: 0
 11624  0132E4  0100               	movlb	0	; () banked
 11625  0132E6  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11626  0132E8  25AD               	addwf	(___fladd@a+3)& (0+255),w,b
 11627  0132EA  0100               	movlb	0	; () banked
 11628  0132EC  6FB7               	movwf	___fladd@aexp& (0+255),b
 11629                           
 11630                           ; BSR set to: 0
 11631  0132EE  0100               	movlb	0	; () banked
 11632  0132F0  AFAC               	btfss	(___fladd@a+2)& (0+255),7,b
 11633  0132F2  D002               	goto	l7629
 11634                           
 11635                           ; BSR set to: 0
 11636  0132F4  0100               	movlb	0	; () banked
 11637  0132F6  81B7               	bsf	___fladd@aexp& (0+255),0,b
 11638  0132F8                     l7629:
 11639                           
 11640                           ; BSR set to: 0
 11641  0132F8  0100               	movlb	0	; () banked
 11642  0132FA  51B7               	movf	___fladd@aexp& (0+255),w,b
 11643  0132FC  0100               	movlb	0	; () banked
 11644  0132FE  B4D8               	btfsc	status,2,c
 11645  013300  D012               	goto	l7639
 11646                           
 11647                           ; BSR set to: 0
 11648  013302  0100               	movlb	0	; () banked
 11649  013304  29B7               	incf	___fladd@aexp& (0+255),w,b
 11650  013306  A4D8               	btfss	status,2,c
 11651  013308  D009               	goto	l7635
 11652                           
 11653                           ; BSR set to: 0
 11654  01330A  0E00               	movlw	0
 11655  01330C  0100               	movlb	0	; () banked
 11656  01330E  6FAA               	movwf	___fladd@a& (0+255),b
 11657  013310  0E00               	movlw	0
 11658  013312  6FAB               	movwf	(___fladd@a+1)& (0+255),b
 11659  013314  0E00               	movlw	0
 11660  013316  6FAC               	movwf	(___fladd@a+2)& (0+255),b
 11661  013318  0E00               	movlw	0
 11662  01331A  6FAD               	movwf	(___fladd@a+3)& (0+255),b
 11663  01331C                     l7635:
 11664                           
 11665                           ; BSR set to: 0
 11666  01331C  0100               	movlb	0	; () banked
 11667  01331E  8FAC               	bsf	(___fladd@a+2)& (0+255),7,b
 11668                           
 11669                           ; BSR set to: 0
 11670  013320  0E00               	movlw	0
 11671  013322  0100               	movlb	0	; () banked
 11672  013324  D008               	goto	L10
 11673  013326                     l7639:
 11674                           
 11675                           ; BSR set to: 0
 11676  013326  0E00               	movlw	0
 11677  013328  0100               	movlb	0	; () banked
 11678  01332A  6FAA               	movwf	___fladd@a& (0+255),b
 11679  01332C  0E00               	movlw	0
 11680  01332E  6FAB               	movwf	(___fladd@a+1)& (0+255),b
 11681  013330  0E00               	movlw	0
 11682  013332  6FAC               	movwf	(___fladd@a+2)& (0+255),b
 11683  013334  0E00               	movlw	0
 11684  013336                     L10:
 11685  013336  6FAD               	movwf	(___fladd@a+3)& (0+255),b
 11686                           
 11687                           ; BSR set to: 0
 11688                           
 11689                           ; BSR set to: 0
 11690  013338  0100               	movlb	0	; () banked
 11691  01333A  51B8               	movf	___fladd@bexp& (0+255),w,b
 11692  01333C  0100               	movlb	0	; () banked
 11693  01333E  5DB7               	subwf	___fladd@aexp& (0+255),w,b
 11694  013340  B0D8               	btfsc	status,0,c
 11695  013342  D024               	goto	l7677
 11696                           
 11697                           ; BSR set to: 0
 11698  013344  0100               	movlb	0	; () banked
 11699  013346  ADB6               	btfss	___fladd@signs& (0+255),6,b
 11700  013348  D003               	goto	l7647
 11701                           
 11702                           ; BSR set to: 0
 11703  01334A  0E80               	movlw	128
 11704  01334C  0100               	movlb	0	; () banked
 11705  01334E  1BB6               	xorwf	___fladd@signs& (0+255),f,b
 11706  013350                     l7647:
 11707                           
 11708                           ; BSR set to: 0
 11709  013350  C0B8  F0B9         	movff	___fladd@bexp,___fladd@grs
 11710                           
 11711                           ; BSR set to: 0
 11712  013354  C0B7  F0B8         	movff	___fladd@aexp,___fladd@bexp
 11713                           
 11714                           ; BSR set to: 0
 11715  013358  C0B9  F0B7         	movff	___fladd@grs,___fladd@aexp
 11716                           
 11717                           ; BSR set to: 0
 11718  01335C  C0A6  F0B9         	movff	___fladd@b,___fladd@grs
 11719                           
 11720                           ; BSR set to: 0
 11721  013360  C0AA  F0A6         	movff	___fladd@a,___fladd@b
 11722                           
 11723                           ; BSR set to: 0
 11724  013364  C0B9  F0AA         	movff	___fladd@grs,___fladd@a
 11725                           
 11726                           ; BSR set to: 0
 11727  013368  C0A7  F0B9         	movff	___fladd@b+1,___fladd@grs
 11728                           
 11729                           ; BSR set to: 0
 11730  01336C  C0AB  F0A7         	movff	___fladd@a+1,___fladd@b+1
 11731                           
 11732                           ; BSR set to: 0
 11733  013370  C0B9  F0AB         	movff	___fladd@grs,___fladd@a+1
 11734                           
 11735                           ; BSR set to: 0
 11736  013374  C0A8  F0B9         	movff	___fladd@b+2,___fladd@grs
 11737                           
 11738                           ; BSR set to: 0
 11739  013378  C0AC  F0A8         	movff	___fladd@a+2,___fladd@b+2
 11740                           
 11741                           ; BSR set to: 0
 11742  01337C  C0B9  F0AC         	movff	___fladd@grs,___fladd@a+2
 11743                           
 11744                           ; BSR set to: 0
 11745  013380  C0A9  F0B9         	movff	___fladd@b+3,___fladd@grs
 11746                           
 11747                           ; BSR set to: 0
 11748  013384  C0AD  F0A9         	movff	___fladd@a+3,___fladd@b+3
 11749                           
 11750                           ; BSR set to: 0
 11751  013388  C0B9  F0AD         	movff	___fladd@grs,___fladd@a+3
 11752  01338C                     l7677:
 11753                           
 11754                           ; BSR set to: 0
 11755  01338C  0E00               	movlw	0
 11756  01338E  0100               	movlb	0	; () banked
 11757  013390  6FB9               	movwf	___fladd@grs& (0+255),b
 11758                           
 11759                           ; BSR set to: 0
 11760  013392  0100               	movlb	0	; () banked
 11761  013394  51B8               	movf	___fladd@bexp& (0+255),w,b
 11762  013396  0100               	movlb	0	; () banked
 11763  013398  6FAE               	movwf	??___fladd& (0+255),b
 11764  01339A  6BAF               	clrf	(??___fladd+1)& (0+255),b
 11765  01339C  0100               	movlb	0	; () banked
 11766  01339E  1FAE               	comf	??___fladd& (0+255),f,b
 11767  0133A0  1FAF               	comf	(??___fladd+1)& (0+255),f,b
 11768  0133A2  4BAE               	infsnz	??___fladd& (0+255),f,b
 11769  0133A4  2BAF               	incf	(??___fladd+1)& (0+255),f,b
 11770  0133A6  0100               	movlb	0	; () banked
 11771  0133A8  51B7               	movf	___fladd@aexp& (0+255),w,b
 11772  0133AA  0100               	movlb	0	; () banked
 11773  0133AC  6FB0               	movwf	(??___fladd+2)& (0+255),b
 11774  0133AE  6BB1               	clrf	(??___fladd+3)& (0+255),b
 11775  0133B0  0100               	movlb	0	; () banked
 11776  0133B2  51AE               	movf	??___fladd& (0+255),w,b
 11777  0133B4  0100               	movlb	0	; () banked
 11778  0133B6  27B0               	addwf	(??___fladd+2)& (0+255),f,b
 11779  0133B8  0100               	movlb	0	; () banked
 11780  0133BA  51AF               	movf	(??___fladd+1)& (0+255),w,b
 11781  0133BC  0100               	movlb	0	; () banked
 11782  0133BE  23B1               	addwfc	(??___fladd+3)& (0+255),f,b
 11783  0133C0  0100               	movlb	0	; () banked
 11784  0133C2  BFB1               	btfsc	(??___fladd+3)& (0+255),7,b
 11785  0133C4  D03D               	goto	l1480
 11786  0133C6  0100               	movlb	0	; () banked
 11787  0133C8  51B1               	movf	(??___fladd+3)& (0+255),w,b
 11788  0133CA  E105               	bnz	u10000
 11789  0133CC  0E1A               	movlw	26
 11790  0133CE  0100               	movlb	0	; () banked
 11791  0133D0  5DB0               	subwf	(??___fladd+2)& (0+255),w,b
 11792  0133D2  A0D8               	btfss	status,0,c
 11793  0133D4  D035               	goto	l1480
 11794  0133D6                     u10000:
 11795                           
 11796                           ; BSR set to: 0
 11797  0133D6  0100               	movlb	0	; () banked
 11798  0133D8  51A6               	movf	___fladd@b& (0+255),w,b
 11799  0133DA  0100               	movlb	0	; () banked
 11800  0133DC  11A7               	iorwf	(___fladd@b+1)& (0+255),w,b
 11801  0133DE  0100               	movlb	0	; () banked
 11802  0133E0  11A8               	iorwf	(___fladd@b+2)& (0+255),w,b
 11803  0133E2  0100               	movlb	0	; () banked
 11804  0133E4  11A9               	iorwf	(___fladd@b+3)& (0+255),w,b
 11805  0133E6  B4D8               	btfsc	status,2,c
 11806  0133E8  D002               	goto	u10010
 11807  0133EA  0E01               	movlw	1
 11808  0133EC  D001               	goto	u10020
 11809  0133EE                     u10010:
 11810  0133EE  0E00               	movlw	0
 11811  0133F0                     u10020:
 11812  0133F0  0100               	movlb	0	; () banked
 11813  0133F2  6FB9               	movwf	___fladd@grs& (0+255),b
 11814                           
 11815                           ; BSR set to: 0
 11816  0133F4  0E00               	movlw	0
 11817  0133F6  0100               	movlb	0	; () banked
 11818  0133F8  6FA6               	movwf	___fladd@b& (0+255),b
 11819  0133FA  0E00               	movlw	0
 11820  0133FC  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11821  0133FE  0E00               	movlw	0
 11822  013400  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11823  013402  0E00               	movlw	0
 11824  013404  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11825                           
 11826                           ; BSR set to: 0
 11827  013406  C0B7  F0B8         	movff	___fladd@aexp,___fladd@bexp
 11828  01340A  D020               	goto	l1479
 11829  01340C                     l1481:
 11830                           
 11831                           ; BSR set to: 0
 11832  01340C  0100               	movlb	0	; () banked
 11833  01340E  A1B9               	btfss	___fladd@grs& (0+255),0,b
 11834  013410  D007               	goto	l7689
 11835                           
 11836                           ; BSR set to: 0
 11837  013412  0100               	movlb	0	; () banked
 11838  013414  90D8               	bcf	status,0,c
 11839  013416  31B9               	rrcf	___fladd@grs& (0+255),w,b
 11840  013418  0901               	iorlw	1
 11841  01341A  0100               	movlb	0	; () banked
 11842  01341C  6FB9               	movwf	___fladd@grs& (0+255),b
 11843  01341E  D003               	goto	l7691
 11844  013420                     l7689:
 11845                           
 11846                           ; BSR set to: 0
 11847  013420  0100               	movlb	0	; () banked
 11848  013422  90D8               	bcf	status,0,c
 11849  013424  33B9               	rrcf	___fladd@grs& (0+255),f,b
 11850  013426                     l7691:
 11851                           
 11852                           ; BSR set to: 0
 11853  013426  0100               	movlb	0	; () banked
 11854  013428  A1A6               	btfss	___fladd@b& (0+255),0,b
 11855  01342A  D002               	goto	l7695
 11856                           
 11857                           ; BSR set to: 0
 11858  01342C  0100               	movlb	0	; () banked
 11859  01342E  8FB9               	bsf	___fladd@grs& (0+255),7,b
 11860  013430                     l7695:
 11861                           
 11862                           ; BSR set to: 0
 11863  013430  0100               	movlb	0	; () banked
 11864  013432  35A9               	rlcf	(___fladd@b+3)& (0+255),w,b
 11865  013434  33A9               	rrcf	(___fladd@b+3)& (0+255),f,b
 11866  013436  33A8               	rrcf	(___fladd@b+2)& (0+255),f,b
 11867  013438  33A7               	rrcf	(___fladd@b+1)& (0+255),f,b
 11868  01343A  33A6               	rrcf	___fladd@b& (0+255),f,b
 11869                           
 11870                           ; BSR set to: 0
 11871  01343C  0100               	movlb	0	; () banked
 11872  01343E  2BB8               	incf	___fladd@bexp& (0+255),f,b
 11873  013440                     l1480:
 11874                           
 11875                           ; BSR set to: 0
 11876  013440  0100               	movlb	0	; () banked
 11877  013442  51B7               	movf	___fladd@aexp& (0+255),w,b
 11878  013444  0100               	movlb	0	; () banked
 11879  013446  5DB8               	subwf	___fladd@bexp& (0+255),w,b
 11880  013448  A0D8               	btfss	status,0,c
 11881  01344A  D7E0               	goto	l1481
 11882  01344C                     l1479:
 11883                           
 11884                           ; BSR set to: 0
 11885  01344C  0100               	movlb	0	; () banked
 11886  01344E  BDB6               	btfsc	___fladd@signs& (0+255),6,b
 11887  013450  D03F               	goto	l7723
 11888                           
 11889                           ; BSR set to: 0
 11890  013452  0100               	movlb	0	; () banked
 11891  013454  51B8               	movf	___fladd@bexp& (0+255),w,b
 11892  013456  0100               	movlb	0	; () banked
 11893  013458  A4D8               	btfss	status,2,c
 11894  01345A  D00A               	goto	l7705
 11895                           
 11896                           ; BSR set to: 0
 11897  01345C  0E00               	movlw	0
 11898  01345E  0100               	movlb	0	; () banked
 11899  013460  6FA6               	movwf	?___fladd& (0+255),b
 11900  013462  0E00               	movlw	0
 11901  013464  6FA7               	movwf	(?___fladd+1)& (0+255),b
 11902  013466  0E00               	movlw	0
 11903  013468  6FA8               	movwf	(?___fladd+2)& (0+255),b
 11904  01346A  0E00               	movlw	0
 11905  01346C  6FA9               	movwf	(?___fladd+3)& (0+255),b
 11906                           
 11907                           ; BSR set to: 0
 11908  01346E  0012               	return	
 11909  013470                     l7705:
 11910                           
 11911                           ; BSR set to: 0
 11912  013470  0100               	movlb	0	; () banked
 11913  013472  51AA               	movf	___fladd@a& (0+255),w,b
 11914  013474  0100               	movlb	0	; () banked
 11915  013476  27A6               	addwf	___fladd@b& (0+255),f,b
 11916  013478  0100               	movlb	0	; () banked
 11917  01347A  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 11918  01347C  0100               	movlb	0	; () banked
 11919  01347E  23A7               	addwfc	(___fladd@b+1)& (0+255),f,b
 11920  013480  0100               	movlb	0	; () banked
 11921  013482  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 11922  013484  0100               	movlb	0	; () banked
 11923  013486  23A8               	addwfc	(___fladd@b+2)& (0+255),f,b
 11924  013488  0100               	movlb	0	; () banked
 11925  01348A  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11926  01348C  0100               	movlb	0	; () banked
 11927  01348E  23A9               	addwfc	(___fladd@b+3)& (0+255),f,b
 11928                           
 11929                           ; BSR set to: 0
 11930  013490  0100               	movlb	0	; () banked
 11931  013492  A1A9               	btfss	(___fladd@b+3)& (0+255),0,b
 11932  013494  D0CC               	goto	l7759
 11933                           
 11934                           ; BSR set to: 0
 11935  013496  0100               	movlb	0	; () banked
 11936  013498  A1B9               	btfss	___fladd@grs& (0+255),0,b
 11937  01349A  D009               	goto	l7713
 11938                           
 11939                           ; BSR set to: 0
 11940  01349C  0100               	movlb	0	; () banked
 11941  01349E  90D8               	bcf	status,0,c
 11942  0134A0  33B9               	rrcf	___fladd@grs& (0+255),f,b
 11943  0134A2  0100               	movlb	0	; () banked
 11944  0134A4  51B9               	movf	___fladd@grs& (0+255),w,b
 11945  0134A6  0901               	iorlw	1
 11946  0134A8  0100               	movlb	0	; () banked
 11947  0134AA  6FB9               	movwf	___fladd@grs& (0+255),b
 11948  0134AC  D003               	goto	l7715
 11949  0134AE                     l7713:
 11950                           
 11951                           ; BSR set to: 0
 11952  0134AE  0100               	movlb	0	; () banked
 11953  0134B0  90D8               	bcf	status,0,c
 11954  0134B2  33B9               	rrcf	___fladd@grs& (0+255),f,b
 11955  0134B4                     l7715:
 11956                           
 11957                           ; BSR set to: 0
 11958  0134B4  0100               	movlb	0	; () banked
 11959  0134B6  A1A6               	btfss	___fladd@b& (0+255),0,b
 11960  0134B8  D002               	goto	l7719
 11961                           
 11962                           ; BSR set to: 0
 11963  0134BA  0100               	movlb	0	; () banked
 11964  0134BC  8FB9               	bsf	___fladd@grs& (0+255),7,b
 11965  0134BE                     l7719:
 11966                           
 11967                           ; BSR set to: 0
 11968  0134BE  0100               	movlb	0	; () banked
 11969  0134C0  35A9               	rlcf	(___fladd@b+3)& (0+255),w,b
 11970  0134C2  33A9               	rrcf	(___fladd@b+3)& (0+255),f,b
 11971  0134C4  33A8               	rrcf	(___fladd@b+2)& (0+255),f,b
 11972  0134C6  33A7               	rrcf	(___fladd@b+1)& (0+255),f,b
 11973  0134C8  33A6               	rrcf	___fladd@b& (0+255),f,b
 11974                           
 11975                           ; BSR set to: 0
 11976  0134CA  0100               	movlb	0	; () banked
 11977  0134CC  2BB8               	incf	___fladd@bexp& (0+255),f,b
 11978                           
 11979                           ; BSR set to: 0
 11980  0134CE  D0AF               	goto	l7759
 11981  0134D0                     l7723:
 11982                           
 11983                           ; BSR set to: 0
 11984  0134D0  0100               	movlb	0	; () banked
 11985  0134D2  51AA               	movf	___fladd@a& (0+255),w,b
 11986  0134D4  0100               	movlb	0	; () banked
 11987  0134D6  5DA6               	subwf	___fladd@b& (0+255),w,b
 11988  0134D8  0100               	movlb	0	; () banked
 11989  0134DA  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 11990  0134DC  0100               	movlb	0	; () banked
 11991  0134DE  59A7               	subwfb	(___fladd@b+1)& (0+255),w,b
 11992  0134E0  0100               	movlb	0	; () banked
 11993  0134E2  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 11994  0134E4  0100               	movlb	0	; () banked
 11995  0134E6  59A8               	subwfb	(___fladd@b+2)& (0+255),w,b
 11996  0134E8  0100               	movlb	0	; () banked
 11997  0134EA  51A9               	movf	(___fladd@b+3)& (0+255),w,b
 11998  0134EC  0A80               	xorlw	128
 11999  0134EE  0100               	movlb	0	; () banked
 12000  0134F0  6FAE               	movwf	??___fladd& (0+255),b
 12001  0134F2  0100               	movlb	0	; () banked
 12002  0134F4  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 12003  0134F6  0A80               	xorlw	128
 12004  0134F8  0100               	movlb	0	; () banked
 12005  0134FA  59AE               	subwfb	??___fladd& (0+255),w,b
 12006  0134FC  B0D8               	btfsc	status,0,c
 12007  0134FE  D050               	goto	l7733
 12008                           
 12009                           ; BSR set to: 0
 12010  013500  C0A6  F0AE         	movff	___fladd@b,??___fladd
 12011  013504  C0A7  F0AF         	movff	___fladd@b+1,??___fladd+1
 12012  013508  C0A8  F0B0         	movff	___fladd@b+2,??___fladd+2
 12013  01350C  C0A9  F0B1         	movff	___fladd@b+3,??___fladd+3
 12014  013510  0100               	movlb	0	; () banked
 12015  013512  1FAE               	comf	??___fladd& (0+255),f,b
 12016  013514  1FAF               	comf	(??___fladd+1)& (0+255),f,b
 12017  013516  1FB0               	comf	(??___fladd+2)& (0+255),f,b
 12018  013518  1FB1               	comf	(??___fladd+3)& (0+255),f,b
 12019  01351A  2BAE               	incf	??___fladd& (0+255),f,b
 12020  01351C  0E00               	movlw	0
 12021  01351E  23AF               	addwfc	(??___fladd+1)& (0+255),f,b
 12022  013520  23B0               	addwfc	(??___fladd+2)& (0+255),f,b
 12023  013522  23B1               	addwfc	(??___fladd+3)& (0+255),f,b
 12024  013524  0100               	movlb	0	; () banked
 12025  013526  51AA               	movf	___fladd@a& (0+255),w,b
 12026  013528  0100               	movlb	0	; () banked
 12027  01352A  25AE               	addwf	??___fladd& (0+255),w,b
 12028  01352C  0100               	movlb	0	; () banked
 12029  01352E  6FB2               	movwf	(??___fladd+4)& (0+255),b
 12030  013530  0100               	movlb	0	; () banked
 12031  013532  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 12032  013534  0100               	movlb	0	; () banked
 12033  013536  21AF               	addwfc	(??___fladd+1)& (0+255),w,b
 12034  013538  0100               	movlb	0	; () banked
 12035  01353A  6FB3               	movwf	(??___fladd+5)& (0+255),b
 12036  01353C  0100               	movlb	0	; () banked
 12037  01353E  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 12038  013540  0100               	movlb	0	; () banked
 12039  013542  21B0               	addwfc	(??___fladd+2)& (0+255),w,b
 12040  013544  0100               	movlb	0	; () banked
 12041  013546  6FB4               	movwf	(??___fladd+6)& (0+255),b
 12042  013548  0100               	movlb	0	; () banked
 12043  01354A  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 12044  01354C  0100               	movlb	0	; () banked
 12045  01354E  21B1               	addwfc	(??___fladd+3)& (0+255),w,b
 12046  013550  0100               	movlb	0	; () banked
 12047  013552  6FB5               	movwf	(??___fladd+7)& (0+255),b
 12048  013554  0EFF               	movlw	255
 12049  013556  0100               	movlb	0	; () banked
 12050  013558  25B2               	addwf	(??___fladd+4)& (0+255),w,b
 12051  01355A  0100               	movlb	0	; () banked
 12052  01355C  6FA6               	movwf	___fladd@b& (0+255),b
 12053  01355E  0EFF               	movlw	255
 12054  013560  0100               	movlb	0	; () banked
 12055  013562  21B3               	addwfc	(??___fladd+5)& (0+255),w,b
 12056  013564  0100               	movlb	0	; () banked
 12057  013566  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 12058  013568  0EFF               	movlw	255
 12059  01356A  0100               	movlb	0	; () banked
 12060  01356C  21B4               	addwfc	(??___fladd+6)& (0+255),w,b
 12061  01356E  0100               	movlb	0	; () banked
 12062  013570  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 12063  013572  0EFF               	movlw	255
 12064  013574  0100               	movlb	0	; () banked
 12065  013576  21B5               	addwfc	(??___fladd+7)& (0+255),w,b
 12066  013578  0100               	movlb	0	; () banked
 12067  01357A  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 12068  01357C  0E80               	movlw	128
 12069  01357E  0100               	movlb	0	; () banked
 12070  013580  1BB6               	xorwf	___fladd@signs& (0+255),f,b
 12071                           
 12072                           ; BSR set to: 0
 12073  013582  0100               	movlb	0	; () banked
 12074  013584  6DB9               	negf	___fladd@grs& (0+255),b
 12075                           
 12076                           ; BSR set to: 0
 12077  013586  0100               	movlb	0	; () banked
 12078  013588  51B9               	movf	___fladd@grs& (0+255),w,b
 12079  01358A  0100               	movlb	0	; () banked
 12080  01358C  A4D8               	btfss	status,2,c
 12081  01358E  D018               	goto	l1496
 12082                           
 12083                           ; BSR set to: 0
 12084  013590  0E01               	movlw	1
 12085  013592  0100               	movlb	0	; () banked
 12086  013594  27A6               	addwf	___fladd@b& (0+255),f,b
 12087  013596  0E00               	movlw	0
 12088  013598  23A7               	addwfc	(___fladd@b+1)& (0+255),f,b
 12089  01359A  23A8               	addwfc	(___fladd@b+2)& (0+255),f,b
 12090  01359C  23A9               	addwfc	(___fladd@b+3)& (0+255),f,b
 12091                           
 12092                           ; BSR set to: 0
 12093  01359E  D010               	goto	l1496
 12094  0135A0                     l7733:
 12095                           
 12096                           ; BSR set to: 0
 12097  0135A0  0100               	movlb	0	; () banked
 12098  0135A2  51AA               	movf	___fladd@a& (0+255),w,b
 12099  0135A4  0100               	movlb	0	; () banked
 12100  0135A6  5FA6               	subwf	___fladd@b& (0+255),f,b
 12101  0135A8  0100               	movlb	0	; () banked
 12102  0135AA  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 12103  0135AC  0100               	movlb	0	; () banked
 12104  0135AE  5BA7               	subwfb	(___fladd@b+1)& (0+255),f,b
 12105  0135B0  0100               	movlb	0	; () banked
 12106  0135B2  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 12107  0135B4  0100               	movlb	0	; () banked
 12108  0135B6  5BA8               	subwfb	(___fladd@b+2)& (0+255),f,b
 12109  0135B8  0100               	movlb	0	; () banked
 12110  0135BA  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 12111  0135BC  0100               	movlb	0	; () banked
 12112  0135BE  5BA9               	subwfb	(___fladd@b+3)& (0+255),f,b
 12113  0135C0                     l1496:
 12114                           
 12115                           ; BSR set to: 0
 12116  0135C0  0100               	movlb	0	; () banked
 12117  0135C2  51A6               	movf	___fladd@b& (0+255),w,b
 12118  0135C4  0100               	movlb	0	; () banked
 12119  0135C6  11A7               	iorwf	(___fladd@b+1)& (0+255),w,b
 12120  0135C8  0100               	movlb	0	; () banked
 12121  0135CA  11A8               	iorwf	(___fladd@b+2)& (0+255),w,b
 12122  0135CC  0100               	movlb	0	; () banked
 12123  0135CE  11A9               	iorwf	(___fladd@b+3)& (0+255),w,b
 12124  0135D0  A4D8               	btfss	status,2,c
 12125  0135D2  D02A               	goto	l7757
 12126                           
 12127                           ; BSR set to: 0
 12128  0135D4  0100               	movlb	0	; () banked
 12129  0135D6  51B9               	movf	___fladd@grs& (0+255),w,b
 12130  0135D8  0100               	movlb	0	; () banked
 12131  0135DA  A4D8               	btfss	status,2,c
 12132  0135DC  D025               	goto	l7757
 12133                           
 12134                           ; BSR set to: 0
 12135  0135DE  0E00               	movlw	0
 12136  0135E0  0100               	movlb	0	; () banked
 12137  0135E2  6FA6               	movwf	?___fladd& (0+255),b
 12138  0135E4  0E00               	movlw	0
 12139  0135E6  6FA7               	movwf	(?___fladd+1)& (0+255),b
 12140  0135E8  0E00               	movlw	0
 12141  0135EA  6FA8               	movwf	(?___fladd+2)& (0+255),b
 12142  0135EC  0E00               	movlw	0
 12143  0135EE  6FA9               	movwf	(?___fladd+3)& (0+255),b
 12144                           
 12145                           ; BSR set to: 0
 12146  0135F0  0012               	return	
 12147  0135F2                     l7741:
 12148                           
 12149                           ; BSR set to: 0
 12150  0135F2  0100               	movlb	0	; () banked
 12151  0135F4  90D8               	bcf	status,0,c
 12152  0135F6  37A6               	rlcf	___fladd@b& (0+255),f,b
 12153  0135F8  37A7               	rlcf	(___fladd@b+1)& (0+255),f,b
 12154  0135FA  37A8               	rlcf	(___fladd@b+2)& (0+255),f,b
 12155  0135FC  37A9               	rlcf	(___fladd@b+3)& (0+255),f,b
 12156                           
 12157                           ; BSR set to: 0
 12158  0135FE  0100               	movlb	0	; () banked
 12159  013600  AFB9               	btfss	___fladd@grs& (0+255),7,b
 12160  013602  D002               	goto	l7747
 12161                           
 12162                           ; BSR set to: 0
 12163  013604  0100               	movlb	0	; () banked
 12164  013606  81A6               	bsf	___fladd@b& (0+255),0,b
 12165  013608                     l7747:
 12166                           
 12167                           ; BSR set to: 0
 12168  013608  0100               	movlb	0	; () banked
 12169  01360A  A1B9               	btfss	___fladd@grs& (0+255),0,b
 12170  01360C  D003               	goto	l7751
 12171                           
 12172                           ; BSR set to: 0
 12173  01360E  80D8               	bsf	status,0,c
 12174  013610  0100               	movlb	0	; () banked
 12175  013612  D002               	goto	L11
 12176  013614                     l7751:
 12177                           
 12178                           ; BSR set to: 0
 12179  013614  0100               	movlb	0	; () banked
 12180  013616  90D8               	bcf	status,0,c
 12181  013618                     L11:
 12182  013618  37B9               	rlcf	___fladd@grs& (0+255),f,b
 12183                           
 12184                           ; BSR set to: 0
 12185                           
 12186                           ; BSR set to: 0
 12187  01361A  0100               	movlb	0	; () banked
 12188  01361C  51B8               	movf	___fladd@bexp& (0+255),w,b
 12189  01361E  0100               	movlb	0	; () banked
 12190  013620  B4D8               	btfsc	status,2,c
 12191  013622  D002               	goto	l7757
 12192                           
 12193                           ; BSR set to: 0
 12194  013624  0100               	movlb	0	; () banked
 12195  013626  07B8               	decf	___fladd@bexp& (0+255),f,b
 12196  013628                     l7757:
 12197                           
 12198                           ; BSR set to: 0
 12199  013628  0100               	movlb	0	; () banked
 12200  01362A  AFA8               	btfss	(___fladd@b+2)& (0+255),7,b
 12201  01362C  D7E2               	goto	l7741
 12202  01362E                     l7759:
 12203                           
 12204                           ; BSR set to: 0
 12205  01362E  0E00               	movlw	0
 12206  013630  0100               	movlb	0	; () banked
 12207  013632  6FB7               	movwf	___fladd@aexp& (0+255),b
 12208                           
 12209                           ; BSR set to: 0
 12210  013634  0100               	movlb	0	; () banked
 12211  013636  AFB9               	btfss	___fladd@grs& (0+255),7,b
 12212  013638  D00D               	goto	l1505
 12213                           
 12214                           ; BSR set to: 0
 12215  01363A  C0B9  F0AE         	movff	___fladd@grs,??___fladd
 12216  01363E  0E7F               	movlw	127
 12217  013640  0100               	movlb	0	; () banked
 12218  013642  17AE               	andwf	??___fladd& (0+255),f,b
 12219  013644  A4D8               	btfss	status,2,c
 12220  013646  D003               	goto	l7767
 12221                           
 12222                           ; BSR set to: 0
 12223                           
 12224                           ; BSR set to: 0
 12225  013648  0100               	movlb	0	; () banked
 12226  01364A  A1A6               	btfss	___fladd@b& (0+255),0,b
 12227  01364C  D003               	goto	l1505
 12228  01364E                     l7767:
 12229                           
 12230                           ; BSR set to: 0
 12231  01364E  0E01               	movlw	1
 12232  013650  0100               	movlb	0	; () banked
 12233  013652  6FB7               	movwf	___fladd@aexp& (0+255),b
 12234  013654                     l1505:
 12235                           
 12236                           ; BSR set to: 0
 12237  013654  0100               	movlb	0	; () banked
 12238  013656  51B7               	movf	___fladd@aexp& (0+255),w,b
 12239  013658  0100               	movlb	0	; () banked
 12240  01365A  B4D8               	btfsc	status,2,c
 12241  01365C  D026               	goto	l7777
 12242                           
 12243                           ; BSR set to: 0
 12244  01365E  0E01               	movlw	1
 12245  013660  0100               	movlb	0	; () banked
 12246  013662  27A6               	addwf	___fladd@b& (0+255),f,b
 12247  013664  0E00               	movlw	0
 12248  013666  23A7               	addwfc	(___fladd@b+1)& (0+255),f,b
 12249  013668  23A8               	addwfc	(___fladd@b+2)& (0+255),f,b
 12250  01366A  23A9               	addwfc	(___fladd@b+3)& (0+255),f,b
 12251                           
 12252                           ; BSR set to: 0
 12253  01366C  0100               	movlb	0	; () banked
 12254  01366E  A1A9               	btfss	(___fladd@b+3)& (0+255),0,b
 12255  013670  D01C               	goto	l7777
 12256                           
 12257                           ; BSR set to: 0
 12258  013672  C0A6  F0AE         	movff	___fladd@b,??___fladd
 12259  013676  C0A7  F0AF         	movff	___fladd@b+1,??___fladd+1
 12260  01367A  C0A8  F0B0         	movff	___fladd@b+2,??___fladd+2
 12261  01367E  C0A9  F0B1         	movff	___fladd@b+3,??___fladd+3
 12262  013682  0100               	movlb	0	; () banked
 12263  013684  35B1               	rlcf	(??___fladd+3)& (0+255),w,b
 12264  013686  33B1               	rrcf	(??___fladd+3)& (0+255),f,b
 12265  013688  33B0               	rrcf	(??___fladd+2)& (0+255),f,b
 12266  01368A  33AF               	rrcf	(??___fladd+1)& (0+255),f,b
 12267  01368C  33AE               	rrcf	??___fladd& (0+255),f,b
 12268  01368E  C0AE  F0A6         	movff	??___fladd,___fladd@b
 12269  013692  C0AF  F0A7         	movff	??___fladd+1,___fladd@b+1
 12270  013696  C0B0  F0A8         	movff	??___fladd+2,___fladd@b+2
 12271  01369A  C0B1  F0A9         	movff	??___fladd+3,___fladd@b+3
 12272  01369E  0100               	movlb	0	; () banked
 12273  0136A0  29B8               	incf	___fladd@bexp& (0+255),w,b
 12274  0136A2  B4D8               	btfsc	status,2,c
 12275  0136A4  D002               	goto	l7777
 12276                           
 12277                           ; BSR set to: 0
 12278  0136A6  0100               	movlb	0	; () banked
 12279  0136A8  2BB8               	incf	___fladd@bexp& (0+255),f,b
 12280  0136AA                     l7777:
 12281                           
 12282                           ; BSR set to: 0
 12283  0136AA  0100               	movlb	0	; () banked
 12284  0136AC  29B8               	incf	___fladd@bexp& (0+255),w,b
 12285  0136AE  B4D8               	btfsc	status,2,c
 12286  0136B0  D005               	goto	l7781
 12287                           
 12288                           ; BSR set to: 0
 12289  0136B2  0100               	movlb	0	; () banked
 12290  0136B4  51B8               	movf	___fladd@bexp& (0+255),w,b
 12291  0136B6  0100               	movlb	0	; () banked
 12292  0136B8  A4D8               	btfss	status,2,c
 12293  0136BA  D011               	goto	l7785
 12294  0136BC                     l7781:
 12295                           
 12296                           ; BSR set to: 0
 12297  0136BC  0E00               	movlw	0
 12298  0136BE  0100               	movlb	0	; () banked
 12299  0136C0  6FA6               	movwf	___fladd@b& (0+255),b
 12300  0136C2  0E00               	movlw	0
 12301  0136C4  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 12302  0136C6  0E00               	movlw	0
 12303  0136C8  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 12304  0136CA  0E00               	movlw	0
 12305  0136CC  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 12306  0136CE  0100               	movlb	0	; () banked
 12307  0136D0  51B8               	movf	___fladd@bexp& (0+255),w,b
 12308  0136D2  0100               	movlb	0	; () banked
 12309  0136D4  A4D8               	btfss	status,2,c
 12310  0136D6  D003               	goto	l7785
 12311                           
 12312                           ; BSR set to: 0
 12313  0136D8  0E00               	movlw	0
 12314  0136DA  0100               	movlb	0	; () banked
 12315  0136DC  6FB6               	movwf	___fladd@signs& (0+255),b
 12316  0136DE                     l7785:
 12317                           
 12318                           ; BSR set to: 0
 12319  0136DE  0100               	movlb	0	; () banked
 12320  0136E0  A1B8               	btfss	___fladd@bexp& (0+255),0,b
 12321  0136E2  D003               	goto	l7789
 12322                           
 12323                           ; BSR set to: 0
 12324  0136E4  0100               	movlb	0	; () banked
 12325  0136E6  8FA8               	bsf	(___fladd@b+2)& (0+255),7,b
 12326  0136E8  D002               	goto	l7791
 12327  0136EA                     l7789:
 12328                           
 12329                           ; BSR set to: 0
 12330  0136EA  0100               	movlb	0	; () banked
 12331  0136EC  9FA8               	bcf	(___fladd@b+2)& (0+255),7,b
 12332  0136EE                     l7791:
 12333                           
 12334                           ; BSR set to: 0
 12335  0136EE  0100               	movlb	0	; () banked
 12336  0136F0  90D8               	bcf	status,0,c
 12337  0136F2  31B8               	rrcf	___fladd@bexp& (0+255),w,b
 12338  0136F4  0100               	movlb	0	; () banked
 12339  0136F6  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 12340                           
 12341                           ; BSR set to: 0
 12342  0136F8  0100               	movlb	0	; () banked
 12343  0136FA  AFB6               	btfss	___fladd@signs& (0+255),7,b
 12344  0136FC  D002               	goto	l7797
 12345                           
 12346                           ; BSR set to: 0
 12347  0136FE  0100               	movlb	0	; () banked
 12348  013700  8FA9               	bsf	(___fladd@b+3)& (0+255),7,b
 12349  013702                     l7797:
 12350                           
 12351                           ; BSR set to: 0
 12352  013702  C0A6  F0A6         	movff	___fladd@b,?___fladd
 12353  013706  C0A7  F0A7         	movff	___fladd@b+1,?___fladd+1
 12354  01370A  C0A8  F0A8         	movff	___fladd@b+2,?___fladd+2
 12355  01370E  C0A9  F0A9         	movff	___fladd@b+3,?___fladd+3
 12356  013712  0012               	return	
 12357  013714                     __end_of___fladd:
 12358                           	opt stack 0
 12359                           tblptru	equ	0xFF8
 12360                           tblptrh	equ	0xFF7
 12361                           tblptrl	equ	0xFF6
 12362                           tablat	equ	0xFF5
 12363                           prodh	equ	0xFF4
 12364                           prodl	equ	0xFF3
 12365                           intcon	equ	0xFF2
 12366                           postinc0	equ	0xFEE
 12367                           wreg	equ	0xFE8
 12368                           indf2	equ	0xFDF
 12369                           postinc2	equ	0xFDE
 12370                           fsr2h	equ	0xFDA
 12371                           fsr2l	equ	0xFD9
 12372                           status	equ	0xFD8
 12373                           
 12374 ;; *************** function ___flneg *****************
 12375 ;; Defined at:
 12376 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 12377 ;; Parameters:    Size  Location     Type
 12378 ;;  f1              4   57[BANK0 ] unsigned char 
 12379 ;; Auto vars:     Size  Location     Type
 12380 ;;		None
 12381 ;; Return value:  Size  Location     Type
 12382 ;;                  4   57[BANK0 ] unsigned char 
 12383 ;; Registers used:
 12384 ;;		wreg, status,2, status,0
 12385 ;; Tracked objects:
 12386 ;;		On entry : 0/0
 12387 ;;		On exit  : 0/0
 12388 ;;		Unchanged: 0/0
 12389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12390 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12393 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12394 ;;Total ram usage:        4 bytes
 12395 ;; Hardware stack levels used:    1
 12396 ;; Hardware stack levels required when called:    3
 12397 ;; This function calls:
 12398 ;;		Nothing
 12399 ;; This function is called by:
 12400 ;;		_main
 12401 ;;		_sprintf
 12402 ;; This function uses a non-reentrant model
 12403 ;;
 12404                           
 12405                           	psect	text23
 12406  015F78                     __ptext23:
 12407                           	opt stack 0
 12408  015F78                     ___flneg:
 12409                           	opt stack 27
 12410                           
 12411                           ; BSR set to: 0
 12412                           ;incstack = 0
 12413  015F78  0100               	movlb	0	; () banked
 12414  015F7A  5199               	movf	___flneg@f1& (0+255),w,b
 12415  015F7C  0100               	movlb	0	; () banked
 12416  015F7E  119A               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12417  015F80  0100               	movlb	0	; () banked
 12418  015F82  119B               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12419  015F84  0100               	movlb	0	; () banked
 12420  015F86  119C               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12421  015F88  B4D8               	btfsc	status,2,c
 12422  015F8A  D009               	goto	l8263
 12423                           
 12424                           ; BSR set to: 0
 12425  015F8C  0E00               	movlw	0
 12426  015F8E  0100               	movlb	0	; () banked
 12427  015F90  1B99               	xorwf	___flneg@f1& (0+255),f,b
 12428  015F92  0E00               	movlw	0
 12429  015F94  1B9A               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12430  015F96  0E00               	movlw	0
 12431  015F98  1B9B               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12432  015F9A  0E80               	movlw	128
 12433  015F9C  1B9C               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12434  015F9E                     l8263:
 12435                           
 12436                           ; BSR set to: 0
 12437  015F9E  C099  F099         	movff	___flneg@f1,?___flneg
 12438  015FA2  C09A  F09A         	movff	___flneg@f1+1,?___flneg+1
 12439  015FA6  C09B  F09B         	movff	___flneg@f1+2,?___flneg+2
 12440  015FAA  C09C  F09C         	movff	___flneg@f1+3,?___flneg+3
 12441  015FAE  0012               	return	
 12442  015FB0                     __end_of___flneg:
 12443                           	opt stack 0
 12444                           tblptru	equ	0xFF8
 12445                           tblptrh	equ	0xFF7
 12446                           tblptrl	equ	0xFF6
 12447                           tablat	equ	0xFF5
 12448                           prodh	equ	0xFF4
 12449                           prodl	equ	0xFF3
 12450                           intcon	equ	0xFF2
 12451                           postinc0	equ	0xFEE
 12452                           wreg	equ	0xFE8
 12453                           indf2	equ	0xFDF
 12454                           postinc2	equ	0xFDE
 12455                           fsr2h	equ	0xFDA
 12456                           fsr2l	equ	0xFD9
 12457                           status	equ	0xFD8
 12458                           
 12459 ;; *************** function ___flge *****************
 12460 ;; Defined at:
 12461 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 12462 ;; Parameters:    Size  Location     Type
 12463 ;;  ff1             4   18[BANK0 ] unsigned char 
 12464 ;;  ff2             4   22[BANK0 ] unsigned char 
 12465 ;; Auto vars:     Size  Location     Type
 12466 ;;		None
 12467 ;; Return value:  Size  Location     Type
 12468 ;;		None               void
 12469 ;; Registers used:
 12470 ;;		wreg, status,2, status,0
 12471 ;; Tracked objects:
 12472 ;;		On entry : 0/0
 12473 ;;		On exit  : 0/0
 12474 ;;		Unchanged: 0/0
 12475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12476 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12478 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12479 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12480 ;;Total ram usage:       12 bytes
 12481 ;; Hardware stack levels used:    1
 12482 ;; Hardware stack levels required when called:    3
 12483 ;; This function calls:
 12484 ;;		Nothing
 12485 ;; This function is called by:
 12486 ;;		_sprintf
 12487 ;; This function uses a non-reentrant model
 12488 ;;
 12489                           
 12490                           	psect	text24
 12491  014EAE                     __ptext24:
 12492                           	opt stack 0
 12493  014EAE                     ___flge:
 12494                           	opt stack 25
 12495                           
 12496                           ; BSR set to: 0
 12497                           ;incstack = 0
 12498  014EAE  0E00               	movlw	0
 12499  014EB0  0100               	movlb	0	; () banked
 12500  014EB2  1572               	andwf	___flge@ff1& (0+255),w,b
 12501  014EB4  0100               	movlb	0	; () banked
 12502  014EB6  6F7A               	movwf	??___flge& (0+255),b
 12503  014EB8  0E00               	movlw	0
 12504  014EBA  0100               	movlb	0	; () banked
 12505  014EBC  1573               	andwf	(___flge@ff1+1)& (0+255),w,b
 12506  014EBE  0100               	movlb	0	; () banked
 12507  014EC0  6F7B               	movwf	(??___flge+1)& (0+255),b
 12508  014EC2  0E80               	movlw	128
 12509  014EC4  0100               	movlb	0	; () banked
 12510  014EC6  1574               	andwf	(___flge@ff1+2)& (0+255),w,b
 12511  014EC8  0100               	movlb	0	; () banked
 12512  014ECA  6F7C               	movwf	(??___flge+2)& (0+255),b
 12513  014ECC  0E7F               	movlw	127
 12514  014ECE  0100               	movlb	0	; () banked
 12515  014ED0  1575               	andwf	(___flge@ff1+3)& (0+255),w,b
 12516  014ED2  0100               	movlb	0	; () banked
 12517  014ED4  6F7D               	movwf	(??___flge+3)& (0+255),b
 12518  014ED6  0100               	movlb	0	; () banked
 12519  014ED8  517A               	movf	??___flge& (0+255),w,b
 12520  014EDA  0100               	movlb	0	; () banked
 12521  014EDC  117B               	iorwf	(??___flge+1)& (0+255),w,b
 12522  014EDE  0100               	movlb	0	; () banked
 12523  014EE0  117C               	iorwf	(??___flge+2)& (0+255),w,b
 12524  014EE2  0100               	movlb	0	; () banked
 12525  014EE4  117D               	iorwf	(??___flge+3)& (0+255),w,b
 12526  014EE6  A4D8               	btfss	status,2,c
 12527  014EE8  D009               	goto	l8241
 12528                           
 12529                           ; BSR set to: 0
 12530  014EEA  0E00               	movlw	0
 12531  014EEC  0100               	movlb	0	; () banked
 12532  014EEE  6F72               	movwf	___flge@ff1& (0+255),b
 12533  014EF0  0E00               	movlw	0
 12534  014EF2  6F73               	movwf	(___flge@ff1+1)& (0+255),b
 12535  014EF4  0E00               	movlw	0
 12536  014EF6  6F74               	movwf	(___flge@ff1+2)& (0+255),b
 12537  014EF8  0E00               	movlw	0
 12538  014EFA  6F75               	movwf	(___flge@ff1+3)& (0+255),b
 12539  014EFC                     l8241:
 12540                           
 12541                           ; BSR set to: 0
 12542  014EFC  0E00               	movlw	0
 12543  014EFE  0100               	movlb	0	; () banked
 12544  014F00  1576               	andwf	___flge@ff2& (0+255),w,b
 12545  014F02  0100               	movlb	0	; () banked
 12546  014F04  6F7A               	movwf	??___flge& (0+255),b
 12547  014F06  0E00               	movlw	0
 12548  014F08  0100               	movlb	0	; () banked
 12549  014F0A  1577               	andwf	(___flge@ff2+1)& (0+255),w,b
 12550  014F0C  0100               	movlb	0	; () banked
 12551  014F0E  6F7B               	movwf	(??___flge+1)& (0+255),b
 12552  014F10  0E80               	movlw	128
 12553  014F12  0100               	movlb	0	; () banked
 12554  014F14  1578               	andwf	(___flge@ff2+2)& (0+255),w,b
 12555  014F16  0100               	movlb	0	; () banked
 12556  014F18  6F7C               	movwf	(??___flge+2)& (0+255),b
 12557  014F1A  0E7F               	movlw	127
 12558  014F1C  0100               	movlb	0	; () banked
 12559  014F1E  1579               	andwf	(___flge@ff2+3)& (0+255),w,b
 12560  014F20  0100               	movlb	0	; () banked
 12561  014F22  6F7D               	movwf	(??___flge+3)& (0+255),b
 12562  014F24  0100               	movlb	0	; () banked
 12563  014F26  517A               	movf	??___flge& (0+255),w,b
 12564  014F28  0100               	movlb	0	; () banked
 12565  014F2A  117B               	iorwf	(??___flge+1)& (0+255),w,b
 12566  014F2C  0100               	movlb	0	; () banked
 12567  014F2E  117C               	iorwf	(??___flge+2)& (0+255),w,b
 12568  014F30  0100               	movlb	0	; () banked
 12569  014F32  117D               	iorwf	(??___flge+3)& (0+255),w,b
 12570  014F34  A4D8               	btfss	status,2,c
 12571  014F36  D009               	goto	l8245
 12572                           
 12573                           ; BSR set to: 0
 12574  014F38  0E00               	movlw	0
 12575  014F3A  0100               	movlb	0	; () banked
 12576  014F3C  6F76               	movwf	___flge@ff2& (0+255),b
 12577  014F3E  0E00               	movlw	0
 12578  014F40  6F77               	movwf	(___flge@ff2+1)& (0+255),b
 12579  014F42  0E00               	movlw	0
 12580  014F44  6F78               	movwf	(___flge@ff2+2)& (0+255),b
 12581  014F46  0E00               	movlw	0
 12582  014F48  6F79               	movwf	(___flge@ff2+3)& (0+255),b
 12583  014F4A                     l8245:
 12584                           
 12585                           ; BSR set to: 0
 12586  014F4A  0100               	movlb	0	; () banked
 12587  014F4C  AF75               	btfss	(___flge@ff1+3)& (0+255),7,b
 12588  014F4E  D026               	goto	l8249
 12589                           
 12590                           ; BSR set to: 0
 12591  014F50  C072  F07A         	movff	___flge@ff1,??___flge
 12592  014F54  C073  F07B         	movff	___flge@ff1+1,??___flge+1
 12593  014F58  C074  F07C         	movff	___flge@ff1+2,??___flge+2
 12594  014F5C  C075  F07D         	movff	___flge@ff1+3,??___flge+3
 12595  014F60  0100               	movlb	0	; () banked
 12596  014F62  1F7A               	comf	??___flge& (0+255),f,b
 12597  014F64  1F7B               	comf	(??___flge+1)& (0+255),f,b
 12598  014F66  1F7C               	comf	(??___flge+2)& (0+255),f,b
 12599  014F68  1F7D               	comf	(??___flge+3)& (0+255),f,b
 12600  014F6A  2B7A               	incf	??___flge& (0+255),f,b
 12601  014F6C  0E00               	movlw	0
 12602  014F6E  237B               	addwfc	(??___flge+1)& (0+255),f,b
 12603  014F70  237C               	addwfc	(??___flge+2)& (0+255),f,b
 12604  014F72  237D               	addwfc	(??___flge+3)& (0+255),f,b
 12605  014F74  0E00               	movlw	0
 12606  014F76  0100               	movlb	0	; () banked
 12607  014F78  257A               	addwf	??___flge& (0+255),w,b
 12608  014F7A  0100               	movlb	0	; () banked
 12609  014F7C  6F72               	movwf	___flge@ff1& (0+255),b
 12610  014F7E  0E00               	movlw	0
 12611  014F80  0100               	movlb	0	; () banked
 12612  014F82  217B               	addwfc	(??___flge+1)& (0+255),w,b
 12613  014F84  0100               	movlb	0	; () banked
 12614  014F86  6F73               	movwf	(___flge@ff1+1)& (0+255),b
 12615  014F88  0E00               	movlw	0
 12616  014F8A  0100               	movlb	0	; () banked
 12617  014F8C  217C               	addwfc	(??___flge+2)& (0+255),w,b
 12618  014F8E  0100               	movlb	0	; () banked
 12619  014F90  6F74               	movwf	(___flge@ff1+2)& (0+255),b
 12620  014F92  0E80               	movlw	128
 12621  014F94  0100               	movlb	0	; () banked
 12622  014F96  217D               	addwfc	(??___flge+3)& (0+255),w,b
 12623  014F98  0100               	movlb	0	; () banked
 12624  014F9A  6F75               	movwf	(___flge@ff1+3)& (0+255),b
 12625  014F9C                     l8249:
 12626                           
 12627                           ; BSR set to: 0
 12628  014F9C  0100               	movlb	0	; () banked
 12629  014F9E  AF79               	btfss	(___flge@ff2+3)& (0+255),7,b
 12630  014FA0  D026               	goto	l1202
 12631                           
 12632                           ; BSR set to: 0
 12633  014FA2  C076  F07A         	movff	___flge@ff2,??___flge
 12634  014FA6  C077  F07B         	movff	___flge@ff2+1,??___flge+1
 12635  014FAA  C078  F07C         	movff	___flge@ff2+2,??___flge+2
 12636  014FAE  C079  F07D         	movff	___flge@ff2+3,??___flge+3
 12637  014FB2  0100               	movlb	0	; () banked
 12638  014FB4  1F7A               	comf	??___flge& (0+255),f,b
 12639  014FB6  1F7B               	comf	(??___flge+1)& (0+255),f,b
 12640  014FB8  1F7C               	comf	(??___flge+2)& (0+255),f,b
 12641  014FBA  1F7D               	comf	(??___flge+3)& (0+255),f,b
 12642  014FBC  2B7A               	incf	??___flge& (0+255),f,b
 12643  014FBE  0E00               	movlw	0
 12644  014FC0  237B               	addwfc	(??___flge+1)& (0+255),f,b
 12645  014FC2  237C               	addwfc	(??___flge+2)& (0+255),f,b
 12646  014FC4  237D               	addwfc	(??___flge+3)& (0+255),f,b
 12647  014FC6  0E00               	movlw	0
 12648  014FC8  0100               	movlb	0	; () banked
 12649  014FCA  257A               	addwf	??___flge& (0+255),w,b
 12650  014FCC  0100               	movlb	0	; () banked
 12651  014FCE  6F76               	movwf	___flge@ff2& (0+255),b
 12652  014FD0  0E00               	movlw	0
 12653  014FD2  0100               	movlb	0	; () banked
 12654  014FD4  217B               	addwfc	(??___flge+1)& (0+255),w,b
 12655  014FD6  0100               	movlb	0	; () banked
 12656  014FD8  6F77               	movwf	(___flge@ff2+1)& (0+255),b
 12657  014FDA  0E00               	movlw	0
 12658  014FDC  0100               	movlb	0	; () banked
 12659  014FDE  217C               	addwfc	(??___flge+2)& (0+255),w,b
 12660  014FE0  0100               	movlb	0	; () banked
 12661  014FE2  6F78               	movwf	(___flge@ff2+2)& (0+255),b
 12662  014FE4  0E80               	movlw	128
 12663  014FE6  0100               	movlb	0	; () banked
 12664  014FE8  217D               	addwfc	(??___flge+3)& (0+255),w,b
 12665  014FEA  0100               	movlb	0	; () banked
 12666  014FEC  6F79               	movwf	(___flge@ff2+3)& (0+255),b
 12667  014FEE                     l1202:
 12668                           
 12669                           ; BSR set to: 0
 12670  014FEE  0E00               	movlw	0
 12671  014FF0  0100               	movlb	0	; () banked
 12672  014FF2  1B72               	xorwf	___flge@ff1& (0+255),f,b
 12673  014FF4  0E00               	movlw	0
 12674  014FF6  1B73               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12675  014FF8  0E00               	movlw	0
 12676  014FFA  1B74               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12677  014FFC  0E80               	movlw	128
 12678  014FFE  1B75               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12679  015000  0E00               	movlw	0
 12680  015002  0100               	movlb	0	; () banked
 12681  015004  1B76               	xorwf	___flge@ff2& (0+255),f,b
 12682  015006  0E00               	movlw	0
 12683  015008  1B77               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12684  01500A  0E00               	movlw	0
 12685  01500C  1B78               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12686  01500E  0E80               	movlw	128
 12687  015010  1B79               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12688  015012  0100               	movlb	0	; () banked
 12689  015014  5176               	movf	___flge@ff2& (0+255),w,b
 12690  015016  0100               	movlb	0	; () banked
 12691  015018  5D72               	subwf	___flge@ff1& (0+255),w,b
 12692  01501A  0100               	movlb	0	; () banked
 12693  01501C  5177               	movf	(___flge@ff2+1)& (0+255),w,b
 12694  01501E  0100               	movlb	0	; () banked
 12695  015020  5973               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12696  015022  0100               	movlb	0	; () banked
 12697  015024  5178               	movf	(___flge@ff2+2)& (0+255),w,b
 12698  015026  0100               	movlb	0	; () banked
 12699  015028  5974               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12700  01502A  0100               	movlb	0	; () banked
 12701  01502C  5179               	movf	(___flge@ff2+3)& (0+255),w,b
 12702  01502E  0100               	movlb	0	; () banked
 12703  015030  5975               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12704  015032  B0D8               	btfsc	status,0,c
 12705  015034  D002               	goto	l8255
 12706                           
 12707                           ; BSR set to: 0
 12708  015036  90D8               	bcf	status,0,c
 12709  015038  0012               	return	
 12710  01503A                     l8255:
 12711                           
 12712                           ; BSR set to: 0
 12713  01503A  80D8               	bsf	status,0,c
 12714                           
 12715                           ; BSR set to: 0
 12716  01503C  0012               	return	
 12717  01503E                     __end_of___flge:
 12718                           	opt stack 0
 12719                           tblptru	equ	0xFF8
 12720                           tblptrh	equ	0xFF7
 12721                           tblptrl	equ	0xFF6
 12722                           tablat	equ	0xFF5
 12723                           prodh	equ	0xFF4
 12724                           prodl	equ	0xFF3
 12725                           intcon	equ	0xFF2
 12726                           postinc0	equ	0xFEE
 12727                           wreg	equ	0xFE8
 12728                           indf2	equ	0xFDF
 12729                           postinc2	equ	0xFDE
 12730                           fsr2h	equ	0xFDA
 12731                           fsr2l	equ	0xFD9
 12732                           status	equ	0xFD8
 12733                           
 12734 ;; *************** function ___fldiv *****************
 12735 ;; Defined at:
 12736 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 12737 ;; Parameters:    Size  Location     Type
 12738 ;;  b               4   32[BANK0 ] unsigned char 
 12739 ;;  a               4   36[BANK0 ] unsigned char 
 12740 ;; Auto vars:     Size  Location     Type
 12741 ;;  grs             4   51[BANK0 ] unsigned long 
 12742 ;;  rem             4   45[BANK0 ] unsigned long 
 12743 ;;  new_exp         2   49[BANK0 ] int 
 12744 ;;  aexp            1   56[BANK0 ] unsigned char 
 12745 ;;  bexp            1   55[BANK0 ] unsigned char 
 12746 ;;  sign            1   44[BANK0 ] unsigned char 
 12747 ;; Return value:  Size  Location     Type
 12748 ;;                  4   32[BANK0 ] unsigned char 
 12749 ;; Registers used:
 12750 ;;		wreg, status,2, status,0
 12751 ;; Tracked objects:
 12752 ;;		On entry : 0/0
 12753 ;;		On exit  : 0/0
 12754 ;;		Unchanged: 0/0
 12755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12756 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12757 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12758 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12759 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12760 ;;Total ram usage:       25 bytes
 12761 ;; Hardware stack levels used:    1
 12762 ;; Hardware stack levels required when called:    3
 12763 ;; This function calls:
 12764 ;;		Nothing
 12765 ;; This function is called by:
 12766 ;;		_LCD_Handler
 12767 ;; This function uses a non-reentrant model
 12768 ;;
 12769                           
 12770                           	psect	text25
 12771  013BBA                     __ptext25:
 12772                           	opt stack 0
 12773  013BBA                     ___fldiv:
 12774                           	opt stack 26
 12775                           
 12776                           ; BSR set to: 0
 12777                           ;incstack = 0
 12778  013BBA  0100               	movlb	0	; () banked
 12779  013BBC  5183               	movf	(___fldiv@b+3)& (0+255),w,b
 12780  013BBE  0B80               	andlw	128
 12781  013BC0  0100               	movlb	0	; () banked
 12782  013BC2  6F8C               	movwf	___fldiv@sign& (0+255),b
 12783  013BC4  0100               	movlb	0	; () banked
 12784  013BC6  5183               	movf	(___fldiv@b+3)& (0+255),w,b
 12785  013BC8  2583               	addwf	(___fldiv@b+3)& (0+255),w,b
 12786  013BCA  0100               	movlb	0	; () banked
 12787  013BCC  6F97               	movwf	___fldiv@bexp& (0+255),b
 12788                           
 12789                           ; BSR set to: 0
 12790  013BCE  0100               	movlb	0	; () banked
 12791  013BD0  AF82               	btfss	(___fldiv@b+2)& (0+255),7,b
 12792  013BD2  D002               	goto	l6549
 12793                           
 12794                           ; BSR set to: 0
 12795  013BD4  0100               	movlb	0	; () banked
 12796  013BD6  8197               	bsf	___fldiv@bexp& (0+255),0,b
 12797  013BD8                     l6549:
 12798                           
 12799                           ; BSR set to: 0
 12800  013BD8  0100               	movlb	0	; () banked
 12801  013BDA  5197               	movf	___fldiv@bexp& (0+255),w,b
 12802  013BDC  0100               	movlb	0	; () banked
 12803  013BDE  B4D8               	btfsc	status,2,c
 12804  013BE0  D012               	goto	l6559
 12805                           
 12806                           ; BSR set to: 0
 12807  013BE2  0100               	movlb	0	; () banked
 12808  013BE4  2997               	incf	___fldiv@bexp& (0+255),w,b
 12809  013BE6  A4D8               	btfss	status,2,c
 12810  013BE8  D009               	goto	l6555
 12811                           
 12812                           ; BSR set to: 0
 12813  013BEA  0E00               	movlw	0
 12814  013BEC  0100               	movlb	0	; () banked
 12815  013BEE  6F80               	movwf	___fldiv@b& (0+255),b
 12816  013BF0  0E00               	movlw	0
 12817  013BF2  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12818  013BF4  0E00               	movlw	0
 12819  013BF6  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12820  013BF8  0E00               	movlw	0
 12821  013BFA  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12822  013BFC                     l6555:
 12823                           
 12824                           ; BSR set to: 0
 12825  013BFC  0100               	movlb	0	; () banked
 12826  013BFE  8F82               	bsf	(___fldiv@b+2)& (0+255),7,b
 12827                           
 12828                           ; BSR set to: 0
 12829  013C00  0E00               	movlw	0
 12830  013C02  0100               	movlb	0	; () banked
 12831  013C04  D008               	goto	L12
 12832  013C06                     l6559:
 12833                           
 12834                           ; BSR set to: 0
 12835  013C06  0E00               	movlw	0
 12836  013C08  0100               	movlb	0	; () banked
 12837  013C0A  6F80               	movwf	___fldiv@b& (0+255),b
 12838  013C0C  0E00               	movlw	0
 12839  013C0E  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12840  013C10  0E00               	movlw	0
 12841  013C12  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12842  013C14  0E00               	movlw	0
 12843  013C16                     L12:
 12844  013C16  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12845                           
 12846                           ; BSR set to: 0
 12847                           
 12848                           ; BSR set to: 0
 12849  013C18  0100               	movlb	0	; () banked
 12850  013C1A  5187               	movf	(___fldiv@a+3)& (0+255),w,b
 12851  013C1C  0B80               	andlw	128
 12852  013C1E  0100               	movlb	0	; () banked
 12853  013C20  1B8C               	xorwf	___fldiv@sign& (0+255),f,b
 12854                           
 12855                           ; BSR set to: 0
 12856  013C22  0100               	movlb	0	; () banked
 12857  013C24  5187               	movf	(___fldiv@a+3)& (0+255),w,b
 12858  013C26  2587               	addwf	(___fldiv@a+3)& (0+255),w,b
 12859  013C28  0100               	movlb	0	; () banked
 12860  013C2A  6F98               	movwf	___fldiv@aexp& (0+255),b
 12861                           
 12862                           ; BSR set to: 0
 12863  013C2C  0100               	movlb	0	; () banked
 12864  013C2E  AF86               	btfss	(___fldiv@a+2)& (0+255),7,b
 12865  013C30  D002               	goto	l6569
 12866                           
 12867                           ; BSR set to: 0
 12868  013C32  0100               	movlb	0	; () banked
 12869  013C34  8198               	bsf	___fldiv@aexp& (0+255),0,b
 12870  013C36                     l6569:
 12871                           
 12872                           ; BSR set to: 0
 12873  013C36  0100               	movlb	0	; () banked
 12874  013C38  5198               	movf	___fldiv@aexp& (0+255),w,b
 12875  013C3A  0100               	movlb	0	; () banked
 12876  013C3C  B4D8               	btfsc	status,2,c
 12877  013C3E  D012               	goto	l6579
 12878                           
 12879                           ; BSR set to: 0
 12880  013C40  0100               	movlb	0	; () banked
 12881  013C42  2998               	incf	___fldiv@aexp& (0+255),w,b
 12882  013C44  A4D8               	btfss	status,2,c
 12883  013C46  D009               	goto	l6575
 12884                           
 12885                           ; BSR set to: 0
 12886  013C48  0E00               	movlw	0
 12887  013C4A  0100               	movlb	0	; () banked
 12888  013C4C  6F84               	movwf	___fldiv@a& (0+255),b
 12889  013C4E  0E00               	movlw	0
 12890  013C50  6F85               	movwf	(___fldiv@a+1)& (0+255),b
 12891  013C52  0E00               	movlw	0
 12892  013C54  6F86               	movwf	(___fldiv@a+2)& (0+255),b
 12893  013C56  0E00               	movlw	0
 12894  013C58  6F87               	movwf	(___fldiv@a+3)& (0+255),b
 12895  013C5A                     l6575:
 12896                           
 12897                           ; BSR set to: 0
 12898  013C5A  0100               	movlb	0	; () banked
 12899  013C5C  8F86               	bsf	(___fldiv@a+2)& (0+255),7,b
 12900                           
 12901                           ; BSR set to: 0
 12902  013C5E  0E00               	movlw	0
 12903  013C60  0100               	movlb	0	; () banked
 12904  013C62  D008               	goto	L13
 12905  013C64                     l6579:
 12906                           
 12907                           ; BSR set to: 0
 12908  013C64  0E00               	movlw	0
 12909  013C66  0100               	movlb	0	; () banked
 12910  013C68  6F84               	movwf	___fldiv@a& (0+255),b
 12911  013C6A  0E00               	movlw	0
 12912  013C6C  6F85               	movwf	(___fldiv@a+1)& (0+255),b
 12913  013C6E  0E00               	movlw	0
 12914  013C70  6F86               	movwf	(___fldiv@a+2)& (0+255),b
 12915  013C72  0E00               	movlw	0
 12916  013C74                     L13:
 12917  013C74  6F87               	movwf	(___fldiv@a+3)& (0+255),b
 12918                           
 12919                           ; BSR set to: 0
 12920                           
 12921                           ; BSR set to: 0
 12922  013C76  0100               	movlb	0	; () banked
 12923  013C78  5184               	movf	___fldiv@a& (0+255),w,b
 12924  013C7A  0100               	movlb	0	; () banked
 12925  013C7C  1185               	iorwf	(___fldiv@a+1)& (0+255),w,b
 12926  013C7E  0100               	movlb	0	; () banked
 12927  013C80  1186               	iorwf	(___fldiv@a+2)& (0+255),w,b
 12928  013C82  0100               	movlb	0	; () banked
 12929  013C84  1187               	iorwf	(___fldiv@a+3)& (0+255),w,b
 12930  013C86  A4D8               	btfss	status,2,c
 12931  013C88  D017               	goto	l6591
 12932                           
 12933                           ; BSR set to: 0
 12934  013C8A  0E00               	movlw	0
 12935  013C8C  0100               	movlb	0	; () banked
 12936  013C8E  6F80               	movwf	___fldiv@b& (0+255),b
 12937  013C90  0E00               	movlw	0
 12938  013C92  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12939  013C94  0E00               	movlw	0
 12940  013C96  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12941  013C98  0E00               	movlw	0
 12942  013C9A  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12943                           
 12944                           ; BSR set to: 0
 12945  013C9C  0100               	movlb	0	; () banked
 12946  013C9E  0E80               	movlw	128
 12947  013CA0  1382               	iorwf	(___fldiv@b+2)& (0+255),f,b
 12948  013CA2  0E7F               	movlw	127
 12949  013CA4  1383               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12950                           
 12951                           ; BSR set to: 0
 12952  013CA6  C080  F080         	movff	___fldiv@b,?___fldiv
 12953  013CAA  C081  F081         	movff	___fldiv@b+1,?___fldiv+1
 12954  013CAE  C082  F082         	movff	___fldiv@b+2,?___fldiv+2
 12955  013CB2  C083  F083         	movff	___fldiv@b+3,?___fldiv+3
 12956                           
 12957                           ; BSR set to: 0
 12958  013CB6  0012               	return	
 12959  013CB8                     l6591:
 12960                           
 12961                           ; BSR set to: 0
 12962  013CB8  0100               	movlb	0	; () banked
 12963  013CBA  5197               	movf	___fldiv@bexp& (0+255),w,b
 12964  013CBC  0100               	movlb	0	; () banked
 12965  013CBE  A4D8               	btfss	status,2,c
 12966  013CC0  D012               	goto	l6599
 12967                           
 12968                           ; BSR set to: 0
 12969  013CC2  0E00               	movlw	0
 12970  013CC4  0100               	movlb	0	; () banked
 12971  013CC6  6F80               	movwf	___fldiv@b& (0+255),b
 12972  013CC8  0E00               	movlw	0
 12973  013CCA  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12974  013CCC  0E00               	movlw	0
 12975  013CCE  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12976  013CD0  0E00               	movlw	0
 12977  013CD2  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12978                           
 12979                           ; BSR set to: 0
 12980  013CD4  C080  F080         	movff	___fldiv@b,?___fldiv
 12981  013CD8  C081  F081         	movff	___fldiv@b+1,?___fldiv+1
 12982  013CDC  C082  F082         	movff	___fldiv@b+2,?___fldiv+2
 12983  013CE0  C083  F083         	movff	___fldiv@b+3,?___fldiv+3
 12984                           
 12985                           ; BSR set to: 0
 12986  013CE4  0012               	return	
 12987  013CE6                     l6599:
 12988                           
 12989                           ; BSR set to: 0
 12990  013CE6  0100               	movlb	0	; () banked
 12991  013CE8  5198               	movf	___fldiv@aexp& (0+255),w,b
 12992  013CEA  0100               	movlb	0	; () banked
 12993  013CEC  6F88               	movwf	??___fldiv& (0+255),b
 12994  013CEE  6B89               	clrf	(??___fldiv+1)& (0+255),b
 12995  013CF0  0100               	movlb	0	; () banked
 12996  013CF2  1F88               	comf	??___fldiv& (0+255),f,b
 12997  013CF4  1F89               	comf	(??___fldiv+1)& (0+255),f,b
 12998  013CF6  4B88               	infsnz	??___fldiv& (0+255),f,b
 12999  013CF8  2B89               	incf	(??___fldiv+1)& (0+255),f,b
 13000  013CFA  0100               	movlb	0	; () banked
 13001  013CFC  5197               	movf	___fldiv@bexp& (0+255),w,b
 13002  013CFE  0100               	movlb	0	; () banked
 13003  013D00  6F8A               	movwf	(??___fldiv+2)& (0+255),b
 13004  013D02  6B8B               	clrf	(??___fldiv+3)& (0+255),b
 13005  013D04  0100               	movlb	0	; () banked
 13006  013D06  5188               	movf	??___fldiv& (0+255),w,b
 13007  013D08  0100               	movlb	0	; () banked
 13008  013D0A  278A               	addwf	(??___fldiv+2)& (0+255),f,b
 13009  013D0C  0100               	movlb	0	; () banked
 13010  013D0E  5189               	movf	(??___fldiv+1)& (0+255),w,b
 13011  013D10  0100               	movlb	0	; () banked
 13012  013D12  238B               	addwfc	(??___fldiv+3)& (0+255),f,b
 13013  013D14  0E7F               	movlw	127
 13014  013D16  0100               	movlb	0	; () banked
 13015  013D18  258A               	addwf	(??___fldiv+2)& (0+255),w,b
 13016  013D1A  0100               	movlb	0	; () banked
 13017  013D1C  6F91               	movwf	___fldiv@new_exp& (0+255),b
 13018  013D1E  0E00               	movlw	0
 13019  013D20  0100               	movlb	0	; () banked
 13020  013D22  218B               	addwfc	(??___fldiv+3)& (0+255),w,b
 13021  013D24  0100               	movlb	0	; () banked
 13022  013D26  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13023                           
 13024                           ; BSR set to: 0
 13025  013D28  C080  F08D         	movff	___fldiv@b,___fldiv@rem
 13026  013D2C  C081  F08E         	movff	___fldiv@b+1,___fldiv@rem+1
 13027  013D30  C082  F08F         	movff	___fldiv@b+2,___fldiv@rem+2
 13028  013D34  C083  F090         	movff	___fldiv@b+3,___fldiv@rem+3
 13029                           
 13030                           ; BSR set to: 0
 13031  013D38  0E00               	movlw	0
 13032  013D3A  0100               	movlb	0	; () banked
 13033  013D3C  6F80               	movwf	___fldiv@b& (0+255),b
 13034  013D3E  0E00               	movlw	0
 13035  013D40  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 13036  013D42  0E00               	movlw	0
 13037  013D44  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 13038  013D46  0E00               	movlw	0
 13039  013D48  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 13040                           
 13041                           ; BSR set to: 0
 13042  013D4A  0E00               	movlw	0
 13043  013D4C  0100               	movlb	0	; () banked
 13044  013D4E  6F93               	movwf	___fldiv@grs& (0+255),b
 13045  013D50  0E00               	movlw	0
 13046  013D52  6F94               	movwf	(___fldiv@grs+1)& (0+255),b
 13047  013D54  0E00               	movlw	0
 13048  013D56  6F95               	movwf	(___fldiv@grs+2)& (0+255),b
 13049  013D58  0E00               	movlw	0
 13050  013D5A  6F96               	movwf	(___fldiv@grs+3)& (0+255),b
 13051                           
 13052                           ; BSR set to: 0
 13053  013D5C  0E00               	movlw	0
 13054  013D5E  0100               	movlb	0	; () banked
 13055  013D60  6F98               	movwf	___fldiv@aexp& (0+255),b
 13056  013D62  D042               	goto	l1535
 13057  013D64                     l6609:
 13058                           
 13059                           ; BSR set to: 0
 13060  013D64  0100               	movlb	0	; () banked
 13061  013D66  5198               	movf	___fldiv@aexp& (0+255),w,b
 13062  013D68  0100               	movlb	0	; () banked
 13063  013D6A  B4D8               	btfsc	status,2,c
 13064  013D6C  D017               	goto	l6617
 13065                           
 13066                           ; BSR set to: 0
 13067  013D6E  0100               	movlb	0	; () banked
 13068  013D70  90D8               	bcf	status,0,c
 13069  013D72  378D               	rlcf	___fldiv@rem& (0+255),f,b
 13070  013D74  378E               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13071  013D76  378F               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13072  013D78  3790               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13073  013D7A  0100               	movlb	0	; () banked
 13074  013D7C  90D8               	bcf	status,0,c
 13075  013D7E  3780               	rlcf	___fldiv@b& (0+255),f,b
 13076  013D80  3781               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13077  013D82  3782               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13078  013D84  3783               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13079                           
 13080                           ; BSR set to: 0
 13081  013D86  0100               	movlb	0	; () banked
 13082  013D88  AF96               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13083  013D8A  D002               	goto	l1538
 13084                           
 13085                           ; BSR set to: 0
 13086  013D8C  0100               	movlb	0	; () banked
 13087  013D8E  8180               	bsf	___fldiv@b& (0+255),0,b
 13088  013D90                     l1538:
 13089                           
 13090                           ; BSR set to: 0
 13091  013D90  0100               	movlb	0	; () banked
 13092  013D92  90D8               	bcf	status,0,c
 13093  013D94  3793               	rlcf	___fldiv@grs& (0+255),f,b
 13094  013D96  3794               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13095  013D98  3795               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13096  013D9A  3796               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13097  013D9C                     l6617:
 13098                           
 13099                           ; BSR set to: 0
 13100  013D9C  0100               	movlb	0	; () banked
 13101  013D9E  5184               	movf	___fldiv@a& (0+255),w,b
 13102  013DA0  0100               	movlb	0	; () banked
 13103  013DA2  5D8D               	subwf	___fldiv@rem& (0+255),w,b
 13104  013DA4  0100               	movlb	0	; () banked
 13105  013DA6  5185               	movf	(___fldiv@a+1)& (0+255),w,b
 13106  013DA8  0100               	movlb	0	; () banked
 13107  013DAA  598E               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13108  013DAC  0100               	movlb	0	; () banked
 13109  013DAE  5186               	movf	(___fldiv@a+2)& (0+255),w,b
 13110  013DB0  0100               	movlb	0	; () banked
 13111  013DB2  598F               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13112  013DB4  0100               	movlb	0	; () banked
 13113  013DB6  5187               	movf	(___fldiv@a+3)& (0+255),w,b
 13114  013DB8  0100               	movlb	0	; () banked
 13115  013DBA  5990               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13116  013DBC  A0D8               	btfss	status,0,c
 13117  013DBE  D012               	goto	l6623
 13118                           
 13119                           ; BSR set to: 0
 13120  013DC0  0100               	movlb	0	; () banked
 13121  013DC2  8D96               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13122                           
 13123                           ; BSR set to: 0
 13124  013DC4  0100               	movlb	0	; () banked
 13125  013DC6  5184               	movf	___fldiv@a& (0+255),w,b
 13126  013DC8  0100               	movlb	0	; () banked
 13127  013DCA  5F8D               	subwf	___fldiv@rem& (0+255),f,b
 13128  013DCC  0100               	movlb	0	; () banked
 13129  013DCE  5185               	movf	(___fldiv@a+1)& (0+255),w,b
 13130  013DD0  0100               	movlb	0	; () banked
 13131  013DD2  5B8E               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13132  013DD4  0100               	movlb	0	; () banked
 13133  013DD6  5186               	movf	(___fldiv@a+2)& (0+255),w,b
 13134  013DD8  0100               	movlb	0	; () banked
 13135  013DDA  5B8F               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13136  013DDC  0100               	movlb	0	; () banked
 13137  013DDE  5187               	movf	(___fldiv@a+3)& (0+255),w,b
 13138  013DE0  0100               	movlb	0	; () banked
 13139  013DE2  5B90               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13140  013DE4                     l6623:
 13141                           
 13142                           ; BSR set to: 0
 13143  013DE4  0100               	movlb	0	; () banked
 13144  013DE6  2B98               	incf	___fldiv@aexp& (0+255),f,b
 13145  013DE8                     l1535:
 13146                           
 13147                           ; BSR set to: 0
 13148  013DE8  0E19               	movlw	25
 13149  013DEA  0100               	movlb	0	; () banked
 13150  013DEC  6598               	cpfsgt	___fldiv@aexp& (0+255),b
 13151  013DEE  D7BA               	goto	l6609
 13152                           
 13153                           ; BSR set to: 0
 13154                           
 13155                           ; BSR set to: 0
 13156  013DF0  0100               	movlb	0	; () banked
 13157  013DF2  518D               	movf	___fldiv@rem& (0+255),w,b
 13158  013DF4  0100               	movlb	0	; () banked
 13159  013DF6  118E               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13160  013DF8  0100               	movlb	0	; () banked
 13161  013DFA  118F               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13162  013DFC  0100               	movlb	0	; () banked
 13163  013DFE  1190               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13164  013E00  B4D8               	btfsc	status,2,c
 13165  013E02  D018               	goto	l6635
 13166                           
 13167                           ; BSR set to: 0
 13168  013E04  0100               	movlb	0	; () banked
 13169  013E06  8193               	bsf	___fldiv@grs& (0+255),0,b
 13170                           
 13171                           ; BSR set to: 0
 13172  013E08  D015               	goto	l6635
 13173  013E0A                     l6629:
 13174                           
 13175                           ; BSR set to: 0
 13176  013E0A  0100               	movlb	0	; () banked
 13177  013E0C  90D8               	bcf	status,0,c
 13178  013E0E  3780               	rlcf	___fldiv@b& (0+255),f,b
 13179  013E10  3781               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13180  013E12  3782               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13181  013E14  3783               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13182                           
 13183                           ; BSR set to: 0
 13184  013E16  0100               	movlb	0	; () banked
 13185  013E18  AF96               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13186  013E1A  D002               	goto	l1544
 13187                           
 13188                           ; BSR set to: 0
 13189  013E1C  0100               	movlb	0	; () banked
 13190  013E1E  8180               	bsf	___fldiv@b& (0+255),0,b
 13191  013E20                     l1544:
 13192                           
 13193                           ; BSR set to: 0
 13194  013E20  0100               	movlb	0	; () banked
 13195  013E22  90D8               	bcf	status,0,c
 13196  013E24  3793               	rlcf	___fldiv@grs& (0+255),f,b
 13197  013E26  3794               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13198  013E28  3795               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13199  013E2A  3796               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13200  013E2C  0100               	movlb	0	; () banked
 13201  013E2E  0791               	decf	___fldiv@new_exp& (0+255),f,b
 13202  013E30  A0D8               	btfss	status,0,c
 13203  013E32  0792               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13204  013E34                     l6635:
 13205                           
 13206                           ; BSR set to: 0
 13207  013E34  0100               	movlb	0	; () banked
 13208  013E36  AF82               	btfss	(___fldiv@b+2)& (0+255),7,b
 13209  013E38  D7E8               	goto	l6629
 13210                           
 13211                           ; BSR set to: 0
 13212                           
 13213                           ; BSR set to: 0
 13214  013E3A  0E00               	movlw	0
 13215  013E3C  0100               	movlb	0	; () banked
 13216  013E3E  6F98               	movwf	___fldiv@aexp& (0+255),b
 13217                           
 13218                           ; BSR set to: 0
 13219  013E40  0100               	movlb	0	; () banked
 13220  013E42  AF96               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13221  013E44  D024               	goto	l1546
 13222                           
 13223                           ; BSR set to: 0
 13224  013E46  0EFF               	movlw	255
 13225  013E48  0100               	movlb	0	; () banked
 13226  013E4A  1593               	andwf	___fldiv@grs& (0+255),w,b
 13227  013E4C  0100               	movlb	0	; () banked
 13228  013E4E  6F88               	movwf	??___fldiv& (0+255),b
 13229  013E50  0EFF               	movlw	255
 13230  013E52  0100               	movlb	0	; () banked
 13231  013E54  1594               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13232  013E56  0100               	movlb	0	; () banked
 13233  013E58  6F89               	movwf	(??___fldiv+1)& (0+255),b
 13234  013E5A  0EFF               	movlw	255
 13235  013E5C  0100               	movlb	0	; () banked
 13236  013E5E  1595               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13237  013E60  0100               	movlb	0	; () banked
 13238  013E62  6F8A               	movwf	(??___fldiv+2)& (0+255),b
 13239  013E64  0E7F               	movlw	127
 13240  013E66  0100               	movlb	0	; () banked
 13241  013E68  1596               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13242  013E6A  0100               	movlb	0	; () banked
 13243  013E6C  6F8B               	movwf	(??___fldiv+3)& (0+255),b
 13244  013E6E  0100               	movlb	0	; () banked
 13245  013E70  5188               	movf	??___fldiv& (0+255),w,b
 13246  013E72  0100               	movlb	0	; () banked
 13247  013E74  1189               	iorwf	(??___fldiv+1)& (0+255),w,b
 13248  013E76  0100               	movlb	0	; () banked
 13249  013E78  118A               	iorwf	(??___fldiv+2)& (0+255),w,b
 13250  013E7A  0100               	movlb	0	; () banked
 13251  013E7C  118B               	iorwf	(??___fldiv+3)& (0+255),w,b
 13252  013E7E  A4D8               	btfss	status,2,c
 13253  013E80  D003               	goto	l6645
 13254                           
 13255                           ; BSR set to: 0
 13256                           
 13257                           ; BSR set to: 0
 13258  013E82  0100               	movlb	0	; () banked
 13259  013E84  A180               	btfss	___fldiv@b& (0+255),0,b
 13260  013E86  D003               	goto	l1546
 13261  013E88                     l6645:
 13262                           
 13263                           ; BSR set to: 0
 13264  013E88  0E01               	movlw	1
 13265  013E8A  0100               	movlb	0	; () banked
 13266  013E8C  6F98               	movwf	___fldiv@aexp& (0+255),b
 13267  013E8E                     l1546:
 13268                           
 13269                           ; BSR set to: 0
 13270  013E8E  0100               	movlb	0	; () banked
 13271  013E90  5198               	movf	___fldiv@aexp& (0+255),w,b
 13272  013E92  0100               	movlb	0	; () banked
 13273  013E94  B4D8               	btfsc	status,2,c
 13274  013E96  D023               	goto	l6655
 13275                           
 13276                           ; BSR set to: 0
 13277  013E98  0E01               	movlw	1
 13278  013E9A  0100               	movlb	0	; () banked
 13279  013E9C  2780               	addwf	___fldiv@b& (0+255),f,b
 13280  013E9E  0E00               	movlw	0
 13281  013EA0  2381               	addwfc	(___fldiv@b+1)& (0+255),f,b
 13282  013EA2  2382               	addwfc	(___fldiv@b+2)& (0+255),f,b
 13283  013EA4  2383               	addwfc	(___fldiv@b+3)& (0+255),f,b
 13284                           
 13285                           ; BSR set to: 0
 13286  013EA6  0100               	movlb	0	; () banked
 13287  013EA8  A183               	btfss	(___fldiv@b+3)& (0+255),0,b
 13288  013EAA  D019               	goto	l6655
 13289                           
 13290                           ; BSR set to: 0
 13291  013EAC  C080  F088         	movff	___fldiv@b,??___fldiv
 13292  013EB0  C081  F089         	movff	___fldiv@b+1,??___fldiv+1
 13293  013EB4  C082  F08A         	movff	___fldiv@b+2,??___fldiv+2
 13294  013EB8  C083  F08B         	movff	___fldiv@b+3,??___fldiv+3
 13295  013EBC  0100               	movlb	0	; () banked
 13296  013EBE  358B               	rlcf	(??___fldiv+3)& (0+255),w,b
 13297  013EC0  338B               	rrcf	(??___fldiv+3)& (0+255),f,b
 13298  013EC2  338A               	rrcf	(??___fldiv+2)& (0+255),f,b
 13299  013EC4  3389               	rrcf	(??___fldiv+1)& (0+255),f,b
 13300  013EC6  3388               	rrcf	??___fldiv& (0+255),f,b
 13301  013EC8  C088  F080         	movff	??___fldiv,___fldiv@b
 13302  013ECC  C089  F081         	movff	??___fldiv+1,___fldiv@b+1
 13303  013ED0  C08A  F082         	movff	??___fldiv+2,___fldiv@b+2
 13304  013ED4  C08B  F083         	movff	??___fldiv+3,___fldiv@b+3
 13305                           
 13306                           ; BSR set to: 0
 13307  013ED8  0100               	movlb	0	; () banked
 13308  013EDA  4B91               	infsnz	___fldiv@new_exp& (0+255),f,b
 13309  013EDC  2B92               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13310  013EDE                     l6655:
 13311                           
 13312                           ; BSR set to: 0
 13313  013EDE  0100               	movlb	0	; () banked
 13314  013EE0  BF92               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13315  013EE2  D014               	goto	l6659
 13316  013EE4  0100               	movlb	0	; () banked
 13317  013EE6  5192               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13318  013EE8  E104               	bnz	u8380
 13319  013EEA  0100               	movlb	0	; () banked
 13320  013EEC  2991               	incf	___fldiv@new_exp& (0+255),w,b
 13321  013EEE  A0D8               	btfss	status,0,c
 13322  013EF0  D00D               	goto	l6659
 13323  013EF2                     u8380:
 13324                           
 13325                           ; BSR set to: 0
 13326  013EF2  0E00               	movlw	0
 13327  013EF4  0100               	movlb	0	; () banked
 13328  013EF6  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13329  013EF8  6991               	setf	___fldiv@new_exp& (0+255),b
 13330  013EFA  0E00               	movlw	0
 13331  013EFC  0100               	movlb	0	; () banked
 13332  013EFE  6F80               	movwf	___fldiv@b& (0+255),b
 13333  013F00  0E00               	movlw	0
 13334  013F02  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 13335  013F04  0E00               	movlw	0
 13336  013F06  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 13337  013F08  0E00               	movlw	0
 13338  013F0A  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 13339  013F0C                     l6659:
 13340                           
 13341                           ; BSR set to: 0
 13342  013F0C  0100               	movlb	0	; () banked
 13343  013F0E  BF92               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13344  013F10  D007               	goto	l6661
 13345  013F12  0100               	movlb	0	; () banked
 13346  013F14  5192               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13347  013F16  E115               	bnz	l6663
 13348  013F18  0100               	movlb	0	; () banked
 13349  013F1A  0591               	decf	___fldiv@new_exp& (0+255),w,b
 13350  013F1C  B0D8               	btfsc	status,0,c
 13351  013F1E  D011               	goto	l6663
 13352  013F20                     l6661:
 13353                           
 13354                           ; BSR set to: 0
 13355  013F20  0E00               	movlw	0
 13356  013F22  0100               	movlb	0	; () banked
 13357  013F24  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13358  013F26  0E00               	movlw	0
 13359  013F28  6F91               	movwf	___fldiv@new_exp& (0+255),b
 13360  013F2A  0E00               	movlw	0
 13361  013F2C  0100               	movlb	0	; () banked
 13362  013F2E  6F80               	movwf	___fldiv@b& (0+255),b
 13363  013F30  0E00               	movlw	0
 13364  013F32  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 13365  013F34  0E00               	movlw	0
 13366  013F36  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 13367  013F38  0E00               	movlw	0
 13368  013F3A  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 13369  013F3C  0E00               	movlw	0
 13370  013F3E  0100               	movlb	0	; () banked
 13371  013F40  6F8C               	movwf	___fldiv@sign& (0+255),b
 13372  013F42                     l6663:
 13373                           
 13374                           ; BSR set to: 0
 13375  013F42  C091  F097         	movff	___fldiv@new_exp,___fldiv@bexp
 13376                           
 13377                           ; BSR set to: 0
 13378  013F46  0100               	movlb	0	; () banked
 13379  013F48  A197               	btfss	___fldiv@bexp& (0+255),0,b
 13380  013F4A  D003               	goto	l6669
 13381                           
 13382                           ; BSR set to: 0
 13383  013F4C  0100               	movlb	0	; () banked
 13384  013F4E  8F82               	bsf	(___fldiv@b+2)& (0+255),7,b
 13385  013F50  D002               	goto	l6671
 13386  013F52                     l6669:
 13387                           
 13388                           ; BSR set to: 0
 13389  013F52  0100               	movlb	0	; () banked
 13390  013F54  9F82               	bcf	(___fldiv@b+2)& (0+255),7,b
 13391  013F56                     l6671:
 13392                           
 13393                           ; BSR set to: 0
 13394  013F56  0100               	movlb	0	; () banked
 13395  013F58  90D8               	bcf	status,0,c
 13396  013F5A  3197               	rrcf	___fldiv@bexp& (0+255),w,b
 13397  013F5C  0100               	movlb	0	; () banked
 13398  013F5E  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 13399                           
 13400                           ; BSR set to: 0
 13401  013F60  0100               	movlb	0	; () banked
 13402  013F62  518C               	movf	___fldiv@sign& (0+255),w,b
 13403  013F64  0100               	movlb	0	; () banked
 13404  013F66  1383               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13405                           
 13406                           ; BSR set to: 0
 13407  013F68  C080  F080         	movff	___fldiv@b,?___fldiv
 13408  013F6C  C081  F081         	movff	___fldiv@b+1,?___fldiv+1
 13409  013F70  C082  F082         	movff	___fldiv@b+2,?___fldiv+2
 13410  013F74  C083  F083         	movff	___fldiv@b+3,?___fldiv+3
 13411  013F78  0012               	return	
 13412  013F7A                     __end_of___fldiv:
 13413                           	opt stack 0
 13414                           tblptru	equ	0xFF8
 13415                           tblptrh	equ	0xFF7
 13416                           tblptrl	equ	0xFF6
 13417                           tablat	equ	0xFF5
 13418                           prodh	equ	0xFF4
 13419                           prodl	equ	0xFF3
 13420                           intcon	equ	0xFF2
 13421                           postinc0	equ	0xFEE
 13422                           wreg	equ	0xFE8
 13423                           indf2	equ	0xFDF
 13424                           postinc2	equ	0xFDE
 13425                           fsr2h	equ	0xFDA
 13426                           fsr2l	equ	0xFD9
 13427                           status	equ	0xFD8
 13428                           
 13429 ;; *************** function _LCD_write_message *****************
 13430 ;; Defined at:
 13431 ;;		line 178 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13432 ;; Parameters:    Size  Location     Type
 13433 ;;  buffer          2   35[BANK0 ] PTR const unsigned char 
 13434 ;;		 -> STR_17(8), STR_16(8), STR_15(8), STR_14(8), 
 13435 ;;		 -> STR_13(5), STR_12(5), STR_11(5), STR_10(7), 
 13436 ;;		 -> STR_9(14), STR_8(17), STR_7(12), STR_6(21), 
 13437 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
 13438 ;; Auto vars:     Size  Location     Type
 13439 ;;		None
 13440 ;; Return value:  Size  Location     Type
 13441 ;;		None               void
 13442 ;; Registers used:
 13443 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13444 ;; Tracked objects:
 13445 ;;		On entry : 0/0
 13446 ;;		On exit  : 0/0
 13447 ;;		Unchanged: 0/0
 13448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13449 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13452 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13453 ;;Total ram usage:        2 bytes
 13454 ;; Hardware stack levels used:    1
 13455 ;; Hardware stack levels required when called:    8
 13456 ;; This function calls:
 13457 ;;		_LCD_write_char
 13458 ;; This function is called by:
 13459 ;;		_main
 13460 ;;		_LCD_Handler
 13461 ;; This function uses a non-reentrant model
 13462 ;;
 13463                           
 13464                           	psect	text26
 13465  015FE6                     __ptext26:
 13466                           	opt stack 0
 13467  015FE6                     _LCD_write_message:
 13468                           	opt stack 22
 13469                           
 13470                           ;src\LCD_44780.c: 181: while(*buffer) {
 13471                           
 13472                           ; BSR set to: 0
 13473                           ;incstack = 0
 13474  015FE6  D00D               	goto	l8399
 13475  015FE8                     l8395:
 13476                           
 13477                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 13478  015FE8  C083  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13479  015FEC  C084  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13480  015FF0                     	if	0	;tblptru may be non-zero
 13481  015FF0                     	endif
 13482  015FF0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13483  015FF0  0E00               	movlw	low (__mediumconst shr (0+16))
 13484  015FF2  6EF8               	movwf	tblptru,c
 13485  015FF4                     	endif
 13486  015FF4  0008               	tblrd		*
 13487  015FF6  50F5               	movf	tablat,w,c
 13488  015FF8  EC10  F0AE         	call	_LCD_write_char
 13489                           
 13490                           ;src\LCD_44780.c: 186: buffer++;
 13491  015FFC  0100               	movlb	0	; () banked
 13492  015FFE  4B83               	infsnz	LCD_write_message@buffer& (0+255),f,b
 13493  016000  2B84               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 13494  016002                     l8399:
 13495  016002  C083  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13496  016006  C084  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13497  01600A                     	if	0	;tblptru may be non-zero
 13498  01600A                     	endif
 13499  01600A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13500  01600A  0E00               	movlw	low (__mediumconst shr (0+16))
 13501  01600C  6EF8               	movwf	tblptru,c
 13502  01600E                     	endif
 13503  01600E  0008               	tblrd		*
 13504  016010  50F5               	movf	tablat,w,c
 13505  016012  0900               	iorlw	0
 13506  016014  B4D8               	btfsc	status,2,c
 13507  016016  0012               	return	
 13508  016018  D7E7               	goto	l8395
 13509  01601A                     __end_of_LCD_write_message:
 13510                           	opt stack 0
 13511                           tblptru	equ	0xFF8
 13512                           tblptrh	equ	0xFF7
 13513                           tblptrl	equ	0xFF6
 13514                           tablat	equ	0xFF5
 13515                           prodh	equ	0xFF4
 13516                           prodl	equ	0xFF3
 13517                           intcon	equ	0xFF2
 13518                           postinc0	equ	0xFEE
 13519                           wreg	equ	0xFE8
 13520                           indf2	equ	0xFDF
 13521                           postinc2	equ	0xFDE
 13522                           fsr2h	equ	0xFDA
 13523                           fsr2l	equ	0xFD9
 13524                           status	equ	0xFD8
 13525                           
 13526 ;; *************** function _LCD_write_integer *****************
 13527 ;; Defined at:
 13528 ;;		line 210 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13529 ;; Parameters:    Size  Location     Type
 13530 ;;  value           2   42[BANK0 ] int 
 13531 ;;  number_of_di    1   44[BANK0 ] unsigned char 
 13532 ;;  zero_cleanin    1   45[BANK0 ] unsigned char 
 13533 ;; Auto vars:     Size  Location     Type
 13534 ;;  convertedInt    6   51[BANK0 ] unsigned char [6]
 13535 ;;  index           1   57[BANK0 ] unsigned char 
 13536 ;; Return value:  Size  Location     Type
 13537 ;;		None               void
 13538 ;; Registers used:
 13539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13540 ;; Tracked objects:
 13541 ;;		On entry : 0/0
 13542 ;;		On exit  : 0/0
 13543 ;;		Unchanged: 0/0
 13544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13545 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13546 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13547 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13548 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13549 ;;Total ram usage:       16 bytes
 13550 ;; Hardware stack levels used:    1
 13551 ;; Hardware stack levels required when called:    9
 13552 ;; This function calls:
 13553 ;;		_LCD_write_string
 13554 ;;		_itoa
 13555 ;; This function is called by:
 13556 ;;		_LCD_Handler
 13557 ;; This function uses a non-reentrant model
 13558 ;;
 13559                           
 13560                           	psect	text27
 13561  0149A2                     __ptext27:
 13562                           	opt stack 0
 13563  0149A2                     _LCD_write_integer:
 13564                           	opt stack 20
 13565                           
 13566                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 13567                           
 13568                           ;incstack = 0
 13569  0149A2  EE20  F008         	lfsr	2,LCD_write_integer@F17272
 13570  0149A6  EE10  F093         	lfsr	1,LCD_write_integer@convertedInt
 13571  0149AA  0E05               	movlw	5
 13572  0149AC                     u11181:
 13573  0149AC  CFDB FFE3          	movff	plusw2,plusw1
 13574  0149B0  06E8               	decf	wreg,f,c
 13575  0149B2  E2FC               	bc	u11181
 13576                           
 13577                           ;src\LCD_44780.c: 216: unsigned char index;
 13578                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 13579  0149B4  0E93               	movlw	low LCD_write_integer@convertedInt
 13580  0149B6  0100               	movlb	0	; () banked
 13581  0149B8  6F82               	movwf	itoa@buf& (0+255),b
 13582  0149BA  0E00               	movlw	high LCD_write_integer@convertedInt
 13583  0149BC  0100               	movlb	0	; () banked
 13584  0149BE  6F83               	movwf	(itoa@buf+1)& (0+255),b
 13585  0149C0  C08A  F084         	movff	LCD_write_integer@value,itoa@val
 13586  0149C4  C08B  F085         	movff	LCD_write_integer@value+1,itoa@val+1
 13587  0149C8  0E00               	movlw	0
 13588  0149CA  0100               	movlb	0	; () banked
 13589  0149CC  6F87               	movwf	(itoa@base+1)& (0+255),b
 13590  0149CE  0E0A               	movlw	10
 13591  0149D0  6F86               	movwf	itoa@base& (0+255),b
 13592  0149D2  EC3C  F0AF         	call	_itoa	;wreg free
 13593                           
 13594                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 13595  0149D6  0100               	movlb	0	; () banked
 13596  0149D8  518C               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13597  0149DA  0100               	movlb	0	; () banked
 13598  0149DC  B4D8               	btfsc	status,2,c
 13599  0149DE  D0B8               	goto	l8431
 13600                           
 13601                           ; BSR set to: 0
 13602                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 13603  0149E0  0100               	movlb	0	; () banked
 13604  0149E2  518C               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13605  0149E4  0D01               	mullw	1
 13606  0149E6  0E93               	movlw	low LCD_write_integer@convertedInt
 13607  0149E8  24F3               	addwf	prodl,w,c
 13608  0149EA  6ED9               	movwf	fsr2l,c
 13609  0149EC  0E00               	movlw	high LCD_write_integer@convertedInt
 13610  0149EE  20F4               	addwfc	prodh,w,c
 13611  0149F0  6EDA               	movwf	fsr2h,c
 13612  0149F2  0E00               	movlw	0
 13613  0149F4  6EDF               	movwf	indf2,c
 13614                           
 13615                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 13616  0149F6  D070               	goto	l8427
 13617  0149F8                     l8409:
 13618                           
 13619                           ; BSR set to: 0
 13620                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 13621  0149F8  0100               	movlb	0	; () banked
 13622  0149FA  058C               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 13623  0149FC  0100               	movlb	0	; () banked
 13624  0149FE  6F99               	movwf	LCD_write_integer@index& (0+255),b
 13625  014A00                     l8411:
 13626                           
 13627                           ; BSR set to: 0
 13628  014A00  0100               	movlb	0	; () banked
 13629  014A02  5199               	movf	LCD_write_integer@index& (0+255),w,b
 13630  014A04  0100               	movlb	0	; () banked
 13631  014A06  B4D8               	btfsc	status,2,c
 13632  014A08  D067               	goto	l8427
 13633                           
 13634                           ; BSR set to: 0
 13635                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 13636                           
 13637                           ; BSR set to: 0
 13638                           
 13639                           ; BSR set to: 0
 13640  014A0A  0EFF               	movlw	255
 13641  014A0C  0100               	movlb	0	; () banked
 13642  014A0E  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 13643  014A10  0EFF               	movlw	255
 13644  014A12  0100               	movlb	0	; () banked
 13645  014A14  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13646  014A16  0100               	movlb	0	; () banked
 13647  014A18  5199               	movf	LCD_write_integer@index& (0+255),w,b
 13648  014A1A  0100               	movlb	0	; () banked
 13649  014A1C  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13650  014A1E  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13651  014A20  0100               	movlb	0	; () banked
 13652  014A22  518E               	movf	??_LCD_write_integer& (0+255),w,b
 13653  014A24  0100               	movlb	0	; () banked
 13654  014A26  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13655  014A28  0100               	movlb	0	; () banked
 13656  014A2A  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13657  014A2C  0100               	movlb	0	; () banked
 13658  014A2E  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13659  014A30  0E93               	movlw	low LCD_write_integer@convertedInt
 13660  014A32  0100               	movlb	0	; () banked
 13661  014A34  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13662  014A36  6ED9               	movwf	fsr2l,c
 13663  014A38  0E00               	movlw	high LCD_write_integer@convertedInt
 13664  014A3A  0100               	movlb	0	; () banked
 13665  014A3C  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13666  014A3E  6EDA               	movwf	fsr2h,c
 13667  014A40  0100               	movlb	0	; () banked
 13668  014A42  5199               	movf	LCD_write_integer@index& (0+255),w,b
 13669  014A44  0D01               	mullw	1
 13670  014A46  0E93               	movlw	low LCD_write_integer@convertedInt
 13671  014A48  24F3               	addwf	prodl,w,c
 13672  014A4A  6EE1               	movwf	fsr1l,c
 13673  014A4C  0E00               	movlw	high LCD_write_integer@convertedInt
 13674  014A4E  20F4               	addwfc	prodh,w,c
 13675  014A50  6EE2               	movwf	fsr1h,c
 13676  014A52  CFDF FFE7          	movff	indf2,indf1
 13677                           
 13678                           ; BSR set to: 0
 13679                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 13680  014A56  0100               	movlb	0	; () banked
 13681  014A58  058D               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 13682  014A5A  A4D8               	btfss	status,2,c
 13683  014A5C  D01D               	goto	l8421
 13684                           
 13685                           ; BSR set to: 0
 13686                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 13687  014A5E  0EFF               	movlw	255
 13688  014A60  0100               	movlb	0	; () banked
 13689  014A62  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 13690  014A64  0EFF               	movlw	255
 13691  014A66  0100               	movlb	0	; () banked
 13692  014A68  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13693  014A6A  0100               	movlb	0	; () banked
 13694  014A6C  5199               	movf	LCD_write_integer@index& (0+255),w,b
 13695  014A6E  0100               	movlb	0	; () banked
 13696  014A70  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13697  014A72  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13698  014A74  0100               	movlb	0	; () banked
 13699  014A76  518E               	movf	??_LCD_write_integer& (0+255),w,b
 13700  014A78  0100               	movlb	0	; () banked
 13701  014A7A  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13702  014A7C  0100               	movlb	0	; () banked
 13703  014A7E  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13704  014A80  0100               	movlb	0	; () banked
 13705  014A82  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13706  014A84  0E93               	movlw	low LCD_write_integer@convertedInt
 13707  014A86  0100               	movlb	0	; () banked
 13708  014A88  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13709  014A8A  6ED9               	movwf	fsr2l,c
 13710  014A8C  0E00               	movlw	high LCD_write_integer@convertedInt
 13711  014A8E  0100               	movlb	0	; () banked
 13712  014A90  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13713  014A92  6EDA               	movwf	fsr2h,c
 13714  014A94  0E20               	movlw	32
 13715  014A96  D01C               	goto	L14
 13716  014A98                     l8421:
 13717                           
 13718                           ; BSR set to: 0
 13719                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 13720  014A98  0EFF               	movlw	255
 13721  014A9A  0100               	movlb	0	; () banked
 13722  014A9C  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 13723  014A9E  0EFF               	movlw	255
 13724  014AA0  0100               	movlb	0	; () banked
 13725  014AA2  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13726  014AA4  0100               	movlb	0	; () banked
 13727  014AA6  5199               	movf	LCD_write_integer@index& (0+255),w,b
 13728  014AA8  0100               	movlb	0	; () banked
 13729  014AAA  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13730  014AAC  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13731  014AAE  0100               	movlb	0	; () banked
 13732  014AB0  518E               	movf	??_LCD_write_integer& (0+255),w,b
 13733  014AB2  0100               	movlb	0	; () banked
 13734  014AB4  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13735  014AB6  0100               	movlb	0	; () banked
 13736  014AB8  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13737  014ABA  0100               	movlb	0	; () banked
 13738  014ABC  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13739  014ABE  0E93               	movlw	low LCD_write_integer@convertedInt
 13740  014AC0  0100               	movlb	0	; () banked
 13741  014AC2  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13742  014AC4  6ED9               	movwf	fsr2l,c
 13743  014AC6  0E00               	movlw	high LCD_write_integer@convertedInt
 13744  014AC8  0100               	movlb	0	; () banked
 13745  014ACA  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13746  014ACC  6EDA               	movwf	fsr2h,c
 13747  014ACE  0E30               	movlw	48
 13748  014AD0                     L14:
 13749  014AD0  6EDF               	movwf	indf2,c
 13750                           
 13751                           ; BSR set to: 0
 13752                           
 13753                           ; BSR set to: 0
 13754  014AD2  0100               	movlb	0	; () banked
 13755  014AD4  0799               	decf	LCD_write_integer@index& (0+255),f,b
 13756  014AD6  D794               	goto	l8411
 13757  014AD8                     l8427:
 13758                           
 13759                           ; BSR set to: 0
 13760  014AD8  0EFF               	movlw	255
 13761  014ADA  0100               	movlb	0	; () banked
 13762  014ADC  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 13763  014ADE  0EFF               	movlw	255
 13764  014AE0  0100               	movlb	0	; () banked
 13765  014AE2  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13766  014AE4  0100               	movlb	0	; () banked
 13767  014AE6  518C               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13768  014AE8  0100               	movlb	0	; () banked
 13769  014AEA  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13770  014AEC  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13771  014AEE  0100               	movlb	0	; () banked
 13772  014AF0  518E               	movf	??_LCD_write_integer& (0+255),w,b
 13773  014AF2  0100               	movlb	0	; () banked
 13774  014AF4  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13775  014AF6  0100               	movlb	0	; () banked
 13776  014AF8  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13777  014AFA  0100               	movlb	0	; () banked
 13778  014AFC  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13779  014AFE  0E93               	movlw	low LCD_write_integer@convertedInt
 13780  014B00  0100               	movlb	0	; () banked
 13781  014B02  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13782  014B04  6ED9               	movwf	fsr2l,c
 13783  014B06  0E00               	movlw	high LCD_write_integer@convertedInt
 13784  014B08  0100               	movlb	0	; () banked
 13785  014B0A  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13786  014B0C  6EDA               	movwf	fsr2h,c
 13787  014B0E  0E3A               	movlw	58
 13788  014B10  60DF               	cpfslt	indf2,c
 13789  014B12  D772               	goto	l8409
 13790                           
 13791                           ; BSR set to: 0
 13792  014B14  0EFF               	movlw	255
 13793  014B16  0100               	movlb	0	; () banked
 13794  014B18  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 13795  014B1A  0EFF               	movlw	255
 13796  014B1C  0100               	movlb	0	; () banked
 13797  014B1E  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13798  014B20  0100               	movlb	0	; () banked
 13799  014B22  518C               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13800  014B24  0100               	movlb	0	; () banked
 13801  014B26  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13802  014B28  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13803  014B2A  0100               	movlb	0	; () banked
 13804  014B2C  518E               	movf	??_LCD_write_integer& (0+255),w,b
 13805  014B2E  0100               	movlb	0	; () banked
 13806  014B30  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13807  014B32  0100               	movlb	0	; () banked
 13808  014B34  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13809  014B36  0100               	movlb	0	; () banked
 13810  014B38  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13811  014B3A  0E93               	movlw	low LCD_write_integer@convertedInt
 13812  014B3C  0100               	movlb	0	; () banked
 13813  014B3E  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13814  014B40  6ED9               	movwf	fsr2l,c
 13815  014B42  0E00               	movlw	high LCD_write_integer@convertedInt
 13816  014B44  0100               	movlb	0	; () banked
 13817  014B46  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13818  014B48  6EDA               	movwf	fsr2h,c
 13819  014B4A  0E2F               	movlw	47
 13820  014B4C  64DF               	cpfsgt	indf2,c
 13821  014B4E  D754               	goto	l8409
 13822  014B50                     l8431:
 13823                           
 13824                           ; BSR set to: 0
 13825                           ;src\LCD_44780.c: 243: }
 13826                           ;src\LCD_44780.c: 245: }
 13827                           ;src\LCD_44780.c: 246: }
 13828                           ;src\LCD_44780.c: 247: }
 13829                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 13830  014B50  0E93               	movlw	low LCD_write_integer@convertedInt
 13831  014B52  0100               	movlb	0	; () banked
 13832  014B54  6F83               	movwf	LCD_write_string@buffer& (0+255),b
 13833  014B56  0E00               	movlw	high LCD_write_integer@convertedInt
 13834  014B58  0100               	movlb	0	; () banked
 13835  014B5A  6F84               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 13836  014B5C  EC54  F0B0         	call	_LCD_write_string	;wreg free
 13837  014B60  0012               	return		;funcret
 13838  014B62                     __end_of_LCD_write_integer:
 13839                           	opt stack 0
 13840                           tblptru	equ	0xFF8
 13841                           tblptrh	equ	0xFF7
 13842                           tblptrl	equ	0xFF6
 13843                           tablat	equ	0xFF5
 13844                           prodh	equ	0xFF4
 13845                           prodl	equ	0xFF3
 13846                           intcon	equ	0xFF2
 13847                           postinc0	equ	0xFEE
 13848                           wreg	equ	0xFE8
 13849                           indf1	equ	0xFE7
 13850                           plusw1	equ	0xFE3
 13851                           fsr1h	equ	0xFE2
 13852                           fsr1l	equ	0xFE1
 13853                           indf2	equ	0xFDF
 13854                           postinc2	equ	0xFDE
 13855                           plusw2	equ	0xFDB
 13856                           fsr2h	equ	0xFDA
 13857                           fsr2l	equ	0xFD9
 13858                           status	equ	0xFD8
 13859                           
 13860 ;; *************** function _itoa *****************
 13861 ;; Defined at:
 13862 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 13863 ;; Parameters:    Size  Location     Type
 13864 ;;  buf             2   34[BANK0 ] PTR unsigned char 
 13865 ;;		 -> LCD_write_integer@convertedInt(6), 
 13866 ;;  val             2   36[BANK0 ] int 
 13867 ;;  base            2   38[BANK0 ] int 
 13868 ;; Auto vars:     Size  Location     Type
 13869 ;;  cp              2   40[BANK0 ] PTR unsigned char 
 13870 ;;		 -> LCD_write_integer@convertedInt(6), 
 13871 ;; Return value:  Size  Location     Type
 13872 ;;                  2   34[BANK0 ] PTR unsigned char 
 13873 ;; Registers used:
 13874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13875 ;; Tracked objects:
 13876 ;;		On entry : 0/0
 13877 ;;		On exit  : 0/0
 13878 ;;		Unchanged: 0/0
 13879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13880 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13881 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13883 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13884 ;;Total ram usage:        8 bytes
 13885 ;; Hardware stack levels used:    1
 13886 ;; Hardware stack levels required when called:    5
 13887 ;; This function calls:
 13888 ;;		_utoa
 13889 ;; This function is called by:
 13890 ;;		_LCD_write_integer
 13891 ;; This function uses a non-reentrant model
 13892 ;;
 13893                           
 13894                           	psect	text28
 13895  015E78                     __ptext28:
 13896                           	opt stack 0
 13897  015E78                     _itoa:
 13898                           	opt stack 23
 13899                           
 13900                           ;incstack = 0
 13901  015E78  C082  F088         	movff	itoa@buf,itoa@cp
 13902  015E7C  C083  F089         	movff	itoa@buf+1,itoa@cp+1
 13903  015E80  0100               	movlb	0	; () banked
 13904  015E82  AF85               	btfss	(itoa@val+1)& (0+255),7,b
 13905  015E84  D00E               	goto	l5603
 13906                           
 13907                           ; BSR set to: 0
 13908  015E86  C082  FFD9         	movff	itoa@buf,fsr2l
 13909  015E8A  C083  FFDA         	movff	itoa@buf+1,fsr2h
 13910  015E8E  0E2D               	movlw	45
 13911  015E90  6EDF               	movwf	indf2,c
 13912                           
 13913                           ; BSR set to: 0
 13914  015E92  0100               	movlb	0	; () banked
 13915  015E94  4B82               	infsnz	itoa@buf& (0+255),f,b
 13916  015E96  2B83               	incf	(itoa@buf+1)& (0+255),f,b
 13917                           
 13918                           ; BSR set to: 0
 13919  015E98  0100               	movlb	0	; () banked
 13920  015E9A  6D84               	negf	itoa@val& (0+255),b
 13921  015E9C  1F85               	comf	(itoa@val+1)& (0+255),f,b
 13922  015E9E  B0D8               	btfsc	status,0,c
 13923  015EA0  2B85               	incf	(itoa@val+1)& (0+255),f,b
 13924  015EA2                     l5603:
 13925                           
 13926                           ; BSR set to: 0
 13927  015EA2  C082  F079         	movff	itoa@buf,utoa@buf
 13928  015EA6  C083  F07A         	movff	itoa@buf+1,utoa@buf+1
 13929  015EAA  C084  F07B         	movff	itoa@val,utoa@val
 13930  015EAE  C085  F07C         	movff	itoa@val+1,utoa@val+1
 13931  015EB2  C086  F07D         	movff	itoa@base,utoa@base
 13932  015EB6  C087  F07E         	movff	itoa@base+1,utoa@base+1
 13933  015EBA  ECB1  F0AB         	call	_utoa	;wreg free
 13934  015EBE  0012               	return	
 13935  015EC0                     __end_of_itoa:
 13936                           	opt stack 0
 13937                           tblptru	equ	0xFF8
 13938                           tblptrh	equ	0xFF7
 13939                           tblptrl	equ	0xFF6
 13940                           tablat	equ	0xFF5
 13941                           prodh	equ	0xFF4
 13942                           prodl	equ	0xFF3
 13943                           intcon	equ	0xFF2
 13944                           postinc0	equ	0xFEE
 13945                           wreg	equ	0xFE8
 13946                           indf1	equ	0xFE7
 13947                           plusw1	equ	0xFE3
 13948                           fsr1h	equ	0xFE2
 13949                           fsr1l	equ	0xFE1
 13950                           indf2	equ	0xFDF
 13951                           postinc2	equ	0xFDE
 13952                           plusw2	equ	0xFDB
 13953                           fsr2h	equ	0xFDA
 13954                           fsr2l	equ	0xFD9
 13955                           status	equ	0xFD8
 13956                           
 13957 ;; *************** function _utoa *****************
 13958 ;; Defined at:
 13959 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 13960 ;; Parameters:    Size  Location     Type
 13961 ;;  buf             2   25[BANK0 ] PTR unsigned char 
 13962 ;;		 -> LCD_write_integer@convertedInt(6), 
 13963 ;;  val             2   27[BANK0 ] unsigned int 
 13964 ;;  base            2   29[BANK0 ] int 
 13965 ;; Auto vars:     Size  Location     Type
 13966 ;;  v               2   31[BANK0 ] unsigned int 
 13967 ;;  c               1   33[BANK0 ] unsigned char 
 13968 ;; Return value:  Size  Location     Type
 13969 ;;                  2   25[BANK0 ] PTR unsigned char 
 13970 ;; Registers used:
 13971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13972 ;; Tracked objects:
 13973 ;;		On entry : 0/0
 13974 ;;		On exit  : 0/0
 13975 ;;		Unchanged: 0/0
 13976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13977 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13978 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13980 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13981 ;;Total ram usage:        9 bytes
 13982 ;; Hardware stack levels used:    1
 13983 ;; Hardware stack levels required when called:    4
 13984 ;; This function calls:
 13985 ;;		___lwdiv
 13986 ;;		___lwmod
 13987 ;; This function is called by:
 13988 ;;		_itoa
 13989 ;; This function uses a non-reentrant model
 13990 ;;
 13991                           
 13992                           	psect	text29
 13993  015762                     __ptext29:
 13994                           	opt stack 0
 13995  015762                     _utoa:
 13996                           	opt stack 23
 13997                           
 13998                           ;incstack = 0
 13999  015762  C07B  F07F         	movff	utoa@val,utoa@v
 14000  015766  C07C  F080         	movff	utoa@val+1,utoa@v+1
 14001  01576A                     l5125:
 14002  01576A  C07F  F072         	movff	utoa@v,___lwdiv@dividend
 14003  01576E  C080  F073         	movff	utoa@v+1,___lwdiv@dividend+1
 14004  015772  C07D  F074         	movff	utoa@base,___lwdiv@divisor
 14005  015776  C07E  F075         	movff	utoa@base+1,___lwdiv@divisor+1
 14006  01577A  EC5B  F0AE         	call	___lwdiv	;wreg free
 14007  01577E  C072  F07F         	movff	?___lwdiv,utoa@v
 14008  015782  C073  F080         	movff	?___lwdiv+1,utoa@v+1
 14009  015786  0100               	movlb	0	; () banked
 14010  015788  4B79               	infsnz	utoa@buf& (0+255),f,b
 14011  01578A  2B7A               	incf	(utoa@buf+1)& (0+255),f,b
 14012                           
 14013                           ; BSR set to: 0
 14014  01578C  0100               	movlb	0	; () banked
 14015  01578E  517F               	movf	utoa@v& (0+255),w,b
 14016  015790  0100               	movlb	0	; () banked
 14017  015792  1180               	iorwf	(utoa@v+1)& (0+255),w,b
 14018  015794  A4D8               	btfss	status,2,c
 14019  015796  D7E9               	goto	l5125
 14020                           
 14021                           ; BSR set to: 0
 14022                           
 14023                           ; BSR set to: 0
 14024  015798  C079  FFD9         	movff	utoa@buf,fsr2l
 14025  01579C  C07A  FFDA         	movff	utoa@buf+1,fsr2h
 14026  0157A0  0E00               	movlw	0
 14027  0157A2  6EDF               	movwf	indf2,c
 14028                           
 14029                           ; BSR set to: 0
 14030  0157A4  0100               	movlb	0	; () banked
 14031  0157A6  0779               	decf	utoa@buf& (0+255),f,b
 14032  0157A8  A0D8               	btfss	status,0,c
 14033  0157AA  077A               	decf	(utoa@buf+1)& (0+255),f,b
 14034  0157AC                     l5135:
 14035                           
 14036                           ; BSR set to: 0
 14037  0157AC  C07B  F072         	movff	utoa@val,___lwmod@dividend
 14038  0157B0  C07C  F073         	movff	utoa@val+1,___lwmod@dividend+1
 14039  0157B4  C07D  F074         	movff	utoa@base,___lwmod@divisor
 14040  0157B8  C07E  F075         	movff	utoa@base+1,___lwmod@divisor+1
 14041  0157BC  EC97  F0AE         	call	___lwmod	;wreg free
 14042  0157C0  0100               	movlb	0	; () banked
 14043  0157C2  5172               	movf	?___lwmod& (0+255),w,b
 14044  0157C4  0100               	movlb	0	; () banked
 14045  0157C6  6F81               	movwf	utoa@c& (0+255),b
 14046                           
 14047                           ; BSR set to: 0
 14048  0157C8  C07B  F072         	movff	utoa@val,___lwdiv@dividend
 14049  0157CC  C07C  F073         	movff	utoa@val+1,___lwdiv@dividend+1
 14050  0157D0  C07D  F074         	movff	utoa@base,___lwdiv@divisor
 14051  0157D4  C07E  F075         	movff	utoa@base+1,___lwdiv@divisor+1
 14052  0157D8  EC5B  F0AE         	call	___lwdiv	;wreg free
 14053  0157DC  C072  F07B         	movff	?___lwdiv,utoa@val
 14054  0157E0  C073  F07C         	movff	?___lwdiv+1,utoa@val+1
 14055  0157E4  0E09               	movlw	9
 14056  0157E6  0100               	movlb	0	; () banked
 14057  0157E8  6581               	cpfsgt	utoa@c& (0+255),b
 14058  0157EA  D003               	goto	l1359
 14059                           
 14060                           ; BSR set to: 0
 14061  0157EC  0E07               	movlw	7
 14062  0157EE  0100               	movlb	0	; () banked
 14063  0157F0  2781               	addwf	utoa@c& (0+255),f,b
 14064  0157F2                     l1359:
 14065                           
 14066                           ; BSR set to: 0
 14067  0157F2  0E30               	movlw	48
 14068  0157F4  0100               	movlb	0	; () banked
 14069  0157F6  2781               	addwf	utoa@c& (0+255),f,b
 14070                           
 14071                           ; BSR set to: 0
 14072  0157F8  C079  FFD9         	movff	utoa@buf,fsr2l
 14073  0157FC  C07A  FFDA         	movff	utoa@buf+1,fsr2h
 14074  015800  C081  FFDF         	movff	utoa@c,indf2
 14075                           
 14076                           ; BSR set to: 0
 14077  015804  0100               	movlb	0	; () banked
 14078  015806  0779               	decf	utoa@buf& (0+255),f,b
 14079  015808  A0D8               	btfss	status,0,c
 14080  01580A  077A               	decf	(utoa@buf+1)& (0+255),f,b
 14081                           
 14082                           ; BSR set to: 0
 14083  01580C  0100               	movlb	0	; () banked
 14084  01580E  517B               	movf	utoa@val& (0+255),w,b
 14085  015810  0100               	movlb	0	; () banked
 14086  015812  117C               	iorwf	(utoa@val+1)& (0+255),w,b
 14087  015814  A4D8               	btfss	status,2,c
 14088  015816  D7CA               	goto	l5135
 14089                           
 14090                           ; BSR set to: 0
 14091                           ;	Return value of _utoa is never used
 14092                           
 14093                           ; BSR set to: 0
 14094  015818  0100               	movlb	0	; () banked
 14095  01581A  4B79               	infsnz	utoa@buf& (0+255),f,b
 14096  01581C  2B7A               	incf	(utoa@buf+1)& (0+255),f,b
 14097  01581E  0012               	return	
 14098  015820                     __end_of_utoa:
 14099                           	opt stack 0
 14100                           tblptru	equ	0xFF8
 14101                           tblptrh	equ	0xFF7
 14102                           tblptrl	equ	0xFF6
 14103                           tablat	equ	0xFF5
 14104                           prodh	equ	0xFF4
 14105                           prodl	equ	0xFF3
 14106                           intcon	equ	0xFF2
 14107                           postinc0	equ	0xFEE
 14108                           wreg	equ	0xFE8
 14109                           indf1	equ	0xFE7
 14110                           plusw1	equ	0xFE3
 14111                           fsr1h	equ	0xFE2
 14112                           fsr1l	equ	0xFE1
 14113                           indf2	equ	0xFDF
 14114                           postinc2	equ	0xFDE
 14115                           plusw2	equ	0xFDB
 14116                           fsr2h	equ	0xFDA
 14117                           fsr2l	equ	0xFD9
 14118                           status	equ	0xFD8
 14119                           
 14120 ;; *************** function ___lwmod *****************
 14121 ;; Defined at:
 14122 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14123 ;; Parameters:    Size  Location     Type
 14124 ;;  dividend        2   18[BANK0 ] unsigned int 
 14125 ;;  divisor         2   20[BANK0 ] unsigned int 
 14126 ;; Auto vars:     Size  Location     Type
 14127 ;;  counter         1   22[BANK0 ] unsigned char 
 14128 ;; Return value:  Size  Location     Type
 14129 ;;                  2   18[BANK0 ] unsigned int 
 14130 ;; Registers used:
 14131 ;;		wreg, status,2, status,0
 14132 ;; Tracked objects:
 14133 ;;		On entry : 0/0
 14134 ;;		On exit  : 0/0
 14135 ;;		Unchanged: 0/0
 14136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14137 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14140 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14141 ;;Total ram usage:        5 bytes
 14142 ;; Hardware stack levels used:    1
 14143 ;; Hardware stack levels required when called:    3
 14144 ;; This function calls:
 14145 ;;		Nothing
 14146 ;; This function is called by:
 14147 ;;		_utoa
 14148 ;; This function uses a non-reentrant model
 14149 ;;
 14150                           
 14151                           	psect	text30
 14152  015D2E                     __ptext30:
 14153                           	opt stack 0
 14154  015D2E                     ___lwmod:
 14155                           	opt stack 23
 14156                           
 14157                           ; BSR set to: 0
 14158                           ;incstack = 0
 14159  015D2E  0100               	movlb	0	; () banked
 14160  015D30  5174               	movf	___lwmod@divisor& (0+255),w,b
 14161  015D32  0100               	movlb	0	; () banked
 14162  015D34  1175               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14163  015D36  B4D8               	btfsc	status,2,c
 14164  015D38  D026               	goto	l1448
 14165                           
 14166                           ; BSR set to: 0
 14167  015D3A  0E01               	movlw	1
 14168  015D3C  0100               	movlb	0	; () banked
 14169  015D3E  6F76               	movwf	___lwmod@counter& (0+255),b
 14170  015D40  D006               	goto	l4683
 14171  015D42                     l4681:
 14172                           
 14173                           ; BSR set to: 0
 14174  015D42  0100               	movlb	0	; () banked
 14175  015D44  90D8               	bcf	status,0,c
 14176  015D46  3774               	rlcf	___lwmod@divisor& (0+255),f,b
 14177  015D48  3775               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14178  015D4A  0100               	movlb	0	; () banked
 14179  015D4C  2B76               	incf	___lwmod@counter& (0+255),f,b
 14180  015D4E                     l4683:
 14181                           
 14182                           ; BSR set to: 0
 14183  015D4E  0100               	movlb	0	; () banked
 14184  015D50  AF75               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14185  015D52  D7F7               	goto	l4681
 14186  015D54                     l4685:
 14187                           
 14188                           ; BSR set to: 0
 14189  015D54  0100               	movlb	0	; () banked
 14190  015D56  5174               	movf	___lwmod@divisor& (0+255),w,b
 14191  015D58  0100               	movlb	0	; () banked
 14192  015D5A  5D72               	subwf	___lwmod@dividend& (0+255),w,b
 14193  015D5C  0100               	movlb	0	; () banked
 14194  015D5E  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14195  015D60  0100               	movlb	0	; () banked
 14196  015D62  5973               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14197  015D64  A0D8               	btfss	status,0,c
 14198  015D66  D008               	goto	l4689
 14199                           
 14200                           ; BSR set to: 0
 14201  015D68  0100               	movlb	0	; () banked
 14202  015D6A  5174               	movf	___lwmod@divisor& (0+255),w,b
 14203  015D6C  0100               	movlb	0	; () banked
 14204  015D6E  5F72               	subwf	___lwmod@dividend& (0+255),f,b
 14205  015D70  0100               	movlb	0	; () banked
 14206  015D72  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14207  015D74  0100               	movlb	0	; () banked
 14208  015D76  5B73               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14209  015D78                     l4689:
 14210                           
 14211                           ; BSR set to: 0
 14212  015D78  0100               	movlb	0	; () banked
 14213  015D7A  90D8               	bcf	status,0,c
 14214  015D7C  3375               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14215  015D7E  3374               	rrcf	___lwmod@divisor& (0+255),f,b
 14216                           
 14217                           ; BSR set to: 0
 14218  015D80  0100               	movlb	0	; () banked
 14219  015D82  2F76               	decfsz	___lwmod@counter& (0+255),f,b
 14220  015D84  D7E7               	goto	l4685
 14221  015D86                     l1448:
 14222                           
 14223                           ; BSR set to: 0
 14224  015D86  C072  F072         	movff	___lwmod@dividend,?___lwmod
 14225  015D8A  C073  F073         	movff	___lwmod@dividend+1,?___lwmod+1
 14226                           
 14227                           ; BSR set to: 0
 14228  015D8E  0012               	return		;funcret
 14229  015D90                     __end_of___lwmod:
 14230                           	opt stack 0
 14231                           tblptru	equ	0xFF8
 14232                           tblptrh	equ	0xFF7
 14233                           tblptrl	equ	0xFF6
 14234                           tablat	equ	0xFF5
 14235                           prodh	equ	0xFF4
 14236                           prodl	equ	0xFF3
 14237                           intcon	equ	0xFF2
 14238                           postinc0	equ	0xFEE
 14239                           wreg	equ	0xFE8
 14240                           indf1	equ	0xFE7
 14241                           plusw1	equ	0xFE3
 14242                           fsr1h	equ	0xFE2
 14243                           fsr1l	equ	0xFE1
 14244                           indf2	equ	0xFDF
 14245                           postinc2	equ	0xFDE
 14246                           plusw2	equ	0xFDB
 14247                           fsr2h	equ	0xFDA
 14248                           fsr2l	equ	0xFD9
 14249                           status	equ	0xFD8
 14250                           
 14251 ;; *************** function ___lwdiv *****************
 14252 ;; Defined at:
 14253 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 14254 ;; Parameters:    Size  Location     Type
 14255 ;;  dividend        2   18[BANK0 ] unsigned int 
 14256 ;;  divisor         2   20[BANK0 ] unsigned int 
 14257 ;; Auto vars:     Size  Location     Type
 14258 ;;  quotient        2   22[BANK0 ] unsigned int 
 14259 ;;  counter         1   24[BANK0 ] unsigned char 
 14260 ;; Return value:  Size  Location     Type
 14261 ;;                  2   18[BANK0 ] unsigned int 
 14262 ;; Registers used:
 14263 ;;		wreg, status,2, status,0
 14264 ;; Tracked objects:
 14265 ;;		On entry : 0/0
 14266 ;;		On exit  : 0/0
 14267 ;;		Unchanged: 0/0
 14268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14269 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14270 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14272 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14273 ;;Total ram usage:        7 bytes
 14274 ;; Hardware stack levels used:    1
 14275 ;; Hardware stack levels required when called:    3
 14276 ;; This function calls:
 14277 ;;		Nothing
 14278 ;; This function is called by:
 14279 ;;		_utoa
 14280 ;; This function uses a non-reentrant model
 14281 ;;
 14282                           
 14283                           	psect	text31
 14284  015CB6                     __ptext31:
 14285                           	opt stack 0
 14286  015CB6                     ___lwdiv:
 14287                           	opt stack 23
 14288                           
 14289                           ; BSR set to: 0
 14290                           ;incstack = 0
 14291  015CB6  0E00               	movlw	0
 14292  015CB8  0100               	movlb	0	; () banked
 14293  015CBA  6F77               	movwf	(___lwdiv@quotient+1)& (0+255),b
 14294  015CBC  0E00               	movlw	0
 14295  015CBE  6F76               	movwf	___lwdiv@quotient& (0+255),b
 14296                           
 14297                           ; BSR set to: 0
 14298  015CC0  0100               	movlb	0	; () banked
 14299  015CC2  5174               	movf	___lwdiv@divisor& (0+255),w,b
 14300  015CC4  0100               	movlb	0	; () banked
 14301  015CC6  1175               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 14302  015CC8  B4D8               	btfsc	status,2,c
 14303  015CCA  D02C               	goto	l1438
 14304                           
 14305                           ; BSR set to: 0
 14306  015CCC  0E01               	movlw	1
 14307  015CCE  0100               	movlb	0	; () banked
 14308  015CD0  6F78               	movwf	___lwdiv@counter& (0+255),b
 14309  015CD2  D006               	goto	l4663
 14310  015CD4                     l4661:
 14311                           
 14312                           ; BSR set to: 0
 14313  015CD4  0100               	movlb	0	; () banked
 14314  015CD6  90D8               	bcf	status,0,c
 14315  015CD8  3774               	rlcf	___lwdiv@divisor& (0+255),f,b
 14316  015CDA  3775               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 14317  015CDC  0100               	movlb	0	; () banked
 14318  015CDE  2B78               	incf	___lwdiv@counter& (0+255),f,b
 14319  015CE0                     l4663:
 14320                           
 14321                           ; BSR set to: 0
 14322  015CE0  0100               	movlb	0	; () banked
 14323  015CE2  AF75               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 14324  015CE4  D7F7               	goto	l4661
 14325  015CE6                     l4665:
 14326                           
 14327                           ; BSR set to: 0
 14328  015CE6  0100               	movlb	0	; () banked
 14329  015CE8  90D8               	bcf	status,0,c
 14330  015CEA  3776               	rlcf	___lwdiv@quotient& (0+255),f,b
 14331  015CEC  3777               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 14332                           
 14333                           ; BSR set to: 0
 14334  015CEE  0100               	movlb	0	; () banked
 14335  015CF0  5174               	movf	___lwdiv@divisor& (0+255),w,b
 14336  015CF2  0100               	movlb	0	; () banked
 14337  015CF4  5D72               	subwf	___lwdiv@dividend& (0+255),w,b
 14338  015CF6  0100               	movlb	0	; () banked
 14339  015CF8  5175               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14340  015CFA  0100               	movlb	0	; () banked
 14341  015CFC  5973               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 14342  015CFE  A0D8               	btfss	status,0,c
 14343  015D00  D00A               	goto	l4673
 14344                           
 14345                           ; BSR set to: 0
 14346  015D02  0100               	movlb	0	; () banked
 14347  015D04  5174               	movf	___lwdiv@divisor& (0+255),w,b
 14348  015D06  0100               	movlb	0	; () banked
 14349  015D08  5F72               	subwf	___lwdiv@dividend& (0+255),f,b
 14350  015D0A  0100               	movlb	0	; () banked
 14351  015D0C  5175               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14352  015D0E  0100               	movlb	0	; () banked
 14353  015D10  5B73               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 14354                           
 14355                           ; BSR set to: 0
 14356  015D12  0100               	movlb	0	; () banked
 14357  015D14  8176               	bsf	___lwdiv@quotient& (0+255),0,b
 14358  015D16                     l4673:
 14359                           
 14360                           ; BSR set to: 0
 14361  015D16  0100               	movlb	0	; () banked
 14362  015D18  90D8               	bcf	status,0,c
 14363  015D1A  3375               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 14364  015D1C  3374               	rrcf	___lwdiv@divisor& (0+255),f,b
 14365                           
 14366                           ; BSR set to: 0
 14367  015D1E  0100               	movlb	0	; () banked
 14368  015D20  2F78               	decfsz	___lwdiv@counter& (0+255),f,b
 14369  015D22  D7E1               	goto	l4665
 14370  015D24                     l1438:
 14371                           
 14372                           ; BSR set to: 0
 14373  015D24  C076  F072         	movff	___lwdiv@quotient,?___lwdiv
 14374  015D28  C077  F073         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14375                           
 14376                           ; BSR set to: 0
 14377  015D2C  0012               	return		;funcret
 14378  015D2E                     __end_of___lwdiv:
 14379                           	opt stack 0
 14380                           tblptru	equ	0xFF8
 14381                           tblptrh	equ	0xFF7
 14382                           tblptrl	equ	0xFF6
 14383                           tablat	equ	0xFF5
 14384                           prodh	equ	0xFF4
 14385                           prodl	equ	0xFF3
 14386                           intcon	equ	0xFF2
 14387                           postinc0	equ	0xFEE
 14388                           wreg	equ	0xFE8
 14389                           indf1	equ	0xFE7
 14390                           plusw1	equ	0xFE3
 14391                           fsr1h	equ	0xFE2
 14392                           fsr1l	equ	0xFE1
 14393                           indf2	equ	0xFDF
 14394                           postinc2	equ	0xFDE
 14395                           plusw2	equ	0xFDB
 14396                           fsr2h	equ	0xFDA
 14397                           fsr2l	equ	0xFD9
 14398                           status	equ	0xFD8
 14399                           
 14400 ;; *************** function _LCD_write_string *****************
 14401 ;; Defined at:
 14402 ;;		line 194 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14403 ;; Parameters:    Size  Location     Type
 14404 ;;  buffer          2   35[BANK0 ] PTR unsigned char 
 14405 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 14406 ;; Auto vars:     Size  Location     Type
 14407 ;;		None
 14408 ;; Return value:  Size  Location     Type
 14409 ;;		None               void
 14410 ;; Registers used:
 14411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14412 ;; Tracked objects:
 14413 ;;		On entry : 0/0
 14414 ;;		On exit  : 0/0
 14415 ;;		Unchanged: 0/0
 14416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14417 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14420 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14421 ;;Total ram usage:        2 bytes
 14422 ;; Hardware stack levels used:    1
 14423 ;; Hardware stack levels required when called:    8
 14424 ;; This function calls:
 14425 ;;		_LCD_write_char
 14426 ;; This function is called by:
 14427 ;;		_LCD_write_integer
 14428 ;;		_LCD_Handler
 14429 ;; This function uses a non-reentrant model
 14430 ;;
 14431                           
 14432                           	psect	text32
 14433  0160A8                     __ptext32:
 14434                           	opt stack 0
 14435  0160A8                     _LCD_write_string:
 14436                           	opt stack 21
 14437                           
 14438                           ;src\LCD_44780.c: 197: while(*buffer){
 14439                           
 14440                           ; BSR set to: 0
 14441                           ;incstack = 0
 14442  0160A8  D00A               	goto	l8037
 14443  0160AA                     l8033:
 14444                           
 14445                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 14446  0160AA  C083  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14447  0160AE  C084  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14448  0160B2  50DF               	movf	indf2,w,c
 14449  0160B4  EC10  F0AE         	call	_LCD_write_char
 14450                           
 14451                           ;src\LCD_44780.c: 202: buffer++;
 14452  0160B8  0100               	movlb	0	; () banked
 14453  0160BA  4B83               	infsnz	LCD_write_string@buffer& (0+255),f,b
 14454  0160BC  2B84               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 14455  0160BE                     l8037:
 14456  0160BE  C083  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14457  0160C2  C084  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14458  0160C6  50DF               	movf	indf2,w,c
 14459  0160C8  B4D8               	btfsc	status,2,c
 14460  0160CA  0012               	return	
 14461  0160CC  D7EE               	goto	l8033
 14462  0160CE                     __end_of_LCD_write_string:
 14463                           	opt stack 0
 14464                           tblptru	equ	0xFF8
 14465                           tblptrh	equ	0xFF7
 14466                           tblptrl	equ	0xFF6
 14467                           tablat	equ	0xFF5
 14468                           prodh	equ	0xFF4
 14469                           prodl	equ	0xFF3
 14470                           intcon	equ	0xFF2
 14471                           postinc0	equ	0xFEE
 14472                           wreg	equ	0xFE8
 14473                           indf1	equ	0xFE7
 14474                           plusw1	equ	0xFE3
 14475                           fsr1h	equ	0xFE2
 14476                           fsr1l	equ	0xFE1
 14477                           indf2	equ	0xFDF
 14478                           postinc2	equ	0xFDE
 14479                           plusw2	equ	0xFDB
 14480                           fsr2h	equ	0xFDA
 14481                           fsr2l	equ	0xFD9
 14482                           status	equ	0xFD8
 14483                           
 14484 ;; *************** function _LCD_write_char *****************
 14485 ;; Defined at:
 14486 ;;		line 145 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14487 ;; Parameters:    Size  Location     Type
 14488 ;;  value           1    wreg     unsigned char 
 14489 ;; Auto vars:     Size  Location     Type
 14490 ;;  value           1   34[BANK0 ] unsigned char 
 14491 ;;  D0              1   33[BANK0 ] unsigned char 
 14492 ;;  D1              1   32[BANK0 ] unsigned char 
 14493 ;;  D2              1   31[BANK0 ] unsigned char 
 14494 ;;  D3              1   30[BANK0 ] unsigned char 
 14495 ;; Return value:  Size  Location     Type
 14496 ;;		None               void
 14497 ;; Registers used:
 14498 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14499 ;; Tracked objects:
 14500 ;;		On entry : 0/0
 14501 ;;		On exit  : 0/0
 14502 ;;		Unchanged: 0/0
 14503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14505 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14507 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14508 ;;Total ram usage:        5 bytes
 14509 ;; Hardware stack levels used:    1
 14510 ;; Hardware stack levels required when called:    7
 14511 ;; This function calls:
 14512 ;;		_LCD_send_command
 14513 ;; This function is called by:
 14514 ;;		_LCD_write_message
 14515 ;;		_LCD_write_string
 14516 ;; This function uses a non-reentrant model
 14517 ;;
 14518                           
 14519                           	psect	text33
 14520  015C20                     __ptext33:
 14521                           	opt stack 0
 14522  015C20                     _LCD_write_char:
 14523                           	opt stack 22
 14524                           
 14525                           ;incstack = 0
 14526                           ;LCD_write_char@value stored from wreg
 14527  015C20  0100               	movlb	0	; () banked
 14528  015C22  6F82               	movwf	LCD_write_char@value& (0+255),b
 14529                           
 14530                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 14531                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 14532  015C24  848D               	bsf	3981,2,c	;volatile
 14533                           
 14534                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 14535  015C26  0100               	movlb	0	; () banked
 14536  015C28  4582               	rlncf	LCD_write_char@value& (0+255),w,b
 14537  015C2A  0B01               	andlw	1
 14538  015C2C  0100               	movlb	0	; () banked
 14539  015C2E  6F7E               	movwf	LCD_write_char@D3& (0+255),b
 14540                           
 14541                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 14542  015C30  0100               	movlb	0	; () banked
 14543  015C32  4582               	rlncf	LCD_write_char@value& (0+255),w,b
 14544  015C34  46E8               	rlncf	wreg,f,c
 14545  015C36  0B03               	andlw	3
 14546  015C38  0B01               	andlw	1
 14547  015C3A  0100               	movlb	0	; () banked
 14548  015C3C  6F7F               	movwf	LCD_write_char@D2& (0+255),b
 14549                           
 14550                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 14551  015C3E  0100               	movlb	0	; () banked
 14552  015C40  3982               	swapf	LCD_write_char@value& (0+255),w,b
 14553  015C42  42E8               	rrncf	wreg,f,c
 14554  015C44  0B07               	andlw	7
 14555  015C46  0B01               	andlw	1
 14556  015C48  0100               	movlb	0	; () banked
 14557  015C4A  6F80               	movwf	LCD_write_char@D1& (0+255),b
 14558                           
 14559                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 14560  015C4C  0100               	movlb	0	; () banked
 14561  015C4E  3982               	swapf	LCD_write_char@value& (0+255),w,b
 14562  015C50  0B0F               	andlw	15
 14563  015C52  0B01               	andlw	1
 14564  015C54  0100               	movlb	0	; () banked
 14565  015C56  6F81               	movwf	LCD_write_char@D0& (0+255),b
 14566                           
 14567                           ; BSR set to: 0
 14568                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 14569  015C58  C07F  F07A         	movff	LCD_write_char@D2,LCD_send_command@D2
 14570  015C5C  C080  F07B         	movff	LCD_write_char@D1,LCD_send_command@D1
 14571  015C60  C081  F07C         	movff	LCD_write_char@D0,LCD_send_command@D0
 14572  015C64  0100               	movlb	0	; () banked
 14573  015C66  517E               	movf	LCD_write_char@D3& (0+255),w,b
 14574  015C68  EC82  F0AF         	call	_LCD_send_command
 14575                           
 14576                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 14577  015C6C  0100               	movlb	0	; () banked
 14578  015C6E  3982               	swapf	LCD_write_char@value& (0+255),w,b
 14579  015C70  46E8               	rlncf	wreg,f,c
 14580  015C72  0B1F               	andlw	31
 14581  015C74  0B01               	andlw	1
 14582  015C76  0100               	movlb	0	; () banked
 14583  015C78  6F7E               	movwf	LCD_write_char@D3& (0+255),b
 14584                           
 14585                           ; BSR set to: 0
 14586                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 14587  015C7A  0100               	movlb	0	; () banked
 14588  015C7C  4182               	rrncf	LCD_write_char@value& (0+255),w,b
 14589  015C7E  42E8               	rrncf	wreg,f,c
 14590  015C80  0B3F               	andlw	63
 14591  015C82  0B01               	andlw	1
 14592  015C84  0100               	movlb	0	; () banked
 14593  015C86  6F7F               	movwf	LCD_write_char@D2& (0+255),b
 14594                           
 14595                           ; BSR set to: 0
 14596                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 14597  015C88  0100               	movlb	0	; () banked
 14598  015C8A  90D8               	bcf	status,0,c
 14599  015C8C  3182               	rrcf	LCD_write_char@value& (0+255),w,b
 14600  015C8E  0B01               	andlw	1
 14601  015C90  0100               	movlb	0	; () banked
 14602  015C92  6F80               	movwf	LCD_write_char@D1& (0+255),b
 14603                           
 14604                           ; BSR set to: 0
 14605                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 14606  015C94  0100               	movlb	0	; () banked
 14607  015C96  5182               	movf	LCD_write_char@value& (0+255),w,b
 14608  015C98  0B01               	andlw	1
 14609  015C9A  0100               	movlb	0	; () banked
 14610  015C9C  6F81               	movwf	LCD_write_char@D0& (0+255),b
 14611                           
 14612                           ; BSR set to: 0
 14613                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 14614  015C9E  C07F  F07A         	movff	LCD_write_char@D2,LCD_send_command@D2
 14615  015CA2  C080  F07B         	movff	LCD_write_char@D1,LCD_send_command@D1
 14616  015CA6  C081  F07C         	movff	LCD_write_char@D0,LCD_send_command@D0
 14617  015CAA  0100               	movlb	0	; () banked
 14618  015CAC  517E               	movf	LCD_write_char@D3& (0+255),w,b
 14619  015CAE  EC82  F0AF         	call	_LCD_send_command
 14620                           
 14621                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 14622  015CB2  948D               	bcf	3981,2,c	;volatile
 14623  015CB4  0012               	return		;funcret
 14624  015CB6                     __end_of_LCD_write_char:
 14625                           	opt stack 0
 14626                           tblptru	equ	0xFF8
 14627                           tblptrh	equ	0xFF7
 14628                           tblptrl	equ	0xFF6
 14629                           tablat	equ	0xFF5
 14630                           prodh	equ	0xFF4
 14631                           prodl	equ	0xFF3
 14632                           intcon	equ	0xFF2
 14633                           postinc0	equ	0xFEE
 14634                           wreg	equ	0xFE8
 14635                           indf1	equ	0xFE7
 14636                           plusw1	equ	0xFE3
 14637                           fsr1h	equ	0xFE2
 14638                           fsr1l	equ	0xFE1
 14639                           indf2	equ	0xFDF
 14640                           postinc2	equ	0xFDE
 14641                           plusw2	equ	0xFDB
 14642                           fsr2h	equ	0xFDA
 14643                           fsr2l	equ	0xFD9
 14644                           status	equ	0xFD8
 14645                           
 14646 ;; *************** function _LCD_initialize *****************
 14647 ;; Defined at:
 14648 ;;		line 283 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14649 ;; Parameters:    Size  Location     Type
 14650 ;;  quartz_frequ    1    wreg     unsigned char 
 14651 ;; Auto vars:     Size  Location     Type
 14652 ;;  quartz_frequ    1   32[BANK0 ] unsigned char 
 14653 ;; Return value:  Size  Location     Type
 14654 ;;		None               void
 14655 ;; Registers used:
 14656 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14657 ;; Tracked objects:
 14658 ;;		On entry : 0/0
 14659 ;;		On exit  : 0/0
 14660 ;;		Unchanged: 0/0
 14661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14663 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14665 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14666 ;;Total ram usage:        1 bytes
 14667 ;; Hardware stack levels used:    1
 14668 ;; Hardware stack levels required when called:    8
 14669 ;; This function calls:
 14670 ;;		_LCD_clear
 14671 ;;		_LCD_cursor
 14672 ;;		_LCD_send_command
 14673 ;;		_delay_ms
 14674 ;;		_delay_set_quartz
 14675 ;; This function is called by:
 14676 ;;		_main
 14677 ;;		_LCD_Handler
 14678 ;;		_board_initialization
 14679 ;; This function uses a non-reentrant model
 14680 ;;
 14681                           
 14682                           	psect	text34
 14683  01533E                     __ptext34:
 14684                           	opt stack 0
 14685  01533E                     _LCD_initialize:
 14686                           	opt stack 21
 14687                           
 14688                           ;incstack = 0
 14689                           ;LCD_initialize@quartz_frequency stored from wreg
 14690  01533E  0100               	movlb	0	; () banked
 14691  015340  6F80               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 14692                           
 14693                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 14694  015342  0100               	movlb	0	; () banked
 14695  015344  5180               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 14696  015346  ECE7  F0B0         	call	_delay_set_quartz
 14697                           
 14698                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 14699  01534A  948D               	bcf	3981,2,c	;volatile
 14700                           
 14701                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 14702  01534C  928B               	bcf	3979,1,c	;volatile
 14703                           
 14704                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 14705  01534E  908B               	bcf	3979,0,c	;volatile
 14706                           
 14707                           ;src\LCD_44780.c: 291: delay_ms (100);
 14708  015350  0E00               	movlw	0
 14709  015352  0100               	movlb	0	; () banked
 14710  015354  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14711  015356  0E64               	movlw	100
 14712  015358  6F78               	movwf	delay_ms@value_ms& (0+255),b
 14713  01535A  EC9F  F0AF         	call	_delay_ms	;wreg free
 14714                           
 14715                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 14716  01535E  0E00               	movlw	0
 14717  015360  0100               	movlb	0	; () banked
 14718  015362  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14719  015364  0E01               	movlw	1
 14720  015366  0100               	movlb	0	; () banked
 14721  015368  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14722  01536A  0E01               	movlw	1
 14723  01536C  0100               	movlb	0	; () banked
 14724  01536E  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14725  015370  0E00               	movlw	0
 14726  015372  EC82  F0AF         	call	_LCD_send_command
 14727                           
 14728                           ;src\LCD_44780.c: 293: delay_ms (100);
 14729  015376  0E00               	movlw	0
 14730  015378  0100               	movlb	0	; () banked
 14731  01537A  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14732  01537C  0E64               	movlw	100
 14733  01537E  6F78               	movwf	delay_ms@value_ms& (0+255),b
 14734  015380  EC9F  F0AF         	call	_delay_ms	;wreg free
 14735                           
 14736                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 14737  015384  0E00               	movlw	0
 14738  015386  0100               	movlb	0	; () banked
 14739  015388  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14740  01538A  0E01               	movlw	1
 14741  01538C  0100               	movlb	0	; () banked
 14742  01538E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14743  015390  0E01               	movlw	1
 14744  015392  0100               	movlb	0	; () banked
 14745  015394  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14746  015396  0E00               	movlw	0
 14747  015398  EC82  F0AF         	call	_LCD_send_command
 14748                           
 14749                           ;src\LCD_44780.c: 295: delay_ms (10);
 14750  01539C  0E00               	movlw	0
 14751  01539E  0100               	movlb	0	; () banked
 14752  0153A0  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14753  0153A2  0E0A               	movlw	10
 14754  0153A4  6F78               	movwf	delay_ms@value_ms& (0+255),b
 14755  0153A6  EC9F  F0AF         	call	_delay_ms	;wreg free
 14756                           
 14757                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 14758  0153AA  0E00               	movlw	0
 14759  0153AC  0100               	movlb	0	; () banked
 14760  0153AE  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14761  0153B0  0E01               	movlw	1
 14762  0153B2  0100               	movlb	0	; () banked
 14763  0153B4  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14764  0153B6  0E01               	movlw	1
 14765  0153B8  0100               	movlb	0	; () banked
 14766  0153BA  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14767  0153BC  0E00               	movlw	0
 14768  0153BE  EC82  F0AF         	call	_LCD_send_command
 14769                           
 14770                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 14771  0153C2  0E00               	movlw	0
 14772  0153C4  0100               	movlb	0	; () banked
 14773  0153C6  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14774  0153C8  0E01               	movlw	1
 14775  0153CA  0100               	movlb	0	; () banked
 14776  0153CC  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14777  0153CE  0E00               	movlw	0
 14778  0153D0  0100               	movlb	0	; () banked
 14779  0153D2  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14780  0153D4  0E00               	movlw	0
 14781  0153D6  EC82  F0AF         	call	_LCD_send_command
 14782                           
 14783                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 14784  0153DA  0E00               	movlw	0
 14785  0153DC  0100               	movlb	0	; () banked
 14786  0153DE  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14787  0153E0  0E01               	movlw	1
 14788  0153E2  0100               	movlb	0	; () banked
 14789  0153E4  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14790  0153E6  0E00               	movlw	0
 14791  0153E8  0100               	movlb	0	; () banked
 14792  0153EA  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14793  0153EC  0E00               	movlw	0
 14794  0153EE  EC82  F0AF         	call	_LCD_send_command
 14795                           
 14796                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 14797  0153F2  0E00               	movlw	0
 14798  0153F4  0100               	movlb	0	; () banked
 14799  0153F6  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14800  0153F8  0E00               	movlw	0
 14801  0153FA  0100               	movlb	0	; () banked
 14802  0153FC  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14803  0153FE  0E00               	movlw	0
 14804  015400  0100               	movlb	0	; () banked
 14805  015402  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14806  015404  0E01               	movlw	1
 14807  015406  EC82  F0AF         	call	_LCD_send_command
 14808                           
 14809                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 14810  01540A  0E00               	movlw	0
 14811  01540C  0100               	movlb	0	; () banked
 14812  01540E  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14813  015410  0E00               	movlw	0
 14814  015412  0100               	movlb	0	; () banked
 14815  015414  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14816  015416  0E00               	movlw	0
 14817  015418  0100               	movlb	0	; () banked
 14818  01541A  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14819  01541C  0E00               	movlw	0
 14820  01541E  EC82  F0AF         	call	_LCD_send_command
 14821                           
 14822                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 14823  015422  0E00               	movlw	0
 14824  015424  0100               	movlb	0	; () banked
 14825  015426  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14826  015428  0E00               	movlw	0
 14827  01542A  0100               	movlb	0	; () banked
 14828  01542C  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14829  01542E  0E00               	movlw	0
 14830  015430  0100               	movlb	0	; () banked
 14831  015432  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14832  015434  0E01               	movlw	1
 14833  015436  EC82  F0AF         	call	_LCD_send_command
 14834                           
 14835                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 14836  01543A  0E00               	movlw	0
 14837  01543C  0100               	movlb	0	; () banked
 14838  01543E  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14839  015440  0E00               	movlw	0
 14840  015442  0100               	movlb	0	; () banked
 14841  015444  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14842  015446  0E00               	movlw	0
 14843  015448  0100               	movlb	0	; () banked
 14844  01544A  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14845  01544C  0E00               	movlw	0
 14846  01544E  EC82  F0AF         	call	_LCD_send_command
 14847                           
 14848                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 14849  015452  0E00               	movlw	0
 14850  015454  0100               	movlb	0	; () banked
 14851  015456  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14852  015458  0E00               	movlw	0
 14853  01545A  0100               	movlb	0	; () banked
 14854  01545C  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14855  01545E  0E01               	movlw	1
 14856  015460  0100               	movlb	0	; () banked
 14857  015462  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14858  015464  0E00               	movlw	0
 14859  015466  EC82  F0AF         	call	_LCD_send_command
 14860                           
 14861                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 14862  01546A  0E00               	movlw	0
 14863  01546C  0100               	movlb	0	; () banked
 14864  01546E  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14865  015470  0E00               	movlw	0
 14866  015472  0100               	movlb	0	; () banked
 14867  015474  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14868  015476  0E00               	movlw	0
 14869  015478  0100               	movlb	0	; () banked
 14870  01547A  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14871  01547C  0E00               	movlw	0
 14872  01547E  EC82  F0AF         	call	_LCD_send_command
 14873                           
 14874                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 14875  015482  0E01               	movlw	1
 14876  015484  0100               	movlb	0	; () banked
 14877  015486  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14878  015488  0E01               	movlw	1
 14879  01548A  0100               	movlb	0	; () banked
 14880  01548C  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14881  01548E  0E00               	movlw	0
 14882  015490  0100               	movlb	0	; () banked
 14883  015492  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14884  015494  0E00               	movlw	0
 14885  015496  EC82  F0AF         	call	_LCD_send_command
 14886                           
 14887                           ;src\LCD_44780.c: 312: LCD_clear ();
 14888  01549A  EC26  F0B0         	call	_LCD_clear	;wreg free
 14889                           
 14890                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 14891  01549E  0E00               	movlw	0
 14892  0154A0  0100               	movlb	0	; () banked
 14893  0154A2  6F7E               	movwf	LCD_cursor@blinking& (0+255),b
 14894  0154A4  0E00               	movlw	0
 14895  0154A6  EC0D  F0B0         	call	_LCD_cursor
 14896  0154AA  0012               	return		;funcret
 14897  0154AC                     __end_of_LCD_initialize:
 14898                           	opt stack 0
 14899                           tblptru	equ	0xFF8
 14900                           tblptrh	equ	0xFF7
 14901                           tblptrl	equ	0xFF6
 14902                           tablat	equ	0xFF5
 14903                           prodh	equ	0xFF4
 14904                           prodl	equ	0xFF3
 14905                           intcon	equ	0xFF2
 14906                           postinc0	equ	0xFEE
 14907                           wreg	equ	0xFE8
 14908                           indf1	equ	0xFE7
 14909                           plusw1	equ	0xFE3
 14910                           fsr1h	equ	0xFE2
 14911                           fsr1l	equ	0xFE1
 14912                           indf2	equ	0xFDF
 14913                           postinc2	equ	0xFDE
 14914                           plusw2	equ	0xFDB
 14915                           fsr2h	equ	0xFDA
 14916                           fsr2l	equ	0xFD9
 14917                           status	equ	0xFD8
 14918                           
 14919 ;; *************** function _delay_set_quartz *****************
 14920 ;; Defined at:
 14921 ;;		line 115 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 14922 ;; Parameters:    Size  Location     Type
 14923 ;;  frequency       1    wreg     unsigned char 
 14924 ;; Auto vars:     Size  Location     Type
 14925 ;;  frequency       1   18[BANK0 ] unsigned char 
 14926 ;; Return value:  Size  Location     Type
 14927 ;;		None               void
 14928 ;; Registers used:
 14929 ;;		wreg
 14930 ;; Tracked objects:
 14931 ;;		On entry : 0/0
 14932 ;;		On exit  : 0/0
 14933 ;;		Unchanged: 0/0
 14934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14936 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14938 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14939 ;;Total ram usage:        1 bytes
 14940 ;; Hardware stack levels used:    1
 14941 ;; Hardware stack levels required when called:    3
 14942 ;; This function calls:
 14943 ;;		Nothing
 14944 ;; This function is called by:
 14945 ;;		_LCD_initialize
 14946 ;; This function uses a non-reentrant model
 14947 ;;
 14948                           
 14949                           	psect	text35
 14950  0161CE                     __ptext35:
 14951                           	opt stack 0
 14952  0161CE                     _delay_set_quartz:
 14953                           	opt stack 25
 14954                           
 14955                           ;incstack = 0
 14956                           ;delay_set_quartz@frequency stored from wreg
 14957  0161CE  0100               	movlb	0	; () banked
 14958  0161D0  6F72               	movwf	delay_set_quartz@frequency& (0+255),b
 14959                           
 14960                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 14961  0161D2  C072  F0E8         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 14962  0161D6  0012               	return		;funcret
 14963  0161D8                     __end_of_delay_set_quartz:
 14964                           	opt stack 0
 14965                           tblptru	equ	0xFF8
 14966                           tblptrh	equ	0xFF7
 14967                           tblptrl	equ	0xFF6
 14968                           tablat	equ	0xFF5
 14969                           prodh	equ	0xFF4
 14970                           prodl	equ	0xFF3
 14971                           intcon	equ	0xFF2
 14972                           postinc0	equ	0xFEE
 14973                           wreg	equ	0xFE8
 14974                           indf1	equ	0xFE7
 14975                           plusw1	equ	0xFE3
 14976                           fsr1h	equ	0xFE2
 14977                           fsr1l	equ	0xFE1
 14978                           indf2	equ	0xFDF
 14979                           postinc2	equ	0xFDE
 14980                           plusw2	equ	0xFDB
 14981                           fsr2h	equ	0xFDA
 14982                           fsr2l	equ	0xFD9
 14983                           status	equ	0xFD8
 14984                           
 14985 ;; *************** function _LCD_cursor *****************
 14986 ;; Defined at:
 14987 ;;		line 266 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14988 ;; Parameters:    Size  Location     Type
 14989 ;;  active          1    wreg     unsigned char 
 14990 ;;  blinking        1   30[BANK0 ] unsigned char 
 14991 ;; Auto vars:     Size  Location     Type
 14992 ;;  active          1   31[BANK0 ] unsigned char 
 14993 ;; Return value:  Size  Location     Type
 14994 ;;		None               void
 14995 ;; Registers used:
 14996 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14997 ;; Tracked objects:
 14998 ;;		On entry : 0/0
 14999 ;;		On exit  : 0/0
 15000 ;;		Unchanged: 0/0
 15001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15002 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15003 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15005 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15006 ;;Total ram usage:        2 bytes
 15007 ;; Hardware stack levels used:    1
 15008 ;; Hardware stack levels required when called:    7
 15009 ;; This function calls:
 15010 ;;		_LCD_send_command
 15011 ;; This function is called by:
 15012 ;;		_LCD_initialize
 15013 ;; This function uses a non-reentrant model
 15014 ;;
 15015                           
 15016                           	psect	text36
 15017  01601A                     __ptext36:
 15018                           	opt stack 0
 15019  01601A                     _LCD_cursor:
 15020                           	opt stack 21
 15021                           
 15022                           ;incstack = 0
 15023                           ;LCD_cursor@active stored from wreg
 15024  01601A  0100               	movlb	0	; () banked
 15025  01601C  6F7F               	movwf	LCD_cursor@active& (0+255),b
 15026                           
 15027                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 15028  01601E  0E00               	movlw	0
 15029  016020  0100               	movlb	0	; () banked
 15030  016022  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15031  016024  0E00               	movlw	0
 15032  016026  0100               	movlb	0	; () banked
 15033  016028  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15034  01602A  0E00               	movlw	0
 15035  01602C  0100               	movlb	0	; () banked
 15036  01602E  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15037  016030  0E00               	movlw	0
 15038  016032  EC82  F0AF         	call	_LCD_send_command
 15039                           
 15040                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 15041  016036  0E01               	movlw	1
 15042  016038  0100               	movlb	0	; () banked
 15043  01603A  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15044  01603C  C07F  F07B         	movff	LCD_cursor@active,LCD_send_command@D1
 15045  016040  C07E  F07C         	movff	LCD_cursor@blinking,LCD_send_command@D0
 15046  016044  0E01               	movlw	1
 15047  016046  EC82  F0AF         	call	_LCD_send_command
 15048  01604A  0012               	return		;funcret
 15049  01604C                     __end_of_LCD_cursor:
 15050                           	opt stack 0
 15051                           tblptru	equ	0xFF8
 15052                           tblptrh	equ	0xFF7
 15053                           tblptrl	equ	0xFF6
 15054                           tablat	equ	0xFF5
 15055                           prodh	equ	0xFF4
 15056                           prodl	equ	0xFF3
 15057                           intcon	equ	0xFF2
 15058                           postinc0	equ	0xFEE
 15059                           wreg	equ	0xFE8
 15060                           indf1	equ	0xFE7
 15061                           plusw1	equ	0xFE3
 15062                           fsr1h	equ	0xFE2
 15063                           fsr1l	equ	0xFE1
 15064                           indf2	equ	0xFDF
 15065                           postinc2	equ	0xFDE
 15066                           plusw2	equ	0xFDB
 15067                           fsr2h	equ	0xFDA
 15068                           fsr2l	equ	0xFD9
 15069                           status	equ	0xFD8
 15070                           
 15071 ;; *************** function _LCD_clear *****************
 15072 ;; Defined at:
 15073 ;;		line 257 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15074 ;; Parameters:    Size  Location     Type
 15075 ;;		None
 15076 ;; Auto vars:     Size  Location     Type
 15077 ;;		None
 15078 ;; Return value:  Size  Location     Type
 15079 ;;		None               void
 15080 ;; Registers used:
 15081 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15082 ;; Tracked objects:
 15083 ;;		On entry : 0/0
 15084 ;;		On exit  : 0/0
 15085 ;;		Unchanged: 0/0
 15086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15091 ;;Total ram usage:        0 bytes
 15092 ;; Hardware stack levels used:    1
 15093 ;; Hardware stack levels required when called:    7
 15094 ;; This function calls:
 15095 ;;		_LCD_send_command
 15096 ;; This function is called by:
 15097 ;;		_LCD_initialize
 15098 ;;		_LCD_Handler
 15099 ;;		_board_initialization
 15100 ;; This function uses a non-reentrant model
 15101 ;;
 15102                           
 15103                           	psect	text37
 15104  01604C                     __ptext37:
 15105                           	opt stack 0
 15106  01604C                     _LCD_clear:
 15107                           	opt stack 21
 15108                           
 15109                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 15110                           
 15111                           ;incstack = 0
 15112  01604C  0E00               	movlw	0
 15113  01604E  0100               	movlb	0	; () banked
 15114  016050  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15115  016052  0E00               	movlw	0
 15116  016054  0100               	movlb	0	; () banked
 15117  016056  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15118  016058  0E00               	movlw	0
 15119  01605A  0100               	movlb	0	; () banked
 15120  01605C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15121  01605E  0E00               	movlw	0
 15122  016060  EC82  F0AF         	call	_LCD_send_command
 15123                           
 15124                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 15125  016064  0E00               	movlw	0
 15126  016066  0100               	movlb	0	; () banked
 15127  016068  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15128  01606A  0E00               	movlw	0
 15129  01606C  0100               	movlb	0	; () banked
 15130  01606E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15131  016070  0E01               	movlw	1
 15132  016072  0100               	movlb	0	; () banked
 15133  016074  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15134  016076  0E00               	movlw	0
 15135  016078  EC82  F0AF         	call	_LCD_send_command
 15136  01607C  0012               	return		;funcret
 15137  01607E                     __end_of_LCD_clear:
 15138                           	opt stack 0
 15139                           tblptru	equ	0xFF8
 15140                           tblptrh	equ	0xFF7
 15141                           tblptrl	equ	0xFF6
 15142                           tablat	equ	0xFF5
 15143                           prodh	equ	0xFF4
 15144                           prodl	equ	0xFF3
 15145                           intcon	equ	0xFF2
 15146                           postinc0	equ	0xFEE
 15147                           wreg	equ	0xFE8
 15148                           indf1	equ	0xFE7
 15149                           plusw1	equ	0xFE3
 15150                           fsr1h	equ	0xFE2
 15151                           fsr1l	equ	0xFE1
 15152                           indf2	equ	0xFDF
 15153                           postinc2	equ	0xFDE
 15154                           plusw2	equ	0xFDB
 15155                           fsr2h	equ	0xFDA
 15156                           fsr2l	equ	0xFD9
 15157                           status	equ	0xFD8
 15158                           
 15159 ;; *************** function _LCD_goto_xy *****************
 15160 ;; Defined at:
 15161 ;;		line 136 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15162 ;; Parameters:    Size  Location     Type
 15163 ;;  x               1    wreg     unsigned char 
 15164 ;;  y               1   33[BANK0 ] unsigned char 
 15165 ;; Auto vars:     Size  Location     Type
 15166 ;;  x               1   34[BANK0 ] unsigned char 
 15167 ;; Return value:  Size  Location     Type
 15168 ;;		None               void
 15169 ;; Registers used:
 15170 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15171 ;; Tracked objects:
 15172 ;;		On entry : 0/0
 15173 ;;		On exit  : 0/0
 15174 ;;		Unchanged: 0/0
 15175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15176 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15177 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15179 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15180 ;;Total ram usage:        2 bytes
 15181 ;; Hardware stack levels used:    1
 15182 ;; Hardware stack levels required when called:    8
 15183 ;; This function calls:
 15184 ;;		_LCD_goto_line
 15185 ;;		_LCD_shift_cursor
 15186 ;; This function is called by:
 15187 ;;		_LCD_Handler
 15188 ;; This function uses a non-reentrant model
 15189 ;;
 15190                           
 15191                           	psect	text38
 15192  01614E                     __ptext38:
 15193                           	opt stack 0
 15194  01614E                     _LCD_goto_xy:
 15195                           	opt stack 21
 15196                           
 15197                           ;incstack = 0
 15198                           ;LCD_goto_xy@x stored from wreg
 15199  01614E  0100               	movlb	0	; () banked
 15200  016150  6F82               	movwf	LCD_goto_xy@x& (0+255),b
 15201                           
 15202                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 15203  016152  0100               	movlb	0	; () banked
 15204  016154  5181               	movf	LCD_goto_xy@y& (0+255),w,b
 15205  016156  ECDC  F0AA         	call	_LCD_goto_line
 15206                           
 15207                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 15208  01615A  0100               	movlb	0	; () banked
 15209  01615C  0582               	decf	LCD_goto_xy@x& (0+255),w,b
 15210  01615E  0100               	movlb	0	; () banked
 15211  016160  6F7E               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 15212  016162  0E01               	movlw	1
 15213  016164  ECF2  F0AE         	call	_LCD_shift_cursor
 15214  016168  0012               	return		;funcret
 15215  01616A                     __end_of_LCD_goto_xy:
 15216                           	opt stack 0
 15217                           tblptru	equ	0xFF8
 15218                           tblptrh	equ	0xFF7
 15219                           tblptrl	equ	0xFF6
 15220                           tablat	equ	0xFF5
 15221                           prodh	equ	0xFF4
 15222                           prodl	equ	0xFF3
 15223                           intcon	equ	0xFF2
 15224                           postinc0	equ	0xFEE
 15225                           wreg	equ	0xFE8
 15226                           indf1	equ	0xFE7
 15227                           plusw1	equ	0xFE3
 15228                           fsr1h	equ	0xFE2
 15229                           fsr1l	equ	0xFE1
 15230                           indf2	equ	0xFDF
 15231                           postinc2	equ	0xFDE
 15232                           plusw2	equ	0xFDB
 15233                           fsr2h	equ	0xFDA
 15234                           fsr2l	equ	0xFD9
 15235                           status	equ	0xFD8
 15236                           
 15237 ;; *************** function _LCD_shift_cursor *****************
 15238 ;; Defined at:
 15239 ;;		line 98 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15240 ;; Parameters:    Size  Location     Type
 15241 ;;  shift           1    wreg     unsigned char 
 15242 ;;  number_of_sh    1   30[BANK0 ] unsigned char 
 15243 ;; Auto vars:     Size  Location     Type
 15244 ;;  shift           1   31[BANK0 ] unsigned char 
 15245 ;;  i               1   32[BANK0 ] unsigned char 
 15246 ;; Return value:  Size  Location     Type
 15247 ;;		None               void
 15248 ;; Registers used:
 15249 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15250 ;; Tracked objects:
 15251 ;;		On entry : 0/0
 15252 ;;		On exit  : 0/0
 15253 ;;		Unchanged: 0/0
 15254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15255 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15256 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15258 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15259 ;;Total ram usage:        3 bytes
 15260 ;; Hardware stack levels used:    1
 15261 ;; Hardware stack levels required when called:    7
 15262 ;; This function calls:
 15263 ;;		_LCD_send_command
 15264 ;; This function is called by:
 15265 ;;		_LCD_goto_xy
 15266 ;; This function uses a non-reentrant model
 15267 ;;
 15268                           
 15269                           	psect	text39
 15270  015DE4                     __ptext39:
 15271                           	opt stack 0
 15272  015DE4                     _LCD_shift_cursor:
 15273                           	opt stack 21
 15274                           
 15275                           ;incstack = 0
 15276                           ;LCD_shift_cursor@shift stored from wreg
 15277  015DE4  0100               	movlb	0	; () banked
 15278  015DE6  6F7F               	movwf	LCD_shift_cursor@shift& (0+255),b
 15279                           
 15280                           ;src\LCD_44780.c: 100: unsigned char i;
 15281                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 15282  015DE8  0E00               	movlw	0
 15283  015DEA  0100               	movlb	0	; () banked
 15284  015DEC  6F80               	movwf	LCD_shift_cursor@i& (0+255),b
 15285  015DEE  D019               	goto	l8017
 15286  015DF0                     l8013:
 15287                           
 15288                           ; BSR set to: 0
 15289                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 15290  015DF0  0E00               	movlw	0
 15291  015DF2  0100               	movlb	0	; () banked
 15292  015DF4  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15293  015DF6  0E00               	movlw	0
 15294  015DF8  0100               	movlb	0	; () banked
 15295  015DFA  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15296  015DFC  0E01               	movlw	1
 15297  015DFE  0100               	movlb	0	; () banked
 15298  015E00  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15299  015E02  0E00               	movlw	0
 15300  015E04  EC82  F0AF         	call	_LCD_send_command
 15301                           
 15302                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 15303  015E08  C07F  F07A         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 15304  015E0C  0E00               	movlw	0
 15305  015E0E  0100               	movlb	0	; () banked
 15306  015E10  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15307  015E12  0E00               	movlw	0
 15308  015E14  0100               	movlb	0	; () banked
 15309  015E16  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15310  015E18  0E00               	movlw	0
 15311  015E1A  EC82  F0AF         	call	_LCD_send_command
 15312  015E1E  0100               	movlb	0	; () banked
 15313  015E20  2B80               	incf	LCD_shift_cursor@i& (0+255),f,b
 15314  015E22                     l8017:
 15315                           
 15316                           ; BSR set to: 0
 15317  015E22  0100               	movlb	0	; () banked
 15318  015E24  517E               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 15319  015E26  0100               	movlb	0	; () banked
 15320  015E28  5D80               	subwf	LCD_shift_cursor@i& (0+255),w,b
 15321  015E2A  B0D8               	btfsc	status,0,c
 15322  015E2C  0012               	return	
 15323  015E2E  D7E0               	goto	l8013
 15324  015E30                     __end_of_LCD_shift_cursor:
 15325                           	opt stack 0
 15326                           tblptru	equ	0xFF8
 15327                           tblptrh	equ	0xFF7
 15328                           tblptrl	equ	0xFF6
 15329                           tablat	equ	0xFF5
 15330                           prodh	equ	0xFF4
 15331                           prodl	equ	0xFF3
 15332                           intcon	equ	0xFF2
 15333                           postinc0	equ	0xFEE
 15334                           wreg	equ	0xFE8
 15335                           indf1	equ	0xFE7
 15336                           plusw1	equ	0xFE3
 15337                           fsr1h	equ	0xFE2
 15338                           fsr1l	equ	0xFE1
 15339                           indf2	equ	0xFDF
 15340                           postinc2	equ	0xFDE
 15341                           plusw2	equ	0xFDB
 15342                           fsr2h	equ	0xFDA
 15343                           fsr2l	equ	0xFD9
 15344                           status	equ	0xFD8
 15345                           
 15346 ;; *************** function _LCD_goto_line *****************
 15347 ;; Defined at:
 15348 ;;		line 111 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15349 ;; Parameters:    Size  Location     Type
 15350 ;;  line            1    wreg     unsigned char 
 15351 ;; Auto vars:     Size  Location     Type
 15352 ;;  line            1   30[BANK0 ] unsigned char 
 15353 ;; Return value:  Size  Location     Type
 15354 ;;		None               void
 15355 ;; Registers used:
 15356 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15357 ;; Tracked objects:
 15358 ;;		On entry : 0/0
 15359 ;;		On exit  : 0/0
 15360 ;;		Unchanged: 0/0
 15361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15363 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15365 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15366 ;;Total ram usage:        1 bytes
 15367 ;; Hardware stack levels used:    1
 15368 ;; Hardware stack levels required when called:    7
 15369 ;; This function calls:
 15370 ;;		_LCD_send_command
 15371 ;; This function is called by:
 15372 ;;		_LCD_goto_xy
 15373 ;;		_main
 15374 ;;		_LCD_Handler
 15375 ;;		_board_initialization
 15376 ;; This function uses a non-reentrant model
 15377 ;;
 15378                           
 15379                           	psect	text40
 15380  0155B8                     __ptext40:
 15381                           	opt stack 0
 15382  0155B8                     _LCD_goto_line:
 15383                           	opt stack 22
 15384                           
 15385                           ; BSR set to: 0
 15386                           ;incstack = 0
 15387                           ;LCD_goto_line@line stored from wreg
 15388  0155B8  0100               	movlb	0	; () banked
 15389  0155BA  6F7E               	movwf	LCD_goto_line@line& (0+255),b
 15390                           
 15391                           ;src\LCD_44780.c: 113: switch(line) {
 15392  0155BC  D064               	goto	l8029
 15393  0155BE                     l8021:
 15394  0155BE  0E00               	movlw	0
 15395  0155C0  0100               	movlb	0	; () banked
 15396  0155C2  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15397  0155C4  0E00               	movlw	0
 15398  0155C6  0100               	movlb	0	; () banked
 15399  0155C8  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15400  0155CA  0E00               	movlw	0
 15401  0155CC  0100               	movlb	0	; () banked
 15402  0155CE  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15403  0155D0  0E01               	movlw	1
 15404  0155D2  EC82  F0AF         	call	_LCD_send_command
 15405                           
 15406                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 15407  0155D6  0E00               	movlw	0
 15408  0155D8  0100               	movlb	0	; () banked
 15409  0155DA  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15410  0155DC  0E00               	movlw	0
 15411  0155DE  0100               	movlb	0	; () banked
 15412  0155E0  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15413  0155E2  0E00               	movlw	0
 15414  0155E4  0100               	movlb	0	; () banked
 15415  0155E6  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15416  0155E8  0E00               	movlw	0
 15417  0155EA  EC82  F0AF         	call	_LCD_send_command
 15418                           
 15419                           ;src\LCD_44780.c: 117: break;
 15420  0155EE  0012               	return	
 15421  0155F0                     l8023:
 15422  0155F0  0E01               	movlw	1
 15423  0155F2  0100               	movlb	0	; () banked
 15424  0155F4  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15425  0155F6  0E00               	movlw	0
 15426  0155F8  0100               	movlb	0	; () banked
 15427  0155FA  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15428  0155FC  0E00               	movlw	0
 15429  0155FE  0100               	movlb	0	; () banked
 15430  015600  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15431  015602  0E01               	movlw	1
 15432  015604  EC82  F0AF         	call	_LCD_send_command
 15433                           
 15434                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 15435  015608  0E00               	movlw	0
 15436  01560A  0100               	movlb	0	; () banked
 15437  01560C  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15438  01560E  0E00               	movlw	0
 15439  015610  0100               	movlb	0	; () banked
 15440  015612  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15441  015614  0E00               	movlw	0
 15442  015616  0100               	movlb	0	; () banked
 15443  015618  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15444  01561A  0E00               	movlw	0
 15445  01561C  EC82  F0AF         	call	_LCD_send_command
 15446                           
 15447                           ;src\LCD_44780.c: 121: break;
 15448  015620  0012               	return	
 15449  015622                     l8025:
 15450  015622  0E00               	movlw	0
 15451  015624  0100               	movlb	0	; () banked
 15452  015626  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15453  015628  0E00               	movlw	0
 15454  01562A  0100               	movlb	0	; () banked
 15455  01562C  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15456  01562E  0E01               	movlw	1
 15457  015630  0100               	movlb	0	; () banked
 15458  015632  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15459  015634  0E01               	movlw	1
 15460  015636  EC82  F0AF         	call	_LCD_send_command
 15461                           
 15462                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 15463  01563A  0E01               	movlw	1
 15464  01563C  0100               	movlb	0	; () banked
 15465  01563E  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15466  015640  0E00               	movlw	0
 15467  015642  0100               	movlb	0	; () banked
 15468  015644  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15469  015646  0E00               	movlw	0
 15470  015648  0100               	movlb	0	; () banked
 15471  01564A  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15472  01564C  0E00               	movlw	0
 15473  01564E  EC82  F0AF         	call	_LCD_send_command
 15474                           
 15475                           ;src\LCD_44780.c: 125: break;
 15476  015652  0012               	return	
 15477  015654                     l8027:
 15478  015654  0E01               	movlw	1
 15479  015656  0100               	movlb	0	; () banked
 15480  015658  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15481  01565A  0E00               	movlw	0
 15482  01565C  0100               	movlb	0	; () banked
 15483  01565E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15484  015660  0E01               	movlw	1
 15485  015662  0100               	movlb	0	; () banked
 15486  015664  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15487  015666  0E01               	movlw	1
 15488  015668  EC82  F0AF         	call	_LCD_send_command
 15489                           
 15490                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 15491  01566C  0E01               	movlw	1
 15492  01566E  0100               	movlb	0	; () banked
 15493  015670  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15494  015672  0E00               	movlw	0
 15495  015674  0100               	movlb	0	; () banked
 15496  015676  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15497  015678  0E00               	movlw	0
 15498  01567A  0100               	movlb	0	; () banked
 15499  01567C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15500  01567E  0E00               	movlw	0
 15501  015680  EC82  F0AF         	call	_LCD_send_command
 15502                           
 15503                           ;src\LCD_44780.c: 129: }
 15504  015684  0012               	return	
 15505  015686                     l8029:
 15506  015686  0100               	movlb	0	; () banked
 15507  015688  517E               	movf	LCD_goto_line@line& (0+255),w,b
 15508                           
 15509                           ; Switch size 1, requested type "space"
 15510                           ; Number of cases is 4, Range of values is 1 to 4
 15511                           ; switch strategies available:
 15512                           ; Name         Instructions Cycles
 15513                           ; simple_byte           13     7 (average)
 15514                           ;	Chosen strategy is simple_byte
 15515  01568A  0A01               	xorlw	1	; case 1
 15516  01568C  B4D8               	btfsc	status,2,c
 15517  01568E  D797               	goto	l8021
 15518  015690  0A03               	xorlw	3	; case 2
 15519  015692  B4D8               	btfsc	status,2,c
 15520  015694  D7AD               	goto	l8023
 15521  015696  0A01               	xorlw	1	; case 3
 15522  015698  B4D8               	btfsc	status,2,c
 15523  01569A  D7C3               	goto	l8025
 15524  01569C  0A07               	xorlw	7	; case 4
 15525  01569E  A4D8               	btfss	status,2,c
 15526  0156A0  0012               	return	
 15527  0156A2  D7D8               	goto	l8027
 15528  0156A4                     __end_of_LCD_goto_line:
 15529                           	opt stack 0
 15530                           tblptru	equ	0xFF8
 15531                           tblptrh	equ	0xFF7
 15532                           tblptrl	equ	0xFF6
 15533                           tablat	equ	0xFF5
 15534                           prodh	equ	0xFF4
 15535                           prodl	equ	0xFF3
 15536                           intcon	equ	0xFF2
 15537                           postinc0	equ	0xFEE
 15538                           wreg	equ	0xFE8
 15539                           indf1	equ	0xFE7
 15540                           plusw1	equ	0xFE3
 15541                           fsr1h	equ	0xFE2
 15542                           fsr1l	equ	0xFE1
 15543                           indf2	equ	0xFDF
 15544                           postinc2	equ	0xFDE
 15545                           plusw2	equ	0xFDB
 15546                           fsr2h	equ	0xFDA
 15547                           fsr2l	equ	0xFD9
 15548                           status	equ	0xFD8
 15549                           
 15550 ;; *************** function _LCD_send_command *****************
 15551 ;; Defined at:
 15552 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15553 ;; Parameters:    Size  Location     Type
 15554 ;;  D3              1    wreg     unsigned char 
 15555 ;;  D2              1   26[BANK0 ] unsigned char 
 15556 ;;  D1              1   27[BANK0 ] unsigned char 
 15557 ;;  D0              1   28[BANK0 ] unsigned char 
 15558 ;; Auto vars:     Size  Location     Type
 15559 ;;  D3              1   29[BANK0 ] unsigned char 
 15560 ;; Return value:  Size  Location     Type
 15561 ;;		None               void
 15562 ;; Registers used:
 15563 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15564 ;; Tracked objects:
 15565 ;;		On entry : 0/0
 15566 ;;		On exit  : 0/0
 15567 ;;		Unchanged: 0/0
 15568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15569 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15570 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15572 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15573 ;;Total ram usage:        4 bytes
 15574 ;; Hardware stack levels used:    1
 15575 ;; Hardware stack levels required when called:    6
 15576 ;; This function calls:
 15577 ;;		_LCD_enable_pulse
 15578 ;; This function is called by:
 15579 ;;		_LCD_shift_cursor
 15580 ;;		_LCD_goto_line
 15581 ;;		_LCD_write_char
 15582 ;;		_LCD_clear
 15583 ;;		_LCD_cursor
 15584 ;;		_LCD_initialize
 15585 ;;		_LCD_home
 15586 ;;		_LCD_shift
 15587 ;; This function uses a non-reentrant model
 15588 ;;
 15589                           
 15590                           	psect	text41
 15591  015F04                     __ptext41:
 15592                           	opt stack 0
 15593  015F04                     _LCD_send_command:
 15594                           	opt stack 22
 15595                           
 15596                           ;incstack = 0
 15597                           ;LCD_send_command@D3 stored from wreg
 15598  015F04  0100               	movlb	0	; () banked
 15599  015F06  6F7D               	movwf	LCD_send_command@D3& (0+255),b
 15600                           
 15601                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 15602  015F08  0100               	movlb	0	; () banked
 15603  015F0A  B17C               	btfsc	LCD_send_command@D0& (0+255),0,b
 15604  015F0C  D002               	bra	u9875
 15605  015F0E  948B               	bcf	3979,2,c	;volatile
 15606  015F10  D001               	bra	u9876
 15607  015F12                     u9875:
 15608  015F12  848B               	bsf	3979,2,c	;volatile
 15609  015F14                     u9876:
 15610                           
 15611                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 15612  015F14  0100               	movlb	0	; () banked
 15613  015F16  B17B               	btfsc	LCD_send_command@D1& (0+255),0,b
 15614  015F18  D002               	bra	u9885
 15615  015F1A  968B               	bcf	3979,3,c	;volatile
 15616  015F1C  D001               	bra	u9886
 15617  015F1E                     u9885:
 15618  015F1E  868B               	bsf	3979,3,c	;volatile
 15619  015F20                     u9886:
 15620                           
 15621                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 15622  015F20  0100               	movlb	0	; () banked
 15623  015F22  B17A               	btfsc	LCD_send_command@D2& (0+255),0,b
 15624  015F24  D002               	bra	u9895
 15625  015F26  908C               	bcf	3980,0,c	;volatile
 15626  015F28  D001               	bra	u9896
 15627  015F2A                     u9895:
 15628  015F2A  808C               	bsf	3980,0,c	;volatile
 15629  015F2C                     u9896:
 15630                           
 15631                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 15632  015F2C  0100               	movlb	0	; () banked
 15633  015F2E  B17D               	btfsc	LCD_send_command@D3& (0+255),0,b
 15634  015F30  D002               	bra	u9905
 15635  015F32  928C               	bcf	3980,1,c	;volatile
 15636  015F34  D001               	bra	u9906
 15637  015F36                     u9905:
 15638  015F36  828C               	bsf	3980,1,c	;volatile
 15639  015F38                     u9906:
 15640                           
 15641                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 15642  015F38  EC79  F0B0         	call	_LCD_enable_pulse	;wreg free
 15643  015F3C  0012               	return		;funcret
 15644  015F3E                     __end_of_LCD_send_command:
 15645                           	opt stack 0
 15646                           tblptru	equ	0xFF8
 15647                           tblptrh	equ	0xFF7
 15648                           tblptrl	equ	0xFF6
 15649                           tablat	equ	0xFF5
 15650                           prodh	equ	0xFF4
 15651                           prodl	equ	0xFF3
 15652                           intcon	equ	0xFF2
 15653                           postinc0	equ	0xFEE
 15654                           wreg	equ	0xFE8
 15655                           indf1	equ	0xFE7
 15656                           plusw1	equ	0xFE3
 15657                           fsr1h	equ	0xFE2
 15658                           fsr1l	equ	0xFE1
 15659                           indf2	equ	0xFDF
 15660                           postinc2	equ	0xFDE
 15661                           plusw2	equ	0xFDB
 15662                           fsr2h	equ	0xFDA
 15663                           fsr2l	equ	0xFD9
 15664                           status	equ	0xFD8
 15665                           
 15666 ;; *************** function _LCD_enable_pulse *****************
 15667 ;; Defined at:
 15668 ;;		line 49 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15669 ;; Parameters:    Size  Location     Type
 15670 ;;		None
 15671 ;; Auto vars:     Size  Location     Type
 15672 ;;		None
 15673 ;; Return value:  Size  Location     Type
 15674 ;;		None               void
 15675 ;; Registers used:
 15676 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15677 ;; Tracked objects:
 15678 ;;		On entry : 0/0
 15679 ;;		On exit  : 0/0
 15680 ;;		Unchanged: 0/0
 15681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15686 ;;Total ram usage:        0 bytes
 15687 ;; Hardware stack levels used:    1
 15688 ;; Hardware stack levels required when called:    5
 15689 ;; This function calls:
 15690 ;;		_delay_ms
 15691 ;; This function is called by:
 15692 ;;		_LCD_send_command
 15693 ;; This function uses a non-reentrant model
 15694 ;;
 15695                           
 15696                           	psect	text42
 15697  0160F2                     __ptext42:
 15698                           	opt stack 0
 15699  0160F2                     _LCD_enable_pulse:
 15700                           	opt stack 22
 15701                           
 15702                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 15703                           
 15704                           ;incstack = 0
 15705  0160F2  828B               	bsf	3979,1,c	;volatile
 15706                           
 15707                           ;src\LCD_44780.c: 52: delay_ms (1);
 15708  0160F4  0E00               	movlw	0
 15709  0160F6  0100               	movlb	0	; () banked
 15710  0160F8  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15711  0160FA  0E01               	movlw	1
 15712  0160FC  6F78               	movwf	delay_ms@value_ms& (0+255),b
 15713  0160FE  EC9F  F0AF         	call	_delay_ms	;wreg free
 15714                           
 15715                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 15716  016102  928B               	bcf	3979,1,c	;volatile
 15717                           
 15718                           ;src\LCD_44780.c: 54: delay_ms (1);
 15719  016104  0E00               	movlw	0
 15720  016106  0100               	movlb	0	; () banked
 15721  016108  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15722  01610A  0E01               	movlw	1
 15723  01610C  6F78               	movwf	delay_ms@value_ms& (0+255),b
 15724  01610E  EC9F  F0AF         	call	_delay_ms	;wreg free
 15725  016112  0012               	return		;funcret
 15726  016114                     __end_of_LCD_enable_pulse:
 15727                           	opt stack 0
 15728                           tblptru	equ	0xFF8
 15729                           tblptrh	equ	0xFF7
 15730                           tblptrl	equ	0xFF6
 15731                           tablat	equ	0xFF5
 15732                           prodh	equ	0xFF4
 15733                           prodl	equ	0xFF3
 15734                           intcon	equ	0xFF2
 15735                           postinc0	equ	0xFEE
 15736                           wreg	equ	0xFE8
 15737                           indf1	equ	0xFE7
 15738                           plusw1	equ	0xFE3
 15739                           fsr1h	equ	0xFE2
 15740                           fsr1l	equ	0xFE1
 15741                           indf2	equ	0xFDF
 15742                           postinc2	equ	0xFDE
 15743                           plusw2	equ	0xFDB
 15744                           fsr2h	equ	0xFDA
 15745                           fsr2l	equ	0xFD9
 15746                           status	equ	0xFD8
 15747                           
 15748 ;; *************** function _delay_ms *****************
 15749 ;; Defined at:
 15750 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 15751 ;; Parameters:    Size  Location     Type
 15752 ;;  value_ms        2   24[BANK0 ] unsigned int 
 15753 ;; Auto vars:     Size  Location     Type
 15754 ;;		None
 15755 ;; Return value:  Size  Location     Type
 15756 ;;		None               void
 15757 ;; Registers used:
 15758 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15759 ;; Tracked objects:
 15760 ;;		On entry : 0/0
 15761 ;;		On exit  : 0/0
 15762 ;;		Unchanged: 0/0
 15763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15764 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15767 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15768 ;;Total ram usage:        2 bytes
 15769 ;; Hardware stack levels used:    1
 15770 ;; Hardware stack levels required when called:    4
 15771 ;; This function calls:
 15772 ;;		___wmul
 15773 ;; This function is called by:
 15774 ;;		_LCD_enable_pulse
 15775 ;;		_LCD_initialize
 15776 ;;		_main
 15777 ;;		_delay_s
 15778 ;; This function uses a non-reentrant model
 15779 ;;
 15780                           
 15781                           	psect	text43
 15782  015F3E                     __ptext43:
 15783                           	opt stack 0
 15784  015F3E                     _delay_ms:
 15785                           	opt stack 26
 15786                           
 15787                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 15788                           
 15789                           ;incstack = 0
 15790  015F3E  C0E8  F072         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 15791  015F42  0100               	movlb	0	; () banked
 15792  015F44  6B73               	clrf	(___wmul@multiplier+1)& (0+255),b
 15793  015F46  C078  F074         	movff	delay_ms@value_ms,___wmul@multiplicand
 15794  015F4A  C079  F075         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 15795  015F4E  ECD8  F0AF         	call	___wmul	;wreg free
 15796  015F52  C072  F0DA         	movff	?___wmul,_clock_counter_reference	;volatile
 15797  015F56  C073  F0DB         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 15798                           
 15799                           ;src\delay.c: 75: while (clock_counter_reference) {
 15800  015F5A  D007               	goto	l581
 15801  015F5C                     l7565:
 15802                           
 15803                           ;src\delay.c: 85: _delay(240);
 15804  015F5C  0E50               	movlw	80
 15805  015F5E                     u12447:
 15806  015F5E  2EE8               	decfsz	wreg,f,c
 15807  015F60  D7FE               	goto	u12447
 15808                           
 15809                           ;src\delay.c: 88: clock_counter_reference--;
 15810  015F62  0100               	movlb	0	; () banked
 15811  015F64  07DA               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 15812  015F66  A0D8               	btfss	status,0,c
 15813  015F68  07DB               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 15814  015F6A                     l581:
 15815  015F6A  0100               	movlb	0	; () banked
 15816  015F6C  51DA               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 15817  015F6E  0100               	movlb	0	; () banked
 15818  015F70  11DB               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 15819  015F72  B4D8               	btfsc	status,2,c
 15820  015F74  0012               	return	
 15821  015F76  D7F2               	goto	l7565
 15822  015F78                     __end_of_delay_ms:
 15823                           	opt stack 0
 15824                           tblptru	equ	0xFF8
 15825                           tblptrh	equ	0xFF7
 15826                           tblptrl	equ	0xFF6
 15827                           tablat	equ	0xFF5
 15828                           prodh	equ	0xFF4
 15829                           prodl	equ	0xFF3
 15830                           intcon	equ	0xFF2
 15831                           postinc0	equ	0xFEE
 15832                           wreg	equ	0xFE8
 15833                           indf1	equ	0xFE7
 15834                           plusw1	equ	0xFE3
 15835                           fsr1h	equ	0xFE2
 15836                           fsr1l	equ	0xFE1
 15837                           indf2	equ	0xFDF
 15838                           postinc2	equ	0xFDE
 15839                           plusw2	equ	0xFDB
 15840                           fsr2h	equ	0xFDA
 15841                           fsr2l	equ	0xFD9
 15842                           status	equ	0xFD8
 15843                           
 15844 ;; *************** function ___wmul *****************
 15845 ;; Defined at:
 15846 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 15847 ;; Parameters:    Size  Location     Type
 15848 ;;  multiplier      2   18[BANK0 ] unsigned int 
 15849 ;;  multiplicand    2   20[BANK0 ] unsigned int 
 15850 ;; Auto vars:     Size  Location     Type
 15851 ;;  product         2   22[BANK0 ] unsigned int 
 15852 ;; Return value:  Size  Location     Type
 15853 ;;                  2   18[BANK0 ] unsigned int 
 15854 ;; Registers used:
 15855 ;;		wreg, status,2, status,0, prodl, prodh
 15856 ;; Tracked objects:
 15857 ;;		On entry : 0/0
 15858 ;;		On exit  : 0/0
 15859 ;;		Unchanged: 0/0
 15860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15861 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15862 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15864 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15865 ;;Total ram usage:        6 bytes
 15866 ;; Hardware stack levels used:    1
 15867 ;; Hardware stack levels required when called:    3
 15868 ;; This function calls:
 15869 ;;		Nothing
 15870 ;; This function is called by:
 15871 ;;		_delay_ms
 15872 ;;		_sprintf
 15873 ;; This function uses a non-reentrant model
 15874 ;;
 15875                           
 15876                           	psect	text44
 15877  015FB0                     __ptext44:
 15878                           	opt stack 0
 15879  015FB0                     ___wmul:
 15880                           	opt stack 26
 15881                           
 15882                           ; BSR set to: 0
 15883                           ;incstack = 0
 15884  015FB0  0100               	movlb	0	; () banked
 15885  015FB2  5172               	movf	___wmul@multiplier& (0+255),w,b
 15886  015FB4  0100               	movlb	0	; () banked
 15887  015FB6  0374               	mulwf	___wmul@multiplicand& (0+255),b
 15888  015FB8  CFF3 F076          	movff	prodl,___wmul@product
 15889  015FBC  CFF4 F077          	movff	prodh,___wmul@product+1
 15890  015FC0  0100               	movlb	0	; () banked
 15891  015FC2  5172               	movf	___wmul@multiplier& (0+255),w,b
 15892  015FC4  0100               	movlb	0	; () banked
 15893  015FC6  0375               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 15894  015FC8  50F3               	movf	prodl,w,c
 15895  015FCA  0100               	movlb	0	; () banked
 15896  015FCC  2777               	addwf	(___wmul@product+1)& (0+255),f,b
 15897  015FCE  0100               	movlb	0	; () banked
 15898  015FD0  5173               	movf	(___wmul@multiplier+1)& (0+255),w,b
 15899  015FD2  0100               	movlb	0	; () banked
 15900  015FD4  0374               	mulwf	___wmul@multiplicand& (0+255),b
 15901  015FD6  50F3               	movf	prodl,w,c
 15902  015FD8  0100               	movlb	0	; () banked
 15903  015FDA  2777               	addwf	(___wmul@product+1)& (0+255),f,b
 15904                           
 15905                           ; BSR set to: 0
 15906  015FDC  C076  F072         	movff	___wmul@product,?___wmul
 15907  015FE0  C077  F073         	movff	___wmul@product+1,?___wmul+1
 15908  015FE4  0012               	return	
 15909  015FE6                     __end_of___wmul:
 15910                           	opt stack 0
 15911                           tblptru	equ	0xFF8
 15912                           tblptrh	equ	0xFF7
 15913                           tblptrl	equ	0xFF6
 15914                           tablat	equ	0xFF5
 15915                           prodh	equ	0xFF4
 15916                           prodl	equ	0xFF3
 15917                           intcon	equ	0xFF2
 15918                           postinc0	equ	0xFEE
 15919                           wreg	equ	0xFE8
 15920                           indf1	equ	0xFE7
 15921                           plusw1	equ	0xFE3
 15922                           fsr1h	equ	0xFE2
 15923                           fsr1l	equ	0xFE1
 15924                           indf2	equ	0xFDF
 15925                           postinc2	equ	0xFDE
 15926                           plusw2	equ	0xFDB
 15927                           fsr2h	equ	0xFDA
 15928                           fsr2l	equ	0xFD9
 15929                           status	equ	0xFD8
 15930                           
 15931 ;; *************** function _Joystick_Polling *****************
 15932 ;; Defined at:
 15933 ;;		line 450 in file "RemoteCan.c"
 15934 ;; Parameters:    Size  Location     Type
 15935 ;;		None
 15936 ;; Auto vars:     Size  Location     Type
 15937 ;;  i               1   19[BANK0 ] unsigned char 
 15938 ;; Return value:  Size  Location     Type
 15939 ;;		None               void
 15940 ;; Registers used:
 15941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15942 ;; Tracked objects:
 15943 ;;		On entry : 0/0
 15944 ;;		On exit  : 0/0
 15945 ;;		Unchanged: 0/0
 15946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15949 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15950 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15951 ;;Total ram usage:        2 bytes
 15952 ;; Hardware stack levels used:    1
 15953 ;; Hardware stack levels required when called:    3
 15954 ;; This function calls:
 15955 ;;		Nothing
 15956 ;; This function is called by:
 15957 ;;		_main
 15958 ;; This function uses a non-reentrant model
 15959 ;;
 15960                           
 15961                           	psect	text45
 15962  015D90                     __ptext45:
 15963                           	opt stack 0
 15964  015D90                     _Joystick_Polling:
 15965                           	opt stack 27
 15966                           
 15967                           ;RemoteCan.c: 451: for (unsigned char i = 0; i < 2; i++) {
 15968                           
 15969                           ; BSR set to: 0
 15970                           ;incstack = 0
 15971  015D90  0E00               	movlw	0
 15972  015D92  0100               	movlb	0	; () banked
 15973  015D94  6F73               	movwf	Joystick_Polling@i& (0+255),b
 15974  015D96                     l6935:
 15975                           
 15976                           ; BSR set to: 0
 15977  015D96  0E01               	movlw	1
 15978  015D98  0100               	movlb	0	; () banked
 15979  015D9A  6573               	cpfsgt	Joystick_Polling@i& (0+255),b
 15980  015D9C  D001               	goto	l881
 15981  015D9E  0012               	return	
 15982  015DA0                     l881:
 15983                           
 15984                           ; BSR set to: 0
 15985                           ;RemoteCan.c: 452: ADCON0bits.GO = 1;
 15986  015DA0  82C2               	bsf	4034,1,c	;volatile
 15987  015DA2                     l883:
 15988  015DA2  B2C2               	btfsc	4034,1,c	;volatile
 15989  015DA4  D7FE               	goto	l883
 15990                           
 15991                           ;RemoteCan.c: 454: JoystickValues[i] = ADRESH;
 15992  015DA6  0100               	movlb	0	; () banked
 15993  015DA8  5173               	movf	Joystick_Polling@i& (0+255),w,b
 15994  015DAA  0D01               	mullw	1
 15995  015DAC  0ED6               	movlw	low _JoystickValues
 15996  015DAE  24F3               	addwf	prodl,w,c
 15997  015DB0  6ED9               	movwf	fsr2l,c
 15998  015DB2  0E00               	movlw	high _JoystickValues
 15999  015DB4  20F4               	addwfc	prodh,w,c
 16000  015DB6  6EDA               	movwf	fsr2h,c
 16001  015DB8  CFC4 FFDF          	movff	4036,indf2	;volatile
 16002                           
 16003                           ; BSR set to: 0
 16004                           ;RemoteCan.c: 455: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 16005  015DBC  A4C2               	btfss	4034,2,c	;volatile
 16006  015DBE  D002               	goto	u8870
 16007  015DC0  0E01               	movlw	1
 16008  015DC2  D001               	goto	u8876
 16009  015DC4                     u8870:
 16010  015DC4  0E00               	movlw	0
 16011  015DC6                     u8876:
 16012  015DC6  0AFF               	xorlw	255
 16013  015DC8  0100               	movlb	0	; () banked
 16014  015DCA  6F72               	movwf	??_Joystick_Polling& (0+255),b
 16015  015DCC  0100               	movlb	0	; () banked
 16016  015DCE  4772               	rlncf	??_Joystick_Polling& (0+255),f,b
 16017  015DD0  4772               	rlncf	??_Joystick_Polling& (0+255),f,b
 16018  015DD2  50C2               	movf	4034,w,c	;volatile
 16019  015DD4  0100               	movlb	0	; () banked
 16020  015DD6  1972               	xorwf	??_Joystick_Polling& (0+255),w,b
 16021  015DD8  0BFB               	andlw	-5
 16022  015DDA  1972               	xorwf	??_Joystick_Polling& (0+255),w,b
 16023  015DDC  6EC2               	movwf	4034,c	;volatile
 16024                           
 16025                           ; BSR set to: 0
 16026  015DDE  0100               	movlb	0	; () banked
 16027  015DE0  2B73               	incf	Joystick_Polling@i& (0+255),f,b
 16028  015DE2  D7D9               	goto	l6935
 16029  015DE4                     __end_of_Joystick_Polling:
 16030                           	opt stack 0
 16031                           tblptru	equ	0xFF8
 16032                           tblptrh	equ	0xFF7
 16033                           tblptrl	equ	0xFF6
 16034                           tablat	equ	0xFF5
 16035                           prodh	equ	0xFF4
 16036                           prodl	equ	0xFF3
 16037                           intcon	equ	0xFF2
 16038                           postinc0	equ	0xFEE
 16039                           wreg	equ	0xFE8
 16040                           indf1	equ	0xFE7
 16041                           plusw1	equ	0xFE3
 16042                           fsr1h	equ	0xFE2
 16043                           fsr1l	equ	0xFE1
 16044                           indf2	equ	0xFDF
 16045                           postinc2	equ	0xFDE
 16046                           plusw2	equ	0xFDB
 16047                           fsr2h	equ	0xFDA
 16048                           fsr2l	equ	0xFD9
 16049                           status	equ	0xFD8
 16050                           
 16051 ;; *************** function _F2_Button_Polling *****************
 16052 ;; Defined at:
 16053 ;;		line 440 in file "RemoteCan.c"
 16054 ;; Parameters:    Size  Location     Type
 16055 ;;		None
 16056 ;; Auto vars:     Size  Location     Type
 16057 ;;		None
 16058 ;; Return value:  Size  Location     Type
 16059 ;;		None               void
 16060 ;; Registers used:
 16061 ;;		None
 16062 ;; Tracked objects:
 16063 ;;		On entry : 0/0
 16064 ;;		On exit  : 0/0
 16065 ;;		Unchanged: 0/0
 16066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16071 ;;Total ram usage:        0 bytes
 16072 ;; Hardware stack levels used:    1
 16073 ;; Hardware stack levels required when called:    3
 16074 ;; This function calls:
 16075 ;;		Nothing
 16076 ;; This function is called by:
 16077 ;;		_main
 16078 ;; This function uses a non-reentrant model
 16079 ;;
 16080                           
 16081                           	psect	text46
 16082  01616A                     __ptext46:
 16083                           	opt stack 0
 16084  01616A                     _F2_Button_Polling:
 16085                           	opt stack 27
 16086                           
 16087                           ;RemoteCan.c: 441: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 16088                           
 16089                           ; BSR set to: 0
 16090                           ;incstack = 0
 16091  01616A  A281               	btfss	3969,1,c	;volatile
 16092  01616C  D002               	goto	l876
 16093  01616E  B84C               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16094  016170  0012               	return	
 16095  016172                     l876:
 16096                           
 16097                           ;RemoteCan.c: 442: wait_low_3 = 0;
 16098  016172  984C               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16099                           
 16100                           ;RemoteCan.c: 443: if (PORTBbits.RB1 == 1) {
 16101  016174  A281               	btfss	3969,1,c	;volatile
 16102  016176  0012               	return	
 16103                           
 16104                           ;RemoteCan.c: 444: F2_switch = ~F2_switch;
 16105  016178  B44B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16106  01617A  D002               	goto	u8800
 16107  01617C  844B               	bsf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16108  01617E  D001               	goto	u8815
 16109  016180                     u8800:
 16110  016180  944B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16111  016182                     u8815:
 16112                           
 16113                           ;RemoteCan.c: 445: wait_low_3 = 1;
 16114  016182  884C               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16115  016184  0012               	return	
 16116  016186                     __end_of_F2_Button_Polling:
 16117                           	opt stack 0
 16118                           tblptru	equ	0xFF8
 16119                           tblptrh	equ	0xFF7
 16120                           tblptrl	equ	0xFF6
 16121                           tablat	equ	0xFF5
 16122                           prodh	equ	0xFF4
 16123                           prodl	equ	0xFF3
 16124                           intcon	equ	0xFF2
 16125                           postinc0	equ	0xFEE
 16126                           wreg	equ	0xFE8
 16127                           indf1	equ	0xFE7
 16128                           plusw1	equ	0xFE3
 16129                           fsr1h	equ	0xFE2
 16130                           fsr1l	equ	0xFE1
 16131                           indf2	equ	0xFDF
 16132                           postinc2	equ	0xFDE
 16133                           plusw2	equ	0xFDB
 16134                           fsr2h	equ	0xFDA
 16135                           fsr2l	equ	0xFD9
 16136                           status	equ	0xFD8
 16137                           
 16138 ;; *************** function _F1_Button_Polling *****************
 16139 ;; Defined at:
 16140 ;;		line 430 in file "RemoteCan.c"
 16141 ;; Parameters:    Size  Location     Type
 16142 ;;		None
 16143 ;; Auto vars:     Size  Location     Type
 16144 ;;		None
 16145 ;; Return value:  Size  Location     Type
 16146 ;;		None               void
 16147 ;; Registers used:
 16148 ;;		None
 16149 ;; Tracked objects:
 16150 ;;		On entry : 0/0
 16151 ;;		On exit  : 0/0
 16152 ;;		Unchanged: 0/0
 16153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16158 ;;Total ram usage:        0 bytes
 16159 ;; Hardware stack levels used:    1
 16160 ;; Hardware stack levels required when called:    3
 16161 ;; This function calls:
 16162 ;;		Nothing
 16163 ;; This function is called by:
 16164 ;;		_main
 16165 ;; This function uses a non-reentrant model
 16166 ;;
 16167                           
 16168                           	psect	text47
 16169  016186                     __ptext47:
 16170                           	opt stack 0
 16171  016186                     _F1_Button_Polling:
 16172                           	opt stack 27
 16173                           
 16174                           ;RemoteCan.c: 431: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 16175                           
 16176                           ;incstack = 0
 16177  016186  A881               	btfss	3969,4,c	;volatile
 16178  016188  D002               	goto	l869
 16179  01618A  B64C               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16180  01618C  0012               	return	
 16181  01618E                     l869:
 16182                           
 16183                           ;RemoteCan.c: 432: wait_low_2 = 0;
 16184  01618E  964C               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16185                           
 16186                           ;RemoteCan.c: 433: if (PORTBbits.RB4 == 1) {
 16187  016190  A881               	btfss	3969,4,c	;volatile
 16188  016192  0012               	return	
 16189                           
 16190                           ;RemoteCan.c: 434: F1_switch = ~F1_switch;
 16191  016194  B24B               	btfsc	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16192  016196  D002               	goto	u8750
 16193  016198  824B               	bsf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16194  01619A  D001               	goto	u8765
 16195  01619C                     u8750:
 16196  01619C  924B               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16197  01619E                     u8765:
 16198                           
 16199                           ;RemoteCan.c: 435: wait_low_2 = 1;
 16200  01619E  864C               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16201  0161A0  0012               	return	
 16202  0161A2                     __end_of_F1_Button_Polling:
 16203                           	opt stack 0
 16204                           tblptru	equ	0xFF8
 16205                           tblptrh	equ	0xFF7
 16206                           tblptrl	equ	0xFF6
 16207                           tablat	equ	0xFF5
 16208                           prodh	equ	0xFF4
 16209                           prodl	equ	0xFF3
 16210                           intcon	equ	0xFF2
 16211                           postinc0	equ	0xFEE
 16212                           wreg	equ	0xFE8
 16213                           indf1	equ	0xFE7
 16214                           plusw1	equ	0xFE3
 16215                           fsr1h	equ	0xFE2
 16216                           fsr1l	equ	0xFE1
 16217                           indf2	equ	0xFDF
 16218                           postinc2	equ	0xFDE
 16219                           plusw2	equ	0xFDB
 16220                           fsr2h	equ	0xFDA
 16221                           fsr2l	equ	0xFD9
 16222                           status	equ	0xFD8
 16223                           
 16224 ;; *************** function _CAN_interpreter *****************
 16225 ;; Defined at:
 16226 ;;		line 386 in file "RemoteCan.c"
 16227 ;; Parameters:    Size  Location     Type
 16228 ;;		None
 16229 ;; Auto vars:     Size  Location     Type
 16230 ;;		None
 16231 ;; Return value:  Size  Location     Type
 16232 ;;		None               void
 16233 ;; Registers used:
 16234 ;;		wreg, status,2, status,0
 16235 ;; Tracked objects:
 16236 ;;		On entry : 0/0
 16237 ;;		On exit  : 0/0
 16238 ;;		Unchanged: 0/0
 16239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16242 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16243 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16244 ;;Total ram usage:        4 bytes
 16245 ;; Hardware stack levels used:    1
 16246 ;; Hardware stack levels required when called:    3
 16247 ;; This function calls:
 16248 ;;		Nothing
 16249 ;; This function is called by:
 16250 ;;		_main
 16251 ;; This function uses a non-reentrant model
 16252 ;;
 16253                           
 16254                           	psect	text48
 16255  015996                     __ptext48:
 16256                           	opt stack 0
 16257  015996                     _CAN_interpreter:
 16258                           	opt stack 27
 16259                           
 16260                           ;RemoteCan.c: 387: if (id == 0b00000000010) {
 16261                           
 16262                           ;incstack = 0
 16263  015996  0E02               	movlw	2
 16264  015998  1812               	xorwf	_id,w,c	;volatile
 16265  01599A  1013               	iorwf	_id+1,w,c	;volatile
 16266  01599C  1014               	iorwf	_id+2,w,c	;volatile
 16267  01599E  1015               	iorwf	_id+3,w,c	;volatile
 16268  0159A0  A4D8               	btfss	status,2,c
 16269  0159A2  D015               	goto	l6963
 16270                           
 16271                           ;RemoteCan.c: 388: if (RTR_Flag == 1) {
 16272  0159A4  A84B               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 16273  0159A6  D00C               	goto	l6953
 16274                           
 16275                           ;RemoteCan.c: 389: pr_time_4 = time_counter;
 16276  0159A8  C022  F01A         	movff	_time_counter,_pr_time_4	;volatile
 16277  0159AC  C023  F01B         	movff	_time_counter+1,_pr_time_4+1	;volatile
 16278  0159B0  C024  F01C         	movff	_time_counter+2,_pr_time_4+2	;volatile
 16279  0159B4  C025  F01D         	movff	_time_counter+3,_pr_time_4+3	;volatile
 16280                           
 16281                           ;RemoteCan.c: 390: MotoreFlag = 1;
 16282  0159B8  864B               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 16283                           
 16284                           ;RemoteCan.c: 391: AbsFlag = 0;
 16285  0159BA  904B               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 16286                           
 16287                           ;RemoteCan.c: 392: SterzoFlag = 0;
 16288  0159BC  9A4B               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 16289                           
 16290                           ;RemoteCan.c: 393: } else {
 16291  0159BE  D007               	goto	l6963
 16292  0159C0                     l6953:
 16293                           
 16294                           ;RemoteCan.c: 394: if (data[0] == 0x01) {
 16295  0159C0  042C               	decf	_data,w,c
 16296  0159C2  B4D8               	btfsc	status,2,c
 16297                           
 16298                           ;RemoteCan.c: 395: AbsFlag = 1;
 16299  0159C4  804B               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 16300                           
 16301                           ;RemoteCan.c: 396: }
 16302                           ;RemoteCan.c: 397: if (data[0] == 0x02) {
 16303  0159C6  0E02               	movlw	2
 16304  0159C8  182C               	xorwf	_data,w,c
 16305  0159CA  B4D8               	btfsc	status,2,c
 16306                           
 16307                           ;RemoteCan.c: 398: SterzoFlag = 1;
 16308  0159CC  8A4B               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 16309  0159CE                     l6963:
 16310                           
 16311                           ;RemoteCan.c: 405: }
 16312                           ;RemoteCan.c: 407: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 16313  0159CE  0E06               	movlw	6
 16314  0159D0  1812               	xorwf	_id,w,c	;volatile
 16315  0159D2  1013               	iorwf	_id+1,w,c	;volatile
 16316  0159D4  1014               	iorwf	_id+2,w,c	;volatile
 16317  0159D6  1015               	iorwf	_id+3,w,c	;volatile
 16318  0159D8  B4D8               	btfsc	status,2,c
 16319  0159DA  B84B               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 16320  0159DC  D027               	goto	l6975
 16321                           
 16322                           ;RemoteCan.c: 408: left_speed = data_speed_rx[1];
 16323  0159DE  C002  F026         	movff	_data_speed_rx+1,_left_speed
 16324  0159E2  6A27               	clrf	_left_speed+1,c
 16325                           
 16326                           ;RemoteCan.c: 409: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 16327  0159E4  5026               	movf	_left_speed,w,c
 16328  0159E6  0100               	movlb	0	; () banked
 16329  0159E8  6F72               	movwf	??_CAN_interpreter& (0+255),b
 16330  0159EA  5001               	movf	_data_speed_rx,w,c
 16331  0159EC  6E26               	movwf	_left_speed,c
 16332  0159EE  C072  F027         	movff	??_CAN_interpreter,_left_speed+1
 16333                           
 16334                           ; BSR set to: 0
 16335                           ;RemoteCan.c: 410: right_speed = data_speed_rx[3];
 16336  0159F2  C004  F028         	movff	_data_speed_rx+3,_right_speed
 16337  0159F6  6A29               	clrf	_right_speed+1,c
 16338                           
 16339                           ;RemoteCan.c: 411: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 16340  0159F8  5028               	movf	_right_speed,w,c
 16341  0159FA  0100               	movlb	0	; () banked
 16342  0159FC  6F72               	movwf	??_CAN_interpreter& (0+255),b
 16343  0159FE  5003               	movf	_data_speed_rx+2,w,c
 16344  015A00  6E28               	movwf	_right_speed,c
 16345  015A02  C072  F029         	movff	??_CAN_interpreter,_right_speed+1
 16346                           
 16347                           ; BSR set to: 0
 16348                           ;RemoteCan.c: 412: actual_speed = (right_speed + left_speed) / 2;
 16349  015A06  5026               	movf	_left_speed,w,c
 16350  015A08  2428               	addwf	_right_speed,w,c
 16351  015A0A  0100               	movlb	0	; () banked
 16352  015A0C  6F72               	movwf	??_CAN_interpreter& (0+255),b
 16353  015A0E  5027               	movf	_left_speed+1,w,c
 16354  015A10  2029               	addwfc	_right_speed+1,w,c
 16355  015A12  0100               	movlb	0	; () banked
 16356  015A14  6F73               	movwf	(??_CAN_interpreter+1)& (0+255),b
 16357  015A16  90D8               	bcf	status,0,c
 16358  015A18  0100               	movlb	0	; () banked
 16359  015A1A  3173               	rrcf	(??_CAN_interpreter+1)& (0+255),w,b
 16360  015A1C  0100               	movlb	0	; () banked
 16361  015A1E  6F74               	movwf	(??_CAN_interpreter+2)& (0+255),b
 16362  015A20  0100               	movlb	0	; () banked
 16363  015A22  3172               	rrcf	??_CAN_interpreter& (0+255),w,b
 16364  015A24  0100               	movlb	0	; () banked
 16365  015A26  6FD8               	movwf	_actual_speed& (0+255),b
 16366  015A28  C074  F0D9         	movff	??_CAN_interpreter+2,_actual_speed+1
 16367  015A2C                     l6975:
 16368                           
 16369                           ;RemoteCan.c: 413: }
 16370                           ;RemoteCan.c: 415: if (id == 0b00000001001) {
 16371  015A2C  0E09               	movlw	9
 16372  015A2E  1812               	xorwf	_id,w,c	;volatile
 16373  015A30  1013               	iorwf	_id+1,w,c	;volatile
 16374  015A32  1014               	iorwf	_id+2,w,c	;volatile
 16375  015A34  1015               	iorwf	_id+3,w,c	;volatile
 16376  015A36  A4D8               	btfss	status,2,c
 16377  015A38  0012               	return	
 16378                           
 16379                           ;RemoteCan.c: 416: battery = data[0];
 16380  015A3A  C02C  F02A         	movff	_data,_battery	;volatile
 16381  015A3E  0012               	return	
 16382  015A40                     __end_of_CAN_interpreter:
 16383                           	opt stack 0
 16384                           tblptru	equ	0xFF8
 16385                           tblptrh	equ	0xFF7
 16386                           tblptrl	equ	0xFF6
 16387                           tablat	equ	0xFF5
 16388                           prodh	equ	0xFF4
 16389                           prodl	equ	0xFF3
 16390                           intcon	equ	0xFF2
 16391                           postinc0	equ	0xFEE
 16392                           wreg	equ	0xFE8
 16393                           indf1	equ	0xFE7
 16394                           plusw1	equ	0xFE3
 16395                           fsr1h	equ	0xFE2
 16396                           fsr1l	equ	0xFE1
 16397                           indf2	equ	0xFDF
 16398                           postinc2	equ	0xFDE
 16399                           plusw2	equ	0xFDB
 16400                           fsr2h	equ	0xFDA
 16401                           fsr2l	equ	0xFD9
 16402                           status	equ	0xFD8
 16403                           
 16404 ;; *************** function _CAN_Send *****************
 16405 ;; Defined at:
 16406 ;;		line 307 in file "RemoteCan.c"
 16407 ;; Parameters:    Size  Location     Type
 16408 ;;		None
 16409 ;; Auto vars:     Size  Location     Type
 16410 ;;		None
 16411 ;; Return value:  Size  Location     Type
 16412 ;;		None               void
 16413 ;; Registers used:
 16414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16415 ;; Tracked objects:
 16416 ;;		On entry : 0/0
 16417 ;;		On exit  : 0/0
 16418 ;;		Unchanged: 0/0
 16419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16424 ;;Total ram usage:        0 bytes
 16425 ;; Hardware stack levels used:    1
 16426 ;; Hardware stack levels required when called:    4
 16427 ;; This function calls:
 16428 ;;		_CANisTxReady
 16429 ;;		_CANsendMessage
 16430 ;; This function is called by:
 16431 ;;		_main
 16432 ;; This function uses a non-reentrant model
 16433 ;;
 16434                           
 16435                           	psect	text49
 16436  0158DC                     __ptext49:
 16437                           	opt stack 0
 16438  0158DC                     _CAN_Send:
 16439                           	opt stack 26
 16440  0158DC                     l6915:
 16441  0158DC  EC67  F0B0         	call	_CANisTxReady	;wreg free
 16442  0158E0  06E8               	decf	wreg,f,c
 16443  0158E2  A4D8               	btfss	status,2,c
 16444  0158E4  D7FB               	goto	l6915
 16445                           
 16446                           ;RemoteCan.c: 309: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 16447  0158E6  0E05               	movlw	5
 16448  0158E8  0100               	movlb	0	; () banked
 16449  0158EA  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 16450  0158EC  0E00               	movlw	0
 16451  0158EE  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16452  0158F0  0E00               	movlw	0
 16453  0158F2  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16454  0158F4  0E00               	movlw	0
 16455  0158F6  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16456  0158F8  0EE7               	movlw	low _data_steering
 16457  0158FA  0100               	movlb	0	; () banked
 16458  0158FC  6F76               	movwf	CANsendMessage@data& (0+255),b
 16459  0158FE  0E00               	movlw	high _data_steering
 16460  015900  0100               	movlb	0	; () banked
 16461  015902  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 16462  015904  0E08               	movlw	8
 16463  015906  0100               	movlb	0	; () banked
 16464  015908  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 16465  01590A  0EBC               	movlw	188
 16466  01590C  0100               	movlb	0	; () banked
 16467  01590E  6F79               	movwf	CANsendMessage@flags& (0+255),b
 16468  015910  ECCD  F089         	call	_CANsendMessage	;wreg free
 16469                           
 16470                           ;RemoteCan.c: 310: data_speed[0] = set_speed;
 16471  015914  C0DC  F0E6         	movff	_set_speed,_data_speed	;volatile
 16472                           
 16473                           ;RemoteCan.c: 311: data_speed[1] = (set_speed >> 8);
 16474  015918  0100               	movlb	0	; () banked
 16475  01591A  51DD               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 16476  01591C  0100               	movlb	0	; () banked
 16477  01591E  6FE7               	movwf	(_data_speed+1)& (0+255),b
 16478                           
 16479                           ; BSR set to: 0
 16480                           ;RemoteCan.c: 312: data_speed[2] = dir;
 16481  015920  C0E0  F0E8         	movff	_dir,_data_speed+2	;volatile
 16482  015924                     l6925:
 16483  015924  EC67  F0B0         	call	_CANisTxReady	;wreg free
 16484  015928  06E8               	decf	wreg,f,c
 16485  01592A  A4D8               	btfss	status,2,c
 16486  01592C  D7FB               	goto	l6925
 16487                           
 16488                           ;RemoteCan.c: 314: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 16489  01592E  0E03               	movlw	3
 16490  015930  0100               	movlb	0	; () banked
 16491  015932  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 16492  015934  0E00               	movlw	0
 16493  015936  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16494  015938  0E00               	movlw	0
 16495  01593A  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16496  01593C  0E00               	movlw	0
 16497  01593E  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16498  015940  0EE6               	movlw	low _data_speed
 16499  015942  0100               	movlb	0	; () banked
 16500  015944  6F76               	movwf	CANsendMessage@data& (0+255),b
 16501  015946  0E00               	movlw	high _data_speed
 16502  015948  0100               	movlb	0	; () banked
 16503  01594A  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 16504  01594C  0E08               	movlw	8
 16505  01594E  0100               	movlb	0	; () banked
 16506  015950  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 16507  015952  0EBC               	movlw	188
 16508  015954  0100               	movlb	0	; () banked
 16509  015956  6F79               	movwf	CANsendMessage@flags& (0+255),b
 16510  015958  ECCD  F089         	call	_CANsendMessage	;wreg free
 16511  01595C                     l6929:
 16512  01595C  EC67  F0B0         	call	_CANisTxReady	;wreg free
 16513  015960  06E8               	decf	wreg,f,c
 16514  015962  A4D8               	btfss	status,2,c
 16515  015964  D7FB               	goto	l6929
 16516                           
 16517                           ;RemoteCan.c: 316: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_1);
 16518  015966  0E04               	movlw	4
 16519  015968  0100               	movlb	0	; () banked
 16520  01596A  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 16521  01596C  0E00               	movlw	0
 16522  01596E  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16523  015970  0E00               	movlw	0
 16524  015972  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16525  015974  0E00               	movlw	0
 16526  015976  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16527  015978  0EE5               	movlw	low _data_brake
 16528  01597A  0100               	movlb	0	; () banked
 16529  01597C  6F76               	movwf	CANsendMessage@data& (0+255),b
 16530  01597E  0E00               	movlw	high _data_brake
 16531  015980  0100               	movlb	0	; () banked
 16532  015982  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 16533  015984  0E08               	movlw	8
 16534  015986  0100               	movlb	0	; () banked
 16535  015988  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 16536  01598A  0EBD               	movlw	189
 16537  01598C  0100               	movlb	0	; () banked
 16538  01598E  6F79               	movwf	CANsendMessage@flags& (0+255),b
 16539  015990  ECCD  F089         	call	_CANsendMessage	;wreg free
 16540  015994  0012               	return		;funcret
 16541  015996                     __end_of_CAN_Send:
 16542                           	opt stack 0
 16543                           tblptru	equ	0xFF8
 16544                           tblptrh	equ	0xFF7
 16545                           tblptrl	equ	0xFF6
 16546                           tablat	equ	0xFF5
 16547                           prodh	equ	0xFF4
 16548                           prodl	equ	0xFF3
 16549                           intcon	equ	0xFF2
 16550                           postinc0	equ	0xFEE
 16551                           wreg	equ	0xFE8
 16552                           indf1	equ	0xFE7
 16553                           plusw1	equ	0xFE3
 16554                           fsr1h	equ	0xFE2
 16555                           fsr1l	equ	0xFE1
 16556                           indf2	equ	0xFDF
 16557                           postinc2	equ	0xFDE
 16558                           plusw2	equ	0xFDB
 16559                           fsr2h	equ	0xFDA
 16560                           fsr2l	equ	0xFD9
 16561                           status	equ	0xFD8
 16562                           
 16563 ;; *************** function _CANsendMessage *****************
 16564 ;; Defined at:
 16565 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 16566 ;; Parameters:    Size  Location     Type
 16567 ;;  identifier      4   18[BANK0 ] unsigned long 
 16568 ;;  data            2   22[BANK0 ] PTR unsigned char 
 16569 ;;		 -> data_speed(1), park_assist_state(8), data_brake(1), data_steering(1), 
 16570 ;;		 -> data(1), 
 16571 ;;  dataLength      1   24[BANK0 ] unsigned char 
 16572 ;;  flags           1   25[BANK0 ] enum E16909
 16573 ;; Auto vars:     Size  Location     Type
 16574 ;;  tamp            4   30[BANK0 ] unsigned long 
 16575 ;; Return value:  Size  Location     Type
 16576 ;;		None               void
 16577 ;; Registers used:
 16578 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16579 ;; Tracked objects:
 16580 ;;		On entry : 0/0
 16581 ;;		On exit  : 0/0
 16582 ;;		Unchanged: 0/0
 16583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16584 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16585 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16586 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16587 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16588 ;;Total ram usage:       16 bytes
 16589 ;; Hardware stack levels used:    1
 16590 ;; Hardware stack levels required when called:    3
 16591 ;; This function calls:
 16592 ;;		Nothing
 16593 ;; This function is called by:
 16594 ;;		_main
 16595 ;;		_CAN_Send
 16596 ;;		_LCD_Handler
 16597 ;; This function uses a non-reentrant model
 16598 ;;
 16599                           
 16600                           	psect	text50
 16601  01139A                     __ptext50:
 16602                           	opt stack 0
 16603  01139A                     _CANsendMessage:
 16604                           	opt stack 26
 16605                           
 16606                           ;inc\CANlib.h: 296: unsigned long tamp;
 16607                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 16608                           
 16609                           ;incstack = 0
 16610  01139A  010F               	movlb	15	; () banked
 16611  01139C  B740               	btfsc	64,3,b	;volatile
 16612  01139E  D13F               	goto	l375
 16613                           
 16614                           ; BSR set to: 15
 16615                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 16616  0113A0  C078  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 16617                           
 16618                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 16619  0113A4  0100               	movlb	0	; () banked
 16620  0113A6  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 16621  0113A8  D003               	goto	l376
 16622                           
 16623                           ; BSR set to: 0
 16624                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 16625  0113AA  010F               	movlb	15	; () banked
 16626  0113AC  8D45               	bsf	69,6,b	;volatile
 16627  0113AE  D002               	goto	l377
 16628  0113B0                     l376:
 16629                           
 16630                           ; BSR set to: 0
 16631                           ;inc\CANlib.h: 302: else
 16632                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 16633  0113B0  010F               	movlb	15	; () banked
 16634  0113B2  9D45               	bcf	69,6,b	;volatile
 16635  0113B4                     l377:
 16636                           
 16637                           ; BSR set to: 15
 16638                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 16639  0113B4  0100               	movlb	0	; () banked
 16640  0113B6  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 16641  0113B8  D079               	goto	l378
 16642                           
 16643                           ; BSR set to: 0
 16644                           ;inc\CANlib.h: 306: {
 16645                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 16646  0113BA  0100               	movlb	0	; () banked
 16647  0113BC  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 16648  0113BE  0100               	movlb	0	; () banked
 16649  0113C0  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16650  0113C2  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16651  0113C4  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16652  0113C6  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16653                           
 16654                           ; BSR set to: 0
 16655                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 16656  0113C8  C07E  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 16657                           
 16658                           ; BSR set to: 0
 16659                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 16660  0113CC  0E00               	movlw	0
 16661  0113CE  0100               	movlb	0	; () banked
 16662  0113D0  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 16663  0113D2  0100               	movlb	0	; () banked
 16664  0113D4  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16665  0113D6  0EFF               	movlw	255
 16666  0113D8  0100               	movlb	0	; () banked
 16667  0113DA  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16668  0113DC  0100               	movlb	0	; () banked
 16669  0113DE  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16670  0113E0  0E00               	movlw	0
 16671  0113E2  0100               	movlb	0	; () banked
 16672  0113E4  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16673  0113E6  0100               	movlb	0	; () banked
 16674  0113E8  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16675  0113EA  0E00               	movlw	0
 16676  0113EC  0100               	movlb	0	; () banked
 16677  0113EE  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16678  0113F0  0100               	movlb	0	; () banked
 16679  0113F2  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16680                           
 16681                           ; BSR set to: 0
 16682                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 16683  0113F4  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 16684  0113F8  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16685  0113FC  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16686  011400  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16687  011404  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 16688  011408  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16689  01140C  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16690  011410  0100               	movlb	0	; () banked
 16691  011412  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 16692  011414  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16693  011418  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16694  01141C  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16695  011420  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16696                           
 16697                           ; BSR set to: 0
 16698                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 16699  011424  C07E  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 16700                           
 16701                           ; BSR set to: 0
 16702                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 16703  011428  0E00               	movlw	0
 16704  01142A  010F               	movlb	15	; () banked
 16705  01142C  6F42               	movwf	66,b	;volatile
 16706                           
 16707                           ; BSR set to: 15
 16708                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 16709  01142E  010F               	movlb	15	; () banked
 16710  011430  8742               	bsf	66,3,b	;volatile
 16711                           
 16712                           ; BSR set to: 15
 16713                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 16714  011432  0100               	movlb	0	; () banked
 16715  011434  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16716  011436  D002               	goto	l379
 16717                           
 16718                           ; BSR set to: 0
 16719                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 16720  011438  010F               	movlb	15	; () banked
 16721  01143A  8142               	bsf	66,0,b	;volatile
 16722  01143C                     l379:
 16723                           
 16724                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 16725  01143C  0100               	movlb	0	; () banked
 16726  01143E  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16727  011440  D002               	goto	l380
 16728                           
 16729                           ; BSR set to: 0
 16730                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 16731  011442  010F               	movlb	15	; () banked
 16732  011444  8342               	bsf	66,1,b	;volatile
 16733  011446                     l380:
 16734                           
 16735                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 16736  011446  0100               	movlb	0	; () banked
 16737  011448  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16738  01144A  D002               	goto	l381
 16739                           
 16740                           ; BSR set to: 0
 16741                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 16742  01144C  010F               	movlb	15	; () banked
 16743  01144E  8B42               	bsf	66,5,b	;volatile
 16744  011450                     l381:
 16745                           
 16746                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 16747  011450  0100               	movlb	0	; () banked
 16748  011452  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16749  011454  D002               	goto	l382
 16750                           
 16751                           ; BSR set to: 0
 16752                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 16753  011456  010F               	movlb	15	; () banked
 16754  011458  8D42               	bsf	66,6,b	;volatile
 16755  01145A                     l382:
 16756                           
 16757                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 16758  01145A  0100               	movlb	0	; () banked
 16759  01145C  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16760  01145E  D002               	goto	l6043
 16761                           
 16762                           ; BSR set to: 0
 16763                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 16764  011460  010F               	movlb	15	; () banked
 16765  011462  8F42               	bsf	66,7,b	;volatile
 16766  011464                     l6043:
 16767                           
 16768                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 16769  011464  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 16770  011468  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16771  01146C  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16772  011470  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16773  011474  0E16               	movlw	22
 16774  011476  D006               	goto	u7440
 16775  011478                     u7445:
 16776  011478  0100               	movlb	0	; () banked
 16777  01147A  90D8               	bcf	status,0,c
 16778  01147C  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16779  01147E  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16780  011480  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16781  011482  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 16782  011484                     u7440:
 16783  011484  2EE8               	decfsz	wreg,f,c
 16784  011486  D7F8               	goto	u7445
 16785  011488  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16786  01148C  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16787  011490  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16788  011494  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16789                           
 16790                           ; BSR set to: 0
 16791                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 16792  011498  0100               	movlb	0	; () banked
 16793  01149A  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 16794  01149C  0100               	movlb	0	; () banked
 16795  01149E  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16796  0114A0  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16797  0114A2  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16798  0114A4  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16799                           
 16800                           ; BSR set to: 0
 16801                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 16802  0114A6  C07E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 16803                           
 16804                           ;inc\CANlib.h: 332: }
 16805  0114AA  D059               	goto	l6063
 16806  0114AC                     l378:
 16807                           
 16808                           ; BSR set to: 0
 16809                           ;inc\CANlib.h: 334: else
 16810                           ;inc\CANlib.h: 336: {
 16811                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 16812  0114AC  010F               	movlb	15	; () banked
 16813  0114AE  9742               	bcf	66,3,b	;volatile
 16814                           
 16815                           ; BSR set to: 15
 16816                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 16817  0114B0  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 16818  0114B4  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16819  0114B8  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16820  0114BC  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16821  0114C0  0E04               	movlw	4
 16822  0114C2  D006               	goto	u7450
 16823  0114C4                     u7455:
 16824  0114C4  0100               	movlb	0	; () banked
 16825  0114C6  90D8               	bcf	status,0,c
 16826  0114C8  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16827  0114CA  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16828  0114CC  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16829  0114CE  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 16830  0114D0                     u7450:
 16831  0114D0  2EE8               	decfsz	wreg,f,c
 16832  0114D2  D7F8               	goto	u7455
 16833  0114D4  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16834  0114D8  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16835  0114DC  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16836  0114E0  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16837                           
 16838                           ; BSR set to: 0
 16839                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 16840  0114E4  0100               	movlb	0	; () banked
 16841  0114E6  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 16842  0114E8  0100               	movlb	0	; () banked
 16843  0114EA  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16844  0114EC  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16845  0114EE  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16846  0114F0  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16847                           
 16848                           ; BSR set to: 0
 16849                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 16850  0114F2  C07E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 16851                           
 16852                           ; BSR set to: 0
 16853                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 16854  0114F6  0E07               	movlw	7
 16855  0114F8  0100               	movlb	0	; () banked
 16856  0114FA  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 16857  0114FC  0100               	movlb	0	; () banked
 16858  0114FE  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16859  011500  0E00               	movlw	0
 16860  011502  0100               	movlb	0	; () banked
 16861  011504  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16862  011506  0100               	movlb	0	; () banked
 16863  011508  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16864  01150A  0E00               	movlw	0
 16865  01150C  0100               	movlb	0	; () banked
 16866  01150E  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16867  011510  0100               	movlb	0	; () banked
 16868  011512  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16869  011514  0E00               	movlw	0
 16870  011516  0100               	movlb	0	; () banked
 16871  011518  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16872  01151A  0100               	movlb	0	; () banked
 16873  01151C  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16874                           
 16875                           ; BSR set to: 0
 16876                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 16877  01151E  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 16878  011522  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16879  011526  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16880  01152A  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16881  01152E  0E05               	movlw	5
 16882  011530                     u7465:
 16883  011530  90D8               	bcf	status,0,c
 16884  011532  0100               	movlb	0	; () banked
 16885  011534  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 16886  011536  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 16887  011538  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 16888  01153A  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 16889  01153C  2EE8               	decfsz	wreg,f,c
 16890  01153E  D7F8               	goto	u7465
 16891  011540  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16892  011544  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16893  011548  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16894  01154C  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16895                           
 16896                           ; BSR set to: 0
 16897                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 16898  011550  010F               	movlb	15	; () banked
 16899  011552  5142               	movf	66,w,b	;volatile
 16900  011554  0B1F               	andlw	31
 16901  011556  010F               	movlb	15	; () banked
 16902  011558  6F42               	movwf	66,b	;volatile
 16903                           
 16904                           ; BSR set to: 15
 16905                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 16906  01155A  C07E  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 16907  01155E                     l6063:
 16908                           
 16909                           ;inc\CANlib.h: 347: }
 16910                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 16911  01155E  0100               	movlb	0	; () banked
 16912  011560  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 16913  011562  D003               	goto	l385
 16914                           
 16915                           ; BSR set to: 0
 16916                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 16917  011564  010F               	movlb	15	; () banked
 16918  011566  8140               	bsf	64,0,b	;volatile
 16919  011568  D002               	goto	l386
 16920  01156A                     l385:
 16921                           
 16922                           ; BSR set to: 0
 16923                           ;inc\CANlib.h: 351: else
 16924                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 16925  01156A  010F               	movlb	15	; () banked
 16926  01156C  9140               	bcf	64,0,b	;volatile
 16927  01156E                     l386:
 16928                           
 16929                           ; BSR set to: 15
 16930                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 16931  01156E  0100               	movlb	0	; () banked
 16932  011570  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 16933  011572  D003               	goto	l387
 16934                           
 16935                           ; BSR set to: 0
 16936                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 16937  011574  010F               	movlb	15	; () banked
 16938  011576  8340               	bsf	64,1,b	;volatile
 16939  011578  D002               	goto	l6069
 16940  01157A                     l387:
 16941                           
 16942                           ; BSR set to: 0
 16943                           ;inc\CANlib.h: 355: else
 16944                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 16945  01157A  010F               	movlb	15	; () banked
 16946  01157C  9340               	bcf	64,1,b	;volatile
 16947  01157E                     l6069:
 16948                           
 16949                           ; BSR set to: 15
 16950                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 16951  01157E  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 16952  011582  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16953  011586  50DF               	movf	indf2,w,c
 16954  011588  010F               	movlb	15	; () banked
 16955  01158A  6F46               	movwf	70,b	;volatile
 16956                           
 16957                           ; BSR set to: 15
 16958                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 16959  01158C  0100               	movlb	0	; () banked
 16960  01158E  EE20 F001          	lfsr	2,1
 16961  011592  5176               	movf	CANsendMessage@data& (0+255),w,b
 16962  011594  26D9               	addwf	fsr2l,f,c
 16963  011596  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16964  011598  22DA               	addwfc	fsr2h,f,c
 16965  01159A  50DF               	movf	indf2,w,c
 16966  01159C  010F               	movlb	15	; () banked
 16967  01159E  6F47               	movwf	71,b	;volatile
 16968                           
 16969                           ; BSR set to: 15
 16970                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 16971  0115A0  0100               	movlb	0	; () banked
 16972  0115A2  EE20 F002          	lfsr	2,2
 16973  0115A6  5176               	movf	CANsendMessage@data& (0+255),w,b
 16974  0115A8  26D9               	addwf	fsr2l,f,c
 16975  0115AA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16976  0115AC  22DA               	addwfc	fsr2h,f,c
 16977  0115AE  50DF               	movf	indf2,w,c
 16978  0115B0  010F               	movlb	15	; () banked
 16979  0115B2  6F48               	movwf	72,b	;volatile
 16980                           
 16981                           ; BSR set to: 15
 16982                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 16983  0115B4  0100               	movlb	0	; () banked
 16984  0115B6  EE20 F003          	lfsr	2,3
 16985  0115BA  5176               	movf	CANsendMessage@data& (0+255),w,b
 16986  0115BC  26D9               	addwf	fsr2l,f,c
 16987  0115BE  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16988  0115C0  22DA               	addwfc	fsr2h,f,c
 16989  0115C2  50DF               	movf	indf2,w,c
 16990  0115C4  010F               	movlb	15	; () banked
 16991  0115C6  6F49               	movwf	73,b	;volatile
 16992                           
 16993                           ; BSR set to: 15
 16994                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 16995  0115C8  0100               	movlb	0	; () banked
 16996  0115CA  EE20 F004          	lfsr	2,4
 16997  0115CE  5176               	movf	CANsendMessage@data& (0+255),w,b
 16998  0115D0  26D9               	addwf	fsr2l,f,c
 16999  0115D2  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17000  0115D4  22DA               	addwfc	fsr2h,f,c
 17001  0115D6  50DF               	movf	indf2,w,c
 17002  0115D8  010F               	movlb	15	; () banked
 17003  0115DA  6F4A               	movwf	74,b	;volatile
 17004                           
 17005                           ; BSR set to: 15
 17006                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17007  0115DC  0100               	movlb	0	; () banked
 17008  0115DE  EE20 F005          	lfsr	2,5
 17009  0115E2  5176               	movf	CANsendMessage@data& (0+255),w,b
 17010  0115E4  26D9               	addwf	fsr2l,f,c
 17011  0115E6  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17012  0115E8  22DA               	addwfc	fsr2h,f,c
 17013  0115EA  50DF               	movf	indf2,w,c
 17014  0115EC  010F               	movlb	15	; () banked
 17015  0115EE  6F4B               	movwf	75,b	;volatile
 17016                           
 17017                           ; BSR set to: 15
 17018                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17019  0115F0  0100               	movlb	0	; () banked
 17020  0115F2  EE20 F006          	lfsr	2,6
 17021  0115F6  5176               	movf	CANsendMessage@data& (0+255),w,b
 17022  0115F8  26D9               	addwf	fsr2l,f,c
 17023  0115FA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17024  0115FC  22DA               	addwfc	fsr2h,f,c
 17025  0115FE  50DF               	movf	indf2,w,c
 17026  011600  010F               	movlb	15	; () banked
 17027  011602  6F4C               	movwf	76,b	;volatile
 17028                           
 17029                           ; BSR set to: 15
 17030                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17031  011604  0100               	movlb	0	; () banked
 17032  011606  EE20 F007          	lfsr	2,7
 17033  01160A  5176               	movf	CANsendMessage@data& (0+255),w,b
 17034  01160C  26D9               	addwf	fsr2l,f,c
 17035  01160E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17036  011610  22DA               	addwfc	fsr2h,f,c
 17037  011612  50DF               	movf	indf2,w,c
 17038  011614  010F               	movlb	15	; () banked
 17039  011616  6F4D               	movwf	77,b	;volatile
 17040                           
 17041                           ; BSR set to: 15
 17042                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17043  011618  010F               	movlb	15	; () banked
 17044  01161A  8740               	bsf	64,3,b	;volatile
 17045                           
 17046                           ; BSR set to: 15
 17047                           ;inc\CANlib.h: 368: return;
 17048  01161C  0012               	return	
 17049  01161E                     l375:
 17050                           
 17051                           ; BSR set to: 15
 17052                           ;inc\CANlib.h: 369: }
 17053                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17054  01161E  010F               	movlb	15	; () banked
 17055  011620  B730               	btfsc	48,3,b	;volatile
 17056  011622  D13F               	goto	l390
 17057                           
 17058                           ; BSR set to: 15
 17059                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17060  011624  C078  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 17061                           
 17062                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17063  011628  0100               	movlb	0	; () banked
 17064  01162A  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 17065  01162C  D003               	goto	l391
 17066                           
 17067                           ; BSR set to: 0
 17068                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17069  01162E  010F               	movlb	15	; () banked
 17070  011630  8D35               	bsf	53,6,b	;volatile
 17071  011632  D002               	goto	l392
 17072  011634                     l391:
 17073                           
 17074                           ; BSR set to: 0
 17075                           ;inc\CANlib.h: 378: else
 17076                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17077  011634  010F               	movlb	15	; () banked
 17078  011636  9D35               	bcf	53,6,b	;volatile
 17079  011638                     l392:
 17080                           
 17081                           ; BSR set to: 15
 17082                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 17083  011638  0100               	movlb	0	; () banked
 17084  01163A  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 17085  01163C  D079               	goto	l393
 17086                           
 17087                           ; BSR set to: 0
 17088                           ;inc\CANlib.h: 382: {
 17089                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 17090  01163E  0100               	movlb	0	; () banked
 17091  011640  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 17092  011642  0100               	movlb	0	; () banked
 17093  011644  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17094  011646  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17095  011648  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17096  01164A  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17097                           
 17098                           ; BSR set to: 0
 17099                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 17100  01164C  C07E  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 17101                           
 17102                           ; BSR set to: 0
 17103                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 17104  011650  0E00               	movlw	0
 17105  011652  0100               	movlb	0	; () banked
 17106  011654  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 17107  011656  0100               	movlb	0	; () banked
 17108  011658  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17109  01165A  0EFF               	movlw	255
 17110  01165C  0100               	movlb	0	; () banked
 17111  01165E  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17112  011660  0100               	movlb	0	; () banked
 17113  011662  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17114  011664  0E00               	movlw	0
 17115  011666  0100               	movlb	0	; () banked
 17116  011668  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17117  01166A  0100               	movlb	0	; () banked
 17118  01166C  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17119  01166E  0E00               	movlw	0
 17120  011670  0100               	movlb	0	; () banked
 17121  011672  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17122  011674  0100               	movlb	0	; () banked
 17123  011676  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17124                           
 17125                           ; BSR set to: 0
 17126                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 17127  011678  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 17128  01167C  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17129  011680  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17130  011684  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17131  011688  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 17132  01168C  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17133  011690  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17134  011694  0100               	movlb	0	; () banked
 17135  011696  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 17136  011698  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17137  01169C  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17138  0116A0  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17139  0116A4  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17140                           
 17141                           ; BSR set to: 0
 17142                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 17143  0116A8  C07E  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 17144                           
 17145                           ; BSR set to: 0
 17146                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 17147  0116AC  0E00               	movlw	0
 17148  0116AE  010F               	movlb	15	; () banked
 17149  0116B0  6F32               	movwf	50,b	;volatile
 17150                           
 17151                           ; BSR set to: 15
 17152                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 17153  0116B2  010F               	movlb	15	; () banked
 17154  0116B4  8732               	bsf	50,3,b	;volatile
 17155                           
 17156                           ; BSR set to: 15
 17157                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 17158  0116B6  0100               	movlb	0	; () banked
 17159  0116B8  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17160  0116BA  D002               	goto	l394
 17161                           
 17162                           ; BSR set to: 0
 17163                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 17164  0116BC  010F               	movlb	15	; () banked
 17165  0116BE  8132               	bsf	50,0,b	;volatile
 17166  0116C0                     l394:
 17167                           
 17168                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 17169  0116C0  0100               	movlb	0	; () banked
 17170  0116C2  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17171  0116C4  D002               	goto	l395
 17172                           
 17173                           ; BSR set to: 0
 17174                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 17175  0116C6  010F               	movlb	15	; () banked
 17176  0116C8  8332               	bsf	50,1,b	;volatile
 17177  0116CA                     l395:
 17178                           
 17179                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 17180  0116CA  0100               	movlb	0	; () banked
 17181  0116CC  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17182  0116CE  D002               	goto	l396
 17183                           
 17184                           ; BSR set to: 0
 17185                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 17186  0116D0  010F               	movlb	15	; () banked
 17187  0116D2  8B32               	bsf	50,5,b	;volatile
 17188  0116D4                     l396:
 17189                           
 17190                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 17191  0116D4  0100               	movlb	0	; () banked
 17192  0116D6  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17193  0116D8  D002               	goto	l397
 17194                           
 17195                           ; BSR set to: 0
 17196                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 17197  0116DA  010F               	movlb	15	; () banked
 17198  0116DC  8D32               	bsf	50,6,b	;volatile
 17199  0116DE                     l397:
 17200                           
 17201                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 17202  0116DE  0100               	movlb	0	; () banked
 17203  0116E0  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17204  0116E2  D002               	goto	l6119
 17205                           
 17206                           ; BSR set to: 0
 17207                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 17208  0116E4  010F               	movlb	15	; () banked
 17209  0116E6  8F32               	bsf	50,7,b	;volatile
 17210  0116E8                     l6119:
 17211                           
 17212                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 17213  0116E8  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 17214  0116EC  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17215  0116F0  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17216  0116F4  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17217  0116F8  0E16               	movlw	22
 17218  0116FA  D006               	goto	u7570
 17219  0116FC                     u7575:
 17220  0116FC  0100               	movlb	0	; () banked
 17221  0116FE  90D8               	bcf	status,0,c
 17222  011700  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17223  011702  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17224  011704  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17225  011706  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 17226  011708                     u7570:
 17227  011708  2EE8               	decfsz	wreg,f,c
 17228  01170A  D7F8               	goto	u7575
 17229  01170C  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17230  011710  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17231  011714  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17232  011718  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17233                           
 17234                           ; BSR set to: 0
 17235                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 17236  01171C  0100               	movlb	0	; () banked
 17237  01171E  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 17238  011720  0100               	movlb	0	; () banked
 17239  011722  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17240  011724  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17241  011726  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17242  011728  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17243                           
 17244                           ; BSR set to: 0
 17245                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 17246  01172A  C07E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 17247                           
 17248                           ;inc\CANlib.h: 407: }
 17249  01172E  D059               	goto	l6139
 17250  011730                     l393:
 17251                           
 17252                           ; BSR set to: 0
 17253                           ;inc\CANlib.h: 409: else
 17254                           ;inc\CANlib.h: 411: {
 17255                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 17256  011730  010F               	movlb	15	; () banked
 17257  011732  9732               	bcf	50,3,b	;volatile
 17258                           
 17259                           ; BSR set to: 15
 17260                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 17261  011734  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 17262  011738  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17263  01173C  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17264  011740  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17265  011744  0E04               	movlw	4
 17266  011746  D006               	goto	u7580
 17267  011748                     u7585:
 17268  011748  0100               	movlb	0	; () banked
 17269  01174A  90D8               	bcf	status,0,c
 17270  01174C  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17271  01174E  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17272  011750  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17273  011752  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 17274  011754                     u7580:
 17275  011754  2EE8               	decfsz	wreg,f,c
 17276  011756  D7F8               	goto	u7585
 17277  011758  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17278  01175C  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17279  011760  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17280  011764  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17281                           
 17282                           ; BSR set to: 0
 17283                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 17284  011768  0100               	movlb	0	; () banked
 17285  01176A  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 17286  01176C  0100               	movlb	0	; () banked
 17287  01176E  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17288  011770  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17289  011772  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17290  011774  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17291                           
 17292                           ; BSR set to: 0
 17293                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 17294  011776  C07E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 17295                           
 17296                           ; BSR set to: 0
 17297                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 17298  01177A  0E07               	movlw	7
 17299  01177C  0100               	movlb	0	; () banked
 17300  01177E  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 17301  011780  0100               	movlb	0	; () banked
 17302  011782  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17303  011784  0E00               	movlw	0
 17304  011786  0100               	movlb	0	; () banked
 17305  011788  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17306  01178A  0100               	movlb	0	; () banked
 17307  01178C  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17308  01178E  0E00               	movlw	0
 17309  011790  0100               	movlb	0	; () banked
 17310  011792  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17311  011794  0100               	movlb	0	; () banked
 17312  011796  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17313  011798  0E00               	movlw	0
 17314  01179A  0100               	movlb	0	; () banked
 17315  01179C  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17316  01179E  0100               	movlb	0	; () banked
 17317  0117A0  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17318                           
 17319                           ; BSR set to: 0
 17320                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 17321  0117A2  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 17322  0117A6  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17323  0117AA  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17324  0117AE  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17325  0117B2  0E05               	movlw	5
 17326  0117B4                     u7595:
 17327  0117B4  90D8               	bcf	status,0,c
 17328  0117B6  0100               	movlb	0	; () banked
 17329  0117B8  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 17330  0117BA  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17331  0117BC  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17332  0117BE  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17333  0117C0  2EE8               	decfsz	wreg,f,c
 17334  0117C2  D7F8               	goto	u7595
 17335  0117C4  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17336  0117C8  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17337  0117CC  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17338  0117D0  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17339                           
 17340                           ; BSR set to: 0
 17341                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 17342  0117D4  010F               	movlb	15	; () banked
 17343  0117D6  5132               	movf	50,w,b	;volatile
 17344  0117D8  0B1F               	andlw	31
 17345  0117DA  010F               	movlb	15	; () banked
 17346  0117DC  6F32               	movwf	50,b	;volatile
 17347                           
 17348                           ; BSR set to: 15
 17349                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 17350  0117DE  C07E  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 17351  0117E2                     l6139:
 17352                           
 17353                           ;inc\CANlib.h: 422: }
 17354                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 17355  0117E2  0100               	movlb	0	; () banked
 17356  0117E4  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 17357  0117E6  D003               	goto	l400
 17358                           
 17359                           ; BSR set to: 0
 17360                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 17361  0117E8  010F               	movlb	15	; () banked
 17362  0117EA  8130               	bsf	48,0,b	;volatile
 17363  0117EC  D002               	goto	l401
 17364  0117EE                     l400:
 17365                           
 17366                           ; BSR set to: 0
 17367                           ;inc\CANlib.h: 426: else
 17368                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 17369  0117EE  010F               	movlb	15	; () banked
 17370  0117F0  9130               	bcf	48,0,b	;volatile
 17371  0117F2                     l401:
 17372                           
 17373                           ; BSR set to: 15
 17374                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 17375  0117F2  0100               	movlb	0	; () banked
 17376  0117F4  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 17377  0117F6  D003               	goto	l402
 17378                           
 17379                           ; BSR set to: 0
 17380                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 17381  0117F8  010F               	movlb	15	; () banked
 17382  0117FA  8330               	bsf	48,1,b	;volatile
 17383  0117FC  D002               	goto	l6145
 17384  0117FE                     l402:
 17385                           
 17386                           ; BSR set to: 0
 17387                           ;inc\CANlib.h: 430: else
 17388                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 17389  0117FE  010F               	movlb	15	; () banked
 17390  011800  9330               	bcf	48,1,b	;volatile
 17391  011802                     l6145:
 17392                           
 17393                           ; BSR set to: 15
 17394                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 17395  011802  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 17396  011806  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17397  01180A  50DF               	movf	indf2,w,c
 17398  01180C  010F               	movlb	15	; () banked
 17399  01180E  6F36               	movwf	54,b	;volatile
 17400                           
 17401                           ; BSR set to: 15
 17402                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 17403  011810  0100               	movlb	0	; () banked
 17404  011812  EE20 F001          	lfsr	2,1
 17405  011816  5176               	movf	CANsendMessage@data& (0+255),w,b
 17406  011818  26D9               	addwf	fsr2l,f,c
 17407  01181A  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17408  01181C  22DA               	addwfc	fsr2h,f,c
 17409  01181E  50DF               	movf	indf2,w,c
 17410  011820  010F               	movlb	15	; () banked
 17411  011822  6F37               	movwf	55,b	;volatile
 17412                           
 17413                           ; BSR set to: 15
 17414                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 17415  011824  0100               	movlb	0	; () banked
 17416  011826  EE20 F002          	lfsr	2,2
 17417  01182A  5176               	movf	CANsendMessage@data& (0+255),w,b
 17418  01182C  26D9               	addwf	fsr2l,f,c
 17419  01182E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17420  011830  22DA               	addwfc	fsr2h,f,c
 17421  011832  50DF               	movf	indf2,w,c
 17422  011834  010F               	movlb	15	; () banked
 17423  011836  6F38               	movwf	56,b	;volatile
 17424                           
 17425                           ; BSR set to: 15
 17426                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 17427  011838  0100               	movlb	0	; () banked
 17428  01183A  EE20 F003          	lfsr	2,3
 17429  01183E  5176               	movf	CANsendMessage@data& (0+255),w,b
 17430  011840  26D9               	addwf	fsr2l,f,c
 17431  011842  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17432  011844  22DA               	addwfc	fsr2h,f,c
 17433  011846  50DF               	movf	indf2,w,c
 17434  011848  010F               	movlb	15	; () banked
 17435  01184A  6F39               	movwf	57,b	;volatile
 17436                           
 17437                           ; BSR set to: 15
 17438                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 17439  01184C  0100               	movlb	0	; () banked
 17440  01184E  EE20 F004          	lfsr	2,4
 17441  011852  5176               	movf	CANsendMessage@data& (0+255),w,b
 17442  011854  26D9               	addwf	fsr2l,f,c
 17443  011856  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17444  011858  22DA               	addwfc	fsr2h,f,c
 17445  01185A  50DF               	movf	indf2,w,c
 17446  01185C  010F               	movlb	15	; () banked
 17447  01185E  6F3A               	movwf	58,b	;volatile
 17448                           
 17449                           ; BSR set to: 15
 17450                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 17451  011860  0100               	movlb	0	; () banked
 17452  011862  EE20 F005          	lfsr	2,5
 17453  011866  5176               	movf	CANsendMessage@data& (0+255),w,b
 17454  011868  26D9               	addwf	fsr2l,f,c
 17455  01186A  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17456  01186C  22DA               	addwfc	fsr2h,f,c
 17457  01186E  50DF               	movf	indf2,w,c
 17458  011870  010F               	movlb	15	; () banked
 17459  011872  6F3B               	movwf	59,b	;volatile
 17460                           
 17461                           ; BSR set to: 15
 17462                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 17463  011874  0100               	movlb	0	; () banked
 17464  011876  EE20 F006          	lfsr	2,6
 17465  01187A  5176               	movf	CANsendMessage@data& (0+255),w,b
 17466  01187C  26D9               	addwf	fsr2l,f,c
 17467  01187E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17468  011880  22DA               	addwfc	fsr2h,f,c
 17469  011882  50DF               	movf	indf2,w,c
 17470  011884  010F               	movlb	15	; () banked
 17471  011886  6F3C               	movwf	60,b	;volatile
 17472                           
 17473                           ; BSR set to: 15
 17474                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 17475  011888  0100               	movlb	0	; () banked
 17476  01188A  EE20 F007          	lfsr	2,7
 17477  01188E  5176               	movf	CANsendMessage@data& (0+255),w,b
 17478  011890  26D9               	addwf	fsr2l,f,c
 17479  011892  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17480  011894  22DA               	addwfc	fsr2h,f,c
 17481  011896  50DF               	movf	indf2,w,c
 17482  011898  010F               	movlb	15	; () banked
 17483  01189A  6F3D               	movwf	61,b	;volatile
 17484                           
 17485                           ; BSR set to: 15
 17486                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 17487  01189C  010F               	movlb	15	; () banked
 17488  01189E  8730               	bsf	48,3,b	;volatile
 17489                           
 17490                           ; BSR set to: 15
 17491                           ;inc\CANlib.h: 444: return;
 17492  0118A0  0012               	return	
 17493  0118A2                     l390:
 17494                           
 17495                           ; BSR set to: 15
 17496                           ;inc\CANlib.h: 445: }
 17497                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 17498  0118A2  010F               	movlb	15	; () banked
 17499  0118A4  B720               	btfsc	32,3,b	;volatile
 17500  0118A6  0012               	return	
 17501                           
 17502                           ; BSR set to: 15
 17503                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 17504  0118A8  C078  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 17505                           
 17506                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 17507  0118AC  0100               	movlb	0	; () banked
 17508  0118AE  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 17509  0118B0  D003               	goto	l405
 17510                           
 17511                           ; BSR set to: 0
 17512                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 17513  0118B2  010F               	movlb	15	; () banked
 17514  0118B4  8D25               	bsf	37,6,b	;volatile
 17515  0118B6  D002               	goto	l406
 17516  0118B8                     l405:
 17517                           
 17518                           ; BSR set to: 0
 17519                           ;inc\CANlib.h: 454: else
 17520                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 17521  0118B8  010F               	movlb	15	; () banked
 17522  0118BA  9D25               	bcf	37,6,b	;volatile
 17523  0118BC                     l406:
 17524                           
 17525                           ; BSR set to: 15
 17526                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 17527  0118BC  0100               	movlb	0	; () banked
 17528  0118BE  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 17529  0118C0  D079               	goto	l407
 17530                           
 17531                           ; BSR set to: 0
 17532                           ;inc\CANlib.h: 458: {
 17533                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 17534  0118C2  0100               	movlb	0	; () banked
 17535  0118C4  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 17536  0118C6  0100               	movlb	0	; () banked
 17537  0118C8  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17538  0118CA  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17539  0118CC  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17540  0118CE  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17541                           
 17542                           ; BSR set to: 0
 17543                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 17544  0118D0  C07E  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 17545                           
 17546                           ; BSR set to: 0
 17547                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 17548  0118D4  0E00               	movlw	0
 17549  0118D6  0100               	movlb	0	; () banked
 17550  0118D8  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 17551  0118DA  0100               	movlb	0	; () banked
 17552  0118DC  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17553  0118DE  0EFF               	movlw	255
 17554  0118E0  0100               	movlb	0	; () banked
 17555  0118E2  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17556  0118E4  0100               	movlb	0	; () banked
 17557  0118E6  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17558  0118E8  0E00               	movlw	0
 17559  0118EA  0100               	movlb	0	; () banked
 17560  0118EC  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17561  0118EE  0100               	movlb	0	; () banked
 17562  0118F0  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17563  0118F2  0E00               	movlw	0
 17564  0118F4  0100               	movlb	0	; () banked
 17565  0118F6  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17566  0118F8  0100               	movlb	0	; () banked
 17567  0118FA  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17568                           
 17569                           ; BSR set to: 0
 17570                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 17571  0118FC  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 17572  011900  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17573  011904  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17574  011908  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17575  01190C  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 17576  011910  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17577  011914  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17578  011918  0100               	movlb	0	; () banked
 17579  01191A  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 17580  01191C  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17581  011920  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17582  011924  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17583  011928  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17584                           
 17585                           ; BSR set to: 0
 17586                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 17587  01192C  C07E  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 17588                           
 17589                           ; BSR set to: 0
 17590                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 17591  011930  0E00               	movlw	0
 17592  011932  010F               	movlb	15	; () banked
 17593  011934  6F22               	movwf	34,b	;volatile
 17594                           
 17595                           ; BSR set to: 15
 17596                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 17597  011936  010F               	movlb	15	; () banked
 17598  011938  8722               	bsf	34,3,b	;volatile
 17599                           
 17600                           ; BSR set to: 15
 17601                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 17602  01193A  0100               	movlb	0	; () banked
 17603  01193C  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17604  01193E  D002               	goto	l408
 17605                           
 17606                           ; BSR set to: 0
 17607                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 17608  011940  010F               	movlb	15	; () banked
 17609  011942  8122               	bsf	34,0,b	;volatile
 17610  011944                     l408:
 17611                           
 17612                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 17613  011944  0100               	movlb	0	; () banked
 17614  011946  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17615  011948  D002               	goto	l409
 17616                           
 17617                           ; BSR set to: 0
 17618                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 17619  01194A  010F               	movlb	15	; () banked
 17620  01194C  8322               	bsf	34,1,b	;volatile
 17621  01194E                     l409:
 17622                           
 17623                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 17624  01194E  0100               	movlb	0	; () banked
 17625  011950  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17626  011952  D002               	goto	l410
 17627                           
 17628                           ; BSR set to: 0
 17629                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 17630  011954  010F               	movlb	15	; () banked
 17631  011956  8B22               	bsf	34,5,b	;volatile
 17632  011958                     l410:
 17633                           
 17634                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 17635  011958  0100               	movlb	0	; () banked
 17636  01195A  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17637  01195C  D002               	goto	l411
 17638                           
 17639                           ; BSR set to: 0
 17640                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 17641  01195E  010F               	movlb	15	; () banked
 17642  011960  8D22               	bsf	34,6,b	;volatile
 17643  011962                     l411:
 17644                           
 17645                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 17646  011962  0100               	movlb	0	; () banked
 17647  011964  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17648  011966  D002               	goto	l6195
 17649                           
 17650                           ; BSR set to: 0
 17651                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 17652  011968  010F               	movlb	15	; () banked
 17653  01196A  8F22               	bsf	34,7,b	;volatile
 17654  01196C                     l6195:
 17655                           
 17656                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 17657  01196C  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 17658  011970  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17659  011974  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17660  011978  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17661  01197C  0E16               	movlw	22
 17662  01197E  D006               	goto	u7700
 17663  011980                     u7705:
 17664  011980  0100               	movlb	0	; () banked
 17665  011982  90D8               	bcf	status,0,c
 17666  011984  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17667  011986  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17668  011988  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17669  01198A  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 17670  01198C                     u7700:
 17671  01198C  2EE8               	decfsz	wreg,f,c
 17672  01198E  D7F8               	goto	u7705
 17673  011990  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17674  011994  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17675  011998  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17676  01199C  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17677                           
 17678                           ; BSR set to: 0
 17679                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 17680  0119A0  0100               	movlb	0	; () banked
 17681  0119A2  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 17682  0119A4  0100               	movlb	0	; () banked
 17683  0119A6  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17684  0119A8  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17685  0119AA  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17686  0119AC  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17687                           
 17688                           ; BSR set to: 0
 17689                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 17690  0119AE  C07E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 17691                           
 17692                           ;inc\CANlib.h: 483: }
 17693  0119B2  D059               	goto	l6215
 17694  0119B4                     l407:
 17695                           
 17696                           ; BSR set to: 0
 17697                           ;inc\CANlib.h: 485: else
 17698                           ;inc\CANlib.h: 487: {
 17699                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 17700  0119B4  010F               	movlb	15	; () banked
 17701  0119B6  9722               	bcf	34,3,b	;volatile
 17702                           
 17703                           ; BSR set to: 15
 17704                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 17705  0119B8  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 17706  0119BC  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17707  0119C0  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17708  0119C4  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17709  0119C8  0E04               	movlw	4
 17710  0119CA  D006               	goto	u7710
 17711  0119CC                     u7715:
 17712  0119CC  0100               	movlb	0	; () banked
 17713  0119CE  90D8               	bcf	status,0,c
 17714  0119D0  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17715  0119D2  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17716  0119D4  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17717  0119D6  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 17718  0119D8                     u7710:
 17719  0119D8  2EE8               	decfsz	wreg,f,c
 17720  0119DA  D7F8               	goto	u7715
 17721  0119DC  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17722  0119E0  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17723  0119E4  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17724  0119E8  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17725                           
 17726                           ; BSR set to: 0
 17727                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 17728  0119EC  0100               	movlb	0	; () banked
 17729  0119EE  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 17730  0119F0  0100               	movlb	0	; () banked
 17731  0119F2  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17732  0119F4  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17733  0119F6  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17734  0119F8  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17735                           
 17736                           ; BSR set to: 0
 17737                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 17738  0119FA  C07E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 17739                           
 17740                           ; BSR set to: 0
 17741                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 17742  0119FE  0E07               	movlw	7
 17743  011A00  0100               	movlb	0	; () banked
 17744  011A02  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 17745  011A04  0100               	movlb	0	; () banked
 17746  011A06  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17747  011A08  0E00               	movlw	0
 17748  011A0A  0100               	movlb	0	; () banked
 17749  011A0C  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17750  011A0E  0100               	movlb	0	; () banked
 17751  011A10  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17752  011A12  0E00               	movlw	0
 17753  011A14  0100               	movlb	0	; () banked
 17754  011A16  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17755  011A18  0100               	movlb	0	; () banked
 17756  011A1A  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17757  011A1C  0E00               	movlw	0
 17758  011A1E  0100               	movlb	0	; () banked
 17759  011A20  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17760  011A22  0100               	movlb	0	; () banked
 17761  011A24  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17762                           
 17763                           ; BSR set to: 0
 17764                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 17765  011A26  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 17766  011A2A  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17767  011A2E  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17768  011A32  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17769  011A36  0E05               	movlw	5
 17770  011A38                     u7725:
 17771  011A38  90D8               	bcf	status,0,c
 17772  011A3A  0100               	movlb	0	; () banked
 17773  011A3C  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 17774  011A3E  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17775  011A40  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17776  011A42  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17777  011A44  2EE8               	decfsz	wreg,f,c
 17778  011A46  D7F8               	goto	u7725
 17779  011A48  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17780  011A4C  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17781  011A50  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17782  011A54  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17783                           
 17784                           ; BSR set to: 0
 17785                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 17786  011A58  010F               	movlb	15	; () banked
 17787  011A5A  5122               	movf	34,w,b	;volatile
 17788  011A5C  0B1F               	andlw	31
 17789  011A5E  010F               	movlb	15	; () banked
 17790  011A60  6F22               	movwf	34,b	;volatile
 17791                           
 17792                           ; BSR set to: 15
 17793                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 17794  011A62  C07E  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 17795  011A66                     l6215:
 17796                           
 17797                           ;inc\CANlib.h: 498: }
 17798                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 17799  011A66  0100               	movlb	0	; () banked
 17800  011A68  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 17801  011A6A  D003               	goto	l414
 17802                           
 17803                           ; BSR set to: 0
 17804                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 17805  011A6C  010F               	movlb	15	; () banked
 17806  011A6E  8120               	bsf	32,0,b	;volatile
 17807  011A70  D002               	goto	l415
 17808  011A72                     l414:
 17809                           
 17810                           ; BSR set to: 0
 17811                           ;inc\CANlib.h: 502: else
 17812                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 17813  011A72  010F               	movlb	15	; () banked
 17814  011A74  9120               	bcf	32,0,b	;volatile
 17815  011A76                     l415:
 17816                           
 17817                           ; BSR set to: 15
 17818                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 17819  011A76  0100               	movlb	0	; () banked
 17820  011A78  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 17821  011A7A  D003               	goto	l416
 17822                           
 17823                           ; BSR set to: 0
 17824                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 17825  011A7C  010F               	movlb	15	; () banked
 17826  011A7E  8320               	bsf	32,1,b	;volatile
 17827  011A80  D002               	goto	l6221
 17828  011A82                     l416:
 17829                           
 17830                           ; BSR set to: 0
 17831                           ;inc\CANlib.h: 506: else
 17832                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 17833  011A82  010F               	movlb	15	; () banked
 17834  011A84  9320               	bcf	32,1,b	;volatile
 17835  011A86                     l6221:
 17836                           
 17837                           ; BSR set to: 15
 17838                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 17839  011A86  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 17840  011A8A  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17841  011A8E  50DF               	movf	indf2,w,c
 17842  011A90  010F               	movlb	15	; () banked
 17843  011A92  6F26               	movwf	38,b	;volatile
 17844                           
 17845                           ; BSR set to: 15
 17846                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 17847  011A94  0100               	movlb	0	; () banked
 17848  011A96  EE20 F001          	lfsr	2,1
 17849  011A9A  5176               	movf	CANsendMessage@data& (0+255),w,b
 17850  011A9C  26D9               	addwf	fsr2l,f,c
 17851  011A9E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17852  011AA0  22DA               	addwfc	fsr2h,f,c
 17853  011AA2  50DF               	movf	indf2,w,c
 17854  011AA4  010F               	movlb	15	; () banked
 17855  011AA6  6F27               	movwf	39,b	;volatile
 17856                           
 17857                           ; BSR set to: 15
 17858                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 17859  011AA8  0100               	movlb	0	; () banked
 17860  011AAA  EE20 F002          	lfsr	2,2
 17861  011AAE  5176               	movf	CANsendMessage@data& (0+255),w,b
 17862  011AB0  26D9               	addwf	fsr2l,f,c
 17863  011AB2  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17864  011AB4  22DA               	addwfc	fsr2h,f,c
 17865  011AB6  50DF               	movf	indf2,w,c
 17866  011AB8  010F               	movlb	15	; () banked
 17867  011ABA  6F28               	movwf	40,b	;volatile
 17868                           
 17869                           ; BSR set to: 15
 17870                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 17871  011ABC  0100               	movlb	0	; () banked
 17872  011ABE  EE20 F003          	lfsr	2,3
 17873  011AC2  5176               	movf	CANsendMessage@data& (0+255),w,b
 17874  011AC4  26D9               	addwf	fsr2l,f,c
 17875  011AC6  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17876  011AC8  22DA               	addwfc	fsr2h,f,c
 17877  011ACA  50DF               	movf	indf2,w,c
 17878  011ACC  010F               	movlb	15	; () banked
 17879  011ACE  6F29               	movwf	41,b	;volatile
 17880                           
 17881                           ; BSR set to: 15
 17882                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 17883  011AD0  0100               	movlb	0	; () banked
 17884  011AD2  EE20 F004          	lfsr	2,4
 17885  011AD6  5176               	movf	CANsendMessage@data& (0+255),w,b
 17886  011AD8  26D9               	addwf	fsr2l,f,c
 17887  011ADA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17888  011ADC  22DA               	addwfc	fsr2h,f,c
 17889  011ADE  50DF               	movf	indf2,w,c
 17890  011AE0  010F               	movlb	15	; () banked
 17891  011AE2  6F2A               	movwf	42,b	;volatile
 17892                           
 17893                           ; BSR set to: 15
 17894                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 17895  011AE4  0100               	movlb	0	; () banked
 17896  011AE6  EE20 F005          	lfsr	2,5
 17897  011AEA  5176               	movf	CANsendMessage@data& (0+255),w,b
 17898  011AEC  26D9               	addwf	fsr2l,f,c
 17899  011AEE  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17900  011AF0  22DA               	addwfc	fsr2h,f,c
 17901  011AF2  50DF               	movf	indf2,w,c
 17902  011AF4  010F               	movlb	15	; () banked
 17903  011AF6  6F2B               	movwf	43,b	;volatile
 17904                           
 17905                           ; BSR set to: 15
 17906                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 17907  011AF8  0100               	movlb	0	; () banked
 17908  011AFA  EE20 F006          	lfsr	2,6
 17909  011AFE  5176               	movf	CANsendMessage@data& (0+255),w,b
 17910  011B00  26D9               	addwf	fsr2l,f,c
 17911  011B02  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17912  011B04  22DA               	addwfc	fsr2h,f,c
 17913  011B06  50DF               	movf	indf2,w,c
 17914  011B08  010F               	movlb	15	; () banked
 17915  011B0A  6F2C               	movwf	44,b	;volatile
 17916                           
 17917                           ; BSR set to: 15
 17918                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 17919  011B0C  0100               	movlb	0	; () banked
 17920  011B0E  EE20 F007          	lfsr	2,7
 17921  011B12  5176               	movf	CANsendMessage@data& (0+255),w,b
 17922  011B14  26D9               	addwf	fsr2l,f,c
 17923  011B16  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17924  011B18  22DA               	addwfc	fsr2h,f,c
 17925  011B1A  50DF               	movf	indf2,w,c
 17926  011B1C  010F               	movlb	15	; () banked
 17927  011B1E  6F2D               	movwf	45,b	;volatile
 17928                           
 17929                           ; BSR set to: 15
 17930                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 17931  011B20  010F               	movlb	15	; () banked
 17932  011B22  8720               	bsf	32,3,b	;volatile
 17933                           
 17934                           ; BSR set to: 15
 17935                           ;inc\CANlib.h: 520: return;
 17936  011B24  0012               	return	
 17937  011B26                     __end_of_CANsendMessage:
 17938                           	opt stack 0
 17939                           tblptru	equ	0xFF8
 17940                           tblptrh	equ	0xFF7
 17941                           tblptrl	equ	0xFF6
 17942                           tablat	equ	0xFF5
 17943                           prodh	equ	0xFF4
 17944                           prodl	equ	0xFF3
 17945                           intcon	equ	0xFF2
 17946                           postinc0	equ	0xFEE
 17947                           wreg	equ	0xFE8
 17948                           indf1	equ	0xFE7
 17949                           plusw1	equ	0xFE3
 17950                           fsr1h	equ	0xFE2
 17951                           fsr1l	equ	0xFE1
 17952                           indf2	equ	0xFDF
 17953                           postinc2	equ	0xFDE
 17954                           plusw2	equ	0xFDB
 17955                           fsr2h	equ	0xFDA
 17956                           fsr2l	equ	0xFD9
 17957                           status	equ	0xFD8
 17958                           
 17959 ;; *************** function _CANisTxReady *****************
 17960 ;; Defined at:
 17961 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 17962 ;; Parameters:    Size  Location     Type
 17963 ;;		None
 17964 ;; Auto vars:     Size  Location     Type
 17965 ;;		None
 17966 ;; Return value:  Size  Location     Type
 17967 ;;                  1    wreg      unsigned char 
 17968 ;; Registers used:
 17969 ;;		wreg, status,2
 17970 ;; Tracked objects:
 17971 ;;		On entry : 0/0
 17972 ;;		On exit  : 0/0
 17973 ;;		Unchanged: 0/0
 17974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17976 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17978 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17979 ;;Total ram usage:        1 bytes
 17980 ;; Hardware stack levels used:    1
 17981 ;; Hardware stack levels required when called:    3
 17982 ;; This function calls:
 17983 ;;		Nothing
 17984 ;; This function is called by:
 17985 ;;		_main
 17986 ;;		_CAN_Send
 17987 ;;		_LCD_Handler
 17988 ;; This function uses a non-reentrant model
 17989 ;;
 17990                           
 17991                           	psect	text51
 17992  0160CE                     __ptext51:
 17993                           	opt stack 0
 17994  0160CE                     _CANisTxReady:
 17995                           	opt stack 26
 17996                           
 17997                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 17998                           
 17999                           ; BSR set to: 15
 18000                           ;incstack = 0
 18001  0160CE  0E01               	movlw	1
 18002  0160D0  0100               	movlb	0	; () banked
 18003  0160D2  6F72               	movwf	_CANisTxReady$3235& (0+255),b
 18004                           
 18005                           ; BSR set to: 0
 18006  0160D4  010F               	movlb	15	; () banked
 18007  0160D6  A740               	btfss	64,3,b	;volatile
 18008  0160D8  D009               	goto	l568
 18009                           
 18010                           ; BSR set to: 15
 18011  0160DA  010F               	movlb	15	; () banked
 18012  0160DC  A730               	btfss	48,3,b	;volatile
 18013  0160DE  D006               	goto	l568
 18014                           
 18015                           ; BSR set to: 15
 18016  0160E0  010F               	movlb	15	; () banked
 18017  0160E2  A720               	btfss	32,3,b	;volatile
 18018  0160E4  D003               	goto	l568
 18019                           
 18020                           ; BSR set to: 15
 18021  0160E6  0E00               	movlw	0
 18022  0160E8  0100               	movlb	0	; () banked
 18023  0160EA  6F72               	movwf	_CANisTxReady$3235& (0+255),b
 18024  0160EC                     l568:
 18025  0160EC  0100               	movlb	0	; () banked
 18026  0160EE  5172               	movf	_CANisTxReady$3235& (0+255),w,b
 18027  0160F0  0012               	return	
 18028  0160F2                     __end_of_CANisTxReady:
 18029                           	opt stack 0
 18030                           tblptru	equ	0xFF8
 18031                           tblptrh	equ	0xFF7
 18032                           tblptrl	equ	0xFF6
 18033                           tablat	equ	0xFF5
 18034                           prodh	equ	0xFF4
 18035                           prodl	equ	0xFF3
 18036                           intcon	equ	0xFF2
 18037                           postinc0	equ	0xFEE
 18038                           wreg	equ	0xFE8
 18039                           indf1	equ	0xFE7
 18040                           plusw1	equ	0xFE3
 18041                           fsr1h	equ	0xFE2
 18042                           fsr1l	equ	0xFE1
 18043                           indf2	equ	0xFDF
 18044                           postinc2	equ	0xFDE
 18045                           plusw2	equ	0xFDB
 18046                           fsr2h	equ	0xFDA
 18047                           fsr2l	equ	0xFD9
 18048                           status	equ	0xFD8
 18049                           
 18050 ;; *************** function _ISR_bassa *****************
 18051 ;; Defined at:
 18052 ;;		line 152 in file "RemoteCan.c"
 18053 ;; Parameters:    Size  Location     Type
 18054 ;;		None
 18055 ;; Auto vars:     Size  Location     Type
 18056 ;;		None
 18057 ;; Return value:  Size  Location     Type
 18058 ;;		None               void
 18059 ;; Registers used:
 18060 ;;		wreg, status,2, status,0
 18061 ;; Tracked objects:
 18062 ;;		On entry : 0/0
 18063 ;;		On exit  : 0/0
 18064 ;;		Unchanged: 0/0
 18065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18068 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18069 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18070 ;;Total ram usage:       17 bytes
 18071 ;; Hardware stack levels used:    1
 18072 ;; Hardware stack levels required when called:    2
 18073 ;; This function calls:
 18074 ;;		Nothing
 18075 ;; This function is called by:
 18076 ;;		Interrupt level 1
 18077 ;; This function uses a non-reentrant model
 18078 ;;
 18079                           
 18080                           	psect	intcodelo
 18081  000018                     __pintcodelo:
 18082                           	opt stack 0
 18083  000018                     _ISR_bassa:
 18084                           	opt stack 20
 18085                           
 18086                           ; BSR set to: 0
 18087                           ;incstack = 0
 18088  000018  804D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 18089  00001A  CFD8 F02D          	movff	status,??_ISR_bassa
 18090  00001E  CFE8 F02E          	movff	wreg,??_ISR_bassa+1
 18091  000022  CFE0 F02F          	movff	bsr,??_ISR_bassa+2
 18092  000026  CFFA F030          	movff	pclath,??_ISR_bassa+3
 18093  00002A  CFFB F031          	movff	pclatu,??_ISR_bassa+4
 18094  00002E  CFE9 F032          	movff	fsr0l,??_ISR_bassa+5
 18095  000032  CFEA F033          	movff	fsr0h,??_ISR_bassa+6
 18096  000036  CFE1 F034          	movff	fsr1l,??_ISR_bassa+7
 18097  00003A  CFE2 F035          	movff	fsr1h,??_ISR_bassa+8
 18098  00003E  CFD9 F036          	movff	fsr2l,??_ISR_bassa+9
 18099  000042  CFDA F037          	movff	fsr2h,??_ISR_bassa+10
 18100  000046  CFF3 F038          	movff	prodl,??_ISR_bassa+11
 18101  00004A  CFF4 F039          	movff	prodh,??_ISR_bassa+12
 18102  00004E  CFF6 F03A          	movff	tblptrl,??_ISR_bassa+13
 18103  000052  CFF7 F03B          	movff	tblptrh,??_ISR_bassa+14
 18104  000056  CFF8 F03C          	movff	tblptru,??_ISR_bassa+15
 18105  00005A  CFF5 F03D          	movff	tablat,??_ISR_bassa+16
 18106                           
 18107                           ;RemoteCan.c: 153: if (PIR2bits.TMR3IF == 1) {
 18108  00005E  A2A1               	btfss	4001,1,c	;volatile
 18109  000060  D00B               	goto	i1l773
 18110                           
 18111                           ;RemoteCan.c: 154: time_counter++;
 18112  000062  0E01               	movlw	1
 18113  000064  2622               	addwf	_time_counter,f,c	;volatile
 18114  000066  0E00               	movlw	0
 18115  000068  2223               	addwfc	_time_counter+1,f,c	;volatile
 18116  00006A  2224               	addwfc	_time_counter+2,f,c	;volatile
 18117  00006C  2225               	addwfc	_time_counter+3,f,c	;volatile
 18118                           
 18119                           ;RemoteCan.c: 155: TMR3H = 0x63;
 18120  00006E  0E63               	movlw	99
 18121  000070  6EB3               	movwf	4019,c	;volatile
 18122                           
 18123                           ;RemoteCan.c: 156: TMR3L = 0xC0;
 18124  000072  0EC0               	movlw	192
 18125  000074  6EB2               	movwf	4018,c	;volatile
 18126                           
 18127                           ;RemoteCan.c: 157: PIR2bits.TMR3IF = 0;
 18128  000076  92A1               	bcf	4001,1,c	;volatile
 18129  000078                     i1l773:
 18130  000078  C03D  FFF5         	movff	??_ISR_bassa+16,tablat
 18131  00007C  C03C  FFF8         	movff	??_ISR_bassa+15,tblptru
 18132  000080  C03B  FFF7         	movff	??_ISR_bassa+14,tblptrh
 18133  000084  C03A  FFF6         	movff	??_ISR_bassa+13,tblptrl
 18134  000088  C039  FFF4         	movff	??_ISR_bassa+12,prodh
 18135  00008C  C038  FFF3         	movff	??_ISR_bassa+11,prodl
 18136  000090  C037  FFDA         	movff	??_ISR_bassa+10,fsr2h
 18137  000094  C036  FFD9         	movff	??_ISR_bassa+9,fsr2l
 18138  000098  C035  FFE2         	movff	??_ISR_bassa+8,fsr1h
 18139  00009C  C034  FFE1         	movff	??_ISR_bassa+7,fsr1l
 18140  0000A0  C033  FFEA         	movff	??_ISR_bassa+6,fsr0h
 18141  0000A4  C032  FFE9         	movff	??_ISR_bassa+5,fsr0l
 18142  0000A8  C031  FFFB         	movff	??_ISR_bassa+4,pclatu
 18143  0000AC  C030  FFFA         	movff	??_ISR_bassa+3,pclath
 18144  0000B0  C02F  FFE0         	movff	??_ISR_bassa+2,bsr
 18145  0000B4  C02E  FFE8         	movff	??_ISR_bassa+1,wreg
 18146  0000B8  C02D  FFD8         	movff	??_ISR_bassa,status
 18147  0000BC  904D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 18148  0000BE  0010               	retfie	
 18149  0000C0                     __end_of_ISR_bassa:
 18150                           	opt stack 0
 18151                           pclatu	equ	0xFFB
 18152                           pclath	equ	0xFFA
 18153                           tblptru	equ	0xFF8
 18154                           tblptrh	equ	0xFF7
 18155                           tblptrl	equ	0xFF6
 18156                           tablat	equ	0xFF5
 18157                           prodh	equ	0xFF4
 18158                           prodl	equ	0xFF3
 18159                           intcon	equ	0xFF2
 18160                           postinc0	equ	0xFEE
 18161                           fsr0h	equ	0xFEA
 18162                           fsr0l	equ	0xFE9
 18163                           wreg	equ	0xFE8
 18164                           indf1	equ	0xFE7
 18165                           plusw1	equ	0xFE3
 18166                           fsr1h	equ	0xFE2
 18167                           fsr1l	equ	0xFE1
 18168                           bsr	equ	0xFE0
 18169                           indf2	equ	0xFDF
 18170                           postinc2	equ	0xFDE
 18171                           plusw2	equ	0xFDB
 18172                           fsr2h	equ	0xFDA
 18173                           fsr2l	equ	0xFD9
 18174                           status	equ	0xFD8
 18175                           
 18176 ;; *************** function _ISR_alta *****************
 18177 ;; Defined at:
 18178 ;;		line 107 in file "RemoteCan.c"
 18179 ;; Parameters:    Size  Location     Type
 18180 ;;		None
 18181 ;; Auto vars:     Size  Location     Type
 18182 ;;  i               1   29[COMRAM] unsigned char 
 18183 ;; Return value:  Size  Location     Type
 18184 ;;		None               void
 18185 ;; Registers used:
 18186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18187 ;; Tracked objects:
 18188 ;;		On entry : 0/0
 18189 ;;		On exit  : 0/0
 18190 ;;		Unchanged: 0/0
 18191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18194 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18195 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18196 ;;Total ram usage:       15 bytes
 18197 ;; Hardware stack levels used:    1
 18198 ;; Hardware stack levels required when called:    1
 18199 ;; This function calls:
 18200 ;;		_CANisRxReady
 18201 ;;		_CANreceiveMessage
 18202 ;;		i2_CANisTxReady
 18203 ;;		i2_CANsendMessage
 18204 ;; This function is called by:
 18205 ;;		Interrupt level 2
 18206 ;; This function uses a non-reentrant model
 18207 ;;
 18208                           
 18209                           	psect	intcode
 18210  000008                     __pintcode:
 18211                           	opt stack 0
 18212  000008                     _ISR_alta:
 18213                           	opt stack 20
 18214                           
 18215                           ;incstack = 0
 18216  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18217  00000A  CFFA F064          	movff	pclath,??_ISR_alta
 18218  00000E  CFFB F065          	movff	pclatu,??_ISR_alta+1
 18219  000012  EFE3  F0A8         	goto	int_func
 18220                           pclatu	equ	0xFFB
 18221                           pclath	equ	0xFFA
 18222                           tblptru	equ	0xFF8
 18223                           tblptrh	equ	0xFF7
 18224                           tblptrl	equ	0xFF6
 18225                           tablat	equ	0xFF5
 18226                           prodh	equ	0xFF4
 18227                           prodl	equ	0xFF3
 18228                           intcon	equ	0xFF2
 18229                           postinc0	equ	0xFEE
 18230                           fsr0h	equ	0xFEA
 18231                           fsr0l	equ	0xFE9
 18232                           wreg	equ	0xFE8
 18233                           indf1	equ	0xFE7
 18234                           plusw1	equ	0xFE3
 18235                           fsr1h	equ	0xFE2
 18236                           fsr1l	equ	0xFE1
 18237                           bsr	equ	0xFE0
 18238                           indf2	equ	0xFDF
 18239                           postinc2	equ	0xFDE
 18240                           plusw2	equ	0xFDB
 18241                           fsr2h	equ	0xFDA
 18242                           fsr2l	equ	0xFD9
 18243                           status	equ	0xFD8
 18244                           
 18245                           	psect	intcode_body
 18246  0151C6                     __pintcode_body:
 18247                           	opt stack 20
 18248  0151C6                     int_func:
 18249                           	opt stack 20
 18250  0151C6  CFE9 F066          	movff	fsr0l,??_ISR_alta+2
 18251  0151CA  CFEA F067          	movff	fsr0h,??_ISR_alta+3
 18252  0151CE  CFE1 F068          	movff	fsr1l,??_ISR_alta+4
 18253  0151D2  CFE2 F069          	movff	fsr1h,??_ISR_alta+5
 18254  0151D6  CFD9 F06A          	movff	fsr2l,??_ISR_alta+6
 18255  0151DA  CFDA F06B          	movff	fsr2h,??_ISR_alta+7
 18256  0151DE  CFF3 F06C          	movff	prodl,??_ISR_alta+8
 18257  0151E2  CFF4 F06D          	movff	prodh,??_ISR_alta+9
 18258  0151E6  CFF6 F06E          	movff	tblptrl,??_ISR_alta+10
 18259  0151EA  CFF7 F06F          	movff	tblptrh,??_ISR_alta+11
 18260  0151EE  CFF8 F070          	movff	tblptru,??_ISR_alta+12
 18261  0151F2  CFF5 F071          	movff	tablat,??_ISR_alta+13
 18262                           
 18263                           ;RemoteCan.c: 108: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 18264  0151F6  A2A4               	btfss	4004,1,c	;volatile
 18265  0151F8  B0A4               	btfsc	4004,0,c	;volatile
 18266  0151FA  D001               	goto	i2l9069
 18267  0151FC  D082               	goto	i2l769
 18268  0151FE                     i2l9069:
 18269                           
 18270                           ;RemoteCan.c: 109: if (CANisRxReady()) {
 18271  0151FE  ECDC  F0B0         	call	_CANisRxReady	;wreg free
 18272  015202  0900               	iorlw	0
 18273  015204  B4D8               	btfsc	status,2,c
 18274  015206  D079               	goto	i2l9117
 18275                           
 18276                           ;RemoteCan.c: 110: CANreceiveMessage(&msg);
 18277  015208  0E29               	movlw	low _msg
 18278  01520A  6E3E               	movwf	CANreceiveMessage@msg,c
 18279  01520C  0E01               	movlw	high _msg
 18280  01520E  6E3F               	movwf	CANreceiveMessage@msg+1,c
 18281  015210  ECB0  F096         	call	_CANreceiveMessage	;wreg free
 18282                           
 18283                           ;RemoteCan.c: 111: RTR_Flag = msg.RTR;
 18284  015214  0101               	movlb	1	; () banked
 18285  015216  A137               	btfss	(_msg+14)& (0+255),0,b
 18286  015218  D002               	goto	i2u1208_40
 18287  01521A  884B               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18288  01521C  D001               	goto	i2l9075
 18289  01521E                     i2u1208_40:
 18290  01521E  984B               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18291  015220                     i2l9075:
 18292                           
 18293                           ;RemoteCan.c: 112: id = msg.identifier;
 18294  015220  C129  F012         	movff	_msg,_id	;volatile
 18295  015224  C12A  F013         	movff	_msg+1,_id+1	;volatile
 18296  015228  C12B  F014         	movff	_msg+2,_id+2	;volatile
 18297  01522C  C12C  F015         	movff	_msg+3,_id+3	;volatile
 18298                           
 18299                           ;RemoteCan.c: 113: newMessageCan = 1;
 18300  015230  8E4B               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 18301                           
 18302                           ;RemoteCan.c: 114: if (id == 0b00000000110) {
 18303  015232  0E06               	movlw	6
 18304  015234  1812               	xorwf	_id,w,c	;volatile
 18305  015236  1013               	iorwf	_id+1,w,c	;volatile
 18306  015238  1014               	iorwf	_id+2,w,c	;volatile
 18307  01523A  1015               	iorwf	_id+3,w,c	;volatile
 18308  01523C  A4D8               	btfss	status,2,c
 18309  01523E  D01A               	goto	i2l9093
 18310                           
 18311                           ;RemoteCan.c: 115: for (unsigned char i = 0; i < 8; i++) {
 18312  015240  0E00               	movlw	0
 18313  015242  6E4A               	movwf	ISR_alta@i,c
 18314  015244                     i2l9083:
 18315  015244  0E07               	movlw	7
 18316  015246  644A               	cpfsgt	ISR_alta@i,c
 18317  015248  D001               	goto	i2l9087
 18318  01524A  D014               	goto	i2l9093
 18319  01524C                     i2l9087:
 18320                           
 18321                           ;RemoteCan.c: 116: data_speed_rx[i] = msg.data[i];
 18322  01524C  504A               	movf	ISR_alta@i,w,c
 18323  01524E  0D01               	mullw	1
 18324  015250  0E2D               	movlw	low (_msg+4)
 18325  015252  24F3               	addwf	prodl,w,c
 18326  015254  6ED9               	movwf	fsr2l,c
 18327  015256  0E01               	movlw	high (_msg+4)
 18328  015258  20F4               	addwfc	prodh,w,c
 18329  01525A  6EDA               	movwf	fsr2h,c
 18330  01525C  504A               	movf	ISR_alta@i,w,c
 18331  01525E  0D01               	mullw	1
 18332  015260  0E01               	movlw	low _data_speed_rx
 18333  015262  24F3               	addwf	prodl,w,c
 18334  015264  6EE1               	movwf	fsr1l,c
 18335  015266  0E00               	movlw	high _data_speed_rx
 18336  015268  20F4               	addwfc	prodh,w,c
 18337  01526A  6EE2               	movwf	fsr1h,c
 18338  01526C  CFDF FFE7          	movff	indf2,indf1
 18339  015270  2A4A               	incf	ISR_alta@i,f,c
 18340  015272  D7E8               	goto	i2l9083
 18341  015274                     i2l9093:
 18342                           
 18343                           ;RemoteCan.c: 117: }
 18344                           ;RemoteCan.c: 118: }
 18345                           ;RemoteCan.c: 120: if (id == 0b00000001011) {
 18346  015274  0E0B               	movlw	11
 18347  015276  1812               	xorwf	_id,w,c	;volatile
 18348  015278  1013               	iorwf	_id+1,w,c	;volatile
 18349  01527A  1014               	iorwf	_id+2,w,c	;volatile
 18350  01527C  1015               	iorwf	_id+3,w,c	;volatile
 18351  01527E  A4D8               	btfss	status,2,c
 18352  015280  D004               	goto	i2l9099
 18353                           
 18354                           ;RemoteCan.c: 121: if (msg.data[0] == 1) {
 18355  015282  0101               	movlb	1	; () banked
 18356  015284  052D               	decf	(_msg+4)& (0+255),w,b
 18357  015286  B4D8               	btfsc	status,2,c
 18358                           
 18359                           ; BSR set to: 1
 18360                           ;RemoteCan.c: 122: space_available = 1;
 18361  015288  824C               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 18362  01528A                     i2l9099:
 18363                           
 18364                           ;RemoteCan.c: 123: }
 18365                           ;RemoteCan.c: 124: }
 18366                           ;RemoteCan.c: 126: if (id == 0xAA) {
 18367  01528A  0EAA               	movlw	170
 18368  01528C  1812               	xorwf	_id,w,c	;volatile
 18369  01528E  1013               	iorwf	_id+1,w,c	;volatile
 18370  015290  1014               	iorwf	_id+2,w,c	;volatile
 18371  015292  1015               	iorwf	_id+3,w,c	;volatile
 18372  015294  A4D8               	btfss	status,2,c
 18373  015296  D004               	goto	i2l9103
 18374                           
 18375                           ;RemoteCan.c: 127: user_data = msg.data[0];
 18376  015298  C12D  F0DE         	movff	_msg+4,_user_data
 18377  01529C  0100               	movlb	0	; () banked
 18378  01529E  6BDF               	clrf	(_user_data+1)& (0+255),b
 18379  0152A0                     i2l9103:
 18380                           
 18381                           ;RemoteCan.c: 128: }
 18382                           ;RemoteCan.c: 130: if (id == 0b00000000010) {
 18383  0152A0  0E02               	movlw	2
 18384  0152A2  1812               	xorwf	_id,w,c	;volatile
 18385  0152A4  1013               	iorwf	_id+1,w,c	;volatile
 18386  0152A6  1014               	iorwf	_id+2,w,c	;volatile
 18387  0152A8  1015               	iorwf	_id+3,w,c	;volatile
 18388  0152AA  B4D8               	btfsc	status,2,c
 18389                           
 18390                           ;RemoteCan.c: 131: if (RTR_Flag == 1) {
 18391  0152AC  A84B               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18392  0152AE  D025               	goto	i2l9117
 18393                           
 18394                           ;RemoteCan.c: 132: pr_time_4 = time_counter;
 18395  0152B0  C022  F01A         	movff	_time_counter,_pr_time_4	;volatile
 18396  0152B4  C023  F01B         	movff	_time_counter+1,_pr_time_4+1	;volatile
 18397  0152B8  C024  F01C         	movff	_time_counter+2,_pr_time_4+2	;volatile
 18398  0152BC  C025  F01D         	movff	_time_counter+3,_pr_time_4+3	;volatile
 18399                           
 18400                           ;RemoteCan.c: 133: data[0] = 0x03;
 18401  0152C0  0E03               	movlw	3
 18402  0152C2  6E2C               	movwf	_data,c
 18403                           
 18404                           ;RemoteCan.c: 134: _delay((unsigned long)((10)*(16000000/4000000.0)));
 18405  0152C4  0E0D               	movlw	13
 18406  0152C6                     i2u1245_47:
 18407  0152C6  2EE8               	decfsz	wreg,f,c
 18408  0152C8  D7FE               	goto	i2u1245_47
 18409  0152CA  F000               	nop	
 18410  0152CC                     i2l9113:
 18411  0152CC  EC8A  F0B0         	call	i2_CANisTxReady	;wreg free
 18412  0152D0  06E8               	decf	wreg,f,c
 18413  0152D2  A4D8               	btfss	status,2,c
 18414  0152D4  D7FB               	goto	i2l9113
 18415                           
 18416                           ;RemoteCan.c: 136: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 18417  0152D6  0E02               	movlw	2
 18418  0152D8  6E3E               	movwf	i2CANsendMessage@identifier,c
 18419  0152DA  0E00               	movlw	0
 18420  0152DC  6E3F               	movwf	i2CANsendMessage@identifier+1,c
 18421  0152DE  0E00               	movlw	0
 18422  0152E0  6E40               	movwf	i2CANsendMessage@identifier+2,c
 18423  0152E2  0E00               	movlw	0
 18424  0152E4  6E41               	movwf	i2CANsendMessage@identifier+3,c
 18425  0152E6  0E2C               	movlw	low _data
 18426  0152E8  6E42               	movwf	i2CANsendMessage@data,c
 18427  0152EA  0E00               	movlw	high _data
 18428  0152EC  6E43               	movwf	i2CANsendMessage@data+1,c
 18429  0152EE  0E08               	movlw	8
 18430  0152F0  6E44               	movwf	i2CANsendMessage@dataLength,c
 18431  0152F2  0EBC               	movlw	188
 18432  0152F4  6E45               	movwf	i2CANsendMessage@flags,c
 18433  0152F6  EC93  F08D         	call	i2_CANsendMessage	;wreg free
 18434  0152FA                     i2l9117:
 18435                           
 18436                           ;RemoteCan.c: 142: }
 18437                           ;RemoteCan.c: 143: }
 18438                           ;RemoteCan.c: 144: }
 18439                           ;RemoteCan.c: 145: LATDbits.LATD2 = 1;
 18440  0152FA  848C               	bsf	3980,2,c	;volatile
 18441                           
 18442                           ;RemoteCan.c: 146: LATDbits.LATD3 = 1;
 18443  0152FC  868C               	bsf	3980,3,c	;volatile
 18444                           
 18445                           ;RemoteCan.c: 147: PIR3bits.RXB1IF = 0;
 18446  0152FE  92A4               	bcf	4004,1,c	;volatile
 18447                           
 18448                           ;RemoteCan.c: 148: PIR3bits.RXB0IF = 0;
 18449  015300  90A4               	bcf	4004,0,c	;volatile
 18450  015302                     i2l769:
 18451  015302  C071  FFF5         	movff	??_ISR_alta+13,tablat
 18452  015306  C070  FFF8         	movff	??_ISR_alta+12,tblptru
 18453  01530A  C06F  FFF7         	movff	??_ISR_alta+11,tblptrh
 18454  01530E  C06E  FFF6         	movff	??_ISR_alta+10,tblptrl
 18455  015312  C06D  FFF4         	movff	??_ISR_alta+9,prodh
 18456  015316  C06C  FFF3         	movff	??_ISR_alta+8,prodl
 18457  01531A  C06B  FFDA         	movff	??_ISR_alta+7,fsr2h
 18458  01531E  C06A  FFD9         	movff	??_ISR_alta+6,fsr2l
 18459  015322  C069  FFE2         	movff	??_ISR_alta+5,fsr1h
 18460  015326  C068  FFE1         	movff	??_ISR_alta+4,fsr1l
 18461  01532A  C067  FFEA         	movff	??_ISR_alta+3,fsr0h
 18462  01532E  C066  FFE9         	movff	??_ISR_alta+2,fsr0l
 18463  015332  C065  FFFB         	movff	??_ISR_alta+1,pclatu
 18464  015336  C064  FFFA         	movff	??_ISR_alta,pclath
 18465  01533A  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18466  01533C  0011               	retfie		f
 18467  01533E                     __end_of_ISR_alta:
 18468                           	opt stack 0
 18469                           pclatu	equ	0xFFB
 18470                           pclath	equ	0xFFA
 18471                           tblptru	equ	0xFF8
 18472                           tblptrh	equ	0xFF7
 18473                           tblptrl	equ	0xFF6
 18474                           tablat	equ	0xFF5
 18475                           prodh	equ	0xFF4
 18476                           prodl	equ	0xFF3
 18477                           intcon	equ	0xFF2
 18478                           postinc0	equ	0xFEE
 18479                           fsr0h	equ	0xFEA
 18480                           fsr0l	equ	0xFE9
 18481                           wreg	equ	0xFE8
 18482                           indf1	equ	0xFE7
 18483                           plusw1	equ	0xFE3
 18484                           fsr1h	equ	0xFE2
 18485                           fsr1l	equ	0xFE1
 18486                           bsr	equ	0xFE0
 18487                           indf2	equ	0xFDF
 18488                           postinc2	equ	0xFDE
 18489                           plusw2	equ	0xFDB
 18490                           fsr2h	equ	0xFDA
 18491                           fsr2l	equ	0xFD9
 18492                           status	equ	0xFD8
 18493                           
 18494 ;; *************** function i2_CANsendMessage *****************
 18495 ;; Defined at:
 18496 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 18497 ;; Parameters:    Size  Location     Type
 18498 ;;  identifier      4   17[COMRAM] unsigned long 
 18499 ;;  data            2   21[COMRAM] PTR unsigned char 
 18500 ;;		 -> data_speed(1), park_assist_state(8), data_brake(1), data_steering(1), 
 18501 ;;		 -> data(1), 
 18502 ;;  dataLength      1   23[COMRAM] unsigned char 
 18503 ;;  flags           1   24[COMRAM] enum E16909
 18504 ;; Auto vars:     Size  Location     Type
 18505 ;;  CANsendMessa    4    0[BANK0 ] unsigned long 
 18506 ;; Return value:  Size  Location     Type
 18507 ;;		None               void
 18508 ;; Registers used:
 18509 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18510 ;; Tracked objects:
 18511 ;;		On entry : 0/0
 18512 ;;		On exit  : 0/0
 18513 ;;		Unchanged: 0/0
 18514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18515 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18516 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18517 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18518 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18519 ;;Total ram usage:       16 bytes
 18520 ;; Hardware stack levels used:    1
 18521 ;; This function calls:
 18522 ;;		Nothing
 18523 ;; This function is called by:
 18524 ;;		_ISR_alta
 18525 ;; This function uses a non-reentrant model
 18526 ;;
 18527                           
 18528                           	psect	text54
 18529  011B26                     __ptext54:
 18530                           	opt stack 0
 18531  011B26                     i2_CANsendMessage:
 18532                           	opt stack 20
 18533                           
 18534                           ;inc\CANlib.h: 296: unsigned long tamp;
 18535                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 18536                           
 18537                           ;incstack = 0
 18538  011B26  010F               	movlb	15	; () banked
 18539  011B28  B740               	btfsc	64,3,b	;volatile
 18540  011B2A  D122               	goto	i2l375
 18541                           
 18542                           ; BSR set to: 15
 18543                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 18544  011B2C  C044  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 18545                           
 18546                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 18547  011B30  AC45               	btfss	i2CANsendMessage@flags,6,c
 18548  011B32  D003               	goto	i2l376
 18549                           
 18550                           ; BSR set to: 15
 18551                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 18552  011B34  010F               	movlb	15	; () banked
 18553  011B36  8D45               	bsf	69,6,b	;volatile
 18554  011B38  D002               	goto	i2l377
 18555  011B3A                     i2l376:
 18556                           
 18557                           ; BSR set to: 15
 18558                           ;inc\CANlib.h: 302: else
 18559                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 18560  011B3A  010F               	movlb	15	; () banked
 18561  011B3C  9D45               	bcf	69,6,b	;volatile
 18562  011B3E                     i2l377:
 18563                           
 18564                           ; BSR set to: 15
 18565                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 18566  011B3E  A645               	btfss	i2CANsendMessage@flags,3,c
 18567  011B40  D06D               	goto	i2l378
 18568                           
 18569                           ; BSR set to: 15
 18570                           ;inc\CANlib.h: 306: {
 18571                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 18572  011B42  503E               	movf	i2CANsendMessage@identifier,w,c
 18573  011B44  0100               	movlb	0	; () banked
 18574  011B46  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18575  011B48  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18576  011B4A  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18577  011B4C  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18578                           
 18579                           ; BSR set to: 0
 18580                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 18581  011B4E  C060  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 18582                           
 18583                           ; BSR set to: 0
 18584                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 18585  011B52  0E00               	movlw	0
 18586  011B54  143E               	andwf	i2CANsendMessage@identifier,w,c
 18587  011B56  0100               	movlb	0	; () banked
 18588  011B58  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18589  011B5A  0EFF               	movlw	255
 18590  011B5C  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 18591  011B5E  0100               	movlb	0	; () banked
 18592  011B60  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 18593  011B62  0E00               	movlw	0
 18594  011B64  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 18595  011B66  0100               	movlb	0	; () banked
 18596  011B68  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 18597  011B6A  0E00               	movlw	0
 18598  011B6C  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 18599  011B6E  0100               	movlb	0	; () banked
 18600  011B70  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 18601                           
 18602                           ; BSR set to: 0
 18603                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 18604  011B72  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18605  011B76  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18606  011B7A  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18607  011B7E  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18608  011B82  C047  F046         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 18609  011B86  C048  F047         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 18610  011B8A  C049  F048         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 18611  011B8E  6A49               	clrf	??i2_CANsendMessage+3,c
 18612  011B90  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18613  011B94  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18614  011B98  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18615  011B9C  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18616                           
 18617                           ; BSR set to: 0
 18618                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 18619  011BA0  C060  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 18620                           
 18621                           ; BSR set to: 0
 18622                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 18623  011BA4  0E00               	movlw	0
 18624  011BA6  010F               	movlb	15	; () banked
 18625  011BA8  6F42               	movwf	66,b	;volatile
 18626                           
 18627                           ; BSR set to: 15
 18628                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 18629  011BAA  010F               	movlb	15	; () banked
 18630  011BAC  8742               	bsf	66,3,b	;volatile
 18631                           
 18632                           ; BSR set to: 15
 18633                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 18634  011BAE  A040               	btfss	i2CANsendMessage@identifier+2,0,c
 18635  011BB0  D002               	goto	i2l379
 18636                           
 18637                           ; BSR set to: 15
 18638                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 18639  011BB2  010F               	movlb	15	; () banked
 18640  011BB4  8142               	bsf	66,0,b	;volatile
 18641  011BB6                     i2l379:
 18642                           
 18643                           ; BSR set to: 15
 18644                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 18645  011BB6  A240               	btfss	i2CANsendMessage@identifier+2,1,c
 18646  011BB8  D002               	goto	i2l380
 18647                           
 18648                           ; BSR set to: 15
 18649                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 18650  011BBA  010F               	movlb	15	; () banked
 18651  011BBC  8342               	bsf	66,1,b	;volatile
 18652  011BBE                     i2l380:
 18653                           
 18654                           ; BSR set to: 15
 18655                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 18656  011BBE  A440               	btfss	i2CANsendMessage@identifier+2,2,c
 18657  011BC0  D002               	goto	i2l381
 18658                           
 18659                           ; BSR set to: 15
 18660                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 18661  011BC2  010F               	movlb	15	; () banked
 18662  011BC4  8B42               	bsf	66,5,b	;volatile
 18663  011BC6                     i2l381:
 18664                           
 18665                           ; BSR set to: 15
 18666                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 18667  011BC6  A640               	btfss	i2CANsendMessage@identifier+2,3,c
 18668  011BC8  D002               	goto	i2l382
 18669                           
 18670                           ; BSR set to: 15
 18671                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 18672  011BCA  010F               	movlb	15	; () banked
 18673  011BCC  8D42               	bsf	66,6,b	;volatile
 18674  011BCE                     i2l382:
 18675                           
 18676                           ; BSR set to: 15
 18677                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 18678  011BCE  A840               	btfss	i2CANsendMessage@identifier+2,4,c
 18679  011BD0  D002               	goto	i2l8849
 18680                           
 18681                           ; BSR set to: 15
 18682                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 18683  011BD2  010F               	movlb	15	; () banked
 18684  011BD4  8F42               	bsf	66,7,b	;volatile
 18685  011BD6                     i2l8849:
 18686                           
 18687                           ; BSR set to: 15
 18688                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 18689  011BD6  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18690  011BDA  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18691  011BDE  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18692  011BE2  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18693  011BE6  0E16               	movlw	22
 18694  011BE8  D005               	goto	i2u1172_40
 18695  011BEA                     i2u1172_45:
 18696  011BEA  90D8               	bcf	status,0,c
 18697  011BEC  3249               	rrcf	??i2_CANsendMessage+3,f,c
 18698  011BEE  3248               	rrcf	??i2_CANsendMessage+2,f,c
 18699  011BF0  3247               	rrcf	??i2_CANsendMessage+1,f,c
 18700  011BF2  3246               	rrcf	??i2_CANsendMessage,f,c
 18701  011BF4                     i2u1172_40:
 18702  011BF4  2EE8               	decfsz	wreg,f,c
 18703  011BF6  D7F9               	goto	i2u1172_45
 18704  011BF8  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18705  011BFC  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18706  011C00  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18707  011C04  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18708                           
 18709                           ; BSR set to: 15
 18710                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 18711  011C08  0100               	movlb	0	; () banked
 18712  011C0A  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 18713  011C0C  0100               	movlb	0	; () banked
 18714  011C0E  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18715  011C10  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18716  011C12  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18717  011C14  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18718                           
 18719                           ; BSR set to: 0
 18720                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 18721  011C16  C060  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 18722                           
 18723                           ;inc\CANlib.h: 332: }
 18724  011C1A  D053               	goto	i2l8869
 18725  011C1C                     i2l378:
 18726                           
 18727                           ; BSR set to: 15
 18728                           ;inc\CANlib.h: 334: else
 18729                           ;inc\CANlib.h: 336: {
 18730                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 18731  011C1C  010F               	movlb	15	; () banked
 18732  011C1E  9742               	bcf	66,3,b	;volatile
 18733                           
 18734                           ; BSR set to: 15
 18735                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 18736  011C20  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18737  011C24  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18738  011C28  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18739  011C2C  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18740  011C30  0E04               	movlw	4
 18741  011C32  D005               	goto	i2u1173_40
 18742  011C34                     i2u1173_45:
 18743  011C34  90D8               	bcf	status,0,c
 18744  011C36  3249               	rrcf	??i2_CANsendMessage+3,f,c
 18745  011C38  3248               	rrcf	??i2_CANsendMessage+2,f,c
 18746  011C3A  3247               	rrcf	??i2_CANsendMessage+1,f,c
 18747  011C3C  3246               	rrcf	??i2_CANsendMessage,f,c
 18748  011C3E                     i2u1173_40:
 18749  011C3E  2EE8               	decfsz	wreg,f,c
 18750  011C40  D7F9               	goto	i2u1173_45
 18751  011C42  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18752  011C46  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18753  011C4A  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18754  011C4E  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18755                           
 18756                           ; BSR set to: 15
 18757                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 18758  011C52  0100               	movlb	0	; () banked
 18759  011C54  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 18760  011C56  0100               	movlb	0	; () banked
 18761  011C58  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18762  011C5A  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18763  011C5C  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18764  011C5E  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18765                           
 18766                           ; BSR set to: 0
 18767                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 18768  011C60  C060  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 18769                           
 18770                           ; BSR set to: 0
 18771                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 18772  011C64  0E07               	movlw	7
 18773  011C66  143E               	andwf	i2CANsendMessage@identifier,w,c
 18774  011C68  0100               	movlb	0	; () banked
 18775  011C6A  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18776  011C6C  0E00               	movlw	0
 18777  011C6E  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 18778  011C70  0100               	movlb	0	; () banked
 18779  011C72  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 18780  011C74  0E00               	movlw	0
 18781  011C76  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 18782  011C78  0100               	movlb	0	; () banked
 18783  011C7A  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 18784  011C7C  0E00               	movlw	0
 18785  011C7E  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 18786  011C80  0100               	movlb	0	; () banked
 18787  011C82  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 18788                           
 18789                           ; BSR set to: 0
 18790                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 18791  011C84  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18792  011C88  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18793  011C8C  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18794  011C90  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18795  011C94  0E05               	movlw	5
 18796  011C96                     i2u1174_45:
 18797  011C96  90D8               	bcf	status,0,c
 18798  011C98  3646               	rlcf	??i2_CANsendMessage,f,c
 18799  011C9A  3647               	rlcf	??i2_CANsendMessage+1,f,c
 18800  011C9C  3648               	rlcf	??i2_CANsendMessage+2,f,c
 18801  011C9E  3649               	rlcf	??i2_CANsendMessage+3,f,c
 18802  011CA0  2EE8               	decfsz	wreg,f,c
 18803  011CA2  D7F9               	goto	i2u1174_45
 18804  011CA4  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18805  011CA8  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18806  011CAC  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18807  011CB0  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18808                           
 18809                           ; BSR set to: 0
 18810                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 18811  011CB4  010F               	movlb	15	; () banked
 18812  011CB6  5142               	movf	66,w,b	;volatile
 18813  011CB8  0B1F               	andlw	31
 18814  011CBA  010F               	movlb	15	; () banked
 18815  011CBC  6F42               	movwf	66,b	;volatile
 18816                           
 18817                           ; BSR set to: 15
 18818                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 18819  011CBE  C060  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 18820  011CC2                     i2l8869:
 18821                           
 18822                           ;inc\CANlib.h: 347: }
 18823                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 18824  011CC2  A045               	btfss	i2CANsendMessage@flags,0,c
 18825  011CC4  D003               	goto	i2l385
 18826                           
 18827                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 18828  011CC6  010F               	movlb	15	; () banked
 18829  011CC8  8140               	bsf	64,0,b	;volatile
 18830  011CCA  D002               	goto	i2l386
 18831  011CCC                     i2l385:
 18832                           
 18833                           ;inc\CANlib.h: 351: else
 18834                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 18835  011CCC  010F               	movlb	15	; () banked
 18836  011CCE  9140               	bcf	64,0,b	;volatile
 18837  011CD0                     i2l386:
 18838                           
 18839                           ; BSR set to: 15
 18840                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 18841  011CD0  A245               	btfss	i2CANsendMessage@flags,1,c
 18842  011CD2  D003               	goto	i2l387
 18843                           
 18844                           ; BSR set to: 15
 18845                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 18846  011CD4  010F               	movlb	15	; () banked
 18847  011CD6  8340               	bsf	64,1,b	;volatile
 18848  011CD8  D002               	goto	i2l8875
 18849  011CDA                     i2l387:
 18850                           
 18851                           ; BSR set to: 15
 18852                           ;inc\CANlib.h: 355: else
 18853                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 18854  011CDA  010F               	movlb	15	; () banked
 18855  011CDC  9340               	bcf	64,1,b	;volatile
 18856  011CDE                     i2l8875:
 18857                           
 18858                           ; BSR set to: 15
 18859                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 18860  011CDE  C042  FFD9         	movff	i2CANsendMessage@data,fsr2l
 18861  011CE2  C043  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 18862  011CE6  50DF               	movf	indf2,w,c
 18863  011CE8  010F               	movlb	15	; () banked
 18864  011CEA  6F46               	movwf	70,b	;volatile
 18865                           
 18866                           ; BSR set to: 15
 18867                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 18868  011CEC  EE20 F001          	lfsr	2,1
 18869  011CF0  5042               	movf	i2CANsendMessage@data,w,c
 18870  011CF2  26D9               	addwf	fsr2l,f,c
 18871  011CF4  5043               	movf	i2CANsendMessage@data+1,w,c
 18872  011CF6  22DA               	addwfc	fsr2h,f,c
 18873  011CF8  50DF               	movf	indf2,w,c
 18874  011CFA  010F               	movlb	15	; () banked
 18875  011CFC  6F47               	movwf	71,b	;volatile
 18876                           
 18877                           ; BSR set to: 15
 18878                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 18879  011CFE  EE20 F002          	lfsr	2,2
 18880  011D02  5042               	movf	i2CANsendMessage@data,w,c
 18881  011D04  26D9               	addwf	fsr2l,f,c
 18882  011D06  5043               	movf	i2CANsendMessage@data+1,w,c
 18883  011D08  22DA               	addwfc	fsr2h,f,c
 18884  011D0A  50DF               	movf	indf2,w,c
 18885  011D0C  010F               	movlb	15	; () banked
 18886  011D0E  6F48               	movwf	72,b	;volatile
 18887                           
 18888                           ; BSR set to: 15
 18889                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 18890  011D10  EE20 F003          	lfsr	2,3
 18891  011D14  5042               	movf	i2CANsendMessage@data,w,c
 18892  011D16  26D9               	addwf	fsr2l,f,c
 18893  011D18  5043               	movf	i2CANsendMessage@data+1,w,c
 18894  011D1A  22DA               	addwfc	fsr2h,f,c
 18895  011D1C  50DF               	movf	indf2,w,c
 18896  011D1E  010F               	movlb	15	; () banked
 18897  011D20  6F49               	movwf	73,b	;volatile
 18898                           
 18899                           ; BSR set to: 15
 18900                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 18901  011D22  EE20 F004          	lfsr	2,4
 18902  011D26  5042               	movf	i2CANsendMessage@data,w,c
 18903  011D28  26D9               	addwf	fsr2l,f,c
 18904  011D2A  5043               	movf	i2CANsendMessage@data+1,w,c
 18905  011D2C  22DA               	addwfc	fsr2h,f,c
 18906  011D2E  50DF               	movf	indf2,w,c
 18907  011D30  010F               	movlb	15	; () banked
 18908  011D32  6F4A               	movwf	74,b	;volatile
 18909                           
 18910                           ; BSR set to: 15
 18911                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 18912  011D34  EE20 F005          	lfsr	2,5
 18913  011D38  5042               	movf	i2CANsendMessage@data,w,c
 18914  011D3A  26D9               	addwf	fsr2l,f,c
 18915  011D3C  5043               	movf	i2CANsendMessage@data+1,w,c
 18916  011D3E  22DA               	addwfc	fsr2h,f,c
 18917  011D40  50DF               	movf	indf2,w,c
 18918  011D42  010F               	movlb	15	; () banked
 18919  011D44  6F4B               	movwf	75,b	;volatile
 18920                           
 18921                           ; BSR set to: 15
 18922                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 18923  011D46  EE20 F006          	lfsr	2,6
 18924  011D4A  5042               	movf	i2CANsendMessage@data,w,c
 18925  011D4C  26D9               	addwf	fsr2l,f,c
 18926  011D4E  5043               	movf	i2CANsendMessage@data+1,w,c
 18927  011D50  22DA               	addwfc	fsr2h,f,c
 18928  011D52  50DF               	movf	indf2,w,c
 18929  011D54  010F               	movlb	15	; () banked
 18930  011D56  6F4C               	movwf	76,b	;volatile
 18931                           
 18932                           ; BSR set to: 15
 18933                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 18934  011D58  EE20 F007          	lfsr	2,7
 18935  011D5C  5042               	movf	i2CANsendMessage@data,w,c
 18936  011D5E  26D9               	addwf	fsr2l,f,c
 18937  011D60  5043               	movf	i2CANsendMessage@data+1,w,c
 18938  011D62  22DA               	addwfc	fsr2h,f,c
 18939  011D64  50DF               	movf	indf2,w,c
 18940  011D66  010F               	movlb	15	; () banked
 18941  011D68  6F4D               	movwf	77,b	;volatile
 18942                           
 18943                           ; BSR set to: 15
 18944                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 18945  011D6A  010F               	movlb	15	; () banked
 18946  011D6C  8740               	bsf	64,3,b	;volatile
 18947                           
 18948                           ; BSR set to: 15
 18949                           ;inc\CANlib.h: 368: return;
 18950  011D6E  0012               	return	
 18951  011D70                     i2l375:
 18952                           
 18953                           ; BSR set to: 15
 18954                           ;inc\CANlib.h: 369: }
 18955                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 18956  011D70  010F               	movlb	15	; () banked
 18957  011D72  B730               	btfsc	48,3,b	;volatile
 18958  011D74  D122               	goto	i2l390
 18959                           
 18960                           ; BSR set to: 15
 18961                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 18962  011D76  C044  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 18963                           
 18964                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 18965  011D7A  AC45               	btfss	i2CANsendMessage@flags,6,c
 18966  011D7C  D003               	goto	i2l391
 18967                           
 18968                           ; BSR set to: 15
 18969                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 18970  011D7E  010F               	movlb	15	; () banked
 18971  011D80  8D35               	bsf	53,6,b	;volatile
 18972  011D82  D002               	goto	i2l392
 18973  011D84                     i2l391:
 18974                           
 18975                           ; BSR set to: 15
 18976                           ;inc\CANlib.h: 378: else
 18977                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 18978  011D84  010F               	movlb	15	; () banked
 18979  011D86  9D35               	bcf	53,6,b	;volatile
 18980  011D88                     i2l392:
 18981                           
 18982                           ; BSR set to: 15
 18983                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 18984  011D88  A645               	btfss	i2CANsendMessage@flags,3,c
 18985  011D8A  D06D               	goto	i2l393
 18986                           
 18987                           ; BSR set to: 15
 18988                           ;inc\CANlib.h: 382: {
 18989                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 18990  011D8C  503E               	movf	i2CANsendMessage@identifier,w,c
 18991  011D8E  0100               	movlb	0	; () banked
 18992  011D90  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18993  011D92  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18994  011D94  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18995  011D96  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18996                           
 18997                           ; BSR set to: 0
 18998                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 18999  011D98  C060  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 19000                           
 19001                           ; BSR set to: 0
 19002                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 19003  011D9C  0E00               	movlw	0
 19004  011D9E  143E               	andwf	i2CANsendMessage@identifier,w,c
 19005  011DA0  0100               	movlb	0	; () banked
 19006  011DA2  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 19007  011DA4  0EFF               	movlw	255
 19008  011DA6  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 19009  011DA8  0100               	movlb	0	; () banked
 19010  011DAA  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 19011  011DAC  0E00               	movlw	0
 19012  011DAE  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 19013  011DB0  0100               	movlb	0	; () banked
 19014  011DB2  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 19015  011DB4  0E00               	movlw	0
 19016  011DB6  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 19017  011DB8  0100               	movlb	0	; () banked
 19018  011DBA  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 19019                           
 19020                           ; BSR set to: 0
 19021                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 19022  011DBC  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19023  011DC0  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19024  011DC4  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19025  011DC8  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19026  011DCC  C047  F046         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19027  011DD0  C048  F047         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19028  011DD4  C049  F048         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19029  011DD8  6A49               	clrf	??i2_CANsendMessage+3,c
 19030  011DDA  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19031  011DDE  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19032  011DE2  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19033  011DE6  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19034                           
 19035                           ; BSR set to: 0
 19036                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 19037  011DEA  C060  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 19038                           
 19039                           ; BSR set to: 0
 19040                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 19041  011DEE  0E00               	movlw	0
 19042  011DF0  010F               	movlb	15	; () banked
 19043  011DF2  6F32               	movwf	50,b	;volatile
 19044                           
 19045                           ; BSR set to: 15
 19046                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 19047  011DF4  010F               	movlb	15	; () banked
 19048  011DF6  8732               	bsf	50,3,b	;volatile
 19049                           
 19050                           ; BSR set to: 15
 19051                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 19052  011DF8  A040               	btfss	i2CANsendMessage@identifier+2,0,c
 19053  011DFA  D002               	goto	i2l394
 19054                           
 19055                           ; BSR set to: 15
 19056                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 19057  011DFC  010F               	movlb	15	; () banked
 19058  011DFE  8132               	bsf	50,0,b	;volatile
 19059  011E00                     i2l394:
 19060                           
 19061                           ; BSR set to: 15
 19062                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 19063  011E00  A240               	btfss	i2CANsendMessage@identifier+2,1,c
 19064  011E02  D002               	goto	i2l395
 19065                           
 19066                           ; BSR set to: 15
 19067                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 19068  011E04  010F               	movlb	15	; () banked
 19069  011E06  8332               	bsf	50,1,b	;volatile
 19070  011E08                     i2l395:
 19071                           
 19072                           ; BSR set to: 15
 19073                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 19074  011E08  A440               	btfss	i2CANsendMessage@identifier+2,2,c
 19075  011E0A  D002               	goto	i2l396
 19076                           
 19077                           ; BSR set to: 15
 19078                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 19079  011E0C  010F               	movlb	15	; () banked
 19080  011E0E  8B32               	bsf	50,5,b	;volatile
 19081  011E10                     i2l396:
 19082                           
 19083                           ; BSR set to: 15
 19084                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 19085  011E10  A640               	btfss	i2CANsendMessage@identifier+2,3,c
 19086  011E12  D002               	goto	i2l397
 19087                           
 19088                           ; BSR set to: 15
 19089                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 19090  011E14  010F               	movlb	15	; () banked
 19091  011E16  8D32               	bsf	50,6,b	;volatile
 19092  011E18                     i2l397:
 19093                           
 19094                           ; BSR set to: 15
 19095                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 19096  011E18  A840               	btfss	i2CANsendMessage@identifier+2,4,c
 19097  011E1A  D002               	goto	i2l8925
 19098                           
 19099                           ; BSR set to: 15
 19100                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 19101  011E1C  010F               	movlb	15	; () banked
 19102  011E1E  8F32               	bsf	50,7,b	;volatile
 19103  011E20                     i2l8925:
 19104                           
 19105                           ; BSR set to: 15
 19106                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 19107  011E20  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19108  011E24  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19109  011E28  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19110  011E2C  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19111  011E30  0E16               	movlw	22
 19112  011E32  D005               	goto	i2u1185_40
 19113  011E34                     i2u1185_45:
 19114  011E34  90D8               	bcf	status,0,c
 19115  011E36  3249               	rrcf	??i2_CANsendMessage+3,f,c
 19116  011E38  3248               	rrcf	??i2_CANsendMessage+2,f,c
 19117  011E3A  3247               	rrcf	??i2_CANsendMessage+1,f,c
 19118  011E3C  3246               	rrcf	??i2_CANsendMessage,f,c
 19119  011E3E                     i2u1185_40:
 19120  011E3E  2EE8               	decfsz	wreg,f,c
 19121  011E40  D7F9               	goto	i2u1185_45
 19122  011E42  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19123  011E46  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19124  011E4A  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19125  011E4E  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19126                           
 19127                           ; BSR set to: 15
 19128                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 19129  011E52  0100               	movlb	0	; () banked
 19130  011E54  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 19131  011E56  0100               	movlb	0	; () banked
 19132  011E58  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 19133  011E5A  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 19134  011E5C  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 19135  011E5E  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 19136                           
 19137                           ; BSR set to: 0
 19138                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 19139  011E60  C060  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 19140                           
 19141                           ;inc\CANlib.h: 407: }
 19142  011E64  D053               	goto	i2l8945
 19143  011E66                     i2l393:
 19144                           
 19145                           ; BSR set to: 15
 19146                           ;inc\CANlib.h: 409: else
 19147                           ;inc\CANlib.h: 411: {
 19148                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 19149  011E66  010F               	movlb	15	; () banked
 19150  011E68  9732               	bcf	50,3,b	;volatile
 19151                           
 19152                           ; BSR set to: 15
 19153                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 19154  011E6A  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19155  011E6E  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19156  011E72  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19157  011E76  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19158  011E7A  0E04               	movlw	4
 19159  011E7C  D005               	goto	i2u1186_40
 19160  011E7E                     i2u1186_45:
 19161  011E7E  90D8               	bcf	status,0,c
 19162  011E80  3249               	rrcf	??i2_CANsendMessage+3,f,c
 19163  011E82  3248               	rrcf	??i2_CANsendMessage+2,f,c
 19164  011E84  3247               	rrcf	??i2_CANsendMessage+1,f,c
 19165  011E86  3246               	rrcf	??i2_CANsendMessage,f,c
 19166  011E88                     i2u1186_40:
 19167  011E88  2EE8               	decfsz	wreg,f,c
 19168  011E8A  D7F9               	goto	i2u1186_45
 19169  011E8C  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19170  011E90  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19171  011E94  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19172  011E98  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19173                           
 19174                           ; BSR set to: 15
 19175                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 19176  011E9C  0100               	movlb	0	; () banked
 19177  011E9E  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 19178  011EA0  0100               	movlb	0	; () banked
 19179  011EA2  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 19180  011EA4  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 19181  011EA6  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 19182  011EA8  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 19183                           
 19184                           ; BSR set to: 0
 19185                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 19186  011EAA  C060  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 19187                           
 19188                           ; BSR set to: 0
 19189                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 19190  011EAE  0E07               	movlw	7
 19191  011EB0  143E               	andwf	i2CANsendMessage@identifier,w,c
 19192  011EB2  0100               	movlb	0	; () banked
 19193  011EB4  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 19194  011EB6  0E00               	movlw	0
 19195  011EB8  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 19196  011EBA  0100               	movlb	0	; () banked
 19197  011EBC  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 19198  011EBE  0E00               	movlw	0
 19199  011EC0  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 19200  011EC2  0100               	movlb	0	; () banked
 19201  011EC4  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 19202  011EC6  0E00               	movlw	0
 19203  011EC8  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 19204  011ECA  0100               	movlb	0	; () banked
 19205  011ECC  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 19206                           
 19207                           ; BSR set to: 0
 19208                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 19209  011ECE  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19210  011ED2  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19211  011ED6  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19212  011EDA  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19213  011EDE  0E05               	movlw	5
 19214  011EE0                     i2u1187_45:
 19215  011EE0  90D8               	bcf	status,0,c
 19216  011EE2  3646               	rlcf	??i2_CANsendMessage,f,c
 19217  011EE4  3647               	rlcf	??i2_CANsendMessage+1,f,c
 19218  011EE6  3648               	rlcf	??i2_CANsendMessage+2,f,c
 19219  011EE8  3649               	rlcf	??i2_CANsendMessage+3,f,c
 19220  011EEA  2EE8               	decfsz	wreg,f,c
 19221  011EEC  D7F9               	goto	i2u1187_45
 19222  011EEE  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19223  011EF2  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19224  011EF6  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19225  011EFA  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19226                           
 19227                           ; BSR set to: 0
 19228                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 19229  011EFE  010F               	movlb	15	; () banked
 19230  011F00  5132               	movf	50,w,b	;volatile
 19231  011F02  0B1F               	andlw	31
 19232  011F04  010F               	movlb	15	; () banked
 19233  011F06  6F32               	movwf	50,b	;volatile
 19234                           
 19235                           ; BSR set to: 15
 19236                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 19237  011F08  C060  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 19238  011F0C                     i2l8945:
 19239                           
 19240                           ;inc\CANlib.h: 422: }
 19241                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 19242  011F0C  A045               	btfss	i2CANsendMessage@flags,0,c
 19243  011F0E  D003               	goto	i2l400
 19244                           
 19245                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 19246  011F10  010F               	movlb	15	; () banked
 19247  011F12  8130               	bsf	48,0,b	;volatile
 19248  011F14  D002               	goto	i2l401
 19249  011F16                     i2l400:
 19250                           
 19251                           ;inc\CANlib.h: 426: else
 19252                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 19253  011F16  010F               	movlb	15	; () banked
 19254  011F18  9130               	bcf	48,0,b	;volatile
 19255  011F1A                     i2l401:
 19256                           
 19257                           ; BSR set to: 15
 19258                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 19259  011F1A  A245               	btfss	i2CANsendMessage@flags,1,c
 19260  011F1C  D003               	goto	i2l402
 19261                           
 19262                           ; BSR set to: 15
 19263                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 19264  011F1E  010F               	movlb	15	; () banked
 19265  011F20  8330               	bsf	48,1,b	;volatile
 19266  011F22  D002               	goto	i2l8951
 19267  011F24                     i2l402:
 19268                           
 19269                           ; BSR set to: 15
 19270                           ;inc\CANlib.h: 430: else
 19271                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 19272  011F24  010F               	movlb	15	; () banked
 19273  011F26  9330               	bcf	48,1,b	;volatile
 19274  011F28                     i2l8951:
 19275                           
 19276                           ; BSR set to: 15
 19277                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 19278  011F28  C042  FFD9         	movff	i2CANsendMessage@data,fsr2l
 19279  011F2C  C043  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 19280  011F30  50DF               	movf	indf2,w,c
 19281  011F32  010F               	movlb	15	; () banked
 19282  011F34  6F36               	movwf	54,b	;volatile
 19283                           
 19284                           ; BSR set to: 15
 19285                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 19286  011F36  EE20 F001          	lfsr	2,1
 19287  011F3A  5042               	movf	i2CANsendMessage@data,w,c
 19288  011F3C  26D9               	addwf	fsr2l,f,c
 19289  011F3E  5043               	movf	i2CANsendMessage@data+1,w,c
 19290  011F40  22DA               	addwfc	fsr2h,f,c
 19291  011F42  50DF               	movf	indf2,w,c
 19292  011F44  010F               	movlb	15	; () banked
 19293  011F46  6F37               	movwf	55,b	;volatile
 19294                           
 19295                           ; BSR set to: 15
 19296                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 19297  011F48  EE20 F002          	lfsr	2,2
 19298  011F4C  5042               	movf	i2CANsendMessage@data,w,c
 19299  011F4E  26D9               	addwf	fsr2l,f,c
 19300  011F50  5043               	movf	i2CANsendMessage@data+1,w,c
 19301  011F52  22DA               	addwfc	fsr2h,f,c
 19302  011F54  50DF               	movf	indf2,w,c
 19303  011F56  010F               	movlb	15	; () banked
 19304  011F58  6F38               	movwf	56,b	;volatile
 19305                           
 19306                           ; BSR set to: 15
 19307                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 19308  011F5A  EE20 F003          	lfsr	2,3
 19309  011F5E  5042               	movf	i2CANsendMessage@data,w,c
 19310  011F60  26D9               	addwf	fsr2l,f,c
 19311  011F62  5043               	movf	i2CANsendMessage@data+1,w,c
 19312  011F64  22DA               	addwfc	fsr2h,f,c
 19313  011F66  50DF               	movf	indf2,w,c
 19314  011F68  010F               	movlb	15	; () banked
 19315  011F6A  6F39               	movwf	57,b	;volatile
 19316                           
 19317                           ; BSR set to: 15
 19318                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 19319  011F6C  EE20 F004          	lfsr	2,4
 19320  011F70  5042               	movf	i2CANsendMessage@data,w,c
 19321  011F72  26D9               	addwf	fsr2l,f,c
 19322  011F74  5043               	movf	i2CANsendMessage@data+1,w,c
 19323  011F76  22DA               	addwfc	fsr2h,f,c
 19324  011F78  50DF               	movf	indf2,w,c
 19325  011F7A  010F               	movlb	15	; () banked
 19326  011F7C  6F3A               	movwf	58,b	;volatile
 19327                           
 19328                           ; BSR set to: 15
 19329                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 19330  011F7E  EE20 F005          	lfsr	2,5
 19331  011F82  5042               	movf	i2CANsendMessage@data,w,c
 19332  011F84  26D9               	addwf	fsr2l,f,c
 19333  011F86  5043               	movf	i2CANsendMessage@data+1,w,c
 19334  011F88  22DA               	addwfc	fsr2h,f,c
 19335  011F8A  50DF               	movf	indf2,w,c
 19336  011F8C  010F               	movlb	15	; () banked
 19337  011F8E  6F3B               	movwf	59,b	;volatile
 19338                           
 19339                           ; BSR set to: 15
 19340                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 19341  011F90  EE20 F006          	lfsr	2,6
 19342  011F94  5042               	movf	i2CANsendMessage@data,w,c
 19343  011F96  26D9               	addwf	fsr2l,f,c
 19344  011F98  5043               	movf	i2CANsendMessage@data+1,w,c
 19345  011F9A  22DA               	addwfc	fsr2h,f,c
 19346  011F9C  50DF               	movf	indf2,w,c
 19347  011F9E  010F               	movlb	15	; () banked
 19348  011FA0  6F3C               	movwf	60,b	;volatile
 19349                           
 19350                           ; BSR set to: 15
 19351                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 19352  011FA2  EE20 F007          	lfsr	2,7
 19353  011FA6  5042               	movf	i2CANsendMessage@data,w,c
 19354  011FA8  26D9               	addwf	fsr2l,f,c
 19355  011FAA  5043               	movf	i2CANsendMessage@data+1,w,c
 19356  011FAC  22DA               	addwfc	fsr2h,f,c
 19357  011FAE  50DF               	movf	indf2,w,c
 19358  011FB0  010F               	movlb	15	; () banked
 19359  011FB2  6F3D               	movwf	61,b	;volatile
 19360                           
 19361                           ; BSR set to: 15
 19362                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 19363  011FB4  010F               	movlb	15	; () banked
 19364  011FB6  8730               	bsf	48,3,b	;volatile
 19365                           
 19366                           ; BSR set to: 15
 19367                           ;inc\CANlib.h: 444: return;
 19368  011FB8  0012               	return	
 19369  011FBA                     i2l390:
 19370                           
 19371                           ; BSR set to: 15
 19372                           ;inc\CANlib.h: 445: }
 19373                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 19374  011FBA  010F               	movlb	15	; () banked
 19375  011FBC  B720               	btfsc	32,3,b	;volatile
 19376  011FBE  0012               	return	
 19377                           
 19378                           ; BSR set to: 15
 19379                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 19380  011FC0  C044  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 19381                           
 19382                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 19383  011FC4  AC45               	btfss	i2CANsendMessage@flags,6,c
 19384  011FC6  D003               	goto	i2l405
 19385                           
 19386                           ; BSR set to: 15
 19387                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 19388  011FC8  010F               	movlb	15	; () banked
 19389  011FCA  8D25               	bsf	37,6,b	;volatile
 19390  011FCC  D002               	goto	i2l406
 19391  011FCE                     i2l405:
 19392                           
 19393                           ; BSR set to: 15
 19394                           ;inc\CANlib.h: 454: else
 19395                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 19396  011FCE  010F               	movlb	15	; () banked
 19397  011FD0  9D25               	bcf	37,6,b	;volatile
 19398  011FD2                     i2l406:
 19399                           
 19400                           ; BSR set to: 15
 19401                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 19402  011FD2  A645               	btfss	i2CANsendMessage@flags,3,c
 19403  011FD4  D06D               	goto	i2l407
 19404                           
 19405                           ; BSR set to: 15
 19406                           ;inc\CANlib.h: 458: {
 19407                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 19408  011FD6  503E               	movf	i2CANsendMessage@identifier,w,c
 19409  011FD8  0100               	movlb	0	; () banked
 19410  011FDA  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 19411  011FDC  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 19412  011FDE  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 19413  011FE0  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 19414                           
 19415                           ; BSR set to: 0
 19416                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 19417  011FE2  C060  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 19418                           
 19419                           ; BSR set to: 0
 19420                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 19421  011FE6  0E00               	movlw	0
 19422  011FE8  143E               	andwf	i2CANsendMessage@identifier,w,c
 19423  011FEA  0100               	movlb	0	; () banked
 19424  011FEC  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 19425  011FEE  0EFF               	movlw	255
 19426  011FF0  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 19427  011FF2  0100               	movlb	0	; () banked
 19428  011FF4  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 19429  011FF6  0E00               	movlw	0
 19430  011FF8  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 19431  011FFA  0100               	movlb	0	; () banked
 19432  011FFC  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 19433  011FFE  0E00               	movlw	0
 19434  012000  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 19435  012002  0100               	movlb	0	; () banked
 19436  012004  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 19437                           
 19438                           ; BSR set to: 0
 19439                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 19440  012006  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19441  01200A  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19442  01200E  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19443  012012  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19444  012016  C047  F046         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19445  01201A  C048  F047         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19446  01201E  C049  F048         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19447  012022  6A49               	clrf	??i2_CANsendMessage+3,c
 19448  012024  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19449  012028  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19450  01202C  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19451  012030  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19452                           
 19453                           ; BSR set to: 0
 19454                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 19455  012034  C060  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 19456                           
 19457                           ; BSR set to: 0
 19458                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 19459  012038  0E00               	movlw	0
 19460  01203A  010F               	movlb	15	; () banked
 19461  01203C  6F22               	movwf	34,b	;volatile
 19462                           
 19463                           ; BSR set to: 15
 19464                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 19465  01203E  010F               	movlb	15	; () banked
 19466  012040  8722               	bsf	34,3,b	;volatile
 19467                           
 19468                           ; BSR set to: 15
 19469                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 19470  012042  A040               	btfss	i2CANsendMessage@identifier+2,0,c
 19471  012044  D002               	goto	i2l408
 19472                           
 19473                           ; BSR set to: 15
 19474                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 19475  012046  010F               	movlb	15	; () banked
 19476  012048  8122               	bsf	34,0,b	;volatile
 19477  01204A                     i2l408:
 19478                           
 19479                           ; BSR set to: 15
 19480                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 19481  01204A  A240               	btfss	i2CANsendMessage@identifier+2,1,c
 19482  01204C  D002               	goto	i2l409
 19483                           
 19484                           ; BSR set to: 15
 19485                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 19486  01204E  010F               	movlb	15	; () banked
 19487  012050  8322               	bsf	34,1,b	;volatile
 19488  012052                     i2l409:
 19489                           
 19490                           ; BSR set to: 15
 19491                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 19492  012052  A440               	btfss	i2CANsendMessage@identifier+2,2,c
 19493  012054  D002               	goto	i2l410
 19494                           
 19495                           ; BSR set to: 15
 19496                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 19497  012056  010F               	movlb	15	; () banked
 19498  012058  8B22               	bsf	34,5,b	;volatile
 19499  01205A                     i2l410:
 19500                           
 19501                           ; BSR set to: 15
 19502                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 19503  01205A  A640               	btfss	i2CANsendMessage@identifier+2,3,c
 19504  01205C  D002               	goto	i2l411
 19505                           
 19506                           ; BSR set to: 15
 19507                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 19508  01205E  010F               	movlb	15	; () banked
 19509  012060  8D22               	bsf	34,6,b	;volatile
 19510  012062                     i2l411:
 19511                           
 19512                           ; BSR set to: 15
 19513                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 19514  012062  A840               	btfss	i2CANsendMessage@identifier+2,4,c
 19515  012064  D002               	goto	i2l9001
 19516                           
 19517                           ; BSR set to: 15
 19518                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 19519  012066  010F               	movlb	15	; () banked
 19520  012068  8F22               	bsf	34,7,b	;volatile
 19521  01206A                     i2l9001:
 19522                           
 19523                           ; BSR set to: 15
 19524                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 19525  01206A  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19526  01206E  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19527  012072  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19528  012076  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19529  01207A  0E16               	movlw	22
 19530  01207C  D005               	goto	i2u1198_40
 19531  01207E                     i2u1198_45:
 19532  01207E  90D8               	bcf	status,0,c
 19533  012080  3249               	rrcf	??i2_CANsendMessage+3,f,c
 19534  012082  3248               	rrcf	??i2_CANsendMessage+2,f,c
 19535  012084  3247               	rrcf	??i2_CANsendMessage+1,f,c
 19536  012086  3246               	rrcf	??i2_CANsendMessage,f,c
 19537  012088                     i2u1198_40:
 19538  012088  2EE8               	decfsz	wreg,f,c
 19539  01208A  D7F9               	goto	i2u1198_45
 19540  01208C  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19541  012090  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19542  012094  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19543  012098  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19544                           
 19545                           ; BSR set to: 15
 19546                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 19547  01209C  0100               	movlb	0	; () banked
 19548  01209E  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 19549  0120A0  0100               	movlb	0	; () banked
 19550  0120A2  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 19551  0120A4  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 19552  0120A6  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 19553  0120A8  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 19554                           
 19555                           ; BSR set to: 0
 19556                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 19557  0120AA  C060  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 19558                           
 19559                           ;inc\CANlib.h: 483: }
 19560  0120AE  D053               	goto	i2l9021
 19561  0120B0                     i2l407:
 19562                           
 19563                           ; BSR set to: 15
 19564                           ;inc\CANlib.h: 485: else
 19565                           ;inc\CANlib.h: 487: {
 19566                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 19567  0120B0  010F               	movlb	15	; () banked
 19568  0120B2  9722               	bcf	34,3,b	;volatile
 19569                           
 19570                           ; BSR set to: 15
 19571                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 19572  0120B4  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19573  0120B8  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19574  0120BC  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19575  0120C0  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19576  0120C4  0E04               	movlw	4
 19577  0120C6  D005               	goto	i2u1199_40
 19578  0120C8                     i2u1199_45:
 19579  0120C8  90D8               	bcf	status,0,c
 19580  0120CA  3249               	rrcf	??i2_CANsendMessage+3,f,c
 19581  0120CC  3248               	rrcf	??i2_CANsendMessage+2,f,c
 19582  0120CE  3247               	rrcf	??i2_CANsendMessage+1,f,c
 19583  0120D0  3246               	rrcf	??i2_CANsendMessage,f,c
 19584  0120D2                     i2u1199_40:
 19585  0120D2  2EE8               	decfsz	wreg,f,c
 19586  0120D4  D7F9               	goto	i2u1199_45
 19587  0120D6  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19588  0120DA  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19589  0120DE  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19590  0120E2  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19591                           
 19592                           ; BSR set to: 15
 19593                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 19594  0120E6  0100               	movlb	0	; () banked
 19595  0120E8  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 19596  0120EA  0100               	movlb	0	; () banked
 19597  0120EC  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 19598  0120EE  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 19599  0120F0  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 19600  0120F2  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 19601                           
 19602                           ; BSR set to: 0
 19603                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 19604  0120F4  C060  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 19605                           
 19606                           ; BSR set to: 0
 19607                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 19608  0120F8  0E07               	movlw	7
 19609  0120FA  143E               	andwf	i2CANsendMessage@identifier,w,c
 19610  0120FC  0100               	movlb	0	; () banked
 19611  0120FE  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 19612  012100  0E00               	movlw	0
 19613  012102  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 19614  012104  0100               	movlb	0	; () banked
 19615  012106  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 19616  012108  0E00               	movlw	0
 19617  01210A  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 19618  01210C  0100               	movlb	0	; () banked
 19619  01210E  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 19620  012110  0E00               	movlw	0
 19621  012112  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 19622  012114  0100               	movlb	0	; () banked
 19623  012116  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 19624                           
 19625                           ; BSR set to: 0
 19626                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 19627  012118  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19628  01211C  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19629  012120  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19630  012124  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19631  012128  0E05               	movlw	5
 19632  01212A                     i2u1200_45:
 19633  01212A  90D8               	bcf	status,0,c
 19634  01212C  3646               	rlcf	??i2_CANsendMessage,f,c
 19635  01212E  3647               	rlcf	??i2_CANsendMessage+1,f,c
 19636  012130  3648               	rlcf	??i2_CANsendMessage+2,f,c
 19637  012132  3649               	rlcf	??i2_CANsendMessage+3,f,c
 19638  012134  2EE8               	decfsz	wreg,f,c
 19639  012136  D7F9               	goto	i2u1200_45
 19640  012138  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19641  01213C  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19642  012140  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19643  012144  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19644                           
 19645                           ; BSR set to: 0
 19646                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 19647  012148  010F               	movlb	15	; () banked
 19648  01214A  5122               	movf	34,w,b	;volatile
 19649  01214C  0B1F               	andlw	31
 19650  01214E  010F               	movlb	15	; () banked
 19651  012150  6F22               	movwf	34,b	;volatile
 19652                           
 19653                           ; BSR set to: 15
 19654                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 19655  012152  C060  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 19656  012156                     i2l9021:
 19657                           
 19658                           ;inc\CANlib.h: 498: }
 19659                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 19660  012156  A045               	btfss	i2CANsendMessage@flags,0,c
 19661  012158  D003               	goto	i2l414
 19662                           
 19663                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 19664  01215A  010F               	movlb	15	; () banked
 19665  01215C  8120               	bsf	32,0,b	;volatile
 19666  01215E  D002               	goto	i2l415
 19667  012160                     i2l414:
 19668                           
 19669                           ;inc\CANlib.h: 502: else
 19670                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 19671  012160  010F               	movlb	15	; () banked
 19672  012162  9120               	bcf	32,0,b	;volatile
 19673  012164                     i2l415:
 19674                           
 19675                           ; BSR set to: 15
 19676                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 19677  012164  A245               	btfss	i2CANsendMessage@flags,1,c
 19678  012166  D003               	goto	i2l416
 19679                           
 19680                           ; BSR set to: 15
 19681                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 19682  012168  010F               	movlb	15	; () banked
 19683  01216A  8320               	bsf	32,1,b	;volatile
 19684  01216C  D002               	goto	i2l9027
 19685  01216E                     i2l416:
 19686                           
 19687                           ; BSR set to: 15
 19688                           ;inc\CANlib.h: 506: else
 19689                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 19690  01216E  010F               	movlb	15	; () banked
 19691  012170  9320               	bcf	32,1,b	;volatile
 19692  012172                     i2l9027:
 19693                           
 19694                           ; BSR set to: 15
 19695                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 19696  012172  C042  FFD9         	movff	i2CANsendMessage@data,fsr2l
 19697  012176  C043  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 19698  01217A  50DF               	movf	indf2,w,c
 19699  01217C  010F               	movlb	15	; () banked
 19700  01217E  6F26               	movwf	38,b	;volatile
 19701                           
 19702                           ; BSR set to: 15
 19703                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 19704  012180  EE20 F001          	lfsr	2,1
 19705  012184  5042               	movf	i2CANsendMessage@data,w,c
 19706  012186  26D9               	addwf	fsr2l,f,c
 19707  012188  5043               	movf	i2CANsendMessage@data+1,w,c
 19708  01218A  22DA               	addwfc	fsr2h,f,c
 19709  01218C  50DF               	movf	indf2,w,c
 19710  01218E  010F               	movlb	15	; () banked
 19711  012190  6F27               	movwf	39,b	;volatile
 19712                           
 19713                           ; BSR set to: 15
 19714                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 19715  012192  EE20 F002          	lfsr	2,2
 19716  012196  5042               	movf	i2CANsendMessage@data,w,c
 19717  012198  26D9               	addwf	fsr2l,f,c
 19718  01219A  5043               	movf	i2CANsendMessage@data+1,w,c
 19719  01219C  22DA               	addwfc	fsr2h,f,c
 19720  01219E  50DF               	movf	indf2,w,c
 19721  0121A0  010F               	movlb	15	; () banked
 19722  0121A2  6F28               	movwf	40,b	;volatile
 19723                           
 19724                           ; BSR set to: 15
 19725                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 19726  0121A4  EE20 F003          	lfsr	2,3
 19727  0121A8  5042               	movf	i2CANsendMessage@data,w,c
 19728  0121AA  26D9               	addwf	fsr2l,f,c
 19729  0121AC  5043               	movf	i2CANsendMessage@data+1,w,c
 19730  0121AE  22DA               	addwfc	fsr2h,f,c
 19731  0121B0  50DF               	movf	indf2,w,c
 19732  0121B2  010F               	movlb	15	; () banked
 19733  0121B4  6F29               	movwf	41,b	;volatile
 19734                           
 19735                           ; BSR set to: 15
 19736                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 19737  0121B6  EE20 F004          	lfsr	2,4
 19738  0121BA  5042               	movf	i2CANsendMessage@data,w,c
 19739  0121BC  26D9               	addwf	fsr2l,f,c
 19740  0121BE  5043               	movf	i2CANsendMessage@data+1,w,c
 19741  0121C0  22DA               	addwfc	fsr2h,f,c
 19742  0121C2  50DF               	movf	indf2,w,c
 19743  0121C4  010F               	movlb	15	; () banked
 19744  0121C6  6F2A               	movwf	42,b	;volatile
 19745                           
 19746                           ; BSR set to: 15
 19747                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 19748  0121C8  EE20 F005          	lfsr	2,5
 19749  0121CC  5042               	movf	i2CANsendMessage@data,w,c
 19750  0121CE  26D9               	addwf	fsr2l,f,c
 19751  0121D0  5043               	movf	i2CANsendMessage@data+1,w,c
 19752  0121D2  22DA               	addwfc	fsr2h,f,c
 19753  0121D4  50DF               	movf	indf2,w,c
 19754  0121D6  010F               	movlb	15	; () banked
 19755  0121D8  6F2B               	movwf	43,b	;volatile
 19756                           
 19757                           ; BSR set to: 15
 19758                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 19759  0121DA  EE20 F006          	lfsr	2,6
 19760  0121DE  5042               	movf	i2CANsendMessage@data,w,c
 19761  0121E0  26D9               	addwf	fsr2l,f,c
 19762  0121E2  5043               	movf	i2CANsendMessage@data+1,w,c
 19763  0121E4  22DA               	addwfc	fsr2h,f,c
 19764  0121E6  50DF               	movf	indf2,w,c
 19765  0121E8  010F               	movlb	15	; () banked
 19766  0121EA  6F2C               	movwf	44,b	;volatile
 19767                           
 19768                           ; BSR set to: 15
 19769                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 19770  0121EC  EE20 F007          	lfsr	2,7
 19771  0121F0  5042               	movf	i2CANsendMessage@data,w,c
 19772  0121F2  26D9               	addwf	fsr2l,f,c
 19773  0121F4  5043               	movf	i2CANsendMessage@data+1,w,c
 19774  0121F6  22DA               	addwfc	fsr2h,f,c
 19775  0121F8  50DF               	movf	indf2,w,c
 19776  0121FA  010F               	movlb	15	; () banked
 19777  0121FC  6F2D               	movwf	45,b	;volatile
 19778                           
 19779                           ; BSR set to: 15
 19780                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 19781  0121FE  010F               	movlb	15	; () banked
 19782  012200  8720               	bsf	32,3,b	;volatile
 19783                           
 19784                           ; BSR set to: 15
 19785                           ;inc\CANlib.h: 520: return;
 19786  012202  0012               	return	
 19787  012204                     __end_ofi2_CANsendMessage:
 19788                           	opt stack 0
 19789                           pclatu	equ	0xFFB
 19790                           pclath	equ	0xFFA
 19791                           tblptru	equ	0xFF8
 19792                           tblptrh	equ	0xFF7
 19793                           tblptrl	equ	0xFF6
 19794                           tablat	equ	0xFF5
 19795                           prodh	equ	0xFF4
 19796                           prodl	equ	0xFF3
 19797                           intcon	equ	0xFF2
 19798                           postinc0	equ	0xFEE
 19799                           fsr0h	equ	0xFEA
 19800                           fsr0l	equ	0xFE9
 19801                           wreg	equ	0xFE8
 19802                           indf1	equ	0xFE7
 19803                           plusw1	equ	0xFE3
 19804                           fsr1h	equ	0xFE2
 19805                           fsr1l	equ	0xFE1
 19806                           bsr	equ	0xFE0
 19807                           indf2	equ	0xFDF
 19808                           postinc2	equ	0xFDE
 19809                           plusw2	equ	0xFDB
 19810                           fsr2h	equ	0xFDA
 19811                           fsr2l	equ	0xFD9
 19812                           status	equ	0xFD8
 19813                           
 19814 ;; *************** function i2_CANisTxReady *****************
 19815 ;; Defined at:
 19816 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 19817 ;; Parameters:    Size  Location     Type
 19818 ;;		None
 19819 ;; Auto vars:     Size  Location     Type
 19820 ;;		None
 19821 ;; Return value:  Size  Location     Type
 19822 ;;                  1    wreg      unsigned char 
 19823 ;; Registers used:
 19824 ;;		wreg, status,2
 19825 ;; Tracked objects:
 19826 ;;		On entry : 0/0
 19827 ;;		On exit  : 0/0
 19828 ;;		Unchanged: 0/0
 19829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19831 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19833 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19834 ;;Total ram usage:        1 bytes
 19835 ;; Hardware stack levels used:    1
 19836 ;; This function calls:
 19837 ;;		Nothing
 19838 ;; This function is called by:
 19839 ;;		_ISR_alta
 19840 ;; This function uses a non-reentrant model
 19841 ;;
 19842                           
 19843                           	psect	text55
 19844  016114                     __ptext55:
 19845                           	opt stack 0
 19846  016114                     i2_CANisTxReady:
 19847                           	opt stack 20
 19848                           
 19849                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 19850                           
 19851                           ; BSR set to: 15
 19852                           ;incstack = 0
 19853  016114  0E01               	movlw	1
 19854  016116  6E3E               	movwf	i2_CANisTxReady$3235,c
 19855  016118  010F               	movlb	15	; () banked
 19856  01611A  A740               	btfss	64,3,b	;volatile
 19857  01611C  D008               	goto	i2l568
 19858                           
 19859                           ; BSR set to: 15
 19860  01611E  010F               	movlb	15	; () banked
 19861  016120  A730               	btfss	48,3,b	;volatile
 19862  016122  D005               	goto	i2l568
 19863                           
 19864                           ; BSR set to: 15
 19865  016124  010F               	movlb	15	; () banked
 19866  016126  A720               	btfss	32,3,b	;volatile
 19867  016128  D002               	goto	i2l568
 19868                           
 19869                           ; BSR set to: 15
 19870  01612A  0E00               	movlw	0
 19871  01612C  6E3E               	movwf	i2_CANisTxReady$3235,c
 19872  01612E                     i2l568:
 19873                           
 19874                           ; BSR set to: 15
 19875  01612E  503E               	movf	i2_CANisTxReady$3235,w,c
 19876  016130  0012               	return	
 19877  016132                     __end_ofi2_CANisTxReady:
 19878                           	opt stack 0
 19879                           pclatu	equ	0xFFB
 19880                           pclath	equ	0xFFA
 19881                           tblptru	equ	0xFF8
 19882                           tblptrh	equ	0xFF7
 19883                           tblptrl	equ	0xFF6
 19884                           tablat	equ	0xFF5
 19885                           prodh	equ	0xFF4
 19886                           prodl	equ	0xFF3
 19887                           intcon	equ	0xFF2
 19888                           postinc0	equ	0xFEE
 19889                           fsr0h	equ	0xFEA
 19890                           fsr0l	equ	0xFE9
 19891                           wreg	equ	0xFE8
 19892                           indf1	equ	0xFE7
 19893                           plusw1	equ	0xFE3
 19894                           fsr1h	equ	0xFE2
 19895                           fsr1l	equ	0xFE1
 19896                           bsr	equ	0xFE0
 19897                           indf2	equ	0xFDF
 19898                           postinc2	equ	0xFDE
 19899                           plusw2	equ	0xFDB
 19900                           fsr2h	equ	0xFDA
 19901                           fsr2l	equ	0xFD9
 19902                           status	equ	0xFD8
 19903                           
 19904 ;; *************** function _CANreceiveMessage *****************
 19905 ;; Defined at:
 19906 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 19907 ;; Parameters:    Size  Location     Type
 19908 ;;  msg             2   17[COMRAM] PTR struct .
 19909 ;;		 -> msg(15), 
 19910 ;; Auto vars:     Size  Location     Type
 19911 ;;  tamp            1   28[COMRAM] unsigned char 
 19912 ;;  error           1   27[COMRAM] unsigned char 
 19913 ;; Return value:  Size  Location     Type
 19914 ;;                  1    wreg      unsigned char 
 19915 ;; Registers used:
 19916 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19917 ;; Tracked objects:
 19918 ;;		On entry : 0/0
 19919 ;;		On exit  : 0/0
 19920 ;;		Unchanged: 0/0
 19921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19924 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19925 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19926 ;;Total ram usage:       12 bytes
 19927 ;; Hardware stack levels used:    1
 19928 ;; This function calls:
 19929 ;;		Nothing
 19930 ;; This function is called by:
 19931 ;;		_ISR_alta
 19932 ;; This function uses a non-reentrant model
 19933 ;;
 19934                           
 19935                           	psect	text56
 19936  012D60                     __ptext56:
 19937                           	opt stack 0
 19938  012D60                     _CANreceiveMessage:
 19939                           	opt stack 20
 19940                           
 19941                           ;inc\CANlib.h: 530: BYTE tamp;
 19942                           ;inc\CANlib.h: 531: BYTE error = 0;
 19943                           
 19944                           ; BSR set to: 15
 19945                           ;incstack = 0
 19946  012D60  0E00               	movlw	0
 19947  012D62  6E48               	movwf	CANreceiveMessage@error,c
 19948                           
 19949                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 19950  012D64  BE74               	btfsc	3956,7,c	;volatile
 19951                           
 19952                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 19953  012D66  8048               	bsf	CANreceiveMessage@error,0,c
 19954                           
 19955                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 19956  012D68  BC74               	btfsc	3956,6,c	;volatile
 19957                           
 19958                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 19959  012D6A  8248               	bsf	CANreceiveMessage@error,1,c
 19960                           
 19961                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 19962  012D6C  010F               	movlb	15	; () banked
 19963  012D6E  AF50               	btfss	80,7,b	;volatile
 19964  012D70  D143               	goto	i2l422
 19965                           
 19966                           ; BSR set to: 15
 19967                           ;inc\CANlib.h: 541: {
 19968                           ;inc\CANlib.h: 542: msg->identifier = 0;
 19969  012D72  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19970  012D76  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19971  012D7A  6ADE               	clrf	postinc2,c
 19972  012D7C  6ADE               	clrf	postinc2,c
 19973  012D7E  6ADE               	clrf	postinc2,c
 19974  012D80  6ADD               	clrf	postdec2,c
 19975                           
 19976                           ; BSR set to: 15
 19977                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 19978  012D82  EE20 F004          	lfsr	2,4
 19979  012D86  503E               	movf	CANreceiveMessage@msg,w,c
 19980  012D88  26D9               	addwf	fsr2l,f,c
 19981  012D8A  503F               	movf	CANreceiveMessage@msg+1,w,c
 19982  012D8C  22DA               	addwfc	fsr2h,f,c
 19983  012D8E  CF56 FFDF          	movff	3926,indf2	;volatile
 19984                           
 19985                           ; BSR set to: 15
 19986                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 19987  012D92  EE20 F005          	lfsr	2,5
 19988  012D96  503E               	movf	CANreceiveMessage@msg,w,c
 19989  012D98  26D9               	addwf	fsr2l,f,c
 19990  012D9A  503F               	movf	CANreceiveMessage@msg+1,w,c
 19991  012D9C  22DA               	addwfc	fsr2h,f,c
 19992  012D9E  CF57 FFDF          	movff	3927,indf2	;volatile
 19993                           
 19994                           ; BSR set to: 15
 19995                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 19996  012DA2  EE20 F006          	lfsr	2,6
 19997  012DA6  503E               	movf	CANreceiveMessage@msg,w,c
 19998  012DA8  26D9               	addwf	fsr2l,f,c
 19999  012DAA  503F               	movf	CANreceiveMessage@msg+1,w,c
 20000  012DAC  22DA               	addwfc	fsr2h,f,c
 20001  012DAE  CF58 FFDF          	movff	3928,indf2	;volatile
 20002                           
 20003                           ; BSR set to: 15
 20004                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 20005  012DB2  EE20 F007          	lfsr	2,7
 20006  012DB6  503E               	movf	CANreceiveMessage@msg,w,c
 20007  012DB8  26D9               	addwf	fsr2l,f,c
 20008  012DBA  503F               	movf	CANreceiveMessage@msg+1,w,c
 20009  012DBC  22DA               	addwfc	fsr2h,f,c
 20010  012DBE  CF59 FFDF          	movff	3929,indf2	;volatile
 20011                           
 20012                           ; BSR set to: 15
 20013                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 20014  012DC2  EE20 F008          	lfsr	2,8
 20015  012DC6  503E               	movf	CANreceiveMessage@msg,w,c
 20016  012DC8  26D9               	addwf	fsr2l,f,c
 20017  012DCA  503F               	movf	CANreceiveMessage@msg+1,w,c
 20018  012DCC  22DA               	addwfc	fsr2h,f,c
 20019  012DCE  CF5A FFDF          	movff	3930,indf2	;volatile
 20020                           
 20021                           ; BSR set to: 15
 20022                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 20023  012DD2  EE20 F009          	lfsr	2,9
 20024  012DD6  503E               	movf	CANreceiveMessage@msg,w,c
 20025  012DD8  26D9               	addwf	fsr2l,f,c
 20026  012DDA  503F               	movf	CANreceiveMessage@msg+1,w,c
 20027  012DDC  22DA               	addwfc	fsr2h,f,c
 20028  012DDE  CF5B FFDF          	movff	3931,indf2	;volatile
 20029                           
 20030                           ; BSR set to: 15
 20031                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 20032  012DE2  EE20 F00A          	lfsr	2,10
 20033  012DE6  503E               	movf	CANreceiveMessage@msg,w,c
 20034  012DE8  26D9               	addwf	fsr2l,f,c
 20035  012DEA  503F               	movf	CANreceiveMessage@msg+1,w,c
 20036  012DEC  22DA               	addwfc	fsr2h,f,c
 20037  012DEE  CF5C FFDF          	movff	3932,indf2	;volatile
 20038                           
 20039                           ; BSR set to: 15
 20040                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 20041  012DF2  EE20 F00B          	lfsr	2,11
 20042  012DF6  503E               	movf	CANreceiveMessage@msg,w,c
 20043  012DF8  26D9               	addwf	fsr2l,f,c
 20044  012DFA  503F               	movf	CANreceiveMessage@msg+1,w,c
 20045  012DFC  22DA               	addwfc	fsr2h,f,c
 20046  012DFE  CF5D FFDF          	movff	3933,indf2	;volatile
 20047                           
 20048                           ; BSR set to: 15
 20049                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 20050  012E02  EE20 F00E          	lfsr	2,14
 20051  012E06  503E               	movf	CANreceiveMessage@msg,w,c
 20052  012E08  26D9               	addwf	fsr2l,f,c
 20053  012E0A  503F               	movf	CANreceiveMessage@msg+1,w,c
 20054  012E0C  22DA               	addwfc	fsr2h,f,c
 20055  012E0E  010F               	movlb	15	; () banked
 20056  012E10  AD55               	btfss	85,6,b	;volatile
 20057  012E12  D002               	goto	i2u844_40
 20058  012E14  0E01               	movlw	1
 20059  012E16  D001               	goto	i2u844_46
 20060  012E18                     i2u844_40:
 20061  012E18  0E00               	movlw	0
 20062  012E1A                     i2u844_46:
 20063  012E1A  6EDF               	movwf	indf2,c
 20064                           
 20065                           ; BSR set to: 15
 20066                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 20067  012E1C  EE20 F00D          	lfsr	2,13
 20068  012E20  503E               	movf	CANreceiveMessage@msg,w,c
 20069  012E22  26D9               	addwf	fsr2l,f,c
 20070  012E24  503F               	movf	CANreceiveMessage@msg+1,w,c
 20071  012E26  22DA               	addwfc	fsr2h,f,c
 20072  012E28  010F               	movlb	15	; () banked
 20073  012E2A  5155               	movf	85,w,b	;volatile
 20074  012E2C  0B0F               	andlw	15
 20075  012E2E  6EDF               	movwf	indf2,c
 20076                           
 20077                           ; BSR set to: 15
 20078                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 20079  012E30  EE20 F00C          	lfsr	2,12
 20080  012E34  503E               	movf	CANreceiveMessage@msg,w,c
 20081  012E36  26D9               	addwf	fsr2l,f,c
 20082  012E38  503F               	movf	CANreceiveMessage@msg+1,w,c
 20083  012E3A  22DA               	addwfc	fsr2h,f,c
 20084  012E3C  010F               	movlb	15	; () banked
 20085  012E3E  A752               	btfss	82,3,b	;volatile
 20086  012E40  D002               	goto	i2u845_40
 20087  012E42  0E01               	movlw	1
 20088  012E44  D001               	goto	i2u845_46
 20089  012E46                     i2u845_40:
 20090  012E46  0E00               	movlw	0
 20091  012E48                     i2u845_46:
 20092  012E48  6EDF               	movwf	indf2,c
 20093                           
 20094                           ; BSR set to: 15
 20095                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 20096  012E4A  010F               	movlb	15	; () banked
 20097  012E4C  B752               	btfsc	82,3,b	;volatile
 20098  012E4E  D044               	goto	i2l6723
 20099                           
 20100                           ; BSR set to: 15
 20101                           ;inc\CANlib.h: 559: {
 20102                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 20103  012E50  CF51 F040          	movff	3921,??_CANreceiveMessage	;volatile
 20104  012E54  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20105  012E56  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20106  012E58  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20107  012E5A  0E03               	movlw	3
 20108  012E5C                     i2u847_45:
 20109  012E5C  90D8               	bcf	status,0,c
 20110  012E5E  3640               	rlcf	??_CANreceiveMessage,f,c
 20111  012E60  3641               	rlcf	??_CANreceiveMessage+1,f,c
 20112  012E62  3642               	rlcf	??_CANreceiveMessage+2,f,c
 20113  012E64  3643               	rlcf	??_CANreceiveMessage+3,f,c
 20114  012E66  2EE8               	decfsz	wreg,f,c
 20115  012E68  D7F9               	goto	i2u847_45
 20116  012E6A  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20117  012E6E  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20118  012E72  C040  FFDE         	movff	??_CANreceiveMessage,postinc2
 20119  012E76  C041  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20120  012E7A  C042  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20121  012E7E  C043  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20122                           
 20123                           ; BSR set to: 15
 20124                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 20125  012E82  010F               	movlb	15	; () banked
 20126  012E84  3952               	swapf	82,w,b	;volatile
 20127  012E86  42E8               	rrncf	wreg,f,c
 20128  012E88  0B07               	andlw	7
 20129  012E8A  0B07               	andlw	7
 20130  012E8C  6E49               	movwf	CANreceiveMessage@tamp,c
 20131                           
 20132                           ; BSR set to: 15
 20133                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 20134  012E8E  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20135  012E92  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20136  012E96  CFDE F040          	movff	postinc2,??_CANreceiveMessage
 20137  012E9A  CFDE F041          	movff	postinc2,??_CANreceiveMessage+1
 20138  012E9E  CFDE F042          	movff	postinc2,??_CANreceiveMessage+2
 20139  012EA2  CFDE F043          	movff	postinc2,??_CANreceiveMessage+3
 20140  012EA6  5049               	movf	CANreceiveMessage@tamp,w,c
 20141  012EA8  2440               	addwf	??_CANreceiveMessage,w,c
 20142  012EAA  6E44               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 20143  012EAC  0E00               	movlw	0
 20144  012EAE  2041               	addwfc	??_CANreceiveMessage+1,w,c
 20145  012EB0  6E45               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 20146  012EB2  0E00               	movlw	0
 20147  012EB4  2042               	addwfc	??_CANreceiveMessage+2,w,c
 20148  012EB6  6E46               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 20149  012EB8  0E00               	movlw	0
 20150  012EBA  2043               	addwfc	??_CANreceiveMessage+3,w,c
 20151  012EBC  6E47               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 20152  012EBE  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20153  012EC2  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20154  012EC6  C044  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 20155  012ECA  C045  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 20156  012ECE  C046  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 20157  012ED2  C047  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 20158                           
 20159                           ;inc\CANlib.h: 563: }
 20160  012ED6  D08D               	goto	i2l6749
 20161  012ED8                     i2l6723:
 20162                           
 20163                           ; BSR set to: 15
 20164                           ;inc\CANlib.h: 564: else
 20165                           ;inc\CANlib.h: 565: {
 20166                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 20167  012ED8  CF54 F040          	movff	3924,??_CANreceiveMessage	;volatile
 20168  012EDC  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20169  012EDE  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20170  012EE0  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20171  012EE2  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20172  012EE6  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20173  012EEA  C040  FFDE         	movff	??_CANreceiveMessage,postinc2
 20174  012EEE  C041  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20175  012EF2  C042  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20176  012EF6  C043  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20177                           
 20178                           ; BSR set to: 15
 20179                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 20180  012EFA  CF53 F040          	movff	3923,??_CANreceiveMessage	;volatile
 20181  012EFE  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20182  012F00  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20183  012F02  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20184  012F04  C042  F043         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 20185  012F08  C041  F042         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 20186  012F0C  C040  F041         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 20187  012F10  6A40               	clrf	??_CANreceiveMessage,c
 20188  012F12  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20189  012F16  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20190  012F1A  5040               	movf	??_CANreceiveMessage,w,c
 20191  012F1C  26DE               	addwf	postinc2,f,c
 20192  012F1E  5041               	movf	??_CANreceiveMessage+1,w,c
 20193  012F20  22DE               	addwfc	postinc2,f,c
 20194  012F22  5042               	movf	??_CANreceiveMessage+2,w,c
 20195  012F24  22DE               	addwfc	postinc2,f,c
 20196  012F26  5043               	movf	??_CANreceiveMessage+3,w,c
 20197  012F28  22DE               	addwfc	postinc2,f,c
 20198                           
 20199                           ; BSR set to: 15
 20200                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 20201  012F2A  010F               	movlb	15	; () banked
 20202  012F2C  A152               	btfss	82,0,b	;volatile
 20203  012F2E  D00C               	goto	i2l6731
 20204                           
 20205                           ; BSR set to: 15
 20206                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 20207  012F30  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20208  012F34  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20209  012F38  0E00               	movlw	0
 20210  012F3A  12DE               	iorwf	postinc2,f,c
 20211  012F3C  0E00               	movlw	0
 20212  012F3E  12DE               	iorwf	postinc2,f,c
 20213  012F40  0E01               	movlw	1
 20214  012F42  12DE               	iorwf	postinc2,f,c
 20215  012F44  0E00               	movlw	0
 20216  012F46  12DE               	iorwf	postinc2,f,c
 20217  012F48                     i2l6731:
 20218                           
 20219                           ; BSR set to: 15
 20220                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 20221  012F48  010F               	movlb	15	; () banked
 20222  012F4A  A352               	btfss	82,1,b	;volatile
 20223  012F4C  D00C               	goto	i2l6735
 20224                           
 20225                           ; BSR set to: 15
 20226                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 20227  012F4E  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20228  012F52  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20229  012F56  0E00               	movlw	0
 20230  012F58  12DE               	iorwf	postinc2,f,c
 20231  012F5A  0E00               	movlw	0
 20232  012F5C  12DE               	iorwf	postinc2,f,c
 20233  012F5E  0E02               	movlw	2
 20234  012F60  12DE               	iorwf	postinc2,f,c
 20235  012F62  0E00               	movlw	0
 20236  012F64  12DE               	iorwf	postinc2,f,c
 20237  012F66                     i2l6735:
 20238                           
 20239                           ; BSR set to: 15
 20240                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 20241  012F66  010F               	movlb	15	; () banked
 20242  012F68  AB52               	btfss	82,5,b	;volatile
 20243  012F6A  D00C               	goto	i2l6739
 20244                           
 20245                           ; BSR set to: 15
 20246                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 20247  012F6C  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20248  012F70  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20249  012F74  0E00               	movlw	0
 20250  012F76  12DE               	iorwf	postinc2,f,c
 20251  012F78  0E00               	movlw	0
 20252  012F7A  12DE               	iorwf	postinc2,f,c
 20253  012F7C  0E04               	movlw	4
 20254  012F7E  12DE               	iorwf	postinc2,f,c
 20255  012F80  0E00               	movlw	0
 20256  012F82  12DE               	iorwf	postinc2,f,c
 20257  012F84                     i2l6739:
 20258                           
 20259                           ; BSR set to: 15
 20260                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 20261  012F84  010F               	movlb	15	; () banked
 20262  012F86  AD52               	btfss	82,6,b	;volatile
 20263  012F88  D00C               	goto	i2l6743
 20264                           
 20265                           ; BSR set to: 15
 20266                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 20267  012F8A  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20268  012F8E  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20269  012F92  0E00               	movlw	0
 20270  012F94  12DE               	iorwf	postinc2,f,c
 20271  012F96  0E00               	movlw	0
 20272  012F98  12DE               	iorwf	postinc2,f,c
 20273  012F9A  0E08               	movlw	8
 20274  012F9C  12DE               	iorwf	postinc2,f,c
 20275  012F9E  0E00               	movlw	0
 20276  012FA0  12DE               	iorwf	postinc2,f,c
 20277  012FA2                     i2l6743:
 20278                           
 20279                           ; BSR set to: 15
 20280                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 20281  012FA2  010F               	movlb	15	; () banked
 20282  012FA4  AF52               	btfss	82,7,b	;volatile
 20283  012FA6  D00C               	goto	i2l6747
 20284                           
 20285                           ; BSR set to: 15
 20286                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 20287  012FA8  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20288  012FAC  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20289  012FB0  0E00               	movlw	0
 20290  012FB2  12DE               	iorwf	postinc2,f,c
 20291  012FB4  0E00               	movlw	0
 20292  012FB6  12DE               	iorwf	postinc2,f,c
 20293  012FB8  0E10               	movlw	16
 20294  012FBA  12DE               	iorwf	postinc2,f,c
 20295  012FBC  0E00               	movlw	0
 20296  012FBE  12DE               	iorwf	postinc2,f,c
 20297  012FC0                     i2l6747:
 20298                           
 20299                           ; BSR set to: 15
 20300                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 20301  012FC0  CF51 F040          	movff	3921,??_CANreceiveMessage	;volatile
 20302  012FC4  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20303  012FC6  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20304  012FC8  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20305  012FCA  0E15               	movlw	21
 20306  012FCC                     i2u853_45:
 20307  012FCC  90D8               	bcf	status,0,c
 20308  012FCE  3640               	rlcf	??_CANreceiveMessage,f,c
 20309  012FD0  3641               	rlcf	??_CANreceiveMessage+1,f,c
 20310  012FD2  3642               	rlcf	??_CANreceiveMessage+2,f,c
 20311  012FD4  3643               	rlcf	??_CANreceiveMessage+3,f,c
 20312  012FD6  2EE8               	decfsz	wreg,f,c
 20313  012FD8  D7F9               	goto	i2u853_45
 20314  012FDA  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20315  012FDE  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20316  012FE2  5040               	movf	??_CANreceiveMessage,w,c
 20317  012FE4  12DE               	iorwf	postinc2,f,c
 20318  012FE6  5041               	movf	??_CANreceiveMessage+1,w,c
 20319  012FE8  12DE               	iorwf	postinc2,f,c
 20320  012FEA  5042               	movf	??_CANreceiveMessage+2,w,c
 20321  012FEC  12DE               	iorwf	postinc2,f,c
 20322  012FEE  5043               	movf	??_CANreceiveMessage+3,w,c
 20323  012FF0  12DE               	iorwf	postinc2,f,c
 20324  012FF2                     i2l6749:
 20325                           
 20326                           ; BSR set to: 15
 20327                           ;inc\CANlib.h: 581: }
 20328                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 20329  012FF2  010F               	movlb	15	; () banked
 20330  012FF4  9F50               	bcf	80,7,b	;volatile
 20331                           
 20332                           ; BSR set to: 15
 20333                           ;inc\CANlib.h: 584: return (error);
 20334                           ;	Return value of _CANreceiveMessage is never used
 20335  012FF6  0012               	return	
 20336  012FF8                     i2l422:
 20337                           
 20338                           ; BSR set to: 15
 20339                           ;inc\CANlib.h: 585: }
 20340                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 20341  012FF8  AE60               	btfss	3936,7,c	;volatile
 20342  012FFA  0012               	return	
 20343                           
 20344                           ; BSR set to: 15
 20345                           ;inc\CANlib.h: 588: {
 20346                           ;inc\CANlib.h: 589: msg->identifier = 0;
 20347  012FFC  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20348  013000  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20349  013004  6ADE               	clrf	postinc2,c
 20350  013006  6ADE               	clrf	postinc2,c
 20351  013008  6ADE               	clrf	postinc2,c
 20352  01300A  6ADD               	clrf	postdec2,c
 20353                           
 20354                           ; BSR set to: 15
 20355                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 20356  01300C  EE20 F004          	lfsr	2,4
 20357  013010  503E               	movf	CANreceiveMessage@msg,w,c
 20358  013012  26D9               	addwf	fsr2l,f,c
 20359  013014  503F               	movf	CANreceiveMessage@msg+1,w,c
 20360  013016  22DA               	addwfc	fsr2h,f,c
 20361  013018  CF66 FFDF          	movff	3942,indf2	;volatile
 20362                           
 20363                           ; BSR set to: 15
 20364                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 20365  01301C  EE20 F005          	lfsr	2,5
 20366  013020  503E               	movf	CANreceiveMessage@msg,w,c
 20367  013022  26D9               	addwf	fsr2l,f,c
 20368  013024  503F               	movf	CANreceiveMessage@msg+1,w,c
 20369  013026  22DA               	addwfc	fsr2h,f,c
 20370  013028  CF67 FFDF          	movff	3943,indf2	;volatile
 20371                           
 20372                           ; BSR set to: 15
 20373                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 20374  01302C  EE20 F006          	lfsr	2,6
 20375  013030  503E               	movf	CANreceiveMessage@msg,w,c
 20376  013032  26D9               	addwf	fsr2l,f,c
 20377  013034  503F               	movf	CANreceiveMessage@msg+1,w,c
 20378  013036  22DA               	addwfc	fsr2h,f,c
 20379  013038  CF68 FFDF          	movff	3944,indf2	;volatile
 20380                           
 20381                           ; BSR set to: 15
 20382                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 20383  01303C  EE20 F007          	lfsr	2,7
 20384  013040  503E               	movf	CANreceiveMessage@msg,w,c
 20385  013042  26D9               	addwf	fsr2l,f,c
 20386  013044  503F               	movf	CANreceiveMessage@msg+1,w,c
 20387  013046  22DA               	addwfc	fsr2h,f,c
 20388  013048  CF69 FFDF          	movff	3945,indf2	;volatile
 20389                           
 20390                           ; BSR set to: 15
 20391                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 20392  01304C  EE20 F008          	lfsr	2,8
 20393  013050  503E               	movf	CANreceiveMessage@msg,w,c
 20394  013052  26D9               	addwf	fsr2l,f,c
 20395  013054  503F               	movf	CANreceiveMessage@msg+1,w,c
 20396  013056  22DA               	addwfc	fsr2h,f,c
 20397  013058  CF6A FFDF          	movff	3946,indf2	;volatile
 20398                           
 20399                           ; BSR set to: 15
 20400                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 20401  01305C  EE20 F009          	lfsr	2,9
 20402  013060  503E               	movf	CANreceiveMessage@msg,w,c
 20403  013062  26D9               	addwf	fsr2l,f,c
 20404  013064  503F               	movf	CANreceiveMessage@msg+1,w,c
 20405  013066  22DA               	addwfc	fsr2h,f,c
 20406  013068  CF6B FFDF          	movff	3947,indf2	;volatile
 20407                           
 20408                           ; BSR set to: 15
 20409                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 20410  01306C  EE20 F00A          	lfsr	2,10
 20411  013070  503E               	movf	CANreceiveMessage@msg,w,c
 20412  013072  26D9               	addwf	fsr2l,f,c
 20413  013074  503F               	movf	CANreceiveMessage@msg+1,w,c
 20414  013076  22DA               	addwfc	fsr2h,f,c
 20415  013078  CF6C FFDF          	movff	3948,indf2	;volatile
 20416                           
 20417                           ; BSR set to: 15
 20418                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 20419  01307C  EE20 F00B          	lfsr	2,11
 20420  013080  503E               	movf	CANreceiveMessage@msg,w,c
 20421  013082  26D9               	addwf	fsr2l,f,c
 20422  013084  503F               	movf	CANreceiveMessage@msg+1,w,c
 20423  013086  22DA               	addwfc	fsr2h,f,c
 20424  013088  CF6D FFDF          	movff	3949,indf2	;volatile
 20425                           
 20426                           ; BSR set to: 15
 20427                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 20428  01308C  EE20 F00E          	lfsr	2,14
 20429  013090  503E               	movf	CANreceiveMessage@msg,w,c
 20430  013092  26D9               	addwf	fsr2l,f,c
 20431  013094  503F               	movf	CANreceiveMessage@msg+1,w,c
 20432  013096  22DA               	addwfc	fsr2h,f,c
 20433  013098  AC65               	btfss	3941,6,c	;volatile
 20434  01309A  D002               	goto	i2u855_40
 20435  01309C  0E01               	movlw	1
 20436  01309E  D001               	goto	i2u855_46
 20437  0130A0                     i2u855_40:
 20438  0130A0  0E00               	movlw	0
 20439  0130A2                     i2u855_46:
 20440  0130A2  6EDF               	movwf	indf2,c
 20441                           
 20442                           ; BSR set to: 15
 20443                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 20444  0130A4  EE20 F00D          	lfsr	2,13
 20445  0130A8  503E               	movf	CANreceiveMessage@msg,w,c
 20446  0130AA  26D9               	addwf	fsr2l,f,c
 20447  0130AC  503F               	movf	CANreceiveMessage@msg+1,w,c
 20448  0130AE  22DA               	addwfc	fsr2h,f,c
 20449  0130B0  5065               	movf	3941,w,c	;volatile
 20450  0130B2  0B0F               	andlw	15
 20451  0130B4  6EDF               	movwf	indf2,c
 20452                           
 20453                           ; BSR set to: 15
 20454                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 20455  0130B6  EE20 F00C          	lfsr	2,12
 20456  0130BA  503E               	movf	CANreceiveMessage@msg,w,c
 20457  0130BC  26D9               	addwf	fsr2l,f,c
 20458  0130BE  503F               	movf	CANreceiveMessage@msg+1,w,c
 20459  0130C0  22DA               	addwfc	fsr2h,f,c
 20460  0130C2  A662               	btfss	3938,3,c	;volatile
 20461  0130C4  D002               	goto	i2u856_40
 20462  0130C6  0E01               	movlw	1
 20463  0130C8  D001               	goto	i2u856_46
 20464  0130CA                     i2u856_40:
 20465  0130CA  0E00               	movlw	0
 20466  0130CC                     i2u856_46:
 20467  0130CC  6EDF               	movwf	indf2,c
 20468                           
 20469                           ; BSR set to: 15
 20470                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 20471  0130CE  B662               	btfsc	3938,3,c	;volatile
 20472  0130D0  D043               	goto	i2l6785
 20473                           
 20474                           ; BSR set to: 15
 20475                           ;inc\CANlib.h: 606: {
 20476                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 20477  0130D2  CF61 F040          	movff	3937,??_CANreceiveMessage	;volatile
 20478  0130D6  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20479  0130D8  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20480  0130DA  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20481  0130DC  0E03               	movlw	3
 20482  0130DE                     i2u858_45:
 20483  0130DE  90D8               	bcf	status,0,c
 20484  0130E0  3640               	rlcf	??_CANreceiveMessage,f,c
 20485  0130E2  3641               	rlcf	??_CANreceiveMessage+1,f,c
 20486  0130E4  3642               	rlcf	??_CANreceiveMessage+2,f,c
 20487  0130E6  3643               	rlcf	??_CANreceiveMessage+3,f,c
 20488  0130E8  2EE8               	decfsz	wreg,f,c
 20489  0130EA  D7F9               	goto	i2u858_45
 20490  0130EC  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20491  0130F0  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20492  0130F4  C040  FFDE         	movff	??_CANreceiveMessage,postinc2
 20493  0130F8  C041  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20494  0130FC  C042  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20495  013100  C043  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20496                           
 20497                           ; BSR set to: 15
 20498                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 20499  013104  3862               	swapf	3938,w,c	;volatile
 20500  013106  42E8               	rrncf	wreg,f,c
 20501  013108  0B07               	andlw	7
 20502  01310A  0B07               	andlw	7
 20503  01310C  6E49               	movwf	CANreceiveMessage@tamp,c
 20504                           
 20505                           ; BSR set to: 15
 20506                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 20507  01310E  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20508  013112  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20509  013116  CFDE F040          	movff	postinc2,??_CANreceiveMessage
 20510  01311A  CFDE F041          	movff	postinc2,??_CANreceiveMessage+1
 20511  01311E  CFDE F042          	movff	postinc2,??_CANreceiveMessage+2
 20512  013122  CFDE F043          	movff	postinc2,??_CANreceiveMessage+3
 20513  013126  5049               	movf	CANreceiveMessage@tamp,w,c
 20514  013128  2440               	addwf	??_CANreceiveMessage,w,c
 20515  01312A  6E44               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 20516  01312C  0E00               	movlw	0
 20517  01312E  2041               	addwfc	??_CANreceiveMessage+1,w,c
 20518  013130  6E45               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 20519  013132  0E00               	movlw	0
 20520  013134  2042               	addwfc	??_CANreceiveMessage+2,w,c
 20521  013136  6E46               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 20522  013138  0E00               	movlw	0
 20523  01313A  2043               	addwfc	??_CANreceiveMessage+3,w,c
 20524  01313C  6E47               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 20525  01313E  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20526  013142  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20527  013146  C044  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 20528  01314A  C045  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 20529  01314E  C046  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 20530  013152  C047  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 20531                           
 20532                           ;inc\CANlib.h: 610: }
 20533  013156  D088               	goto	i2l6811
 20534  013158                     i2l6785:
 20535                           
 20536                           ; BSR set to: 15
 20537                           ;inc\CANlib.h: 611: else
 20538                           ;inc\CANlib.h: 612: {
 20539                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 20540  013158  CF64 F040          	movff	3940,??_CANreceiveMessage	;volatile
 20541  01315C  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20542  01315E  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20543  013160  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20544  013162  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20545  013166  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20546  01316A  C040  FFDE         	movff	??_CANreceiveMessage,postinc2
 20547  01316E  C041  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20548  013172  C042  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20549  013176  C043  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20550                           
 20551                           ; BSR set to: 15
 20552                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 20553  01317A  CF63 F040          	movff	3939,??_CANreceiveMessage	;volatile
 20554  01317E  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20555  013180  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20556  013182  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20557  013184  C042  F043         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 20558  013188  C041  F042         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 20559  01318C  C040  F041         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 20560  013190  6A40               	clrf	??_CANreceiveMessage,c
 20561  013192  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20562  013196  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20563  01319A  5040               	movf	??_CANreceiveMessage,w,c
 20564  01319C  26DE               	addwf	postinc2,f,c
 20565  01319E  5041               	movf	??_CANreceiveMessage+1,w,c
 20566  0131A0  22DE               	addwfc	postinc2,f,c
 20567  0131A2  5042               	movf	??_CANreceiveMessage+2,w,c
 20568  0131A4  22DE               	addwfc	postinc2,f,c
 20569  0131A6  5043               	movf	??_CANreceiveMessage+3,w,c
 20570  0131A8  22DE               	addwfc	postinc2,f,c
 20571                           
 20572                           ; BSR set to: 15
 20573                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 20574  0131AA  A062               	btfss	3938,0,c	;volatile
 20575  0131AC  D00C               	goto	i2l6793
 20576                           
 20577                           ; BSR set to: 15
 20578                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 20579  0131AE  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20580  0131B2  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20581  0131B6  0E00               	movlw	0
 20582  0131B8  12DE               	iorwf	postinc2,f,c
 20583  0131BA  0E00               	movlw	0
 20584  0131BC  12DE               	iorwf	postinc2,f,c
 20585  0131BE  0E01               	movlw	1
 20586  0131C0  12DE               	iorwf	postinc2,f,c
 20587  0131C2  0E00               	movlw	0
 20588  0131C4  12DE               	iorwf	postinc2,f,c
 20589  0131C6                     i2l6793:
 20590                           
 20591                           ; BSR set to: 15
 20592                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 20593  0131C6  A262               	btfss	3938,1,c	;volatile
 20594  0131C8  D00C               	goto	i2l6797
 20595                           
 20596                           ; BSR set to: 15
 20597                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 20598  0131CA  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20599  0131CE  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20600  0131D2  0E00               	movlw	0
 20601  0131D4  12DE               	iorwf	postinc2,f,c
 20602  0131D6  0E00               	movlw	0
 20603  0131D8  12DE               	iorwf	postinc2,f,c
 20604  0131DA  0E02               	movlw	2
 20605  0131DC  12DE               	iorwf	postinc2,f,c
 20606  0131DE  0E00               	movlw	0
 20607  0131E0  12DE               	iorwf	postinc2,f,c
 20608  0131E2                     i2l6797:
 20609                           
 20610                           ; BSR set to: 15
 20611                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 20612  0131E2  AA62               	btfss	3938,5,c	;volatile
 20613  0131E4  D00C               	goto	i2l6801
 20614                           
 20615                           ; BSR set to: 15
 20616                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 20617  0131E6  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20618  0131EA  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20619  0131EE  0E00               	movlw	0
 20620  0131F0  12DE               	iorwf	postinc2,f,c
 20621  0131F2  0E00               	movlw	0
 20622  0131F4  12DE               	iorwf	postinc2,f,c
 20623  0131F6  0E04               	movlw	4
 20624  0131F8  12DE               	iorwf	postinc2,f,c
 20625  0131FA  0E00               	movlw	0
 20626  0131FC  12DE               	iorwf	postinc2,f,c
 20627  0131FE                     i2l6801:
 20628                           
 20629                           ; BSR set to: 15
 20630                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 20631  0131FE  AC62               	btfss	3938,6,c	;volatile
 20632  013200  D00C               	goto	i2l6805
 20633                           
 20634                           ; BSR set to: 15
 20635                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 20636  013202  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20637  013206  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20638  01320A  0E00               	movlw	0
 20639  01320C  12DE               	iorwf	postinc2,f,c
 20640  01320E  0E00               	movlw	0
 20641  013210  12DE               	iorwf	postinc2,f,c
 20642  013212  0E08               	movlw	8
 20643  013214  12DE               	iorwf	postinc2,f,c
 20644  013216  0E00               	movlw	0
 20645  013218  12DE               	iorwf	postinc2,f,c
 20646  01321A                     i2l6805:
 20647                           
 20648                           ; BSR set to: 15
 20649                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 20650  01321A  AE62               	btfss	3938,7,c	;volatile
 20651  01321C  D00C               	goto	i2l6809
 20652                           
 20653                           ; BSR set to: 15
 20654                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 20655  01321E  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20656  013222  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20657  013226  0E00               	movlw	0
 20658  013228  12DE               	iorwf	postinc2,f,c
 20659  01322A  0E00               	movlw	0
 20660  01322C  12DE               	iorwf	postinc2,f,c
 20661  01322E  0E10               	movlw	16
 20662  013230  12DE               	iorwf	postinc2,f,c
 20663  013232  0E00               	movlw	0
 20664  013234  12DE               	iorwf	postinc2,f,c
 20665  013236                     i2l6809:
 20666                           
 20667                           ; BSR set to: 15
 20668                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 20669  013236  CF61 F040          	movff	3937,??_CANreceiveMessage	;volatile
 20670  01323A  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20671  01323C  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20672  01323E  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20673  013240  0E15               	movlw	21
 20674  013242                     i2u864_45:
 20675  013242  90D8               	bcf	status,0,c
 20676  013244  3640               	rlcf	??_CANreceiveMessage,f,c
 20677  013246  3641               	rlcf	??_CANreceiveMessage+1,f,c
 20678  013248  3642               	rlcf	??_CANreceiveMessage+2,f,c
 20679  01324A  3643               	rlcf	??_CANreceiveMessage+3,f,c
 20680  01324C  2EE8               	decfsz	wreg,f,c
 20681  01324E  D7F9               	goto	i2u864_45
 20682  013250  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20683  013254  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20684  013258  5040               	movf	??_CANreceiveMessage,w,c
 20685  01325A  12DE               	iorwf	postinc2,f,c
 20686  01325C  5041               	movf	??_CANreceiveMessage+1,w,c
 20687  01325E  12DE               	iorwf	postinc2,f,c
 20688  013260  5042               	movf	??_CANreceiveMessage+2,w,c
 20689  013262  12DE               	iorwf	postinc2,f,c
 20690  013264  5043               	movf	??_CANreceiveMessage+3,w,c
 20691  013266  12DE               	iorwf	postinc2,f,c
 20692  013268                     i2l6811:
 20693                           
 20694                           ; BSR set to: 15
 20695                           ;inc\CANlib.h: 629: }
 20696                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 20697  013268  9E60               	bcf	3936,7,c	;volatile
 20698                           
 20699                           ; BSR set to: 15
 20700                           ;inc\CANlib.h: 632: return (error);
 20701                           ;	Return value of _CANreceiveMessage is never used
 20702  01326A  0012               	return	
 20703  01326C                     __end_of_CANreceiveMessage:
 20704                           	opt stack 0
 20705                           pclatu	equ	0xFFB
 20706                           pclath	equ	0xFFA
 20707                           tblptru	equ	0xFF8
 20708                           tblptrh	equ	0xFF7
 20709                           tblptrl	equ	0xFF6
 20710                           tablat	equ	0xFF5
 20711                           prodh	equ	0xFF4
 20712                           prodl	equ	0xFF3
 20713                           intcon	equ	0xFF2
 20714                           postinc0	equ	0xFEE
 20715                           fsr0h	equ	0xFEA
 20716                           fsr0l	equ	0xFE9
 20717                           wreg	equ	0xFE8
 20718                           indf1	equ	0xFE7
 20719                           plusw1	equ	0xFE3
 20720                           fsr1h	equ	0xFE2
 20721                           fsr1l	equ	0xFE1
 20722                           bsr	equ	0xFE0
 20723                           indf2	equ	0xFDF
 20724                           postinc2	equ	0xFDE
 20725                           postdec2	equ	0xFDD
 20726                           plusw2	equ	0xFDB
 20727                           fsr2h	equ	0xFDA
 20728                           fsr2l	equ	0xFD9
 20729                           status	equ	0xFD8
 20730                           
 20731 ;; *************** function _CANisRxReady *****************
 20732 ;; Defined at:
 20733 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 20734 ;; Parameters:    Size  Location     Type
 20735 ;;		None
 20736 ;; Auto vars:     Size  Location     Type
 20737 ;;		None
 20738 ;; Return value:  Size  Location     Type
 20739 ;;                  1    wreg      unsigned char 
 20740 ;; Registers used:
 20741 ;;		wreg, status,2
 20742 ;; Tracked objects:
 20743 ;;		On entry : 0/0
 20744 ;;		On exit  : 0/0
 20745 ;;		Unchanged: 0/0
 20746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20750 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20751 ;;Total ram usage:        1 bytes
 20752 ;; Hardware stack levels used:    1
 20753 ;; This function calls:
 20754 ;;		Nothing
 20755 ;; This function is called by:
 20756 ;;		_ISR_alta
 20757 ;; This function uses a non-reentrant model
 20758 ;;
 20759                           
 20760                           	psect	text57
 20761  0161B8                     __ptext57:
 20762                           	opt stack 0
 20763  0161B8                     _CANisRxReady:
 20764                           	opt stack 20
 20765                           
 20766                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 20767                           
 20768                           ; BSR set to: 15
 20769                           ;incstack = 0
 20770  0161B8  0E01               	movlw	1
 20771  0161BA  6E3E               	movwf	_CANisRxReady$3237,c
 20772  0161BC  BE60               	btfsc	3936,7,c	;volatile
 20773  0161BE  D005               	goto	i2l573
 20774  0161C0  010F               	movlb	15	; () banked
 20775  0161C2  BF50               	btfsc	80,7,b	;volatile
 20776  0161C4  D002               	goto	i2l573
 20777                           
 20778                           ; BSR set to: 15
 20779  0161C6  0E00               	movlw	0
 20780  0161C8  6E3E               	movwf	_CANisRxReady$3237,c
 20781  0161CA                     i2l573:
 20782  0161CA  503E               	movf	_CANisRxReady$3237,w,c
 20783  0161CC  0012               	return	
 20784  0161CE                     __end_of_CANisRxReady:
 20785                           	opt stack 0
 20786                           pclatu	equ	0xFFB
 20787                           pclath	equ	0xFFA
 20788                           tblptru	equ	0xFF8
 20789                           tblptrh	equ	0xFF7
 20790                           tblptrl	equ	0xFF6
 20791                           tablat	equ	0xFF5
 20792                           prodh	equ	0xFF4
 20793                           prodl	equ	0xFF3
 20794                           intcon	equ	0xFF2
 20795                           postinc0	equ	0xFEE
 20796                           fsr0h	equ	0xFEA
 20797                           fsr0l	equ	0xFE9
 20798                           wreg	equ	0xFE8
 20799                           indf1	equ	0xFE7
 20800                           plusw1	equ	0xFE3
 20801                           fsr1h	equ	0xFE2
 20802                           fsr1l	equ	0xFE1
 20803                           bsr	equ	0xFE0
 20804                           indf2	equ	0xFDF
 20805                           postinc2	equ	0xFDE
 20806                           postdec2	equ	0xFDD
 20807                           plusw2	equ	0xFDB
 20808                           fsr2h	equ	0xFDA
 20809                           fsr2l	equ	0xFD9
 20810                           status	equ	0xFD8
 20811                           pclatu	equ	0xFFB
 20812                           pclath	equ	0xFFA
 20813                           tblptru	equ	0xFF8
 20814                           tblptrh	equ	0xFF7
 20815                           tblptrl	equ	0xFF6
 20816                           tablat	equ	0xFF5
 20817                           prodh	equ	0xFF4
 20818                           prodl	equ	0xFF3
 20819                           intcon	equ	0xFF2
 20820                           postinc0	equ	0xFEE
 20821                           fsr0h	equ	0xFEA
 20822                           fsr0l	equ	0xFE9
 20823                           wreg	equ	0xFE8
 20824                           indf1	equ	0xFE7
 20825                           plusw1	equ	0xFE3
 20826                           fsr1h	equ	0xFE2
 20827                           fsr1l	equ	0xFE1
 20828                           bsr	equ	0xFE0
 20829                           indf2	equ	0xFDF
 20830                           postinc2	equ	0xFDE
 20831                           postdec2	equ	0xFDD
 20832                           plusw2	equ	0xFDB
 20833                           fsr2h	equ	0xFDA
 20834                           fsr2l	equ	0xFD9
 20835                           status	equ	0xFD8
 20836                           
 20837                           	psect	rparam
 20838  0000                     pclatu	equ	0xFFB
 20839                           pclath	equ	0xFFA
 20840                           tblptru	equ	0xFF8
 20841                           tblptrh	equ	0xFF7
 20842                           tblptrl	equ	0xFF6
 20843                           tablat	equ	0xFF5
 20844                           prodh	equ	0xFF4
 20845                           prodl	equ	0xFF3
 20846                           intcon	equ	0xFF2
 20847                           postinc0	equ	0xFEE
 20848                           fsr0h	equ	0xFEA
 20849                           fsr0l	equ	0xFE9
 20850                           wreg	equ	0xFE8
 20851                           indf1	equ	0xFE7
 20852                           plusw1	equ	0xFE3
 20853                           fsr1h	equ	0xFE2
 20854                           fsr1l	equ	0xFE1
 20855                           bsr	equ	0xFE0
 20856                           indf2	equ	0xFDF
 20857                           postinc2	equ	0xFDE
 20858                           postdec2	equ	0xFDD
 20859                           plusw2	equ	0xFDB
 20860                           fsr2h	equ	0xFDA
 20861                           fsr2l	equ	0xFD9
 20862                           status	equ	0xFD8
 20863                           
 20864                           	psect	temp
 20865  00004D                     btemp:
 20866                           	opt stack 0
 20867  00004D                     	ds	1
 20868  0000                     int$flags	set	btemp
 20869                           pclatu	equ	0xFFB
 20870                           pclath	equ	0xFFA
 20871                           tblptru	equ	0xFF8
 20872                           tblptrh	equ	0xFF7
 20873                           tblptrl	equ	0xFF6
 20874                           tablat	equ	0xFF5
 20875                           prodh	equ	0xFF4
 20876                           prodl	equ	0xFF3
 20877                           intcon	equ	0xFF2
 20878                           postinc0	equ	0xFEE
 20879                           fsr0h	equ	0xFEA
 20880                           fsr0l	equ	0xFE9
 20881                           wreg	equ	0xFE8
 20882                           indf1	equ	0xFE7
 20883                           plusw1	equ	0xFE3
 20884                           fsr1h	equ	0xFE2
 20885                           fsr1l	equ	0xFE1
 20886                           bsr	equ	0xFE0
 20887                           indf2	equ	0xFDF
 20888                           postinc2	equ	0xFDE
 20889                           postdec2	equ	0xFDD
 20890                           plusw2	equ	0xFDB
 20891                           fsr2h	equ	0xFDA
 20892                           fsr2l	equ	0xFD9
 20893                           status	equ	0xFD8


Data Sizes:
    Strings     186
    Constant    144
    Data        1
    BSS         113
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      76
    BANK0           160    102     137
    BANK1           256     41      76
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_17(CODE[8]), STR_16(CODE[8]), STR_15(CODE[8]), STR_14(CODE[8]), 
		 -> STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[7]), 
		 -> STR_9(CODE[14]), STR_8(CODE[17]), STR_7(CODE[12]), STR_6(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK0[1]), park_assist_state(BANK1[8]), data_brake(BANK0[1]), data_steering(BANK0[1]), 
		 -> data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->_CANreceiveMessage
    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_message->_LCD_write_char
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Send->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  261982
                                             33 BANK1      8     8      0
                           _CAN_Send
                    _CAN_interpreter
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                        _LCD_Handler
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             32 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  143589
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41624
                                            100 BANK0      2     2      0
                                              0 BANK1     33    25      8
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             57 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             18 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             57 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             32 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             24 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             18 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             18 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                             18 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             18 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             18 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             90 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             90 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             70 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             57 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             18 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             32 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   10597
                                             35 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12052
                                             42 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             34 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             25 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             18 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             18 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             35 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             30 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             32 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             30 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18137
                                             33 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             30 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             30 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             26 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             24 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             18 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_interpreter                                      4     4      0       0
                                             18 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Send                                             0     0      0    4107
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4083
                                             18 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           15    15      0    4512
                                             29 COMRAM     1     1      0
                                              4 BANK0     14    14      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    3197
                                             17 COMRAM    12     4      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Send
     _CANisTxReady
     _CANsendMessage
   _CAN_interpreter
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     29      4C       7       29.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     66      89       5       85.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     1E      4C       1       80.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     121      20        0.0%
DATA                 0      0     121       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Apr 16 17:55:43 2016

                     ___fldiv@aexp 0098                       ___fldiv@bexp 0097  
                                _x 00E3                                  _y 0265  
                                _z 00E4          __size_of_delay_set_quartz 000A  
             __end_of_CANSetFilter 0B06                       ?_LCD_Handler 002D  
                     ___fldiv@sign 008C                       ___awdiv@sign 007D  
                               _id 0012                                 bsr 000FE0  
              ___wmul@multiplicand 0074                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                       __CFG_CP4$OFF 000000  
                     __CFG_CP5$OFF 000000                                l400 17EE  
                              l401 17F2                                l410 1958  
                              l402 17FE                                l411 1962  
                              l500 073A                                l405 18B8  
                              l501 0746                                l414 1A72  
                              l406 18BC                                l510 0852  
                              l502 074A                                l415 1A76  
                              l407 19B4                                l511 0856  
                              l503 0756                                l416 1A82  
                              l408 1944                                l520 0962  
                              l512 0862                                l504 075A  
                              l409 194E                                l521 096E  
                              l513 0866                                l505 0766  
                              l530 0A7A                                l522 0972  
                              l514 0872                                l450 41A4  
                              l370 4898                                l531 0A7E  
                              l523 097E                                l515 0876  
                              l451 41A8                                l371 48A2  
                              l380 1446                                l532 0A8A  
                              l524 0982                                l516 0882  
                              l508 0842                                l460 42B0  
                              l452 41B4                                l444 4174  
                              l381 1450                                l533 0A8E  
                              l525 098E                                l509 0846  
                              l461 42BC                                l445 4178  
                              l390 18A2                                l382 145A  
                              l534 0A9A                                l526 0992  
                              l462 42C0                                l446 4184  
                              l391 1634                                l375 161E  
                              l535 0A9E                                l527 099E  
                              l519 095E                                l463 42CC  
                              l455 428C                                l447 4188  
                              l392 1638                                l376 13B0  
                              l536 0AAA                                l480 0514  
                              l456 4290                                l448 4194  
                              l393 1730                                l385 156A  
                              l377 13B4                                l537 0AAE  
                              l481 0520                                l457 429C  
                              l449 4198                                l394 16C0  
                              l386 156E                                l378 14AC  
                              l538 0ABA                                l490 062A  
                              l482 0524                                l458 42A0  
                              l395 16CA                                l387 157A  
                              l379 143C                                l491 062E  
                              l483 0530                                l475 04F0  
                              l459 42AC                                l396 16D4  
                              l492 063A                                l476 04F4  
                              l397 16DE                                l581 5F6A  
                              l493 063E                                l477 0500  
                              l494 064A                                l486 060A  
                              l478 0504                                l487 060E  
                              l479 0510                                l568 60EC  
                              l488 061A                                l497 0726  
                              l489 061E                                l498 072A  
                              l499 0736                                l862 613A  
                              l782 2388                                l792 24AE  
                              l881 5DA0                                l883 5DA2  
                              l876 6172                                l869 618E  
                              l967 10FA               ??_PWR_Button_Polling 0072  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                      ?_LCD_cursor 007E                                _dir 00E0  
                              _msg 0129                                _str 0138  
                     ___awmod@sign 0077                                prod 000FF3  
                              wreg 000FE8                       ___flmul@aexp 008D  
                     ___flmul@bexp 0092                       ___flmul@sign 008C  
                     ___flmul@temp 0097                       ___flmul@prod 0093  
                     __CFG_LVP$OFF 000000             __size_of_LCD_goto_line 00EC  
                     ___fltol@exp1 00C3                       __CFG_WDT$OFF 000000  
                             l1202 4FEE                               l1192 51B4  
                             l1505 3654                               l1601 4760  
                             l1602 4778                               l1290 4E1C  
                             l1438 5D24                               l1359 57F2  
                             l1535 3DE8                               l1448 5D86  
                             l1544 3E20                               l1480 3440  
                             l1296 4E9C                               l1481 340C  
                             l1385 58CA                               l1289 4DD8  
                             l1546 3E8E                               l1538 3D90  
                             l1395 5C0E                               l1572 3A64  
                             l1565 37C8                               l1582 3B76  
                             l1574 3AD2                               l1479 344C  
                             l1496 35C0                               l1594 4704  
                             l1587 4658                               l6003 48AE  
                             l5125 576A                               l5221 41FE  
                             l6005 48F2                               l5135 57AC  
                             l5215 41B8                               l6043 1464  
                             l5155 61AA                               l5307 0230  
                             l6221 1A86                               l5325 02EA  
                             l5173 4032                               l6215 1A66  
                             l6119 16E8                               l6063 155E  
                             l5423 064E                               l5343 03A4  
                             l5271 00BE                               l5247 42D0  
                             l6145 1802                               l5361 045E  
                             l6139 17E2                               l5603 5EA2  
                             l8003 5B68                               l5531 09E8  
                             l6069 157E                               l8021 55BE  
                             l8013 5DF0                               l4661 5CD4  
                             l5525 09A2                               l5429 0694  
                             l5189 40E8                               l8023 55F0  
                             l4663 5CE0                               l8007 5B7C  
                             l8111 609E                               l5463 07B0  
                             l8025 5622                               l8017 5E22  
                             l8033 60AA                               l4673 5D16  
                             l4665 5CE6                               l4681 5D42  
                             l8121 4D4A                               l5457 076A  
                             l5289 0176                               l6195 196C  
                             l8027 5654                               l4683 5D4E  
                             l5491 0886                               l5395 057A  
                             l8029 5686                               l8037 60BE  
                             l4685 5D54                               l8301 5580  
                             l8221 517E                               l8205 5132  
                             l8061 45B6                               l8053 44BE  
                             l5389 0534                               l6623 3DE4  
                             l8303 558A                               l8127 4D84  
                             l5559 0ABE                               l4689 5D78  
                             l6617 3D9C                               l6609 3D64  
                             l8241 4EFC                               l8321 5864  
                             l8217 516A                               l8161 4E66  
                             l8081 2AA8                               l5497 08CC  
                             l9201 23CC                               l8411 4A00  
                             l6635 3E34                               l6555 3BFC  
                             l7611 32AE                               l8307 55A6  
                             l8227 519A                               l8075 29D6  
                             l8421 4A98                               l6661 3F20  
                             l6645 3E88                               l6629 3E0A  
                             l6549 3BD8                               l8245 4F4A  
                             l7605 328A                               l8317 584E  
                             l8341 5BB8                               l8229 51AA  
                             l8157 4E52                               l8093 2C5C  
                             l8085 2ADA                               l8501 0BDA  
                             l9133 222E                               l8431 4B50  
                             l6671 3F56                               l6663 3F42  
                             l6655 3EDE                               l6591 3CB8  
                             l6575 3C5A                               l6559 3C06  
                             l8255 503A                               l8263 5F9E  
                             l7623 32E4                               l7615 32B8  
                             l8319 585E                               l8183 508A  
                             l8167 4E82                               l8409 49F8  
                             l6569 3C36                               l8249 4F9C  
                             l7713 34AE                               l7705 3470  
                             l8273 54D2                               l8329 58B8  
                             l8345 5BFC                               l8337 5BA2  
                             l8361 4690                               l8177 5064  
                             l8169 4E92                               l8601 1004  
                             l8513 0C24                               l8505 0BE0  
                             l9209 240E                               l6915 58DC  
                             l8427 4AD8                               l6659 3F0C  
                             l6579 3C64                               l7715 34B4  
                             l7723 34D0                               l7635 331C  
                             l8339 5BB2                               l8363 4698  
                             l8355 4668                               l8099 2D2E  
                             l8611 10AE                               l8523 0C76  
                             l8507 0C0A                               l9227 24E6  
                             l9235 252A                               l9219 24D2  
                             l6925 5924                               l7565 5F5C  
                             l6669 3F52                               l7741 35F2  
                             l7733 35A0                               l7629 32F8  
                             l8293 5554                               l8373 4742  
                             l8365 46A8                               l8197 50DE  
                             l7813 3756                               l9261 25A4  
                             l9237 2532                               l9173 235E  
                             l6935 5D96                               l6599 3CE6  
                             l7751 3614                               l7719 34BE  
                             l7647 3350                               l7639 3326  
                             l8375 4752                               l8367 46E6  
                             l7831 37B0                               l7815 375C  
                             l7807 3732                               l8631 112E  
                             l8623 10FE                               l8551 0DB0  
                             l9271 26C6                               l9167 22C8  
                             l6929 595C                               l6953 59C0  
                             l8289 5540                               l7913 3B48  
                             l7841 37F0                               l7833 37B6  
                             l7825 378C                               l7817 376E  
                             l8617 10C8                               l8609 10A0  
                             l8553 0DC6                               l9281 2754  
                             l9249 2560                               l9257 25A0  
                             l9177 2370                               l6963 59CE  
                             l8395 5FE8                               l7747 3608  
                             l7691 3426                               l8299 5570  
                             l8387 47CA                               l7923 3B96  
                             l7915 3B5C                               l8635 1190  
                             l8619 10DC                               l8563 0E6A  
                             l8555 0E02                               l8547 0D7E  
                             l8539 0CFA                               l8491 0B66  
                             l8483 0B30                               l9275 274A  
                             l9187 2396                               l9179 2378  
                             l7781 36BC                               l7757 3628  
                             l7677 338C                               l7925 3BA0  
                             l7909 3B22                               l7837 37DC  
                             l8661 12E0                               l8653 12AC  
                             l8645 1284                               l8581 0F7E  
                             l8557 0E18                               l8477 0B16  
                             l5997 4890                               l9189 23A2  
                             l6975 5A2C                               l8399 6002  
                             l7791 36EE                               l7767 364E  
                             l7759 362E                               l7695 3430  
                             l7951 56F4                               l8647 1292  
                             l8583 0F84                               l8567 0E9C  
                             l8655 12BA                               l8495 0BB0  
                             l5999 48A6                               l9287 27CC  
                             l7785 36DE                               l7777 36AA  
                             l7689 3420                               l7953 5700  
                             l7945 56D6                               l8673 1364  
                             l8665 1308                               l8577 0F06  
                             l8497 0BCA                               l8753 4B62  
                             l7971 5758                               l7963 5736  
                             l7955 5706                               l7939 56C0  
                             l7883 3A4E                               l8595 0FD0  
                             l8675 136A                               l7797 3702  
                             l7789 36EA                               l8669 1338  
                             l8677 138C                               l8781 4C7E  
                             l7967 5744                               l7991 5B24  
                             l7983 5B00                               l8599 0FFC  
                             l8791 4CBE                               l7993 5B30  
                             l7889 3A78                               l8793 4CCE  
                             l7995 5B36                               l7987 5B10  
                             l7899 3ACC                               l8789 4CAC  
                             l7999 5B5A                               STR_1 FF84  
                             STR_2 FF5A                               STR_3 FF45  
                             STR_4 FF84                               STR_5 FFFA  
                             STR_6 FF6F                               STR_7 FFB8  
                             STR_8 FF99                               STR_9 FFAA  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                               u6020 42F0  
                             u6105 0152                               u6025 42E4  
                             u6210 0320                               u6130 01AC  
                             u6050 003A                               u6215 0314  
                             u6135 01A0                               u6055 002E  
                             u6225 0380                               u6145 020C  
                             u6065 009A                               u6250 03DA  
                             u6170 0266                               u6090 00F2  
                             u6500 078A                               u6420 066E  
                             u6340 0554                               u6255 03CE  
                             u6175 025A                               u6095 00E6  
                             u6505 077E                               u6425 0662  
                             u6345 0548                               u6265 043A  
                             u6185 02C6                               u5810 3FAE  
                _F2_Button_Polling 616A                               u5815 3FA2  
                             u7440 1484                               u5825 400E  
                             u7450 14D0                               u5850 4064  
                             u7700 198C                               u6740 0ADE  
                             u6660 09C2                               u6580 08A6  
                             u5940 41D8                               u7445 1478  
                             u7710 19D8                               u7455 14C4  
                             u5855 4058                               u7705 1980  
                             u7465 1530                               u6745 0AD2  
                             u6665 09B6                               u6585 089A  
                             u5945 41CC                               u5865 40C4  
                             u7570 1708                               u7715 19CC  
                             u7580 1754                               u8380 3EF2  
                             u8700 6148                               u7725 1A38  
                             u7575 16FC                               u8800 6180  
                             u7585 1748                               u7595 17B4  
                             u8715 614A                               u8750 619C  
                             u8815 6182                               u8765 619E  
                             u8870 5DC4                               u9905 5F36  
                             u9906 5F38                               u8876 5DC6  
                             u9875 5F12                               u9876 5F14  
                             u9885 5F1E                               u9886 5F20  
                             u9895 5F2A                               u9896 5F2C  
              __size_of_CANSetMask 039E                       ?_LCD_goto_xy 0081  
                             _data 002C                               _main 2204  
                             _itoa 5E78                 ?_F2_Button_Polling 002D  
        __size_of_LCD_send_command 003A                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               btemp 004D  
                             _utoa 5762                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 00C0                      __CFG_IESO$OFF 000000  
                  ___fldiv@new_exp 0091                 __size_of_LCD_clear 0032  
                 __end_of_CAN_Send 5996                       _sprintf$4215 0108  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
              ??_F2_Button_Polling 0072           __end_of_LCD_enable_pulse 6114  
                 _CANOperationMode 61A2                    _space_available 0261  
          __size_of_LCD_initialize 016E         __size_of_CANreceiveMessage 050C  
                    ___fltol@sign1 00C2                    __end_of___fladd 3714  
                            ?_main 002D                    __end_of___fldiv 3F7A  
                            ?_itoa 0082                    __end_of___awdiv 5762  
                  __end_of___flneg 5FB0                              STR_10 FFE4  
                            STR_11 FFF0                              STR_12 FFF5  
                            STR_13 FFEB                              STR_14 FFC4  
                            STR_15 FFD4                              STR_16 FFCC  
                            STR_17 FFDC                    __end_of___awmod 5B86  
                  __end_of___flmul 3BBA                    __end_of___flsub 5E78  
                  __end_of___fltol 55B8                              u10000 33D6  
                            u10010 33EE                    __end_of___lldiv 58DC  
                            u10020 33F0                              ?_utoa 0079  
                            u12200 232C                              u12210 2344  
                            u10460 3B36                              u10380 39F0  
                  ___awdiv@divisor 007A                              u11181 49AC  
                            u12310 248E                              u12320 24B8  
                            u12216 2346                    __end_of___llmod 5C20  
                            u10721 4D26                              u10385 39E4  
                            u12420 27B8                              u12316 2490  
                            u10741 4D60                              u11470 10F2  
                            u12430 2830                              u12326 24BA  
                            u12290 2472                              u10950 54F2  
                            u12447 5F5E                              _T3CON 000FB1  
                            u10955 54E6                    __end_of___lwdiv 5D2E  
                  __end_of___lwmod 5D90                              i2l400 1F16  
                            i2l401 1F1A                              i2l410 205A  
                            i2l402 1F24                              i2l411 2062  
                            i2l405 1FCE                              i2l422 2FF8  
                            i2l414 2160                              i2l406 1FD2  
                            i2l415 2164                              i2l407 20B0  
                            i2l416 216E                              i2l408 204A  
                            i2l409 2052                              i2l380 1BBE  
                            i2l381 1BC6                              i1l773 0078  
                            i2l390 1FBA                              i2l382 1BCE  
                            i2l391 1D84                              i2l375 1D70  
                            i2l392 1D88                              i2l376 1B3A  
                            i2l393 1E66                              i2l385 1CCC  
                            i2l377 1B3E                              i2l394 1E00  
                            i2l386 1CD0                              i2l378 1C1C  
                            i2l395 1E08                              i2l387 1CDA  
                            i2l379 1BB6                              i2l396 1E10  
                            i2l573 61CA                              i2l397 1E18  
                            i2l568 612E                              i2l769 5302  
                  ___awdiv@counter 007C                              _TMR3H 000FB3  
                            _TMR3L 000FB2                  _CANisRxReady$3237 003E  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                    __CFG_WRT4$OFF 000000                 __size_of_ISR_bassa 00A8  
                    __CFG_WRT5$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
               CANInitialize@flags 0084                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                     __CFG_EBTR4$OFF 000000  
                 __end_of_ISR_alta 533E                     __CFG_EBTR5$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
        __end_of_F2_Button_Polling 6186                    __end_of_dpowers FF45  
                            _scale 2846                    __end_of_isdigit 60A8  
        __size_of_LCD_shift_cursor 004C                     __pbitbssCOMRAM 0258  
             __end_of_CANisRxReady 61CE                              tablat 000FF5  
             __end_of_CANisTxReady 60F2                              plusw1 000FE3  
                            plusw2 000FDB                              utoa@c 0081  
                            utoa@v 007F                              status 000FD8  
                  __end_of_sprintf 139A                __size_of_LCD_cursor 0032  
                  __initialization 5EC0                       __end_of_main 2846  
                     __end_of_itoa 5EC0      __size_of_board_initialization 00A4  
                    _LCD_goto_line 55B8                       __end_of_utoa 5820  
                ?_Joystick_Polling 002D                 ??_Joystick_Polling 0072  
                ?_LCD_write_string 0083                             ??_main 0121  
                           ??_itoa 0088                             ??_utoa 007F  
        __size_ofi2_CANsendMessage 06DE                      __activetblptr 000003  
                   _JoystickValues 00D6                 ??_LCD_write_string 0085  
             __size_of__tdiv_to_l_ 019E                  _CANisTxReady$3235 0072  
         __size_of_CAN_interpreter 00AA                  __end_of_LCD_clear 607E  
            i2CANsendMessage@flags 0045             LCD_write_string@buffer 0083  
                           _ADCON1 000FC1                             _CANCON 000F6F  
                 ___llmod@dividend 0072                             ?_scale 0099  
                           _ADRESH 000FC4                   ___awdiv@dividend 0078  
                  __CFG_BBSIZ$1024 000000                             i2l9001 206A  
                           i2l9021 2156                             i2l9103 52A0  
                           i2l6801 31FE                             i2l9113 52CC  
                           i2l6811 3268                             i2l6731 2F48  
                           i2l6723 2ED8                             i2l9027 2172  
                           i2l6805 321A                             i2l9117 52FA  
                           i2l6743 2FA2                             i2l6735 2F66  
                           i2l6809 3236                             i2l6747 2FC0  
                           i2l6739 2F84                             i2l9083 5244  
                           i2l9075 5220                             i2l6749 2FF2  
                           i2l9093 5274                             i2l9069 51FE  
                           i2l9087 524C                             i2l6793 31C6  
                           i2l6785 3158                             i2l9099 528A  
                           i2l6797 31E2                             i2l8925 1E20  
                           i2l8951 1F28                             i2l8945 1F0C  
                           i2l8849 1BD6                             i2l8875 1CDE  
                           i2l8869 1CC2                             _RXB0D0 000F66  
                           _RXB0D1 000F67                             _RXB0D2 000F68  
                           _RXB0D3 000F69                             _RXB0D4 000F6A  
                           _RXB1D0 000F56                             _RXB0D5 000F6B  
                           _RXB1D1 000F57                             _RXB0D6 000F6C  
                           _RXB1D2 000F58                             _RXB0D7 000F6D  
                           _RXB1D3 000F59                             _RXB1D4 000F5A  
                           _RXB1D5 000F5B                             _RXB1D6 000F5C  
                           _RXB1D7 000F5D                             _TXB0D0 000F46  
                           _TXB0D1 000F47                             _TXB0D2 000F48  
                           _TXB0D3 000F49                             _TXB1D0 000F36  
                           _TXB0D4 000F4A                             _TXB1D1 000F37  
                           _TXB0D5 000F4B                             _TXB1D2 000F38  
                           _TXB0D6 000F4C                             _TXB1D3 000F39  
                           _TXB0D7 000F4D                             _TXB2D0 000F26  
                           _TXB1D4 000F3A                             _TXB2D1 000F27  
                           _TXB1D5 000F3B                             _TXB2D2 000F28  
                           _TXB1D6 000F3C                             _TXB2D3 000F29  
                           _TXB1D7 000F3D                             _TXB2D4 000F2A  
                           _TXB2D5 000F2B                             _TXB2D6 000F2C  
                           _TXB2D7 000F2D                 CANsendMessage@data 0076  
               CANsendMessage@tamp 007E                   __end_of___xxtofl 47DC  
                  _switch_position 00E2                   __end_of_delay_ms 5F78  
            __size_of_CANSetFilter 0B06                     __CFG_XINST$OFF 000000  
                __end_of_ISR_bassa 00C0                   __end_of__powers_ FF1D  
                       _MotoreFlag 025B                     ?_LCD_goto_line 002D  
                           ___flge 4EAE                          ??___fladd 00AE  
                 _delay_set_quartz 61CE                             ___wmul 5FB0  
                        ??___fldiv 0088                          ??___awdiv 007C  
                        ??___flneg 009D                     __CFG_STVREN$ON 000000  
                        ??___awmod 0076                          ??___flmul 0088  
                        ??___flsub 00C2                          ??___fltol 00BE  
                        ??___lldiv 007A                          ??___llmod 007A  
                        ??___lwdiv 0076                       ??_CANSetMask 0077  
                        ??___lwmod 0076            __size_of_LCD_write_char 0096  
                           _fround 4318     LCD_initialize@quartz_frequency 0080  
                           clear_0 5EC6                             clear_1 5ED2  
                           clear_2 5EE2                   ___awdiv@quotient 007E  
                  ___awmod@divisor 0074               __size_of_LCD_Handler 01AE  
                  ___awmod@counter 0076                    __CFG_BOREN$BOHW 000000  
                _JoystickConstants 00C6                             itoa@cp 0088  
                        ??_isdigit 0072                       __mediumconst FEB4  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                          ?_CAN_Send 002D  
       __size_of_F2_Button_Polling 001C                          ??_sprintf 00C4  
                     _CANSetFilter 0000                         ___flge@ff1 0072  
                       ___flge@ff2 0076                       ___xxtofl@arg 007C  
                     ___xxtofl@exp 007B                       ___xxtofl@val 0072  
                       __accesstop 0060            __end_of__initialization 5EFA  
               __end_of_CANSetMask 4318                    __CFG_PBADEN$OFF 000000  
                       _SterzoFlag 025D                         ___flneg@f1 0099  
                 _LCD_send_command 5F04                      ___rparam_used 000001  
LCD_write_integer@number_of_digits 008C                         ___fltol@f1 00BA  
             __size_of_LCD_goto_xy 001C                     __pcstackCOMRAM 002D  
                     __pidataBANK0 61D8                          ?_ISR_alta 002D  
                     LCD_goto_xy@x 0082                       LCD_goto_xy@y 0081  
                    __end_of_scale 2D60                     _LCD_initialize 533E  
                _LCD_write_integer 49A2                  _LCD_write_message 5FE6  
            CANSetFilter@numBuffer 007B                 ?_LCD_write_integer 008A  
           LCD_write_integer@index 0099                 ?_LCD_write_message 0083  
                       __div_to_l_ 503E                       ??_LCD_cursor 007F  
           LCD_write_integer@value 008A      LCD_write_integer@convertedInt 0093  
                    _newMessageCan 025F                       _actual_speed 00D8  
            __size_of_CANisRxReady 0016              __size_of_CANisTxReady 0024  
                       ??_CAN_Send 0082                ??_LCD_write_integer 008E  
                  __div_to_l_@exp1 007F                ??_LCD_write_message 0085  
                  __div_to_l_@cntr 007E                            ??_scale 009D  
                 _LCD_shift_cursor 5DE4                    __div_to_l_@quot 007A  
         __end_of_CANOperationMode 61B8                         __pbssBANK0 00C6  
                       __pbssBANK1 0129                  ??_CAN_interpreter 0072  
                       _data_brake 00E5            __size_of_CANsendMessage 078C  
                       _data_speed 00E6                      __div_to_l_@f1 0072  
                    __div_to_l_@f2 0076                    ??_LCD_goto_line 007E  
               __end_of_LCD_cursor 604C             __end_of_LCD_initialize 54AC  
                          ?___flge 0072                            ?___wmul 0072  
                       ??_ISR_alta 0064          __end_of_LCD_write_integer 4B62  
        __end_of_LCD_write_message 601A                  ?_LCD_enable_pulse 002D  
                          ?_fround 0099                       _CANisRxReady 61B8  
                          _CANSTAT 000F6E                 ??_LCD_enable_pulse 007A  
                     _CANisTxReady 60CE                          ISR_alta@i 004A  
                          _BRGCON1 000F70                            _BRGCON2 000F71  
                          _BRGCON3 000F72                   i2_CANsendMessage 1B26  
      __size_of_PWR_Button_Polling 001C                          ?___xxtofl 0072  
          __size_ofi2_CANisTxReady 001E             __size_of_CANInitialize 01C6  
                 LCD_cursor@active 007F                          ?_delay_ms 0078  
                          _RXB0DLC 000F65                            _RXB1DLC 000F55  
                          _RXB0CON 000F60                            _RXB1CON 000F50  
                          _TXB0DLC 000F45                            _TXB1DLC 000F35  
                          _TXB2DLC 000F25                CANsendMessage@flags 0079  
                          _AbsFlag 0258                  __end_of__npowers_ FEE9  
                          __Hparam 0000                         _left_speed 0026  
                       _scale$4214 009D                            __Lparam 0000  
                 delay_ms@value_ms 0078                    ?_LCD_initialize 002D  
                  __size_of___flge 0190                            ___fladd 326C  
                          ___fldiv 3BBA                            ___awdiv 56A4  
                          ___flneg 5F78                            ___awmod 5AE4  
                          ___flmul 3714                            ___flsub 5E30  
                          ___fltol 54AC                            ___lldiv 5820  
                  __size_of___wmul 0036                     _LCD_write_char 5C20  
                          ___llmod 5B86                            ___lwdiv 5CB6  
                          ___lwmod 5D2E               CANInitialize@propSeg 0089  
                          __pcinit 5EC0                            _battery 002A  
                  __size_of_fround 02F6                            __ramtop 0D00  
              LCD_write_char@value 0082                            __ptext0 2204  
                          __ptext1 5A40                            __ptext2 47DC  
                          __ptext3 3F7A                            __ptext4 0000  
                          __ptext5 61A2                            __ptext6 6132  
                          __ptext7 4B62                            __ptext8 0B06  
                          __ptext9 2846                        ?__div_to_l_ 0072  
                 LCD_write_char@D0 0081                   LCD_write_char@D1 0080  
                 LCD_write_char@D2 007F                   LCD_write_char@D3 007E  
                        _F1_switch 0259                            _dpowers FF1D  
                        _F2_switch 025A                            _isdigit 607E  
                       ??___xxtofl 0076                   ___awmod@dividend 0072  
                       ??_delay_ms 007A             CANreceiveMessage@error 0048  
     __end_of_board_initialization 5AE4          __size_of_Joystick_Polling 0054  
         __end_of_delay_set_quartz 61D8                            _sprintf 0B06  
                   __pintcode_body 51C6                          _LCD_clear 604C  
             end_of_initialization 5EFA          __size_of_LCD_write_string 0026  
                          itoa@buf 0082                            itoa@val 0084  
                          int_func 51C6                          i2u1200_45 212A  
                        i2u1208_40 521E                          i2u1172_40 1BF4  
                        i2u1172_45 1BEA                          i2u1173_40 1C3E  
                        i2u1173_45 1C34                          i2u1245_47 52C6  
                        i2u1174_45 1C96                          i2u1185_40 1E3E  
                        i2u1185_45 1E34                          i2u1186_40 1E88  
                        i2u1186_45 1E7E                          i2u1187_45 1EE0  
                        i2u1198_40 2088                          i2u1198_45 207E  
                        i2u1199_40 20D2                          i2u1199_45 20C8  
                    _CANInitialize 47DC                    ___lldiv@divisor 0076  
               LCD_cursor@blinking 007E                      _parking_state 00E1  
                  ___lldiv@counter 007E             __end_of_LCD_write_char 5CB6  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 01C0  
       __size_of_LCD_write_message 0034                            utoa@buf 0079  
                   __tdiv_to_l_@f1 0072                     __tdiv_to_l_@f2 0076  
                          utoa@val 007B                         _wait_low_1 0262  
                       _wait_low_2 0263                         _wait_low_3 0264  
                        _ISR_bassa 0018                      ??__tdiv_to_l_ 007A  
                        _PORTAbits 000F80                          _PORTBbits 000F81  
                   CANSetMask@mask 0072                          _PORTDbits 000F83  
                   CANSetMask@tamp 007C           __end_of_LCD_send_command 5F3E  
                   CANSetMask@type 0076                        ___fladd@grs 00B9  
                    ___xxtofl@sign 007A                        ___fldiv@grs 0093  
                      ___fldiv@rem 008D                  _F1_Button_Polling 6186  
                       ?_LCD_clear 002D                 ?_F1_Button_Polling 002D  
                __size_of_CAN_Send 00BA            _clock_counter_reference 00DA  
                      ___flmul@grs 008E                     _CANsendMessage 139A  
                 CANInitialize@BRP 0083                   CANInitialize@SJW 0082  
                   ?_CANInitialize 0080                ??_F1_Button_Polling 0072  
              __size_of__div_to_l_ 0188            LCD_write_integer@F17272 0008  
                  ?_LCD_write_char 002D                      ??_LCD_Handler 00C6  
         __end_of_LCD_shift_cursor 5E30                     __end_of___flge 503E  
                       ?_ISR_bassa 002D                     __end_of___wmul 5FE6  
                __size_of_ISR_alta 5336                  LCD_shift_cursor@i 0080  
                   __end_of_fround 460E                    _CAN_interpreter 5996  
                   i2_CANisTxReady 6114          __end_of_F1_Button_Polling 61A2  
              start_initialization 5EC0                __end_of__tdiv_to_l_ 4EAE  
              CANSetMask@numBuffer 007B                      _data_speed_rx 0001  
           __end_of_CANsendMessage 1B26                  ?_CANOperationMode 002D  
                    _data_steering 00E7                      ??_LCD_goto_xy 0082  
       i2CANsendMessage@dataLength 0044               i2CANsendMessage@data 0042  
               ??_CANOperationMode 0072               i2CANsendMessage@tamp 0060  
                  ___llmod@divisor 0076           __end_ofi2_CANsendMessage 2204  
       CANInitialize@FilterConfig1 008A         CANInitialize@FilterConfig2 008B  
                  ___llmod@counter 007A                           ??___flge 007A  
             _board_initialization 5A40                           ??___wmul 0076  
                      __pdataBANK0 00E8                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 009D             __end_ofi2_CANisTxReady 6132  
                    sprintf@tmpval 0116                          ___fladd@a 00AA  
                        ___fladd@b 00A6             CANInitialize@phaseSeg1 0080  
           CANInitialize@phaseSeg2 0081                         fround@prec 00A5  
              __end_of_LCD_Handler 4D10                          ___fldiv@a 0084  
                        ___fldiv@b 0080                          ___flmul@a 0084  
                        ___flmul@b 0080                        __pbssCOMRAM 0001  
                        ___flsub@a 00BE                          ___flsub@b 00BA  
                    __pcstackBANK0 0060                      __pcstackBANK1 0100  
                      _BRGCON2bits 000F71                        _BRGCON3bits 000F72  
                 _Joystick_Polling 5D90                  __size_of___xxtofl 01CE  
        __size_of_LCD_enable_pulse 0022                       _isdigit$3798 0073  
       i2CANsendMessage@identifier 003E                  _park_assist_state 0144  
                __size_of_delay_ms 003A                        ??_LCD_clear 007E  
                  ?_CANsendMessage 0072            LCD_write_message@buffer 0083  
                 _LCD_write_string 60A8                    ??_CANInitialize 0085  
                      sprintf@flag 010E                        sprintf@fval 011C  
                      sprintf@prec 011A                   ??_LCD_initialize 0080  
               CANSetFilter@filter 0072          delay_set_quartz@frequency 0072  
                 ___lwdiv@dividend 0072                 LCD_send_command@D0 007C  
               LCD_send_command@D1 007B                 LCD_send_command@D2 007A  
               LCD_send_command@D3 007D                __end_of_LCD_goto_xy 616A  
            __end_of_LCD_goto_line 56A4              ?_board_initialization 002D  
                        __pintcode 0008                      __pmediumconst FEB4  
                         ?___fladd 00A6                           ?___fldiv 0080  
                         ?___awdiv 0078                           ?___flneg 0099  
                         ?___awmod 0072                           ?___flmul 0080  
          __end_of_CAN_interpreter 5A40                           ?___flsub 00BA  
                         ?___fltol 00BA                           ?___lldiv 0072  
                         ?___llmod 0072                          __npowers_ FEB5  
                         ?___lwdiv 0072                           ?___lwmod 0072  
                      ??_ISR_bassa 002D                        __pintcodelo 0018  
       __end_of_PWR_Button_Polling 614E                    ?i2_CANisTxReady 002D  
                      __tdiv_to_l_ 4D10                       ??__div_to_l_ 007A  
                      _COMSTATbits 000F74                           ?_isdigit 002D  
       __size_of_F1_Button_Polling 001C                           _CAN_Send 58DC  
                 ___lwdiv@quotient 0076                           ?_sprintf 0100  
                   __size_of_scale 051A                  ?_delay_set_quartz 002D  
            CANreceiveMessage@tamp 0049                 ??_delay_set_quartz 0072  
                   ___wmul@product 0076                           _LATCbits 000F8B  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                         _IPR2bits 000FA2       _delay_quartz_frequency_value 00E8  
                         _IPR3bits 000FA5                           _PIE2bits 000FA0  
                         _PIE3bits 000FA3                 __end_of__div_to_l_ 51C6  
                         _PIR2bits 000FA1                           _PIR3bits 000FA4  
                         i2u844_40 2E18                           i2u844_46 2E1A  
                         i2u845_40 2E46                           i2u853_45 2FCC  
                         i2u845_46 2E48                           i2u855_40 30A0  
                         i2u847_45 2E5C                           i2u855_46 30A2  
                         i2u856_40 30CA                           i2u864_45 3242  
                         i2u856_46 30CC                           _RXB0EIDH 000F63  
                         _RXB0EIDL 000F64                           i2u858_45 30DE  
                         _RXB1EIDH 000F53                          _pr_time_1 00CE  
                        _pr_time_2 00D2                           _RXB1EIDL 000F54  
                        _pr_time_3 0016                          _pr_time_4 001A  
                        _pr_time_5 001E                          _set_speed 00DC  
                         _RCONbits 000FD0                   __CFG_WDTPS$32768 000000  
                         _RXB0SIDH 000F61                           _RXB0SIDL 000F62  
                         _RXF0EIDH 000F02                           _RXB1SIDH 000F51  
                         _RXF0EIDL 000F03                           _RXB1SIDL 000F52  
                         _RXF1EIDH 000F06                           _RXF1EIDL 000F07  
                         _RXF2EIDH 000F0A                           _RXF2EIDL 000F0B  
                         _RXF3EIDH 000F0E                           _RXF3EIDL 000F0F  
                         _RXF4EIDH 000F12                           _RXF4EIDL 000F13  
                         _RXF5EIDH 000F16                           _RXF5EIDL 000F17  
                         _RXF0SIDH 000F00                           _RXF0SIDL 000F01  
                         _TXB0EIDH 000F43                           _RXF1SIDH 000F04  
                         _TXB0EIDL 000F44                           _RXF1SIDL 000F05  
                         _TXB1EIDH 000F33                           _RXF2SIDH 000F08  
                         _TXB1EIDL 000F34                           _RXF2SIDL 000F09  
                         _ISR_alta 0008                           _TXB2EIDH 000F23  
                         _RXF3SIDH 000F0C                           _TXB2EIDL 000F24  
                         _RXF3SIDL 000F0D                           _RXF4SIDH 000F10  
                         _RXF4SIDL 000F11                           _RXF5SIDH 000F14  
                         _RXF5SIDL 000F15                           _RXM0EIDH 000F1A  
                         _RXM0EIDL 000F1B                           _TXB0SIDH 000F41  
                         _RXM1EIDH 000F1E                           _TXB0SIDL 000F42  
                         _RXM1EIDL 000F1F                           _TXB1SIDH 000F31  
                         _TXB1SIDL 000F32                           _TXB2SIDH 000F21  
                         _TXB2SIDL 000F22                        _LCD_Handler 4B62  
                         _RXM0SIDH 000F18                           _RXM0SIDL 000F19  
                         _RXM1SIDH 000F1C                           _RXM1SIDL 000F1D  
                         _RXERRCNT 000F75     LCD_write_integer@zero_cleaning 008D  
                         _TXERRCNT 000F76                         _ADCON0bits 000FC2  
                       _ADCON2bits 000FC0                  ___wmul@multiplier 0072  
                         _RTR_Flag 025C                  ?_LCD_send_command 007A  
                 _actual_speed_kmh 000E                          _user_data 00DE  
               ??_LCD_send_command 007D                      ?_CANSetFilter 0072  
                       _CANCONbits 000F6F                        _LCD_goto_xy 614E  
                 ??_LCD_write_char 007E                  LCD_goto_line@line 007E  
                         __Hrparam 0000                       _RXB0SIDLbits 000F62  
           ??_board_initialization 008C                           __Lrparam 0000  
                     _RXB1SIDLbits 000F52                   ?_CAN_interpreter 002D  
                 __size_of___fladd 04A8                         _CANSetMask 3F7A  
                 __size_of___fldiv 03C0                   __size_of___awdiv 00BE  
                 __size_of___flneg 0038                   __size_of___awmod 00A2  
                 __size_of___flmul 04A6                  ?_LCD_shift_cursor 007E  
                 __size_of___flsub 0048                   __size_of___fltol 010C  
                 __size_of___lldiv 00BC                   __size_of___llmod 009A  
                 __size_of___lwdiv 0078                   __size_of___lwmod 0062  
                      _fround$4212 00A1                        _fround$4213 009D  
               ??_LCD_shift_cursor 007F                         sprintf@exp 0114  
                       sprintf@val 0110                           ___xxtofl 460E  
                     _RXF0SIDLbits 000F01                   __size_of_isdigit 002A  
                         _delay_ms 5F3E                    ___lwdiv@divisor 0074  
                     _RXF1SIDLbits 000F05                    ___lwdiv@counter 0078  
                   ??_CANSetFilter 0077                   _LCD_enable_pulse 60F2  
                         __ptext10 607E                           __ptext11 4318  
                         __ptext20 54AC                           __ptext12 3714  
                         __ptext21 5E30                           __ptext13 5AE4  
                         __ptext30 5D2E                           __ptext22 326C  
                         __ptext14 56A4                           __ptext31 5CB6  
                         __ptext23 5F78                           __ptext15 4D10  
                         __ptext40 55B8                           __ptext32 60A8  
                         __ptext24 4EAE                           __ptext16 503E  
                         __ptext41 5F04                           __ptext33 5C20  
                         __ptext25 3BBA                           __ptext17 460E  
                         __ptext50 139A                           __ptext42 60F2  
                         __ptext34 533E                           __ptext26 5FE6  
                         __ptext18 5B86                           __ptext51 60CE  
                         __ptext43 5F3E                           __ptext35 61CE  
                         __ptext27 49A2                           __ptext19 5820  
                         __ptext44 5FB0                           __ptext36 601A  
                         __ptext28 5E78                           __ptext45 5D90  
                         __ptext37 604C                           __ptext29 5762  
                         __ptext54 1B26                           __ptext46 616A  
                         __ptext38 614E                           __ptext55 6114  
                         __ptext47 6186                           __ptext39 5DE4  
                         __ptext56 2D60                           __ptext48 5996  
                         __ptext57 61B8                           __ptext49 58DC  
                     _RXF2SIDLbits 000F09                           __powers_ FEE9  
                     _RXF3SIDLbits 000F0D                   __size_of_sprintf 0894  
                     _RXF4SIDLbits 000F11                       _RXF5SIDLbits 000F15  
         CANsendMessage@dataLength 0078                      __size_of_main 0642  
                    __size_of_itoa 0048                      __size_of_utoa 00BE  
                ?i2_CANsendMessage 003E               CANreceiveMessage@msg 003E  
            LCD_shift_cursor@shift 007F                i2_CANisTxReady$3235 003E  
                     _TXB0SIDLbits 000F42                  Joystick_Polling@i 0073  
               ??i2_CANsendMessage 0046                       _TXB1SIDLbits 000F32  
         __end_of_Joystick_Polling 5DE4                       _TXB2SIDLbits 000F22  
                         int$flags 004D          __size_of_CANOperationMode 0016  
                    ?_CANisRxReady 002D                      ?_CANisTxReady 002D  
         __end_of_LCD_write_string 60CE                        _RXB0DLCbits 000F65  
                      _RXB1DLCbits 000F55                       _RXM0SIDLbits 000F19  
                      _RXB0CONbits 000F60                         _LCD_cursor 601A  
                      _RXB1CONbits 000F50                  _CANreceiveMessage 2D60  
                     _RXM1SIDLbits 000F1D                         _INTCONbits 000FF2  
                     _set_steering 002B                   ??_CANsendMessage 007A  
               ?_CANreceiveMessage 003E                           itoa@base 0086  
                         isdigit@c 0074                           scale@scl 00A1  
         CANsendMessage@identifier 0072                       _time_counter 0022  
                         intlevel1 0000                           intlevel2 0000  
                        sprintf@ap 010C                   __tdiv_to_l_@exp1 0082  
                 __tdiv_to_l_@cntr 0081                          sprintf@sp 0100  
                 CANSetFilter@tamp 007C                   __tdiv_to_l_@quot 007D  
                 CANSetFilter@type 0076                ??_CANreceiveMessage 0040  
                 ___lwmod@dividend 0072                   ___lldiv@dividend 0072  
                      _TXB0DLCbits 000F45                        _right_speed 0028  
                      _TXB1DLCbits 000F35                        _TXB0CONbits 000F40  
                      _TXB2DLCbits 000F25                        _TXB1CONbits 000F30  
                      _TXB2CONbits 000F20                    _display_refresh 025E  
                 ??i2_CANisTxReady 003E               CANOperationMode@mode 0072  
                   ??_CANisRxReady 003E                        ?_CANSetMask 0072  
                   ??_CANisTxReady 0072                       ?__tdiv_to_l_ 0072  
        __end_of_CANreceiveMessage 326C                           utoa@base 007D  
                         sprintf@c 0120                           sprintf@f 0102  
                 ___lldiv@quotient 007A                    ___lwmod@divisor 0074  
  LCD_shift_cursor@number_of_shift 007E                    ___lwmod@counter 0076  
                    ___fladd@signs 00B6                 _PWR_Button_Polling 6132  
                     ___fladd@aexp 00B7                       ___fladd@bexp 00B8  
            __end_of_CANInitialize 49A2                ?_PWR_Button_Polling 002D  
                     _power_switch 0260  
