

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Apr 16 21:22:48 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           	psect	idataBANK0
    80  016198                     __pidataBANK0:
    81                           	opt stack 0
    82                           
    83                           ;initializer for _delay_quartz_frequency_value
    84  016198  10                 	db	16
    85                           
    86                           	psect	mediumconst
    87  00FEB4                     __pmediumconst:
    88                           	opt stack 0
    89  00FEB4  00                 	db	0
    90  00FEB5                     __npowers_:
    91                           	opt stack 0
    92  00FEB5  0000               	dw	0
    93  00FEB7  3F80               	dw	16256
    94  00FEB9  CCCD               	dw	52429
    95  00FEBB  3DCC               	dw	15820
    96  00FEBD  D70A               	dw	55050
    97  00FEBF  3C23               	dw	15395
    98  00FEC1  126F               	dw	4719
    99  00FEC3  3A83               	dw	14979
   100  00FEC5  B717               	dw	46871
   101  00FEC7  38D1               	dw	14545
   102  00FEC9  C5AC               	dw	50604
   103  00FECB  3727               	dw	14119
   104  00FECD  37BD               	dw	14269
   105  00FECF  3586               	dw	13702
   106  00FED1  BF95               	dw	49045
   107  00FED3  33D6               	dw	13270
   108  00FED5  CC77               	dw	52343
   109  00FED7  322B               	dw	12843
   110  00FED9  705F               	dw	28767
   111  00FEDB  3089               	dw	12425
   112  00FEDD  E6FF               	dw	59135
   113  00FEDF  2EDB               	dw	11995
   114  00FEE1  E508               	dw	58632
   115  00FEE3  1E3C               	dw	7740
   116  00FEE5  4260               	dw	16992
   117  00FEE7  0DA2               	dw	3490
   118  00FEE9                     __end_of__npowers_:
   119                           	opt stack 0
   120  00FEE9                     __powers_:
   121                           	opt stack 0
   122  00FEE9  0000               	dw	0
   123  00FEEB  3F80               	dw	16256
   124  00FEED  0000               	dw	0
   125  00FEEF  4120               	dw	16672
   126  00FEF1  0000               	dw	0
   127  00FEF3  42C8               	dw	17096
   128  00FEF5  0000               	dw	0
   129  00FEF7  447A               	dw	17530
   130  00FEF9  4000               	dw	16384
   131  00FEFB  461C               	dw	17948
   132  00FEFD  5000               	dw	20480
   133  00FEFF  47C3               	dw	18371
   134  00FF01  2400               	dw	9216
   135  00FF03  4974               	dw	18804
   136  00FF05  9680               	dw	38528
   137  00FF07  4B18               	dw	19224
   138  00FF09  BC20               	dw	48160
   139  00FF0B  4CBE               	dw	19646
   140  00FF0D  6B28               	dw	27432
   141  00FF0F  4E6E               	dw	20078
   142  00FF11  02F9               	dw	761
   143  00FF13  5015               	dw	20501
   144  00FF15  78EC               	dw	30956
   145  00FF17  60AD               	dw	24749
   146  00FF19  F2CA               	dw	62154
   147  00FF1B  7149               	dw	29001
   148  00FF1D                     __end_of__powers_:
   149                           	opt stack 0
   150  00FF1D                     _dpowers:
   151                           	opt stack 0
   152  00FF1D  0001               	dw	1
   153  00FF1F  0000               	dw	0
   154  00FF21  000A               	dw	10
   155  00FF23  0000               	dw	0
   156  00FF25  0064               	dw	100
   157  00FF27  0000               	dw	0
   158  00FF29  03E8               	dw	1000
   159  00FF2B  0000               	dw	0
   160  00FF2D  2710               	dw	10000
   161  00FF2F  0000               	dw	0
   162  00FF31  86A0               	dw	34464
   163  00FF33  0001               	dw	1
   164  00FF35  4240               	dw	16960
   165  00FF37  000F               	dw	15
   166  00FF39  9680               	dw	38528
   167  00FF3B  0098               	dw	152
   168  00FF3D  E100               	dw	57600
   169  00FF3F  05F5               	dw	1525
   170  00FF41  CA00               	dw	51712
   171  00FF43  3B9A               	dw	15258
   172  00FF45                     __end_of_dpowers:
   173                           	opt stack 0
   174  0000                     _RXB1CON	set	3920
   175  0000                     _RXB1CONbits	set	3920
   176  0000                     _RXB1D0	set	3926
   177  0000                     _RXB1D1	set	3927
   178  0000                     _RXB1D2	set	3928
   179  0000                     _RXB1D3	set	3929
   180  0000                     _RXB1D4	set	3930
   181  0000                     _RXB1D5	set	3931
   182  0000                     _RXB1D6	set	3932
   183  0000                     _RXB1D7	set	3933
   184  0000                     _RXB1DLC	set	3925
   185  0000                     _RXB1DLCbits	set	3925
   186  0000                     _RXB1EIDH	set	3923
   187  0000                     _RXB1EIDL	set	3924
   188  0000                     _RXB1SIDH	set	3921
   189  0000                     _RXB1SIDL	set	3922
   190  0000                     _RXB1SIDLbits	set	3922
   191  0000                     _RXF0EIDH	set	3842
   192  0000                     _RXF0EIDL	set	3843
   193  0000                     _RXF0SIDH	set	3840
   194  0000                     _RXF0SIDL	set	3841
   195  0000                     _RXF0SIDLbits	set	3841
   196  0000                     _RXF1EIDH	set	3846
   197  0000                     _RXF1EIDL	set	3847
   198  0000                     _RXF1SIDH	set	3844
   199  0000                     _RXF1SIDL	set	3845
   200  0000                     _RXF1SIDLbits	set	3845
   201  0000                     _RXF2EIDH	set	3850
   202  0000                     _RXF2EIDL	set	3851
   203  0000                     _RXF2SIDH	set	3848
   204  0000                     _RXF2SIDL	set	3849
   205  0000                     _RXF2SIDLbits	set	3849
   206  0000                     _RXF3EIDH	set	3854
   207  0000                     _RXF3EIDL	set	3855
   208  0000                     _RXF3SIDH	set	3852
   209  0000                     _RXF3SIDL	set	3853
   210  0000                     _RXF3SIDLbits	set	3853
   211  0000                     _RXF4EIDH	set	3858
   212  0000                     _RXF4EIDL	set	3859
   213  0000                     _RXF4SIDH	set	3856
   214  0000                     _RXF4SIDL	set	3857
   215  0000                     _RXF4SIDLbits	set	3857
   216  0000                     _RXF5EIDH	set	3862
   217  0000                     _RXF5EIDL	set	3863
   218  0000                     _RXF5SIDH	set	3860
   219  0000                     _RXF5SIDL	set	3861
   220  0000                     _RXF5SIDLbits	set	3861
   221  0000                     _RXM0EIDH	set	3866
   222  0000                     _RXM0EIDL	set	3867
   223  0000                     _RXM0SIDH	set	3864
   224  0000                     _RXM0SIDL	set	3865
   225  0000                     _RXM0SIDLbits	set	3865
   226  0000                     _RXM1EIDH	set	3870
   227  0000                     _RXM1EIDL	set	3871
   228  0000                     _RXM1SIDH	set	3868
   229  0000                     _RXM1SIDL	set	3869
   230  0000                     _RXM1SIDLbits	set	3869
   231  0000                     _TXB0CONbits	set	3904
   232  0000                     _TXB0D0	set	3910
   233  0000                     _TXB0D1	set	3911
   234  0000                     _TXB0D2	set	3912
   235  0000                     _TXB0D3	set	3913
   236  0000                     _TXB0D4	set	3914
   237  0000                     _TXB0D5	set	3915
   238  0000                     _TXB0D6	set	3916
   239  0000                     _TXB0D7	set	3917
   240  0000                     _TXB0DLC	set	3909
   241  0000                     _TXB0DLCbits	set	3909
   242  0000                     _TXB0EIDH	set	3907
   243  0000                     _TXB0EIDL	set	3908
   244  0000                     _TXB0SIDH	set	3905
   245  0000                     _TXB0SIDL	set	3906
   246  0000                     _TXB0SIDLbits	set	3906
   247  0000                     _TXB1CONbits	set	3888
   248  0000                     _TXB1D0	set	3894
   249  0000                     _TXB1D1	set	3895
   250  0000                     _TXB1D2	set	3896
   251  0000                     _TXB1D3	set	3897
   252  0000                     _TXB1D4	set	3898
   253  0000                     _TXB1D5	set	3899
   254  0000                     _TXB1D6	set	3900
   255  0000                     _TXB1D7	set	3901
   256  0000                     _TXB1DLC	set	3893
   257  0000                     _TXB1DLCbits	set	3893
   258  0000                     _TXB1EIDH	set	3891
   259  0000                     _TXB1EIDL	set	3892
   260  0000                     _TXB1SIDH	set	3889
   261  0000                     _TXB1SIDL	set	3890
   262  0000                     _TXB1SIDLbits	set	3890
   263  0000                     _TXB2CONbits	set	3872
   264  0000                     _TXB2D0	set	3878
   265  0000                     _TXB2D1	set	3879
   266  0000                     _TXB2D2	set	3880
   267  0000                     _TXB2D3	set	3881
   268  0000                     _TXB2D4	set	3882
   269  0000                     _TXB2D5	set	3883
   270  0000                     _TXB2D6	set	3884
   271  0000                     _TXB2D7	set	3885
   272  0000                     _TXB2DLC	set	3877
   273  0000                     _TXB2DLCbits	set	3877
   274  0000                     _TXB2EIDH	set	3875
   275  0000                     _TXB2EIDL	set	3876
   276  0000                     _TXB2SIDH	set	3873
   277  0000                     _TXB2SIDL	set	3874
   278  0000                     _TXB2SIDLbits	set	3874
   279  0000                     _ADCON0bits	set	4034
   280  0000                     _ADCON1	set	4033
   281  0000                     _ADCON2bits	set	4032
   282  0000                     _ADRESH	set	4036
   283  0000                     _BRGCON1	set	3952
   284  0000                     _BRGCON2	set	3953
   285  0000                     _BRGCON2bits	set	3953
   286  0000                     _BRGCON3	set	3954
   287  0000                     _BRGCON3bits	set	3954
   288  0000                     _CANCON	set	3951
   289  0000                     _CANCONbits	set	3951
   290  0000                     _CANSTAT	set	3950
   291  0000                     _COMSTATbits	set	3956
   292  0000                     _INTCONbits	set	4082
   293  0000                     _IPR2bits	set	4002
   294  0000                     _IPR3bits	set	4005
   295  0000                     _LATA	set	3977
   296  0000                     _LATB	set	3978
   297  0000                     _LATC	set	3979
   298  0000                     _LATCbits	set	3979
   299  0000                     _LATD	set	3980
   300  0000                     _LATDbits	set	3980
   301  0000                     _LATE	set	3981
   302  0000                     _LATEbits	set	3981
   303  0000                     _PIE2bits	set	4000
   304  0000                     _PIE3bits	set	4003
   305  0000                     _PIR2bits	set	4001
   306  0000                     _PIR3bits	set	4004
   307  0000                     _PORTAbits	set	3968
   308  0000                     _PORTBbits	set	3969
   309  0000                     _PORTDbits	set	3971
   310  0000                     _RCONbits	set	4048
   311  0000                     _RXB0CON	set	3936
   312  0000                     _RXB0CONbits	set	3936
   313  0000                     _RXB0D0	set	3942
   314  0000                     _RXB0D1	set	3943
   315  0000                     _RXB0D2	set	3944
   316  0000                     _RXB0D3	set	3945
   317  0000                     _RXB0D4	set	3946
   318  0000                     _RXB0D5	set	3947
   319  0000                     _RXB0D6	set	3948
   320  0000                     _RXB0D7	set	3949
   321  0000                     _RXB0DLC	set	3941
   322  0000                     _RXB0DLCbits	set	3941
   323  0000                     _RXB0EIDH	set	3939
   324  0000                     _RXB0EIDL	set	3940
   325  0000                     _RXB0SIDH	set	3937
   326  0000                     _RXB0SIDL	set	3938
   327  0000                     _RXB0SIDLbits	set	3938
   328  0000                     _RXERRCNT	set	3957
   329  0000                     _T3CON	set	4017
   330  0000                     _TMR3H	set	4019
   331  0000                     _TMR3L	set	4018
   332  0000                     _TRISA	set	3986
   333  0000                     _TRISB	set	3987
   334  0000                     _TRISC	set	3988
   335  0000                     _TRISD	set	3989
   336  0000                     _TRISE	set	3990
   337  0000                     _TXERRCNT	set	3958
   338  00FF45                     STR_3:
   339  00FF45  20                 	db	32
   340  00FF46  20                 	db	32
   341  00FF47  50                 	db	80	;'P'
   342  00FF48  72                 	db	114	;'r'
   343  00FF49  65                 	db	101	;'e'
   344  00FF4A  73                 	db	115	;'s'
   345  00FF4B  73                 	db	115	;'s'
   346  00FF4C  20                 	db	32
   347  00FF4D  74                 	db	116	;'t'
   348  00FF4E  68                 	db	104	;'h'
   349  00FF4F  65                 	db	101	;'e'
   350  00FF50  20                 	db	32
   351  00FF51  62                 	db	98	;'b'
   352  00FF52  75                 	db	117	;'u'
   353  00FF53  74                 	db	116	;'t'
   354  00FF54  74                 	db	116	;'t'
   355  00FF55  6F                 	db	111	;'o'
   356  00FF56  6E                 	db	110	;'n'
   357  00FF57  20                 	db	32
   358  00FF58  20                 	db	32
   359  00FF59  00                 	db	0
   360  00FF5A                     STR_2:
   361  00FF5A  3D                 	db	61	;'='
   362  00FF5B  3D                 	db	61	;'='
   363  00FF5C  3E                 	db	62	;'>'
   364  00FF5D  20                 	db	32
   365  00FF5E  56                 	db	86	;'V'
   366  00FF5F  45                 	db	69	;'E'
   367  00FF60  48                 	db	72	;'H'
   368  00FF61  49                 	db	73	;'I'
   369  00FF62  43                 	db	67	;'C'
   370  00FF63  4C                 	db	76	;'L'
   371  00FF64  45                 	db	69	;'E'
   372  00FF65  20                 	db	32
   373  00FF66  20                 	db	32
   374  00FF67  4F                 	db	79	;'O'
   375  00FF68  46                 	db	70	;'F'
   376  00FF69  46                 	db	70	;'F'
   377  00FF6A  20                 	db	32
   378  00FF6B  3C                 	db	60	;'<'
   379  00FF6C  3D                 	db	61	;'='
   380  00FF6D  3D                 	db	61	;'='
   381  00FF6E  00                 	db	0
   382  00FF6F                     STR_6:
   383  00FF6F  3D                 	db	61	;'='
   384  00FF70  3D                 	db	61	;'='
   385  00FF71  3D                 	db	61	;'='
   386  00FF72  20                 	db	32
   387  00FF73  56                 	db	86	;'V'
   388  00FF74  45                 	db	69	;'E'
   389  00FF75  48                 	db	72	;'H'
   390  00FF76  49                 	db	73	;'I'
   391  00FF77  43                 	db	67	;'C'
   392  00FF78  4C                 	db	76	;'L'
   393  00FF79  45                 	db	69	;'E'
   394  00FF7A  20                 	db	32
   395  00FF7B  44                 	db	68	;'D'
   396  00FF7C  41                 	db	65	;'A'
   397  00FF7D  54                 	db	84	;'T'
   398  00FF7E  41                 	db	65	;'A'
   399  00FF7F  20                 	db	32
   400  00FF80  3D                 	db	61	;'='
   401  00FF81  3D                 	db	61	;'='
   402  00FF82  3D                 	db	61	;'='
   403  00FF83  00                 	db	0
   404  00FF84                     STR_1:
   405  00FF84  3D                 	db	61	;'='
   406  00FF85  3D                 	db	61	;'='
   407  00FF86  3D                 	db	61	;'='
   408  00FF87  3D                 	db	61	;'='
   409  00FF88  3D                 	db	61	;'='
   410  00FF89  3D                 	db	61	;'='
   411  00FF8A  3D                 	db	61	;'='
   412  00FF8B  3D                 	db	61	;'='
   413  00FF8C  3D                 	db	61	;'='
   414  00FF8D  3D                 	db	61	;'='
   415  00FF8E  3D                 	db	61	;'='
   416  00FF8F  3D                 	db	61	;'='
   417  00FF90  3D                 	db	61	;'='
   418  00FF91  3D                 	db	61	;'='
   419  00FF92  3D                 	db	61	;'='
   420  00FF93  3D                 	db	61	;'='
   421  00FF94  3D                 	db	61	;'='
   422  00FF95  3D                 	db	61	;'='
   423  00FF96  3D                 	db	61	;'='
   424  00FF97  3D                 	db	61	;'='
   425  00FF98  00                 	db	0
   426  00FF99                     STR_8:
   427  00FF99  53                 	db	83	;'S'
   428  00FF9A  70                 	db	112	;'p'
   429  00FF9B  65                 	db	101	;'e'
   430  00FF9C  65                 	db	101	;'e'
   431  00FF9D  64                 	db	100	;'d'
   432  00FF9E  3A                 	db	58	;':'
   433  00FF9F  20                 	db	32
   434  00FFA0  30                 	db	48	;'0'
   435  00FFA1  2E                 	db	46
   436  00FFA2  30                 	db	48	;'0'
   437  00FFA3  30                 	db	48	;'0'
   438  00FFA4  20                 	db	32
   439  00FFA5  4B                 	db	75	;'K'
   440  00FFA6  6D                 	db	109	;'m'
   441  00FFA7  2F                 	db	47
   442  00FFA8  68                 	db	104	;'h'
   443  00FFA9  00                 	db	0
   444  00FFAA                     STR_9:
   445  00FFAA  50                 	db	80	;'P'
   446  00FFAB  61                 	db	97	;'a'
   447  00FFAC  72                 	db	114	;'r'
   448  00FFAD  6B                 	db	107	;'k'
   449  00FFAE  20                 	db	32
   450  00FFAF  61                 	db	97	;'a'
   451  00FFB0  73                 	db	115	;'s'
   452  00FFB1  73                 	db	115	;'s'
   453  00FFB2  69                 	db	105	;'i'
   454  00FFB3  73                 	db	115	;'s'
   455  00FFB4  74                 	db	116	;'t'
   456  00FFB5  3A                 	db	58	;':'
   457  00FFB6  20                 	db	32
   458  00FFB7  00                 	db	0
   459  00FFB8                     STR_7:
   460  00FFB8  44                 	db	68	;'D'
   461  00FFB9  69                 	db	105	;'i'
   462  00FFBA  72                 	db	114	;'r'
   463  00FFBB  65                 	db	101	;'e'
   464  00FFBC  63                 	db	99	;'c'
   465  00FFBD  74                 	db	116	;'t'
   466  00FFBE  69                 	db	105	;'i'
   467  00FFBF  6F                 	db	111	;'o'
   468  00FFC0  6E                 	db	110	;'n'
   469  00FFC1  3A                 	db	58	;':'
   470  00FFC2  20                 	db	32
   471  00FFC3  00                 	db	0
   472  00FFC4                     STR_14:
   473  00FFC4  4F                 	db	79	;'O'
   474  00FFC5  46                 	db	70	;'F'
   475  00FFC6  46                 	db	70	;'F'
   476  00FFC7  20                 	db	32
   477  00FFC8  20                 	db	32
   478  00FFC9  20                 	db	32
   479  00FFCA  20                 	db	32
   480  00FFCB  00                 	db	0
   481  00FFCC                     STR_16:
   482  00FFCC  46                 	db	70	;'F'
   483  00FFCD  4F                 	db	79	;'O'
   484  00FFCE  55                 	db	85	;'U'
   485  00FFCF  4E                 	db	78	;'N'
   486  00FFD0  44                 	db	68	;'D'
   487  00FFD1  21                 	db	33
   488  00FFD2  20                 	db	32
   489  00FFD3  00                 	db	0
   490  00FFD4                     STR_15:
   491  00FFD4  53                 	db	83	;'S'
   492  00FFD5  45                 	db	69	;'E'
   493  00FFD6  41                 	db	65	;'A'
   494  00FFD7  52                 	db	82	;'R'
   495  00FFD8  43                 	db	67	;'C'
   496  00FFD9  48                 	db	72	;'H'
   497  00FFDA  20                 	db	32
   498  00FFDB  00                 	db	0
   499  00FFDC                     STR_17:
   500  00FFDC  50                 	db	80	;'P'
   501  00FFDD  41                 	db	65	;'A'
   502  00FFDE  52                 	db	82	;'R'
   503  00FFDF  4B                 	db	75	;'K'
   504  00FFE0  49                 	db	73	;'I'
   505  00FFE1  4E                 	db	78	;'N'
   506  00FFE2  47                 	db	71	;'G'
   507  00FFE3  00                 	db	0
   508  00FFE4                     STR_10:
   509  00FFE4  44                 	db	68	;'D'
   510  00FFE5  61                 	db	97	;'a'
   511  00FFE6  74                 	db	116	;'t'
   512  00FFE7  61                 	db	97	;'a'
   513  00FFE8  3A                 	db	58	;':'
   514  00FFE9  20                 	db	32
   515  00FFEA  00                 	db	0
   516  00FFEB                     STR_13:
   517  00FFEB  50                 	db	80	;'P'
   518  00FFEC  20                 	db	32
   519  00FFED  20                 	db	32
   520  00FFEE  20                 	db	32
   521  00FFEF  00                 	db	0
   522  00FFF0                     STR_11:
   523  00FFF0  46                 	db	70	;'F'
   524  00FFF1  57                 	db	87	;'W'
   525  00FFF2  44                 	db	68	;'D'
   526  00FFF3  20                 	db	32
   527  00FFF4  00                 	db	0
   528  00FFF5                     STR_12:
   529  00FFF5  42                 	db	66	;'B'
   530  00FFF6  4B                 	db	75	;'K'
   531  00FFF7  57                 	db	87	;'W'
   532  00FFF8  44                 	db	68	;'D'
   533  00FFF9  00                 	db	0
   534  00FFFA                     STR_5:
   535  00FFFA  25                 	db	37
   536  00FFFB  2E                 	db	46
   537  00FFFC  32                 	db	50	;'2'
   538  00FFFD  66                 	db	102	;'f'
   539  00FFFE  00                 	db	0
   540  0000                     
   541                           ; #config settings
   542  00FFFF  00                 	db	0	; dummy byte at the end
   543  0000                     
   544                           	psect	cinit
   545  015E80                     __pcinit:
   546                           	opt stack 0
   547  015E80                     start_initialization:
   548                           	opt stack 0
   549  015E80                     __initialization:
   550                           	opt stack 0
   551                           
   552                           ; Clear objects allocated to BANK1 (41 bytes)
   553  015E80  EE01  F000         	lfsr	0,__pbssBANK1
   554  015E84  0E29               	movlw	41
   555  015E86                     clear_0:
   556  015E86  6AEE               	clrf	postinc0,c
   557  015E88  06E8               	decf	wreg,f,c
   558  015E8A  E1FD               	bnz	clear_0
   559                           
   560                           ; Clear objects allocated to BANK0 (32 bytes)
   561  015E8C  EE00  F0CC         	lfsr	0,__pbssBANK0
   562  015E90  0E20               	movlw	32
   563  015E92                     clear_1:
   564  015E92  6AEE               	clrf	postinc0,c
   565  015E94  06E8               	decf	wreg,f,c
   566  015E96  E1FD               	bnz	clear_1
   567                           
   568                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   569  015E98  6A4C               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   570  015E9A  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   571                           
   572                           ; Clear objects allocated to COMRAM (40 bytes)
   573  015E9C  EE00  F001         	lfsr	0,__pbssCOMRAM
   574  015EA0  0E28               	movlw	40
   575  015EA2                     clear_2:
   576  015EA2  6AEE               	clrf	postinc0,c
   577  015EA4  06E8               	decf	wreg,f,c
   578  015EA6  E1FD               	bnz	clear_2
   579                           
   580                           ; Initialize objects allocated to BANK0 (1 bytes)
   581                           ; load TBLPTR registers with __pidataBANK0
   582  015EA8  0E98               	movlw	low __pidataBANK0
   583  015EAA  6EF6               	movwf	tblptrl,c
   584  015EAC  0E61               	movlw	high __pidataBANK0
   585  015EAE  6EF7               	movwf	tblptrh,c
   586  015EB0  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   587  015EB2  6EF8               	movwf	tblptru,c
   588  015EB4  0009               	tblrd		*+	;fetch initializer
   589  015EB6  CFF5 F0EC          	movff	tablat,__pdataBANK0
   590  015EBA                     end_of_initialization:
   591                           	opt stack 0
   592  015EBA                     __end_of__initialization:
   593                           	opt stack 0
   594  015EBA  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   595  015EBC  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   596  015EBE  0100               	movlb	0
   597  015EC0  EFDB  F090         	goto	_main	;jump to C main() function
   598                           tblptru	equ	0xFF8
   599                           tblptrh	equ	0xFF7
   600                           tblptrl	equ	0xFF6
   601                           tablat	equ	0xFF5
   602                           postinc0	equ	0xFEE
   603                           wreg	equ	0xFE8
   604                           
   605                           	psect	bitbssCOMRAM
   606  000258                     __pbitbssCOMRAM:
   607                           	opt stack 0
   608  000258                     _AbsFlag:
   609                           	opt stack 0
   610  000258                     	ds	1
   611  000259                     _F1_switch:
   612                           	opt stack 0
   613  000259                     	ds	1
   614  00025A                     _F2_switch:
   615                           	opt stack 0
   616  00025A                     	ds	1
   617  00025B                     _MotoreFlag:
   618                           	opt stack 0
   619  00025B                     	ds	1
   620  00025C                     _RTR_Flag:
   621                           	opt stack 0
   622  00025C                     	ds	1
   623  00025D                     _SterzoFlag:
   624                           	opt stack 0
   625  00025D                     	ds	1
   626  00025E                     _display_refresh:
   627                           	opt stack 0
   628  00025E                     	ds	1
   629  00025F                     _newMessageCan:
   630                           	opt stack 0
   631  00025F                     	ds	1
   632  000260                     _power_switch:
   633                           	opt stack 0
   634  000260                     	ds	1
   635  000261                     _space_available:
   636                           	opt stack 0
   637  000261                     	ds	1
   638  000262                     _wait_low_1:
   639                           	opt stack 0
   640  000262                     	ds	1
   641  000263                     _wait_low_2:
   642                           	opt stack 0
   643  000263                     	ds	1
   644  000264                     _wait_low_3:
   645                           	opt stack 0
   646  000264                     	ds	1
   647  000265                     _y:
   648                           	opt stack 0
   649  000265                     	ds	1
   650                           tblptru	equ	0xFF8
   651                           tblptrh	equ	0xFF7
   652                           tblptrl	equ	0xFF6
   653                           tablat	equ	0xFF5
   654                           postinc0	equ	0xFEE
   655                           wreg	equ	0xFE8
   656                           
   657                           	psect	bssCOMRAM
   658  000001                     __pbssCOMRAM:
   659                           	opt stack 0
   660  000001                     _data_speed_rx:
   661                           	opt stack 0
   662  000001                     	ds	7
   663  000008                     _actual_speed_kmh:
   664                           	opt stack 0
   665  000008                     	ds	4
   666  00000C                     _id:
   667                           	opt stack 0
   668  00000C                     	ds	4
   669  000010                     _pr_time_3:
   670                           	opt stack 0
   671  000010                     	ds	4
   672  000014                     _pr_time_4:
   673                           	opt stack 0
   674  000014                     	ds	4
   675  000018                     _pr_time_5:
   676                           	opt stack 0
   677  000018                     	ds	4
   678  00001C                     _time_counter:
   679                           	opt stack 0
   680  00001C                     	ds	4
   681  000020                     _left_speed:
   682                           	opt stack 0
   683  000020                     	ds	2
   684  000022                     _right_speed:
   685                           	opt stack 0
   686  000022                     	ds	2
   687  000024                     _user_data:
   688                           	opt stack 0
   689  000024                     	ds	2
   690  000026                     _battery:
   691                           	opt stack 0
   692  000026                     	ds	1
   693  000027                     _set_steering:
   694                           	opt stack 0
   695  000027                     	ds	1
   696  000028                     _data:
   697                           	opt stack 0
   698  000028                     	ds	1
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           tblptrl	equ	0xFF6
   702                           tablat	equ	0xFF5
   703                           postinc0	equ	0xFEE
   704                           wreg	equ	0xFE8
   705                           
   706                           	psect	bssBANK0
   707  0000CC                     __pbssBANK0:
   708                           	opt stack 0
   709  0000CC                     _JoystickConstants:
   710                           	opt stack 0
   711  0000CC                     	ds	8
   712  0000D4                     _pr_time_1:
   713                           	opt stack 0
   714  0000D4                     	ds	4
   715  0000D8                     _pr_time_2:
   716                           	opt stack 0
   717  0000D8                     	ds	4
   718  0000DC                     _JoystickValues:
   719                           	opt stack 0
   720  0000DC                     	ds	2
   721  0000DE                     _actual_speed:
   722                           	opt stack 0
   723  0000DE                     	ds	2
   724  0000E0                     _clock_counter_reference:
   725                           	opt stack 0
   726  0000E0                     	ds	2
   727  0000E2                     _set_speed:
   728                           	opt stack 0
   729  0000E2                     	ds	2
   730  0000E4                     _dir:
   731                           	opt stack 0
   732  0000E4                     	ds	1
   733  0000E5                     _parking_state:
   734                           	opt stack 0
   735  0000E5                     	ds	1
   736  0000E6                     _switch_position:
   737                           	opt stack 0
   738  0000E6                     	ds	1
   739  0000E7                     _x:
   740                           	opt stack 0
   741  0000E7                     	ds	1
   742  0000E8                     _z:
   743                           	opt stack 0
   744  0000E8                     	ds	1
   745  0000E9                     _data_brake:
   746                           	opt stack 0
   747  0000E9                     	ds	1
   748  0000EA                     _data_speed:
   749                           	opt stack 0
   750  0000EA                     	ds	1
   751  0000EB                     _data_steering:
   752                           	opt stack 0
   753  0000EB                     	ds	1
   754                           tblptru	equ	0xFF8
   755                           tblptrh	equ	0xFF7
   756                           tblptrl	equ	0xFF6
   757                           tablat	equ	0xFF5
   758                           postinc0	equ	0xFEE
   759                           wreg	equ	0xFE8
   760                           
   761                           	psect	dataBANK0
   762  0000EC                     __pdataBANK0:
   763                           	opt stack 0
   764  0000EC                     _delay_quartz_frequency_value:
   765                           	opt stack 0
   766  0000EC                     	ds	1
   767                           tblptru	equ	0xFF8
   768                           tblptrh	equ	0xFF7
   769                           tblptrl	equ	0xFF6
   770                           tablat	equ	0xFF5
   771                           postinc0	equ	0xFEE
   772                           wreg	equ	0xFE8
   773                           
   774                           	psect	bssBANK1
   775  000100                     __pbssBANK1:
   776                           	opt stack 0
   777  000100                     LCD_write_integer@F17272:
   778                           	opt stack 0
   779  000100                     	ds	6
   780  000106                     _msg:
   781                           	opt stack 0
   782  000106                     	ds	15
   783  000115                     _str:
   784                           	opt stack 0
   785  000115                     	ds	12
   786  000121                     _park_assist_state:
   787                           	opt stack 0
   788  000121                     	ds	8
   789                           tblptru	equ	0xFF8
   790                           tblptrh	equ	0xFF7
   791                           tblptrl	equ	0xFF6
   792                           tablat	equ	0xFF5
   793                           postinc0	equ	0xFEE
   794                           wreg	equ	0xFE8
   795                           
   796                           	psect	cstackBANK1
   797  000129                     __pcstackBANK1:
   798                           	opt stack 0
   799  000129                     _sprintf$4220:
   800                           	opt stack 0
   801                           
   802                           ; 4 bytes @ 0x0
   803  000129                     	ds	4
   804  00012D                     sprintf@ap:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x4
   808  00012D                     	ds	2
   809  00012F                     sprintf@flag:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x6
   813  00012F                     	ds	2
   814  000131                     sprintf@val:
   815                           	opt stack 0
   816                           
   817                           ; 4 bytes @ 0x8
   818  000131                     	ds	4
   819  000135                     sprintf@exp:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0xC
   823  000135                     	ds	2
   824  000137                     sprintf@tmpval:
   825                           	opt stack 0
   826                           
   827                           ; 4 bytes @ 0xE
   828  000137                     	ds	4
   829  00013B                     sprintf@prec:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x12
   833  00013B                     	ds	2
   834  00013D                     sprintf@fval:
   835                           	opt stack 0
   836                           
   837                           ; 4 bytes @ 0x14
   838  00013D                     	ds	4
   839  000141                     sprintf@c:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x18
   843  000141                     	ds	1
   844  000142                     ??_main:
   845                           
   846                           ; 0 bytes @ 0x19
   847  000142                     	ds	8
   848                           tblptru	equ	0xFF8
   849                           tblptrh	equ	0xFF7
   850                           tblptrl	equ	0xFF6
   851                           tablat	equ	0xFF5
   852                           postinc0	equ	0xFEE
   853                           wreg	equ	0xFE8
   854                           
   855                           	psect	cstackBANK0
   856  000060                     __pcstackBANK0:
   857                           	opt stack 0
   858  000060                     ??_ISR_alta:
   859                           
   860                           ; 0 bytes @ 0x0
   861  000060                     	ds	16
   862  000070                     ??_Joystick_Polling:
   863  000070                     ??_CAN_interpreter:
   864  000070                     ??_isdigit:
   865  000070                     ?___wmul:
   866                           	opt stack 0
   867  000070                     ?___awmod:
   868                           	opt stack 0
   869  000070                     ?___lwdiv:
   870                           	opt stack 0
   871  000070                     ?___lwmod:
   872                           	opt stack 0
   873  000070                     ?__tdiv_to_l_:
   874                           	opt stack 0
   875  000070                     ?__div_to_l_:
   876                           	opt stack 0
   877  000070                     ?___lldiv:
   878                           	opt stack 0
   879  000070                     ?___llmod:
   880                           	opt stack 0
   881  000070                     ?___xxtofl:
   882                           	opt stack 0
   883  000070                     CANOperationMode@mode:
   884                           	opt stack 0
   885  000070                     _CANisTxReady$3235:
   886                           	opt stack 0
   887  000070                     delay_set_quartz@frequency:
   888                           	opt stack 0
   889  000070                     ___wmul@multiplier:
   890                           	opt stack 0
   891  000070                     ___awmod@dividend:
   892                           	opt stack 0
   893  000070                     ___lwdiv@dividend:
   894                           	opt stack 0
   895  000070                     ___lwmod@dividend:
   896                           	opt stack 0
   897  000070                     CANsendMessage@identifier:
   898                           	opt stack 0
   899  000070                     CANSetMask@mask:
   900                           	opt stack 0
   901  000070                     CANSetFilter@filter:
   902                           	opt stack 0
   903  000070                     __div_to_l_@f1:
   904                           	opt stack 0
   905  000070                     ___flge@ff1:
   906                           	opt stack 0
   907  000070                     __tdiv_to_l_@f1:
   908                           	opt stack 0
   909  000070                     ___lldiv@dividend:
   910                           	opt stack 0
   911  000070                     ___llmod@dividend:
   912                           	opt stack 0
   913  000070                     ___xxtofl@val:
   914                           	opt stack 0
   915                           
   916                           ; 4 bytes @ 0x10
   917  000070                     	ds	1
   918  000071                     Joystick_Polling@i:
   919                           	opt stack 0
   920  000071                     _isdigit$3800:
   921                           	opt stack 0
   922                           
   923                           ; 1 bytes @ 0x11
   924  000071                     	ds	1
   925  000072                     isdigit@c:
   926                           	opt stack 0
   927  000072                     ___wmul@multiplicand:
   928                           	opt stack 0
   929  000072                     ___awmod@divisor:
   930                           	opt stack 0
   931  000072                     ___lwdiv@divisor:
   932                           	opt stack 0
   933  000072                     ___lwmod@divisor:
   934                           	opt stack 0
   935                           
   936                           ; 2 bytes @ 0x12
   937  000072                     	ds	2
   938  000074                     ??___xxtofl:
   939  000074                     CANSetMask@type:
   940                           	opt stack 0
   941  000074                     CANSetFilter@type:
   942                           	opt stack 0
   943  000074                     ___awmod@counter:
   944                           	opt stack 0
   945  000074                     ___lwmod@counter:
   946                           	opt stack 0
   947  000074                     CANsendMessage@data:
   948                           	opt stack 0
   949  000074                     ___wmul@product:
   950                           	opt stack 0
   951  000074                     ___lwdiv@quotient:
   952                           	opt stack 0
   953  000074                     __div_to_l_@f2:
   954                           	opt stack 0
   955  000074                     ___flge@ff2:
   956                           	opt stack 0
   957  000074                     __tdiv_to_l_@f2:
   958                           	opt stack 0
   959  000074                     ___lldiv@divisor:
   960                           	opt stack 0
   961  000074                     ___llmod@divisor:
   962                           	opt stack 0
   963                           
   964                           ; 4 bytes @ 0x14
   965  000074                     	ds	1
   966  000075                     ??_CANSetMask:
   967  000075                     ??_CANSetFilter:
   968  000075                     ___awmod@sign:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x15
   972  000075                     	ds	1
   973  000076                     ?___awdiv:
   974                           	opt stack 0
   975  000076                     CANsendMessage@dataLength:
   976                           	opt stack 0
   977  000076                     ___lwdiv@counter:
   978                           	opt stack 0
   979  000076                     delay_ms@value_ms:
   980                           	opt stack 0
   981  000076                     ___awdiv@dividend:
   982                           	opt stack 0
   983                           
   984                           ; 2 bytes @ 0x16
   985  000076                     	ds	1
   986  000077                     CANsendMessage@flags:
   987                           	opt stack 0
   988  000077                     utoa@buf:
   989                           	opt stack 0
   990                           
   991                           ; 2 bytes @ 0x17
   992  000077                     	ds	1
   993  000078                     ??__tdiv_to_l_:
   994  000078                     ??_CANsendMessage:
   995  000078                     ??___flge:
   996  000078                     LCD_send_command@D2:
   997                           	opt stack 0
   998  000078                     ___llmod@counter:
   999                           	opt stack 0
  1000  000078                     ___xxtofl@sign:
  1001                           	opt stack 0
  1002  000078                     ___awdiv@divisor:
  1003                           	opt stack 0
  1004  000078                     __div_to_l_@quot:
  1005                           	opt stack 0
  1006  000078                     ___lldiv@quotient:
  1007                           	opt stack 0
  1008                           
  1009                           ; 4 bytes @ 0x18
  1010  000078                     	ds	1
  1011  000079                     CANSetMask@numBuffer:
  1012                           	opt stack 0
  1013  000079                     CANSetFilter@numBuffer:
  1014                           	opt stack 0
  1015  000079                     LCD_send_command@D1:
  1016                           	opt stack 0
  1017  000079                     ___xxtofl@exp:
  1018                           	opt stack 0
  1019  000079                     utoa@val:
  1020                           	opt stack 0
  1021                           
  1022                           ; 2 bytes @ 0x19
  1023  000079                     	ds	1
  1024  00007A                     LCD_send_command@D0:
  1025                           	opt stack 0
  1026  00007A                     ___awdiv@counter:
  1027                           	opt stack 0
  1028  00007A                     CANSetMask@tamp:
  1029                           	opt stack 0
  1030  00007A                     CANSetFilter@tamp:
  1031                           	opt stack 0
  1032  00007A                     ___xxtofl@arg:
  1033                           	opt stack 0
  1034                           
  1035                           ; 4 bytes @ 0x1A
  1036  00007A                     	ds	1
  1037  00007B                     LCD_send_command@D3:
  1038                           	opt stack 0
  1039  00007B                     ___awdiv@sign:
  1040                           	opt stack 0
  1041  00007B                     utoa@base:
  1042                           	opt stack 0
  1043  00007B                     __tdiv_to_l_@quot:
  1044                           	opt stack 0
  1045                           
  1046                           ; 4 bytes @ 0x1B
  1047  00007B                     	ds	1
  1048  00007C                     LCD_shift_cursor@number_of_shift:
  1049                           	opt stack 0
  1050  00007C                     LCD_goto_line@line:
  1051                           	opt stack 0
  1052  00007C                     LCD_write_char@D3:
  1053                           	opt stack 0
  1054  00007C                     LCD_cursor@blinking:
  1055                           	opt stack 0
  1056  00007C                     __div_to_l_@cntr:
  1057                           	opt stack 0
  1058  00007C                     ___lldiv@counter:
  1059                           	opt stack 0
  1060  00007C                     ___awdiv@quotient:
  1061                           	opt stack 0
  1062  00007C                     CANsendMessage@tamp:
  1063                           	opt stack 0
  1064                           
  1065                           ; 4 bytes @ 0x1C
  1066  00007C                     	ds	1
  1067  00007D                     LCD_shift_cursor@shift:
  1068                           	opt stack 0
  1069  00007D                     LCD_write_char@D2:
  1070                           	opt stack 0
  1071  00007D                     LCD_cursor@active:
  1072                           	opt stack 0
  1073  00007D                     __div_to_l_@exp1:
  1074                           	opt stack 0
  1075  00007D                     utoa@v:
  1076                           	opt stack 0
  1077                           
  1078                           ; 2 bytes @ 0x1D
  1079  00007D                     	ds	1
  1080  00007E                     ?___fldiv:
  1081                           	opt stack 0
  1082  00007E                     ?___flmul:
  1083                           	opt stack 0
  1084  00007E                     CANInitialize@phaseSeg1:
  1085                           	opt stack 0
  1086  00007E                     LCD_shift_cursor@i:
  1087                           	opt stack 0
  1088  00007E                     LCD_write_char@D1:
  1089                           	opt stack 0
  1090  00007E                     LCD_initialize@quartz_frequency:
  1091                           	opt stack 0
  1092  00007E                     ___fldiv@b:
  1093                           	opt stack 0
  1094  00007E                     ___flmul@b:
  1095                           	opt stack 0
  1096                           
  1097                           ; 4 bytes @ 0x1E
  1098  00007E                     	ds	1
  1099  00007F                     CANInitialize@phaseSeg2:
  1100                           	opt stack 0
  1101  00007F                     LCD_goto_xy@y:
  1102                           	opt stack 0
  1103  00007F                     LCD_write_char@D0:
  1104                           	opt stack 0
  1105  00007F                     __tdiv_to_l_@cntr:
  1106                           	opt stack 0
  1107  00007F                     utoa@c:
  1108                           	opt stack 0
  1109                           
  1110                           ; 1 bytes @ 0x1F
  1111  00007F                     	ds	1
  1112  000080                     CANInitialize@SJW:
  1113                           	opt stack 0
  1114  000080                     LCD_goto_xy@x:
  1115                           	opt stack 0
  1116  000080                     LCD_write_char@value:
  1117                           	opt stack 0
  1118  000080                     __tdiv_to_l_@exp1:
  1119                           	opt stack 0
  1120  000080                     itoa@buf:
  1121                           	opt stack 0
  1122                           
  1123                           ; 2 bytes @ 0x20
  1124  000080                     	ds	1
  1125  000081                     CANInitialize@BRP:
  1126                           	opt stack 0
  1127  000081                     LCD_write_message@buffer:
  1128                           	opt stack 0
  1129  000081                     LCD_write_string@buffer:
  1130                           	opt stack 0
  1131                           
  1132                           ; 2 bytes @ 0x21
  1133  000081                     	ds	1
  1134  000082                     CANInitialize@flags:
  1135                           	opt stack 0
  1136  000082                     itoa@val:
  1137                           	opt stack 0
  1138  000082                     ___fldiv@a:
  1139                           	opt stack 0
  1140  000082                     ___flmul@a:
  1141                           	opt stack 0
  1142                           
  1143                           ; 4 bytes @ 0x22
  1144  000082                     	ds	1
  1145  000083                     ??_CANInitialize:
  1146  000083                     
  1147                           ; 0 bytes @ 0x23
  1148  000083                     	ds	1
  1149  000084                     itoa@base:
  1150                           	opt stack 0
  1151                           
  1152                           ; 2 bytes @ 0x24
  1153  000084                     	ds	2
  1154  000086                     ??___fldiv:
  1155  000086                     ??___flmul:
  1156  000086                     itoa@cp:
  1157                           	opt stack 0
  1158                           
  1159                           ; 2 bytes @ 0x26
  1160  000086                     	ds	1
  1161  000087                     CANInitialize@propSeg:
  1162                           	opt stack 0
  1163                           
  1164                           ; 1 bytes @ 0x27
  1165  000087                     	ds	1
  1166  000088                     CANInitialize@FilterConfig1:
  1167                           	opt stack 0
  1168  000088                     LCD_write_integer@value:
  1169                           	opt stack 0
  1170                           
  1171                           ; 2 bytes @ 0x28
  1172  000088                     	ds	1
  1173  000089                     CANInitialize@FilterConfig2:
  1174                           	opt stack 0
  1175                           
  1176                           ; 1 bytes @ 0x29
  1177  000089                     	ds	1
  1178  00008A                     LCD_write_integer@number_of_digits:
  1179                           	opt stack 0
  1180  00008A                     ___fldiv@sign:
  1181                           	opt stack 0
  1182  00008A                     ___flmul@sign:
  1183                           	opt stack 0
  1184                           
  1185                           ; 1 bytes @ 0x2A
  1186  00008A                     	ds	1
  1187  00008B                     LCD_write_integer@zero_cleaning:
  1188                           	opt stack 0
  1189  00008B                     ___flmul@aexp:
  1190                           	opt stack 0
  1191  00008B                     ___fldiv@rem:
  1192                           	opt stack 0
  1193                           
  1194                           ; 4 bytes @ 0x2B
  1195  00008B                     	ds	1
  1196  00008C                     ??_LCD_write_integer:
  1197  00008C                     ___flmul@grs:
  1198                           	opt stack 0
  1199                           
  1200                           ; 4 bytes @ 0x2C
  1201  00008C                     	ds	3
  1202  00008F                     ___fldiv@new_exp:
  1203                           	opt stack 0
  1204                           
  1205                           ; 2 bytes @ 0x2F
  1206  00008F                     	ds	1
  1207  000090                     ___flmul@bexp:
  1208                           	opt stack 0
  1209                           
  1210                           ; 1 bytes @ 0x30
  1211  000090                     	ds	1
  1212  000091                     ___fldiv@grs:
  1213                           	opt stack 0
  1214  000091                     ___flmul@prod:
  1215                           	opt stack 0
  1216  000091                     LCD_write_integer@convertedInt:
  1217                           	opt stack 0
  1218                           
  1219                           ; 6 bytes @ 0x31
  1220  000091                     	ds	4
  1221  000095                     ___fldiv@bexp:
  1222                           	opt stack 0
  1223  000095                     ___flmul@temp:
  1224                           	opt stack 0
  1225                           
  1226                           ; 2 bytes @ 0x35
  1227  000095                     	ds	1
  1228  000096                     ___fldiv@aexp:
  1229                           	opt stack 0
  1230                           
  1231                           ; 1 bytes @ 0x36
  1232  000096                     	ds	1
  1233  000097                     ?_fround:
  1234                           	opt stack 0
  1235  000097                     ?_scale:
  1236                           	opt stack 0
  1237  000097                     ?___flneg:
  1238                           	opt stack 0
  1239  000097                     LCD_write_integer@index:
  1240                           	opt stack 0
  1241  000097                     ___flneg@f1:
  1242                           	opt stack 0
  1243                           
  1244                           ; 4 bytes @ 0x37
  1245  000097                     	ds	4
  1246  00009B                     _fround$4218:
  1247                           	opt stack 0
  1248  00009B                     _scale$4219:
  1249                           	opt stack 0
  1250                           
  1251                           ; 4 bytes @ 0x3B
  1252  00009B                     	ds	4
  1253  00009F                     scale@scl:
  1254                           	opt stack 0
  1255  00009F                     _fround$4217:
  1256                           	opt stack 0
  1257                           
  1258                           ; 4 bytes @ 0x3F
  1259  00009F                     	ds	4
  1260  0000A3                     fround@prec:
  1261                           	opt stack 0
  1262                           
  1263                           ; 1 bytes @ 0x43
  1264  0000A3                     	ds	1
  1265  0000A4                     ?___fladd:
  1266                           	opt stack 0
  1267  0000A4                     ___fladd@b:
  1268                           	opt stack 0
  1269                           
  1270                           ; 4 bytes @ 0x44
  1271  0000A4                     	ds	4
  1272  0000A8                     ___fladd@a:
  1273                           	opt stack 0
  1274                           
  1275                           ; 4 bytes @ 0x48
  1276  0000A8                     	ds	4
  1277  0000AC                     ??___fladd:
  1278                           
  1279                           ; 0 bytes @ 0x4C
  1280  0000AC                     	ds	8
  1281  0000B4                     ___fladd@signs:
  1282                           	opt stack 0
  1283                           
  1284                           ; 1 bytes @ 0x54
  1285  0000B4                     	ds	1
  1286  0000B5                     ___fladd@aexp:
  1287                           	opt stack 0
  1288                           
  1289                           ; 1 bytes @ 0x55
  1290  0000B5                     	ds	1
  1291  0000B6                     ___fladd@bexp:
  1292                           	opt stack 0
  1293                           
  1294                           ; 1 bytes @ 0x56
  1295  0000B6                     	ds	1
  1296  0000B7                     ___fladd@grs:
  1297                           	opt stack 0
  1298                           
  1299                           ; 1 bytes @ 0x57
  1300  0000B7                     	ds	1
  1301  0000B8                     ?___flsub:
  1302                           	opt stack 0
  1303  0000B8                     ?___fltol:
  1304                           	opt stack 0
  1305  0000B8                     ___fltol@f1:
  1306                           	opt stack 0
  1307  0000B8                     ___flsub@b:
  1308                           	opt stack 0
  1309                           
  1310                           ; 4 bytes @ 0x58
  1311  0000B8                     	ds	4
  1312  0000BC                     ??___fltol:
  1313  0000BC                     ___flsub@a:
  1314                           	opt stack 0
  1315                           
  1316                           ; 4 bytes @ 0x5C
  1317  0000BC                     	ds	4
  1318  0000C0                     ___fltol@sign1:
  1319                           	opt stack 0
  1320                           
  1321                           ; 1 bytes @ 0x60
  1322  0000C0                     	ds	1
  1323  0000C1                     ___fltol@exp1:
  1324                           	opt stack 0
  1325                           
  1326                           ; 1 bytes @ 0x61
  1327  0000C1                     	ds	1
  1328  0000C2                     ?_sprintf:
  1329                           	opt stack 0
  1330  0000C2                     sprintf@sp:
  1331                           	opt stack 0
  1332                           
  1333                           ; 2 bytes @ 0x62
  1334  0000C2                     	ds	2
  1335  0000C4                     sprintf@f:
  1336                           	opt stack 0
  1337                           
  1338                           ; 2 bytes @ 0x64
  1339  0000C4                     	ds	6
  1340  0000CA                     ??_sprintf:
  1341                           
  1342                           ; 0 bytes @ 0x6A
  1343  0000CA                     	ds	2
  1344  0000CC                     tblptru	equ	0xFF8
  1345                           tblptrh	equ	0xFF7
  1346                           tblptrl	equ	0xFF6
  1347                           tablat	equ	0xFF5
  1348                           postinc0	equ	0xFEE
  1349                           wreg	equ	0xFE8
  1350                           
  1351                           ; 0 bytes @ 0x6C
  1352                           
  1353                           	psect	cstackCOMRAM
  1354  000029                     __pcstackCOMRAM:
  1355                           	opt stack 0
  1356  000029                     ??_ISR_bassa:
  1357  000029                     
  1358                           ; 1 bytes @ 0x0
  1359  000029                     	ds	17
  1360  00003A                     _CANisRxReady$3237:
  1361                           	opt stack 0
  1362  00003A                     i2_CANisTxReady$3235:
  1363                           	opt stack 0
  1364  00003A                     CANreceiveMessage@msg:
  1365                           	opt stack 0
  1366  00003A                     i2CANsendMessage@identifier:
  1367                           	opt stack 0
  1368                           
  1369                           ; 4 bytes @ 0x11
  1370  00003A                     	ds	2
  1371  00003C                     ??_CANreceiveMessage:
  1372                           
  1373                           ; 0 bytes @ 0x13
  1374  00003C                     	ds	2
  1375  00003E                     i2CANsendMessage@data:
  1376                           	opt stack 0
  1377                           
  1378                           ; 2 bytes @ 0x15
  1379  00003E                     	ds	2
  1380  000040                     i2CANsendMessage@dataLength:
  1381                           	opt stack 0
  1382                           
  1383                           ; 1 bytes @ 0x17
  1384  000040                     	ds	1
  1385  000041                     i2CANsendMessage@flags:
  1386                           	opt stack 0
  1387                           
  1388                           ; 1 bytes @ 0x18
  1389  000041                     	ds	1
  1390  000042                     ??i2_CANsendMessage:
  1391                           
  1392                           ; 0 bytes @ 0x19
  1393  000042                     	ds	2
  1394  000044                     CANreceiveMessage@error:
  1395                           	opt stack 0
  1396                           
  1397                           ; 1 bytes @ 0x1B
  1398  000044                     	ds	1
  1399  000045                     CANreceiveMessage@tamp:
  1400                           	opt stack 0
  1401                           
  1402                           ; 1 bytes @ 0x1C
  1403  000045                     	ds	1
  1404  000046                     i2CANsendMessage@tamp:
  1405                           	opt stack 0
  1406                           
  1407                           ; 4 bytes @ 0x1D
  1408  000046                     	ds	4
  1409  00004A                     ISR_alta@i:
  1410                           	opt stack 0
  1411                           
  1412                           ; 1 bytes @ 0x21
  1413  00004A                     	ds	1
  1414                           tblptru	equ	0xFF8
  1415                           tblptrh	equ	0xFF7
  1416                           tblptrl	equ	0xFF6
  1417                           tablat	equ	0xFF5
  1418                           postinc0	equ	0xFEE
  1419                           wreg	equ	0xFE8
  1420                           
  1421 ;;
  1422 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1423 ;;
  1424 ;; *************** function _main *****************
  1425 ;; Defined at:
  1426 ;;		line 162 in file "RemoteCan.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;		None               void
  1433 ;; Registers used:
  1434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1442 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1443 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1444 ;;Total ram usage:        8 bytes
  1445 ;; Hardware stack levels required when called:   11
  1446 ;; This function calls:
  1447 ;;		_CAN_Send
  1448 ;;		_CAN_interpreter
  1449 ;;		_CANisTxReady
  1450 ;;		_CANsendMessage
  1451 ;;		_F1_Button_Polling
  1452 ;;		_F2_Button_Polling
  1453 ;;		_Joystick_Polling
  1454 ;;		_LCD_Handler
  1455 ;;		_LCD_goto_line
  1456 ;;		_LCD_initialize
  1457 ;;		_LCD_write_message
  1458 ;;		_PWR_Button_Polling
  1459 ;;		___fladd
  1460 ;;		___flmul
  1461 ;;		___flneg
  1462 ;;		___fltol
  1463 ;;		___xxtofl
  1464 ;;		_board_initialization
  1465 ;;		_delay_ms
  1466 ;; This function is called by:
  1467 ;;		Startup code after reset
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text0
  1472  0121B6                     __ptext0:
  1473                           	opt stack 0
  1474  0121B6                     _main:
  1475                           	opt stack 20
  1476                           
  1477                           ;RemoteCan.c: 163: board_initialization();
  1478                           
  1479                           ;incstack = 0
  1480  0121B6  EC00  F0AD         	call	_board_initialization	;wreg free
  1481                           
  1482                           ;RemoteCan.c: 171: JoystickConstants[0] = 0.703;
  1483  0121BA  0ECF               	movlw	207
  1484  0121BC  0100               	movlb	0	; () banked
  1485  0121BE  6FCC               	movwf	_JoystickConstants& (0+255),b	;volatile
  1486  0121C0  0EF7               	movlw	247
  1487  0121C2  6FCD               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1488  0121C4  0E33               	movlw	51
  1489  0121C6  6FCE               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1490  0121C8  0E3F               	movlw	63
  1491  0121CA  6FCF               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;RemoteCan.c: 172: JoystickConstants[1] = 10;
  1495  0121CC  0E00               	movlw	0
  1496  0121CE  0100               	movlb	0	; () banked
  1497  0121D0  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1498  0121D2  0E00               	movlw	0
  1499  0121D4  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1500  0121D6  0E20               	movlw	32
  1501  0121D8  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1502  0121DA  0E41               	movlw	65
  1503  0121DC  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;RemoteCan.c: 174: display_refresh = 1;
  1507  0121DE  8C4B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1508  0121E0                     l8914:
  1509                           
  1510                           ;RemoteCan.c: 178: PWR_Button_Polling();
  1511  0121E0  EC79  F0B0         	call	_PWR_Button_Polling	;wreg free
  1512                           
  1513                           ;RemoteCan.c: 179: F1_Button_Polling();
  1514  0121E4  ECA3  F0B0         	call	_F1_Button_Polling	;wreg free
  1515                           
  1516                           ;RemoteCan.c: 180: F2_Button_Polling();
  1517  0121E8  EC95  F0B0         	call	_F2_Button_Polling	;wreg free
  1518                           
  1519                           ;RemoteCan.c: 183: if (power_switch == 0) {
  1520  0121EC  B04C               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1521  0121EE  D09D               	goto	l8960
  1522                           
  1523                           ;RemoteCan.c: 184: dir = 1;
  1524  0121F0  0E01               	movlw	1
  1525  0121F2  0100               	movlb	0	; () banked
  1526  0121F4  6FE4               	movwf	_dir& (0+255),b	;volatile
  1527                           
  1528                           ;RemoteCan.c: 185: set_speed = 0;
  1529  0121F6  0E00               	movlw	0
  1530  0121F8  0100               	movlb	0	; () banked
  1531  0121FA  6FE3               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1532  0121FC  0E00               	movlw	0
  1533  0121FE  6FE2               	movwf	_set_speed& (0+255),b	;volatile
  1534                           
  1535                           ;RemoteCan.c: 186: data_steering [0] = 90;
  1536  012200  0E5A               	movlw	90
  1537  012202  0100               	movlb	0	; () banked
  1538  012204  6FEB               	movwf	_data_steering& (0+255),b
  1539                           
  1540                           ;RemoteCan.c: 187: data_brake [0] = 0;
  1541  012206  0E00               	movlw	0
  1542  012208  0100               	movlb	0	; () banked
  1543  01220A  6FE9               	movwf	_data_brake& (0+255),b
  1544                           
  1545                           ;RemoteCan.c: 188: data_brake [1] = 1;
  1546  01220C  0E01               	movlw	1
  1547  01220E  0100               	movlb	0	; () banked
  1548  012210  6FEA               	movwf	(_data_brake+1)& (0+255),b
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;RemoteCan.c: 189: CAN_Send();
  1552  012212  EC4E  F0AC         	call	_CAN_Send	;wreg free
  1553                           
  1554                           ;RemoteCan.c: 190: LCD_initialize(16);
  1555  012216  0E10               	movlw	16
  1556  012218  EC7F  F0A9         	call	_LCD_initialize
  1557                           
  1558                           ;RemoteCan.c: 191: PORTDbits.RD6 = 0;
  1559  01221C  9C83               	bcf	3971,6,c	;volatile
  1560                           
  1561                           ;RemoteCan.c: 192: PORTDbits.RD5 = 0;
  1562  01221E  9A83               	bcf	3971,5,c	;volatile
  1563                           
  1564                           ;RemoteCan.c: 193: LCD_goto_line(1);
  1565  012220  0E01               	movlw	1
  1566  012222  ECBC  F0AA         	call	_LCD_goto_line
  1567                           
  1568                           ;RemoteCan.c: 194: LCD_write_message("====================");
  1569  012226  0E84               	movlw	low STR_1
  1570  012228  0100               	movlb	0	; () banked
  1571  01222A  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1572  01222C  0EFF               	movlw	high STR_1
  1573  01222E  0100               	movlb	0	; () banked
  1574  012230  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1575  012232  ECD3  F0AF         	call	_LCD_write_message	;wreg free
  1576                           
  1577                           ;RemoteCan.c: 195: LCD_goto_line(2);
  1578  012236  0E02               	movlw	2
  1579  012238  ECBC  F0AA         	call	_LCD_goto_line
  1580                           
  1581                           ;RemoteCan.c: 196: LCD_write_message("==> VEHICLE  OFF <==");
  1582  01223C  0E5A               	movlw	low STR_2
  1583  01223E  0100               	movlb	0	; () banked
  1584  012240  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1585  012242  0EFF               	movlw	high STR_2
  1586  012244  0100               	movlb	0	; () banked
  1587  012246  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1588  012248  ECD3  F0AF         	call	_LCD_write_message	;wreg free
  1589                           
  1590                           ;RemoteCan.c: 197: LCD_goto_line(3);
  1591  01224C  0E03               	movlw	3
  1592  01224E  ECBC  F0AA         	call	_LCD_goto_line
  1593                           
  1594                           ;RemoteCan.c: 198: LCD_write_message("  Press the button  ");
  1595  012252  0E45               	movlw	low STR_3
  1596  012254  0100               	movlb	0	; () banked
  1597  012256  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1598  012258  0EFF               	movlw	high STR_3
  1599  01225A  0100               	movlb	0	; () banked
  1600  01225C  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1601  01225E  ECD3  F0AF         	call	_LCD_write_message	;wreg free
  1602                           
  1603                           ;RemoteCan.c: 199: LCD_goto_line(4);
  1604  012262  0E04               	movlw	4
  1605  012264  ECBC  F0AA         	call	_LCD_goto_line
  1606                           
  1607                           ;RemoteCan.c: 200: LCD_write_message("====================");
  1608  012268  0E84               	movlw	low STR_1
  1609  01226A  0100               	movlb	0	; () banked
  1610  01226C  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1611  01226E  0EFF               	movlw	high STR_1
  1612  012270  0100               	movlb	0	; () banked
  1613  012272  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1614  012274  ECD3  F0AF         	call	_LCD_write_message	;wreg free
  1615                           
  1616                           ;RemoteCan.c: 201: while (power_switch == 0) {
  1617  012278  D054               	goto	l8958
  1618  01227A                     l8948:
  1619                           
  1620                           ;RemoteCan.c: 202: if ((time_counter - pr_time_1) >= 30) {
  1621  01227A  C0D4  F142         	movff	_pr_time_1,??_main	;volatile
  1622  01227E  C0D5  F143         	movff	_pr_time_1+1,??_main+1	;volatile
  1623  012282  C0D6  F144         	movff	_pr_time_1+2,??_main+2	;volatile
  1624  012286  C0D7  F145         	movff	_pr_time_1+3,??_main+3	;volatile
  1625  01228A  0101               	movlb	1	; () banked
  1626  01228C  1F42               	comf	??_main& (0+255),f,b
  1627  01228E  1F43               	comf	(??_main+1)& (0+255),f,b
  1628  012290  1F44               	comf	(??_main+2)& (0+255),f,b
  1629  012292  1F45               	comf	(??_main+3)& (0+255),f,b
  1630  012294  2B42               	incf	??_main& (0+255),f,b
  1631  012296  0E00               	movlw	0
  1632  012298  2343               	addwfc	(??_main+1)& (0+255),f,b
  1633  01229A  2344               	addwfc	(??_main+2)& (0+255),f,b
  1634  01229C  2345               	addwfc	(??_main+3)& (0+255),f,b
  1635  01229E  501C               	movf	_time_counter,w,c	;volatile
  1636  0122A0  0101               	movlb	1	; () banked
  1637  0122A2  2542               	addwf	??_main& (0+255),w,b
  1638  0122A4  0101               	movlb	1	; () banked
  1639  0122A6  6F46               	movwf	(??_main+4)& (0+255),b
  1640  0122A8  501D               	movf	_time_counter+1,w,c	;volatile
  1641  0122AA  0101               	movlb	1	; () banked
  1642  0122AC  2143               	addwfc	(??_main+1)& (0+255),w,b
  1643  0122AE  0101               	movlb	1	; () banked
  1644  0122B0  6F47               	movwf	(??_main+5)& (0+255),b
  1645  0122B2  501E               	movf	_time_counter+2,w,c	;volatile
  1646  0122B4  0101               	movlb	1	; () banked
  1647  0122B6  2144               	addwfc	(??_main+2)& (0+255),w,b
  1648  0122B8  0101               	movlb	1	; () banked
  1649  0122BA  6F48               	movwf	(??_main+6)& (0+255),b
  1650  0122BC  501F               	movf	_time_counter+3,w,c	;volatile
  1651  0122BE  0101               	movlb	1	; () banked
  1652  0122C0  2145               	addwfc	(??_main+3)& (0+255),w,b
  1653  0122C2  0101               	movlb	1	; () banked
  1654  0122C4  6F49               	movwf	(??_main+7)& (0+255),b
  1655  0122C6  0101               	movlb	1	; () banked
  1656  0122C8  5149               	movf	(??_main+7)& (0+255),w,b
  1657  0122CA  0101               	movlb	1	; () banked
  1658  0122CC  1148               	iorwf	(??_main+6)& (0+255),w,b
  1659  0122CE  0101               	movlb	1	; () banked
  1660  0122D0  1147               	iorwf	(??_main+5)& (0+255),w,b
  1661  0122D2  E105               	bnz	u11820
  1662  0122D4  0E1E               	movlw	30
  1663  0122D6  0101               	movlb	1	; () banked
  1664  0122D8  5D46               	subwf	(??_main+4)& (0+255),w,b
  1665  0122DA  A0D8               	btfss	status,0,c
  1666  0122DC  D019               	goto	l8954
  1667  0122DE                     u11820:
  1668                           
  1669                           ; BSR set to: 1
  1670                           ;RemoteCan.c: 203: pr_time_1 = time_counter;
  1671  0122DE  C01C  F0D4         	movff	_time_counter,_pr_time_1	;volatile
  1672  0122E2  C01D  F0D5         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1673  0122E6  C01E  F0D6         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1674  0122EA  C01F  F0D7         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1675                           
  1676                           ; BSR set to: 1
  1677                           ;RemoteCan.c: 204: PORTDbits.RD7 = ~PORTDbits.RD7;
  1678  0122EE  AE83               	btfss	3971,7,c	;volatile
  1679  0122F0  D002               	goto	u11830
  1680  0122F2  0E01               	movlw	1
  1681  0122F4  D001               	goto	u11836
  1682  0122F6                     u11830:
  1683  0122F6  0E00               	movlw	0
  1684  0122F8                     u11836:
  1685  0122F8  0AFF               	xorlw	255
  1686  0122FA  0101               	movlb	1	; () banked
  1687  0122FC  6F42               	movwf	??_main& (0+255),b
  1688  0122FE  0101               	movlb	1	; () banked
  1689  012300  3342               	rrcf	??_main& (0+255),f,b
  1690  012302  3342               	rrcf	??_main& (0+255),f,b
  1691  012304  5083               	movf	3971,w,c	;volatile
  1692  012306  0101               	movlb	1	; () banked
  1693  012308  1942               	xorwf	??_main& (0+255),w,b
  1694  01230A  0B7F               	andlw	-129
  1695  01230C  1942               	xorwf	??_main& (0+255),w,b
  1696  01230E  6E83               	movwf	3971,c	;volatile
  1697  012310                     l8954:
  1698                           
  1699                           ; BSR set to: 1
  1700                           ;RemoteCan.c: 205: }
  1701                           ;RemoteCan.c: 206: PWR_Button_Polling();
  1702  012310  EC79  F0B0         	call	_PWR_Button_Polling	;wreg free
  1703                           
  1704                           ;RemoteCan.c: 207: delay_ms(10);
  1705  012314  0E00               	movlw	0
  1706  012316  0100               	movlb	0	; () banked
  1707  012318  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1708  01231A  0E0A               	movlw	10
  1709  01231C  6F76               	movwf	delay_ms@value_ms& (0+255),b
  1710  01231E  EC7F  F0AF         	call	_delay_ms	;wreg free
  1711  012322                     l8958:
  1712  012322  A04C               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1713  012324  D7AA               	goto	l8948
  1714                           
  1715                           ;RemoteCan.c: 208: }
  1716                           ;RemoteCan.c: 209: PORTDbits.RD7 = 0;
  1717  012326  9E83               	bcf	3971,7,c	;volatile
  1718                           
  1719                           ;RemoteCan.c: 210: display_refresh = 1;
  1720  012328  8C4B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1721  01232A                     l8960:
  1722                           
  1723                           ;RemoteCan.c: 211: }
  1724                           ;RemoteCan.c: 213: Joystick_Polling();
  1725  01232A  ECA8  F0AE         	call	_Joystick_Polling	;wreg free
  1726                           
  1727                           ;RemoteCan.c: 216: if (PORTAbits.RA2 == 1) {
  1728  01232E  A480               	btfss	3968,2,c	;volatile
  1729  012330  D004               	goto	l785
  1730                           
  1731                           ;RemoteCan.c: 217: switch_position = 0;
  1732  012332  0E00               	movlw	0
  1733  012334  0100               	movlb	0	; () banked
  1734  012336  6FE6               	movwf	_switch_position& (0+255),b	;volatile
  1735                           
  1736                           ;RemoteCan.c: 218: } else {
  1737  012338  D00D               	goto	l8970
  1738  01233A                     l785:
  1739                           
  1740                           ;RemoteCan.c: 219: if (PORTAbits.RA3 == 0) {
  1741  01233A  B680               	btfsc	3968,3,c	;volatile
  1742  01233C  D005               	goto	l8968
  1743                           
  1744                           ;RemoteCan.c: 220: switch_position = 1;
  1745  01233E  0E01               	movlw	1
  1746  012340  0100               	movlb	0	; () banked
  1747  012342  6FE6               	movwf	_switch_position& (0+255),b	;volatile
  1748                           
  1749                           ;RemoteCan.c: 221: dir = 1;
  1750  012344  0E01               	movlw	1
  1751  012346  D004               	goto	L1
  1752  012348                     l8968:
  1753                           
  1754                           ;RemoteCan.c: 223: switch_position = 2;
  1755  012348  0E02               	movlw	2
  1756  01234A  0100               	movlb	0	; () banked
  1757  01234C  6FE6               	movwf	_switch_position& (0+255),b	;volatile
  1758                           
  1759                           ;RemoteCan.c: 224: dir = 0;
  1760  01234E  0E00               	movlw	0
  1761  012350                     L1:
  1762  012350  0100               	movlb	0	; () banked
  1763  012352  6FE4               	movwf	_dir& (0+255),b	;volatile
  1764  012354                     l8970:
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;RemoteCan.c: 225: }
  1768                           ;RemoteCan.c: 226: }
  1769                           ;RemoteCan.c: 229: if (F1_switch == 1) {
  1770  012354  A24B               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  1771  012356  D0C6               	goto	l9018
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;RemoteCan.c: 230: y = 0;
  1775  012358  9A4C               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;RemoteCan.c: 231: if ((x < 1)&&(F2_switch == 0)) {
  1779  01235A  0100               	movlb	0	; () banked
  1780  01235C  51E7               	movf	_x& (0+255),w,b	;volatile
  1781  01235E  B4D8               	btfsc	status,2,c
  1782                           
  1783                           ; BSR set to: 0
  1784  012360  B44B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1785  012362  D02E               	goto	l8990
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;RemoteCan.c: 232: space_available = 0;
  1789  012364  924C               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;RemoteCan.c: 233: parking_state = 1;
  1793  012366  0E01               	movlw	1
  1794  012368  0100               	movlb	0	; () banked
  1795  01236A  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  1796                           
  1797                           ;RemoteCan.c: 234: JoystickConstants[1] = 1;
  1798  01236C  0E00               	movlw	0
  1799  01236E  0100               	movlb	0	; () banked
  1800  012370  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1801  012372  0E00               	movlw	0
  1802  012374  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1803  012376  0E80               	movlw	128
  1804  012378  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1805  01237A  0E3F               	movlw	63
  1806  01237C  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1807  01237E                     l8982:
  1808  01237E  EC47  F0B0         	call	_CANisTxReady	;wreg free
  1809  012382  0900               	iorlw	0
  1810  012384  B4D8               	btfsc	status,2,c
  1811  012386  D7FB               	goto	l8982
  1812                           
  1813                           ;RemoteCan.c: 236: park_assist_state[0] = 0b00000001;
  1814  012388  0E01               	movlw	1
  1815  01238A  0101               	movlb	1	; () banked
  1816  01238C  6F21               	movwf	_park_assist_state& (0+255),b
  1817                           
  1818                           ; BSR set to: 1
  1819                           ;RemoteCan.c: 237: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1820  01238E  0E0A               	movlw	10
  1821  012390  0100               	movlb	0	; () banked
  1822  012392  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  1823  012394  0E00               	movlw	0
  1824  012396  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1825  012398  0E00               	movlw	0
  1826  01239A  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1827  01239C  0E00               	movlw	0
  1828  01239E  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1829  0123A0  0E21               	movlw	low _park_assist_state
  1830  0123A2  0100               	movlb	0	; () banked
  1831  0123A4  6F74               	movwf	CANsendMessage@data& (0+255),b
  1832  0123A6  0E01               	movlw	high _park_assist_state
  1833  0123A8  0100               	movlb	0	; () banked
  1834  0123AA  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  1835  0123AC  0E08               	movlw	8
  1836  0123AE  0100               	movlb	0	; () banked
  1837  0123B0  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  1838  0123B2  0EBC               	movlw	188
  1839  0123B4  0100               	movlb	0	; () banked
  1840  0123B6  6F77               	movwf	CANsendMessage@flags& (0+255),b
  1841  0123B8  ECCD  F089         	call	_CANsendMessage	;wreg free
  1842                           
  1843                           ;RemoteCan.c: 238: x++;
  1844  0123BC  0100               	movlb	0	; () banked
  1845  0123BE  2BE7               	incf	_x& (0+255),f,b	;volatile
  1846  0123C0                     l8990:
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;RemoteCan.c: 239: }
  1850                           ;RemoteCan.c: 240: if ((time_counter - pr_time_5) >= 30) {
  1851  0123C0  C018  F142         	movff	_pr_time_5,??_main	;volatile
  1852  0123C4  C019  F143         	movff	_pr_time_5+1,??_main+1	;volatile
  1853  0123C8  C01A  F144         	movff	_pr_time_5+2,??_main+2	;volatile
  1854  0123CC  C01B  F145         	movff	_pr_time_5+3,??_main+3	;volatile
  1855  0123D0  0101               	movlb	1	; () banked
  1856  0123D2  1F42               	comf	??_main& (0+255),f,b
  1857  0123D4  1F43               	comf	(??_main+1)& (0+255),f,b
  1858  0123D6  1F44               	comf	(??_main+2)& (0+255),f,b
  1859  0123D8  1F45               	comf	(??_main+3)& (0+255),f,b
  1860  0123DA  2B42               	incf	??_main& (0+255),f,b
  1861  0123DC  0E00               	movlw	0
  1862  0123DE  2343               	addwfc	(??_main+1)& (0+255),f,b
  1863  0123E0  2344               	addwfc	(??_main+2)& (0+255),f,b
  1864  0123E2  2345               	addwfc	(??_main+3)& (0+255),f,b
  1865  0123E4  501C               	movf	_time_counter,w,c	;volatile
  1866  0123E6  0101               	movlb	1	; () banked
  1867  0123E8  2542               	addwf	??_main& (0+255),w,b
  1868  0123EA  0101               	movlb	1	; () banked
  1869  0123EC  6F46               	movwf	(??_main+4)& (0+255),b
  1870  0123EE  501D               	movf	_time_counter+1,w,c	;volatile
  1871  0123F0  0101               	movlb	1	; () banked
  1872  0123F2  2143               	addwfc	(??_main+1)& (0+255),w,b
  1873  0123F4  0101               	movlb	1	; () banked
  1874  0123F6  6F47               	movwf	(??_main+5)& (0+255),b
  1875  0123F8  501E               	movf	_time_counter+2,w,c	;volatile
  1876  0123FA  0101               	movlb	1	; () banked
  1877  0123FC  2144               	addwfc	(??_main+2)& (0+255),w,b
  1878  0123FE  0101               	movlb	1	; () banked
  1879  012400  6F48               	movwf	(??_main+6)& (0+255),b
  1880  012402  501F               	movf	_time_counter+3,w,c	;volatile
  1881  012404  0101               	movlb	1	; () banked
  1882  012406  2145               	addwfc	(??_main+3)& (0+255),w,b
  1883  012408  0101               	movlb	1	; () banked
  1884  01240A  6F49               	movwf	(??_main+7)& (0+255),b
  1885  01240C  0101               	movlb	1	; () banked
  1886  01240E  5149               	movf	(??_main+7)& (0+255),w,b
  1887  012410  0101               	movlb	1	; () banked
  1888  012412  1148               	iorwf	(??_main+6)& (0+255),w,b
  1889  012414  0101               	movlb	1	; () banked
  1890  012416  1147               	iorwf	(??_main+5)& (0+255),w,b
  1891  012418  E105               	bnz	u11910
  1892  01241A  0E1E               	movlw	30
  1893  01241C  0101               	movlb	1	; () banked
  1894  01241E  5D46               	subwf	(??_main+4)& (0+255),w,b
  1895  012420  A0D8               	btfss	status,0,c
  1896  012422  D030               	goto	l9000
  1897  012424                     u11910:
  1898                           
  1899                           ; BSR set to: 1
  1900                           ;RemoteCan.c: 241: pr_time_5 = time_counter;
  1901  012424  C01C  F018         	movff	_time_counter,_pr_time_5	;volatile
  1902  012428  C01D  F019         	movff	_time_counter+1,_pr_time_5+1	;volatile
  1903  01242C  C01E  F01A         	movff	_time_counter+2,_pr_time_5+2	;volatile
  1904  012430  C01F  F01B         	movff	_time_counter+3,_pr_time_5+3	;volatile
  1905                           
  1906                           ;RemoteCan.c: 242: if (space_available == 0) {
  1907  012434  B24C               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  1908  012436  D014               	goto	l795
  1909                           
  1910                           ; BSR set to: 1
  1911                           ;RemoteCan.c: 243: PORTDbits.RD6 = ~PORTDbits.RD6;
  1912  012438  AC83               	btfss	3971,6,c	;volatile
  1913  01243A  D002               	goto	u11930
  1914  01243C  0E01               	movlw	1
  1915  01243E  D001               	goto	u11936
  1916  012440                     u11930:
  1917  012440  0E00               	movlw	0
  1918  012442                     u11936:
  1919  012442  0AFF               	xorlw	255
  1920  012444  0101               	movlb	1	; () banked
  1921  012446  6F42               	movwf	??_main& (0+255),b
  1922  012448  0101               	movlb	1	; () banked
  1923  01244A  3B42               	swapf	??_main& (0+255),f,b
  1924  01244C  4742               	rlncf	??_main& (0+255),f,b
  1925  01244E  4742               	rlncf	??_main& (0+255),f,b
  1926  012450  5083               	movf	3971,w,c	;volatile
  1927  012452  0101               	movlb	1	; () banked
  1928  012454  1942               	xorwf	??_main& (0+255),w,b
  1929  012456  0BBF               	andlw	-65
  1930  012458  1942               	xorwf	??_main& (0+255),w,b
  1931  01245A  6E83               	movwf	3971,c	;volatile
  1932                           
  1933                           ; BSR set to: 1
  1934                           ;RemoteCan.c: 244: PORTDbits.RD5 = 0;
  1935  01245C  9A83               	bcf	3971,5,c	;volatile
  1936                           
  1937                           ;RemoteCan.c: 245: } else {
  1938  01245E  D012               	goto	l9000
  1939  012460                     l795:
  1940                           
  1941                           ; BSR set to: 1
  1942                           ;RemoteCan.c: 246: PORTDbits.RD6 = 1;
  1943  012460  8C83               	bsf	3971,6,c	;volatile
  1944                           
  1945                           ; BSR set to: 1
  1946                           ;RemoteCan.c: 247: PORTDbits.RD5 = ~PORTDbits.RD5;
  1947  012462  AA83               	btfss	3971,5,c	;volatile
  1948  012464  D002               	goto	u11940
  1949  012466  0E01               	movlw	1
  1950  012468  D001               	goto	u11946
  1951  01246A                     u11940:
  1952  01246A  0E00               	movlw	0
  1953  01246C                     u11946:
  1954  01246C  0AFF               	xorlw	255
  1955  01246E  0101               	movlb	1	; () banked
  1956  012470  6F42               	movwf	??_main& (0+255),b
  1957  012472  0101               	movlb	1	; () banked
  1958  012474  3B42               	swapf	??_main& (0+255),f,b
  1959  012476  4742               	rlncf	??_main& (0+255),f,b
  1960  012478  5083               	movf	3971,w,c	;volatile
  1961  01247A  0101               	movlb	1	; () banked
  1962  01247C  1942               	xorwf	??_main& (0+255),w,b
  1963  01247E  0BDF               	andlw	-33
  1964  012480  1942               	xorwf	??_main& (0+255),w,b
  1965  012482  6E83               	movwf	3971,c	;volatile
  1966  012484                     l9000:
  1967                           
  1968                           ; BSR set to: 1
  1969                           ;RemoteCan.c: 248: }
  1970                           ;RemoteCan.c: 249: }
  1971                           ;RemoteCan.c: 251: if ((F2_switch == 1)&&(space_available == 1)) {
  1972  012484  B44B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1973                           
  1974                           ; BSR set to: 1
  1975  012486  A24C               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  1976  012488  D029               	goto	l9016
  1977                           
  1978                           ; BSR set to: 1
  1979                           ;RemoteCan.c: 252: if (z < 1) {
  1980  01248A  0100               	movlb	0	; () banked
  1981  01248C  51E8               	movf	_z& (0+255),w,b	;volatile
  1982  01248E  A4D8               	btfss	status,2,c
  1983  012490  D062               	goto	l9042
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;RemoteCan.c: 253: parking_state = 2;
  1987  012492  0E02               	movlw	2
  1988  012494  0100               	movlb	0	; () banked
  1989  012496  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  1990  012498                     l9008:
  1991  012498  EC47  F0B0         	call	_CANisTxReady	;wreg free
  1992  01249C  0900               	iorlw	0
  1993  01249E  B4D8               	btfsc	status,2,c
  1994  0124A0  D7FB               	goto	l9008
  1995                           
  1996                           ;RemoteCan.c: 255: CANsendMessage(0b00000001100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  1997  0124A2  0E0C               	movlw	12
  1998  0124A4  0100               	movlb	0	; () banked
  1999  0124A6  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  2000  0124A8  0E00               	movlw	0
  2001  0124AA  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2002  0124AC  0E00               	movlw	0
  2003  0124AE  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2004  0124B0  0E00               	movlw	0
  2005  0124B2  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2006  0124B4  0E28               	movlw	low _data
  2007  0124B6  0100               	movlb	0	; () banked
  2008  0124B8  6F74               	movwf	CANsendMessage@data& (0+255),b
  2009  0124BA  0E00               	movlw	high _data
  2010  0124BC  0100               	movlb	0	; () banked
  2011  0124BE  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  2012  0124C0  0E08               	movlw	8
  2013  0124C2  0100               	movlb	0	; () banked
  2014  0124C4  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  2015  0124C6  0EBC               	movlw	188
  2016  0124C8  0100               	movlb	0	; () banked
  2017  0124CA  6F77               	movwf	CANsendMessage@flags& (0+255),b
  2018  0124CC  ECCD  F089         	call	_CANsendMessage	;wreg free
  2019                           
  2020                           ;RemoteCan.c: 256: x = 0;
  2021  0124D0  0E00               	movlw	0
  2022  0124D2  0100               	movlb	0	; () banked
  2023  0124D4  6FE7               	movwf	_x& (0+255),b	;volatile
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;RemoteCan.c: 257: z++;
  2027  0124D6  0100               	movlb	0	; () banked
  2028  0124D8  2BE8               	incf	_z& (0+255),f,b	;volatile
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;RemoteCan.c: 258: }
  2032                           ;RemoteCan.c: 259: } else {
  2033  0124DA  D03D               	goto	l9042
  2034  0124DC                     l9016:
  2035                           
  2036                           ;RemoteCan.c: 260: z = 0;
  2037  0124DC  0E00               	movlw	0
  2038  0124DE  0100               	movlb	0	; () banked
  2039  0124E0  6FE8               	movwf	_z& (0+255),b	;volatile
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;RemoteCan.c: 261: }
  2043                           ;RemoteCan.c: 262: } else {
  2044  0124E2  D039               	goto	l9042
  2045  0124E4                     l9018:
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;RemoteCan.c: 263: x = 0;
  2049  0124E4  0E00               	movlw	0
  2050  0124E6  0100               	movlb	0	; () banked
  2051  0124E8  6FE7               	movwf	_x& (0+255),b	;volatile
  2052                           
  2053                           ;RemoteCan.c: 264: z = 0;
  2054  0124EA  0E00               	movlw	0
  2055  0124EC  0100               	movlb	0	; () banked
  2056  0124EE  6FE8               	movwf	_z& (0+255),b	;volatile
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;RemoteCan.c: 265: F2_switch = 0;
  2060  0124F0  944B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;RemoteCan.c: 266: PORTDbits.RD5 = 0;
  2064  0124F2  9A83               	bcf	3971,5,c	;volatile
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;RemoteCan.c: 267: PORTDbits.RD6 = 0;
  2068  0124F4  9C83               	bcf	3971,6,c	;volatile
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;RemoteCan.c: 268: if (y == 0) {
  2072  0124F6  BA4C               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2073  0124F8  D02C               	goto	l9038
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;RemoteCan.c: 269: parking_state = 0;
  2077  0124FA  0E00               	movlw	0
  2078  0124FC  0100               	movlb	0	; () banked
  2079  0124FE  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  2080                           
  2081                           ;RemoteCan.c: 270: JoystickConstants[1] = 15;
  2082  012500  0E00               	movlw	0
  2083  012502  0100               	movlb	0	; () banked
  2084  012504  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2085  012506  0E00               	movlw	0
  2086  012508  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2087  01250A  0E70               	movlw	112
  2088  01250C  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2089  01250E  0E41               	movlw	65
  2090  012510  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2091  012512                     l9030:
  2092  012512  EC47  F0B0         	call	_CANisTxReady	;wreg free
  2093  012516  0900               	iorlw	0
  2094  012518  B4D8               	btfsc	status,2,c
  2095  01251A  D7FB               	goto	l9030
  2096                           
  2097                           ;RemoteCan.c: 272: park_assist_state[0] = 0b00000000;
  2098  01251C  0E00               	movlw	0
  2099  01251E  0101               	movlb	1	; () banked
  2100  012520  6F21               	movwf	_park_assist_state& (0+255),b
  2101                           
  2102                           ; BSR set to: 1
  2103                           ;RemoteCan.c: 273: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2104  012522  0E0A               	movlw	10
  2105  012524  0100               	movlb	0	; () banked
  2106  012526  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  2107  012528  0E00               	movlw	0
  2108  01252A  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2109  01252C  0E00               	movlw	0
  2110  01252E  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2111  012530  0E00               	movlw	0
  2112  012532  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2113  012534  0E21               	movlw	low _park_assist_state
  2114  012536  0100               	movlb	0	; () banked
  2115  012538  6F74               	movwf	CANsendMessage@data& (0+255),b
  2116  01253A  0E01               	movlw	high _park_assist_state
  2117  01253C  0100               	movlb	0	; () banked
  2118  01253E  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  2119  012540  0E08               	movlw	8
  2120  012542  0100               	movlb	0	; () banked
  2121  012544  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  2122  012546  0EBC               	movlw	188
  2123  012548  0100               	movlb	0	; () banked
  2124  01254A  6F77               	movwf	CANsendMessage@flags& (0+255),b
  2125  01254C  ECCD  F089         	call	_CANsendMessage	;wreg free
  2126                           
  2127                           ;RemoteCan.c: 274: y = 1;
  2128  012550  8A4C               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2129  012552                     l9038:
  2130                           
  2131                           ;RemoteCan.c: 275: }
  2132                           ;RemoteCan.c: 276: PORTDbits.RD6 = 0;
  2133  012552  9C83               	bcf	3971,6,c	;volatile
  2134                           
  2135                           ;RemoteCan.c: 277: PORTDbits.RD5 = 0;
  2136  012554  9A83               	bcf	3971,5,c	;volatile
  2137  012556                     l9042:
  2138                           
  2139                           ;RemoteCan.c: 278: }
  2140                           ;RemoteCan.c: 280: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2141  012556  0E00               	movlw	0
  2142  012558  0100               	movlb	0	; () banked
  2143  01255A  6FA8               	movwf	___fladd@a& (0+255),b
  2144  01255C  0E00               	movlw	0
  2145  01255E  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  2146  012560  0E34               	movlw	52
  2147  012562  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  2148  012564  0E43               	movlw	67
  2149  012566  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  2150  012568  C0CC  F082         	movff	_JoystickConstants,___flmul@a	;volatile
  2151  01256C  C0CD  F083         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  2152  012570  C0CE  F084         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  2153  012574  C0CF  F085         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  2154  012578  0100               	movlb	0	; () banked
  2155  01257A  51DC               	movf	_JoystickValues& (0+255),w,b	;volatile
  2156  01257C  0100               	movlb	0	; () banked
  2157  01257E  6F70               	movwf	___xxtofl@val& (0+255),b
  2158  012580  6B71               	clrf	(___xxtofl@val+1)& (0+255),b
  2159  012582  6B72               	clrf	(___xxtofl@val+2)& (0+255),b
  2160  012584  6B73               	clrf	(___xxtofl@val+3)& (0+255),b
  2161  012586  0E00               	movlw	0
  2162  012588  ECE0  F0A2         	call	___xxtofl
  2163  01258C  C070  F07E         	movff	?___xxtofl,___flmul@b
  2164  012590  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  2165  012594  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  2166  012598  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  2167  01259C  EC63  F09B         	call	___flmul	;wreg free
  2168  0125A0  C07E  F097         	movff	?___flmul,___flneg@f1
  2169  0125A4  C07F  F098         	movff	?___flmul+1,___flneg@f1+1
  2170  0125A8  C080  F099         	movff	?___flmul+2,___flneg@f1+2
  2171  0125AC  C081  F09A         	movff	?___flmul+3,___flneg@f1+3
  2172  0125B0  EC9C  F0AF         	call	___flneg	;wreg free
  2173  0125B4  C097  F0A4         	movff	?___flneg,___fladd@b
  2174  0125B8  C098  F0A5         	movff	?___flneg+1,___fladd@b+1
  2175  0125BC  C099  F0A6         	movff	?___flneg+2,___fladd@b+2
  2176  0125C0  C09A  F0A7         	movff	?___flneg+3,___fladd@b+3
  2177  0125C4  EC0F  F099         	call	___fladd	;wreg free
  2178  0125C8  C0A4  F0B8         	movff	?___fladd,___fltol@f1
  2179  0125CC  C0A5  F0B9         	movff	?___fladd+1,___fltol@f1+1
  2180  0125D0  C0A6  F0BA         	movff	?___fladd+2,___fltol@f1+2
  2181  0125D4  C0A7  F0BB         	movff	?___fladd+3,___fltol@f1+3
  2182  0125D8  EC36  F0AA         	call	___fltol	;wreg free
  2183  0125DC  0100               	movlb	0	; () banked
  2184  0125DE  51B8               	movf	?___fltol& (0+255),w,b
  2185  0125E0  0100               	movlb	0	; () banked
  2186  0125E2  6FEB               	movwf	_data_steering& (0+255),b
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;RemoteCan.c: 281: if (switch_position != 0) {
  2190  0125E4  0100               	movlb	0	; () banked
  2191  0125E6  51E6               	movf	_switch_position& (0+255),w,b	;volatile
  2192  0125E8  B4D8               	btfsc	status,2,c
  2193  0125EA  D088               	goto	l9056
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;RemoteCan.c: 282: if (JoystickValues[1] > 132) {
  2197  0125EC  0E84               	movlw	132
  2198  0125EE  0100               	movlb	0	; () banked
  2199  0125F0  65DD               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2200  0125F2  D042               	goto	l9052
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;RemoteCan.c: 283: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2204  0125F4  C0D0  F082         	movff	_JoystickConstants+4,___flmul@a	;volatile
  2205  0125F8  C0D1  F083         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  2206  0125FC  C0D2  F084         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  2207  012600  C0D3  F085         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  2208  012604  0E7E               	movlw	126
  2209  012606  0101               	movlb	1	; () banked
  2210  012608  6F42               	movwf	??_main& (0+255),b
  2211  01260A  0EFF               	movlw	255
  2212  01260C  0101               	movlb	1	; () banked
  2213  01260E  6F43               	movwf	(??_main+1)& (0+255),b
  2214  012610  0100               	movlb	0	; () banked
  2215  012612  51DD               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2216  012614  0101               	movlb	1	; () banked
  2217  012616  6F44               	movwf	(??_main+2)& (0+255),b
  2218  012618  6B45               	clrf	(??_main+3)& (0+255),b
  2219  01261A  0101               	movlb	1	; () banked
  2220  01261C  5142               	movf	??_main& (0+255),w,b
  2221  01261E  0101               	movlb	1	; () banked
  2222  012620  2744               	addwf	(??_main+2)& (0+255),f,b
  2223  012622  0101               	movlb	1	; () banked
  2224  012624  5143               	movf	(??_main+1)& (0+255),w,b
  2225  012626  0101               	movlb	1	; () banked
  2226  012628  2345               	addwfc	(??_main+3)& (0+255),f,b
  2227  01262A  C144  F070         	movff	??_main+2,___xxtofl@val
  2228  01262E  C145  F071         	movff	??_main+3,___xxtofl@val+1
  2229  012632  0100               	movlb	0	; () banked
  2230  012634  0E00               	movlw	0
  2231  012636  BF71               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2232  012638  0EFF               	movlw	-1
  2233  01263A  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  2234  01263C  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  2235  01263E  0E01               	movlw	1
  2236  012640  ECE0  F0A2         	call	___xxtofl
  2237  012644  C070  F07E         	movff	?___xxtofl,___flmul@b
  2238  012648  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  2239  01264C  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  2240  012650  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  2241  012654  EC63  F09B         	call	___flmul	;wreg free
  2242  012658  C07E  F0B8         	movff	?___flmul,___fltol@f1
  2243  01265C  C07F  F0B9         	movff	?___flmul+1,___fltol@f1+1
  2244  012660  C080  F0BA         	movff	?___flmul+2,___fltol@f1+2
  2245  012664  C081  F0BB         	movff	?___flmul+3,___fltol@f1+3
  2246  012668  EC36  F0AA         	call	___fltol	;wreg free
  2247  01266C  C0B8  F0E2         	movff	?___fltol,_set_speed	;volatile
  2248  012670  C0B9  F0E3         	movff	?___fltol+1,_set_speed+1	;volatile
  2249                           
  2250                           ;RemoteCan.c: 284: data_brake [0] = 0;
  2251  012674  0E00               	movlw	0
  2252  012676  D040               	goto	L2
  2253  012678                     l9052:
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;RemoteCan.c: 286: set_speed = 0;
  2257  012678  0E00               	movlw	0
  2258  01267A  0100               	movlb	0	; () banked
  2259  01267C  6FE3               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2260  01267E  0E00               	movlw	0
  2261  012680  6FE2               	movwf	_set_speed& (0+255),b	;volatile
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;RemoteCan.c: 287: data_brake [0] = ((130 - JoystickValues[1]))*(1.9);
  2265  012682  0E33               	movlw	51
  2266  012684  0100               	movlb	0	; () banked
  2267  012686  6F82               	movwf	___flmul@a& (0+255),b
  2268  012688  0E33               	movlw	51
  2269  01268A  6F83               	movwf	(___flmul@a+1)& (0+255),b
  2270  01268C  0EF3               	movlw	243
  2271  01268E  6F84               	movwf	(___flmul@a+2)& (0+255),b
  2272  012690  0E3F               	movlw	63
  2273  012692  6F85               	movwf	(___flmul@a+3)& (0+255),b
  2274  012694  0100               	movlb	0	; () banked
  2275  012696  51DD               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2276  012698  0101               	movlb	1	; () banked
  2277  01269A  6F42               	movwf	??_main& (0+255),b
  2278  01269C  6B43               	clrf	(??_main+1)& (0+255),b
  2279  01269E  0101               	movlb	1	; () banked
  2280  0126A0  1F42               	comf	??_main& (0+255),f,b
  2281  0126A2  1F43               	comf	(??_main+1)& (0+255),f,b
  2282  0126A4  4B42               	infsnz	??_main& (0+255),f,b
  2283  0126A6  2B43               	incf	(??_main+1)& (0+255),f,b
  2284  0126A8  0E82               	movlw	130
  2285  0126AA  0101               	movlb	1	; () banked
  2286  0126AC  2742               	addwf	??_main& (0+255),f,b
  2287  0126AE  0E00               	movlw	0
  2288  0126B0  2343               	addwfc	(??_main+1)& (0+255),f,b
  2289  0126B2  C142  F070         	movff	??_main,___xxtofl@val
  2290  0126B6  C143  F071         	movff	??_main+1,___xxtofl@val+1
  2291  0126BA  0100               	movlb	0	; () banked
  2292  0126BC  0E00               	movlw	0
  2293  0126BE  BF71               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2294  0126C0  0EFF               	movlw	-1
  2295  0126C2  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  2296  0126C4  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  2297  0126C6  0E01               	movlw	1
  2298  0126C8  ECE0  F0A2         	call	___xxtofl
  2299  0126CC  C070  F07E         	movff	?___xxtofl,___flmul@b
  2300  0126D0  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  2301  0126D4  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  2302  0126D8  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  2303  0126DC  EC63  F09B         	call	___flmul	;wreg free
  2304  0126E0  C07E  F0B8         	movff	?___flmul,___fltol@f1
  2305  0126E4  C07F  F0B9         	movff	?___flmul+1,___fltol@f1+1
  2306  0126E8  C080  F0BA         	movff	?___flmul+2,___fltol@f1+2
  2307  0126EC  C081  F0BB         	movff	?___flmul+3,___fltol@f1+3
  2308  0126F0  EC36  F0AA         	call	___fltol	;wreg free
  2309  0126F4  0100               	movlb	0	; () banked
  2310  0126F6  51B8               	movf	?___fltol& (0+255),w,b
  2311  0126F8                     L2:
  2312  0126F8  0100               	movlb	0	; () banked
  2313  0126FA  6FE9               	movwf	_data_brake& (0+255),b
  2314  0126FC                     l9056:
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;RemoteCan.c: 288: }
  2318                           ;RemoteCan.c: 289: }
  2319                           ;RemoteCan.c: 291: if (newMessageCan == 1) {
  2320  0126FC  AE4B               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2321  0126FE  D003               	goto	l9062
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;RemoteCan.c: 292: CAN_interpreter();
  2325  012700  ECAB  F0AC         	call	_CAN_interpreter	;wreg free
  2326                           
  2327                           ;RemoteCan.c: 293: newMessageCan = 0;
  2328  012704  9E4B               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2329  012706                     l9062:
  2330                           
  2331                           ;RemoteCan.c: 294: }
  2332                           ;RemoteCan.c: 296: if ((time_counter - pr_time_2) >= 2) {
  2333  012706  C0D8  F142         	movff	_pr_time_2,??_main	;volatile
  2334  01270A  C0D9  F143         	movff	_pr_time_2+1,??_main+1	;volatile
  2335  01270E  C0DA  F144         	movff	_pr_time_2+2,??_main+2	;volatile
  2336  012712  C0DB  F145         	movff	_pr_time_2+3,??_main+3	;volatile
  2337  012716  0101               	movlb	1	; () banked
  2338  012718  1F42               	comf	??_main& (0+255),f,b
  2339  01271A  1F43               	comf	(??_main+1)& (0+255),f,b
  2340  01271C  1F44               	comf	(??_main+2)& (0+255),f,b
  2341  01271E  1F45               	comf	(??_main+3)& (0+255),f,b
  2342  012720  2B42               	incf	??_main& (0+255),f,b
  2343  012722  0E00               	movlw	0
  2344  012724  2343               	addwfc	(??_main+1)& (0+255),f,b
  2345  012726  2344               	addwfc	(??_main+2)& (0+255),f,b
  2346  012728  2345               	addwfc	(??_main+3)& (0+255),f,b
  2347  01272A  501C               	movf	_time_counter,w,c	;volatile
  2348  01272C  0101               	movlb	1	; () banked
  2349  01272E  2542               	addwf	??_main& (0+255),w,b
  2350  012730  0101               	movlb	1	; () banked
  2351  012732  6F46               	movwf	(??_main+4)& (0+255),b
  2352  012734  501D               	movf	_time_counter+1,w,c	;volatile
  2353  012736  0101               	movlb	1	; () banked
  2354  012738  2143               	addwfc	(??_main+1)& (0+255),w,b
  2355  01273A  0101               	movlb	1	; () banked
  2356  01273C  6F47               	movwf	(??_main+5)& (0+255),b
  2357  01273E  501E               	movf	_time_counter+2,w,c	;volatile
  2358  012740  0101               	movlb	1	; () banked
  2359  012742  2144               	addwfc	(??_main+2)& (0+255),w,b
  2360  012744  0101               	movlb	1	; () banked
  2361  012746  6F48               	movwf	(??_main+6)& (0+255),b
  2362  012748  501F               	movf	_time_counter+3,w,c	;volatile
  2363  01274A  0101               	movlb	1	; () banked
  2364  01274C  2145               	addwfc	(??_main+3)& (0+255),w,b
  2365  01274E  0101               	movlb	1	; () banked
  2366  012750  6F49               	movwf	(??_main+7)& (0+255),b
  2367  012752  0101               	movlb	1	; () banked
  2368  012754  5149               	movf	(??_main+7)& (0+255),w,b
  2369  012756  0101               	movlb	1	; () banked
  2370  012758  1148               	iorwf	(??_main+6)& (0+255),w,b
  2371  01275A  0101               	movlb	1	; () banked
  2372  01275C  1147               	iorwf	(??_main+5)& (0+255),w,b
  2373  01275E  E105               	bnz	u12040
  2374  012760  0E02               	movlw	2
  2375  012762  0101               	movlb	1	; () banked
  2376  012764  5D46               	subwf	(??_main+4)& (0+255),w,b
  2377  012766  A0D8               	btfss	status,0,c
  2378  012768  D00A               	goto	l9068
  2379  01276A                     u12040:
  2380                           
  2381                           ; BSR set to: 1
  2382                           ;RemoteCan.c: 297: pr_time_2 = time_counter;
  2383  01276A  C01C  F0D8         	movff	_time_counter,_pr_time_2	;volatile
  2384  01276E  C01D  F0D9         	movff	_time_counter+1,_pr_time_2+1	;volatile
  2385  012772  C01E  F0DA         	movff	_time_counter+2,_pr_time_2+2	;volatile
  2386  012776  C01F  F0DB         	movff	_time_counter+3,_pr_time_2+3	;volatile
  2387                           
  2388                           ; BSR set to: 1
  2389                           ;RemoteCan.c: 298: CAN_Send();
  2390  01277A  EC4E  F0AC         	call	_CAN_Send	;wreg free
  2391  01277E                     l9068:
  2392                           
  2393                           ;RemoteCan.c: 299: }
  2394                           ;RemoteCan.c: 301: if ((time_counter - pr_time_3) >= (100 / 10)) {
  2395  01277E  C010  F142         	movff	_pr_time_3,??_main	;volatile
  2396  012782  C011  F143         	movff	_pr_time_3+1,??_main+1	;volatile
  2397  012786  C012  F144         	movff	_pr_time_3+2,??_main+2	;volatile
  2398  01278A  C013  F145         	movff	_pr_time_3+3,??_main+3	;volatile
  2399  01278E  0101               	movlb	1	; () banked
  2400  012790  1F42               	comf	??_main& (0+255),f,b
  2401  012792  1F43               	comf	(??_main+1)& (0+255),f,b
  2402  012794  1F44               	comf	(??_main+2)& (0+255),f,b
  2403  012796  1F45               	comf	(??_main+3)& (0+255),f,b
  2404  012798  2B42               	incf	??_main& (0+255),f,b
  2405  01279A  0E00               	movlw	0
  2406  01279C  2343               	addwfc	(??_main+1)& (0+255),f,b
  2407  01279E  2344               	addwfc	(??_main+2)& (0+255),f,b
  2408  0127A0  2345               	addwfc	(??_main+3)& (0+255),f,b
  2409  0127A2  501C               	movf	_time_counter,w,c	;volatile
  2410  0127A4  0101               	movlb	1	; () banked
  2411  0127A6  2542               	addwf	??_main& (0+255),w,b
  2412  0127A8  0101               	movlb	1	; () banked
  2413  0127AA  6F46               	movwf	(??_main+4)& (0+255),b
  2414  0127AC  501D               	movf	_time_counter+1,w,c	;volatile
  2415  0127AE  0101               	movlb	1	; () banked
  2416  0127B0  2143               	addwfc	(??_main+1)& (0+255),w,b
  2417  0127B2  0101               	movlb	1	; () banked
  2418  0127B4  6F47               	movwf	(??_main+5)& (0+255),b
  2419  0127B6  501E               	movf	_time_counter+2,w,c	;volatile
  2420  0127B8  0101               	movlb	1	; () banked
  2421  0127BA  2144               	addwfc	(??_main+2)& (0+255),w,b
  2422  0127BC  0101               	movlb	1	; () banked
  2423  0127BE  6F48               	movwf	(??_main+6)& (0+255),b
  2424  0127C0  501F               	movf	_time_counter+3,w,c	;volatile
  2425  0127C2  0101               	movlb	1	; () banked
  2426  0127C4  2145               	addwfc	(??_main+3)& (0+255),w,b
  2427  0127C6  0101               	movlb	1	; () banked
  2428  0127C8  6F49               	movwf	(??_main+7)& (0+255),b
  2429  0127CA  0101               	movlb	1	; () banked
  2430  0127CC  5149               	movf	(??_main+7)& (0+255),w,b
  2431  0127CE  0101               	movlb	1	; () banked
  2432  0127D0  1148               	iorwf	(??_main+6)& (0+255),w,b
  2433  0127D2  0101               	movlb	1	; () banked
  2434  0127D4  1147               	iorwf	(??_main+5)& (0+255),w,b
  2435  0127D6  E105               	bnz	u12050
  2436  0127D8  0E0A               	movlw	10
  2437  0127DA  0101               	movlb	1	; () banked
  2438  0127DC  5D46               	subwf	(??_main+4)& (0+255),w,b
  2439  0127DE  A0D8               	btfss	status,0,c
  2440  0127E0  D4FF               	goto	l8914
  2441  0127E2                     u12050:
  2442                           
  2443                           ; BSR set to: 1
  2444                           ;RemoteCan.c: 302: pr_time_3 = time_counter;
  2445  0127E2  C01C  F010         	movff	_time_counter,_pr_time_3	;volatile
  2446  0127E6  C01D  F011         	movff	_time_counter+1,_pr_time_3+1	;volatile
  2447  0127EA  C01E  F012         	movff	_time_counter+2,_pr_time_3+2	;volatile
  2448  0127EE  C01F  F013         	movff	_time_counter+3,_pr_time_3+3	;volatile
  2449                           
  2450                           ; BSR set to: 1
  2451                           ;RemoteCan.c: 303: LCD_Handler();
  2452  0127F2  EC8A  F0A5         	call	_LCD_Handler	;wreg free
  2453  0127F6  D4F4               	goto	l8914
  2454  0127F8                     __end_of_main:
  2455                           	opt stack 0
  2456                           tblptru	equ	0xFF8
  2457                           tblptrh	equ	0xFF7
  2458                           tblptrl	equ	0xFF6
  2459                           tablat	equ	0xFF5
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           status	equ	0xFD8
  2463                           
  2464 ;; *************** function _board_initialization *****************
  2465 ;; Defined at:
  2466 ;;		line 460 in file "RemoteCan.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;		None               void
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    9
  2487 ;; This function calls:
  2488 ;;		_CANInitialize
  2489 ;;		_LCD_clear
  2490 ;;		_LCD_goto_line
  2491 ;;		_LCD_initialize
  2492 ;; This function is called by:
  2493 ;;		_main
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text1
  2498  015A00                     __ptext1:
  2499                           	opt stack 0
  2500  015A00                     _board_initialization:
  2501                           	opt stack 21
  2502                           
  2503                           ;RemoteCan.c: 462: LATA = 0x00;
  2504                           
  2505                           ;incstack = 0
  2506  015A00  0E00               	movlw	0
  2507  015A02  6E89               	movwf	3977,c	;volatile
  2508                           
  2509                           ;RemoteCan.c: 463: TRISA = 0b00011111;
  2510  015A04  0E1F               	movlw	31
  2511  015A06  6E92               	movwf	3986,c	;volatile
  2512                           
  2513                           ;RemoteCan.c: 464: LATB = 0x00;
  2514  015A08  0E00               	movlw	0
  2515  015A0A  6E8A               	movwf	3978,c	;volatile
  2516                           
  2517                           ;RemoteCan.c: 465: TRISB = 0b11111011;
  2518  015A0C  0EFB               	movlw	251
  2519  015A0E  6E93               	movwf	3987,c	;volatile
  2520                           
  2521                           ;RemoteCan.c: 466: LATC = 0x00;
  2522  015A10  0E00               	movlw	0
  2523  015A12  6E8B               	movwf	3979,c	;volatile
  2524                           
  2525                           ;RemoteCan.c: 467: TRISC = 0b11110000;
  2526  015A14  0EF0               	movlw	240
  2527  015A16  6E94               	movwf	3988,c	;volatile
  2528                           
  2529                           ;RemoteCan.c: 468: LATD = 0x00;
  2530  015A18  0E00               	movlw	0
  2531  015A1A  6E8C               	movwf	3980,c	;volatile
  2532                           
  2533                           ;RemoteCan.c: 469: TRISD = 0x00;
  2534  015A1C  0E00               	movlw	0
  2535  015A1E  6E95               	movwf	3989,c	;volatile
  2536                           
  2537                           ;RemoteCan.c: 470: LATE = 0x00;
  2538  015A20  0E00               	movlw	0
  2539  015A22  6E8D               	movwf	3981,c	;volatile
  2540                           
  2541                           ;RemoteCan.c: 471: TRISE = 0x00;
  2542  015A24  0E00               	movlw	0
  2543  015A26  6E96               	movwf	3990,c	;volatile
  2544                           
  2545                           ;RemoteCan.c: 473: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2546  015A28  0E06               	movlw	6
  2547  015A2A  0100               	movlb	0	; () banked
  2548  015A2C  6F7E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2549  015A2E  0E05               	movlw	5
  2550  015A30  0100               	movlb	0	; () banked
  2551  015A32  6F7F               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2552  015A34  0E01               	movlw	1
  2553  015A36  0100               	movlb	0	; () banked
  2554  015A38  6F80               	movwf	CANInitialize@SJW& (0+255),b
  2555  015A3A  0E03               	movlw	3
  2556  015A3C  0100               	movlb	0	; () banked
  2557  015A3E  6F81               	movwf	CANInitialize@BRP& (0+255),b
  2558  015A40  0E9D               	movlw	157
  2559  015A42  0100               	movlb	0	; () banked
  2560  015A44  6F82               	movwf	CANInitialize@flags& (0+255),b
  2561  015A46  0E04               	movlw	4
  2562  015A48  ECC7  F0A3         	call	_CANInitialize
  2563                           
  2564                           ;RemoteCan.c: 477: PIR2bits.TMR3IF = 0;
  2565  015A4C  92A1               	bcf	4001,1,c	;volatile
  2566                           
  2567                           ;RemoteCan.c: 478: PIR3bits.RXB1IF = 0;
  2568  015A4E  92A4               	bcf	4004,1,c	;volatile
  2569                           
  2570                           ;RemoteCan.c: 479: PIR3bits.RXB0IF = 0;
  2571  015A50  90A4               	bcf	4004,0,c	;volatile
  2572                           
  2573                           ;RemoteCan.c: 482: RCONbits.IPEN = 1;
  2574  015A52  8ED0               	bsf	4048,7,c	;volatile
  2575                           
  2576                           ;RemoteCan.c: 483: IPR3bits.RXB1IP = 1;
  2577  015A54  82A5               	bsf	4005,1,c	;volatile
  2578                           
  2579                           ;RemoteCan.c: 484: IPR3bits.RXB0IP = 1;
  2580  015A56  80A5               	bsf	4005,0,c	;volatile
  2581                           
  2582                           ;RemoteCan.c: 485: IPR2bits.TMR3IP = 0;
  2583  015A58  92A2               	bcf	4002,1,c	;volatile
  2584                           
  2585                           ;RemoteCan.c: 488: ADCON1 = 0b00001101;
  2586  015A5A  0E0D               	movlw	13
  2587  015A5C  6EC1               	movwf	4033,c	;volatile
  2588                           
  2589                           ;RemoteCan.c: 489: ADCON0bits.CHS2 = 0;
  2590  015A5E  98C2               	bcf	4034,4,c	;volatile
  2591                           
  2592                           ;RemoteCan.c: 490: ADCON0bits.CHS1 = 0;
  2593  015A60  96C2               	bcf	4034,3,c	;volatile
  2594                           
  2595                           ;RemoteCan.c: 491: ADCON0bits.CHS0 = 0;
  2596  015A62  94C2               	bcf	4034,2,c	;volatile
  2597                           
  2598                           ;RemoteCan.c: 492: ADCON2bits.ACQT2 = 1;
  2599  015A64  8AC0               	bsf	4032,5,c	;volatile
  2600                           
  2601                           ;RemoteCan.c: 493: ADCON2bits.ACQT1 = 1;
  2602  015A66  88C0               	bsf	4032,4,c	;volatile
  2603                           
  2604                           ;RemoteCan.c: 494: ADCON2bits.ACQT0 = 0;
  2605  015A68  96C0               	bcf	4032,3,c	;volatile
  2606                           
  2607                           ;RemoteCan.c: 495: ADCON2bits.ADCS2 = 1;
  2608  015A6A  84C0               	bsf	4032,2,c	;volatile
  2609                           
  2610                           ;RemoteCan.c: 496: ADCON2bits.ADCS1 = 0;
  2611  015A6C  92C0               	bcf	4032,1,c	;volatile
  2612                           
  2613                           ;RemoteCan.c: 497: ADCON2bits.ADCS0 = 1;
  2614  015A6E  80C0               	bsf	4032,0,c	;volatile
  2615                           
  2616                           ;RemoteCan.c: 498: ADCON2bits.ADFM = 0;
  2617  015A70  9EC0               	bcf	4032,7,c	;volatile
  2618                           
  2619                           ;RemoteCan.c: 499: ADCON0bits.ADON = 1;
  2620  015A72  80C2               	bsf	4034,0,c	;volatile
  2621                           
  2622                           ;RemoteCan.c: 502: LCD_initialize(16);
  2623  015A74  0E10               	movlw	16
  2624  015A76  EC7F  F0A9         	call	_LCD_initialize
  2625                           
  2626                           ;RemoteCan.c: 504: LCD_clear();
  2627  015A7A  EC06  F0B0         	call	_LCD_clear	;wreg free
  2628                           
  2629                           ;RemoteCan.c: 505: LCD_goto_line(1);
  2630  015A7E  0E01               	movlw	1
  2631  015A80  ECBC  F0AA         	call	_LCD_goto_line
  2632                           
  2633                           ;RemoteCan.c: 509: PORTDbits.RD2 = 0;
  2634  015A84  9483               	bcf	3971,2,c	;volatile
  2635                           
  2636                           ;RemoteCan.c: 510: PORTDbits.RD3 = 0;
  2637  015A86  9683               	bcf	3971,3,c	;volatile
  2638                           
  2639                           ;RemoteCan.c: 513: TMR3H = 0x63;
  2640  015A88  0E63               	movlw	99
  2641  015A8A  6EB3               	movwf	4019,c	;volatile
  2642                           
  2643                           ;RemoteCan.c: 514: TMR3L = 0xC0;
  2644  015A8C  0EC0               	movlw	192
  2645  015A8E  6EB2               	movwf	4018,c	;volatile
  2646                           
  2647                           ;RemoteCan.c: 517: PIE3bits.RXB1IE = 1;
  2648  015A90  82A3               	bsf	4003,1,c	;volatile
  2649                           
  2650                           ;RemoteCan.c: 518: PIE3bits.RXB0IE = 1;
  2651  015A92  80A3               	bsf	4003,0,c	;volatile
  2652                           
  2653                           ;RemoteCan.c: 519: PIE2bits.TMR3IE = 1;
  2654  015A94  82A0               	bsf	4000,1,c	;volatile
  2655                           
  2656                           ;RemoteCan.c: 522: T3CON = 0x01;
  2657  015A96  0E01               	movlw	1
  2658  015A98  6EB1               	movwf	4017,c	;volatile
  2659                           
  2660                           ;RemoteCan.c: 523: LCD_clear();
  2661  015A9A  EC06  F0B0         	call	_LCD_clear	;wreg free
  2662                           
  2663                           ;RemoteCan.c: 524: INTCONbits.GIEH = 1;
  2664  015A9E  8EF2               	bsf	intcon,7,c	;volatile
  2665                           
  2666                           ;RemoteCan.c: 525: INTCONbits.GIEL = 1;
  2667  015AA0  8CF2               	bsf	intcon,6,c	;volatile
  2668  015AA2  0012               	return		;funcret
  2669  015AA4                     __end_of_board_initialization:
  2670                           	opt stack 0
  2671                           tblptru	equ	0xFF8
  2672                           tblptrh	equ	0xFF7
  2673                           tblptrl	equ	0xFF6
  2674                           tablat	equ	0xFF5
  2675                           intcon	equ	0xFF2
  2676                           postinc0	equ	0xFEE
  2677                           wreg	equ	0xFE8
  2678                           status	equ	0xFD8
  2679                           
  2680 ;; *************** function _CANInitialize *****************
  2681 ;; Defined at:
  2682 ;;		line 218 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  propSeg         1    wreg     unsigned char 
  2685 ;;  phaseSeg1       1   30[BANK0 ] unsigned char 
  2686 ;;  phaseSeg2       1   31[BANK0 ] unsigned char 
  2687 ;;  SJW             1   32[BANK0 ] unsigned char 
  2688 ;;  BRP             1   33[BANK0 ] unsigned char 
  2689 ;;  flags           1   34[BANK0 ] enum E16887
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;  propSeg         1   39[BANK0 ] unsigned char 
  2692 ;;  FilterConfig    1   41[BANK0 ] unsigned char 
  2693 ;;  FilterConfig    1   40[BANK0 ] unsigned char 
  2694 ;; Return value:  Size  Location     Type
  2695 ;;		None               void
  2696 ;; Registers used:
  2697 ;;		wreg, status,2, status,0, cstack
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2703 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2704 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2705 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2706 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2707 ;;Total ram usage:       12 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:    4
  2710 ;; This function calls:
  2711 ;;		_CANOperationMode
  2712 ;;		_CANSetFilter
  2713 ;;		_CANSetMask
  2714 ;; This function is called by:
  2715 ;;		_board_initialization
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text2
  2720  01478E                     __ptext2:
  2721                           	opt stack 0
  2722  01478E                     _CANInitialize:
  2723                           	opt stack 25
  2724                           
  2725                           ;incstack = 0
  2726                           ;CANInitialize@propSeg stored from wreg
  2727  01478E  0100               	movlb	0	; () banked
  2728  014790  6F87               	movwf	CANInitialize@propSeg& (0+255),b
  2729                           
  2730                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2731                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2732                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2733  014792  0E80               	movlw	128
  2734  014794  ECB1  F0B0         	call	_CANOperationMode
  2735                           
  2736                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2737  014798  0E00               	movlw	0
  2738  01479A  6E70               	movwf	3952,c	;volatile
  2739                           
  2740                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2741  01479C  0E00               	movlw	0
  2742  01479E  6E71               	movwf	3953,c	;volatile
  2743                           
  2744                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2745  0147A0  0E00               	movlw	0
  2746  0147A2  6E72               	movwf	3954,c	;volatile
  2747                           
  2748                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2749  0147A4  0100               	movlb	0	; () banked
  2750  0147A6  4180               	rrncf	CANInitialize@SJW& (0+255),w,b
  2751  0147A8  42E8               	rrncf	wreg,f,c
  2752  0147AA  0BC0               	andlw	192
  2753  0147AC  0100               	movlb	0	; () banked
  2754  0147AE  6F80               	movwf	CANInitialize@SJW& (0+255),b
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  2758  0147B0  0100               	movlb	0	; () banked
  2759  0147B2  5180               	movf	CANInitialize@SJW& (0+255),w,b
  2760  0147B4  1270               	iorwf	3952,f,c	;volatile
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  2764  0147B6  0100               	movlb	0	; () banked
  2765  0147B8  5181               	movf	CANInitialize@BRP& (0+255),w,b
  2766  0147BA  1270               	iorwf	3952,f,c	;volatile
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  2770  0147BC  0100               	movlb	0	; () banked
  2771  0147BE  5187               	movf	CANInitialize@propSeg& (0+255),w,b
  2772  0147C0  1271               	iorwf	3953,f,c	;volatile
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2776  0147C2  0100               	movlb	0	; () banked
  2777  0147C4  397E               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2778  0147C6  42E8               	rrncf	wreg,f,c
  2779  0147C8  0BF8               	andlw	248
  2780  0147CA  0100               	movlb	0	; () banked
  2781  0147CC  6F7E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2785  0147CE  0100               	movlb	0	; () banked
  2786  0147D0  517E               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2787  0147D2  1271               	iorwf	3953,f,c	;volatile
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2791  0147D4  0100               	movlb	0	; () banked
  2792  0147D6  A582               	btfss	CANInitialize@flags& (0+255),2,b
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  2796  0147D8  8C71               	bsf	3953,6,c	;volatile
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2800  0147DA  0100               	movlb	0	; () banked
  2801  0147DC  B182               	btfsc	CANInitialize@flags& (0+255),0,b
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2805  0147DE  8E71               	bsf	3953,7,c	;volatile
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2809                           
  2810                           ; BSR set to: 0
  2811  0147E0  0100               	movlb	0	; () banked
  2812  0147E2  517F               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2813  0147E4  1272               	iorwf	3954,f,c	;volatile
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2817  0147E6  0100               	movlb	0	; () banked
  2818  0147E8  B382               	btfsc	CANInitialize@flags& (0+255),1,b
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2822  0147EA  8C72               	bsf	3954,6,c	;volatile
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2826                           
  2827                           ; BSR set to: 0
  2828  0147EC  0100               	movlb	0	; () banked
  2829  0147EE  5182               	movf	CANInitialize@flags& (0+255),w,b
  2830  0147F0  0B60               	andlw	96
  2831  0147F2  6E60               	movwf	3936,c	;volatile
  2832                           
  2833                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2834  0147F4  0100               	movlb	0	; () banked
  2835  0147F6  5182               	movf	CANInitialize@flags& (0+255),w,b
  2836  0147F8  0B10               	andlw	16
  2837  0147FA  0AFF               	xorlw	255
  2838  0147FC  B4D8               	btfsc	status,2,c
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2842  0147FE  8460               	bsf	3936,2,c	;volatile
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  2846  014800  CF60 FF50          	movff	3936,3920	;volatile
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2850  014804  0E00               	movlw	0
  2851  014806  0100               	movlb	0	; () banked
  2852  014808  6F70               	movwf	CANSetMask@mask& (0+255),b
  2853  01480A  0E00               	movlw	0
  2854  01480C  6F71               	movwf	(CANSetMask@mask+1)& (0+255),b
  2855  01480E  0E00               	movlw	0
  2856  014810  6F72               	movwf	(CANSetMask@mask+2)& (0+255),b
  2857  014812  0E00               	movlw	0
  2858  014814  6F73               	movwf	(CANSetMask@mask+3)& (0+255),b
  2859  014816  0EF7               	movlw	247
  2860  014818  0100               	movlb	0	; () banked
  2861  01481A  6F74               	movwf	CANSetMask@type& (0+255),b
  2862  01481C  0E01               	movlw	1
  2863  01481E  EC96  F09F         	call	_CANSetMask
  2864                           
  2865                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2866  014822  0E00               	movlw	0
  2867  014824  0100               	movlb	0	; () banked
  2868  014826  6F70               	movwf	CANSetMask@mask& (0+255),b
  2869  014828  0E00               	movlw	0
  2870  01482A  6F71               	movwf	(CANSetMask@mask+1)& (0+255),b
  2871  01482C  0E00               	movlw	0
  2872  01482E  6F72               	movwf	(CANSetMask@mask+2)& (0+255),b
  2873  014830  0E00               	movlw	0
  2874  014832  6F73               	movwf	(CANSetMask@mask+3)& (0+255),b
  2875  014834  0EF7               	movlw	247
  2876  014836  0100               	movlb	0	; () banked
  2877  014838  6F74               	movwf	CANSetMask@type& (0+255),b
  2878  01483A  0E02               	movlw	2
  2879  01483C  EC96  F09F         	call	_CANSetMask
  2880                           
  2881                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2882  014840  D00F               	goto	l6010
  2883  014842                     l6004:
  2884                           
  2885                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2886  014842  0EF7               	movlw	247
  2887  014844  0100               	movlb	0	; () banked
  2888  014846  6F88               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2889  014848  D007               	goto	l6006
  2890  01484A                     l370:
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2894  01484A  0100               	movlb	0	; () banked
  2895  01484C  6988               	setf	CANInitialize@FilterConfig1& (0+255),b
  2896                           
  2897                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2898  01484E  0100               	movlb	0	; () banked
  2899  014850  6989               	setf	CANInitialize@FilterConfig2& (0+255),b
  2900                           
  2901                           ;inc\CANlib.h: 273: break;
  2902  014852  D028               	goto	l6012
  2903  014854                     l371:
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2907  014854  0100               	movlb	0	; () banked
  2908  014856  6988               	setf	CANInitialize@FilterConfig1& (0+255),b
  2909  014858                     l6006:
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2913  014858  0EF7               	movlw	247
  2914  01485A  0100               	movlb	0	; () banked
  2915  01485C  6F89               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;inc\CANlib.h: 278: }
  2919                           
  2920                           ;inc\CANlib.h: 277: break;
  2921  01485E  D022               	goto	l6012
  2922  014860                     l6010:
  2923  014860  0E9F               	movlw	159
  2924  014862  0100               	movlb	0	; () banked
  2925  014864  6F83               	movwf	??_CANInitialize& (0+255),b
  2926  014866  0EFF               	movlw	255
  2927  014868  0100               	movlb	0	; () banked
  2928  01486A  6F84               	movwf	(??_CANInitialize+1)& (0+255),b
  2929  01486C  0100               	movlb	0	; () banked
  2930  01486E  5182               	movf	CANInitialize@flags& (0+255),w,b
  2931  014870  0B60               	andlw	96
  2932  014872  0100               	movlb	0	; () banked
  2933  014874  6F85               	movwf	(??_CANInitialize+2)& (0+255),b
  2934  014876  6B86               	clrf	(??_CANInitialize+3)& (0+255),b
  2935  014878  0100               	movlb	0	; () banked
  2936  01487A  5183               	movf	??_CANInitialize& (0+255),w,b
  2937  01487C  0100               	movlb	0	; () banked
  2938  01487E  1385               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2939  014880  0100               	movlb	0	; () banked
  2940  014882  5184               	movf	(??_CANInitialize+1)& (0+255),w,b
  2941  014884  0100               	movlb	0	; () banked
  2942  014886  1386               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2943                           
  2944                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2945                           ; Switch size 1, requested type "space"
  2946                           ; Number of cases is 1, Range of values is 0 to 0
  2947                           ; switch strategies available:
  2948                           ; Name         Instructions Cycles
  2949                           ; simple_byte            4     3 (average)
  2950                           ;	Chosen strategy is simple_byte
  2951  014888  0100               	movlb	0	; () banked
  2952  01488A  5186               	movf	(??_CANInitialize+3)& (0+255),w,b
  2953  01488C  0A00               	xorlw	0	; case 0
  2954  01488E  A4D8               	btfss	status,2,c
  2955  014890  D7E1               	goto	l371
  2956                           
  2957                           ; BSR set to: 0
  2958                           ; Switch size 1, requested type "space"
  2959                           ; Number of cases is 2, Range of values is 191 to 223
  2960                           ; switch strategies available:
  2961                           ; Name         Instructions Cycles
  2962                           ; simple_byte            7     4 (average)
  2963                           ;	Chosen strategy is simple_byte
  2964  014892  0100               	movlb	0	; () banked
  2965  014894  5185               	movf	(??_CANInitialize+2)& (0+255),w,b
  2966  014896  0ABF               	xorlw	191	; case 191
  2967  014898  B4D8               	btfsc	status,2,c
  2968  01489A  D7D7               	goto	l370
  2969  01489C  0A60               	xorlw	96	; case 223
  2970  01489E  B4D8               	btfsc	status,2,c
  2971  0148A0  D7D0               	goto	l6004
  2972  0148A2  D7D8               	goto	l371
  2973  0148A4                     l6012:
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2977  0148A4  0E00               	movlw	0
  2978  0148A6  0100               	movlb	0	; () banked
  2979  0148A8  6F70               	movwf	CANSetFilter@filter& (0+255),b
  2980  0148AA  0E00               	movlw	0
  2981  0148AC  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2982  0148AE  0E00               	movlw	0
  2983  0148B0  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2984  0148B2  0E00               	movlw	0
  2985  0148B4  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2986  0148B6  C088  F074         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2987  0148BA  0E00               	movlw	0
  2988  0148BC  EC00  F080         	call	_CANSetFilter
  2989                           
  2990                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2991  0148C0  0E00               	movlw	0
  2992  0148C2  0100               	movlb	0	; () banked
  2993  0148C4  6F70               	movwf	CANSetFilter@filter& (0+255),b
  2994  0148C6  0E00               	movlw	0
  2995  0148C8  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2996  0148CA  0E00               	movlw	0
  2997  0148CC  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2998  0148CE  0E00               	movlw	0
  2999  0148D0  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3000  0148D2  C088  F074         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3001  0148D6  0E01               	movlw	1
  3002  0148D8  EC00  F080         	call	_CANSetFilter
  3003                           
  3004                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3005  0148DC  0E00               	movlw	0
  3006  0148DE  0100               	movlb	0	; () banked
  3007  0148E0  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3008  0148E2  0E00               	movlw	0
  3009  0148E4  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3010  0148E6  0E00               	movlw	0
  3011  0148E8  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3012  0148EA  0E00               	movlw	0
  3013  0148EC  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3014  0148EE  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3015  0148F2  0E02               	movlw	2
  3016  0148F4  EC00  F080         	call	_CANSetFilter
  3017                           
  3018                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3019  0148F8  0E00               	movlw	0
  3020  0148FA  0100               	movlb	0	; () banked
  3021  0148FC  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3022  0148FE  0E00               	movlw	0
  3023  014900  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3024  014902  0E00               	movlw	0
  3025  014904  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3026  014906  0E00               	movlw	0
  3027  014908  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3028  01490A  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3029  01490E  0E03               	movlw	3
  3030  014910  EC00  F080         	call	_CANSetFilter
  3031                           
  3032                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3033  014914  0E00               	movlw	0
  3034  014916  0100               	movlb	0	; () banked
  3035  014918  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3036  01491A  0E00               	movlw	0
  3037  01491C  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3038  01491E  0E00               	movlw	0
  3039  014920  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3040  014922  0E00               	movlw	0
  3041  014924  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3042  014926  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3043  01492A  0E04               	movlw	4
  3044  01492C  EC00  F080         	call	_CANSetFilter
  3045                           
  3046                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3047  014930  0E00               	movlw	0
  3048  014932  0100               	movlb	0	; () banked
  3049  014934  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3050  014936  0E00               	movlw	0
  3051  014938  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3052  01493A  0E00               	movlw	0
  3053  01493C  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3054  01493E  0E00               	movlw	0
  3055  014940  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3056  014942  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3057  014946  0E05               	movlw	5
  3058  014948  EC00  F080         	call	_CANSetFilter
  3059                           
  3060                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3061  01494C  0E00               	movlw	0
  3062  01494E  ECB1  F0B0         	call	_CANOperationMode
  3063  014952  0012               	return		;funcret
  3064  014954                     __end_of_CANInitialize:
  3065                           	opt stack 0
  3066                           tblptru	equ	0xFF8
  3067                           tblptrh	equ	0xFF7
  3068                           tblptrl	equ	0xFF6
  3069                           tablat	equ	0xFF5
  3070                           intcon	equ	0xFF2
  3071                           postinc0	equ	0xFEE
  3072                           wreg	equ	0xFE8
  3073                           status	equ	0xFD8
  3074                           
  3075 ;; *************** function _CANSetMask *****************
  3076 ;; Defined at:
  3077 ;;		line 640 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  numBuffer       1    wreg     enum E16921
  3080 ;;  mask            4   16[BANK0 ] unsigned long 
  3081 ;;  type            1   20[BANK0 ] enum E16887
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  numBuffer       1   25[BANK0 ] enum E16921
  3084 ;;  tamp            4   26[BANK0 ] unsigned long 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;		None               void
  3087 ;; Registers used:
  3088 ;;		wreg, status,2, status,0
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3094 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3095 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3096 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3097 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3098 ;;Total ram usage:       14 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    3
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_CANInitialize
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text3
  3109  013F2C                     __ptext3:
  3110                           	opt stack 0
  3111  013F2C                     _CANSetMask:
  3112                           	opt stack 25
  3113                           
  3114                           ;incstack = 0
  3115                           ;CANSetMask@numBuffer stored from wreg
  3116  013F2C  0100               	movlb	0	; () banked
  3117  013F2E  6F79               	movwf	CANSetMask@numBuffer& (0+255),b
  3118                           
  3119                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3120  013F30  0100               	movlb	0	; () banked
  3121  013F32  0579               	decf	CANSetMask@numBuffer& (0+255),w,b
  3122  013F34  A4D8               	btfss	status,2,c
  3123  013F36  D056               	goto	l5180
  3124                           
  3125                           ; BSR set to: 0
  3126  013F38  0100               	movlb	0	; () banked
  3127  013F3A  2974               	incf	CANSetMask@type& (0+255),w,b
  3128  013F3C  A4D8               	btfss	status,2,c
  3129  013F3E  D052               	goto	l5180
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;inc\CANlib.h: 644: {
  3133                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3134  013F40  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  3135  013F44  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3136  013F48  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3137  013F4C  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3138  013F50  0E04               	movlw	4
  3139  013F52  D006               	goto	u5820
  3140  013F54                     u5825:
  3141  013F54  0100               	movlb	0	; () banked
  3142  013F56  90D8               	bcf	status,0,c
  3143  013F58  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3144  013F5A  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3145  013F5C  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3146  013F5E  3375               	rrcf	??_CANSetMask& (0+255),f,b
  3147  013F60                     u5820:
  3148  013F60  2EE8               	decfsz	wreg,f,c
  3149  013F62  D7F8               	goto	u5825
  3150  013F64  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3151  013F68  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3152  013F6C  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3153  013F70  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3157  013F74  0100               	movlb	0	; () banked
  3158  013F76  517A               	movf	CANSetMask@tamp& (0+255),w,b
  3159  013F78  0100               	movlb	0	; () banked
  3160  013F7A  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3161  013F7C  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3162  013F7E  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3163  013F80  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3167  013F82  C07A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3171  013F86  0E07               	movlw	7
  3172  013F88  0100               	movlb	0	; () banked
  3173  013F8A  1570               	andwf	CANSetMask@mask& (0+255),w,b
  3174  013F8C  0100               	movlb	0	; () banked
  3175  013F8E  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3176  013F90  0E00               	movlw	0
  3177  013F92  0100               	movlb	0	; () banked
  3178  013F94  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3179  013F96  0100               	movlb	0	; () banked
  3180  013F98  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3181  013F9A  0E00               	movlw	0
  3182  013F9C  0100               	movlb	0	; () banked
  3183  013F9E  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3184  013FA0  0100               	movlb	0	; () banked
  3185  013FA2  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3186  013FA4  0E00               	movlw	0
  3187  013FA6  0100               	movlb	0	; () banked
  3188  013FA8  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3189  013FAA  0100               	movlb	0	; () banked
  3190  013FAC  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3194  013FAE  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  3195  013FB2  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3196  013FB6  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3197  013FBA  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3198  013FBE  0E05               	movlw	5
  3199  013FC0                     u5835:
  3200  013FC0  90D8               	bcf	status,0,c
  3201  013FC2  0100               	movlb	0	; () banked
  3202  013FC4  3775               	rlcf	??_CANSetMask& (0+255),f,b
  3203  013FC6  3776               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3204  013FC8  3777               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3205  013FCA  3778               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3206  013FCC  2EE8               	decfsz	wreg,f,c
  3207  013FCE  D7F8               	goto	u5835
  3208  013FD0  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3209  013FD4  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3210  013FD8  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3211  013FDC  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3215  013FE0  C07A  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3216  013FE4                     l5180:
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;inc\CANlib.h: 652: }
  3220                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3221  013FE4  0E02               	movlw	2
  3222  013FE6  0100               	movlb	0	; () banked
  3223  013FE8  1979               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3224  013FEA  A4D8               	btfss	status,2,c
  3225  013FEC  D056               	goto	l5196
  3226                           
  3227                           ; BSR set to: 0
  3228  013FEE  0100               	movlb	0	; () banked
  3229  013FF0  2974               	incf	CANSetMask@type& (0+255),w,b
  3230  013FF2  A4D8               	btfss	status,2,c
  3231  013FF4  D052               	goto	l5196
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;inc\CANlib.h: 655: {
  3235                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3236  013FF6  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  3237  013FFA  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3238  013FFE  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3239  014002  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3240  014006  0E04               	movlw	4
  3241  014008  D006               	goto	u5860
  3242  01400A                     u5865:
  3243  01400A  0100               	movlb	0	; () banked
  3244  01400C  90D8               	bcf	status,0,c
  3245  01400E  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3246  014010  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3247  014012  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3248  014014  3375               	rrcf	??_CANSetMask& (0+255),f,b
  3249  014016                     u5860:
  3250  014016  2EE8               	decfsz	wreg,f,c
  3251  014018  D7F8               	goto	u5865
  3252  01401A  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3253  01401E  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3254  014022  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3255  014026  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3259  01402A  0100               	movlb	0	; () banked
  3260  01402C  517A               	movf	CANSetMask@tamp& (0+255),w,b
  3261  01402E  0100               	movlb	0	; () banked
  3262  014030  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3263  014032  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3264  014034  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3265  014036  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3269  014038  C07A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3273  01403C  0E07               	movlw	7
  3274  01403E  0100               	movlb	0	; () banked
  3275  014040  1570               	andwf	CANSetMask@mask& (0+255),w,b
  3276  014042  0100               	movlb	0	; () banked
  3277  014044  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3278  014046  0E00               	movlw	0
  3279  014048  0100               	movlb	0	; () banked
  3280  01404A  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3281  01404C  0100               	movlb	0	; () banked
  3282  01404E  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3283  014050  0E00               	movlw	0
  3284  014052  0100               	movlb	0	; () banked
  3285  014054  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3286  014056  0100               	movlb	0	; () banked
  3287  014058  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3288  01405A  0E00               	movlw	0
  3289  01405C  0100               	movlb	0	; () banked
  3290  01405E  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3291  014060  0100               	movlb	0	; () banked
  3292  014062  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3296  014064  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  3297  014068  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3298  01406C  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3299  014070  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3300  014074  0E05               	movlw	5
  3301  014076                     u5875:
  3302  014076  90D8               	bcf	status,0,c
  3303  014078  0100               	movlb	0	; () banked
  3304  01407A  3775               	rlcf	??_CANSetMask& (0+255),f,b
  3305  01407C  3776               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3306  01407E  3777               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3307  014080  3778               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3308  014082  2EE8               	decfsz	wreg,f,c
  3309  014084  D7F8               	goto	u5875
  3310  014086  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3311  01408A  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3312  01408E  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3313  014092  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3317  014096  C07A  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3318  01409A                     l5196:
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;inc\CANlib.h: 663: }
  3322                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3323  01409A  0100               	movlb	0	; () banked
  3324  01409C  0579               	decf	CANSetMask@numBuffer& (0+255),w,b
  3325  01409E  A4D8               	btfss	status,2,c
  3326  0140A0  D087               	goto	l5228
  3327                           
  3328                           ; BSR set to: 0
  3329  0140A2  0EF7               	movlw	247
  3330  0140A4  0100               	movlb	0	; () banked
  3331  0140A6  1974               	xorwf	CANSetMask@type& (0+255),w,b
  3332  0140A8  A4D8               	btfss	status,2,c
  3333  0140AA  D082               	goto	l5228
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;inc\CANlib.h: 666: {
  3337                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3338  0140AC  0100               	movlb	0	; () banked
  3339  0140AE  5170               	movf	CANSetMask@mask& (0+255),w,b
  3340  0140B0  0100               	movlb	0	; () banked
  3341  0140B2  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3342  0140B4  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3343  0140B6  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3344  0140B8  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3348  0140BA  C07A  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3352  0140BE  0E00               	movlw	0
  3353  0140C0  0100               	movlb	0	; () banked
  3354  0140C2  1570               	andwf	CANSetMask@mask& (0+255),w,b
  3355  0140C4  0100               	movlb	0	; () banked
  3356  0140C6  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3357  0140C8  0EFF               	movlw	255
  3358  0140CA  0100               	movlb	0	; () banked
  3359  0140CC  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3360  0140CE  0100               	movlb	0	; () banked
  3361  0140D0  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3362  0140D2  0E00               	movlw	0
  3363  0140D4  0100               	movlb	0	; () banked
  3364  0140D6  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3365  0140D8  0100               	movlb	0	; () banked
  3366  0140DA  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3367  0140DC  0E00               	movlw	0
  3368  0140DE  0100               	movlb	0	; () banked
  3369  0140E0  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3370  0140E2  0100               	movlb	0	; () banked
  3371  0140E4  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3375  0140E6  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  3376  0140EA  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3377  0140EE  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3378  0140F2  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3379  0140F6  C076  F075         	movff	??_CANSetMask+1,??_CANSetMask
  3380  0140FA  C077  F076         	movff	??_CANSetMask+2,??_CANSetMask+1
  3381  0140FE  C078  F077         	movff	??_CANSetMask+3,??_CANSetMask+2
  3382  014102  0100               	movlb	0	; () banked
  3383  014104  6B78               	clrf	(??_CANSetMask+3)& (0+255),b
  3384  014106  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3385  01410A  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3386  01410E  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3387  014112  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3391  014116  C07A  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3395  01411A  0100               	movlb	0	; () banked
  3396  01411C  A172               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3397  01411E  D003               	goto	l444
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3401  014120  010F               	movlb	15	; () banked
  3402  014122  8119               	bsf	25,0,b	;volatile
  3403  014124  D002               	goto	l445
  3404  014126                     l444:
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;inc\CANlib.h: 676: else
  3408                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3409  014126  010F               	movlb	15	; () banked
  3410  014128  9119               	bcf	25,0,b	;volatile
  3411  01412A                     l445:
  3412                           
  3413                           ; BSR set to: 15
  3414                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3415  01412A  0100               	movlb	0	; () banked
  3416  01412C  A372               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3417  01412E  D003               	goto	l446
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3421  014130  010F               	movlb	15	; () banked
  3422  014132  8319               	bsf	25,1,b	;volatile
  3423  014134  D002               	goto	l447
  3424  014136                     l446:
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;inc\CANlib.h: 681: else
  3428                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3429  014136  010F               	movlb	15	; () banked
  3430  014138  9319               	bcf	25,1,b	;volatile
  3431  01413A                     l447:
  3432                           
  3433                           ; BSR set to: 15
  3434                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3435  01413A  0100               	movlb	0	; () banked
  3436  01413C  A572               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3437  01413E  D003               	goto	l448
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3441  014140  010F               	movlb	15	; () banked
  3442  014142  8B19               	bsf	25,5,b	;volatile
  3443  014144  D002               	goto	l449
  3444  014146                     l448:
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;inc\CANlib.h: 686: else
  3448                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3449  014146  010F               	movlb	15	; () banked
  3450  014148  9B19               	bcf	25,5,b	;volatile
  3451  01414A                     l449:
  3452                           
  3453                           ; BSR set to: 15
  3454                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3455  01414A  0100               	movlb	0	; () banked
  3456  01414C  A772               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3457  01414E  D003               	goto	l450
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3461  014150  010F               	movlb	15	; () banked
  3462  014152  8D19               	bsf	25,6,b	;volatile
  3463  014154  D002               	goto	l451
  3464  014156                     l450:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;inc\CANlib.h: 691: else
  3468                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3469  014156  010F               	movlb	15	; () banked
  3470  014158  9D19               	bcf	25,6,b	;volatile
  3471  01415A                     l451:
  3472                           
  3473                           ; BSR set to: 15
  3474                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3475  01415A  0100               	movlb	0	; () banked
  3476  01415C  A972               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3477  01415E  D003               	goto	l452
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3481  014160  010F               	movlb	15	; () banked
  3482  014162  8F19               	bsf	25,7,b	;volatile
  3483  014164  D002               	goto	l5222
  3484  014166                     l452:
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;inc\CANlib.h: 696: else
  3488                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3489  014166  010F               	movlb	15	; () banked
  3490  014168  9F19               	bcf	25,7,b	;volatile
  3491  01416A                     l5222:
  3492                           
  3493                           ; BSR set to: 15
  3494                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3495  01416A  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  3496  01416E  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3497  014172  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3498  014176  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3499  01417A  0E16               	movlw	22
  3500  01417C  D006               	goto	u5950
  3501  01417E                     u5955:
  3502  01417E  0100               	movlb	0	; () banked
  3503  014180  90D8               	bcf	status,0,c
  3504  014182  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3505  014184  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3506  014186  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3507  014188  3375               	rrcf	??_CANSetMask& (0+255),f,b
  3508  01418A                     u5950:
  3509  01418A  2EE8               	decfsz	wreg,f,c
  3510  01418C  D7F8               	goto	u5955
  3511  01418E  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3512  014192  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3513  014196  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3514  01419A  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3518  01419E  0100               	movlb	0	; () banked
  3519  0141A0  517A               	movf	CANSetMask@tamp& (0+255),w,b
  3520  0141A2  0100               	movlb	0	; () banked
  3521  0141A4  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3522  0141A6  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3523  0141A8  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3524  0141AA  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3528  0141AC  C07A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3529  0141B0                     l5228:
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;inc\CANlib.h: 702: }
  3533                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3534  0141B0  0E02               	movlw	2
  3535  0141B2  0100               	movlb	0	; () banked
  3536  0141B4  1979               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3537  0141B6  A4D8               	btfss	status,2,c
  3538  0141B8  0012               	return	
  3539                           
  3540                           ; BSR set to: 0
  3541  0141BA  0EF7               	movlw	247
  3542  0141BC  0100               	movlb	0	; () banked
  3543  0141BE  1974               	xorwf	CANSetMask@type& (0+255),w,b
  3544  0141C0  A4D8               	btfss	status,2,c
  3545  0141C2  0012               	return	
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;inc\CANlib.h: 705: {
  3549                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3550  0141C4  0100               	movlb	0	; () banked
  3551  0141C6  5170               	movf	CANSetMask@mask& (0+255),w,b
  3552  0141C8  0100               	movlb	0	; () banked
  3553  0141CA  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3554  0141CC  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3555  0141CE  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3556  0141D0  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3560  0141D2  C07A  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3564  0141D6  0E00               	movlw	0
  3565  0141D8  0100               	movlb	0	; () banked
  3566  0141DA  1570               	andwf	CANSetMask@mask& (0+255),w,b
  3567  0141DC  0100               	movlb	0	; () banked
  3568  0141DE  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3569  0141E0  0EFF               	movlw	255
  3570  0141E2  0100               	movlb	0	; () banked
  3571  0141E4  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3572  0141E6  0100               	movlb	0	; () banked
  3573  0141E8  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3574  0141EA  0E00               	movlw	0
  3575  0141EC  0100               	movlb	0	; () banked
  3576  0141EE  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3577  0141F0  0100               	movlb	0	; () banked
  3578  0141F2  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3579  0141F4  0E00               	movlw	0
  3580  0141F6  0100               	movlb	0	; () banked
  3581  0141F8  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3582  0141FA  0100               	movlb	0	; () banked
  3583  0141FC  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3587  0141FE  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  3588  014202  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3589  014206  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3590  01420A  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3591  01420E  C076  F075         	movff	??_CANSetMask+1,??_CANSetMask
  3592  014212  C077  F076         	movff	??_CANSetMask+2,??_CANSetMask+1
  3593  014216  C078  F077         	movff	??_CANSetMask+3,??_CANSetMask+2
  3594  01421A  0100               	movlb	0	; () banked
  3595  01421C  6B78               	clrf	(??_CANSetMask+3)& (0+255),b
  3596  01421E  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3597  014222  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3598  014226  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3599  01422A  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3603  01422E  C07A  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3607  014232  0100               	movlb	0	; () banked
  3608  014234  A172               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3609  014236  D003               	goto	l455
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3613  014238  010F               	movlb	15	; () banked
  3614  01423A  811D               	bsf	29,0,b	;volatile
  3615  01423C  D002               	goto	l456
  3616  01423E                     l455:
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;inc\CANlib.h: 715: else
  3620                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3621  01423E  010F               	movlb	15	; () banked
  3622  014240  911D               	bcf	29,0,b	;volatile
  3623  014242                     l456:
  3624                           
  3625                           ; BSR set to: 15
  3626                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3627  014242  0100               	movlb	0	; () banked
  3628  014244  A372               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3629  014246  D003               	goto	l457
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3633  014248  010F               	movlb	15	; () banked
  3634  01424A  831D               	bsf	29,1,b	;volatile
  3635  01424C  D002               	goto	l458
  3636  01424E                     l457:
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;inc\CANlib.h: 720: else
  3640                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3641  01424E  010F               	movlb	15	; () banked
  3642  014250  931D               	bcf	29,1,b	;volatile
  3643  014252                     l458:
  3644                           
  3645                           ; BSR set to: 15
  3646                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3647  014252  0100               	movlb	0	; () banked
  3648  014254  A572               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3649  014256  D003               	goto	l459
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3653  014258  010F               	movlb	15	; () banked
  3654  01425A  8B1D               	bsf	29,5,b	;volatile
  3655  01425C  D002               	goto	l460
  3656  01425E                     l459:
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;inc\CANlib.h: 725: else
  3660                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3661  01425E  010F               	movlb	15	; () banked
  3662  014260  9B1D               	bcf	29,5,b	;volatile
  3663  014262                     l460:
  3664                           
  3665                           ; BSR set to: 15
  3666                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3667  014262  0100               	movlb	0	; () banked
  3668  014264  A772               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3669  014266  D003               	goto	l461
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3673  014268  010F               	movlb	15	; () banked
  3674  01426A  8D1D               	bsf	29,6,b	;volatile
  3675  01426C  D002               	goto	l462
  3676  01426E                     l461:
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;inc\CANlib.h: 730: else
  3680                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3681  01426E  010F               	movlb	15	; () banked
  3682  014270  9D1D               	bcf	29,6,b	;volatile
  3683  014272                     l462:
  3684                           
  3685                           ; BSR set to: 15
  3686                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3687  014272  0100               	movlb	0	; () banked
  3688  014274  A972               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3689  014276  D003               	goto	l463
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3693  014278  010F               	movlb	15	; () banked
  3694  01427A  8F1D               	bsf	29,7,b	;volatile
  3695  01427C  D002               	goto	l5254
  3696  01427E                     l463:
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;inc\CANlib.h: 735: else
  3700                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3701  01427E  010F               	movlb	15	; () banked
  3702  014280  9F1D               	bcf	29,7,b	;volatile
  3703  014282                     l5254:
  3704                           
  3705                           ; BSR set to: 15
  3706                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3707  014282  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  3708  014286  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3709  01428A  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3710  01428E  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3711  014292  0E16               	movlw	22
  3712  014294  D006               	goto	u6030
  3713  014296                     u6035:
  3714  014296  0100               	movlb	0	; () banked
  3715  014298  90D8               	bcf	status,0,c
  3716  01429A  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3717  01429C  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3718  01429E  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3719  0142A0  3375               	rrcf	??_CANSetMask& (0+255),f,b
  3720  0142A2                     u6030:
  3721  0142A2  2EE8               	decfsz	wreg,f,c
  3722  0142A4  D7F8               	goto	u6035
  3723  0142A6  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3724  0142AA  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3725  0142AE  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3726  0142B2  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3730  0142B6  0100               	movlb	0	; () banked
  3731  0142B8  517A               	movf	CANSetMask@tamp& (0+255),w,b
  3732  0142BA  0100               	movlb	0	; () banked
  3733  0142BC  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3734  0142BE  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3735  0142C0  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3736  0142C2  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3740  0142C4  C07A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3741  0142C8  0012               	return	
  3742  0142CA                     __end_of_CANSetMask:
  3743                           	opt stack 0
  3744                           tblptru	equ	0xFF8
  3745                           tblptrh	equ	0xFF7
  3746                           tblptrl	equ	0xFF6
  3747                           tablat	equ	0xFF5
  3748                           intcon	equ	0xFF2
  3749                           postinc0	equ	0xFEE
  3750                           wreg	equ	0xFE8
  3751                           status	equ	0xFD8
  3752                           
  3753 ;; *************** function _CANSetFilter *****************
  3754 ;; Defined at:
  3755 ;;		line 748 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  numBuffer       1    wreg     enum E16924
  3758 ;;  filter          4   16[BANK0 ] unsigned long 
  3759 ;;  type            1   20[BANK0 ] enum E16887
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  numBuffer       1   25[BANK0 ] enum E16924
  3762 ;;  tamp            4   26[BANK0 ] unsigned long 
  3763 ;; Return value:  Size  Location     Type
  3764 ;;		None               void
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3772 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3773 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3774 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3775 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3776 ;;Total ram usage:       14 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    3
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_CANInitialize
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text4
  3787  010000                     __ptext4:
  3788                           	opt stack 0
  3789  010000                     _CANSetFilter:
  3790                           	opt stack 25
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;incstack = 0
  3794                           ;CANSetFilter@numBuffer stored from wreg
  3795  010000  0100               	movlb	0	; () banked
  3796  010002  6F79               	movwf	CANSetFilter@numBuffer& (0+255),b
  3797                           
  3798                           ;inc\CANlib.h: 750: unsigned long tamp;
  3799                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3800  010004  0100               	movlb	0	; () banked
  3801  010006  5179               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3802  010008  0100               	movlb	0	; () banked
  3803  01000A  A4D8               	btfss	status,2,c
  3804  01000C  D058               	goto	l5278
  3805                           
  3806                           ; BSR set to: 0
  3807  01000E  0100               	movlb	0	; () banked
  3808  010010  2974               	incf	CANSetFilter@type& (0+255),w,b
  3809  010012  A4D8               	btfss	status,2,c
  3810  010014  D054               	goto	l5278
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;inc\CANlib.h: 753: {
  3814                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3815  010016  010F               	movlb	15	; () banked
  3816  010018  9701               	bcf	1,3,b	;volatile
  3817                           
  3818                           ; BSR set to: 15
  3819                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  3820  01001A  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  3821  01001E  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3822  010022  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3823  010026  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3824  01002A  0E04               	movlw	4
  3825  01002C  D006               	goto	u6060
  3826  01002E                     u6065:
  3827  01002E  0100               	movlb	0	; () banked
  3828  010030  90D8               	bcf	status,0,c
  3829  010032  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3830  010034  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3831  010036  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3832  010038  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  3833  01003A                     u6060:
  3834  01003A  2EE8               	decfsz	wreg,f,c
  3835  01003C  D7F8               	goto	u6065
  3836  01003E  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  3837  010042  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3838  010046  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3839  01004A  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  3843  01004E  0100               	movlb	0	; () banked
  3844  010050  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  3845  010052  0100               	movlb	0	; () banked
  3846  010054  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  3847  010056  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3848  010058  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3849  01005A  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3853  01005C  C07A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  3857  010060  0E07               	movlw	7
  3858  010062  0100               	movlb	0	; () banked
  3859  010064  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  3860  010066  0100               	movlb	0	; () banked
  3861  010068  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  3862  01006A  0E00               	movlw	0
  3863  01006C  0100               	movlb	0	; () banked
  3864  01006E  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3865  010070  0100               	movlb	0	; () banked
  3866  010072  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3867  010074  0E00               	movlw	0
  3868  010076  0100               	movlb	0	; () banked
  3869  010078  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3870  01007A  0100               	movlb	0	; () banked
  3871  01007C  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3872  01007E  0E00               	movlw	0
  3873  010080  0100               	movlb	0	; () banked
  3874  010082  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3875  010084  0100               	movlb	0	; () banked
  3876  010086  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  3880  010088  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  3881  01008C  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3882  010090  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3883  010094  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3884  010098  0E05               	movlw	5
  3885  01009A                     u6075:
  3886  01009A  90D8               	bcf	status,0,c
  3887  01009C  0100               	movlb	0	; () banked
  3888  01009E  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  3889  0100A0  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3890  0100A2  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3891  0100A4  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3892  0100A6  2EE8               	decfsz	wreg,f,c
  3893  0100A8  D7F8               	goto	u6075
  3894  0100AA  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  3895  0100AE  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3896  0100B2  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3897  0100B6  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3901  0100BA  C07A  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3902  0100BE                     l5278:
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;inc\CANlib.h: 763: }
  3906                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3907  0100BE  0100               	movlb	0	; () banked
  3908  0100C0  0579               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3909  0100C2  A4D8               	btfss	status,2,c
  3910  0100C4  D058               	goto	l5296
  3911                           
  3912                           ; BSR set to: 0
  3913  0100C6  0100               	movlb	0	; () banked
  3914  0100C8  2974               	incf	CANSetFilter@type& (0+255),w,b
  3915  0100CA  A4D8               	btfss	status,2,c
  3916  0100CC  D054               	goto	l5296
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;inc\CANlib.h: 766: {
  3920                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3921  0100CE  010F               	movlb	15	; () banked
  3922  0100D0  9705               	bcf	5,3,b	;volatile
  3923                           
  3924                           ; BSR set to: 15
  3925                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  3926  0100D2  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  3927  0100D6  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3928  0100DA  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3929  0100DE  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3930  0100E2  0E04               	movlw	4
  3931  0100E4  D006               	goto	u6100
  3932  0100E6                     u6105:
  3933  0100E6  0100               	movlb	0	; () banked
  3934  0100E8  90D8               	bcf	status,0,c
  3935  0100EA  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3936  0100EC  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3937  0100EE  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3938  0100F0  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  3939  0100F2                     u6100:
  3940  0100F2  2EE8               	decfsz	wreg,f,c
  3941  0100F4  D7F8               	goto	u6105
  3942  0100F6  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  3943  0100FA  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3944  0100FE  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3945  010102  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  3949  010106  0100               	movlb	0	; () banked
  3950  010108  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  3951  01010A  0100               	movlb	0	; () banked
  3952  01010C  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  3953  01010E  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3954  010110  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3955  010112  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3959  010114  C07A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  3963  010118  0E07               	movlw	7
  3964  01011A  0100               	movlb	0	; () banked
  3965  01011C  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  3966  01011E  0100               	movlb	0	; () banked
  3967  010120  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  3968  010122  0E00               	movlw	0
  3969  010124  0100               	movlb	0	; () banked
  3970  010126  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3971  010128  0100               	movlb	0	; () banked
  3972  01012A  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3973  01012C  0E00               	movlw	0
  3974  01012E  0100               	movlb	0	; () banked
  3975  010130  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3976  010132  0100               	movlb	0	; () banked
  3977  010134  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3978  010136  0E00               	movlw	0
  3979  010138  0100               	movlb	0	; () banked
  3980  01013A  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3981  01013C  0100               	movlb	0	; () banked
  3982  01013E  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  3986  010140  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  3987  010144  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3988  010148  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3989  01014C  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3990  010150  0E05               	movlw	5
  3991  010152                     u6115:
  3992  010152  90D8               	bcf	status,0,c
  3993  010154  0100               	movlb	0	; () banked
  3994  010156  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  3995  010158  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3996  01015A  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3997  01015C  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3998  01015E  2EE8               	decfsz	wreg,f,c
  3999  010160  D7F8               	goto	u6115
  4000  010162  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4001  010166  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4002  01016A  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4003  01016E  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4007  010172  C07A  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4008  010176                     l5296:
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;inc\CANlib.h: 776: }
  4012                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4013  010176  0E02               	movlw	2
  4014  010178  0100               	movlb	0	; () banked
  4015  01017A  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4016  01017C  A4D8               	btfss	status,2,c
  4017  01017E  D058               	goto	l5314
  4018                           
  4019                           ; BSR set to: 0
  4020  010180  0100               	movlb	0	; () banked
  4021  010182  2974               	incf	CANSetFilter@type& (0+255),w,b
  4022  010184  A4D8               	btfss	status,2,c
  4023  010186  D054               	goto	l5314
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;inc\CANlib.h: 779: {
  4027                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4028  010188  010F               	movlb	15	; () banked
  4029  01018A  9709               	bcf	9,3,b	;volatile
  4030                           
  4031                           ; BSR set to: 15
  4032                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4033  01018C  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4034  010190  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4035  010194  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4036  010198  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4037  01019C  0E04               	movlw	4
  4038  01019E  D006               	goto	u6140
  4039  0101A0                     u6145:
  4040  0101A0  0100               	movlb	0	; () banked
  4041  0101A2  90D8               	bcf	status,0,c
  4042  0101A4  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4043  0101A6  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4044  0101A8  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4045  0101AA  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4046  0101AC                     u6140:
  4047  0101AC  2EE8               	decfsz	wreg,f,c
  4048  0101AE  D7F8               	goto	u6145
  4049  0101B0  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4050  0101B4  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4051  0101B8  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4052  0101BC  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4056  0101C0  0100               	movlb	0	; () banked
  4057  0101C2  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4058  0101C4  0100               	movlb	0	; () banked
  4059  0101C6  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4060  0101C8  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4061  0101CA  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4062  0101CC  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4066  0101CE  C07A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4070  0101D2  0E07               	movlw	7
  4071  0101D4  0100               	movlb	0	; () banked
  4072  0101D6  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4073  0101D8  0100               	movlb	0	; () banked
  4074  0101DA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4075  0101DC  0E00               	movlw	0
  4076  0101DE  0100               	movlb	0	; () banked
  4077  0101E0  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4078  0101E2  0100               	movlb	0	; () banked
  4079  0101E4  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4080  0101E6  0E00               	movlw	0
  4081  0101E8  0100               	movlb	0	; () banked
  4082  0101EA  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4083  0101EC  0100               	movlb	0	; () banked
  4084  0101EE  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4085  0101F0  0E00               	movlw	0
  4086  0101F2  0100               	movlb	0	; () banked
  4087  0101F4  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4088  0101F6  0100               	movlb	0	; () banked
  4089  0101F8  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4093  0101FA  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4094  0101FE  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4095  010202  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4096  010206  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4097  01020A  0E05               	movlw	5
  4098  01020C                     u6155:
  4099  01020C  90D8               	bcf	status,0,c
  4100  01020E  0100               	movlb	0	; () banked
  4101  010210  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4102  010212  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4103  010214  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4104  010216  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4105  010218  2EE8               	decfsz	wreg,f,c
  4106  01021A  D7F8               	goto	u6155
  4107  01021C  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4108  010220  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4109  010224  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4110  010228  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4114  01022C  C07A  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4115  010230                     l5314:
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;inc\CANlib.h: 789: }
  4119                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4120  010230  0E03               	movlw	3
  4121  010232  0100               	movlb	0	; () banked
  4122  010234  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4123  010236  A4D8               	btfss	status,2,c
  4124  010238  D058               	goto	l5332
  4125                           
  4126                           ; BSR set to: 0
  4127  01023A  0100               	movlb	0	; () banked
  4128  01023C  2974               	incf	CANSetFilter@type& (0+255),w,b
  4129  01023E  A4D8               	btfss	status,2,c
  4130  010240  D054               	goto	l5332
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;inc\CANlib.h: 792: {
  4134                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4135  010242  010F               	movlb	15	; () banked
  4136  010244  970D               	bcf	13,3,b	;volatile
  4137                           
  4138                           ; BSR set to: 15
  4139                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4140  010246  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4141  01024A  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4142  01024E  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4143  010252  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4144  010256  0E04               	movlw	4
  4145  010258  D006               	goto	u6180
  4146  01025A                     u6185:
  4147  01025A  0100               	movlb	0	; () banked
  4148  01025C  90D8               	bcf	status,0,c
  4149  01025E  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4150  010260  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4151  010262  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4152  010264  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4153  010266                     u6180:
  4154  010266  2EE8               	decfsz	wreg,f,c
  4155  010268  D7F8               	goto	u6185
  4156  01026A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4157  01026E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4158  010272  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4159  010276  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4163  01027A  0100               	movlb	0	; () banked
  4164  01027C  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4165  01027E  0100               	movlb	0	; () banked
  4166  010280  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4167  010282  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4168  010284  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4169  010286  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4173  010288  C07A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4177  01028C  0E07               	movlw	7
  4178  01028E  0100               	movlb	0	; () banked
  4179  010290  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4180  010292  0100               	movlb	0	; () banked
  4181  010294  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4182  010296  0E00               	movlw	0
  4183  010298  0100               	movlb	0	; () banked
  4184  01029A  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4185  01029C  0100               	movlb	0	; () banked
  4186  01029E  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4187  0102A0  0E00               	movlw	0
  4188  0102A2  0100               	movlb	0	; () banked
  4189  0102A4  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4190  0102A6  0100               	movlb	0	; () banked
  4191  0102A8  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4192  0102AA  0E00               	movlw	0
  4193  0102AC  0100               	movlb	0	; () banked
  4194  0102AE  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4195  0102B0  0100               	movlb	0	; () banked
  4196  0102B2  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4200  0102B4  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4201  0102B8  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4202  0102BC  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4203  0102C0  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4204  0102C4  0E05               	movlw	5
  4205  0102C6                     u6195:
  4206  0102C6  90D8               	bcf	status,0,c
  4207  0102C8  0100               	movlb	0	; () banked
  4208  0102CA  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4209  0102CC  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4210  0102CE  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4211  0102D0  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4212  0102D2  2EE8               	decfsz	wreg,f,c
  4213  0102D4  D7F8               	goto	u6195
  4214  0102D6  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4215  0102DA  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4216  0102DE  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4217  0102E2  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4221  0102E6  C07A  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4222  0102EA                     l5332:
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;inc\CANlib.h: 802: }
  4226                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4227  0102EA  0E04               	movlw	4
  4228  0102EC  0100               	movlb	0	; () banked
  4229  0102EE  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4230  0102F0  A4D8               	btfss	status,2,c
  4231  0102F2  D058               	goto	l5350
  4232                           
  4233                           ; BSR set to: 0
  4234  0102F4  0100               	movlb	0	; () banked
  4235  0102F6  2974               	incf	CANSetFilter@type& (0+255),w,b
  4236  0102F8  A4D8               	btfss	status,2,c
  4237  0102FA  D054               	goto	l5350
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;inc\CANlib.h: 805: {
  4241                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4242  0102FC  010F               	movlb	15	; () banked
  4243  0102FE  9711               	bcf	17,3,b	;volatile
  4244                           
  4245                           ; BSR set to: 15
  4246                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4247  010300  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4248  010304  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4249  010308  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4250  01030C  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4251  010310  0E04               	movlw	4
  4252  010312  D006               	goto	u6220
  4253  010314                     u6225:
  4254  010314  0100               	movlb	0	; () banked
  4255  010316  90D8               	bcf	status,0,c
  4256  010318  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4257  01031A  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4258  01031C  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4259  01031E  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4260  010320                     u6220:
  4261  010320  2EE8               	decfsz	wreg,f,c
  4262  010322  D7F8               	goto	u6225
  4263  010324  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4264  010328  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4265  01032C  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4266  010330  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4270  010334  0100               	movlb	0	; () banked
  4271  010336  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4272  010338  0100               	movlb	0	; () banked
  4273  01033A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4274  01033C  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4275  01033E  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4276  010340  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4280  010342  C07A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4284  010346  0E07               	movlw	7
  4285  010348  0100               	movlb	0	; () banked
  4286  01034A  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4287  01034C  0100               	movlb	0	; () banked
  4288  01034E  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4289  010350  0E00               	movlw	0
  4290  010352  0100               	movlb	0	; () banked
  4291  010354  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4292  010356  0100               	movlb	0	; () banked
  4293  010358  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4294  01035A  0E00               	movlw	0
  4295  01035C  0100               	movlb	0	; () banked
  4296  01035E  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4297  010360  0100               	movlb	0	; () banked
  4298  010362  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4299  010364  0E00               	movlw	0
  4300  010366  0100               	movlb	0	; () banked
  4301  010368  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4302  01036A  0100               	movlb	0	; () banked
  4303  01036C  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4307  01036E  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4308  010372  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4309  010376  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4310  01037A  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4311  01037E  0E05               	movlw	5
  4312  010380                     u6235:
  4313  010380  90D8               	bcf	status,0,c
  4314  010382  0100               	movlb	0	; () banked
  4315  010384  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4316  010386  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4317  010388  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4318  01038A  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4319  01038C  2EE8               	decfsz	wreg,f,c
  4320  01038E  D7F8               	goto	u6235
  4321  010390  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4322  010394  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4323  010398  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4324  01039C  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4328  0103A0  C07A  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4329  0103A4                     l5350:
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;inc\CANlib.h: 815: }
  4333                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4334  0103A4  0E05               	movlw	5
  4335  0103A6  0100               	movlb	0	; () banked
  4336  0103A8  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4337  0103AA  A4D8               	btfss	status,2,c
  4338  0103AC  D058               	goto	l5368
  4339                           
  4340                           ; BSR set to: 0
  4341  0103AE  0100               	movlb	0	; () banked
  4342  0103B0  2974               	incf	CANSetFilter@type& (0+255),w,b
  4343  0103B2  A4D8               	btfss	status,2,c
  4344  0103B4  D054               	goto	l5368
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;inc\CANlib.h: 818: {
  4348                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4349  0103B6  010F               	movlb	15	; () banked
  4350  0103B8  9715               	bcf	21,3,b	;volatile
  4351                           
  4352                           ; BSR set to: 15
  4353                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4354  0103BA  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4355  0103BE  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4356  0103C2  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4357  0103C6  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4358  0103CA  0E04               	movlw	4
  4359  0103CC  D006               	goto	u6260
  4360  0103CE                     u6265:
  4361  0103CE  0100               	movlb	0	; () banked
  4362  0103D0  90D8               	bcf	status,0,c
  4363  0103D2  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4364  0103D4  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4365  0103D6  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4366  0103D8  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4367  0103DA                     u6260:
  4368  0103DA  2EE8               	decfsz	wreg,f,c
  4369  0103DC  D7F8               	goto	u6265
  4370  0103DE  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4371  0103E2  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4372  0103E6  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4373  0103EA  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4377  0103EE  0100               	movlb	0	; () banked
  4378  0103F0  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4379  0103F2  0100               	movlb	0	; () banked
  4380  0103F4  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4381  0103F6  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4382  0103F8  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4383  0103FA  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4387  0103FC  C07A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4391  010400  0E07               	movlw	7
  4392  010402  0100               	movlb	0	; () banked
  4393  010404  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4394  010406  0100               	movlb	0	; () banked
  4395  010408  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4396  01040A  0E00               	movlw	0
  4397  01040C  0100               	movlb	0	; () banked
  4398  01040E  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4399  010410  0100               	movlb	0	; () banked
  4400  010412  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4401  010414  0E00               	movlw	0
  4402  010416  0100               	movlb	0	; () banked
  4403  010418  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4404  01041A  0100               	movlb	0	; () banked
  4405  01041C  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4406  01041E  0E00               	movlw	0
  4407  010420  0100               	movlb	0	; () banked
  4408  010422  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4409  010424  0100               	movlb	0	; () banked
  4410  010426  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4414  010428  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4415  01042C  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4416  010430  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4417  010434  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4418  010438  0E05               	movlw	5
  4419  01043A                     u6275:
  4420  01043A  90D8               	bcf	status,0,c
  4421  01043C  0100               	movlb	0	; () banked
  4422  01043E  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4423  010440  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4424  010442  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4425  010444  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4426  010446  2EE8               	decfsz	wreg,f,c
  4427  010448  D7F8               	goto	u6275
  4428  01044A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4429  01044E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4430  010452  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4431  010456  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4435  01045A  C07A  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4436  01045E                     l5368:
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;inc\CANlib.h: 828: }
  4440                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4441  01045E  0100               	movlb	0	; () banked
  4442  010460  5179               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4443  010462  0100               	movlb	0	; () banked
  4444  010464  A4D8               	btfss	status,2,c
  4445  010466  D089               	goto	l5402
  4446                           
  4447                           ; BSR set to: 0
  4448  010468  0EF7               	movlw	247
  4449  01046A  0100               	movlb	0	; () banked
  4450  01046C  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  4451  01046E  A4D8               	btfss	status,2,c
  4452  010470  D084               	goto	l5402
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;inc\CANlib.h: 832: {
  4456                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4457  010472  010F               	movlb	15	; () banked
  4458  010474  8701               	bsf	1,3,b	;volatile
  4459                           
  4460                           ; BSR set to: 15
  4461                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4462  010476  0100               	movlb	0	; () banked
  4463  010478  5170               	movf	CANSetFilter@filter& (0+255),w,b
  4464  01047A  0100               	movlb	0	; () banked
  4465  01047C  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4466  01047E  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4467  010480  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4468  010482  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4472  010484  C07A  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4476  010488  0E00               	movlw	0
  4477  01048A  0100               	movlb	0	; () banked
  4478  01048C  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4479  01048E  0100               	movlb	0	; () banked
  4480  010490  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4481  010492  0EFF               	movlw	255
  4482  010494  0100               	movlb	0	; () banked
  4483  010496  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4484  010498  0100               	movlb	0	; () banked
  4485  01049A  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4486  01049C  0E00               	movlw	0
  4487  01049E  0100               	movlb	0	; () banked
  4488  0104A0  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4489  0104A2  0100               	movlb	0	; () banked
  4490  0104A4  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4491  0104A6  0E00               	movlw	0
  4492  0104A8  0100               	movlb	0	; () banked
  4493  0104AA  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4494  0104AC  0100               	movlb	0	; () banked
  4495  0104AE  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4499  0104B0  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4500  0104B4  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4501  0104B8  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4502  0104BC  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4503  0104C0  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  4504  0104C4  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4505  0104C8  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4506  0104CC  0100               	movlb	0	; () banked
  4507  0104CE  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  4508  0104D0  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4509  0104D4  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4510  0104D8  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4511  0104DC  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4515  0104E0  C07A  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4519  0104E4  0100               	movlb	0	; () banked
  4520  0104E6  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4521  0104E8  D003               	goto	l475
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4525  0104EA  010F               	movlb	15	; () banked
  4526  0104EC  8101               	bsf	1,0,b	;volatile
  4527  0104EE  D002               	goto	l476
  4528  0104F0                     l475:
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;inc\CANlib.h: 844: else
  4532                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4533  0104F0  010F               	movlb	15	; () banked
  4534  0104F2  9101               	bcf	1,0,b	;volatile
  4535  0104F4                     l476:
  4536                           
  4537                           ; BSR set to: 15
  4538                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4539  0104F4  0100               	movlb	0	; () banked
  4540  0104F6  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4541  0104F8  D003               	goto	l477
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4545  0104FA  010F               	movlb	15	; () banked
  4546  0104FC  8301               	bsf	1,1,b	;volatile
  4547  0104FE  D002               	goto	l478
  4548  010500                     l477:
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;inc\CANlib.h: 849: else
  4552                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4553  010500  010F               	movlb	15	; () banked
  4554  010502  9301               	bcf	1,1,b	;volatile
  4555  010504                     l478:
  4556                           
  4557                           ; BSR set to: 15
  4558                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4559  010504  0100               	movlb	0	; () banked
  4560  010506  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4561  010508  D003               	goto	l479
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4565  01050A  010F               	movlb	15	; () banked
  4566  01050C  8B01               	bsf	1,5,b	;volatile
  4567  01050E  D002               	goto	l480
  4568  010510                     l479:
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;inc\CANlib.h: 854: else
  4572                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4573  010510  010F               	movlb	15	; () banked
  4574  010512  9B01               	bcf	1,5,b	;volatile
  4575  010514                     l480:
  4576                           
  4577                           ; BSR set to: 15
  4578                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4579  010514  0100               	movlb	0	; () banked
  4580  010516  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4581  010518  D003               	goto	l481
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4585  01051A  010F               	movlb	15	; () banked
  4586  01051C  8D01               	bsf	1,6,b	;volatile
  4587  01051E  D002               	goto	l482
  4588  010520                     l481:
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;inc\CANlib.h: 859: else
  4592                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4593  010520  010F               	movlb	15	; () banked
  4594  010522  9D01               	bcf	1,6,b	;volatile
  4595  010524                     l482:
  4596                           
  4597                           ; BSR set to: 15
  4598                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4599  010524  0100               	movlb	0	; () banked
  4600  010526  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4601  010528  D003               	goto	l483
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4605  01052A  010F               	movlb	15	; () banked
  4606  01052C  8F01               	bsf	1,7,b	;volatile
  4607  01052E  D002               	goto	l5396
  4608  010530                     l483:
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;inc\CANlib.h: 864: else
  4612                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4613  010530  010F               	movlb	15	; () banked
  4614  010532  9F01               	bcf	1,7,b	;volatile
  4615  010534                     l5396:
  4616                           
  4617                           ; BSR set to: 15
  4618                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4619  010534  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4620  010538  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4621  01053C  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4622  010540  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4623  010544  0E16               	movlw	22
  4624  010546  D006               	goto	u6350
  4625  010548                     u6355:
  4626  010548  0100               	movlb	0	; () banked
  4627  01054A  90D8               	bcf	status,0,c
  4628  01054C  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4629  01054E  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4630  010550  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4631  010552  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4632  010554                     u6350:
  4633  010554  2EE8               	decfsz	wreg,f,c
  4634  010556  D7F8               	goto	u6355
  4635  010558  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4636  01055C  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4637  010560  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4638  010564  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4642  010568  0100               	movlb	0	; () banked
  4643  01056A  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4644  01056C  0100               	movlb	0	; () banked
  4645  01056E  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4646  010570  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4647  010572  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4648  010574  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4652  010576  C07A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4653  01057A                     l5402:
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;inc\CANlib.h: 870: }
  4657                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4658  01057A  0100               	movlb	0	; () banked
  4659  01057C  0579               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4660  01057E  A4D8               	btfss	status,2,c
  4661  010580  D089               	goto	l5436
  4662                           
  4663                           ; BSR set to: 0
  4664  010582  0EF7               	movlw	247
  4665  010584  0100               	movlb	0	; () banked
  4666  010586  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  4667  010588  A4D8               	btfss	status,2,c
  4668  01058A  D084               	goto	l5436
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;inc\CANlib.h: 873: {
  4672                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4673  01058C  010F               	movlb	15	; () banked
  4674  01058E  8705               	bsf	5,3,b	;volatile
  4675                           
  4676                           ; BSR set to: 15
  4677                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4678  010590  0100               	movlb	0	; () banked
  4679  010592  5170               	movf	CANSetFilter@filter& (0+255),w,b
  4680  010594  0100               	movlb	0	; () banked
  4681  010596  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4682  010598  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4683  01059A  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4684  01059C  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4688  01059E  C07A  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4692  0105A2  0E00               	movlw	0
  4693  0105A4  0100               	movlb	0	; () banked
  4694  0105A6  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4695  0105A8  0100               	movlb	0	; () banked
  4696  0105AA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4697  0105AC  0EFF               	movlw	255
  4698  0105AE  0100               	movlb	0	; () banked
  4699  0105B0  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4700  0105B2  0100               	movlb	0	; () banked
  4701  0105B4  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4702  0105B6  0E00               	movlw	0
  4703  0105B8  0100               	movlb	0	; () banked
  4704  0105BA  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4705  0105BC  0100               	movlb	0	; () banked
  4706  0105BE  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4707  0105C0  0E00               	movlw	0
  4708  0105C2  0100               	movlb	0	; () banked
  4709  0105C4  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4710  0105C6  0100               	movlb	0	; () banked
  4711  0105C8  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4715  0105CA  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4716  0105CE  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4717  0105D2  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4718  0105D6  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4719  0105DA  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  4720  0105DE  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4721  0105E2  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4722  0105E6  0100               	movlb	0	; () banked
  4723  0105E8  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  4724  0105EA  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4725  0105EE  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4726  0105F2  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4727  0105F6  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4731  0105FA  C07A  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  4735  0105FE  0100               	movlb	0	; () banked
  4736  010600  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4737  010602  D003               	goto	l486
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4741  010604  010F               	movlb	15	; () banked
  4742  010606  8105               	bsf	5,0,b	;volatile
  4743  010608  D002               	goto	l487
  4744  01060A                     l486:
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;inc\CANlib.h: 885: else
  4748                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4749  01060A  010F               	movlb	15	; () banked
  4750  01060C  9105               	bcf	5,0,b	;volatile
  4751  01060E                     l487:
  4752                           
  4753                           ; BSR set to: 15
  4754                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  4755  01060E  0100               	movlb	0	; () banked
  4756  010610  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4757  010612  D003               	goto	l488
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4761  010614  010F               	movlb	15	; () banked
  4762  010616  8305               	bsf	5,1,b	;volatile
  4763  010618  D002               	goto	l489
  4764  01061A                     l488:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;inc\CANlib.h: 890: else
  4768                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4769  01061A  010F               	movlb	15	; () banked
  4770  01061C  9305               	bcf	5,1,b	;volatile
  4771  01061E                     l489:
  4772                           
  4773                           ; BSR set to: 15
  4774                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  4775  01061E  0100               	movlb	0	; () banked
  4776  010620  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4777  010622  D003               	goto	l490
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4781  010624  010F               	movlb	15	; () banked
  4782  010626  8B05               	bsf	5,5,b	;volatile
  4783  010628  D002               	goto	l491
  4784  01062A                     l490:
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;inc\CANlib.h: 895: else
  4788                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4789  01062A  010F               	movlb	15	; () banked
  4790  01062C  9B05               	bcf	5,5,b	;volatile
  4791  01062E                     l491:
  4792                           
  4793                           ; BSR set to: 15
  4794                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  4795  01062E  0100               	movlb	0	; () banked
  4796  010630  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4797  010632  D003               	goto	l492
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4801  010634  010F               	movlb	15	; () banked
  4802  010636  8D05               	bsf	5,6,b	;volatile
  4803  010638  D002               	goto	l493
  4804  01063A                     l492:
  4805                           
  4806                           ; BSR set to: 0
  4807                           ;inc\CANlib.h: 900: else
  4808                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4809  01063A  010F               	movlb	15	; () banked
  4810  01063C  9D05               	bcf	5,6,b	;volatile
  4811  01063E                     l493:
  4812                           
  4813                           ; BSR set to: 15
  4814                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  4815  01063E  0100               	movlb	0	; () banked
  4816  010640  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4817  010642  D003               	goto	l494
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4821  010644  010F               	movlb	15	; () banked
  4822  010646  8F05               	bsf	5,7,b	;volatile
  4823  010648  D002               	goto	l5430
  4824  01064A                     l494:
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;inc\CANlib.h: 905: else
  4828                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4829  01064A  010F               	movlb	15	; () banked
  4830  01064C  9F05               	bcf	5,7,b	;volatile
  4831  01064E                     l5430:
  4832                           
  4833                           ; BSR set to: 15
  4834                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  4835  01064E  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4836  010652  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4837  010656  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4838  01065A  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4839  01065E  0E16               	movlw	22
  4840  010660  D006               	goto	u6430
  4841  010662                     u6435:
  4842  010662  0100               	movlb	0	; () banked
  4843  010664  90D8               	bcf	status,0,c
  4844  010666  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4845  010668  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4846  01066A  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4847  01066C  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4848  01066E                     u6430:
  4849  01066E  2EE8               	decfsz	wreg,f,c
  4850  010670  D7F8               	goto	u6435
  4851  010672  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4852  010676  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4853  01067A  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4854  01067E  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  4858  010682  0100               	movlb	0	; () banked
  4859  010684  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4860  010686  0100               	movlb	0	; () banked
  4861  010688  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4862  01068A  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4863  01068C  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4864  01068E  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4868  010690  C07A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4869  010694                     l5436:
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;inc\CANlib.h: 911: }
  4873                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4874  010694  0E02               	movlw	2
  4875  010696  0100               	movlb	0	; () banked
  4876  010698  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4877  01069A  A4D8               	btfss	status,2,c
  4878  01069C  D089               	goto	l5470
  4879                           
  4880                           ; BSR set to: 0
  4881  01069E  0EF7               	movlw	247
  4882  0106A0  0100               	movlb	0	; () banked
  4883  0106A2  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  4884  0106A4  A4D8               	btfss	status,2,c
  4885  0106A6  D084               	goto	l5470
  4886                           
  4887                           ; BSR set to: 0
  4888                           ;inc\CANlib.h: 915: {
  4889                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4890  0106A8  010F               	movlb	15	; () banked
  4891  0106AA  8709               	bsf	9,3,b	;volatile
  4892                           
  4893                           ; BSR set to: 15
  4894                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  4895  0106AC  0100               	movlb	0	; () banked
  4896  0106AE  5170               	movf	CANSetFilter@filter& (0+255),w,b
  4897  0106B0  0100               	movlb	0	; () banked
  4898  0106B2  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4899  0106B4  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4900  0106B6  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4901  0106B8  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4905  0106BA  C07A  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  4909  0106BE  0E00               	movlw	0
  4910  0106C0  0100               	movlb	0	; () banked
  4911  0106C2  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4912  0106C4  0100               	movlb	0	; () banked
  4913  0106C6  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4914  0106C8  0EFF               	movlw	255
  4915  0106CA  0100               	movlb	0	; () banked
  4916  0106CC  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4917  0106CE  0100               	movlb	0	; () banked
  4918  0106D0  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4919  0106D2  0E00               	movlw	0
  4920  0106D4  0100               	movlb	0	; () banked
  4921  0106D6  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4922  0106D8  0100               	movlb	0	; () banked
  4923  0106DA  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4924  0106DC  0E00               	movlw	0
  4925  0106DE  0100               	movlb	0	; () banked
  4926  0106E0  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4927  0106E2  0100               	movlb	0	; () banked
  4928  0106E4  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  4932  0106E6  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4933  0106EA  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4934  0106EE  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4935  0106F2  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4936  0106F6  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  4937  0106FA  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4938  0106FE  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4939  010702  0100               	movlb	0	; () banked
  4940  010704  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  4941  010706  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4942  01070A  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4943  01070E  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4944  010712  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4948  010716  C07A  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  4952  01071A  0100               	movlb	0	; () banked
  4953  01071C  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4954  01071E  D003               	goto	l497
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4958  010720  010F               	movlb	15	; () banked
  4959  010722  8109               	bsf	9,0,b	;volatile
  4960  010724  D002               	goto	l498
  4961  010726                     l497:
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;inc\CANlib.h: 927: else
  4965                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4966  010726  010F               	movlb	15	; () banked
  4967  010728  9109               	bcf	9,0,b	;volatile
  4968  01072A                     l498:
  4969                           
  4970                           ; BSR set to: 15
  4971                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  4972  01072A  0100               	movlb	0	; () banked
  4973  01072C  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4974  01072E  D003               	goto	l499
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4978  010730  010F               	movlb	15	; () banked
  4979  010732  8309               	bsf	9,1,b	;volatile
  4980  010734  D002               	goto	l500
  4981  010736                     l499:
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;inc\CANlib.h: 932: else
  4985                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4986  010736  010F               	movlb	15	; () banked
  4987  010738  9309               	bcf	9,1,b	;volatile
  4988  01073A                     l500:
  4989                           
  4990                           ; BSR set to: 15
  4991                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  4992  01073A  0100               	movlb	0	; () banked
  4993  01073C  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4994  01073E  D003               	goto	l501
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4998  010740  010F               	movlb	15	; () banked
  4999  010742  8B09               	bsf	9,5,b	;volatile
  5000  010744  D002               	goto	l502
  5001  010746                     l501:
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;inc\CANlib.h: 937: else
  5005                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5006  010746  010F               	movlb	15	; () banked
  5007  010748  9B09               	bcf	9,5,b	;volatile
  5008  01074A                     l502:
  5009                           
  5010                           ; BSR set to: 15
  5011                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5012  01074A  0100               	movlb	0	; () banked
  5013  01074C  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5014  01074E  D003               	goto	l503
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5018  010750  010F               	movlb	15	; () banked
  5019  010752  8D09               	bsf	9,6,b	;volatile
  5020  010754  D002               	goto	l504
  5021  010756                     l503:
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;inc\CANlib.h: 942: else
  5025                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5026  010756  010F               	movlb	15	; () banked
  5027  010758  9D09               	bcf	9,6,b	;volatile
  5028  01075A                     l504:
  5029                           
  5030                           ; BSR set to: 15
  5031                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5032  01075A  0100               	movlb	0	; () banked
  5033  01075C  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5034  01075E  D003               	goto	l505
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5038  010760  010F               	movlb	15	; () banked
  5039  010762  8F09               	bsf	9,7,b	;volatile
  5040  010764  D002               	goto	l5464
  5041  010766                     l505:
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;inc\CANlib.h: 947: else
  5045                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5046  010766  010F               	movlb	15	; () banked
  5047  010768  9F09               	bcf	9,7,b	;volatile
  5048  01076A                     l5464:
  5049                           
  5050                           ; BSR set to: 15
  5051                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5052  01076A  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5053  01076E  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5054  010772  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5055  010776  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5056  01077A  0E16               	movlw	22
  5057  01077C  D006               	goto	u6510
  5058  01077E                     u6515:
  5059  01077E  0100               	movlb	0	; () banked
  5060  010780  90D8               	bcf	status,0,c
  5061  010782  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5062  010784  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5063  010786  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5064  010788  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5065  01078A                     u6510:
  5066  01078A  2EE8               	decfsz	wreg,f,c
  5067  01078C  D7F8               	goto	u6515
  5068  01078E  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5069  010792  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5070  010796  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5071  01079A  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5075  01079E  0100               	movlb	0	; () banked
  5076  0107A0  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5077  0107A2  0100               	movlb	0	; () banked
  5078  0107A4  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5079  0107A6  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5080  0107A8  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5081  0107AA  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5085  0107AC  C07A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5086  0107B0                     l5470:
  5087                           
  5088                           ; BSR set to: 0
  5089                           ;inc\CANlib.h: 953: }
  5090                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5091  0107B0  0E03               	movlw	3
  5092  0107B2  0100               	movlb	0	; () banked
  5093  0107B4  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5094  0107B6  A4D8               	btfss	status,2,c
  5095  0107B8  D089               	goto	l5504
  5096                           
  5097                           ; BSR set to: 0
  5098  0107BA  0EF7               	movlw	247
  5099  0107BC  0100               	movlb	0	; () banked
  5100  0107BE  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5101  0107C0  A4D8               	btfss	status,2,c
  5102  0107C2  D084               	goto	l5504
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;inc\CANlib.h: 956: {
  5106                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5107  0107C4  010F               	movlb	15	; () banked
  5108  0107C6  870D               	bsf	13,3,b	;volatile
  5109                           
  5110                           ; BSR set to: 15
  5111                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5112  0107C8  0100               	movlb	0	; () banked
  5113  0107CA  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5114  0107CC  0100               	movlb	0	; () banked
  5115  0107CE  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5116  0107D0  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5117  0107D2  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5118  0107D4  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5122  0107D6  C07A  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5126  0107DA  0E00               	movlw	0
  5127  0107DC  0100               	movlb	0	; () banked
  5128  0107DE  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5129  0107E0  0100               	movlb	0	; () banked
  5130  0107E2  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5131  0107E4  0EFF               	movlw	255
  5132  0107E6  0100               	movlb	0	; () banked
  5133  0107E8  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5134  0107EA  0100               	movlb	0	; () banked
  5135  0107EC  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5136  0107EE  0E00               	movlw	0
  5137  0107F0  0100               	movlb	0	; () banked
  5138  0107F2  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5139  0107F4  0100               	movlb	0	; () banked
  5140  0107F6  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5141  0107F8  0E00               	movlw	0
  5142  0107FA  0100               	movlb	0	; () banked
  5143  0107FC  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5144  0107FE  0100               	movlb	0	; () banked
  5145  010800  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5149  010802  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5150  010806  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5151  01080A  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5152  01080E  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5153  010812  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5154  010816  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5155  01081A  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5156  01081E  0100               	movlb	0	; () banked
  5157  010820  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5158  010822  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5159  010826  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5160  01082A  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5161  01082E  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5165  010832  C07A  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5169  010836  0100               	movlb	0	; () banked
  5170  010838  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5171  01083A  D003               	goto	l508
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5175  01083C  010F               	movlb	15	; () banked
  5176  01083E  810D               	bsf	13,0,b	;volatile
  5177  010840  D002               	goto	l509
  5178  010842                     l508:
  5179                           
  5180                           ; BSR set to: 0
  5181                           ;inc\CANlib.h: 968: else
  5182                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5183  010842  010F               	movlb	15	; () banked
  5184  010844  910D               	bcf	13,0,b	;volatile
  5185  010846                     l509:
  5186                           
  5187                           ; BSR set to: 15
  5188                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5189  010846  0100               	movlb	0	; () banked
  5190  010848  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5191  01084A  D003               	goto	l510
  5192                           
  5193                           ; BSR set to: 0
  5194                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5195  01084C  010F               	movlb	15	; () banked
  5196  01084E  830D               	bsf	13,1,b	;volatile
  5197  010850  D002               	goto	l511
  5198  010852                     l510:
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;inc\CANlib.h: 973: else
  5202                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5203  010852  010F               	movlb	15	; () banked
  5204  010854  930D               	bcf	13,1,b	;volatile
  5205  010856                     l511:
  5206                           
  5207                           ; BSR set to: 15
  5208                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5209  010856  0100               	movlb	0	; () banked
  5210  010858  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5211  01085A  D003               	goto	l512
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5215  01085C  010F               	movlb	15	; () banked
  5216  01085E  8B0D               	bsf	13,5,b	;volatile
  5217  010860  D002               	goto	l513
  5218  010862                     l512:
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;inc\CANlib.h: 978: else
  5222                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5223  010862  010F               	movlb	15	; () banked
  5224  010864  9B0D               	bcf	13,5,b	;volatile
  5225  010866                     l513:
  5226                           
  5227                           ; BSR set to: 15
  5228                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5229  010866  0100               	movlb	0	; () banked
  5230  010868  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5231  01086A  D003               	goto	l514
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5235  01086C  010F               	movlb	15	; () banked
  5236  01086E  8D0D               	bsf	13,6,b	;volatile
  5237  010870  D002               	goto	l515
  5238  010872                     l514:
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;inc\CANlib.h: 983: else
  5242                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5243  010872  010F               	movlb	15	; () banked
  5244  010874  9D0D               	bcf	13,6,b	;volatile
  5245  010876                     l515:
  5246                           
  5247                           ; BSR set to: 15
  5248                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5249  010876  0100               	movlb	0	; () banked
  5250  010878  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5251  01087A  D003               	goto	l516
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5255  01087C  010F               	movlb	15	; () banked
  5256  01087E  8F0D               	bsf	13,7,b	;volatile
  5257  010880  D002               	goto	l5498
  5258  010882                     l516:
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;inc\CANlib.h: 988: else
  5262                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5263  010882  010F               	movlb	15	; () banked
  5264  010884  9F0D               	bcf	13,7,b	;volatile
  5265  010886                     l5498:
  5266                           
  5267                           ; BSR set to: 15
  5268                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5269  010886  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5270  01088A  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5271  01088E  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5272  010892  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5273  010896  0E16               	movlw	22
  5274  010898  D006               	goto	u6590
  5275  01089A                     u6595:
  5276  01089A  0100               	movlb	0	; () banked
  5277  01089C  90D8               	bcf	status,0,c
  5278  01089E  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5279  0108A0  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5280  0108A2  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5281  0108A4  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5282  0108A6                     u6590:
  5283  0108A6  2EE8               	decfsz	wreg,f,c
  5284  0108A8  D7F8               	goto	u6595
  5285  0108AA  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5286  0108AE  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5287  0108B2  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5288  0108B6  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5292  0108BA  0100               	movlb	0	; () banked
  5293  0108BC  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5294  0108BE  0100               	movlb	0	; () banked
  5295  0108C0  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5296  0108C2  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5297  0108C4  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5298  0108C6  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5302  0108C8  C07A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5303  0108CC                     l5504:
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;inc\CANlib.h: 994: }
  5307                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5308  0108CC  0E04               	movlw	4
  5309  0108CE  0100               	movlb	0	; () banked
  5310  0108D0  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5311  0108D2  A4D8               	btfss	status,2,c
  5312  0108D4  D089               	goto	l5538
  5313                           
  5314                           ; BSR set to: 0
  5315  0108D6  0EF7               	movlw	247
  5316  0108D8  0100               	movlb	0	; () banked
  5317  0108DA  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5318  0108DC  A4D8               	btfss	status,2,c
  5319  0108DE  D084               	goto	l5538
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;inc\CANlib.h: 997: {
  5323                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5324  0108E0  010F               	movlb	15	; () banked
  5325  0108E2  8711               	bsf	17,3,b	;volatile
  5326                           
  5327                           ; BSR set to: 15
  5328                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5329  0108E4  0100               	movlb	0	; () banked
  5330  0108E6  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5331  0108E8  0100               	movlb	0	; () banked
  5332  0108EA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5333  0108EC  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5334  0108EE  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5335  0108F0  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5339  0108F2  C07A  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5343  0108F6  0E00               	movlw	0
  5344  0108F8  0100               	movlb	0	; () banked
  5345  0108FA  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5346  0108FC  0100               	movlb	0	; () banked
  5347  0108FE  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5348  010900  0EFF               	movlw	255
  5349  010902  0100               	movlb	0	; () banked
  5350  010904  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5351  010906  0100               	movlb	0	; () banked
  5352  010908  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5353  01090A  0E00               	movlw	0
  5354  01090C  0100               	movlb	0	; () banked
  5355  01090E  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5356  010910  0100               	movlb	0	; () banked
  5357  010912  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5358  010914  0E00               	movlw	0
  5359  010916  0100               	movlb	0	; () banked
  5360  010918  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5361  01091A  0100               	movlb	0	; () banked
  5362  01091C  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5366  01091E  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5367  010922  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5368  010926  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5369  01092A  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5370  01092E  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5371  010932  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5372  010936  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5373  01093A  0100               	movlb	0	; () banked
  5374  01093C  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5375  01093E  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5376  010942  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5377  010946  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5378  01094A  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5382  01094E  C07A  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5386  010952  0100               	movlb	0	; () banked
  5387  010954  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5388  010956  D003               	goto	l519
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5392  010958  010F               	movlb	15	; () banked
  5393  01095A  8111               	bsf	17,0,b	;volatile
  5394  01095C  D002               	goto	l520
  5395  01095E                     l519:
  5396                           
  5397                           ; BSR set to: 0
  5398                           ;inc\CANlib.h: 1009: else
  5399                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5400  01095E  010F               	movlb	15	; () banked
  5401  010960  9111               	bcf	17,0,b	;volatile
  5402  010962                     l520:
  5403                           
  5404                           ; BSR set to: 15
  5405                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5406  010962  0100               	movlb	0	; () banked
  5407  010964  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5408  010966  D003               	goto	l521
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5412  010968  010F               	movlb	15	; () banked
  5413  01096A  8311               	bsf	17,1,b	;volatile
  5414  01096C  D002               	goto	l522
  5415  01096E                     l521:
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;inc\CANlib.h: 1014: else
  5419                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5420  01096E  010F               	movlb	15	; () banked
  5421  010970  9311               	bcf	17,1,b	;volatile
  5422  010972                     l522:
  5423                           
  5424                           ; BSR set to: 15
  5425                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5426  010972  0100               	movlb	0	; () banked
  5427  010974  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5428  010976  D003               	goto	l523
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5432  010978  010F               	movlb	15	; () banked
  5433  01097A  8B11               	bsf	17,5,b	;volatile
  5434  01097C  D002               	goto	l524
  5435  01097E                     l523:
  5436                           
  5437                           ; BSR set to: 0
  5438                           ;inc\CANlib.h: 1019: else
  5439                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5440  01097E  010F               	movlb	15	; () banked
  5441  010980  9B11               	bcf	17,5,b	;volatile
  5442  010982                     l524:
  5443                           
  5444                           ; BSR set to: 15
  5445                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5446  010982  0100               	movlb	0	; () banked
  5447  010984  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5448  010986  D003               	goto	l525
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5452  010988  010F               	movlb	15	; () banked
  5453  01098A  8D11               	bsf	17,6,b	;volatile
  5454  01098C  D002               	goto	l526
  5455  01098E                     l525:
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;inc\CANlib.h: 1024: else
  5459                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5460  01098E  010F               	movlb	15	; () banked
  5461  010990  9D11               	bcf	17,6,b	;volatile
  5462  010992                     l526:
  5463                           
  5464                           ; BSR set to: 15
  5465                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5466  010992  0100               	movlb	0	; () banked
  5467  010994  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5468  010996  D003               	goto	l527
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5472  010998  010F               	movlb	15	; () banked
  5473  01099A  8F11               	bsf	17,7,b	;volatile
  5474  01099C  D002               	goto	l5532
  5475  01099E                     l527:
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;inc\CANlib.h: 1029: else
  5479                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5480  01099E  010F               	movlb	15	; () banked
  5481  0109A0  9F11               	bcf	17,7,b	;volatile
  5482  0109A2                     l5532:
  5483                           
  5484                           ; BSR set to: 15
  5485                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5486  0109A2  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5487  0109A6  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5488  0109AA  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5489  0109AE  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5490  0109B2  0E16               	movlw	22
  5491  0109B4  D006               	goto	u6670
  5492  0109B6                     u6675:
  5493  0109B6  0100               	movlb	0	; () banked
  5494  0109B8  90D8               	bcf	status,0,c
  5495  0109BA  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5496  0109BC  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5497  0109BE  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5498  0109C0  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5499  0109C2                     u6670:
  5500  0109C2  2EE8               	decfsz	wreg,f,c
  5501  0109C4  D7F8               	goto	u6675
  5502  0109C6  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5503  0109CA  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5504  0109CE  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5505  0109D2  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5509  0109D6  0100               	movlb	0	; () banked
  5510  0109D8  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5511  0109DA  0100               	movlb	0	; () banked
  5512  0109DC  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5513  0109DE  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5514  0109E0  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5515  0109E2  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5519  0109E4  C07A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5520  0109E8                     l5538:
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;inc\CANlib.h: 1035: }
  5524                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5525  0109E8  0E05               	movlw	5
  5526  0109EA  0100               	movlb	0	; () banked
  5527  0109EC  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5528  0109EE  A4D8               	btfss	status,2,c
  5529  0109F0  0012               	return	
  5530                           
  5531                           ; BSR set to: 0
  5532  0109F2  0EF7               	movlw	247
  5533  0109F4  0100               	movlb	0	; () banked
  5534  0109F6  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5535  0109F8  A4D8               	btfss	status,2,c
  5536  0109FA  0012               	return	
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;inc\CANlib.h: 1038: {
  5540                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5541  0109FC  010F               	movlb	15	; () banked
  5542  0109FE  8715               	bsf	21,3,b	;volatile
  5543                           
  5544                           ; BSR set to: 15
  5545                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5546  010A00  0100               	movlb	0	; () banked
  5547  010A02  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5548  010A04  0100               	movlb	0	; () banked
  5549  010A06  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5550  010A08  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5551  010A0A  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5552  010A0C  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5556  010A0E  C07A  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5560  010A12  0E00               	movlw	0
  5561  010A14  0100               	movlb	0	; () banked
  5562  010A16  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5563  010A18  0100               	movlb	0	; () banked
  5564  010A1A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5565  010A1C  0EFF               	movlw	255
  5566  010A1E  0100               	movlb	0	; () banked
  5567  010A20  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5568  010A22  0100               	movlb	0	; () banked
  5569  010A24  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5570  010A26  0E00               	movlw	0
  5571  010A28  0100               	movlb	0	; () banked
  5572  010A2A  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5573  010A2C  0100               	movlb	0	; () banked
  5574  010A2E  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5575  010A30  0E00               	movlw	0
  5576  010A32  0100               	movlb	0	; () banked
  5577  010A34  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5578  010A36  0100               	movlb	0	; () banked
  5579  010A38  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5583  010A3A  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5584  010A3E  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5585  010A42  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5586  010A46  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5587  010A4A  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5588  010A4E  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5589  010A52  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5590  010A56  0100               	movlb	0	; () banked
  5591  010A58  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5592  010A5A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5593  010A5E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5594  010A62  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5595  010A66  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5599  010A6A  C07A  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5603  010A6E  0100               	movlb	0	; () banked
  5604  010A70  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5605  010A72  D003               	goto	l530
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5609  010A74  010F               	movlb	15	; () banked
  5610  010A76  8115               	bsf	21,0,b	;volatile
  5611  010A78  D002               	goto	l531
  5612  010A7A                     l530:
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;inc\CANlib.h: 1050: else
  5616                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5617  010A7A  010F               	movlb	15	; () banked
  5618  010A7C  9115               	bcf	21,0,b	;volatile
  5619  010A7E                     l531:
  5620                           
  5621                           ; BSR set to: 15
  5622                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5623  010A7E  0100               	movlb	0	; () banked
  5624  010A80  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5625  010A82  D003               	goto	l532
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5629  010A84  010F               	movlb	15	; () banked
  5630  010A86  8315               	bsf	21,1,b	;volatile
  5631  010A88  D002               	goto	l533
  5632  010A8A                     l532:
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;inc\CANlib.h: 1055: else
  5636                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5637  010A8A  010F               	movlb	15	; () banked
  5638  010A8C  9315               	bcf	21,1,b	;volatile
  5639  010A8E                     l533:
  5640                           
  5641                           ; BSR set to: 15
  5642                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5643  010A8E  0100               	movlb	0	; () banked
  5644  010A90  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5645  010A92  D003               	goto	l534
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5649  010A94  010F               	movlb	15	; () banked
  5650  010A96  8B15               	bsf	21,5,b	;volatile
  5651  010A98  D002               	goto	l535
  5652  010A9A                     l534:
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;inc\CANlib.h: 1060: else
  5656                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5657  010A9A  010F               	movlb	15	; () banked
  5658  010A9C  9B15               	bcf	21,5,b	;volatile
  5659  010A9E                     l535:
  5660                           
  5661                           ; BSR set to: 15
  5662                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5663  010A9E  0100               	movlb	0	; () banked
  5664  010AA0  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5665  010AA2  D003               	goto	l536
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5669  010AA4  010F               	movlb	15	; () banked
  5670  010AA6  8D15               	bsf	21,6,b	;volatile
  5671  010AA8  D002               	goto	l537
  5672  010AAA                     l536:
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;inc\CANlib.h: 1065: else
  5676                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5677  010AAA  010F               	movlb	15	; () banked
  5678  010AAC  9D15               	bcf	21,6,b	;volatile
  5679  010AAE                     l537:
  5680                           
  5681                           ; BSR set to: 15
  5682                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5683  010AAE  0100               	movlb	0	; () banked
  5684  010AB0  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5685  010AB2  D003               	goto	l538
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5689  010AB4  010F               	movlb	15	; () banked
  5690  010AB6  8F15               	bsf	21,7,b	;volatile
  5691  010AB8  D002               	goto	l5566
  5692  010ABA                     l538:
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;inc\CANlib.h: 1070: else
  5696                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5697  010ABA  010F               	movlb	15	; () banked
  5698  010ABC  9F15               	bcf	21,7,b	;volatile
  5699  010ABE                     l5566:
  5700                           
  5701                           ; BSR set to: 15
  5702                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5703  010ABE  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5704  010AC2  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5705  010AC6  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5706  010ACA  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5707  010ACE  0E16               	movlw	22
  5708  010AD0  D006               	goto	u6750
  5709  010AD2                     u6755:
  5710  010AD2  0100               	movlb	0	; () banked
  5711  010AD4  90D8               	bcf	status,0,c
  5712  010AD6  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5713  010AD8  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5714  010ADA  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5715  010ADC  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5716  010ADE                     u6750:
  5717  010ADE  2EE8               	decfsz	wreg,f,c
  5718  010AE0  D7F8               	goto	u6755
  5719  010AE2  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5720  010AE6  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5721  010AEA  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5722  010AEE  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5726  010AF2  0100               	movlb	0	; () banked
  5727  010AF4  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5728  010AF6  0100               	movlb	0	; () banked
  5729  010AF8  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5730  010AFA  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5731  010AFC  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5732  010AFE  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5736  010B00  C07A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5737  010B04  0012               	return	
  5738  010B06                     __end_of_CANSetFilter:
  5739                           	opt stack 0
  5740                           tblptru	equ	0xFF8
  5741                           tblptrh	equ	0xFF7
  5742                           tblptrl	equ	0xFF6
  5743                           tablat	equ	0xFF5
  5744                           intcon	equ	0xFF2
  5745                           postinc0	equ	0xFEE
  5746                           wreg	equ	0xFE8
  5747                           status	equ	0xFD8
  5748                           
  5749 ;; *************** function _CANOperationMode *****************
  5750 ;; Defined at:
  5751 ;;		line 206 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  mode            1    wreg     enum E16881
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  mode            1   16[BANK0 ] enum E16881
  5756 ;; Return value:  Size  Location     Type
  5757 ;;		None               void
  5758 ;; Registers used:
  5759 ;;		wreg, status,2, status,0
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5766 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5768 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5769 ;;Total ram usage:        1 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; Hardware stack levels required when called:    3
  5772 ;; This function calls:
  5773 ;;		Nothing
  5774 ;; This function is called by:
  5775 ;;		_CANInitialize
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text5
  5780  016162                     __ptext5:
  5781                           	opt stack 0
  5782  016162                     _CANOperationMode:
  5783                           	opt stack 25
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;incstack = 0
  5787                           ;CANOperationMode@mode stored from wreg
  5788  016162  0100               	movlb	0	; () banked
  5789  016164  6F70               	movwf	CANOperationMode@mode& (0+255),b
  5790                           
  5791                           ;inc\CANlib.h: 208: CANCON = mode;
  5792  016166  C070  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5793  01616A                     l5162:
  5794  01616A  506E               	movf	3950,w,c	;volatile
  5795  01616C  0BE0               	andlw	224
  5796  01616E  0100               	movlb	0	; () banked
  5797  016170  1970               	xorwf	CANOperationMode@mode& (0+255),w,b
  5798  016172  B4D8               	btfsc	status,2,c
  5799  016174  0012               	return	
  5800  016176  D7F9               	goto	l5162
  5801  016178                     __end_of_CANOperationMode:
  5802                           	opt stack 0
  5803                           tblptru	equ	0xFF8
  5804                           tblptrh	equ	0xFF7
  5805                           tblptrl	equ	0xFF6
  5806                           tablat	equ	0xFF5
  5807                           intcon	equ	0xFF2
  5808                           postinc0	equ	0xFEE
  5809                           wreg	equ	0xFE8
  5810                           status	equ	0xFD8
  5811                           
  5812 ;; *************** function _PWR_Button_Polling *****************
  5813 ;; Defined at:
  5814 ;;		line 421 in file "RemoteCan.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;		None
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;		None
  5819 ;; Return value:  Size  Location     Type
  5820 ;;		None               void
  5821 ;; Registers used:
  5822 ;;		None
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;Total ram usage:        0 bytes
  5833 ;; Hardware stack levels used:    1
  5834 ;; Hardware stack levels required when called:    3
  5835 ;; This function calls:
  5836 ;;		Nothing
  5837 ;; This function is called by:
  5838 ;;		_main
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           	psect	text6
  5843  0160F2                     __ptext6:
  5844                           	opt stack 0
  5845  0160F2                     _PWR_Button_Polling:
  5846                           	opt stack 27
  5847                           
  5848                           ;RemoteCan.c: 422: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;incstack = 0
  5852  0160F2  AA81               	btfss	3969,5,c	;volatile
  5853  0160F4  D002               	goto	l865
  5854  0160F6  B44C               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5855  0160F8  0012               	return	
  5856  0160FA                     l865:
  5857                           
  5858                           ;RemoteCan.c: 423: wait_low_1 = 0;
  5859  0160FA  944C               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5860                           
  5861                           ;RemoteCan.c: 424: if (PORTBbits.RB5 == 1) {
  5862  0160FC  AA81               	btfss	3969,5,c	;volatile
  5863  0160FE  0012               	return	
  5864                           
  5865                           ;RemoteCan.c: 425: power_switch = ~power_switch;
  5866  016100  B04C               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5867  016102  D002               	goto	u8710
  5868  016104  804C               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5869  016106  D001               	goto	u8725
  5870  016108                     u8710:
  5871  016108  904C               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5872  01610A                     u8725:
  5873                           
  5874                           ;RemoteCan.c: 426: wait_low_1 = 1;
  5875  01610A  844C               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5876  01610C  0012               	return	
  5877  01610E                     __end_of_PWR_Button_Polling:
  5878                           	opt stack 0
  5879                           tblptru	equ	0xFF8
  5880                           tblptrh	equ	0xFF7
  5881                           tblptrl	equ	0xFF6
  5882                           tablat	equ	0xFF5
  5883                           intcon	equ	0xFF2
  5884                           postinc0	equ	0xFEE
  5885                           wreg	equ	0xFE8
  5886                           status	equ	0xFD8
  5887                           
  5888 ;; *************** function _LCD_Handler *****************
  5889 ;; Defined at:
  5890 ;;		line 321 in file "RemoteCan.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;		None
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;		None
  5895 ;; Return value:  Size  Location     Type
  5896 ;;		None               void
  5897 ;; Registers used:
  5898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5908 ;;Total ram usage:        0 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; Hardware stack levels required when called:   10
  5911 ;; This function calls:
  5912 ;;		_CANisTxReady
  5913 ;;		_CANsendMessage
  5914 ;;		_LCD_clear
  5915 ;;		_LCD_goto_line
  5916 ;;		_LCD_goto_xy
  5917 ;;		_LCD_initialize
  5918 ;;		_LCD_write_integer
  5919 ;;		_LCD_write_message
  5920 ;;		_LCD_write_string
  5921 ;;		___fldiv
  5922 ;;		___xxtofl
  5923 ;;		_sprintf
  5924 ;; This function is called by:
  5925 ;;		_main
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           
  5929                           	psect	text7
  5930  014B14                     __ptext7:
  5931                           	opt stack 0
  5932  014B14                     _LCD_Handler:
  5933                           	opt stack 20
  5934  014B14                     l8762:
  5935  014B14  EC47  F0B0         	call	_CANisTxReady	;wreg free
  5936  014B18  06E8               	decf	wreg,f,c
  5937  014B1A  A4D8               	btfss	status,2,c
  5938  014B1C  D7FB               	goto	l8762
  5939                           
  5940                           ;RemoteCan.c: 324: CANsendMessage(0b00000000110, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5941  014B1E  0E06               	movlw	6
  5942  014B20  0100               	movlb	0	; () banked
  5943  014B22  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  5944  014B24  0E00               	movlw	0
  5945  014B26  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5946  014B28  0E00               	movlw	0
  5947  014B2A  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5948  014B2C  0E00               	movlw	0
  5949  014B2E  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5950  014B30  0EEA               	movlw	low _data_speed
  5951  014B32  0100               	movlb	0	; () banked
  5952  014B34  6F74               	movwf	CANsendMessage@data& (0+255),b
  5953  014B36  0E00               	movlw	high _data_speed
  5954  014B38  0100               	movlb	0	; () banked
  5955  014B3A  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  5956  014B3C  0E08               	movlw	8
  5957  014B3E  0100               	movlb	0	; () banked
  5958  014B40  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  5959  014B42  0EFC               	movlw	252
  5960  014B44  0100               	movlb	0	; () banked
  5961  014B46  6F77               	movwf	CANsendMessage@flags& (0+255),b
  5962  014B48  ECCD  F089         	call	_CANsendMessage	;wreg free
  5963                           
  5964                           ;RemoteCan.c: 326: actual_speed_kmh = ((actual_speed) / 278.0);
  5965  014B4C  C0DE  F070         	movff	_actual_speed,___xxtofl@val
  5966  014B50  C0DF  F071         	movff	_actual_speed+1,___xxtofl@val+1
  5967  014B54  0100               	movlb	0	; () banked
  5968  014B56  6B72               	clrf	(___xxtofl@val+2)& (0+255),b
  5969  014B58  6B73               	clrf	(___xxtofl@val+3)& (0+255),b
  5970  014B5A  0E00               	movlw	0
  5971  014B5C  ECE0  F0A2         	call	___xxtofl
  5972  014B60  C070  F07E         	movff	?___xxtofl,___fldiv@b
  5973  014B64  C071  F07F         	movff	?___xxtofl+1,___fldiv@b+1
  5974  014B68  C072  F080         	movff	?___xxtofl+2,___fldiv@b+2
  5975  014B6C  C073  F081         	movff	?___xxtofl+3,___fldiv@b+3
  5976  014B70  0E00               	movlw	0
  5977  014B72  0100               	movlb	0	; () banked
  5978  014B74  6F82               	movwf	___fldiv@a& (0+255),b
  5979  014B76  0E00               	movlw	0
  5980  014B78  6F83               	movwf	(___fldiv@a+1)& (0+255),b
  5981  014B7A  0E8B               	movlw	139
  5982  014B7C  6F84               	movwf	(___fldiv@a+2)& (0+255),b
  5983  014B7E  0E43               	movlw	67
  5984  014B80  6F85               	movwf	(___fldiv@a+3)& (0+255),b
  5985  014B82  ECB6  F09D         	call	___fldiv	;wreg free
  5986  014B86  C07E  F008         	movff	?___fldiv,_actual_speed_kmh
  5987  014B8A  C07F  F009         	movff	?___fldiv+1,_actual_speed_kmh+1
  5988  014B8E  C080  F00A         	movff	?___fldiv+2,_actual_speed_kmh+2
  5989  014B92  C081  F00B         	movff	?___fldiv+3,_actual_speed_kmh+3
  5990                           
  5991                           ;RemoteCan.c: 327: sprintf(str, "%.2f", actual_speed_kmh);
  5992  014B96  0E15               	movlw	low _str
  5993  014B98  0100               	movlb	0	; () banked
  5994  014B9A  6FC2               	movwf	sprintf@sp& (0+255),b
  5995  014B9C  0E01               	movlw	high _str
  5996  014B9E  0100               	movlb	0	; () banked
  5997  014BA0  6FC3               	movwf	(sprintf@sp+1)& (0+255),b
  5998  014BA2  0EFA               	movlw	low STR_5
  5999  014BA4  0100               	movlb	0	; () banked
  6000  014BA6  6FC4               	movwf	sprintf@f& (0+255),b
  6001  014BA8  0EFF               	movlw	high STR_5
  6002  014BAA  0100               	movlb	0	; () banked
  6003  014BAC  6FC5               	movwf	(sprintf@f+1)& (0+255),b
  6004  014BAE  C008  F0C6         	movff	_actual_speed_kmh,?_sprintf+4
  6005  014BB2  C009  F0C7         	movff	_actual_speed_kmh+1,?_sprintf+5
  6006  014BB6  C00A  F0C8         	movff	_actual_speed_kmh+2,?_sprintf+6
  6007  014BBA  C00B  F0C9         	movff	_actual_speed_kmh+3,?_sprintf+7
  6008  014BBE  EC83  F085         	call	_sprintf	;wreg free
  6009                           
  6010                           ;RemoteCan.c: 328: str[11] = '\0';
  6011  014BC2  0E00               	movlw	0
  6012  014BC4  0101               	movlb	1	; () banked
  6013  014BC6  6F20               	movwf	(_str+11)& (0+255),b
  6014                           
  6015                           ; BSR set to: 1
  6016                           ;RemoteCan.c: 330: if (display_refresh == 1) {
  6017  014BC8  AC4B               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6018  014BCA  D032               	goto	l8790
  6019                           
  6020                           ; BSR set to: 1
  6021                           ;RemoteCan.c: 331: LCD_initialize(16);
  6022  014BCC  0E10               	movlw	16
  6023  014BCE  EC7F  F0A9         	call	_LCD_initialize
  6024                           
  6025                           ;RemoteCan.c: 332: LCD_clear();
  6026  014BD2  EC06  F0B0         	call	_LCD_clear	;wreg free
  6027                           
  6028                           ;RemoteCan.c: 333: LCD_goto_line(1);
  6029  014BD6  0E01               	movlw	1
  6030  014BD8  ECBC  F0AA         	call	_LCD_goto_line
  6031                           
  6032                           ;RemoteCan.c: 334: LCD_write_message("=== VEHICLE DATA ===");
  6033  014BDC  0E6F               	movlw	low STR_6
  6034  014BDE  0100               	movlb	0	; () banked
  6035  014BE0  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6036  014BE2  0EFF               	movlw	high STR_6
  6037  014BE4  0100               	movlb	0	; () banked
  6038  014BE6  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6039  014BE8  ECD3  F0AF         	call	_LCD_write_message	;wreg free
  6040                           
  6041                           ;RemoteCan.c: 335: LCD_goto_line(2);
  6042  014BEC  0E02               	movlw	2
  6043  014BEE  ECBC  F0AA         	call	_LCD_goto_line
  6044                           
  6045                           ;RemoteCan.c: 336: LCD_write_message("Direction: ");
  6046  014BF2  0EB8               	movlw	low STR_7
  6047  014BF4  0100               	movlb	0	; () banked
  6048  014BF6  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6049  014BF8  0EFF               	movlw	high STR_7
  6050  014BFA  0100               	movlb	0	; () banked
  6051  014BFC  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6052  014BFE  ECD3  F0AF         	call	_LCD_write_message	;wreg free
  6053                           
  6054                           ;RemoteCan.c: 337: LCD_goto_line(3);
  6055  014C02  0E03               	movlw	3
  6056  014C04  ECBC  F0AA         	call	_LCD_goto_line
  6057                           
  6058                           ;RemoteCan.c: 338: LCD_write_message("Speed: 0.00 Km/h");
  6059  014C08  0E99               	movlw	low STR_8
  6060  014C0A  0100               	movlb	0	; () banked
  6061  014C0C  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6062  014C0E  0EFF               	movlw	high STR_8
  6063  014C10  0100               	movlb	0	; () banked
  6064  014C12  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6065  014C14  ECD3  F0AF         	call	_LCD_write_message	;wreg free
  6066                           
  6067                           ;RemoteCan.c: 339: LCD_goto_line(4);
  6068  014C18  0E04               	movlw	4
  6069  014C1A  ECBC  F0AA         	call	_LCD_goto_line
  6070                           
  6071                           ;RemoteCan.c: 343: LCD_write_message("Data: ");
  6072                           
  6073                           ;RemoteCan.c: 342: } else {
  6074                           
  6075                           ;RemoteCan.c: 341: LCD_write_message("Park assist: ");
  6076                           
  6077                           ;RemoteCan.c: 340: if (1 == 0) {
  6078  014C1E  0EE4               	movlw	low STR_10
  6079  014C20  0100               	movlb	0	; () banked
  6080  014C22  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6081  014C24  0EFF               	movlw	high STR_10
  6082  014C26  0100               	movlb	0	; () banked
  6083  014C28  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6084  014C2A  ECD3  F0AF         	call	_LCD_write_message	;wreg free
  6085                           
  6086                           ;RemoteCan.c: 344: }
  6087                           ;RemoteCan.c: 345: display_refresh = 0;
  6088  014C2E  9C4B               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6089  014C30                     l8790:
  6090                           
  6091                           ;RemoteCan.c: 346: }
  6092                           ;RemoteCan.c: 349: LCD_goto_xy(12, 2);
  6093  014C30  0E02               	movlw	2
  6094  014C32  0100               	movlb	0	; () banked
  6095  014C34  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  6096  014C36  0E0C               	movlw	12
  6097  014C38  EC87  F0B0         	call	_LCD_goto_xy
  6098                           
  6099                           ;RemoteCan.c: 350: if (switch_position != 0) {
  6100  014C3C  0100               	movlb	0	; () banked
  6101  014C3E  51E6               	movf	_switch_position& (0+255),w,b	;volatile
  6102  014C40  B4D8               	btfsc	status,2,c
  6103  014C42  D016               	goto	l8800
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;RemoteCan.c: 351: if (dir == 1) {
  6107  014C44  0100               	movlb	0	; () banked
  6108  014C46  05E4               	decf	_dir& (0+255),w,b	;volatile
  6109  014C48  A4D8               	btfss	status,2,c
  6110  014C4A  D009               	goto	l8798
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;RemoteCan.c: 352: LCD_write_message("FWD ");
  6114  014C4C  0EF0               	movlw	low STR_11
  6115  014C4E  0100               	movlb	0	; () banked
  6116  014C50  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6117  014C52  0EFF               	movlw	high STR_11
  6118  014C54  0100               	movlb	0	; () banked
  6119  014C56  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6120  014C58  ECD3  F0AF         	call	_LCD_write_message	;wreg free
  6121                           
  6122                           ;RemoteCan.c: 353: } else {
  6123  014C5C  D011               	goto	l8802
  6124  014C5E                     l8798:
  6125                           
  6126                           ;RemoteCan.c: 354: LCD_write_message("BKWD");
  6127  014C5E  0EF5               	movlw	low STR_12
  6128  014C60  0100               	movlb	0	; () banked
  6129  014C62  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6130  014C64  0EFF               	movlw	high STR_12
  6131  014C66  0100               	movlb	0	; () banked
  6132  014C68  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6133  014C6A  ECD3  F0AF         	call	_LCD_write_message	;wreg free
  6134                           
  6135                           ;RemoteCan.c: 355: }
  6136                           ;RemoteCan.c: 356: } else {
  6137  014C6E  D008               	goto	l8802
  6138  014C70                     l8800:
  6139                           
  6140                           ;RemoteCan.c: 357: LCD_write_message("P   ");
  6141  014C70  0EEB               	movlw	low STR_13
  6142  014C72  0100               	movlb	0	; () banked
  6143  014C74  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6144  014C76  0EFF               	movlw	high STR_13
  6145  014C78  0100               	movlb	0	; () banked
  6146  014C7A  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6147  014C7C  ECD3  F0AF         	call	_LCD_write_message	;wreg free
  6148  014C80                     l8802:
  6149                           
  6150                           ;RemoteCan.c: 358: }
  6151                           ;RemoteCan.c: 361: LCD_goto_xy(8, 3);
  6152  014C80  0E03               	movlw	3
  6153  014C82  0100               	movlb	0	; () banked
  6154  014C84  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  6155  014C86  0E08               	movlw	8
  6156  014C88  EC87  F0B0         	call	_LCD_goto_xy
  6157                           
  6158                           ;RemoteCan.c: 362: LCD_write_string(str);
  6159  014C8C  0E15               	movlw	low _str
  6160  014C8E  0100               	movlb	0	; () banked
  6161  014C90  6F81               	movwf	LCD_write_string@buffer& (0+255),b
  6162  014C92  0E01               	movlw	high _str
  6163  014C94  0100               	movlb	0	; () banked
  6164  014C96  6F82               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  6165  014C98  EC34  F0B0         	call	_LCD_write_string	;wreg free
  6166                           
  6167                           ;RemoteCan.c: 382: LCD_goto_xy(7, 4);
  6168                           
  6169                           ;RemoteCan.c: 378: }
  6170                           ;RemoteCan.c: 379: }
  6171                           ;RemoteCan.c: 380: } else {
  6172                           
  6173                           ;RemoteCan.c: 377: LCD_write_message("PARKING");
  6174                           
  6175                           ;RemoteCan.c: 375: }
  6176                           ;RemoteCan.c: 376: } else {
  6177                           
  6178                           ;RemoteCan.c: 374: LCD_write_message("FOUND! ");
  6179                           
  6180                           ;RemoteCan.c: 373: } else {
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;RemoteCan.c: 372: LCD_write_message("SEARCH ");
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;RemoteCan.c: 371: if (space_available == 0) {
  6187                           
  6188                           ;RemoteCan.c: 370: if (parking_state == 1) {
  6189                           
  6190                           ;RemoteCan.c: 369: } else {
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;RemoteCan.c: 368: LCD_write_message("OFF    ");
  6194                           
  6195                           ;RemoteCan.c: 367: if (parking_state == 0) {
  6196                           
  6197                           ;RemoteCan.c: 366: LCD_goto_xy(14, 4);
  6198                           
  6199                           ;RemoteCan.c: 364: if (1 == 0) {
  6200  014C9C  0E04               	movlw	4
  6201  014C9E  0100               	movlb	0	; () banked
  6202  014CA0  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  6203  014CA2  0E07               	movlw	7
  6204  014CA4  EC87  F0B0         	call	_LCD_goto_xy
  6205                           
  6206                           ;RemoteCan.c: 383: LCD_write_integer(user_data, 0, 0x01);
  6207  014CA8  C024  F088         	movff	_user_data,LCD_write_integer@value
  6208  014CAC  C025  F089         	movff	_user_data+1,LCD_write_integer@value+1
  6209  014CB0  0E00               	movlw	0
  6210  014CB2  0100               	movlb	0	; () banked
  6211  014CB4  6F8A               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  6212  014CB6  0E01               	movlw	1
  6213  014CB8  0100               	movlb	0	; () banked
  6214  014CBA  6F8B               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  6215  014CBC  ECAA  F0A4         	call	_LCD_write_integer	;wreg free
  6216  014CC0  0012               	return	
  6217  014CC2                     __end_of_LCD_Handler:
  6218                           	opt stack 0
  6219                           tblptru	equ	0xFF8
  6220                           tblptrh	equ	0xFF7
  6221                           tblptrl	equ	0xFF6
  6222                           tablat	equ	0xFF5
  6223                           intcon	equ	0xFF2
  6224                           postinc0	equ	0xFEE
  6225                           wreg	equ	0xFE8
  6226                           status	equ	0xFD8
  6227                           
  6228 ;; *************** function _sprintf *****************
  6229 ;; Defined at:
  6230 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;  sp              2   98[BANK0 ] PTR unsigned char 
  6233 ;;		 -> str(12), 
  6234 ;;  f               2  100[BANK0 ] PTR const unsigned char 
  6235 ;;		 -> STR_5(5), 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  6238 ;;  tmpval          4   14[BANK1 ] struct .
  6239 ;;  val             4    8[BANK1 ] unsigned long 
  6240 ;;  cp              3    0        PTR const unsigned char 
  6241 ;;  prec            2   18[BANK1 ] int 
  6242 ;;  exp             2   12[BANK1 ] int 
  6243 ;;  flag            2    6[BANK1 ] unsigned short 
  6244 ;;  ap              2    4[BANK1 ] PTR void [1]
  6245 ;;		 -> ?_sprintf(2), 
  6246 ;;  len             2    0        unsigned int 
  6247 ;;  width           2    0        int 
  6248 ;;  c               1   24[BANK1 ] char 
  6249 ;;  d               1    0        unsigned char 
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  2   98[BANK0 ] int 
  6252 ;; Registers used:
  6253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6259 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6260 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6262 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6263 ;;Total ram usage:       35 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; Hardware stack levels required when called:    5
  6266 ;; This function calls:
  6267 ;;		___awdiv
  6268 ;;		___fladd
  6269 ;;		___flge
  6270 ;;		___flmul
  6271 ;;		___flneg
  6272 ;;		___flsub
  6273 ;;		___fltol
  6274 ;;		___lldiv
  6275 ;;		___llmod
  6276 ;;		___wmul
  6277 ;;		___xxtofl
  6278 ;;		__div_to_l_
  6279 ;;		__tdiv_to_l_
  6280 ;;		_fround
  6281 ;;		_isdigit
  6282 ;;		_scale
  6283 ;; This function is called by:
  6284 ;;		_LCD_Handler
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           	psect	text8
  6289  010B06                     __ptext8:
  6290                           	opt stack 0
  6291  010B06                     _sprintf:
  6292                           	opt stack 24
  6293                           
  6294                           ;doprnt.c: 494: va_list ap;
  6295                           ;doprnt.c: 499: signed char c;
  6296                           ;doprnt.c: 501: int width;
  6297                           ;doprnt.c: 504: int prec;
  6298                           ;doprnt.c: 508: unsigned short flag;
  6299                           ;doprnt.c: 515: char d;
  6300                           ;doprnt.c: 516: double fval;
  6301                           ;doprnt.c: 517: int exp;
  6302                           ;doprnt.c: 523: union {
  6303                           ;doprnt.c: 524: unsigned long vd;
  6304                           ;doprnt.c: 525: double integ;
  6305                           ;doprnt.c: 526: } tmpval;
  6306                           ;doprnt.c: 528: unsigned long val;
  6307                           ;doprnt.c: 529: unsigned len;
  6308                           ;doprnt.c: 530: const char * cp;
  6309                           ;doprnt.c: 533: *ap = __va_start();
  6310                           
  6311                           ;incstack = 0
  6312  010B06  0EC6               	movlw	low (?_sprintf+4)
  6313  010B08  0101               	movlb	1	; () banked
  6314  010B0A  6F2D               	movwf	sprintf@ap& (0+255),b
  6315  010B0C  0E00               	movlw	high (?_sprintf+4)
  6316  010B0E  0101               	movlb	1	; () banked
  6317  010B10  6F2E               	movwf	(sprintf@ap+1)& (0+255),b
  6318                           
  6319                           ;doprnt.c: 536: while(c = *f++) {
  6320  010B12  EFB5  F089         	goto	l8684
  6321  010B16                     l8486:
  6322                           
  6323                           ; BSR set to: 1
  6324                           ;doprnt.c: 538: if(c != '%')
  6325  010B16  0E25               	movlw	37
  6326  010B18  0101               	movlb	1	; () banked
  6327  010B1A  1941               	xorwf	sprintf@c& (0+255),w,b
  6328  010B1C  B4D8               	btfsc	status,2,c
  6329  010B1E  D008               	goto	l8492
  6330                           
  6331                           ; BSR set to: 1
  6332                           ;doprnt.c: 540: {
  6333                           ;doprnt.c: 541: ((*sp++ = (c)));
  6334  010B20  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  6335  010B24  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  6336  010B28  C141  FFDF         	movff	sprintf@c,indf2
  6337  010B2C  EFB2  F089         	goto	l8682
  6338  010B30                     l8492:
  6339                           
  6340                           ;doprnt.c: 543: }
  6341                           ;doprnt.c: 548: flag = 0;
  6342  010B30  0E00               	movlw	0
  6343  010B32  0101               	movlb	1	; () banked
  6344  010B34  6F30               	movwf	(sprintf@flag+1)& (0+255),b
  6345  010B36  0E00               	movlw	0
  6346  010B38  6F2F               	movwf	sprintf@flag& (0+255),b
  6347                           
  6348                           ; BSR set to: 1
  6349                           ;doprnt.c: 611: if(*f == '.') {
  6350  010B3A  C0C4  FFF6         	movff	sprintf@f,tblptrl
  6351  010B3E  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  6352  010B42                     	if	0	;tblptru may be non-zero
  6353  010B42                     	endif
  6354  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6355  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  6356  010B44  6EF8               	movwf	tblptru,c
  6357  010B46                     	endif
  6358  010B46  0008               	tblrd		*
  6359  010B48  50F5               	movf	tablat,w,c
  6360  010B4A  0A2E               	xorlw	46
  6361  010B4C  A4D8               	btfss	status,2,c
  6362  010B4E  D03D               	goto	l8506
  6363                           
  6364                           ; BSR set to: 1
  6365                           ;doprnt.c: 612: flag |= 0x4000;
  6366  010B50  0101               	movlb	1	; () banked
  6367  010B52  8D30               	bsf	(sprintf@flag+1)& (0+255),6,b
  6368                           
  6369                           ;doprnt.c: 613: f++;
  6370  010B54  0100               	movlb	0	; () banked
  6371  010B56  4BC4               	infsnz	sprintf@f& (0+255),f,b
  6372  010B58  2BC5               	incf	(sprintf@f+1)& (0+255),f,b
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;doprnt.c: 620: {
  6376                           ;doprnt.c: 621: prec = 0;
  6377  010B5A  0E00               	movlw	0
  6378  010B5C  0101               	movlb	1	; () banked
  6379  010B5E  6F3C               	movwf	(sprintf@prec+1)& (0+255),b
  6380  010B60  0E00               	movlw	0
  6381  010B62  6F3B               	movwf	sprintf@prec& (0+255),b
  6382                           
  6383                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6384  010B64  D025               	goto	l8504
  6385  010B66                     l8500:
  6386                           
  6387                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6388  010B66  C13B  F070         	movff	sprintf@prec,___wmul@multiplier
  6389  010B6A  C13C  F071         	movff	sprintf@prec+1,___wmul@multiplier+1
  6390  010B6E  0E00               	movlw	0
  6391  010B70  0100               	movlb	0	; () banked
  6392  010B72  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6393  010B74  0E0A               	movlw	10
  6394  010B76  6F72               	movwf	___wmul@multiplicand& (0+255),b
  6395  010B78  ECB8  F0AF         	call	___wmul	;wreg free
  6396  010B7C  C0C4  FFF6         	movff	sprintf@f,tblptrl
  6397  010B80  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  6398  010B84                     	if	0	;tblptru may be non-zero
  6399  010B84                     	endif
  6400  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6401  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  6402  010B86  6EF8               	movwf	tblptru,c
  6403  010B88                     	endif
  6404  010B88  0008               	tblrd		*
  6405  010B8A  50F5               	movf	tablat,w,c
  6406  010B8C  0100               	movlb	0	; () banked
  6407  010B8E  2770               	addwf	?___wmul& (0+255),f,b
  6408  010B90  0E00               	movlw	0
  6409  010B92  0100               	movlb	0	; () banked
  6410  010B94  2371               	addwfc	(?___wmul+1)& (0+255),f,b
  6411  010B96  0ED0               	movlw	208
  6412  010B98  0100               	movlb	0	; () banked
  6413  010B9A  2570               	addwf	?___wmul& (0+255),w,b
  6414  010B9C  0101               	movlb	1	; () banked
  6415  010B9E  6F3B               	movwf	sprintf@prec& (0+255),b
  6416  010BA0  0EFF               	movlw	255
  6417  010BA2  0100               	movlb	0	; () banked
  6418  010BA4  2171               	addwfc	(?___wmul+1)& (0+255),w,b
  6419  010BA6  0101               	movlb	1	; () banked
  6420  010BA8  6F3C               	movwf	(sprintf@prec+1)& (0+255),b
  6421                           
  6422                           ; BSR set to: 1
  6423  010BAA  0100               	movlb	0	; () banked
  6424  010BAC  4BC4               	infsnz	sprintf@f& (0+255),f,b
  6425  010BAE  2BC5               	incf	(sprintf@f+1)& (0+255),f,b
  6426  010BB0                     l8504:
  6427  010BB0  C0C4  FFF6         	movff	sprintf@f,tblptrl
  6428  010BB4  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  6429  010BB8                     	if	0	;tblptru may be non-zero
  6430  010BB8                     	endif
  6431  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6432  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  6433  010BBA  6EF8               	movwf	tblptru,c
  6434  010BBC                     	endif
  6435  010BBC  0008               	tblrd		*
  6436  010BBE  50F5               	movf	tablat,w,c
  6437  010BC0  EC1F  F0B0         	call	_isdigit
  6438  010BC4  A0D8               	btfss	status,0,c
  6439  010BC6  D00C               	goto	l8514
  6440  010BC8  D7CE               	goto	l8500
  6441  010BCA                     l8506:
  6442                           
  6443                           ;doprnt.c: 626: prec = 0;
  6444  010BCA  0E00               	movlw	0
  6445  010BCC  0101               	movlb	1	; () banked
  6446  010BCE  6F3C               	movwf	(sprintf@prec+1)& (0+255),b
  6447  010BD0  0E00               	movlw	0
  6448  010BD2  6F3B               	movwf	sprintf@prec& (0+255),b
  6449                           
  6450                           ; BSR set to: 1
  6451                           ;doprnt.c: 628: flag |= 0x1000;
  6452  010BD4  0101               	movlb	1	; () banked
  6453  010BD6  8930               	bsf	(sprintf@flag+1)& (0+255),4,b
  6454                           
  6455                           ; BSR set to: 1
  6456                           ;doprnt.c: 630: }
  6457                           ;doprnt.c: 635: switch(c = *f++) {
  6458  010BD8  D003               	goto	l8514
  6459  010BDA                     l8510:
  6460                           
  6461                           ; BSR set to: 1
  6462                           ;doprnt.c: 663: flag |= 0x400;
  6463  010BDA  0101               	movlb	1	; () banked
  6464  010BDC  8530               	bsf	(sprintf@flag+1)& (0+255),2,b
  6465                           
  6466                           ;doprnt.c: 664: break;
  6467  010BDE  D015               	goto	l8516
  6468  010BE0                     l8514:
  6469  010BE0  C0C4  FFF6         	movff	sprintf@f,tblptrl
  6470  010BE4  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  6471  010BE8  0100               	movlb	0	; () banked
  6472  010BEA  4BC4               	infsnz	sprintf@f& (0+255),f,b
  6473  010BEC  2BC5               	incf	(sprintf@f+1)& (0+255),f,b
  6474  010BEE                     	if	0	;tblptru may be non-zero
  6475  010BEE                     	endif
  6476  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6477  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  6478  010BF0  6EF8               	movwf	tblptru,c
  6479  010BF2                     	endif
  6480  010BF2  0008               	tblrd		*
  6481  010BF4  CFF5 F141          	movff	tablat,sprintf@c
  6482  010BF8  0101               	movlb	1	; () banked
  6483  010BFA  5141               	movf	sprintf@c& (0+255),w,b
  6484                           
  6485                           ; Switch size 1, requested type "space"
  6486                           ; Number of cases is 2, Range of values is 0 to 102
  6487                           ; switch strategies available:
  6488                           ; Name         Instructions Cycles
  6489                           ; simple_byte            7     4 (average)
  6490                           ;	Chosen strategy is simple_byte
  6491  010BFC  0A00               	xorlw	0	; case 0
  6492  010BFE  B4D8               	btfsc	status,2,c
  6493  010C00  D3C5               	goto	l8686
  6494  010C02  0A66               	xorlw	102	; case 102
  6495  010C04  B4D8               	btfsc	status,2,c
  6496  010C06  D7E9               	goto	l8510
  6497  010C08  D3B0               	goto	l8684
  6498  010C0A                     l8516:
  6499                           
  6500                           ; BSR set to: 1
  6501                           ;doprnt.c: 825: if(flag & (0x700)) {
  6502  010C0A  0E07               	movlw	7
  6503  010C0C  0101               	movlb	1	; () banked
  6504  010C0E  1530               	andwf	(sprintf@flag+1)& (0+255),w,b
  6505  010C10  B4D8               	btfsc	status,2,c
  6506  010C12  D353               	goto	l8664
  6507                           
  6508                           ; BSR set to: 1
  6509                           ;doprnt.c: 827: if(flag & 0x1000)
  6510  010C14  0101               	movlb	1	; () banked
  6511  010C16  A930               	btfss	(sprintf@flag+1)& (0+255),4,b
  6512  010C18  D005               	goto	l8522
  6513                           
  6514                           ; BSR set to: 1
  6515                           ;doprnt.c: 829: prec = 6;
  6516  010C1A  0E00               	movlw	0
  6517  010C1C  0101               	movlb	1	; () banked
  6518  010C1E  6F3C               	movwf	(sprintf@prec+1)& (0+255),b
  6519  010C20  0E06               	movlw	6
  6520  010C22  6F3B               	movwf	sprintf@prec& (0+255),b
  6521  010C24                     l8522:
  6522                           
  6523                           ; BSR set to: 1
  6524                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6525  010C24  C12D  FFD9         	movff	sprintf@ap,fsr2l
  6526  010C28  C12E  FFDA         	movff	sprintf@ap+1,fsr2h
  6527  010C2C  CFDE F13D          	movff	postinc2,sprintf@fval
  6528  010C30  CFDE F13E          	movff	postinc2,sprintf@fval+1
  6529  010C34  CFDE F13F          	movff	postinc2,sprintf@fval+2
  6530  010C38  CFDE F140          	movff	postinc2,sprintf@fval+3
  6531                           
  6532                           ; BSR set to: 1
  6533  010C3C  0E04               	movlw	4
  6534  010C3E  0101               	movlb	1	; () banked
  6535  010C40  272D               	addwf	sprintf@ap& (0+255),f,b
  6536  010C42  0E00               	movlw	0
  6537  010C44  232E               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6538                           
  6539                           ; BSR set to: 1
  6540                           ;doprnt.c: 831: if(fval < 0.0) {
  6541  010C46  0101               	movlb	1	; () banked
  6542  010C48  AF40               	btfss	(sprintf@fval+3)& (0+255),7,b
  6543  010C4A  D015               	goto	l8532
  6544                           
  6545                           ; BSR set to: 1
  6546                           ;doprnt.c: 832: fval = -fval;
  6547  010C4C  C13D  F097         	movff	sprintf@fval,___flneg@f1
  6548  010C50  C13E  F098         	movff	sprintf@fval+1,___flneg@f1+1
  6549  010C54  C13F  F099         	movff	sprintf@fval+2,___flneg@f1+2
  6550  010C58  C140  F09A         	movff	sprintf@fval+3,___flneg@f1+3
  6551  010C5C  EC9C  F0AF         	call	___flneg	;wreg free
  6552  010C60  C097  F13D         	movff	?___flneg,sprintf@fval
  6553  010C64  C098  F13E         	movff	?___flneg+1,sprintf@fval+1
  6554  010C68  C099  F13F         	movff	?___flneg+2,sprintf@fval+2
  6555  010C6C  C09A  F140         	movff	?___flneg+3,sprintf@fval+3
  6556                           
  6557                           ;doprnt.c: 833: flag |= 0x03;
  6558  010C70  0E03               	movlw	3
  6559  010C72  0101               	movlb	1	; () banked
  6560  010C74  132F               	iorwf	sprintf@flag& (0+255),f,b
  6561  010C76                     l8532:
  6562                           
  6563                           ; BSR set to: 1
  6564                           ;doprnt.c: 834: }
  6565                           ;doprnt.c: 835: exp = 0;
  6566  010C76  0E00               	movlw	0
  6567  010C78  0101               	movlb	1	; () banked
  6568  010C7A  6F36               	movwf	(sprintf@exp+1)& (0+255),b
  6569  010C7C  0E00               	movlw	0
  6570  010C7E  6F35               	movwf	sprintf@exp& (0+255),b
  6571                           
  6572                           ; BSR set to: 1
  6573                           ;doprnt.c: 836: if( fval!=0) {
  6574  010C80  0101               	movlb	1	; () banked
  6575  010C82  513D               	movf	sprintf@fval& (0+255),w,b
  6576  010C84  0101               	movlb	1	; () banked
  6577  010C86  113E               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6578  010C88  0101               	movlb	1	; () banked
  6579  010C8A  113F               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6580  010C8C  0101               	movlb	1	; () banked
  6581  010C8E  1140               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6582  010C90  B4D8               	btfsc	status,2,c
  6583  010C92  D08E               	goto	l8560
  6584                           
  6585                           ; BSR set to: 1
  6586                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  6587  010C94  0101               	movlb	1	; () banked
  6588  010C96  353F               	rlcf	(sprintf@fval+2)& (0+255),w,b
  6589  010C98  3540               	rlcf	(sprintf@fval+3)& (0+255),w,b
  6590  010C9A  0F82               	addlw	130
  6591  010C9C  0101               	movlb	1	; () banked
  6592  010C9E  6F35               	movwf	sprintf@exp& (0+255),b
  6593  010CA0  0101               	movlb	1	; () banked
  6594  010CA2  6B36               	clrf	(sprintf@exp+1)& (0+255),b
  6595  010CA4  0EFF               	movlw	255
  6596  010CA6  2336               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6597                           
  6598                           ; BSR set to: 1
  6599                           ;doprnt.c: 838: exp--;
  6600  010CA8  0101               	movlb	1	; () banked
  6601  010CAA  0735               	decf	sprintf@exp& (0+255),f,b
  6602  010CAC  A0D8               	btfss	status,0,c
  6603  010CAE  0736               	decf	(sprintf@exp+1)& (0+255),f,b
  6604                           
  6605                           ; BSR set to: 1
  6606                           ;doprnt.c: 839: exp *= 3;
  6607  010CB0  C135  F070         	movff	sprintf@exp,___wmul@multiplier
  6608  010CB4  C136  F071         	movff	sprintf@exp+1,___wmul@multiplier+1
  6609  010CB8  0E00               	movlw	0
  6610  010CBA  0100               	movlb	0	; () banked
  6611  010CBC  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6612  010CBE  0E03               	movlw	3
  6613  010CC0  6F72               	movwf	___wmul@multiplicand& (0+255),b
  6614  010CC2  ECB8  F0AF         	call	___wmul	;wreg free
  6615  010CC6  C070  F135         	movff	?___wmul,sprintf@exp
  6616  010CCA  C071  F136         	movff	?___wmul+1,sprintf@exp+1
  6617                           
  6618                           ;doprnt.c: 840: exp /= 10;
  6619  010CCE  C135  F076         	movff	sprintf@exp,___awdiv@dividend
  6620  010CD2  C136  F077         	movff	sprintf@exp+1,___awdiv@dividend+1
  6621  010CD6  0E00               	movlw	0
  6622  010CD8  0100               	movlb	0	; () banked
  6623  010CDA  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  6624  010CDC  0E0A               	movlw	10
  6625  010CDE  6F78               	movwf	___awdiv@divisor& (0+255),b
  6626  010CE0  EC32  F0AB         	call	___awdiv	;wreg free
  6627  010CE4  C076  F135         	movff	?___awdiv,sprintf@exp
  6628  010CE8  C077  F136         	movff	?___awdiv+1,sprintf@exp+1
  6629                           
  6630                           ;doprnt.c: 841: if(exp < 0)
  6631  010CEC  0101               	movlb	1	; () banked
  6632  010CEE  AF36               	btfss	(sprintf@exp+1)& (0+255),7,b
  6633  010CF0  D004               	goto	l8548
  6634                           
  6635                           ; BSR set to: 1
  6636                           ;doprnt.c: 842: exp--;
  6637  010CF2  0101               	movlb	1	; () banked
  6638  010CF4  0735               	decf	sprintf@exp& (0+255),f,b
  6639  010CF6  A0D8               	btfss	status,0,c
  6640  010CF8  0736               	decf	(sprintf@exp+1)& (0+255),f,b
  6641  010CFA                     l8548:
  6642                           
  6643                           ; BSR set to: 1
  6644                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6645  010CFA  0101               	movlb	1	; () banked
  6646  010CFC  5135               	movf	sprintf@exp& (0+255),w,b
  6647  010CFE  0800               	sublw	0
  6648  010D00  ECFC  F093         	call	_scale
  6649  010D04  C097  F137         	movff	?_scale,sprintf@tmpval
  6650  010D08  C098  F138         	movff	?_scale+1,sprintf@tmpval+1
  6651  010D0C  C099  F139         	movff	?_scale+2,sprintf@tmpval+2
  6652  010D10  C09A  F13A         	movff	?_scale+3,sprintf@tmpval+3
  6653                           
  6654                           ;doprnt.c: 847: tmpval.integ *= fval;
  6655  010D14  C137  F07E         	movff	sprintf@tmpval,___flmul@b
  6656  010D18  C138  F07F         	movff	sprintf@tmpval+1,___flmul@b+1
  6657  010D1C  C139  F080         	movff	sprintf@tmpval+2,___flmul@b+2
  6658  010D20  C13A  F081         	movff	sprintf@tmpval+3,___flmul@b+3
  6659  010D24  C13D  F082         	movff	sprintf@fval,___flmul@a
  6660  010D28  C13E  F083         	movff	sprintf@fval+1,___flmul@a+1
  6661  010D2C  C13F  F084         	movff	sprintf@fval+2,___flmul@a+2
  6662  010D30  C140  F085         	movff	sprintf@fval+3,___flmul@a+3
  6663  010D34  EC63  F09B         	call	___flmul	;wreg free
  6664  010D38  C07E  F137         	movff	?___flmul,sprintf@tmpval
  6665  010D3C  C07F  F138         	movff	?___flmul+1,sprintf@tmpval+1
  6666  010D40  C080  F139         	movff	?___flmul+2,sprintf@tmpval+2
  6667  010D44  C081  F13A         	movff	?___flmul+3,sprintf@tmpval+3
  6668                           
  6669                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6670  010D48  C137  F070         	movff	sprintf@tmpval,___flge@ff1
  6671  010D4C  C138  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  6672  010D50  C139  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  6673  010D54  C13A  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  6674  010D58  0E00               	movlw	0
  6675  010D5A  0100               	movlb	0	; () banked
  6676  010D5C  6F74               	movwf	___flge@ff2& (0+255),b
  6677  010D5E  0E00               	movlw	0
  6678  010D60  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  6679  010D62  0E80               	movlw	128
  6680  010D64  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  6681  010D66  0E3F               	movlw	63
  6682  010D68  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  6683  010D6A  EC30  F0A7         	call	___flge	;wreg free
  6684  010D6E  0100               	movlb	0	; () banked
  6685  010D70  B0D8               	btfsc	status,0,c
  6686  010D72  D005               	goto	l8556
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;doprnt.c: 849: exp--;
  6690  010D74  0101               	movlb	1	; () banked
  6691  010D76  0735               	decf	sprintf@exp& (0+255),f,b
  6692  010D78  A0D8               	btfss	status,0,c
  6693  010D7A  0736               	decf	(sprintf@exp+1)& (0+255),f,b
  6694  010D7C  D019               	goto	l8560
  6695  010D7E                     l8556:
  6696                           
  6697                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6698  010D7E  C137  F070         	movff	sprintf@tmpval,___flge@ff1
  6699  010D82  C138  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  6700  010D86  C139  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  6701  010D8A  C13A  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  6702  010D8E  0E00               	movlw	0
  6703  010D90  0100               	movlb	0	; () banked
  6704  010D92  6F74               	movwf	___flge@ff2& (0+255),b
  6705  010D94  0E00               	movlw	0
  6706  010D96  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  6707  010D98  0E20               	movlw	32
  6708  010D9A  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  6709  010D9C  0E41               	movlw	65
  6710  010D9E  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  6711  010DA0  EC30  F0A7         	call	___flge	;wreg free
  6712  010DA4  0100               	movlb	0	; () banked
  6713  010DA6  A0D8               	btfss	status,0,c
  6714  010DA8  D003               	goto	l8560
  6715                           
  6716                           ; BSR set to: 0
  6717                           ;doprnt.c: 851: exp++;
  6718  010DAA  0101               	movlb	1	; () banked
  6719  010DAC  4B35               	infsnz	sprintf@exp& (0+255),f,b
  6720  010DAE  2B36               	incf	(sprintf@exp+1)& (0+255),f,b
  6721  010DB0                     l8560:
  6722                           
  6723                           ;doprnt.c: 852: }
  6724                           ;doprnt.c: 1112: if(prec <= 12)
  6725  010DB0  0101               	movlb	1	; () banked
  6726  010DB2  BF3C               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6727  010DB4  D008               	goto	l8562
  6728  010DB6  0101               	movlb	1	; () banked
  6729  010DB8  513C               	movf	(sprintf@prec+1)& (0+255),w,b
  6730  010DBA  E123               	bnz	l8564
  6731  010DBC  0E0D               	movlw	13
  6732  010DBE  0101               	movlb	1	; () banked
  6733  010DC0  5D3B               	subwf	sprintf@prec& (0+255),w,b
  6734  010DC2  B0D8               	btfsc	status,0,c
  6735  010DC4  D01E               	goto	l8564
  6736  010DC6                     l8562:
  6737                           
  6738                           ; BSR set to: 1
  6739                           ;doprnt.c: 1113: fval += fround(prec);
  6740  010DC6  C13D  F0A4         	movff	sprintf@fval,___fladd@b
  6741  010DCA  C13E  F0A5         	movff	sprintf@fval+1,___fladd@b+1
  6742  010DCE  C13F  F0A6         	movff	sprintf@fval+2,___fladd@b+2
  6743  010DD2  C140  F0A7         	movff	sprintf@fval+3,___fladd@b+3
  6744  010DD6  0101               	movlb	1	; () banked
  6745  010DD8  513B               	movf	sprintf@prec& (0+255),w,b
  6746  010DDA  EC65  F0A1         	call	_fround
  6747  010DDE  C097  F0A8         	movff	?_fround,___fladd@a
  6748  010DE2  C098  F0A9         	movff	?_fround+1,___fladd@a+1
  6749  010DE6  C099  F0AA         	movff	?_fround+2,___fladd@a+2
  6750  010DEA  C09A  F0AB         	movff	?_fround+3,___fladd@a+3
  6751  010DEE  EC0F  F099         	call	___fladd	;wreg free
  6752  010DF2  C0A4  F13D         	movff	?___fladd,sprintf@fval
  6753  010DF6  C0A5  F13E         	movff	?___fladd+1,sprintf@fval+1
  6754  010DFA  C0A6  F13F         	movff	?___fladd+2,sprintf@fval+2
  6755  010DFE  C0A7  F140         	movff	?___fladd+3,sprintf@fval+3
  6756  010E02                     l8564:
  6757                           
  6758                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6759  010E02  0101               	movlb	1	; () banked
  6760  010E04  BF36               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6761  010E06  D008               	goto	l8566
  6762  010E08  0101               	movlb	1	; () banked
  6763  010E0A  5136               	movf	(sprintf@exp+1)& (0+255),w,b
  6764  010E0C  E12E               	bnz	l8572
  6765  010E0E  0E0A               	movlw	10
  6766  010E10  0101               	movlb	1	; () banked
  6767  010E12  5D35               	subwf	sprintf@exp& (0+255),w,b
  6768  010E14  B0D8               	btfsc	status,0,c
  6769  010E16  D029               	goto	l8572
  6770  010E18                     l8566:
  6771                           
  6772                           ; BSR set to: 1
  6773  010E18  0101               	movlb	1	; () banked
  6774  010E1A  513D               	movf	sprintf@fval& (0+255),w,b
  6775  010E1C  0101               	movlb	1	; () banked
  6776  010E1E  113E               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6777  010E20  0101               	movlb	1	; () banked
  6778  010E22  113F               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6779  010E24  0101               	movlb	1	; () banked
  6780  010E26  1140               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6781  010E28  B4D8               	btfsc	status,2,c
  6782  010E2A  D06D               	goto	l8586
  6783                           
  6784                           ; BSR set to: 1
  6785  010E2C  C13D  F0B8         	movff	sprintf@fval,___fltol@f1
  6786  010E30  C13E  F0B9         	movff	sprintf@fval+1,___fltol@f1+1
  6787  010E34  C13F  F0BA         	movff	sprintf@fval+2,___fltol@f1+2
  6788  010E38  C140  F0BB         	movff	sprintf@fval+3,___fltol@f1+3
  6789  010E3C  EC36  F0AA         	call	___fltol	;wreg free
  6790  010E40  0100               	movlb	0	; () banked
  6791  010E42  51B8               	movf	?___fltol& (0+255),w,b
  6792  010E44  0100               	movlb	0	; () banked
  6793  010E46  11B9               	iorwf	(?___fltol+1)& (0+255),w,b
  6794  010E48  0100               	movlb	0	; () banked
  6795  010E4A  11BA               	iorwf	(?___fltol+2)& (0+255),w,b
  6796  010E4C  0100               	movlb	0	; () banked
  6797  010E4E  11BB               	iorwf	(?___fltol+3)& (0+255),w,b
  6798  010E50  A4D8               	btfss	status,2,c
  6799  010E52  D059               	goto	l8586
  6800                           
  6801                           ; BSR set to: 0
  6802  010E54  0101               	movlb	1	; () banked
  6803  010E56  BF36               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6804  010E58  D056               	goto	l8586
  6805  010E5A  0101               	movlb	1	; () banked
  6806  010E5C  5136               	movf	(sprintf@exp+1)& (0+255),w,b
  6807  010E5E  E105               	bnz	l8572
  6808  010E60  0E02               	movlw	2
  6809  010E62  0101               	movlb	1	; () banked
  6810  010E64  5D35               	subwf	sprintf@exp& (0+255),w,b
  6811  010E66  A0D8               	btfss	status,0,c
  6812  010E68  D04E               	goto	l8586
  6813  010E6A                     l8572:
  6814                           
  6815                           ; BSR set to: 1
  6816                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6817  010E6A  C137  F070         	movff	sprintf@tmpval,___flge@ff1
  6818  010E6E  C138  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  6819  010E72  C139  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  6820  010E76  C13A  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  6821  010E7A  0E5F               	movlw	95
  6822  010E7C  0100               	movlb	0	; () banked
  6823  010E7E  6F74               	movwf	___flge@ff2& (0+255),b
  6824  010E80  0E70               	movlw	112
  6825  010E82  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  6826  010E84  0E89               	movlw	137
  6827  010E86  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  6828  010E88  0E40               	movlw	64
  6829  010E8A  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  6830  010E8C  EC30  F0A7         	call	___flge	;wreg free
  6831  010E90  0100               	movlb	0	; () banked
  6832  010E92  B0D8               	btfsc	status,0,c
  6833  010E94  D003               	goto	l8576
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6837  010E96  0101               	movlb	1	; () banked
  6838  010E98  0EF7               	movlw	247
  6839  010E9A  D002               	goto	L3
  6840  010E9C                     l8576:
  6841                           
  6842                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6843  010E9C  0101               	movlb	1	; () banked
  6844  010E9E  0EF8               	movlw	248
  6845  010EA0                     L3:
  6846  010EA0  2735               	addwf	sprintf@exp& (0+255),f,b
  6847  010EA2  0EFF               	movlw	255
  6848  010EA4  2336               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6849                           
  6850                           ; BSR set to: 1
  6851                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6852                           
  6853                           ; BSR set to: 1
  6854  010EA6  0101               	movlb	1	; () banked
  6855  010EA8  5135               	movf	sprintf@exp& (0+255),w,b
  6856  010EAA  ECFC  F093         	call	_scale
  6857  010EAE  C097  F137         	movff	?_scale,sprintf@tmpval
  6858  010EB2  C098  F138         	movff	?_scale+1,sprintf@tmpval+1
  6859  010EB6  C099  F139         	movff	?_scale+2,sprintf@tmpval+2
  6860  010EBA  C09A  F13A         	movff	?_scale+3,sprintf@tmpval+3
  6861  010EBE  C13D  F070         	movff	sprintf@fval,__div_to_l_@f1
  6862  010EC2  C13E  F071         	movff	sprintf@fval+1,__div_to_l_@f1+1
  6863  010EC6  C13F  F072         	movff	sprintf@fval+2,__div_to_l_@f1+2
  6864  010ECA  C140  F073         	movff	sprintf@fval+3,__div_to_l_@f1+3
  6865  010ECE  C137  F074         	movff	sprintf@tmpval,__div_to_l_@f2
  6866  010ED2  C138  F075         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  6867  010ED6  C139  F076         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  6868  010EDA  C13A  F077         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  6869  010EDE  ECF8  F0A7         	call	__div_to_l_	;wreg free
  6870  010EE2  C070  F131         	movff	?__div_to_l_,sprintf@val
  6871  010EE6  C071  F132         	movff	?__div_to_l_+1,sprintf@val+1
  6872  010EEA  C072  F133         	movff	?__div_to_l_+2,sprintf@val+2
  6873  010EEE  C073  F134         	movff	?__div_to_l_+3,sprintf@val+3
  6874                           
  6875                           ;doprnt.c: 1129: fval = 0.0;
  6876  010EF2  0E00               	movlw	0
  6877  010EF4  0101               	movlb	1	; () banked
  6878  010EF6  6F3D               	movwf	sprintf@fval& (0+255),b
  6879  010EF8  0E00               	movlw	0
  6880  010EFA  6F3E               	movwf	(sprintf@fval+1)& (0+255),b
  6881  010EFC  0E00               	movlw	0
  6882  010EFE  6F3F               	movwf	(sprintf@fval+2)& (0+255),b
  6883  010F00  0E00               	movlw	0
  6884  010F02  6F40               	movwf	(sprintf@fval+3)& (0+255),b
  6885                           
  6886                           ;doprnt.c: 1130: } else {
  6887  010F04  D03C               	goto	l8590
  6888  010F06                     l8586:
  6889                           
  6890                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6891  010F06  C13D  F0B8         	movff	sprintf@fval,___fltol@f1
  6892  010F0A  C13E  F0B9         	movff	sprintf@fval+1,___fltol@f1+1
  6893  010F0E  C13F  F0BA         	movff	sprintf@fval+2,___fltol@f1+2
  6894  010F12  C140  F0BB         	movff	sprintf@fval+3,___fltol@f1+3
  6895  010F16  EC36  F0AA         	call	___fltol	;wreg free
  6896  010F1A  C0B8  F131         	movff	?___fltol,sprintf@val
  6897  010F1E  C0B9  F132         	movff	?___fltol+1,sprintf@val+1
  6898  010F22  C0BA  F133         	movff	?___fltol+2,sprintf@val+2
  6899  010F26  C0BB  F134         	movff	?___fltol+3,sprintf@val+3
  6900                           
  6901                           ;doprnt.c: 1132: fval -= (double)val;
  6902  010F2A  C13D  F0B8         	movff	sprintf@fval,___flsub@b
  6903  010F2E  C13E  F0B9         	movff	sprintf@fval+1,___flsub@b+1
  6904  010F32  C13F  F0BA         	movff	sprintf@fval+2,___flsub@b+2
  6905  010F36  C140  F0BB         	movff	sprintf@fval+3,___flsub@b+3
  6906  010F3A  C131  F070         	movff	sprintf@val,___xxtofl@val
  6907  010F3E  C132  F071         	movff	sprintf@val+1,___xxtofl@val+1
  6908  010F42  C133  F072         	movff	sprintf@val+2,___xxtofl@val+2
  6909  010F46  C134  F073         	movff	sprintf@val+3,___xxtofl@val+3
  6910  010F4A  0E00               	movlw	0
  6911  010F4C  ECE0  F0A2         	call	___xxtofl
  6912  010F50  C070  F0BC         	movff	?___xxtofl,___flsub@a
  6913  010F54  C071  F0BD         	movff	?___xxtofl+1,___flsub@a+1
  6914  010F58  C072  F0BE         	movff	?___xxtofl+2,___flsub@a+2
  6915  010F5C  C073  F0BF         	movff	?___xxtofl+3,___flsub@a+3
  6916  010F60  ECF8  F0AE         	call	___flsub	;wreg free
  6917  010F64  C0B8  F13D         	movff	?___flsub,sprintf@fval
  6918  010F68  C0B9  F13E         	movff	?___flsub+1,sprintf@fval+1
  6919  010F6C  C0BA  F13F         	movff	?___flsub+2,sprintf@fval+2
  6920  010F70  C0BB  F140         	movff	?___flsub+3,sprintf@fval+3
  6921                           
  6922                           ;doprnt.c: 1133: exp = 0;
  6923  010F74  0E00               	movlw	0
  6924  010F76  0101               	movlb	1	; () banked
  6925  010F78  6F36               	movwf	(sprintf@exp+1)& (0+255),b
  6926  010F7A  0E00               	movlw	0
  6927  010F7C  6F35               	movwf	sprintf@exp& (0+255),b
  6928  010F7E                     l8590:
  6929                           
  6930                           ; BSR set to: 1
  6931                           ;doprnt.c: 1134: }
  6932                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6933  010F7E  0E01               	movlw	1
  6934  010F80  0101               	movlb	1	; () banked
  6935  010F82  6F41               	movwf	sprintf@c& (0+255),b
  6936  010F84                     l8592:
  6937                           
  6938                           ; BSR set to: 1
  6939  010F84  0E0A               	movlw	10
  6940  010F86  0101               	movlb	1	; () banked
  6941  010F88  1941               	xorwf	sprintf@c& (0+255),w,b
  6942  010F8A  B4D8               	btfsc	status,2,c
  6943  010F8C  D021               	goto	l8604
  6944                           
  6945                           ; BSR set to: 1
  6946                           ;doprnt.c: 1137: if(val < dpowers[c])
  6947                           
  6948                           ; BSR set to: 1
  6949                           
  6950                           ; BSR set to: 1
  6951  010F8E  0101               	movlb	1	; () banked
  6952  010F90  5141               	movf	sprintf@c& (0+255),w,b
  6953  010F92  0D04               	mullw	4
  6954  010F94  0E1D               	movlw	low _dpowers
  6955  010F96  24F3               	addwf	prodl,w,c
  6956  010F98  6EF6               	movwf	tblptrl,c
  6957  010F9A  0EFF               	movlw	high _dpowers
  6958  010F9C  20F4               	addwfc	prodh,w,c
  6959  010F9E  6EF7               	movwf	tblptrh,c
  6960  010FA0                     	if	1	;There are 3 active tblptr bytes
  6961  010FA0  6AF8               	clrf	tblptru,c
  6962  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  6963  010FA4  22F8               	addwfc	tblptru,f,c
  6964  010FA6                     	endif
  6965  010FA6  0009               	tblrd		*+
  6966  010FA8  50F5               	movf	tablat,w,c
  6967  010FAA  0101               	movlb	1	; () banked
  6968  010FAC  5D31               	subwf	sprintf@val& (0+255),w,b
  6969  010FAE  0009               	tblrd		*+
  6970  010FB0  50F5               	movf	tablat,w,c
  6971  010FB2  0101               	movlb	1	; () banked
  6972  010FB4  5932               	subwfb	(sprintf@val+1)& (0+255),w,b
  6973  010FB6  0009               	tblrd		*+
  6974  010FB8  50F5               	movf	tablat,w,c
  6975  010FBA  0101               	movlb	1	; () banked
  6976  010FBC  5933               	subwfb	(sprintf@val+2)& (0+255),w,b
  6977  010FBE  0009               	tblrd		*+
  6978  010FC0  50F5               	movf	tablat,w,c
  6979  010FC2  0101               	movlb	1	; () banked
  6980  010FC4  5934               	subwfb	(sprintf@val+3)& (0+255),w,b
  6981  010FC6  A0D8               	btfss	status,0,c
  6982  010FC8  D003               	goto	l8604
  6983                           
  6984                           ; BSR set to: 1
  6985                           
  6986                           ; BSR set to: 1
  6987                           
  6988                           ; BSR set to: 1
  6989                           ;doprnt.c: 1138: break;
  6990  010FCA  0101               	movlb	1	; () banked
  6991  010FCC  2B41               	incf	sprintf@c& (0+255),f,b
  6992  010FCE  D7DA               	goto	l8592
  6993  010FD0                     l8604:
  6994                           
  6995                           ; BSR set to: 1
  6996                           ;doprnt.c: 1175: {
  6997                           ;doprnt.c: 1188: if(flag & 0x03)
  6998  010FD0  0E03               	movlw	3
  6999  010FD2  0101               	movlb	1	; () banked
  7000  010FD4  152F               	andwf	sprintf@flag& (0+255),w,b
  7001  010FD6  0100               	movlb	0	; () banked
  7002  010FD8  6FCA               	movwf	??_sprintf& (0+255),b
  7003  010FDA  0E00               	movlw	0
  7004  010FDC  0101               	movlb	1	; () banked
  7005  010FDE  1530               	andwf	(sprintf@flag+1)& (0+255),w,b
  7006  010FE0  0100               	movlb	0	; () banked
  7007  010FE2  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  7008  010FE4  0100               	movlb	0	; () banked
  7009  010FE6  51CA               	movf	??_sprintf& (0+255),w,b
  7010  010FE8  0100               	movlb	0	; () banked
  7011  010FEA  11CB               	iorwf	(??_sprintf+1)& (0+255),w,b
  7012  010FEC  B4D8               	btfsc	status,2,c
  7013  010FEE  D058               	goto	l8618
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7017  010FF0  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7018  010FF4  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7019  010FF8  0E2D               	movlw	45
  7020  010FFA  D050               	goto	L4
  7021  010FFC                     l8608:
  7022                           
  7023                           ; BSR set to: 0
  7024  010FFC  0100               	movlb	0	; () banked
  7025  010FFE  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  7026  011000  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  7027                           
  7028                           ; BSR set to: 0
  7029                           ;doprnt.c: 1195: }
  7030                           ;doprnt.c: 1196: while(c--) {
  7031  011002  D04E               	goto	l8618
  7032  011004                     l8610:
  7033                           
  7034                           ;doprnt.c: 1200: {
  7035                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7036  011004  C131  F070         	movff	sprintf@val,___lldiv@dividend
  7037  011008  C132  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  7038  01100C  C133  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  7039  011010  C134  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  7040  011014  0101               	movlb	1	; () banked
  7041  011016  5141               	movf	sprintf@c& (0+255),w,b
  7042  011018  0D04               	mullw	4
  7043  01101A  0E1D               	movlw	low _dpowers
  7044  01101C  24F3               	addwf	prodl,w,c
  7045  01101E  6EF6               	movwf	tblptrl,c
  7046  011020  0EFF               	movlw	high _dpowers
  7047  011022  20F4               	addwfc	prodh,w,c
  7048  011024  6EF7               	movwf	tblptrh,c
  7049  011026                     	if	1	;There are 3 active tblptr bytes
  7050  011026  6AF8               	clrf	tblptru,c
  7051  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  7052  01102A  22F8               	addwfc	tblptru,f,c
  7053  01102C                     	endif
  7054  01102C  0009               	tblrd		*+
  7055  01102E  CFF5 F074          	movff	tablat,___lldiv@divisor
  7056  011032  0009               	tblrd		*+
  7057  011034  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  7058  011038  0009               	tblrd		*+
  7059  01103A  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  7060  01103E  000A               	tblrd		*-
  7061  011040  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  7062  011044  ECF0  F0AB         	call	___lldiv	;wreg free
  7063  011048  C070  F137         	movff	?___lldiv,sprintf@tmpval
  7064  01104C  C071  F138         	movff	?___lldiv+1,sprintf@tmpval+1
  7065  011050  C072  F139         	movff	?___lldiv+2,sprintf@tmpval+2
  7066  011054  C073  F13A         	movff	?___lldiv+3,sprintf@tmpval+3
  7067                           
  7068                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7069  011058  C137  F070         	movff	sprintf@tmpval,___llmod@dividend
  7070  01105C  C138  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7071  011060  C139  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7072  011064  C13A  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7073  011068  0E0A               	movlw	10
  7074  01106A  0100               	movlb	0	; () banked
  7075  01106C  6F74               	movwf	___llmod@divisor& (0+255),b
  7076  01106E  0E00               	movlw	0
  7077  011070  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  7078  011072  0E00               	movlw	0
  7079  011074  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  7080  011076  0E00               	movlw	0
  7081  011078  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  7082  01107A  ECA3  F0AD         	call	___llmod	;wreg free
  7083  01107E  C070  F137         	movff	?___llmod,sprintf@tmpval
  7084  011082  C071  F138         	movff	?___llmod+1,sprintf@tmpval+1
  7085  011086  C072  F139         	movff	?___llmod+2,sprintf@tmpval+2
  7086  01108A  C073  F13A         	movff	?___llmod+3,sprintf@tmpval+3
  7087                           
  7088                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7089  01108E  0101               	movlb	1	; () banked
  7090  011090  5137               	movf	sprintf@tmpval& (0+255),w,b
  7091  011092  0F30               	addlw	48
  7092  011094  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7093  011098  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7094  01109C                     L4:
  7095  01109C  6EDF               	movwf	indf2,c
  7096  01109E  D7AE               	goto	l8608
  7097  0110A0                     l8618:
  7098                           
  7099                           ; BSR set to: 0
  7100  0110A0  0101               	movlb	1	; () banked
  7101  0110A2  0741               	decf	sprintf@c& (0+255),f,b
  7102  0110A4  0101               	movlb	1	; () banked
  7103  0110A6  2941               	incf	sprintf@c& (0+255),w,b
  7104  0110A8  B4D8               	btfsc	status,2,c
  7105  0110AA  D00E               	goto	l8626
  7106  0110AC  D7AB               	goto	l8610
  7107  0110AE                     l8620:
  7108                           
  7109                           ; BSR set to: 1
  7110                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7111  0110AE  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7112  0110B2  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7113  0110B6  0E30               	movlw	48
  7114  0110B8  6EDF               	movwf	indf2,c
  7115                           
  7116                           ; BSR set to: 1
  7117  0110BA  0100               	movlb	0	; () banked
  7118  0110BC  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  7119  0110BE  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;doprnt.c: 1209: exp--;
  7123  0110C0  0101               	movlb	1	; () banked
  7124  0110C2  0735               	decf	sprintf@exp& (0+255),f,b
  7125  0110C4  A0D8               	btfss	status,0,c
  7126  0110C6  0736               	decf	(sprintf@exp+1)& (0+255),f,b
  7127  0110C8                     l8626:
  7128                           
  7129                           ; BSR set to: 1
  7130  0110C8  0101               	movlb	1	; () banked
  7131  0110CA  BF36               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7132  0110CC  D007               	goto	l8628
  7133  0110CE  0101               	movlb	1	; () banked
  7134  0110D0  5136               	movf	(sprintf@exp+1)& (0+255),w,b
  7135  0110D2  E1ED               	bnz	l8620
  7136  0110D4  0101               	movlb	1	; () banked
  7137  0110D6  0535               	decf	sprintf@exp& (0+255),w,b
  7138  0110D8  B0D8               	btfsc	status,0,c
  7139  0110DA  D7E9               	goto	l8620
  7140  0110DC                     l8628:
  7141                           
  7142                           ; BSR set to: 1
  7143                           ;doprnt.c: 1210: }
  7144                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7145  0110DC  0101               	movlb	1	; () banked
  7146  0110DE  BF3C               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7147  0110E0  D00C               	goto	l970
  7148  0110E2  0101               	movlb	1	; () banked
  7149  0110E4  513C               	movf	(sprintf@prec+1)& (0+255),w,b
  7150  0110E6  E105               	bnz	u11480
  7151  0110E8  0E09               	movlw	9
  7152  0110EA  0101               	movlb	1	; () banked
  7153  0110EC  5D3B               	subwf	sprintf@prec& (0+255),w,b
  7154  0110EE  A0D8               	btfss	status,0,c
  7155  0110F0  D004               	goto	l970
  7156  0110F2                     u11480:
  7157                           
  7158                           ; BSR set to: 1
  7159                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7160  0110F2  0E08               	movlw	8
  7161  0110F4  0101               	movlb	1	; () banked
  7162  0110F6  6F41               	movwf	sprintf@c& (0+255),b
  7163  0110F8  D002               	goto	l8632
  7164  0110FA                     l970:
  7165                           
  7166                           ; BSR set to: 1
  7167                           ;doprnt.c: 1213: else
  7168                           ;doprnt.c: 1214: c = prec;
  7169  0110FA  C13B  F141         	movff	sprintf@prec,sprintf@c
  7170  0110FE                     l8632:
  7171                           
  7172                           ; BSR set to: 1
  7173                           ;doprnt.c: 1215: prec -= c;
  7174  0110FE  0101               	movlb	1	; () banked
  7175  011100  5141               	movf	sprintf@c& (0+255),w,b
  7176  011102  0101               	movlb	1	; () banked
  7177  011104  5F3B               	subwf	sprintf@prec& (0+255),f,b
  7178  011106  0E00               	movlw	0
  7179  011108  0101               	movlb	1	; () banked
  7180  01110A  BF41               	btfsc	sprintf@c& (0+255),7,b
  7181  01110C  0EFF               	movlw	255
  7182  01110E  0101               	movlb	1	; () banked
  7183  011110  5B3C               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7184                           
  7185                           ; BSR set to: 1
  7186                           ;doprnt.c: 1219: if(c)
  7187  011112  0101               	movlb	1	; () banked
  7188  011114  5141               	movf	sprintf@c& (0+255),w,b
  7189  011116  0101               	movlb	1	; () banked
  7190  011118  B4D8               	btfsc	status,2,c
  7191  01111A  D009               	goto	l8640
  7192                           
  7193                           ; BSR set to: 1
  7194                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7195  01111C  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7196  011120  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7197  011124  0E2E               	movlw	46
  7198  011126  6EDF               	movwf	indf2,c
  7199                           
  7200                           ; BSR set to: 1
  7201  011128  0100               	movlb	0	; () banked
  7202  01112A  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  7203  01112C  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  7204  01112E                     l8640:
  7205                           
  7206                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7207  01112E  0101               	movlb	1	; () banked
  7208  011130  5141               	movf	sprintf@c& (0+255),w,b
  7209  011132  ECFC  F093         	call	_scale
  7210  011136  C097  F129         	movff	?_scale,_sprintf$4220
  7211  01113A  C098  F12A         	movff	?_scale+1,_sprintf$4220+1
  7212  01113E  C099  F12B         	movff	?_scale+2,_sprintf$4220+2
  7213  011142  C09A  F12C         	movff	?_scale+3,_sprintf$4220+3
  7214                           
  7215                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7216  011146  C13D  F082         	movff	sprintf@fval,___flmul@a
  7217  01114A  C13E  F083         	movff	sprintf@fval+1,___flmul@a+1
  7218  01114E  C13F  F084         	movff	sprintf@fval+2,___flmul@a+2
  7219  011152  C140  F085         	movff	sprintf@fval+3,___flmul@a+3
  7220  011156  C129  F07E         	movff	_sprintf$4220,___flmul@b
  7221  01115A  C12A  F07F         	movff	_sprintf$4220+1,___flmul@b+1
  7222  01115E  C12B  F080         	movff	_sprintf$4220+2,___flmul@b+2
  7223  011162  C12C  F081         	movff	_sprintf$4220+3,___flmul@b+3
  7224  011166  EC63  F09B         	call	___flmul	;wreg free
  7225  01116A  C07E  F0B8         	movff	?___flmul,___fltol@f1
  7226  01116E  C07F  F0B9         	movff	?___flmul+1,___fltol@f1+1
  7227  011172  C080  F0BA         	movff	?___flmul+2,___fltol@f1+2
  7228  011176  C081  F0BB         	movff	?___flmul+3,___fltol@f1+3
  7229  01117A  EC36  F0AA         	call	___fltol	;wreg free
  7230  01117E  C0B8  F131         	movff	?___fltol,sprintf@val
  7231  011182  C0B9  F132         	movff	?___fltol+1,sprintf@val+1
  7232  011186  C0BA  F133         	movff	?___fltol+2,sprintf@val+2
  7233  01118A  C0BB  F134         	movff	?___fltol+3,sprintf@val+3
  7234                           
  7235                           ;doprnt.c: 1228: while(c--) {
  7236  01118E  D07A               	goto	l8654
  7237  011190                     l8644:
  7238                           
  7239                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7240  011190  C131  F070         	movff	sprintf@val,___lldiv@dividend
  7241  011194  C132  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  7242  011198  C133  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  7243  01119C  C134  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  7244  0111A0  0101               	movlb	1	; () banked
  7245  0111A2  5141               	movf	sprintf@c& (0+255),w,b
  7246  0111A4  0D04               	mullw	4
  7247  0111A6  0E1D               	movlw	low _dpowers
  7248  0111A8  24F3               	addwf	prodl,w,c
  7249  0111AA  6EF6               	movwf	tblptrl,c
  7250  0111AC  0EFF               	movlw	high _dpowers
  7251  0111AE  20F4               	addwfc	prodh,w,c
  7252  0111B0  6EF7               	movwf	tblptrh,c
  7253  0111B2                     	if	1	;There are 3 active tblptr bytes
  7254  0111B2  6AF8               	clrf	tblptru,c
  7255  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  7256  0111B6  22F8               	addwfc	tblptru,f,c
  7257  0111B8                     	endif
  7258  0111B8  0009               	tblrd		*+
  7259  0111BA  CFF5 F074          	movff	tablat,___lldiv@divisor
  7260  0111BE  0009               	tblrd		*+
  7261  0111C0  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  7262  0111C4  0009               	tblrd		*+
  7263  0111C6  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  7264  0111CA  000A               	tblrd		*-
  7265  0111CC  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  7266  0111D0  ECF0  F0AB         	call	___lldiv	;wreg free
  7267  0111D4  C070  F137         	movff	?___lldiv,sprintf@tmpval
  7268  0111D8  C071  F138         	movff	?___lldiv+1,sprintf@tmpval+1
  7269  0111DC  C072  F139         	movff	?___lldiv+2,sprintf@tmpval+2
  7270  0111E0  C073  F13A         	movff	?___lldiv+3,sprintf@tmpval+3
  7271                           
  7272                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7273  0111E4  C137  F070         	movff	sprintf@tmpval,___llmod@dividend
  7274  0111E8  C138  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7275  0111EC  C139  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7276  0111F0  C13A  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7277  0111F4  0E0A               	movlw	10
  7278  0111F6  0100               	movlb	0	; () banked
  7279  0111F8  6F74               	movwf	___llmod@divisor& (0+255),b
  7280  0111FA  0E00               	movlw	0
  7281  0111FC  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  7282  0111FE  0E00               	movlw	0
  7283  011200  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  7284  011202  0E00               	movlw	0
  7285  011204  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  7286  011206  ECA3  F0AD         	call	___llmod	;wreg free
  7287  01120A  C070  F137         	movff	?___llmod,sprintf@tmpval
  7288  01120E  C071  F138         	movff	?___llmod+1,sprintf@tmpval+1
  7289  011212  C072  F139         	movff	?___llmod+2,sprintf@tmpval+2
  7290  011216  C073  F13A         	movff	?___llmod+3,sprintf@tmpval+3
  7291                           
  7292                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7293  01121A  0101               	movlb	1	; () banked
  7294  01121C  5137               	movf	sprintf@tmpval& (0+255),w,b
  7295  01121E  0F30               	addlw	48
  7296  011220  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7297  011224  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7298  011228  6EDF               	movwf	indf2,c
  7299                           
  7300                           ; BSR set to: 1
  7301  01122A  0100               	movlb	0	; () banked
  7302  01122C  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  7303  01122E  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  7304                           
  7305                           ; BSR set to: 0
  7306                           ;doprnt.c: 1232: val %= dpowers[c];
  7307  011230  C131  F070         	movff	sprintf@val,___llmod@dividend
  7308  011234  C132  F071         	movff	sprintf@val+1,___llmod@dividend+1
  7309  011238  C133  F072         	movff	sprintf@val+2,___llmod@dividend+2
  7310  01123C  C134  F073         	movff	sprintf@val+3,___llmod@dividend+3
  7311  011240  0101               	movlb	1	; () banked
  7312  011242  5141               	movf	sprintf@c& (0+255),w,b
  7313  011244  0D04               	mullw	4
  7314  011246  0E1D               	movlw	low _dpowers
  7315  011248  24F3               	addwf	prodl,w,c
  7316  01124A  6EF6               	movwf	tblptrl,c
  7317  01124C  0EFF               	movlw	high _dpowers
  7318  01124E  20F4               	addwfc	prodh,w,c
  7319  011250  6EF7               	movwf	tblptrh,c
  7320  011252                     	if	1	;There are 3 active tblptr bytes
  7321  011252  6AF8               	clrf	tblptru,c
  7322  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  7323  011256  22F8               	addwfc	tblptru,f,c
  7324  011258                     	endif
  7325  011258  0009               	tblrd		*+
  7326  01125A  CFF5 F074          	movff	tablat,___llmod@divisor
  7327  01125E  0009               	tblrd		*+
  7328  011260  CFF5 F075          	movff	tablat,___llmod@divisor+1
  7329  011264  0009               	tblrd		*+
  7330  011266  CFF5 F076          	movff	tablat,___llmod@divisor+2
  7331  01126A  000A               	tblrd		*-
  7332  01126C  CFF5 F077          	movff	tablat,___llmod@divisor+3
  7333  011270  ECA3  F0AD         	call	___llmod	;wreg free
  7334  011274  C070  F131         	movff	?___llmod,sprintf@val
  7335  011278  C071  F132         	movff	?___llmod+1,sprintf@val+1
  7336  01127C  C072  F133         	movff	?___llmod+2,sprintf@val+2
  7337  011280  C073  F134         	movff	?___llmod+3,sprintf@val+3
  7338  011284                     l8654:
  7339  011284  0101               	movlb	1	; () banked
  7340  011286  0741               	decf	sprintf@c& (0+255),f,b
  7341  011288  0101               	movlb	1	; () banked
  7342  01128A  2941               	incf	sprintf@c& (0+255),w,b
  7343  01128C  B4D8               	btfsc	status,2,c
  7344  01128E  D00E               	goto	l8662
  7345  011290  D77F               	goto	l8644
  7346  011292                     l8656:
  7347                           
  7348                           ; BSR set to: 1
  7349                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7350  011292  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7351  011296  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7352  01129A  0E30               	movlw	48
  7353  01129C  6EDF               	movwf	indf2,c
  7354                           
  7355                           ; BSR set to: 1
  7356  01129E  0100               	movlb	0	; () banked
  7357  0112A0  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  7358  0112A2  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  7359                           
  7360                           ; BSR set to: 0
  7361                           ;doprnt.c: 1237: prec--;
  7362  0112A4  0101               	movlb	1	; () banked
  7363  0112A6  073B               	decf	sprintf@prec& (0+255),f,b
  7364  0112A8  A0D8               	btfss	status,0,c
  7365  0112AA  073C               	decf	(sprintf@prec+1)& (0+255),f,b
  7366  0112AC                     l8662:
  7367                           
  7368                           ; BSR set to: 1
  7369  0112AC  0101               	movlb	1	; () banked
  7370  0112AE  513B               	movf	sprintf@prec& (0+255),w,b
  7371  0112B0  0101               	movlb	1	; () banked
  7372  0112B2  113C               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7373  0112B4  B4D8               	btfsc	status,2,c
  7374  0112B6  D059               	goto	l8684
  7375  0112B8  D7EC               	goto	l8656
  7376  0112BA                     l8664:
  7377                           
  7378                           ; BSR set to: 1
  7379                           ;doprnt.c: 1246: }
  7380                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7381  0112BA  0101               	movlb	1	; () banked
  7382  0112BC  513B               	movf	sprintf@prec& (0+255),w,b
  7383  0112BE  0101               	movlb	1	; () banked
  7384  0112C0  113C               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7385  0112C2  A4D8               	btfss	status,2,c
  7386  0112C4  D00D               	goto	l8670
  7387                           
  7388                           ; BSR set to: 1
  7389  0112C6  0101               	movlb	1	; () banked
  7390  0112C8  5131               	movf	sprintf@val& (0+255),w,b
  7391  0112CA  0101               	movlb	1	; () banked
  7392  0112CC  1132               	iorwf	(sprintf@val+1)& (0+255),w,b
  7393  0112CE  0101               	movlb	1	; () banked
  7394  0112D0  1133               	iorwf	(sprintf@val+2)& (0+255),w,b
  7395  0112D2  0101               	movlb	1	; () banked
  7396  0112D4  1134               	iorwf	(sprintf@val+3)& (0+255),w,b
  7397  0112D6  A4D8               	btfss	status,2,c
  7398  0112D8  D003               	goto	l8670
  7399                           
  7400                           ; BSR set to: 1
  7401                           ;doprnt.c: 1291: prec++;
  7402  0112DA  0101               	movlb	1	; () banked
  7403  0112DC  4B3B               	infsnz	sprintf@prec& (0+255),f,b
  7404  0112DE  2B3C               	incf	(sprintf@prec+1)& (0+255),f,b
  7405  0112E0                     l8670:
  7406                           
  7407                           ; BSR set to: 1
  7408                           ;doprnt.c: 1339: if(c < prec)
  7409  0112E0  0E80               	movlw	128
  7410  0112E2  0101               	movlb	1	; () banked
  7411  0112E4  BF41               	btfsc	sprintf@c& (0+255),7,b
  7412  0112E6  0E7F               	movlw	127
  7413  0112E8  0100               	movlb	0	; () banked
  7414  0112EA  6FCA               	movwf	??_sprintf& (0+255),b
  7415  0112EC  0101               	movlb	1	; () banked
  7416  0112EE  513B               	movf	sprintf@prec& (0+255),w,b
  7417  0112F0  0101               	movlb	1	; () banked
  7418  0112F2  5D41               	subwf	sprintf@c& (0+255),w,b
  7419  0112F4  0101               	movlb	1	; () banked
  7420  0112F6  513C               	movf	(sprintf@prec+1)& (0+255),w,b
  7421  0112F8  0A80               	xorlw	128
  7422  0112FA  0100               	movlb	0	; () banked
  7423  0112FC  59CA               	subwfb	??_sprintf& (0+255),w,b
  7424  0112FE  B0D8               	btfsc	status,0,c
  7425  011300  D003               	goto	l8674
  7426                           
  7427                           ; BSR set to: 0
  7428                           ;doprnt.c: 1340: c = prec;
  7429  011302  C13B  F141         	movff	sprintf@prec,sprintf@c
  7430  011306  D018               	goto	l8678
  7431  011308                     l8674:
  7432                           
  7433                           ; BSR set to: 0
  7434                           ;doprnt.c: 1341: else if(prec < c)
  7435  011308  0101               	movlb	1	; () banked
  7436  01130A  513C               	movf	(sprintf@prec+1)& (0+255),w,b
  7437  01130C  0A80               	xorlw	128
  7438  01130E  0100               	movlb	0	; () banked
  7439  011310  6FCA               	movwf	??_sprintf& (0+255),b
  7440  011312  0101               	movlb	1	; () banked
  7441  011314  5141               	movf	sprintf@c& (0+255),w,b
  7442  011316  0101               	movlb	1	; () banked
  7443  011318  5D3B               	subwf	sprintf@prec& (0+255),w,b
  7444  01131A  0E80               	movlw	128
  7445  01131C  0101               	movlb	1	; () banked
  7446  01131E  BF41               	btfsc	sprintf@c& (0+255),7,b
  7447  011320  0E7F               	movlw	127
  7448  011322  0100               	movlb	0	; () banked
  7449  011324  59CA               	subwfb	??_sprintf& (0+255),w,b
  7450  011326  B0D8               	btfsc	status,0,c
  7451  011328  D007               	goto	l8678
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;doprnt.c: 1342: prec = c;
  7455  01132A  0101               	movlb	1	; () banked
  7456  01132C  5141               	movf	sprintf@c& (0+255),w,b
  7457  01132E  0101               	movlb	1	; () banked
  7458  011330  6F3B               	movwf	sprintf@prec& (0+255),b
  7459  011332  6B3C               	clrf	(sprintf@prec+1)& (0+255),b
  7460  011334  BF3B               	btfsc	sprintf@prec& (0+255),7,b
  7461  011336  073C               	decf	(sprintf@prec+1)& (0+255),f,b
  7462  011338                     l8678:
  7463                           
  7464                           ;doprnt.c: 1422: {
  7465                           ;doprnt.c: 1438: if(flag & 0x03)
  7466  011338  0E03               	movlw	3
  7467  01133A  0101               	movlb	1	; () banked
  7468  01133C  152F               	andwf	sprintf@flag& (0+255),w,b
  7469  01133E  0100               	movlb	0	; () banked
  7470  011340  6FCA               	movwf	??_sprintf& (0+255),b
  7471  011342  0E00               	movlw	0
  7472  011344  0101               	movlb	1	; () banked
  7473  011346  1530               	andwf	(sprintf@flag+1)& (0+255),w,b
  7474  011348  0100               	movlb	0	; () banked
  7475  01134A  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  7476  01134C  0100               	movlb	0	; () banked
  7477  01134E  51CA               	movf	??_sprintf& (0+255),w,b
  7478  011350  0100               	movlb	0	; () banked
  7479  011352  11CB               	iorwf	(??_sprintf+1)& (0+255),w,b
  7480  011354  B4D8               	btfsc	status,2,c
  7481  011356  D009               	goto	l8684
  7482                           
  7483                           ; BSR set to: 0
  7484                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7485  011358  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7486  01135C  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7487  011360  0E2D               	movlw	45
  7488  011362  6EDF               	movwf	indf2,c
  7489  011364                     l8682:
  7490                           
  7491                           ; BSR set to: 0
  7492  011364  0100               	movlb	0	; () banked
  7493  011366  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  7494  011368  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  7495  01136A                     l8684:
  7496  01136A  C0C4  FFF6         	movff	sprintf@f,tblptrl
  7497  01136E  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  7498  011372  0100               	movlb	0	; () banked
  7499  011374  4BC4               	infsnz	sprintf@f& (0+255),f,b
  7500  011376  2BC5               	incf	(sprintf@f+1)& (0+255),f,b
  7501  011378                     	if	0	;tblptru may be non-zero
  7502  011378                     	endif
  7503  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7504  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  7505  01137A  6EF8               	movwf	tblptru,c
  7506  01137C                     	endif
  7507  01137C  0008               	tblrd		*
  7508  01137E  CFF5 F141          	movff	tablat,sprintf@c
  7509  011382  0101               	movlb	1	; () banked
  7510  011384  5141               	movf	sprintf@c& (0+255),w,b
  7511  011386  A4D8               	btfss	status,2,c
  7512  011388  EF8B  F085         	goto	l8486
  7513  01138C                     l8686:
  7514                           
  7515                           ; BSR set to: 1
  7516                           ;doprnt.c: 1538: *sp = 0;
  7517  01138C  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7518  011390  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7519  011394  0E00               	movlw	0
  7520  011396  6EDF               	movwf	indf2,c
  7521  011398  0012               	return	
  7522  01139A                     __end_of_sprintf:
  7523                           	opt stack 0
  7524                           tblptru	equ	0xFF8
  7525                           tblptrh	equ	0xFF7
  7526                           tblptrl	equ	0xFF6
  7527                           tablat	equ	0xFF5
  7528                           prodh	equ	0xFF4
  7529                           prodl	equ	0xFF3
  7530                           intcon	equ	0xFF2
  7531                           postinc0	equ	0xFEE
  7532                           wreg	equ	0xFE8
  7533                           indf2	equ	0xFDF
  7534                           postinc2	equ	0xFDE
  7535                           fsr2h	equ	0xFDA
  7536                           fsr2l	equ	0xFD9
  7537                           status	equ	0xFD8
  7538                           
  7539 ;; *************** function _scale *****************
  7540 ;; Defined at:
  7541 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;  scl             1    wreg     char 
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;  scl             1   63[BANK0 ] char 
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  4   55[BANK0 ] char 
  7548 ;; Registers used:
  7549 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7555 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7558 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7559 ;;Total ram usage:        9 bytes
  7560 ;; Hardware stack levels used:    1
  7561 ;; Hardware stack levels required when called:    4
  7562 ;; This function calls:
  7563 ;;		___awdiv
  7564 ;;		___awmod
  7565 ;;		___flmul
  7566 ;; This function is called by:
  7567 ;;		_sprintf
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           
  7571                           	psect	text9
  7572  0127F8                     __ptext9:
  7573                           	opt stack 0
  7574  0127F8                     _scale:
  7575                           	opt stack 24
  7576                           
  7577                           ; BSR set to: 1
  7578                           ;incstack = 0
  7579                           ;scale@scl stored from wreg
  7580  0127F8  0100               	movlb	0	; () banked
  7581  0127FA  6F9F               	movwf	scale@scl& (0+255),b
  7582                           
  7583                           ;doprnt.c: 428: if(scl < 0) {
  7584  0127FC  0100               	movlb	0	; () banked
  7585  0127FE  AF9F               	btfss	scale@scl& (0+255),7,b
  7586  012800  D145               	goto	l8094
  7587                           
  7588                           ; BSR set to: 0
  7589                           ;doprnt.c: 429: scl = -scl;
  7590  012802  0100               	movlb	0	; () banked
  7591  012804  6D9F               	negf	scale@scl& (0+255),b
  7592                           
  7593                           ;doprnt.c: 430: if(scl>=110)
  7594  012806  0100               	movlb	0	; () banked
  7595  012808  519F               	movf	scale@scl& (0+255),w,b
  7596  01280A  0A80               	xorlw	128
  7597  01280C  0F12               	addlw	-238
  7598  01280E  A0D8               	btfss	status,0,c
  7599  012810  D0BB               	goto	l8084
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7603  012812  0E00               	movlw	0
  7604  012814  0100               	movlb	0	; () banked
  7605  012816  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  7606  012818  0E0A               	movlw	10
  7607  01281A  6F78               	movwf	___awdiv@divisor& (0+255),b
  7608  01281C  0E00               	movlw	0
  7609  01281E  0100               	movlb	0	; () banked
  7610  012820  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  7611  012822  0E64               	movlw	100
  7612  012824  6F72               	movwf	___awmod@divisor& (0+255),b
  7613  012826  0100               	movlb	0	; () banked
  7614  012828  519F               	movf	scale@scl& (0+255),w,b
  7615  01282A  0100               	movlb	0	; () banked
  7616  01282C  6F70               	movwf	___awmod@dividend& (0+255),b
  7617  01282E  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  7618  012830  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  7619  012832  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  7620  012834  EC52  F0AD         	call	___awmod	;wreg free
  7621  012838  C070  F076         	movff	?___awmod,___awdiv@dividend
  7622  01283C  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  7623  012840  EC32  F0AB         	call	___awdiv	;wreg free
  7624  012844  0100               	movlb	0	; () banked
  7625  012846  90D8               	bcf	status,0,c
  7626  012848  3776               	rlcf	?___awdiv& (0+255),f,b
  7627  01284A  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  7628  01284C  0100               	movlb	0	; () banked
  7629  01284E  90D8               	bcf	status,0,c
  7630  012850  3776               	rlcf	?___awdiv& (0+255),f,b
  7631  012852  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  7632  012854  0E24               	movlw	36
  7633  012856  0100               	movlb	0	; () banked
  7634  012858  2776               	addwf	?___awdiv& (0+255),f,b
  7635  01285A  0E00               	movlw	0
  7636  01285C  0100               	movlb	0	; () banked
  7637  01285E  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  7638  012860  0EB5               	movlw	low __npowers_
  7639  012862  0100               	movlb	0	; () banked
  7640  012864  2576               	addwf	?___awdiv& (0+255),w,b
  7641  012866  6EF6               	movwf	tblptrl,c
  7642  012868  0EFE               	movlw	high __npowers_
  7643  01286A  0100               	movlb	0	; () banked
  7644  01286C  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  7645  01286E  6EF7               	movwf	tblptrh,c
  7646  012870                     	if	1	;There are 3 active tblptr bytes
  7647  012870  6AF8               	clrf	tblptru,c
  7648  012872  0E00               	movlw	low (__mediumconst shr (0+16))
  7649  012874  22F8               	addwfc	tblptru,f,c
  7650  012876                     	endif
  7651  012876  0009               	tblrd		*+
  7652  012878  CFF5 F082          	movff	tablat,___flmul@a
  7653  01287C  0009               	tblrd		*+
  7654  01287E  CFF5 F083          	movff	tablat,___flmul@a+1
  7655  012882  0009               	tblrd		*+
  7656  012884  CFF5 F084          	movff	tablat,___flmul@a+2
  7657  012888  000A               	tblrd		*-
  7658  01288A  CFF5 F085          	movff	tablat,___flmul@a+3
  7659  01288E  0E00               	movlw	0
  7660  012890  0100               	movlb	0	; () banked
  7661  012892  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  7662  012894  0E64               	movlw	100
  7663  012896  6F78               	movwf	___awdiv@divisor& (0+255),b
  7664  012898  0100               	movlb	0	; () banked
  7665  01289A  519F               	movf	scale@scl& (0+255),w,b
  7666  01289C  0100               	movlb	0	; () banked
  7667  01289E  6F76               	movwf	___awdiv@dividend& (0+255),b
  7668  0128A0  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  7669  0128A2  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  7670  0128A4  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7671  0128A6  EC32  F0AB         	call	___awdiv	;wreg free
  7672  0128AA  0100               	movlb	0	; () banked
  7673  0128AC  90D8               	bcf	status,0,c
  7674  0128AE  3776               	rlcf	?___awdiv& (0+255),f,b
  7675  0128B0  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  7676  0128B2  0100               	movlb	0	; () banked
  7677  0128B4  90D8               	bcf	status,0,c
  7678  0128B6  3776               	rlcf	?___awdiv& (0+255),f,b
  7679  0128B8  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  7680  0128BA  0E48               	movlw	72
  7681  0128BC  0100               	movlb	0	; () banked
  7682  0128BE  2776               	addwf	?___awdiv& (0+255),f,b
  7683  0128C0  0E00               	movlw	0
  7684  0128C2  0100               	movlb	0	; () banked
  7685  0128C4  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  7686  0128C6  0EB5               	movlw	low __npowers_
  7687  0128C8  0100               	movlb	0	; () banked
  7688  0128CA  2576               	addwf	?___awdiv& (0+255),w,b
  7689  0128CC  6EF6               	movwf	tblptrl,c
  7690  0128CE  0EFE               	movlw	high __npowers_
  7691  0128D0  0100               	movlb	0	; () banked
  7692  0128D2  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  7693  0128D4  6EF7               	movwf	tblptrh,c
  7694  0128D6                     	if	1	;There are 3 active tblptr bytes
  7695  0128D6  6AF8               	clrf	tblptru,c
  7696  0128D8  0E00               	movlw	low (__mediumconst shr (0+16))
  7697  0128DA  22F8               	addwfc	tblptru,f,c
  7698  0128DC                     	endif
  7699  0128DC  0009               	tblrd		*+
  7700  0128DE  CFF5 F07E          	movff	tablat,___flmul@b
  7701  0128E2  0009               	tblrd		*+
  7702  0128E4  CFF5 F07F          	movff	tablat,___flmul@b+1
  7703  0128E8  0009               	tblrd		*+
  7704  0128EA  CFF5 F080          	movff	tablat,___flmul@b+2
  7705  0128EE  000A               	tblrd		*-
  7706  0128F0  CFF5 F081          	movff	tablat,___flmul@b+3
  7707  0128F4  EC63  F09B         	call	___flmul	;wreg free
  7708  0128F8  C07E  F09B         	movff	?___flmul,_scale$4219
  7709  0128FC  C07F  F09C         	movff	?___flmul+1,_scale$4219+1
  7710  012900  C080  F09D         	movff	?___flmul+2,_scale$4219+2
  7711  012904  C081  F09E         	movff	?___flmul+3,_scale$4219+3
  7712                           
  7713                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7714  012908  C09B  F07E         	movff	_scale$4219,___flmul@b
  7715  01290C  C09C  F07F         	movff	_scale$4219+1,___flmul@b+1
  7716  012910  C09D  F080         	movff	_scale$4219+2,___flmul@b+2
  7717  012914  C09E  F081         	movff	_scale$4219+3,___flmul@b+3
  7718  012918  0E00               	movlw	0
  7719  01291A  0100               	movlb	0	; () banked
  7720  01291C  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  7721  01291E  0E0A               	movlw	10
  7722  012920  6F72               	movwf	___awmod@divisor& (0+255),b
  7723  012922  0100               	movlb	0	; () banked
  7724  012924  519F               	movf	scale@scl& (0+255),w,b
  7725  012926  0100               	movlb	0	; () banked
  7726  012928  6F70               	movwf	___awmod@dividend& (0+255),b
  7727  01292A  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  7728  01292C  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  7729  01292E  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  7730  012930  EC52  F0AD         	call	___awmod	;wreg free
  7731  012934  0100               	movlb	0	; () banked
  7732  012936  90D8               	bcf	status,0,c
  7733  012938  3770               	rlcf	?___awmod& (0+255),f,b
  7734  01293A  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  7735  01293C  0100               	movlb	0	; () banked
  7736  01293E  90D8               	bcf	status,0,c
  7737  012940  3770               	rlcf	?___awmod& (0+255),f,b
  7738  012942  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  7739  012944  0EB5               	movlw	low __npowers_
  7740  012946  0100               	movlb	0	; () banked
  7741  012948  2570               	addwf	?___awmod& (0+255),w,b
  7742  01294A  6EF6               	movwf	tblptrl,c
  7743  01294C  0EFE               	movlw	high __npowers_
  7744  01294E  0100               	movlb	0	; () banked
  7745  012950  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  7746  012952  6EF7               	movwf	tblptrh,c
  7747  012954                     	if	1	;There are 3 active tblptr bytes
  7748  012954  6AF8               	clrf	tblptru,c
  7749  012956  0E00               	movlw	low (__mediumconst shr (0+16))
  7750  012958  22F8               	addwfc	tblptru,f,c
  7751  01295A                     	endif
  7752  01295A  0009               	tblrd		*+
  7753  01295C  CFF5 F082          	movff	tablat,___flmul@a
  7754  012960  0009               	tblrd		*+
  7755  012962  CFF5 F083          	movff	tablat,___flmul@a+1
  7756  012966  0009               	tblrd		*+
  7757  012968  CFF5 F084          	movff	tablat,___flmul@a+2
  7758  01296C  000A               	tblrd		*-
  7759  01296E  CFF5 F085          	movff	tablat,___flmul@a+3
  7760  012972  EC63  F09B         	call	___flmul	;wreg free
  7761  012976  C07E  F097         	movff	?___flmul,?_scale
  7762  01297A  C07F  F098         	movff	?___flmul+1,?_scale+1
  7763  01297E  C080  F099         	movff	?___flmul+2,?_scale+2
  7764  012982  C081  F09A         	movff	?___flmul+3,?_scale+3
  7765  012986  0012               	return	
  7766  012988                     l8084:
  7767                           
  7768                           ;doprnt.c: 432: else if(scl > 10)
  7769  012988  0100               	movlb	0	; () banked
  7770  01298A  519F               	movf	scale@scl& (0+255),w,b
  7771  01298C  0A80               	xorlw	128
  7772  01298E  0F75               	addlw	-139
  7773  012990  A0D8               	btfss	status,0,c
  7774  012992  D063               	goto	l8090
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7778  012994  0E00               	movlw	0
  7779  012996  0100               	movlb	0	; () banked
  7780  012998  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  7781  01299A  0E0A               	movlw	10
  7782  01299C  6F78               	movwf	___awdiv@divisor& (0+255),b
  7783  01299E  0100               	movlb	0	; () banked
  7784  0129A0  519F               	movf	scale@scl& (0+255),w,b
  7785  0129A2  0100               	movlb	0	; () banked
  7786  0129A4  6F76               	movwf	___awdiv@dividend& (0+255),b
  7787  0129A6  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  7788  0129A8  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  7789  0129AA  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7790  0129AC  EC32  F0AB         	call	___awdiv	;wreg free
  7791  0129B0  0100               	movlb	0	; () banked
  7792  0129B2  90D8               	bcf	status,0,c
  7793  0129B4  3776               	rlcf	?___awdiv& (0+255),f,b
  7794  0129B6  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  7795  0129B8  0100               	movlb	0	; () banked
  7796  0129BA  90D8               	bcf	status,0,c
  7797  0129BC  3776               	rlcf	?___awdiv& (0+255),f,b
  7798  0129BE  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  7799  0129C0  0E24               	movlw	36
  7800  0129C2  0100               	movlb	0	; () banked
  7801  0129C4  2776               	addwf	?___awdiv& (0+255),f,b
  7802  0129C6  0E00               	movlw	0
  7803  0129C8  0100               	movlb	0	; () banked
  7804  0129CA  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  7805  0129CC  0EB5               	movlw	low __npowers_
  7806  0129CE  0100               	movlb	0	; () banked
  7807  0129D0  2576               	addwf	?___awdiv& (0+255),w,b
  7808  0129D2  6EF6               	movwf	tblptrl,c
  7809  0129D4  0EFE               	movlw	high __npowers_
  7810  0129D6  0100               	movlb	0	; () banked
  7811  0129D8  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  7812  0129DA  6EF7               	movwf	tblptrh,c
  7813  0129DC                     	if	1	;There are 3 active tblptr bytes
  7814  0129DC  6AF8               	clrf	tblptru,c
  7815  0129DE  0E00               	movlw	low (__mediumconst shr (0+16))
  7816  0129E0  22F8               	addwfc	tblptru,f,c
  7817  0129E2                     	endif
  7818  0129E2  0009               	tblrd		*+
  7819  0129E4  CFF5 F07E          	movff	tablat,___flmul@b
  7820  0129E8  0009               	tblrd		*+
  7821  0129EA  CFF5 F07F          	movff	tablat,___flmul@b+1
  7822  0129EE  0009               	tblrd		*+
  7823  0129F0  CFF5 F080          	movff	tablat,___flmul@b+2
  7824  0129F4  000A               	tblrd		*-
  7825  0129F6  CFF5 F081          	movff	tablat,___flmul@b+3
  7826  0129FA  0E00               	movlw	0
  7827  0129FC  0100               	movlb	0	; () banked
  7828  0129FE  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  7829  012A00  0E0A               	movlw	10
  7830  012A02  6F72               	movwf	___awmod@divisor& (0+255),b
  7831  012A04  0100               	movlb	0	; () banked
  7832  012A06  519F               	movf	scale@scl& (0+255),w,b
  7833  012A08  0100               	movlb	0	; () banked
  7834  012A0A  6F70               	movwf	___awmod@dividend& (0+255),b
  7835  012A0C  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  7836  012A0E  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  7837  012A10  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  7838  012A12  EC52  F0AD         	call	___awmod	;wreg free
  7839  012A16  0100               	movlb	0	; () banked
  7840  012A18  90D8               	bcf	status,0,c
  7841  012A1A  3770               	rlcf	?___awmod& (0+255),f,b
  7842  012A1C  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  7843  012A1E  0100               	movlb	0	; () banked
  7844  012A20  90D8               	bcf	status,0,c
  7845  012A22  3770               	rlcf	?___awmod& (0+255),f,b
  7846  012A24  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  7847  012A26  0EB5               	movlw	low __npowers_
  7848  012A28  0100               	movlb	0	; () banked
  7849  012A2A  2570               	addwf	?___awmod& (0+255),w,b
  7850  012A2C  6EF6               	movwf	tblptrl,c
  7851  012A2E  0EFE               	movlw	high __npowers_
  7852  012A30  0100               	movlb	0	; () banked
  7853  012A32  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  7854  012A34  6EF7               	movwf	tblptrh,c
  7855  012A36                     	if	1	;There are 3 active tblptr bytes
  7856  012A36  6AF8               	clrf	tblptru,c
  7857  012A38  0E00               	movlw	low (__mediumconst shr (0+16))
  7858  012A3A  22F8               	addwfc	tblptru,f,c
  7859  012A3C                     	endif
  7860  012A3C  0009               	tblrd		*+
  7861  012A3E  CFF5 F082          	movff	tablat,___flmul@a
  7862  012A42  0009               	tblrd		*+
  7863  012A44  CFF5 F083          	movff	tablat,___flmul@a+1
  7864  012A48  0009               	tblrd		*+
  7865  012A4A  CFF5 F084          	movff	tablat,___flmul@a+2
  7866  012A4E  000A               	tblrd		*-
  7867  012A50  CFF5 F085          	movff	tablat,___flmul@a+3
  7868  012A54  EC63  F09B         	call	___flmul	;wreg free
  7869  012A58  D78E               	goto	L5
  7870  012A5A                     l8090:
  7871                           
  7872                           ;doprnt.c: 434: return _npowers_[scl];
  7873  012A5A  0100               	movlb	0	; () banked
  7874  012A5C  519F               	movf	scale@scl& (0+255),w,b
  7875  012A5E  0D04               	mullw	4
  7876  012A60  0EB5               	movlw	low __npowers_
  7877  012A62  24F3               	addwf	prodl,w,c
  7878  012A64  6EF6               	movwf	tblptrl,c
  7879  012A66  0EFE               	movlw	high __npowers_
  7880  012A68  20F4               	addwfc	prodh,w,c
  7881  012A6A  6EF7               	movwf	tblptrh,c
  7882  012A6C                     	if	1	;There are 3 active tblptr bytes
  7883  012A6C  6AF8               	clrf	tblptru,c
  7884  012A6E  0E00               	movlw	low (__mediumconst shr (0+16))
  7885  012A70  22F8               	addwfc	tblptru,f,c
  7886  012A72                     	endif
  7887  012A72  0009               	tblrd		*+
  7888  012A74  CFF5 F097          	movff	tablat,?_scale
  7889  012A78  0009               	tblrd		*+
  7890  012A7A  CFF5 F098          	movff	tablat,?_scale+1
  7891  012A7E  0009               	tblrd		*+
  7892  012A80  CFF5 F099          	movff	tablat,?_scale+2
  7893  012A84  000A               	tblrd		*-
  7894  012A86  CFF5 F09A          	movff	tablat,?_scale+3
  7895                           
  7896                           ; BSR set to: 0
  7897  012A8A  0012               	return	
  7898  012A8C                     l8094:
  7899                           
  7900                           ; BSR set to: 0
  7901                           ;doprnt.c: 435: }
  7902                           ;doprnt.c: 436: if(scl>=110)
  7903  012A8C  0100               	movlb	0	; () banked
  7904  012A8E  519F               	movf	scale@scl& (0+255),w,b
  7905  012A90  0A80               	xorlw	128
  7906  012A92  0F12               	addlw	-238
  7907  012A94  A0D8               	btfss	status,0,c
  7908  012A96  D0BB               	goto	l8102
  7909                           
  7910                           ; BSR set to: 0
  7911                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7912  012A98  0E00               	movlw	0
  7913  012A9A  0100               	movlb	0	; () banked
  7914  012A9C  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  7915  012A9E  0E0A               	movlw	10
  7916  012AA0  6F78               	movwf	___awdiv@divisor& (0+255),b
  7917  012AA2  0E00               	movlw	0
  7918  012AA4  0100               	movlb	0	; () banked
  7919  012AA6  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  7920  012AA8  0E64               	movlw	100
  7921  012AAA  6F72               	movwf	___awmod@divisor& (0+255),b
  7922  012AAC  0100               	movlb	0	; () banked
  7923  012AAE  519F               	movf	scale@scl& (0+255),w,b
  7924  012AB0  0100               	movlb	0	; () banked
  7925  012AB2  6F70               	movwf	___awmod@dividend& (0+255),b
  7926  012AB4  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  7927  012AB6  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  7928  012AB8  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  7929  012ABA  EC52  F0AD         	call	___awmod	;wreg free
  7930  012ABE  C070  F076         	movff	?___awmod,___awdiv@dividend
  7931  012AC2  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  7932  012AC6  EC32  F0AB         	call	___awdiv	;wreg free
  7933  012ACA  0100               	movlb	0	; () banked
  7934  012ACC  90D8               	bcf	status,0,c
  7935  012ACE  3776               	rlcf	?___awdiv& (0+255),f,b
  7936  012AD0  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  7937  012AD2  0100               	movlb	0	; () banked
  7938  012AD4  90D8               	bcf	status,0,c
  7939  012AD6  3776               	rlcf	?___awdiv& (0+255),f,b
  7940  012AD8  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  7941  012ADA  0E24               	movlw	36
  7942  012ADC  0100               	movlb	0	; () banked
  7943  012ADE  2776               	addwf	?___awdiv& (0+255),f,b
  7944  012AE0  0E00               	movlw	0
  7945  012AE2  0100               	movlb	0	; () banked
  7946  012AE4  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  7947  012AE6  0EE9               	movlw	low __powers_
  7948  012AE8  0100               	movlb	0	; () banked
  7949  012AEA  2576               	addwf	?___awdiv& (0+255),w,b
  7950  012AEC  6EF6               	movwf	tblptrl,c
  7951  012AEE  0EFE               	movlw	high __powers_
  7952  012AF0  0100               	movlb	0	; () banked
  7953  012AF2  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  7954  012AF4  6EF7               	movwf	tblptrh,c
  7955  012AF6                     	if	1	;There are 3 active tblptr bytes
  7956  012AF6  6AF8               	clrf	tblptru,c
  7957  012AF8  0E00               	movlw	low (__mediumconst shr (0+16))
  7958  012AFA  22F8               	addwfc	tblptru,f,c
  7959  012AFC                     	endif
  7960  012AFC  0009               	tblrd		*+
  7961  012AFE  CFF5 F082          	movff	tablat,___flmul@a
  7962  012B02  0009               	tblrd		*+
  7963  012B04  CFF5 F083          	movff	tablat,___flmul@a+1
  7964  012B08  0009               	tblrd		*+
  7965  012B0A  CFF5 F084          	movff	tablat,___flmul@a+2
  7966  012B0E  000A               	tblrd		*-
  7967  012B10  CFF5 F085          	movff	tablat,___flmul@a+3
  7968  012B14  0E00               	movlw	0
  7969  012B16  0100               	movlb	0	; () banked
  7970  012B18  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  7971  012B1A  0E64               	movlw	100
  7972  012B1C  6F78               	movwf	___awdiv@divisor& (0+255),b
  7973  012B1E  0100               	movlb	0	; () banked
  7974  012B20  519F               	movf	scale@scl& (0+255),w,b
  7975  012B22  0100               	movlb	0	; () banked
  7976  012B24  6F76               	movwf	___awdiv@dividend& (0+255),b
  7977  012B26  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  7978  012B28  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  7979  012B2A  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7980  012B2C  EC32  F0AB         	call	___awdiv	;wreg free
  7981  012B30  0100               	movlb	0	; () banked
  7982  012B32  90D8               	bcf	status,0,c
  7983  012B34  3776               	rlcf	?___awdiv& (0+255),f,b
  7984  012B36  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  7985  012B38  0100               	movlb	0	; () banked
  7986  012B3A  90D8               	bcf	status,0,c
  7987  012B3C  3776               	rlcf	?___awdiv& (0+255),f,b
  7988  012B3E  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  7989  012B40  0E48               	movlw	72
  7990  012B42  0100               	movlb	0	; () banked
  7991  012B44  2776               	addwf	?___awdiv& (0+255),f,b
  7992  012B46  0E00               	movlw	0
  7993  012B48  0100               	movlb	0	; () banked
  7994  012B4A  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  7995  012B4C  0EE9               	movlw	low __powers_
  7996  012B4E  0100               	movlb	0	; () banked
  7997  012B50  2576               	addwf	?___awdiv& (0+255),w,b
  7998  012B52  6EF6               	movwf	tblptrl,c
  7999  012B54  0EFE               	movlw	high __powers_
  8000  012B56  0100               	movlb	0	; () banked
  8001  012B58  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8002  012B5A  6EF7               	movwf	tblptrh,c
  8003  012B5C                     	if	1	;There are 3 active tblptr bytes
  8004  012B5C  6AF8               	clrf	tblptru,c
  8005  012B5E  0E00               	movlw	low (__mediumconst shr (0+16))
  8006  012B60  22F8               	addwfc	tblptru,f,c
  8007  012B62                     	endif
  8008  012B62  0009               	tblrd		*+
  8009  012B64  CFF5 F07E          	movff	tablat,___flmul@b
  8010  012B68  0009               	tblrd		*+
  8011  012B6A  CFF5 F07F          	movff	tablat,___flmul@b+1
  8012  012B6E  0009               	tblrd		*+
  8013  012B70  CFF5 F080          	movff	tablat,___flmul@b+2
  8014  012B74  000A               	tblrd		*-
  8015  012B76  CFF5 F081          	movff	tablat,___flmul@b+3
  8016  012B7A  EC63  F09B         	call	___flmul	;wreg free
  8017  012B7E  C07E  F09B         	movff	?___flmul,_scale$4219
  8018  012B82  C07F  F09C         	movff	?___flmul+1,_scale$4219+1
  8019  012B86  C080  F09D         	movff	?___flmul+2,_scale$4219+2
  8020  012B8A  C081  F09E         	movff	?___flmul+3,_scale$4219+3
  8021                           
  8022                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8023  012B8E  C09B  F07E         	movff	_scale$4219,___flmul@b
  8024  012B92  C09C  F07F         	movff	_scale$4219+1,___flmul@b+1
  8025  012B96  C09D  F080         	movff	_scale$4219+2,___flmul@b+2
  8026  012B9A  C09E  F081         	movff	_scale$4219+3,___flmul@b+3
  8027  012B9E  0E00               	movlw	0
  8028  012BA0  0100               	movlb	0	; () banked
  8029  012BA2  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8030  012BA4  0E0A               	movlw	10
  8031  012BA6  6F72               	movwf	___awmod@divisor& (0+255),b
  8032  012BA8  0100               	movlb	0	; () banked
  8033  012BAA  519F               	movf	scale@scl& (0+255),w,b
  8034  012BAC  0100               	movlb	0	; () banked
  8035  012BAE  6F70               	movwf	___awmod@dividend& (0+255),b
  8036  012BB0  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8037  012BB2  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8038  012BB4  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8039  012BB6  EC52  F0AD         	call	___awmod	;wreg free
  8040  012BBA  0100               	movlb	0	; () banked
  8041  012BBC  90D8               	bcf	status,0,c
  8042  012BBE  3770               	rlcf	?___awmod& (0+255),f,b
  8043  012BC0  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8044  012BC2  0100               	movlb	0	; () banked
  8045  012BC4  90D8               	bcf	status,0,c
  8046  012BC6  3770               	rlcf	?___awmod& (0+255),f,b
  8047  012BC8  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8048  012BCA  0EE9               	movlw	low __powers_
  8049  012BCC  0100               	movlb	0	; () banked
  8050  012BCE  2570               	addwf	?___awmod& (0+255),w,b
  8051  012BD0  6EF6               	movwf	tblptrl,c
  8052  012BD2  0EFE               	movlw	high __powers_
  8053  012BD4  0100               	movlb	0	; () banked
  8054  012BD6  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  8055  012BD8  6EF7               	movwf	tblptrh,c
  8056  012BDA                     	if	1	;There are 3 active tblptr bytes
  8057  012BDA  6AF8               	clrf	tblptru,c
  8058  012BDC  0E00               	movlw	low (__mediumconst shr (0+16))
  8059  012BDE  22F8               	addwfc	tblptru,f,c
  8060  012BE0                     	endif
  8061  012BE0  0009               	tblrd		*+
  8062  012BE2  CFF5 F082          	movff	tablat,___flmul@a
  8063  012BE6  0009               	tblrd		*+
  8064  012BE8  CFF5 F083          	movff	tablat,___flmul@a+1
  8065  012BEC  0009               	tblrd		*+
  8066  012BEE  CFF5 F084          	movff	tablat,___flmul@a+2
  8067  012BF2  000A               	tblrd		*-
  8068  012BF4  CFF5 F085          	movff	tablat,___flmul@a+3
  8069  012BF8  EC63  F09B         	call	___flmul	;wreg free
  8070  012BFC  C07E  F097         	movff	?___flmul,?_scale
  8071  012C00  C07F  F098         	movff	?___flmul+1,?_scale+1
  8072  012C04  C080  F099         	movff	?___flmul+2,?_scale+2
  8073  012C08  C081  F09A         	movff	?___flmul+3,?_scale+3
  8074  012C0C  0012               	return	
  8075  012C0E                     l8102:
  8076                           
  8077                           ;doprnt.c: 438: else if(scl > 10)
  8078  012C0E  0100               	movlb	0	; () banked
  8079  012C10  519F               	movf	scale@scl& (0+255),w,b
  8080  012C12  0A80               	xorlw	128
  8081  012C14  0F75               	addlw	-139
  8082  012C16  A0D8               	btfss	status,0,c
  8083  012C18  D063               	goto	l8108
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8087  012C1A  0E00               	movlw	0
  8088  012C1C  0100               	movlb	0	; () banked
  8089  012C1E  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8090  012C20  0E0A               	movlw	10
  8091  012C22  6F78               	movwf	___awdiv@divisor& (0+255),b
  8092  012C24  0100               	movlb	0	; () banked
  8093  012C26  519F               	movf	scale@scl& (0+255),w,b
  8094  012C28  0100               	movlb	0	; () banked
  8095  012C2A  6F76               	movwf	___awdiv@dividend& (0+255),b
  8096  012C2C  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  8097  012C2E  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  8098  012C30  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8099  012C32  EC32  F0AB         	call	___awdiv	;wreg free
  8100  012C36  0100               	movlb	0	; () banked
  8101  012C38  90D8               	bcf	status,0,c
  8102  012C3A  3776               	rlcf	?___awdiv& (0+255),f,b
  8103  012C3C  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8104  012C3E  0100               	movlb	0	; () banked
  8105  012C40  90D8               	bcf	status,0,c
  8106  012C42  3776               	rlcf	?___awdiv& (0+255),f,b
  8107  012C44  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8108  012C46  0E24               	movlw	36
  8109  012C48  0100               	movlb	0	; () banked
  8110  012C4A  2776               	addwf	?___awdiv& (0+255),f,b
  8111  012C4C  0E00               	movlw	0
  8112  012C4E  0100               	movlb	0	; () banked
  8113  012C50  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8114  012C52  0EE9               	movlw	low __powers_
  8115  012C54  0100               	movlb	0	; () banked
  8116  012C56  2576               	addwf	?___awdiv& (0+255),w,b
  8117  012C58  6EF6               	movwf	tblptrl,c
  8118  012C5A  0EFE               	movlw	high __powers_
  8119  012C5C  0100               	movlb	0	; () banked
  8120  012C5E  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8121  012C60  6EF7               	movwf	tblptrh,c
  8122  012C62                     	if	1	;There are 3 active tblptr bytes
  8123  012C62  6AF8               	clrf	tblptru,c
  8124  012C64  0E00               	movlw	low (__mediumconst shr (0+16))
  8125  012C66  22F8               	addwfc	tblptru,f,c
  8126  012C68                     	endif
  8127  012C68  0009               	tblrd		*+
  8128  012C6A  CFF5 F07E          	movff	tablat,___flmul@b
  8129  012C6E  0009               	tblrd		*+
  8130  012C70  CFF5 F07F          	movff	tablat,___flmul@b+1
  8131  012C74  0009               	tblrd		*+
  8132  012C76  CFF5 F080          	movff	tablat,___flmul@b+2
  8133  012C7A  000A               	tblrd		*-
  8134  012C7C  CFF5 F081          	movff	tablat,___flmul@b+3
  8135  012C80  0E00               	movlw	0
  8136  012C82  0100               	movlb	0	; () banked
  8137  012C84  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8138  012C86  0E0A               	movlw	10
  8139  012C88  6F72               	movwf	___awmod@divisor& (0+255),b
  8140  012C8A  0100               	movlb	0	; () banked
  8141  012C8C  519F               	movf	scale@scl& (0+255),w,b
  8142  012C8E  0100               	movlb	0	; () banked
  8143  012C90  6F70               	movwf	___awmod@dividend& (0+255),b
  8144  012C92  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8145  012C94  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8146  012C96  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8147  012C98  EC52  F0AD         	call	___awmod	;wreg free
  8148  012C9C  0100               	movlb	0	; () banked
  8149  012C9E  90D8               	bcf	status,0,c
  8150  012CA0  3770               	rlcf	?___awmod& (0+255),f,b
  8151  012CA2  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8152  012CA4  0100               	movlb	0	; () banked
  8153  012CA6  90D8               	bcf	status,0,c
  8154  012CA8  3770               	rlcf	?___awmod& (0+255),f,b
  8155  012CAA  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8156  012CAC  0EE9               	movlw	low __powers_
  8157  012CAE  0100               	movlb	0	; () banked
  8158  012CB0  2570               	addwf	?___awmod& (0+255),w,b
  8159  012CB2  6EF6               	movwf	tblptrl,c
  8160  012CB4  0EFE               	movlw	high __powers_
  8161  012CB6  0100               	movlb	0	; () banked
  8162  012CB8  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  8163  012CBA  6EF7               	movwf	tblptrh,c
  8164  012CBC                     	if	1	;There are 3 active tblptr bytes
  8165  012CBC  6AF8               	clrf	tblptru,c
  8166  012CBE  0E00               	movlw	low (__mediumconst shr (0+16))
  8167  012CC0  22F8               	addwfc	tblptru,f,c
  8168  012CC2                     	endif
  8169  012CC2  0009               	tblrd		*+
  8170  012CC4  CFF5 F082          	movff	tablat,___flmul@a
  8171  012CC8  0009               	tblrd		*+
  8172  012CCA  CFF5 F083          	movff	tablat,___flmul@a+1
  8173  012CCE  0009               	tblrd		*+
  8174  012CD0  CFF5 F084          	movff	tablat,___flmul@a+2
  8175  012CD4  000A               	tblrd		*-
  8176  012CD6  CFF5 F085          	movff	tablat,___flmul@a+3
  8177  012CDA  EC63  F09B         	call	___flmul	;wreg free
  8178  012CDE  D78E               	goto	L6
  8179  012CE0                     l8108:
  8180                           
  8181                           ;doprnt.c: 440: return _powers_[scl];
  8182  012CE0  0100               	movlb	0	; () banked
  8183  012CE2  519F               	movf	scale@scl& (0+255),w,b
  8184  012CE4  0D04               	mullw	4
  8185  012CE6  0EE9               	movlw	low __powers_
  8186  012CE8  24F3               	addwf	prodl,w,c
  8187  012CEA  6EF6               	movwf	tblptrl,c
  8188  012CEC  0EFE               	movlw	high __powers_
  8189  012CEE  20F4               	addwfc	prodh,w,c
  8190  012CF0  6EF7               	movwf	tblptrh,c
  8191  012CF2                     	if	1	;There are 3 active tblptr bytes
  8192  012CF2  6AF8               	clrf	tblptru,c
  8193  012CF4  0E00               	movlw	low (__mediumconst shr (0+16))
  8194  012CF6  22F8               	addwfc	tblptru,f,c
  8195  012CF8                     	endif
  8196  012CF8  0009               	tblrd		*+
  8197  012CFA  CFF5 F097          	movff	tablat,?_scale
  8198  012CFE  0009               	tblrd		*+
  8199  012D00  CFF5 F098          	movff	tablat,?_scale+1
  8200  012D04  0009               	tblrd		*+
  8201  012D06  CFF5 F099          	movff	tablat,?_scale+2
  8202  012D0A  000A               	tblrd		*-
  8203  012D0C  CFF5 F09A          	movff	tablat,?_scale+3
  8204  012D10  0012               	return	
  8205  012D12                     __end_of_scale:
  8206                           	opt stack 0
  8207                           tblptru	equ	0xFF8
  8208                           tblptrh	equ	0xFF7
  8209                           tblptrl	equ	0xFF6
  8210                           tablat	equ	0xFF5
  8211                           prodh	equ	0xFF4
  8212                           prodl	equ	0xFF3
  8213                           intcon	equ	0xFF2
  8214                           postinc0	equ	0xFEE
  8215                           wreg	equ	0xFE8
  8216                           indf2	equ	0xFDF
  8217                           postinc2	equ	0xFDE
  8218                           fsr2h	equ	0xFDA
  8219                           fsr2l	equ	0xFD9
  8220                           status	equ	0xFD8
  8221                           
  8222 ;; *************** function _isdigit *****************
  8223 ;; Defined at:
  8224 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;  c               1    wreg     unsigned char 
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;  c               1   18[BANK0 ] unsigned char 
  8229 ;; Return value:  Size  Location     Type
  8230 ;;		None               void
  8231 ;; Registers used:
  8232 ;;		wreg, status,2, status,0
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8239 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8240 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8241 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8242 ;;Total ram usage:        3 bytes
  8243 ;; Hardware stack levels used:    1
  8244 ;; Hardware stack levels required when called:    3
  8245 ;; This function calls:
  8246 ;;		Nothing
  8247 ;; This function is called by:
  8248 ;;		_sprintf
  8249 ;; This function uses a non-reentrant model
  8250 ;;
  8251                           
  8252                           	psect	text10
  8253  01603E                     __ptext10:
  8254                           	opt stack 0
  8255  01603E                     _isdigit:
  8256                           	opt stack 25
  8257                           
  8258                           ;incstack = 0
  8259                           ;isdigit@c stored from wreg
  8260  01603E  0100               	movlb	0	; () banked
  8261  016040  6F72               	movwf	isdigit@c& (0+255),b
  8262  016042  0E00               	movlw	0
  8263  016044  0100               	movlb	0	; () banked
  8264  016046  6F71               	movwf	_isdigit$3800& (0+255),b
  8265                           
  8266                           ; BSR set to: 0
  8267  016048  0E3A               	movlw	58
  8268  01604A  0100               	movlb	0	; () banked
  8269  01604C  6172               	cpfslt	isdigit@c& (0+255),b
  8270  01604E  D007               	goto	l8120
  8271                           
  8272                           ; BSR set to: 0
  8273  016050  0E2F               	movlw	47
  8274  016052  0100               	movlb	0	; () banked
  8275  016054  6572               	cpfsgt	isdigit@c& (0+255),b
  8276  016056  D003               	goto	l8120
  8277                           
  8278                           ; BSR set to: 0
  8279  016058  0E01               	movlw	1
  8280  01605A  0100               	movlb	0	; () banked
  8281  01605C  6F71               	movwf	_isdigit$3800& (0+255),b
  8282  01605E                     l8120:
  8283                           
  8284                           ; BSR set to: 0
  8285  01605E  C071  F070         	movff	_isdigit$3800,??_isdigit
  8286  016062  0100               	movlb	0	; () banked
  8287  016064  3170               	rrcf	??_isdigit& (0+255),w,b
  8288  016066  0012               	return	
  8289  016068                     __end_of_isdigit:
  8290                           	opt stack 0
  8291                           tblptru	equ	0xFF8
  8292                           tblptrh	equ	0xFF7
  8293                           tblptrl	equ	0xFF6
  8294                           tablat	equ	0xFF5
  8295                           prodh	equ	0xFF4
  8296                           prodl	equ	0xFF3
  8297                           intcon	equ	0xFF2
  8298                           postinc0	equ	0xFEE
  8299                           wreg	equ	0xFE8
  8300                           indf2	equ	0xFDF
  8301                           postinc2	equ	0xFDE
  8302                           fsr2h	equ	0xFDA
  8303                           fsr2l	equ	0xFD9
  8304                           status	equ	0xFD8
  8305                           
  8306 ;; *************** function _fround *****************
  8307 ;; Defined at:
  8308 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;  prec            1    wreg     unsigned char 
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;  prec            1   67[BANK0 ] unsigned char 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  4   55[BANK0 ] unsigned char 
  8315 ;; Registers used:
  8316 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8322 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8325 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;Total ram usage:       13 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; Hardware stack levels required when called:    4
  8329 ;; This function calls:
  8330 ;;		___awdiv
  8331 ;;		___awmod
  8332 ;;		___flmul
  8333 ;; This function is called by:
  8334 ;;		_sprintf
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           	psect	text11
  8339  0142CA                     __ptext11:
  8340                           	opt stack 0
  8341  0142CA                     _fround:
  8342                           	opt stack 24
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;incstack = 0
  8346                           ;fround@prec stored from wreg
  8347  0142CA  0100               	movlb	0	; () banked
  8348  0142CC  6FA3               	movwf	fround@prec& (0+255),b
  8349                           
  8350                           ;doprnt.c: 413: if(prec>=110)
  8351  0142CE  0E6D               	movlw	109
  8352  0142D0  0100               	movlb	0	; () banked
  8353  0142D2  65A3               	cpfsgt	fround@prec& (0+255),b
  8354  0142D4  D0CD               	goto	l8062
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8358  0142D6  0E00               	movlw	0
  8359  0142D8  0100               	movlb	0	; () banked
  8360  0142DA  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8361  0142DC  0E0A               	movlw	10
  8362  0142DE  6F78               	movwf	___awdiv@divisor& (0+255),b
  8363  0142E0  0E00               	movlw	0
  8364  0142E2  0100               	movlb	0	; () banked
  8365  0142E4  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8366  0142E6  0E64               	movlw	100
  8367  0142E8  6F72               	movwf	___awmod@divisor& (0+255),b
  8368  0142EA  C0A3  F070         	movff	fround@prec,___awmod@dividend
  8369  0142EE  0100               	movlb	0	; () banked
  8370  0142F0  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8371  0142F2  EC52  F0AD         	call	___awmod	;wreg free
  8372  0142F6  C070  F076         	movff	?___awmod,___awdiv@dividend
  8373  0142FA  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  8374  0142FE  EC32  F0AB         	call	___awdiv	;wreg free
  8375  014302  0100               	movlb	0	; () banked
  8376  014304  90D8               	bcf	status,0,c
  8377  014306  3776               	rlcf	?___awdiv& (0+255),f,b
  8378  014308  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8379  01430A  0100               	movlb	0	; () banked
  8380  01430C  90D8               	bcf	status,0,c
  8381  01430E  3776               	rlcf	?___awdiv& (0+255),f,b
  8382  014310  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8383  014312  0E24               	movlw	36
  8384  014314  0100               	movlb	0	; () banked
  8385  014316  2776               	addwf	?___awdiv& (0+255),f,b
  8386  014318  0E00               	movlw	0
  8387  01431A  0100               	movlb	0	; () banked
  8388  01431C  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8389  01431E  0EB5               	movlw	low __npowers_
  8390  014320  0100               	movlb	0	; () banked
  8391  014322  2576               	addwf	?___awdiv& (0+255),w,b
  8392  014324  6EF6               	movwf	tblptrl,c
  8393  014326  0EFE               	movlw	high __npowers_
  8394  014328  0100               	movlb	0	; () banked
  8395  01432A  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8396  01432C  6EF7               	movwf	tblptrh,c
  8397  01432E                     	if	1	;There are 3 active tblptr bytes
  8398  01432E  6AF8               	clrf	tblptru,c
  8399  014330  0E00               	movlw	low (__mediumconst shr (0+16))
  8400  014332  22F8               	addwfc	tblptru,f,c
  8401  014334                     	endif
  8402  014334  0009               	tblrd		*+
  8403  014336  CFF5 F082          	movff	tablat,___flmul@a
  8404  01433A  0009               	tblrd		*+
  8405  01433C  CFF5 F083          	movff	tablat,___flmul@a+1
  8406  014340  0009               	tblrd		*+
  8407  014342  CFF5 F084          	movff	tablat,___flmul@a+2
  8408  014346  000A               	tblrd		*-
  8409  014348  CFF5 F085          	movff	tablat,___flmul@a+3
  8410  01434C  0E00               	movlw	0
  8411  01434E  0100               	movlb	0	; () banked
  8412  014350  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8413  014352  0E64               	movlw	100
  8414  014354  6F78               	movwf	___awdiv@divisor& (0+255),b
  8415  014356  C0A3  F076         	movff	fround@prec,___awdiv@dividend
  8416  01435A  0100               	movlb	0	; () banked
  8417  01435C  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  8418  01435E  EC32  F0AB         	call	___awdiv	;wreg free
  8419  014362  0100               	movlb	0	; () banked
  8420  014364  90D8               	bcf	status,0,c
  8421  014366  3776               	rlcf	?___awdiv& (0+255),f,b
  8422  014368  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8423  01436A  0100               	movlb	0	; () banked
  8424  01436C  90D8               	bcf	status,0,c
  8425  01436E  3776               	rlcf	?___awdiv& (0+255),f,b
  8426  014370  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8427  014372  0E48               	movlw	72
  8428  014374  0100               	movlb	0	; () banked
  8429  014376  2776               	addwf	?___awdiv& (0+255),f,b
  8430  014378  0E00               	movlw	0
  8431  01437A  0100               	movlb	0	; () banked
  8432  01437C  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8433  01437E  0EB5               	movlw	low __npowers_
  8434  014380  0100               	movlb	0	; () banked
  8435  014382  2576               	addwf	?___awdiv& (0+255),w,b
  8436  014384  6EF6               	movwf	tblptrl,c
  8437  014386  0EFE               	movlw	high __npowers_
  8438  014388  0100               	movlb	0	; () banked
  8439  01438A  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8440  01438C  6EF7               	movwf	tblptrh,c
  8441  01438E                     	if	1	;There are 3 active tblptr bytes
  8442  01438E  6AF8               	clrf	tblptru,c
  8443  014390  0E00               	movlw	low (__mediumconst shr (0+16))
  8444  014392  22F8               	addwfc	tblptru,f,c
  8445  014394                     	endif
  8446  014394  0009               	tblrd		*+
  8447  014396  CFF5 F07E          	movff	tablat,___flmul@b
  8448  01439A  0009               	tblrd		*+
  8449  01439C  CFF5 F07F          	movff	tablat,___flmul@b+1
  8450  0143A0  0009               	tblrd		*+
  8451  0143A2  CFF5 F080          	movff	tablat,___flmul@b+2
  8452  0143A6  000A               	tblrd		*-
  8453  0143A8  CFF5 F081          	movff	tablat,___flmul@b+3
  8454  0143AC  EC63  F09B         	call	___flmul	;wreg free
  8455  0143B0  C07E  F09F         	movff	?___flmul,_fround$4217
  8456  0143B4  C07F  F0A0         	movff	?___flmul+1,_fround$4217+1
  8457  0143B8  C080  F0A1         	movff	?___flmul+2,_fround$4217+2
  8458  0143BC  C081  F0A2         	movff	?___flmul+3,_fround$4217+3
  8459                           
  8460                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8461  0143C0  0E00               	movlw	0
  8462  0143C2  0100               	movlb	0	; () banked
  8463  0143C4  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8464  0143C6  0E0A               	movlw	10
  8465  0143C8  6F72               	movwf	___awmod@divisor& (0+255),b
  8466  0143CA  C0A3  F070         	movff	fround@prec,___awmod@dividend
  8467  0143CE  0100               	movlb	0	; () banked
  8468  0143D0  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8469  0143D2  EC52  F0AD         	call	___awmod	;wreg free
  8470  0143D6  0100               	movlb	0	; () banked
  8471  0143D8  90D8               	bcf	status,0,c
  8472  0143DA  3770               	rlcf	?___awmod& (0+255),f,b
  8473  0143DC  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8474  0143DE  0100               	movlb	0	; () banked
  8475  0143E0  90D8               	bcf	status,0,c
  8476  0143E2  3770               	rlcf	?___awmod& (0+255),f,b
  8477  0143E4  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8478  0143E6  0EB5               	movlw	low __npowers_
  8479  0143E8  0100               	movlb	0	; () banked
  8480  0143EA  2570               	addwf	?___awmod& (0+255),w,b
  8481  0143EC  6EF6               	movwf	tblptrl,c
  8482  0143EE  0EFE               	movlw	high __npowers_
  8483  0143F0  0100               	movlb	0	; () banked
  8484  0143F2  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  8485  0143F4  6EF7               	movwf	tblptrh,c
  8486  0143F6                     	if	1	;There are 3 active tblptr bytes
  8487  0143F6  6AF8               	clrf	tblptru,c
  8488  0143F8  0E00               	movlw	low (__mediumconst shr (0+16))
  8489  0143FA  22F8               	addwfc	tblptru,f,c
  8490  0143FC                     	endif
  8491  0143FC  0009               	tblrd		*+
  8492  0143FE  CFF5 F082          	movff	tablat,___flmul@a
  8493  014402  0009               	tblrd		*+
  8494  014404  CFF5 F083          	movff	tablat,___flmul@a+1
  8495  014408  0009               	tblrd		*+
  8496  01440A  CFF5 F084          	movff	tablat,___flmul@a+2
  8497  01440E  000A               	tblrd		*-
  8498  014410  CFF5 F085          	movff	tablat,___flmul@a+3
  8499  014414  C09F  F07E         	movff	_fround$4217,___flmul@b
  8500  014418  C0A0  F07F         	movff	_fround$4217+1,___flmul@b+1
  8501  01441C  C0A1  F080         	movff	_fround$4217+2,___flmul@b+2
  8502  014420  C0A2  F081         	movff	_fround$4217+3,___flmul@b+3
  8503  014424  EC63  F09B         	call	___flmul	;wreg free
  8504  014428  C07E  F09B         	movff	?___flmul,_fround$4218
  8505  01442C  C07F  F09C         	movff	?___flmul+1,_fround$4218+1
  8506  014430  C080  F09D         	movff	?___flmul+2,_fround$4218+2
  8507  014434  C081  F09E         	movff	?___flmul+3,_fround$4218+3
  8508                           
  8509                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8510  014438  C09B  F07E         	movff	_fround$4218,___flmul@b
  8511  01443C  C09C  F07F         	movff	_fround$4218+1,___flmul@b+1
  8512  014440  C09D  F080         	movff	_fround$4218+2,___flmul@b+2
  8513  014444  C09E  F081         	movff	_fround$4218+3,___flmul@b+3
  8514  014448  0E00               	movlw	0
  8515  01444A  0100               	movlb	0	; () banked
  8516  01444C  6F82               	movwf	___flmul@a& (0+255),b
  8517  01444E  0E00               	movlw	0
  8518  014450  6F83               	movwf	(___flmul@a+1)& (0+255),b
  8519  014452  0E00               	movlw	0
  8520  014454  6F84               	movwf	(___flmul@a+2)& (0+255),b
  8521  014456  0E3F               	movlw	63
  8522  014458  6F85               	movwf	(___flmul@a+3)& (0+255),b
  8523  01445A  EC63  F09B         	call	___flmul	;wreg free
  8524  01445E  C07E  F097         	movff	?___flmul,?_fround
  8525  014462  C07F  F098         	movff	?___flmul+1,?_fround+1
  8526  014466  C080  F099         	movff	?___flmul+2,?_fround+2
  8527  01446A  C081  F09A         	movff	?___flmul+3,?_fround+3
  8528  01446E  0012               	return	
  8529  014470                     l8062:
  8530                           
  8531                           ;doprnt.c: 415: else if(prec > 10)
  8532  014470  0E0A               	movlw	10
  8533  014472  0100               	movlb	0	; () banked
  8534  014474  65A3               	cpfsgt	fround@prec& (0+255),b
  8535  014476  D078               	goto	l8070
  8536                           
  8537                           ; BSR set to: 0
  8538                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8539  014478  0E00               	movlw	0
  8540  01447A  0100               	movlb	0	; () banked
  8541  01447C  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8542  01447E  0E0A               	movlw	10
  8543  014480  6F72               	movwf	___awmod@divisor& (0+255),b
  8544  014482  C0A3  F070         	movff	fround@prec,___awmod@dividend
  8545  014486  0100               	movlb	0	; () banked
  8546  014488  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8547  01448A  EC52  F0AD         	call	___awmod	;wreg free
  8548  01448E  0100               	movlb	0	; () banked
  8549  014490  90D8               	bcf	status,0,c
  8550  014492  3770               	rlcf	?___awmod& (0+255),f,b
  8551  014494  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8552  014496  0100               	movlb	0	; () banked
  8553  014498  90D8               	bcf	status,0,c
  8554  01449A  3770               	rlcf	?___awmod& (0+255),f,b
  8555  01449C  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8556  01449E  0EB5               	movlw	low __npowers_
  8557  0144A0  0100               	movlb	0	; () banked
  8558  0144A2  2570               	addwf	?___awmod& (0+255),w,b
  8559  0144A4  6EF6               	movwf	tblptrl,c
  8560  0144A6  0EFE               	movlw	high __npowers_
  8561  0144A8  0100               	movlb	0	; () banked
  8562  0144AA  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  8563  0144AC  6EF7               	movwf	tblptrh,c
  8564  0144AE                     	if	1	;There are 3 active tblptr bytes
  8565  0144AE  6AF8               	clrf	tblptru,c
  8566  0144B0  0E00               	movlw	low (__mediumconst shr (0+16))
  8567  0144B2  22F8               	addwfc	tblptru,f,c
  8568  0144B4                     	endif
  8569  0144B4  0009               	tblrd		*+
  8570  0144B6  CFF5 F082          	movff	tablat,___flmul@a
  8571  0144BA  0009               	tblrd		*+
  8572  0144BC  CFF5 F083          	movff	tablat,___flmul@a+1
  8573  0144C0  0009               	tblrd		*+
  8574  0144C2  CFF5 F084          	movff	tablat,___flmul@a+2
  8575  0144C6  000A               	tblrd		*-
  8576  0144C8  CFF5 F085          	movff	tablat,___flmul@a+3
  8577  0144CC  0E00               	movlw	0
  8578  0144CE  0100               	movlb	0	; () banked
  8579  0144D0  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8580  0144D2  0E0A               	movlw	10
  8581  0144D4  6F78               	movwf	___awdiv@divisor& (0+255),b
  8582  0144D6  C0A3  F076         	movff	fround@prec,___awdiv@dividend
  8583  0144DA  0100               	movlb	0	; () banked
  8584  0144DC  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  8585  0144DE  EC32  F0AB         	call	___awdiv	;wreg free
  8586  0144E2  0100               	movlb	0	; () banked
  8587  0144E4  90D8               	bcf	status,0,c
  8588  0144E6  3776               	rlcf	?___awdiv& (0+255),f,b
  8589  0144E8  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8590  0144EA  0100               	movlb	0	; () banked
  8591  0144EC  90D8               	bcf	status,0,c
  8592  0144EE  3776               	rlcf	?___awdiv& (0+255),f,b
  8593  0144F0  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8594  0144F2  0E24               	movlw	36
  8595  0144F4  0100               	movlb	0	; () banked
  8596  0144F6  2776               	addwf	?___awdiv& (0+255),f,b
  8597  0144F8  0E00               	movlw	0
  8598  0144FA  0100               	movlb	0	; () banked
  8599  0144FC  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8600  0144FE  0EB5               	movlw	low __npowers_
  8601  014500  0100               	movlb	0	; () banked
  8602  014502  2576               	addwf	?___awdiv& (0+255),w,b
  8603  014504  6EF6               	movwf	tblptrl,c
  8604  014506  0EFE               	movlw	high __npowers_
  8605  014508  0100               	movlb	0	; () banked
  8606  01450A  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8607  01450C  6EF7               	movwf	tblptrh,c
  8608  01450E                     	if	1	;There are 3 active tblptr bytes
  8609  01450E  6AF8               	clrf	tblptru,c
  8610  014510  0E00               	movlw	low (__mediumconst shr (0+16))
  8611  014512  22F8               	addwfc	tblptru,f,c
  8612  014514                     	endif
  8613  014514  0009               	tblrd		*+
  8614  014516  CFF5 F07E          	movff	tablat,___flmul@b
  8615  01451A  0009               	tblrd		*+
  8616  01451C  CFF5 F07F          	movff	tablat,___flmul@b+1
  8617  014520  0009               	tblrd		*+
  8618  014522  CFF5 F080          	movff	tablat,___flmul@b+2
  8619  014526  000A               	tblrd		*-
  8620  014528  CFF5 F081          	movff	tablat,___flmul@b+3
  8621  01452C  EC63  F09B         	call	___flmul	;wreg free
  8622  014530  C07E  F09F         	movff	?___flmul,_fround$4217
  8623  014534  C07F  F0A0         	movff	?___flmul+1,_fround$4217+1
  8624  014538  C080  F0A1         	movff	?___flmul+2,_fround$4217+2
  8625  01453C  C081  F0A2         	movff	?___flmul+3,_fround$4217+3
  8626                           
  8627                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8628  014540  C09F  F07E         	movff	_fround$4217,___flmul@b
  8629  014544  C0A0  F07F         	movff	_fround$4217+1,___flmul@b+1
  8630  014548  C0A1  F080         	movff	_fround$4217+2,___flmul@b+2
  8631  01454C  C0A2  F081         	movff	_fround$4217+3,___flmul@b+3
  8632  014550  0E00               	movlw	0
  8633  014552  0100               	movlb	0	; () banked
  8634  014554  6F82               	movwf	___flmul@a& (0+255),b
  8635  014556  0E00               	movlw	0
  8636  014558  6F83               	movwf	(___flmul@a+1)& (0+255),b
  8637  01455A  0E00               	movlw	0
  8638  01455C  6F84               	movwf	(___flmul@a+2)& (0+255),b
  8639  01455E  0E3F               	movlw	63
  8640  014560  6F85               	movwf	(___flmul@a+3)& (0+255),b
  8641  014562  EC63  F09B         	call	___flmul	;wreg free
  8642  014566  D77B               	goto	L7
  8643  014568                     l8070:
  8644                           
  8645                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8646  014568  0100               	movlb	0	; () banked
  8647  01456A  51A3               	movf	fround@prec& (0+255),w,b
  8648  01456C  0D04               	mullw	4
  8649  01456E  0EB5               	movlw	low __npowers_
  8650  014570  24F3               	addwf	prodl,w,c
  8651  014572  6EF6               	movwf	tblptrl,c
  8652  014574  0EFE               	movlw	high __npowers_
  8653  014576  20F4               	addwfc	prodh,w,c
  8654  014578  6EF7               	movwf	tblptrh,c
  8655  01457A                     	if	1	;There are 3 active tblptr bytes
  8656  01457A  6AF8               	clrf	tblptru,c
  8657  01457C  0E00               	movlw	low (__mediumconst shr (0+16))
  8658  01457E  22F8               	addwfc	tblptru,f,c
  8659  014580                     	endif
  8660  014580  0009               	tblrd		*+
  8661  014582  CFF5 F07E          	movff	tablat,___flmul@b
  8662  014586  0009               	tblrd		*+
  8663  014588  CFF5 F07F          	movff	tablat,___flmul@b+1
  8664  01458C  0009               	tblrd		*+
  8665  01458E  CFF5 F080          	movff	tablat,___flmul@b+2
  8666  014592  000A               	tblrd		*-
  8667  014594  CFF5 F081          	movff	tablat,___flmul@b+3
  8668  014598  0E00               	movlw	0
  8669  01459A  0100               	movlb	0	; () banked
  8670  01459C  6F82               	movwf	___flmul@a& (0+255),b
  8671  01459E  0E00               	movlw	0
  8672  0145A0  6F83               	movwf	(___flmul@a+1)& (0+255),b
  8673  0145A2  0E00               	movlw	0
  8674  0145A4  6F84               	movwf	(___flmul@a+2)& (0+255),b
  8675  0145A6  0E3F               	movlw	63
  8676  0145A8  6F85               	movwf	(___flmul@a+3)& (0+255),b
  8677  0145AA  EC63  F09B         	call	___flmul	;wreg free
  8678  0145AE  C07E  F097         	movff	?___flmul,?_fround
  8679  0145B2  C07F  F098         	movff	?___flmul+1,?_fround+1
  8680  0145B6  C080  F099         	movff	?___flmul+2,?_fround+2
  8681  0145BA  C081  F09A         	movff	?___flmul+3,?_fround+3
  8682  0145BE  0012               	return	
  8683  0145C0                     __end_of_fround:
  8684                           	opt stack 0
  8685                           tblptru	equ	0xFF8
  8686                           tblptrh	equ	0xFF7
  8687                           tblptrl	equ	0xFF6
  8688                           tablat	equ	0xFF5
  8689                           prodh	equ	0xFF4
  8690                           prodl	equ	0xFF3
  8691                           intcon	equ	0xFF2
  8692                           postinc0	equ	0xFEE
  8693                           wreg	equ	0xFE8
  8694                           indf2	equ	0xFDF
  8695                           postinc2	equ	0xFDE
  8696                           fsr2h	equ	0xFDA
  8697                           fsr2l	equ	0xFD9
  8698                           status	equ	0xFD8
  8699                           
  8700 ;; *************** function ___flmul *****************
  8701 ;; Defined at:
  8702 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8703 ;; Parameters:    Size  Location     Type
  8704 ;;  b               4   30[BANK0 ] unsigned char 
  8705 ;;  a               4   34[BANK0 ] unsigned char 
  8706 ;; Auto vars:     Size  Location     Type
  8707 ;;  prod            4   49[BANK0 ] struct .
  8708 ;;  grs             4   44[BANK0 ] unsigned long 
  8709 ;;  temp            2   53[BANK0 ] struct .
  8710 ;;  bexp            1   48[BANK0 ] unsigned char 
  8711 ;;  aexp            1   43[BANK0 ] unsigned char 
  8712 ;;  sign            1   42[BANK0 ] unsigned char 
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  4   30[BANK0 ] unsigned char 
  8715 ;; Registers used:
  8716 ;;		wreg, status,2, status,0, prodl, prodh
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/0
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8722 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8723 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8724 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8725 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8726 ;;Total ram usage:       25 bytes
  8727 ;; Hardware stack levels used:    1
  8728 ;; Hardware stack levels required when called:    3
  8729 ;; This function calls:
  8730 ;;		Nothing
  8731 ;; This function is called by:
  8732 ;;		_main
  8733 ;;		_fround
  8734 ;;		_scale
  8735 ;;		_sprintf
  8736 ;; This function uses a non-reentrant model
  8737 ;;
  8738                           
  8739                           	psect	text12
  8740  0136C6                     __ptext12:
  8741                           	opt stack 0
  8742  0136C6                     ___flmul:
  8743                           	opt stack 27
  8744                           
  8745                           ;incstack = 0
  8746  0136C6  0100               	movlb	0	; () banked
  8747  0136C8  5181               	movf	(___flmul@b+3)& (0+255),w,b
  8748  0136CA  0B80               	andlw	128
  8749  0136CC  0100               	movlb	0	; () banked
  8750  0136CE  6F8A               	movwf	___flmul@sign& (0+255),b
  8751  0136D0  0100               	movlb	0	; () banked
  8752  0136D2  5181               	movf	(___flmul@b+3)& (0+255),w,b
  8753  0136D4  2581               	addwf	(___flmul@b+3)& (0+255),w,b
  8754  0136D6  0100               	movlb	0	; () banked
  8755  0136D8  6F90               	movwf	___flmul@bexp& (0+255),b
  8756                           
  8757                           ; BSR set to: 0
  8758  0136DA  0100               	movlb	0	; () banked
  8759  0136DC  AF80               	btfss	(___flmul@b+2)& (0+255),7,b
  8760  0136DE  D002               	goto	l7816
  8761                           
  8762                           ; BSR set to: 0
  8763  0136E0  0100               	movlb	0	; () banked
  8764  0136E2  8190               	bsf	___flmul@bexp& (0+255),0,b
  8765  0136E4                     l7816:
  8766                           
  8767                           ; BSR set to: 0
  8768  0136E4  0100               	movlb	0	; () banked
  8769  0136E6  5190               	movf	___flmul@bexp& (0+255),w,b
  8770  0136E8  0100               	movlb	0	; () banked
  8771  0136EA  B4D8               	btfsc	status,2,c
  8772  0136EC  D010               	goto	l7824
  8773                           
  8774                           ; BSR set to: 0
  8775  0136EE  0100               	movlb	0	; () banked
  8776  0136F0  2990               	incf	___flmul@bexp& (0+255),w,b
  8777  0136F2  A4D8               	btfss	status,2,c
  8778  0136F4  D009               	goto	l7822
  8779                           
  8780                           ; BSR set to: 0
  8781  0136F6  0E00               	movlw	0
  8782  0136F8  0100               	movlb	0	; () banked
  8783  0136FA  6F7E               	movwf	___flmul@b& (0+255),b
  8784  0136FC  0E00               	movlw	0
  8785  0136FE  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  8786  013700  0E00               	movlw	0
  8787  013702  6F80               	movwf	(___flmul@b+2)& (0+255),b
  8788  013704  0E00               	movlw	0
  8789  013706  6F81               	movwf	(___flmul@b+3)& (0+255),b
  8790  013708                     l7822:
  8791                           
  8792                           ; BSR set to: 0
  8793  013708  0100               	movlb	0	; () banked
  8794  01370A  8F80               	bsf	(___flmul@b+2)& (0+255),7,b
  8795  01370C  D009               	goto	l7826
  8796  01370E                     l7824:
  8797                           
  8798                           ; BSR set to: 0
  8799  01370E  0E00               	movlw	0
  8800  013710  0100               	movlb	0	; () banked
  8801  013712  6F7E               	movwf	___flmul@b& (0+255),b
  8802  013714  0E00               	movlw	0
  8803  013716  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  8804  013718  0E00               	movlw	0
  8805  01371A  6F80               	movwf	(___flmul@b+2)& (0+255),b
  8806  01371C  0E00               	movlw	0
  8807  01371E  6F81               	movwf	(___flmul@b+3)& (0+255),b
  8808  013720                     l7826:
  8809                           
  8810                           ; BSR set to: 0
  8811  013720  0100               	movlb	0	; () banked
  8812  013722  5185               	movf	(___flmul@a+3)& (0+255),w,b
  8813  013724  0B80               	andlw	128
  8814  013726  0100               	movlb	0	; () banked
  8815  013728  1B8A               	xorwf	___flmul@sign& (0+255),f,b
  8816                           
  8817                           ; BSR set to: 0
  8818  01372A  0100               	movlb	0	; () banked
  8819  01372C  5185               	movf	(___flmul@a+3)& (0+255),w,b
  8820  01372E  2585               	addwf	(___flmul@a+3)& (0+255),w,b
  8821  013730  0100               	movlb	0	; () banked
  8822  013732  6F8B               	movwf	___flmul@aexp& (0+255),b
  8823                           
  8824                           ; BSR set to: 0
  8825  013734  0100               	movlb	0	; () banked
  8826  013736  AF84               	btfss	(___flmul@a+2)& (0+255),7,b
  8827  013738  D002               	goto	l7834
  8828                           
  8829                           ; BSR set to: 0
  8830  01373A  0100               	movlb	0	; () banked
  8831  01373C  818B               	bsf	___flmul@aexp& (0+255),0,b
  8832  01373E                     l7834:
  8833                           
  8834                           ; BSR set to: 0
  8835  01373E  0100               	movlb	0	; () banked
  8836  013740  518B               	movf	___flmul@aexp& (0+255),w,b
  8837  013742  0100               	movlb	0	; () banked
  8838  013744  B4D8               	btfsc	status,2,c
  8839  013746  D010               	goto	l7842
  8840                           
  8841                           ; BSR set to: 0
  8842  013748  0100               	movlb	0	; () banked
  8843  01374A  298B               	incf	___flmul@aexp& (0+255),w,b
  8844  01374C  A4D8               	btfss	status,2,c
  8845  01374E  D009               	goto	l7840
  8846                           
  8847                           ; BSR set to: 0
  8848  013750  0E00               	movlw	0
  8849  013752  0100               	movlb	0	; () banked
  8850  013754  6F82               	movwf	___flmul@a& (0+255),b
  8851  013756  0E00               	movlw	0
  8852  013758  6F83               	movwf	(___flmul@a+1)& (0+255),b
  8853  01375A  0E00               	movlw	0
  8854  01375C  6F84               	movwf	(___flmul@a+2)& (0+255),b
  8855  01375E  0E00               	movlw	0
  8856  013760  6F85               	movwf	(___flmul@a+3)& (0+255),b
  8857  013762                     l7840:
  8858                           
  8859                           ; BSR set to: 0
  8860  013762  0100               	movlb	0	; () banked
  8861  013764  8F84               	bsf	(___flmul@a+2)& (0+255),7,b
  8862  013766  D009               	goto	l1568
  8863  013768                     l7842:
  8864                           
  8865                           ; BSR set to: 0
  8866  013768  0E00               	movlw	0
  8867  01376A  0100               	movlb	0	; () banked
  8868  01376C  6F82               	movwf	___flmul@a& (0+255),b
  8869  01376E  0E00               	movlw	0
  8870  013770  6F83               	movwf	(___flmul@a+1)& (0+255),b
  8871  013772  0E00               	movlw	0
  8872  013774  6F84               	movwf	(___flmul@a+2)& (0+255),b
  8873  013776  0E00               	movlw	0
  8874  013778  6F85               	movwf	(___flmul@a+3)& (0+255),b
  8875  01377A                     l1568:
  8876                           
  8877                           ; BSR set to: 0
  8878  01377A  0100               	movlb	0	; () banked
  8879  01377C  518B               	movf	___flmul@aexp& (0+255),w,b
  8880  01377E  0100               	movlb	0	; () banked
  8881  013780  B4D8               	btfsc	status,2,c
  8882  013782  D005               	goto	l7846
  8883                           
  8884                           ; BSR set to: 0
  8885  013784  0100               	movlb	0	; () banked
  8886  013786  5190               	movf	___flmul@bexp& (0+255),w,b
  8887  013788  0100               	movlb	0	; () banked
  8888  01378A  A4D8               	btfss	status,2,c
  8889  01378C  D00A               	goto	l7850
  8890  01378E                     l7846:
  8891                           
  8892                           ; BSR set to: 0
  8893  01378E  0E00               	movlw	0
  8894  013790  0100               	movlb	0	; () banked
  8895  013792  6F7E               	movwf	?___flmul& (0+255),b
  8896  013794  0E00               	movlw	0
  8897  013796  6F7F               	movwf	(?___flmul+1)& (0+255),b
  8898  013798  0E00               	movlw	0
  8899  01379A  6F80               	movwf	(?___flmul+2)& (0+255),b
  8900  01379C  0E00               	movlw	0
  8901  01379E  6F81               	movwf	(?___flmul+3)& (0+255),b
  8902                           
  8903                           ; BSR set to: 0
  8904  0137A0  0012               	return	
  8905  0137A2                     l7850:
  8906                           
  8907                           ; BSR set to: 0
  8908  0137A2  0100               	movlb	0	; () banked
  8909  0137A4  5184               	movf	(___flmul@a+2)& (0+255),w,b
  8910  0137A6  0100               	movlb	0	; () banked
  8911  0137A8  037E               	mulwf	___flmul@b& (0+255),b
  8912  0137AA  CFF3 F095          	movff	prodl,___flmul@temp
  8913  0137AE  CFF4 F096          	movff	prodh,___flmul@temp+1
  8914                           
  8915                           ; BSR set to: 0
  8916  0137B2  0100               	movlb	0	; () banked
  8917  0137B4  5195               	movf	___flmul@temp& (0+255),w,b
  8918  0137B6  0100               	movlb	0	; () banked
  8919  0137B8  6F8C               	movwf	___flmul@grs& (0+255),b
  8920  0137BA  6B8D               	clrf	(___flmul@grs+1)& (0+255),b
  8921  0137BC  6B8E               	clrf	(___flmul@grs+2)& (0+255),b
  8922  0137BE  6B8F               	clrf	(___flmul@grs+3)& (0+255),b
  8923                           
  8924                           ; BSR set to: 0
  8925  0137C0  0100               	movlb	0	; () banked
  8926  0137C2  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  8927  0137C4  0100               	movlb	0	; () banked
  8928  0137C6  6F91               	movwf	___flmul@prod& (0+255),b
  8929  0137C8  6B92               	clrf	(___flmul@prod+1)& (0+255),b
  8930  0137CA  6B93               	clrf	(___flmul@prod+2)& (0+255),b
  8931  0137CC  6B94               	clrf	(___flmul@prod+3)& (0+255),b
  8932  0137CE  0100               	movlb	0	; () banked
  8933  0137D0  5183               	movf	(___flmul@a+1)& (0+255),w,b
  8934  0137D2  0100               	movlb	0	; () banked
  8935  0137D4  037F               	mulwf	(___flmul@b+1)& (0+255),b
  8936  0137D6  CFF3 F095          	movff	prodl,___flmul@temp
  8937  0137DA  CFF4 F096          	movff	prodh,___flmul@temp+1
  8938                           
  8939                           ; BSR set to: 0
  8940  0137DE  0100               	movlb	0	; () banked
  8941  0137E0  5195               	movf	___flmul@temp& (0+255),w,b
  8942  0137E2  0100               	movlb	0	; () banked
  8943  0137E4  278C               	addwf	___flmul@grs& (0+255),f,b
  8944  0137E6  0E00               	movlw	0
  8945  0137E8  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8946  0137EA  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8947  0137EC  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8948                           
  8949                           ; BSR set to: 0
  8950  0137EE  0100               	movlb	0	; () banked
  8951  0137F0  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  8952  0137F2  0100               	movlb	0	; () banked
  8953  0137F4  2791               	addwf	___flmul@prod& (0+255),f,b
  8954  0137F6  0E00               	movlw	0
  8955  0137F8  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8956  0137FA  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8957  0137FC  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8958  0137FE  0100               	movlb	0	; () banked
  8959  013800  5182               	movf	___flmul@a& (0+255),w,b
  8960  013802  0100               	movlb	0	; () banked
  8961  013804  0380               	mulwf	(___flmul@b+2)& (0+255),b
  8962  013806  CFF3 F095          	movff	prodl,___flmul@temp
  8963  01380A  CFF4 F096          	movff	prodh,___flmul@temp+1
  8964                           
  8965                           ; BSR set to: 0
  8966  01380E  0100               	movlb	0	; () banked
  8967  013810  5195               	movf	___flmul@temp& (0+255),w,b
  8968  013812  0100               	movlb	0	; () banked
  8969  013814  278C               	addwf	___flmul@grs& (0+255),f,b
  8970  013816  0E00               	movlw	0
  8971  013818  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8972  01381A  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8973  01381C  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8974                           
  8975                           ; BSR set to: 0
  8976  01381E  0100               	movlb	0	; () banked
  8977  013820  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  8978  013822  0100               	movlb	0	; () banked
  8979  013824  2791               	addwf	___flmul@prod& (0+255),f,b
  8980  013826  0E00               	movlw	0
  8981  013828  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8982  01382A  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8983  01382C  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8984                           
  8985                           ; BSR set to: 0
  8986  01382E  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  8987  013832  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  8988  013836  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  8989  01383A  0100               	movlb	0	; () banked
  8990  01383C  6B8C               	clrf	___flmul@grs& (0+255),b
  8991                           
  8992                           ; BSR set to: 0
  8993  01383E  0100               	movlb	0	; () banked
  8994  013840  5182               	movf	___flmul@a& (0+255),w,b
  8995  013842  0100               	movlb	0	; () banked
  8996  013844  037F               	mulwf	(___flmul@b+1)& (0+255),b
  8997  013846  CFF3 F095          	movff	prodl,___flmul@temp
  8998  01384A  CFF4 F096          	movff	prodh,___flmul@temp+1
  8999                           
  9000                           ; BSR set to: 0
  9001  01384E  0100               	movlb	0	; () banked
  9002  013850  5195               	movf	___flmul@temp& (0+255),w,b
  9003  013852  0100               	movlb	0	; () banked
  9004  013854  278C               	addwf	___flmul@grs& (0+255),f,b
  9005  013856  0100               	movlb	0	; () banked
  9006  013858  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9007  01385A  0100               	movlb	0	; () banked
  9008  01385C  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9009  01385E  0E00               	movlw	0
  9010  013860  0100               	movlb	0	; () banked
  9011  013862  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9012  013864  0E00               	movlw	0
  9013  013866  0100               	movlb	0	; () banked
  9014  013868  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9015                           
  9016                           ; BSR set to: 0
  9017  01386A  0100               	movlb	0	; () banked
  9018  01386C  5183               	movf	(___flmul@a+1)& (0+255),w,b
  9019  01386E  0100               	movlb	0	; () banked
  9020  013870  037E               	mulwf	___flmul@b& (0+255),b
  9021  013872  CFF3 F095          	movff	prodl,___flmul@temp
  9022  013876  CFF4 F096          	movff	prodh,___flmul@temp+1
  9023                           
  9024                           ; BSR set to: 0
  9025  01387A  0100               	movlb	0	; () banked
  9026  01387C  5195               	movf	___flmul@temp& (0+255),w,b
  9027  01387E  0100               	movlb	0	; () banked
  9028  013880  278C               	addwf	___flmul@grs& (0+255),f,b
  9029  013882  0100               	movlb	0	; () banked
  9030  013884  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9031  013886  0100               	movlb	0	; () banked
  9032  013888  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9033  01388A  0E00               	movlw	0
  9034  01388C  0100               	movlb	0	; () banked
  9035  01388E  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9036  013890  0E00               	movlw	0
  9037  013892  0100               	movlb	0	; () banked
  9038  013894  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9039                           
  9040                           ; BSR set to: 0
  9041  013896  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  9042  01389A  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  9043  01389E  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  9044  0138A2  0100               	movlb	0	; () banked
  9045  0138A4  6B8C               	clrf	___flmul@grs& (0+255),b
  9046  0138A6  0100               	movlb	0	; () banked
  9047  0138A8  5182               	movf	___flmul@a& (0+255),w,b
  9048  0138AA  0100               	movlb	0	; () banked
  9049  0138AC  037E               	mulwf	___flmul@b& (0+255),b
  9050  0138AE  CFF3 F095          	movff	prodl,___flmul@temp
  9051  0138B2  CFF4 F096          	movff	prodh,___flmul@temp+1
  9052                           
  9053                           ; BSR set to: 0
  9054  0138B6  0100               	movlb	0	; () banked
  9055  0138B8  5195               	movf	___flmul@temp& (0+255),w,b
  9056  0138BA  0100               	movlb	0	; () banked
  9057  0138BC  278C               	addwf	___flmul@grs& (0+255),f,b
  9058  0138BE  0100               	movlb	0	; () banked
  9059  0138C0  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9060  0138C2  0100               	movlb	0	; () banked
  9061  0138C4  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9062  0138C6  0E00               	movlw	0
  9063  0138C8  0100               	movlb	0	; () banked
  9064  0138CA  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9065  0138CC  0E00               	movlw	0
  9066  0138CE  0100               	movlb	0	; () banked
  9067  0138D0  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9068                           
  9069                           ; BSR set to: 0
  9070  0138D2  0100               	movlb	0	; () banked
  9071  0138D4  5184               	movf	(___flmul@a+2)& (0+255),w,b
  9072  0138D6  0100               	movlb	0	; () banked
  9073  0138D8  037F               	mulwf	(___flmul@b+1)& (0+255),b
  9074  0138DA  CFF3 F095          	movff	prodl,___flmul@temp
  9075  0138DE  CFF4 F096          	movff	prodh,___flmul@temp+1
  9076  0138E2  0100               	movlb	0	; () banked
  9077  0138E4  5195               	movf	___flmul@temp& (0+255),w,b
  9078  0138E6  0100               	movlb	0	; () banked
  9079  0138E8  2791               	addwf	___flmul@prod& (0+255),f,b
  9080  0138EA  0100               	movlb	0	; () banked
  9081  0138EC  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9082  0138EE  0100               	movlb	0	; () banked
  9083  0138F0  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9084  0138F2  0E00               	movlw	0
  9085  0138F4  0100               	movlb	0	; () banked
  9086  0138F6  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9087  0138F8  0E00               	movlw	0
  9088  0138FA  0100               	movlb	0	; () banked
  9089  0138FC  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9090                           
  9091                           ; BSR set to: 0
  9092  0138FE  0100               	movlb	0	; () banked
  9093  013900  5183               	movf	(___flmul@a+1)& (0+255),w,b
  9094  013902  0100               	movlb	0	; () banked
  9095  013904  0380               	mulwf	(___flmul@b+2)& (0+255),b
  9096  013906  CFF3 F095          	movff	prodl,___flmul@temp
  9097  01390A  CFF4 F096          	movff	prodh,___flmul@temp+1
  9098                           
  9099                           ; BSR set to: 0
  9100  01390E  0100               	movlb	0	; () banked
  9101  013910  5195               	movf	___flmul@temp& (0+255),w,b
  9102  013912  0100               	movlb	0	; () banked
  9103  013914  2791               	addwf	___flmul@prod& (0+255),f,b
  9104  013916  0100               	movlb	0	; () banked
  9105  013918  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9106  01391A  0100               	movlb	0	; () banked
  9107  01391C  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9108  01391E  0E00               	movlw	0
  9109  013920  0100               	movlb	0	; () banked
  9110  013922  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9111  013924  0E00               	movlw	0
  9112  013926  0100               	movlb	0	; () banked
  9113  013928  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9114  01392A  0100               	movlb	0	; () banked
  9115  01392C  5184               	movf	(___flmul@a+2)& (0+255),w,b
  9116  01392E  0100               	movlb	0	; () banked
  9117  013930  0380               	mulwf	(___flmul@b+2)& (0+255),b
  9118  013932  CFF3 F095          	movff	prodl,___flmul@temp
  9119  013936  CFF4 F096          	movff	prodh,___flmul@temp+1
  9120                           
  9121                           ; BSR set to: 0
  9122  01393A  0100               	movlb	0	; () banked
  9123  01393C  5195               	movf	___flmul@temp& (0+255),w,b
  9124  01393E  0100               	movlb	0	; () banked
  9125  013940  6F86               	movwf	??___flmul& (0+255),b
  9126  013942  0100               	movlb	0	; () banked
  9127  013944  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9128  013946  0100               	movlb	0	; () banked
  9129  013948  6F87               	movwf	(??___flmul+1)& (0+255),b
  9130  01394A  0100               	movlb	0	; () banked
  9131  01394C  6B88               	clrf	(??___flmul+2)& (0+255),b
  9132  01394E  0100               	movlb	0	; () banked
  9133  013950  6B89               	clrf	(??___flmul+3)& (0+255),b
  9134  013952  C088  F089         	movff	??___flmul+2,??___flmul+3
  9135  013956  C087  F088         	movff	??___flmul+1,??___flmul+2
  9136  01395A  C086  F087         	movff	??___flmul,??___flmul+1
  9137  01395E  0100               	movlb	0	; () banked
  9138  013960  6B86               	clrf	??___flmul& (0+255),b
  9139  013962  0100               	movlb	0	; () banked
  9140  013964  5186               	movf	??___flmul& (0+255),w,b
  9141  013966  0100               	movlb	0	; () banked
  9142  013968  2791               	addwf	___flmul@prod& (0+255),f,b
  9143  01396A  0100               	movlb	0	; () banked
  9144  01396C  5187               	movf	(??___flmul+1)& (0+255),w,b
  9145  01396E  0100               	movlb	0	; () banked
  9146  013970  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9147  013972  0100               	movlb	0	; () banked
  9148  013974  5188               	movf	(??___flmul+2)& (0+255),w,b
  9149  013976  0100               	movlb	0	; () banked
  9150  013978  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9151  01397A  0100               	movlb	0	; () banked
  9152  01397C  5189               	movf	(??___flmul+3)& (0+255),w,b
  9153  01397E  0100               	movlb	0	; () banked
  9154  013980  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9155                           
  9156                           ; BSR set to: 0
  9157  013982  C08C  F086         	movff	___flmul@grs,??___flmul
  9158  013986  C08D  F087         	movff	___flmul@grs+1,??___flmul+1
  9159  01398A  C08E  F088         	movff	___flmul@grs+2,??___flmul+2
  9160  01398E  C08F  F089         	movff	___flmul@grs+3,??___flmul+3
  9161  013992  0E19               	movlw	25
  9162  013994  D006               	goto	u10390
  9163  013996                     u10395:
  9164  013996  0100               	movlb	0	; () banked
  9165  013998  90D8               	bcf	status,0,c
  9166  01399A  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  9167  01399C  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  9168  01399E  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  9169  0139A0  3386               	rrcf	??___flmul& (0+255),f,b
  9170  0139A2                     u10390:
  9171  0139A2  2EE8               	decfsz	wreg,f,c
  9172  0139A4  D7F8               	goto	u10395
  9173  0139A6  0100               	movlb	0	; () banked
  9174  0139A8  5186               	movf	??___flmul& (0+255),w,b
  9175  0139AA  0100               	movlb	0	; () banked
  9176  0139AC  2791               	addwf	___flmul@prod& (0+255),f,b
  9177  0139AE  0100               	movlb	0	; () banked
  9178  0139B0  5187               	movf	(??___flmul+1)& (0+255),w,b
  9179  0139B2  0100               	movlb	0	; () banked
  9180  0139B4  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9181  0139B6  0100               	movlb	0	; () banked
  9182  0139B8  5188               	movf	(??___flmul+2)& (0+255),w,b
  9183  0139BA  0100               	movlb	0	; () banked
  9184  0139BC  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9185  0139BE  0100               	movlb	0	; () banked
  9186  0139C0  5189               	movf	(??___flmul+3)& (0+255),w,b
  9187  0139C2  0100               	movlb	0	; () banked
  9188  0139C4  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9189                           
  9190                           ; BSR set to: 0
  9191  0139C6  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  9192  0139CA  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  9193  0139CE  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  9194  0139D2  0100               	movlb	0	; () banked
  9195  0139D4  6B8C               	clrf	___flmul@grs& (0+255),b
  9196                           
  9197                           ; BSR set to: 0
  9198  0139D6  0100               	movlb	0	; () banked
  9199  0139D8  518B               	movf	___flmul@aexp& (0+255),w,b
  9200  0139DA  C090  F086         	movff	___flmul@bexp,??___flmul
  9201  0139DE  0100               	movlb	0	; () banked
  9202  0139E0  6B87               	clrf	(??___flmul+1)& (0+255),b
  9203  0139E2  0100               	movlb	0	; () banked
  9204  0139E4  2786               	addwf	??___flmul& (0+255),f,b
  9205  0139E6  0E00               	movlw	0
  9206  0139E8  2387               	addwfc	(??___flmul+1)& (0+255),f,b
  9207  0139EA  0E82               	movlw	130
  9208  0139EC  0100               	movlb	0	; () banked
  9209  0139EE  2586               	addwf	??___flmul& (0+255),w,b
  9210  0139F0  0100               	movlb	0	; () banked
  9211  0139F2  6F95               	movwf	___flmul@temp& (0+255),b
  9212  0139F4  0EFF               	movlw	255
  9213  0139F6  0100               	movlb	0	; () banked
  9214  0139F8  2187               	addwfc	(??___flmul+1)& (0+255),w,b
  9215  0139FA  0100               	movlb	0	; () banked
  9216  0139FC  6F96               	movwf	(___flmul@temp+1)& (0+255),b
  9217  0139FE  D015               	goto	l7898
  9218  013A00                     l7892:
  9219                           
  9220                           ; BSR set to: 0
  9221  013A00  0100               	movlb	0	; () banked
  9222  013A02  90D8               	bcf	status,0,c
  9223  013A04  3791               	rlcf	___flmul@prod& (0+255),f,b
  9224  013A06  3792               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9225  013A08  3793               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9226  013A0A  3794               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9227                           
  9228                           ; BSR set to: 0
  9229  013A0C  0100               	movlb	0	; () banked
  9230  013A0E  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  9231  013A10  D002               	goto	l1575
  9232                           
  9233                           ; BSR set to: 0
  9234  013A12  0100               	movlb	0	; () banked
  9235  013A14  8191               	bsf	___flmul@prod& (0+255),0,b
  9236  013A16                     l1575:
  9237                           
  9238                           ; BSR set to: 0
  9239  013A16  0100               	movlb	0	; () banked
  9240  013A18  90D8               	bcf	status,0,c
  9241  013A1A  378C               	rlcf	___flmul@grs& (0+255),f,b
  9242  013A1C  378D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9243  013A1E  378E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9244  013A20  378F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9245  013A22  0100               	movlb	0	; () banked
  9246  013A24  0795               	decf	___flmul@temp& (0+255),f,b
  9247  013A26  A0D8               	btfss	status,0,c
  9248  013A28  0796               	decf	(___flmul@temp+1)& (0+255),f,b
  9249  013A2A                     l7898:
  9250                           
  9251                           ; BSR set to: 0
  9252  013A2A  0100               	movlb	0	; () banked
  9253  013A2C  AF93               	btfss	(___flmul@prod+2)& (0+255),7,b
  9254  013A2E  D7E8               	goto	l7892
  9255                           
  9256                           ; BSR set to: 0
  9257                           
  9258                           ; BSR set to: 0
  9259  013A30  0E00               	movlw	0
  9260  013A32  0100               	movlb	0	; () banked
  9261  013A34  6F8B               	movwf	___flmul@aexp& (0+255),b
  9262                           
  9263                           ; BSR set to: 0
  9264  013A36  0100               	movlb	0	; () banked
  9265  013A38  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  9266  013A3A  D024               	goto	l1577
  9267                           
  9268                           ; BSR set to: 0
  9269  013A3C  0EFF               	movlw	255
  9270  013A3E  0100               	movlb	0	; () banked
  9271  013A40  158C               	andwf	___flmul@grs& (0+255),w,b
  9272  013A42  0100               	movlb	0	; () banked
  9273  013A44  6F86               	movwf	??___flmul& (0+255),b
  9274  013A46  0EFF               	movlw	255
  9275  013A48  0100               	movlb	0	; () banked
  9276  013A4A  158D               	andwf	(___flmul@grs+1)& (0+255),w,b
  9277  013A4C  0100               	movlb	0	; () banked
  9278  013A4E  6F87               	movwf	(??___flmul+1)& (0+255),b
  9279  013A50  0EFF               	movlw	255
  9280  013A52  0100               	movlb	0	; () banked
  9281  013A54  158E               	andwf	(___flmul@grs+2)& (0+255),w,b
  9282  013A56  0100               	movlb	0	; () banked
  9283  013A58  6F88               	movwf	(??___flmul+2)& (0+255),b
  9284  013A5A  0E7F               	movlw	127
  9285  013A5C  0100               	movlb	0	; () banked
  9286  013A5E  158F               	andwf	(___flmul@grs+3)& (0+255),w,b
  9287  013A60  0100               	movlb	0	; () banked
  9288  013A62  6F89               	movwf	(??___flmul+3)& (0+255),b
  9289  013A64  0100               	movlb	0	; () banked
  9290  013A66  5186               	movf	??___flmul& (0+255),w,b
  9291  013A68  0100               	movlb	0	; () banked
  9292  013A6A  1187               	iorwf	(??___flmul+1)& (0+255),w,b
  9293  013A6C  0100               	movlb	0	; () banked
  9294  013A6E  1188               	iorwf	(??___flmul+2)& (0+255),w,b
  9295  013A70  0100               	movlb	0	; () banked
  9296  013A72  1189               	iorwf	(??___flmul+3)& (0+255),w,b
  9297  013A74  A4D8               	btfss	status,2,c
  9298  013A76  D003               	goto	l7908
  9299                           
  9300                           ; BSR set to: 0
  9301                           
  9302                           ; BSR set to: 0
  9303  013A78  0100               	movlb	0	; () banked
  9304  013A7A  A191               	btfss	___flmul@prod& (0+255),0,b
  9305  013A7C  D003               	goto	l1577
  9306  013A7E                     l7908:
  9307                           
  9308                           ; BSR set to: 0
  9309  013A7E  0E01               	movlw	1
  9310  013A80  0100               	movlb	0	; () banked
  9311  013A82  6F8B               	movwf	___flmul@aexp& (0+255),b
  9312  013A84                     l1577:
  9313                           
  9314                           ; BSR set to: 0
  9315  013A84  0100               	movlb	0	; () banked
  9316  013A86  518B               	movf	___flmul@aexp& (0+255),w,b
  9317  013A88  0100               	movlb	0	; () banked
  9318  013A8A  B4D8               	btfsc	status,2,c
  9319  013A8C  D023               	goto	l7918
  9320                           
  9321                           ; BSR set to: 0
  9322  013A8E  0E01               	movlw	1
  9323  013A90  0100               	movlb	0	; () banked
  9324  013A92  2791               	addwf	___flmul@prod& (0+255),f,b
  9325  013A94  0E00               	movlw	0
  9326  013A96  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9327  013A98  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9328  013A9A  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9329                           
  9330                           ; BSR set to: 0
  9331  013A9C  0100               	movlb	0	; () banked
  9332  013A9E  A194               	btfss	(___flmul@prod+3)& (0+255),0,b
  9333  013AA0  D019               	goto	l7918
  9334                           
  9335                           ; BSR set to: 0
  9336  013AA2  C091  F086         	movff	___flmul@prod,??___flmul
  9337  013AA6  C092  F087         	movff	___flmul@prod+1,??___flmul+1
  9338  013AAA  C093  F088         	movff	___flmul@prod+2,??___flmul+2
  9339  013AAE  C094  F089         	movff	___flmul@prod+3,??___flmul+3
  9340  013AB2  0100               	movlb	0	; () banked
  9341  013AB4  3589               	rlcf	(??___flmul+3)& (0+255),w,b
  9342  013AB6  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  9343  013AB8  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  9344  013ABA  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  9345  013ABC  3386               	rrcf	??___flmul& (0+255),f,b
  9346  013ABE  C086  F091         	movff	??___flmul,___flmul@prod
  9347  013AC2  C087  F092         	movff	??___flmul+1,___flmul@prod+1
  9348  013AC6  C088  F093         	movff	??___flmul+2,___flmul@prod+2
  9349  013ACA  C089  F094         	movff	??___flmul+3,___flmul@prod+3
  9350                           
  9351                           ; BSR set to: 0
  9352  013ACE  0100               	movlb	0	; () banked
  9353  013AD0  4B95               	infsnz	___flmul@temp& (0+255),f,b
  9354  013AD2  2B96               	incf	(___flmul@temp+1)& (0+255),f,b
  9355  013AD4                     l7918:
  9356                           
  9357                           ; BSR set to: 0
  9358  013AD4  0100               	movlb	0	; () banked
  9359  013AD6  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9360  013AD8  D010               	goto	l7922
  9361  013ADA  0100               	movlb	0	; () banked
  9362  013ADC  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9363  013ADE  E104               	bnz	u10470
  9364  013AE0  0100               	movlb	0	; () banked
  9365  013AE2  2995               	incf	___flmul@temp& (0+255),w,b
  9366  013AE4  A0D8               	btfss	status,0,c
  9367  013AE6  D009               	goto	l7922
  9368  013AE8                     u10470:
  9369                           
  9370                           ; BSR set to: 0
  9371  013AE8  0E00               	movlw	0
  9372  013AEA  0100               	movlb	0	; () banked
  9373  013AEC  6F91               	movwf	___flmul@prod& (0+255),b
  9374  013AEE  0E00               	movlw	0
  9375  013AF0  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  9376  013AF2  0E80               	movlw	128
  9377  013AF4  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  9378  013AF6  0E7F               	movlw	127
  9379  013AF8  D02B               	goto	L8
  9380  013AFA                     l7922:
  9381                           
  9382                           ; BSR set to: 0
  9383  013AFA  0100               	movlb	0	; () banked
  9384  013AFC  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9385  013AFE  D007               	goto	l7924
  9386  013B00  0100               	movlb	0	; () banked
  9387  013B02  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9388  013B04  E111               	bnz	l1585
  9389  013B06  0100               	movlb	0	; () banked
  9390  013B08  0595               	decf	___flmul@temp& (0+255),w,b
  9391  013B0A  B0D8               	btfsc	status,0,c
  9392  013B0C  D00D               	goto	l1585
  9393  013B0E                     l7924:
  9394                           
  9395                           ; BSR set to: 0
  9396  013B0E  0E00               	movlw	0
  9397  013B10  0100               	movlb	0	; () banked
  9398  013B12  6F91               	movwf	___flmul@prod& (0+255),b
  9399  013B14  0E00               	movlw	0
  9400  013B16  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  9401  013B18  0E00               	movlw	0
  9402  013B1A  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  9403  013B1C  0E00               	movlw	0
  9404  013B1E  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  9405  013B20  0E00               	movlw	0
  9406  013B22  0100               	movlb	0	; () banked
  9407  013B24  6F8A               	movwf	___flmul@sign& (0+255),b
  9408  013B26  D015               	goto	l7934
  9409  013B28                     l1585:
  9410                           
  9411                           ; BSR set to: 0
  9412  013B28  C095  F090         	movff	___flmul@temp,___flmul@bexp
  9413                           
  9414                           ; BSR set to: 0
  9415  013B2C  0EFF               	movlw	255
  9416  013B2E  0100               	movlb	0	; () banked
  9417  013B30  1791               	andwf	___flmul@prod& (0+255),f,b
  9418  013B32  0EFF               	movlw	255
  9419  013B34  1792               	andwf	(___flmul@prod+1)& (0+255),f,b
  9420  013B36  0E7F               	movlw	127
  9421  013B38  1793               	andwf	(___flmul@prod+2)& (0+255),f,b
  9422  013B3A  0E00               	movlw	0
  9423  013B3C  1794               	andwf	(___flmul@prod+3)& (0+255),f,b
  9424                           
  9425                           ; BSR set to: 0
  9426  013B3E  0100               	movlb	0	; () banked
  9427  013B40  A190               	btfss	___flmul@bexp& (0+255),0,b
  9428  013B42  D002               	goto	l7932
  9429                           
  9430                           ; BSR set to: 0
  9431  013B44  0100               	movlb	0	; () banked
  9432  013B46  8F93               	bsf	(___flmul@prod+2)& (0+255),7,b
  9433  013B48                     l7932:
  9434                           
  9435                           ; BSR set to: 0
  9436  013B48  0100               	movlb	0	; () banked
  9437  013B4A  90D8               	bcf	status,0,c
  9438  013B4C  3190               	rrcf	___flmul@bexp& (0+255),w,b
  9439  013B4E  0100               	movlb	0	; () banked
  9440  013B50                     L8:
  9441  013B50  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  9442  013B52                     l7934:
  9443                           
  9444                           ; BSR set to: 0
  9445  013B52  0100               	movlb	0	; () banked
  9446  013B54  518A               	movf	___flmul@sign& (0+255),w,b
  9447  013B56  0100               	movlb	0	; () banked
  9448  013B58  1394               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9449                           
  9450                           ; BSR set to: 0
  9451  013B5A  C091  F07E         	movff	___flmul@prod,?___flmul
  9452  013B5E  C092  F07F         	movff	___flmul@prod+1,?___flmul+1
  9453  013B62  C093  F080         	movff	___flmul@prod+2,?___flmul+2
  9454  013B66  C094  F081         	movff	___flmul@prod+3,?___flmul+3
  9455  013B6A  0012               	return	
  9456  013B6C                     __end_of___flmul:
  9457                           	opt stack 0
  9458                           tblptru	equ	0xFF8
  9459                           tblptrh	equ	0xFF7
  9460                           tblptrl	equ	0xFF6
  9461                           tablat	equ	0xFF5
  9462                           prodh	equ	0xFF4
  9463                           prodl	equ	0xFF3
  9464                           intcon	equ	0xFF2
  9465                           postinc0	equ	0xFEE
  9466                           wreg	equ	0xFE8
  9467                           indf2	equ	0xFDF
  9468                           postinc2	equ	0xFDE
  9469                           fsr2h	equ	0xFDA
  9470                           fsr2l	equ	0xFD9
  9471                           status	equ	0xFD8
  9472                           
  9473 ;; *************** function ___awmod *****************
  9474 ;; Defined at:
  9475 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  9476 ;; Parameters:    Size  Location     Type
  9477 ;;  dividend        2   16[BANK0 ] int 
  9478 ;;  divisor         2   18[BANK0 ] int 
  9479 ;; Auto vars:     Size  Location     Type
  9480 ;;  sign            1   21[BANK0 ] unsigned char 
  9481 ;;  counter         1   20[BANK0 ] unsigned char 
  9482 ;; Return value:  Size  Location     Type
  9483 ;;                  2   16[BANK0 ] int 
  9484 ;; Registers used:
  9485 ;;		wreg, status,2, status,0
  9486 ;; Tracked objects:
  9487 ;;		On entry : 0/0
  9488 ;;		On exit  : 0/0
  9489 ;;		Unchanged: 0/0
  9490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9491 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9492 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9494 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9495 ;;Total ram usage:        6 bytes
  9496 ;; Hardware stack levels used:    1
  9497 ;; Hardware stack levels required when called:    3
  9498 ;; This function calls:
  9499 ;;		Nothing
  9500 ;; This function is called by:
  9501 ;;		_fround
  9502 ;;		_scale
  9503 ;; This function uses a non-reentrant model
  9504 ;;
  9505                           
  9506                           	psect	text13
  9507  015AA4                     __ptext13:
  9508                           	opt stack 0
  9509  015AA4                     ___awmod:
  9510                           	opt stack 24
  9511                           
  9512                           ; BSR set to: 0
  9513                           ;incstack = 0
  9514  015AA4  0E00               	movlw	0
  9515  015AA6  0100               	movlb	0	; () banked
  9516  015AA8  6F75               	movwf	___awmod@sign& (0+255),b
  9517                           
  9518                           ; BSR set to: 0
  9519  015AAA  0100               	movlb	0	; () banked
  9520  015AAC  AF71               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9521  015AAE  D008               	goto	l7992
  9522                           
  9523                           ; BSR set to: 0
  9524  015AB0  0100               	movlb	0	; () banked
  9525  015AB2  6D70               	negf	___awmod@dividend& (0+255),b
  9526  015AB4  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
  9527  015AB6  B0D8               	btfsc	status,0,c
  9528  015AB8  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
  9529                           
  9530                           ; BSR set to: 0
  9531  015ABA  0E01               	movlw	1
  9532  015ABC  0100               	movlb	0	; () banked
  9533  015ABE  6F75               	movwf	___awmod@sign& (0+255),b
  9534  015AC0                     l7992:
  9535                           
  9536                           ; BSR set to: 0
  9537  015AC0  0100               	movlb	0	; () banked
  9538  015AC2  AF73               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9539  015AC4  D005               	goto	l7996
  9540                           
  9541                           ; BSR set to: 0
  9542  015AC6  0100               	movlb	0	; () banked
  9543  015AC8  6D72               	negf	___awmod@divisor& (0+255),b
  9544  015ACA  1F73               	comf	(___awmod@divisor+1)& (0+255),f,b
  9545  015ACC  B0D8               	btfsc	status,0,c
  9546  015ACE  2B73               	incf	(___awmod@divisor+1)& (0+255),f,b
  9547  015AD0                     l7996:
  9548                           
  9549                           ; BSR set to: 0
  9550  015AD0  0100               	movlb	0	; () banked
  9551  015AD2  5172               	movf	___awmod@divisor& (0+255),w,b
  9552  015AD4  0100               	movlb	0	; () banked
  9553  015AD6  1173               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9554  015AD8  B4D8               	btfsc	status,2,c
  9555  015ADA  D026               	goto	l8012
  9556                           
  9557                           ; BSR set to: 0
  9558  015ADC  0E01               	movlw	1
  9559  015ADE  0100               	movlb	0	; () banked
  9560  015AE0  6F74               	movwf	___awmod@counter& (0+255),b
  9561  015AE2  D006               	goto	l8002
  9562  015AE4                     l8000:
  9563                           
  9564                           ; BSR set to: 0
  9565  015AE4  0100               	movlb	0	; () banked
  9566  015AE6  90D8               	bcf	status,0,c
  9567  015AE8  3772               	rlcf	___awmod@divisor& (0+255),f,b
  9568  015AEA  3773               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9569  015AEC  0100               	movlb	0	; () banked
  9570  015AEE  2B74               	incf	___awmod@counter& (0+255),f,b
  9571  015AF0                     l8002:
  9572                           
  9573                           ; BSR set to: 0
  9574  015AF0  0100               	movlb	0	; () banked
  9575  015AF2  AF73               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9576  015AF4  D7F7               	goto	l8000
  9577  015AF6                     l8004:
  9578                           
  9579                           ; BSR set to: 0
  9580  015AF6  0100               	movlb	0	; () banked
  9581  015AF8  5172               	movf	___awmod@divisor& (0+255),w,b
  9582  015AFA  0100               	movlb	0	; () banked
  9583  015AFC  5D70               	subwf	___awmod@dividend& (0+255),w,b
  9584  015AFE  0100               	movlb	0	; () banked
  9585  015B00  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
  9586  015B02  0100               	movlb	0	; () banked
  9587  015B04  5971               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9588  015B06  A0D8               	btfss	status,0,c
  9589  015B08  D008               	goto	l8008
  9590                           
  9591                           ; BSR set to: 0
  9592  015B0A  0100               	movlb	0	; () banked
  9593  015B0C  5172               	movf	___awmod@divisor& (0+255),w,b
  9594  015B0E  0100               	movlb	0	; () banked
  9595  015B10  5F70               	subwf	___awmod@dividend& (0+255),f,b
  9596  015B12  0100               	movlb	0	; () banked
  9597  015B14  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
  9598  015B16  0100               	movlb	0	; () banked
  9599  015B18  5B71               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9600  015B1A                     l8008:
  9601                           
  9602                           ; BSR set to: 0
  9603  015B1A  0100               	movlb	0	; () banked
  9604  015B1C  90D8               	bcf	status,0,c
  9605  015B1E  3373               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9606  015B20  3372               	rrcf	___awmod@divisor& (0+255),f,b
  9607                           
  9608                           ; BSR set to: 0
  9609  015B22  0100               	movlb	0	; () banked
  9610  015B24  2F74               	decfsz	___awmod@counter& (0+255),f,b
  9611  015B26  D7E7               	goto	l8004
  9612  015B28                     l8012:
  9613                           
  9614                           ; BSR set to: 0
  9615  015B28  0100               	movlb	0	; () banked
  9616  015B2A  5175               	movf	___awmod@sign& (0+255),w,b
  9617  015B2C  0100               	movlb	0	; () banked
  9618  015B2E  B4D8               	btfsc	status,2,c
  9619  015B30  D005               	goto	l8016
  9620                           
  9621                           ; BSR set to: 0
  9622  015B32  0100               	movlb	0	; () banked
  9623  015B34  6D70               	negf	___awmod@dividend& (0+255),b
  9624  015B36  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
  9625  015B38  B0D8               	btfsc	status,0,c
  9626  015B3A  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
  9627  015B3C                     l8016:
  9628                           
  9629                           ; BSR set to: 0
  9630  015B3C  C070  F070         	movff	___awmod@dividend,?___awmod
  9631  015B40  C071  F071         	movff	___awmod@dividend+1,?___awmod+1
  9632  015B44  0012               	return	
  9633  015B46                     __end_of___awmod:
  9634                           	opt stack 0
  9635                           tblptru	equ	0xFF8
  9636                           tblptrh	equ	0xFF7
  9637                           tblptrl	equ	0xFF6
  9638                           tablat	equ	0xFF5
  9639                           prodh	equ	0xFF4
  9640                           prodl	equ	0xFF3
  9641                           intcon	equ	0xFF2
  9642                           postinc0	equ	0xFEE
  9643                           wreg	equ	0xFE8
  9644                           indf2	equ	0xFDF
  9645                           postinc2	equ	0xFDE
  9646                           fsr2h	equ	0xFDA
  9647                           fsr2l	equ	0xFD9
  9648                           status	equ	0xFD8
  9649                           
  9650 ;; *************** function ___awdiv *****************
  9651 ;; Defined at:
  9652 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9653 ;; Parameters:    Size  Location     Type
  9654 ;;  dividend        2   22[BANK0 ] int 
  9655 ;;  divisor         2   24[BANK0 ] int 
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;  quotient        2   28[BANK0 ] int 
  9658 ;;  sign            1   27[BANK0 ] unsigned char 
  9659 ;;  counter         1   26[BANK0 ] unsigned char 
  9660 ;; Return value:  Size  Location     Type
  9661 ;;                  2   22[BANK0 ] int 
  9662 ;; Registers used:
  9663 ;;		wreg, status,2, status,0
  9664 ;; Tracked objects:
  9665 ;;		On entry : 0/0
  9666 ;;		On exit  : 0/0
  9667 ;;		Unchanged: 0/0
  9668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9669 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9670 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9672 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9673 ;;Total ram usage:        8 bytes
  9674 ;; Hardware stack levels used:    1
  9675 ;; Hardware stack levels required when called:    3
  9676 ;; This function calls:
  9677 ;;		Nothing
  9678 ;; This function is called by:
  9679 ;;		_fround
  9680 ;;		_scale
  9681 ;;		_sprintf
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685                           	psect	text14
  9686  015664                     __ptext14:
  9687                           	opt stack 0
  9688  015664                     ___awdiv:
  9689                           	opt stack 24
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;incstack = 0
  9693  015664  0E00               	movlw	0
  9694  015666  0100               	movlb	0	; () banked
  9695  015668  6F7B               	movwf	___awdiv@sign& (0+255),b
  9696                           
  9697                           ; BSR set to: 0
  9698  01566A  0100               	movlb	0	; () banked
  9699  01566C  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9700  01566E  D008               	goto	l7948
  9701                           
  9702                           ; BSR set to: 0
  9703  015670  0100               	movlb	0	; () banked
  9704  015672  6D78               	negf	___awdiv@divisor& (0+255),b
  9705  015674  1F79               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9706  015676  B0D8               	btfsc	status,0,c
  9707  015678  2B79               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9708                           
  9709                           ; BSR set to: 0
  9710  01567A  0E01               	movlw	1
  9711  01567C  0100               	movlb	0	; () banked
  9712  01567E  6F7B               	movwf	___awdiv@sign& (0+255),b
  9713  015680                     l7948:
  9714                           
  9715                           ; BSR set to: 0
  9716  015680  0100               	movlb	0	; () banked
  9717  015682  AF77               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9718  015684  D008               	goto	l7954
  9719                           
  9720                           ; BSR set to: 0
  9721  015686  0100               	movlb	0	; () banked
  9722  015688  6D76               	negf	___awdiv@dividend& (0+255),b
  9723  01568A  1F77               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9724  01568C  B0D8               	btfsc	status,0,c
  9725  01568E  2B77               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9726                           
  9727                           ; BSR set to: 0
  9728  015690  0E01               	movlw	1
  9729  015692  0100               	movlb	0	; () banked
  9730  015694  1B7B               	xorwf	___awdiv@sign& (0+255),f,b
  9731  015696                     l7954:
  9732                           
  9733                           ; BSR set to: 0
  9734  015696  0E00               	movlw	0
  9735  015698  0100               	movlb	0	; () banked
  9736  01569A  6F7D               	movwf	(___awdiv@quotient+1)& (0+255),b
  9737  01569C  0E00               	movlw	0
  9738  01569E  6F7C               	movwf	___awdiv@quotient& (0+255),b
  9739                           
  9740                           ; BSR set to: 0
  9741  0156A0  0100               	movlb	0	; () banked
  9742  0156A2  5178               	movf	___awdiv@divisor& (0+255),w,b
  9743  0156A4  0100               	movlb	0	; () banked
  9744  0156A6  1179               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9745  0156A8  B4D8               	btfsc	status,2,c
  9746  0156AA  D02C               	goto	l7976
  9747                           
  9748                           ; BSR set to: 0
  9749  0156AC  0E01               	movlw	1
  9750  0156AE  0100               	movlb	0	; () banked
  9751  0156B0  6F7A               	movwf	___awdiv@counter& (0+255),b
  9752  0156B2  D006               	goto	l7962
  9753  0156B4                     l7960:
  9754                           
  9755                           ; BSR set to: 0
  9756  0156B4  0100               	movlb	0	; () banked
  9757  0156B6  90D8               	bcf	status,0,c
  9758  0156B8  3778               	rlcf	___awdiv@divisor& (0+255),f,b
  9759  0156BA  3779               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9760  0156BC  0100               	movlb	0	; () banked
  9761  0156BE  2B7A               	incf	___awdiv@counter& (0+255),f,b
  9762  0156C0                     l7962:
  9763                           
  9764                           ; BSR set to: 0
  9765  0156C0  0100               	movlb	0	; () banked
  9766  0156C2  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9767  0156C4  D7F7               	goto	l7960
  9768  0156C6                     l7964:
  9769                           
  9770                           ; BSR set to: 0
  9771  0156C6  0100               	movlb	0	; () banked
  9772  0156C8  90D8               	bcf	status,0,c
  9773  0156CA  377C               	rlcf	___awdiv@quotient& (0+255),f,b
  9774  0156CC  377D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9775                           
  9776                           ; BSR set to: 0
  9777  0156CE  0100               	movlb	0	; () banked
  9778  0156D0  5178               	movf	___awdiv@divisor& (0+255),w,b
  9779  0156D2  0100               	movlb	0	; () banked
  9780  0156D4  5D76               	subwf	___awdiv@dividend& (0+255),w,b
  9781  0156D6  0100               	movlb	0	; () banked
  9782  0156D8  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9783  0156DA  0100               	movlb	0	; () banked
  9784  0156DC  5977               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9785  0156DE  A0D8               	btfss	status,0,c
  9786  0156E0  D00A               	goto	l7972
  9787                           
  9788                           ; BSR set to: 0
  9789  0156E2  0100               	movlb	0	; () banked
  9790  0156E4  5178               	movf	___awdiv@divisor& (0+255),w,b
  9791  0156E6  0100               	movlb	0	; () banked
  9792  0156E8  5F76               	subwf	___awdiv@dividend& (0+255),f,b
  9793  0156EA  0100               	movlb	0	; () banked
  9794  0156EC  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9795  0156EE  0100               	movlb	0	; () banked
  9796  0156F0  5B77               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9797                           
  9798                           ; BSR set to: 0
  9799  0156F2  0100               	movlb	0	; () banked
  9800  0156F4  817C               	bsf	___awdiv@quotient& (0+255),0,b
  9801  0156F6                     l7972:
  9802                           
  9803                           ; BSR set to: 0
  9804  0156F6  0100               	movlb	0	; () banked
  9805  0156F8  90D8               	bcf	status,0,c
  9806  0156FA  3379               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9807  0156FC  3378               	rrcf	___awdiv@divisor& (0+255),f,b
  9808                           
  9809                           ; BSR set to: 0
  9810  0156FE  0100               	movlb	0	; () banked
  9811  015700  2F7A               	decfsz	___awdiv@counter& (0+255),f,b
  9812  015702  D7E1               	goto	l7964
  9813  015704                     l7976:
  9814                           
  9815                           ; BSR set to: 0
  9816  015704  0100               	movlb	0	; () banked
  9817  015706  517B               	movf	___awdiv@sign& (0+255),w,b
  9818  015708  0100               	movlb	0	; () banked
  9819  01570A  B4D8               	btfsc	status,2,c
  9820  01570C  D005               	goto	l7980
  9821                           
  9822                           ; BSR set to: 0
  9823  01570E  0100               	movlb	0	; () banked
  9824  015710  6D7C               	negf	___awdiv@quotient& (0+255),b
  9825  015712  1F7D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9826  015714  B0D8               	btfsc	status,0,c
  9827  015716  2B7D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9828  015718                     l7980:
  9829                           
  9830                           ; BSR set to: 0
  9831  015718  C07C  F076         	movff	___awdiv@quotient,?___awdiv
  9832  01571C  C07D  F077         	movff	___awdiv@quotient+1,?___awdiv+1
  9833  015720  0012               	return	
  9834  015722                     __end_of___awdiv:
  9835                           	opt stack 0
  9836                           tblptru	equ	0xFF8
  9837                           tblptrh	equ	0xFF7
  9838                           tblptrl	equ	0xFF6
  9839                           tablat	equ	0xFF5
  9840                           prodh	equ	0xFF4
  9841                           prodl	equ	0xFF3
  9842                           intcon	equ	0xFF2
  9843                           postinc0	equ	0xFEE
  9844                           wreg	equ	0xFE8
  9845                           indf2	equ	0xFDF
  9846                           postinc2	equ	0xFDE
  9847                           fsr2h	equ	0xFDA
  9848                           fsr2l	equ	0xFD9
  9849                           status	equ	0xFD8
  9850                           
  9851 ;; *************** function __tdiv_to_l_ *****************
  9852 ;; Defined at:
  9853 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;  f1              4   16[BANK0 ] float 
  9856 ;;  f2              4   20[BANK0 ] float 
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;  quot            4   27[BANK0 ] unsigned long 
  9859 ;;  exp1            1   32[BANK0 ] unsigned char 
  9860 ;;  cntr            1   31[BANK0 ] unsigned char 
  9861 ;; Return value:  Size  Location     Type
  9862 ;;                  4   16[BANK0 ] unsigned long 
  9863 ;; Registers used:
  9864 ;;		wreg, status,2, status,0
  9865 ;; Tracked objects:
  9866 ;;		On entry : 0/0
  9867 ;;		On exit  : 0/0
  9868 ;;		Unchanged: 0/0
  9869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9870 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9871 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9872 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9873 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9874 ;;Total ram usage:       17 bytes
  9875 ;; Hardware stack levels used:    1
  9876 ;; Hardware stack levels required when called:    3
  9877 ;; This function calls:
  9878 ;;		Nothing
  9879 ;; This function is called by:
  9880 ;;		_sprintf
  9881 ;; This function uses a non-reentrant model
  9882 ;;
  9883                           
  9884                           	psect	text15
  9885  014CC2                     __ptext15:
  9886                           	opt stack 0
  9887  014CC2                     __tdiv_to_l_:
  9888                           	opt stack 25
  9889                           
  9890                           ; BSR set to: 0
  9891                           ;incstack = 0
  9892  014CC2  C072  F078         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9893  014CC6  0100               	movlb	0	; () banked
  9894  014CC8  6B79               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9895  014CCA  6B7A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9896  014CCC  0100               	movlb	0	; () banked
  9897  014CCE  3571               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9898  014CD0  0100               	movlb	0	; () banked
  9899  014CD2  3778               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9900  014CD4  E301               	bnc	u10731
  9901  014CD6  8179               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9902  014CD8                     u10731:
  9903  014CD8  0100               	movlb	0	; () banked
  9904  014CDA  5178               	movf	??__tdiv_to_l_& (0+255),w,b
  9905  014CDC  0100               	movlb	0	; () banked
  9906  014CDE  6F80               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9907  014CE0  0100               	movlb	0	; () banked
  9908  014CE2  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9909  014CE4  A4D8               	btfss	status,2,c
  9910  014CE6  D00A               	goto	l8130
  9911                           
  9912                           ; BSR set to: 0
  9913  014CE8  0E00               	movlw	0
  9914  014CEA  0100               	movlb	0	; () banked
  9915  014CEC  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  9916  014CEE  0E00               	movlw	0
  9917  014CF0  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9918  014CF2  0E00               	movlw	0
  9919  014CF4  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9920  014CF6  0E00               	movlw	0
  9921  014CF8  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9922                           
  9923                           ; BSR set to: 0
  9924  014CFA  0012               	return	
  9925  014CFC                     l8130:
  9926                           
  9927                           ; BSR set to: 0
  9928  014CFC  C076  F078         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9929  014D00  0100               	movlb	0	; () banked
  9930  014D02  6B79               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9931  014D04  6B7A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9932  014D06  0100               	movlb	0	; () banked
  9933  014D08  3575               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9934  014D0A  0100               	movlb	0	; () banked
  9935  014D0C  3778               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9936  014D0E  E301               	bnc	u10751
  9937  014D10  8179               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9938  014D12                     u10751:
  9939  014D12  0100               	movlb	0	; () banked
  9940  014D14  5178               	movf	??__tdiv_to_l_& (0+255),w,b
  9941  014D16  0100               	movlb	0	; () banked
  9942  014D18  6F7F               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9943  014D1A  0100               	movlb	0	; () banked
  9944  014D1C  517F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9945  014D1E  A4D8               	btfss	status,2,c
  9946  014D20  D00A               	goto	l8136
  9947                           
  9948                           ; BSR set to: 0
  9949  014D22  0E00               	movlw	0
  9950  014D24  0100               	movlb	0	; () banked
  9951  014D26  6F70               	movwf	?__tdiv_to_l_& (0+255),b
  9952  014D28  0E00               	movlw	0
  9953  014D2A  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9954  014D2C  0E00               	movlw	0
  9955  014D2E  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9956  014D30  0E00               	movlw	0
  9957  014D32  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9958                           
  9959                           ; BSR set to: 0
  9960  014D34  0012               	return	
  9961  014D36                     l8136:
  9962                           
  9963                           ; BSR set to: 0
  9964  014D36  0100               	movlb	0	; () banked
  9965  014D38  8F71               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9966                           
  9967                           ; BSR set to: 0
  9968  014D3A  0EFF               	movlw	255
  9969  014D3C  0100               	movlb	0	; () banked
  9970  014D3E  1770               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9971  014D40  0EFF               	movlw	255
  9972  014D42  0100               	movlb	0	; () banked
  9973  014D44  1771               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9974  014D46  0E00               	movlw	0
  9975  014D48  0100               	movlb	0	; () banked
  9976  014D4A  1772               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9977  014D4C  0100               	movlb	0	; () banked
  9978  014D4E  8F75               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9979                           
  9980                           ; BSR set to: 0
  9981  014D50  0EFF               	movlw	255
  9982  014D52  0100               	movlb	0	; () banked
  9983  014D54  1774               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9984  014D56  0EFF               	movlw	255
  9985  014D58  0100               	movlb	0	; () banked
  9986  014D5A  1775               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9987  014D5C  0E00               	movlw	0
  9988  014D5E  0100               	movlb	0	; () banked
  9989  014D60  1776               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9990                           
  9991                           ; BSR set to: 0
  9992  014D62  0E00               	movlw	0
  9993  014D64  0100               	movlb	0	; () banked
  9994  014D66  6F7B               	movwf	__tdiv_to_l_@quot& (0+255),b
  9995  014D68  0E00               	movlw	0
  9996  014D6A  6F7C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9997  014D6C  0E00               	movlw	0
  9998  014D6E  6F7D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9999  014D70  0E00               	movlw	0
 10000  014D72  6F7E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 10001                           
 10002                           ; BSR set to: 0
 10003  014D74  0E7F               	movlw	127
 10004  014D76  0100               	movlb	0	; () banked
 10005  014D78  5F80               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10006                           
 10007                           ; BSR set to: 0
 10008  014D7A  0100               	movlb	0	; () banked
 10009  014D7C  517F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10010  014D7E  0F98               	addlw	152
 10011  014D80  0100               	movlb	0	; () banked
 10012  014D82  5F80               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10013                           
 10014                           ; BSR set to: 0
 10015  014D84  0E18               	movlw	24
 10016  014D86  0100               	movlb	0	; () banked
 10017  014D88  6F7F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10018  014D8A                     l1292:
 10019                           
 10020                           ; BSR set to: 0
 10021  014D8A  0100               	movlb	0	; () banked
 10022  014D8C  90D8               	bcf	status,0,c
 10023  014D8E  377B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10024  014D90  377C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10025  014D92  377D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10026  014D94  377E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10027                           
 10028                           ; BSR set to: 0
 10029  014D96  0100               	movlb	0	; () banked
 10030  014D98  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10031  014D9A  0100               	movlb	0	; () banked
 10032  014D9C  5D70               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10033  014D9E  0100               	movlb	0	; () banked
 10034  014DA0  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10035  014DA2  0100               	movlb	0	; () banked
 10036  014DA4  5971               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10037  014DA6  0100               	movlb	0	; () banked
 10038  014DA8  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10039  014DAA  0100               	movlb	0	; () banked
 10040  014DAC  5972               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10041  014DAE  A0D8               	btfss	status,0,c
 10042  014DB0  D00E               	goto	l1293
 10043                           
 10044                           ; BSR set to: 0
 10045  014DB2  0100               	movlb	0	; () banked
 10046  014DB4  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10047  014DB6  0100               	movlb	0	; () banked
 10048  014DB8  5F70               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10049  014DBA  0100               	movlb	0	; () banked
 10050  014DBC  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10051  014DBE  0100               	movlb	0	; () banked
 10052  014DC0  5B71               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10053  014DC2  0100               	movlb	0	; () banked
 10054  014DC4  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10055  014DC6  0100               	movlb	0	; () banked
 10056  014DC8  5B72               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10057                           
 10058                           ; BSR set to: 0
 10059  014DCA  0100               	movlb	0	; () banked
 10060  014DCC  817B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10061  014DCE                     l1293:
 10062                           
 10063                           ; BSR set to: 0
 10064  014DCE  0100               	movlb	0	; () banked
 10065  014DD0  90D8               	bcf	status,0,c
 10066  014DD2  3770               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10067  014DD4  3771               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10068  014DD6  3772               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10069                           
 10070                           ; BSR set to: 0
 10071  014DD8  0100               	movlb	0	; () banked
 10072  014DDA  2F7F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10073  014DDC  D7D6               	goto	l1292
 10074                           
 10075                           ; BSR set to: 0
 10076                           
 10077                           ; BSR set to: 0
 10078  014DDE  0100               	movlb	0	; () banked
 10079  014DE0  AF80               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10080  014DE2  D01A               	goto	l8170
 10081                           
 10082                           ; BSR set to: 0
 10083  014DE4  0100               	movlb	0	; () banked
 10084  014DE6  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10085  014DE8  0A80               	xorlw	128
 10086  014DEA  0F97               	addlw	151
 10087  014DEC  B0D8               	btfsc	status,0,c
 10088  014DEE  D00A               	goto	l8166
 10089                           
 10090                           ; BSR set to: 0
 10091  014DF0  0E00               	movlw	0
 10092  014DF2  0100               	movlb	0	; () banked
 10093  014DF4  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10094  014DF6  0E00               	movlw	0
 10095  014DF8  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10096  014DFA  0E00               	movlw	0
 10097  014DFC  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10098  014DFE  0E00               	movlw	0
 10099  014E00  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10100                           
 10101                           ; BSR set to: 0
 10102  014E02  0012               	return	
 10103  014E04                     l8166:
 10104                           
 10105                           ; BSR set to: 0
 10106  014E04  0100               	movlb	0	; () banked
 10107  014E06  90D8               	bcf	status,0,c
 10108  014E08  337E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10109  014E0A  337D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10110  014E0C  337C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10111  014E0E  337B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10112                           
 10113                           ; BSR set to: 0
 10114  014E10  0100               	movlb	0	; () banked
 10115  014E12  3F80               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10116  014E14  D7F7               	goto	l8166
 10117                           
 10118                           ; BSR set to: 0
 10119  014E16  D01B               	goto	l1299
 10120  014E18                     l8170:
 10121                           
 10122                           ; BSR set to: 0
 10123  014E18  0E17               	movlw	23
 10124  014E1A  0100               	movlb	0	; () banked
 10125  014E1C  6580               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10126  014E1E  D012               	goto	l8178
 10127                           
 10128                           ; BSR set to: 0
 10129  014E20  0E00               	movlw	0
 10130  014E22  0100               	movlb	0	; () banked
 10131  014E24  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10132  014E26  0E00               	movlw	0
 10133  014E28  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10134  014E2A  0E00               	movlw	0
 10135  014E2C  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10136  014E2E  0E00               	movlw	0
 10137  014E30  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10138                           
 10139                           ; BSR set to: 0
 10140  014E32  0012               	return	
 10141  014E34                     l8176:
 10142                           
 10143                           ; BSR set to: 0
 10144  014E34  0100               	movlb	0	; () banked
 10145  014E36  90D8               	bcf	status,0,c
 10146  014E38  377B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10147  014E3A  377C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10148  014E3C  377D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10149  014E3E  377E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10150  014E40  0100               	movlb	0	; () banked
 10151  014E42  0780               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10152  014E44                     l8178:
 10153                           
 10154                           ; BSR set to: 0
 10155  014E44  0100               	movlb	0	; () banked
 10156  014E46  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10157  014E48  0100               	movlb	0	; () banked
 10158  014E4A  A4D8               	btfss	status,2,c
 10159  014E4C  D7F3               	goto	l8176
 10160  014E4E                     l1299:
 10161                           
 10162                           ; BSR set to: 0
 10163  014E4E  C07B  F070         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10164  014E52  C07C  F071         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10165  014E56  C07D  F072         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10166  014E5A  C07E  F073         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10167                           
 10168                           ; BSR set to: 0
 10169  014E5E  0012               	return		;funcret
 10170  014E60                     __end_of__tdiv_to_l_:
 10171                           	opt stack 0
 10172                           tblptru	equ	0xFF8
 10173                           tblptrh	equ	0xFF7
 10174                           tblptrl	equ	0xFF6
 10175                           tablat	equ	0xFF5
 10176                           prodh	equ	0xFF4
 10177                           prodl	equ	0xFF3
 10178                           intcon	equ	0xFF2
 10179                           postinc0	equ	0xFEE
 10180                           wreg	equ	0xFE8
 10181                           indf2	equ	0xFDF
 10182                           postinc2	equ	0xFDE
 10183                           fsr2h	equ	0xFDA
 10184                           fsr2l	equ	0xFD9
 10185                           status	equ	0xFD8
 10186                           
 10187 ;; *************** function __div_to_l_ *****************
 10188 ;; Defined at:
 10189 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
 10190 ;; Parameters:    Size  Location     Type
 10191 ;;  f1              4   16[BANK0 ] unsigned long 
 10192 ;;  f2              4   20[BANK0 ] unsigned long 
 10193 ;; Auto vars:     Size  Location     Type
 10194 ;;  quot            4   24[BANK0 ] unsigned long 
 10195 ;;  exp1            1   29[BANK0 ] unsigned char 
 10196 ;;  cntr            1   28[BANK0 ] unsigned char 
 10197 ;; Return value:  Size  Location     Type
 10198 ;;                  4   16[BANK0 ] unsigned long 
 10199 ;; Registers used:
 10200 ;;		wreg, status,2, status,0
 10201 ;; Tracked objects:
 10202 ;;		On entry : 0/0
 10203 ;;		On exit  : 0/0
 10204 ;;		Unchanged: 0/0
 10205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10206 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10207 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10209 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10210 ;;Total ram usage:       14 bytes
 10211 ;; Hardware stack levels used:    1
 10212 ;; Hardware stack levels required when called:    3
 10213 ;; This function calls:
 10214 ;;		Nothing
 10215 ;; This function is called by:
 10216 ;;		_sprintf
 10217 ;; This function uses a non-reentrant model
 10218 ;;
 10219                           
 10220                           	psect	text16
 10221  014FF0                     __ptext16:
 10222                           	opt stack 0
 10223  014FF0                     __div_to_l_:
 10224                           	opt stack 25
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;incstack = 0
 10228  014FF0  0100               	movlb	0	; () banked
 10229  014FF2  3572               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10230  014FF4  3573               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10231  014FF6  0100               	movlb	0	; () banked
 10232  014FF8  6F7D               	movwf	__div_to_l_@exp1& (0+255),b
 10233  014FFA  0100               	movlb	0	; () banked
 10234  014FFC  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 10235  014FFE  A4D8               	btfss	status,2,c
 10236  015000  D00A               	goto	l8186
 10237                           
 10238                           ; BSR set to: 0
 10239  015002  0E00               	movlw	0
 10240  015004  0100               	movlb	0	; () banked
 10241  015006  6F70               	movwf	?__div_to_l_& (0+255),b
 10242  015008  0E00               	movlw	0
 10243  01500A  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 10244  01500C  0E00               	movlw	0
 10245  01500E  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 10246  015010  0E00               	movlw	0
 10247  015012  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 10248                           
 10249                           ; BSR set to: 0
 10250  015014  0012               	return	
 10251  015016                     l8186:
 10252                           
 10253                           ; BSR set to: 0
 10254  015016  0100               	movlb	0	; () banked
 10255  015018  3576               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10256  01501A  3577               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10257  01501C  0100               	movlb	0	; () banked
 10258  01501E  6F7C               	movwf	__div_to_l_@cntr& (0+255),b
 10259  015020  0100               	movlb	0	; () banked
 10260  015022  517C               	movf	__div_to_l_@cntr& (0+255),w,b
 10261  015024  A4D8               	btfss	status,2,c
 10262  015026  D00A               	goto	l8192
 10263                           
 10264                           ; BSR set to: 0
 10265  015028  0E00               	movlw	0
 10266  01502A  0100               	movlb	0	; () banked
 10267  01502C  6F70               	movwf	?__div_to_l_& (0+255),b
 10268  01502E  0E00               	movlw	0
 10269  015030  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 10270  015032  0E00               	movlw	0
 10271  015034  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 10272  015036  0E00               	movlw	0
 10273  015038  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 10274                           
 10275                           ; BSR set to: 0
 10276  01503A  0012               	return	
 10277  01503C                     l8192:
 10278                           
 10279                           ; BSR set to: 0
 10280  01503C  0100               	movlb	0	; () banked
 10281  01503E  8F72               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10282                           
 10283                           ; BSR set to: 0
 10284  015040  0EFF               	movlw	255
 10285  015042  0100               	movlb	0	; () banked
 10286  015044  1770               	andwf	__div_to_l_@f1& (0+255),f,b
 10287  015046  0EFF               	movlw	255
 10288  015048  1771               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10289  01504A  0EFF               	movlw	255
 10290  01504C  1772               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10291  01504E  0E00               	movlw	0
 10292  015050  1773               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10293                           
 10294                           ; BSR set to: 0
 10295  015052  0100               	movlb	0	; () banked
 10296  015054  8F76               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10297  015056  0EFF               	movlw	255
 10298  015058  0100               	movlb	0	; () banked
 10299  01505A  1774               	andwf	__div_to_l_@f2& (0+255),f,b
 10300  01505C  0EFF               	movlw	255
 10301  01505E  1775               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10302  015060  0EFF               	movlw	255
 10303  015062  1776               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10304  015064  0E00               	movlw	0
 10305  015066  1777               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10306                           
 10307                           ; BSR set to: 0
 10308  015068  0E00               	movlw	0
 10309  01506A  0100               	movlb	0	; () banked
 10310  01506C  6F78               	movwf	__div_to_l_@quot& (0+255),b
 10311  01506E  0E00               	movlw	0
 10312  015070  6F79               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10313  015072  0E00               	movlw	0
 10314  015074  6F7A               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10315  015076  0E00               	movlw	0
 10316  015078  6F7B               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10317                           
 10318                           ; BSR set to: 0
 10319  01507A  0E7F               	movlw	127
 10320  01507C  0100               	movlb	0	; () banked
 10321  01507E  5F7D               	subwf	__div_to_l_@exp1& (0+255),f,b
 10322                           
 10323                           ; BSR set to: 0
 10324  015080  0100               	movlb	0	; () banked
 10325  015082  517C               	movf	__div_to_l_@cntr& (0+255),w,b
 10326  015084  0FA0               	addlw	160
 10327  015086  0100               	movlb	0	; () banked
 10328  015088  5F7D               	subwf	__div_to_l_@exp1& (0+255),f,b
 10329                           
 10330                           ; BSR set to: 0
 10331  01508A  0E20               	movlw	32
 10332  01508C  0100               	movlb	0	; () banked
 10333  01508E  6F7C               	movwf	__div_to_l_@cntr& (0+255),b
 10334  015090                     l8206:
 10335                           
 10336                           ; BSR set to: 0
 10337  015090  0100               	movlb	0	; () banked
 10338  015092  90D8               	bcf	status,0,c
 10339  015094  3778               	rlcf	__div_to_l_@quot& (0+255),f,b
 10340  015096  3779               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10341  015098  377A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10342  01509A  377B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10343                           
 10344                           ; BSR set to: 0
 10345  01509C  0100               	movlb	0	; () banked
 10346  01509E  5174               	movf	__div_to_l_@f2& (0+255),w,b
 10347  0150A0  0100               	movlb	0	; () banked
 10348  0150A2  5D70               	subwf	__div_to_l_@f1& (0+255),w,b
 10349  0150A4  0100               	movlb	0	; () banked
 10350  0150A6  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10351  0150A8  0100               	movlb	0	; () banked
 10352  0150AA  5971               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10353  0150AC  0100               	movlb	0	; () banked
 10354  0150AE  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10355  0150B0  0100               	movlb	0	; () banked
 10356  0150B2  5972               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10357  0150B4  0100               	movlb	0	; () banked
 10358  0150B6  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10359  0150B8  0100               	movlb	0	; () banked
 10360  0150BA  5973               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10361  0150BC  A0D8               	btfss	status,0,c
 10362  0150BE  D012               	goto	l8214
 10363                           
 10364                           ; BSR set to: 0
 10365  0150C0  0100               	movlb	0	; () banked
 10366  0150C2  5174               	movf	__div_to_l_@f2& (0+255),w,b
 10367  0150C4  0100               	movlb	0	; () banked
 10368  0150C6  5F70               	subwf	__div_to_l_@f1& (0+255),f,b
 10369  0150C8  0100               	movlb	0	; () banked
 10370  0150CA  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10371  0150CC  0100               	movlb	0	; () banked
 10372  0150CE  5B71               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10373  0150D0  0100               	movlb	0	; () banked
 10374  0150D2  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10375  0150D4  0100               	movlb	0	; () banked
 10376  0150D6  5B72               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10377  0150D8  0100               	movlb	0	; () banked
 10378  0150DA  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10379  0150DC  0100               	movlb	0	; () banked
 10380  0150DE  5B73               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10381                           
 10382                           ; BSR set to: 0
 10383  0150E0  0100               	movlb	0	; () banked
 10384  0150E2  8178               	bsf	__div_to_l_@quot& (0+255),0,b
 10385  0150E4                     l8214:
 10386                           
 10387                           ; BSR set to: 0
 10388  0150E4  0100               	movlb	0	; () banked
 10389  0150E6  90D8               	bcf	status,0,c
 10390  0150E8  3770               	rlcf	__div_to_l_@f1& (0+255),f,b
 10391  0150EA  3771               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10392  0150EC  3772               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10393  0150EE  3773               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10394                           
 10395                           ; BSR set to: 0
 10396  0150F0  0100               	movlb	0	; () banked
 10397  0150F2  2F7C               	decfsz	__div_to_l_@cntr& (0+255),f,b
 10398  0150F4  D7CD               	goto	l8206
 10399                           
 10400                           ; BSR set to: 0
 10401                           
 10402                           ; BSR set to: 0
 10403  0150F6  0100               	movlb	0	; () banked
 10404  0150F8  AF7D               	btfss	__div_to_l_@exp1& (0+255),7,b
 10405  0150FA  D01A               	goto	l8230
 10406                           
 10407                           ; BSR set to: 0
 10408  0150FC  0100               	movlb	0	; () banked
 10409  0150FE  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 10410  015100  0A80               	xorlw	128
 10411  015102  0F9F               	addlw	159
 10412  015104  B0D8               	btfsc	status,0,c
 10413  015106  D00A               	goto	l8226
 10414                           
 10415                           ; BSR set to: 0
 10416  015108  0E00               	movlw	0
 10417  01510A  0100               	movlb	0	; () banked
 10418  01510C  6F70               	movwf	?__div_to_l_& (0+255),b
 10419  01510E  0E00               	movlw	0
 10420  015110  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 10421  015112  0E00               	movlw	0
 10422  015114  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 10423  015116  0E00               	movlw	0
 10424  015118  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 10425                           
 10426                           ; BSR set to: 0
 10427  01511A  0012               	return	
 10428  01511C                     l8226:
 10429                           
 10430                           ; BSR set to: 0
 10431  01511C  0100               	movlb	0	; () banked
 10432  01511E  90D8               	bcf	status,0,c
 10433  015120  337B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 10434  015122  337A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 10435  015124  3379               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 10436  015126  3378               	rrcf	__div_to_l_@quot& (0+255),f,b
 10437                           
 10438                           ; BSR set to: 0
 10439  015128  0100               	movlb	0	; () banked
 10440  01512A  3F7D               	incfsz	__div_to_l_@exp1& (0+255),f,b
 10441  01512C  D7F7               	goto	l8226
 10442                           
 10443                           ; BSR set to: 0
 10444  01512E  D01B               	goto	l1195
 10445  015130                     l8230:
 10446                           
 10447                           ; BSR set to: 0
 10448  015130  0E1F               	movlw	31
 10449  015132  0100               	movlb	0	; () banked
 10450  015134  657D               	cpfsgt	__div_to_l_@exp1& (0+255),b
 10451  015136  D012               	goto	l8238
 10452                           
 10453                           ; BSR set to: 0
 10454  015138  0E00               	movlw	0
 10455  01513A  0100               	movlb	0	; () banked
 10456  01513C  6F70               	movwf	?__div_to_l_& (0+255),b
 10457  01513E  0E00               	movlw	0
 10458  015140  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 10459  015142  0E00               	movlw	0
 10460  015144  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 10461  015146  0E00               	movlw	0
 10462  015148  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 10463                           
 10464                           ; BSR set to: 0
 10465  01514A  0012               	return	
 10466  01514C                     l8236:
 10467                           
 10468                           ; BSR set to: 0
 10469  01514C  0100               	movlb	0	; () banked
 10470  01514E  90D8               	bcf	status,0,c
 10471  015150  3778               	rlcf	__div_to_l_@quot& (0+255),f,b
 10472  015152  3779               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10473  015154  377A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10474  015156  377B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10475  015158  0100               	movlb	0	; () banked
 10476  01515A  077D               	decf	__div_to_l_@exp1& (0+255),f,b
 10477  01515C                     l8238:
 10478                           
 10479                           ; BSR set to: 0
 10480  01515C  0100               	movlb	0	; () banked
 10481  01515E  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 10482  015160  0100               	movlb	0	; () banked
 10483  015162  A4D8               	btfss	status,2,c
 10484  015164  D7F3               	goto	l8236
 10485  015166                     l1195:
 10486                           
 10487                           ; BSR set to: 0
 10488  015166  C078  F070         	movff	__div_to_l_@quot,?__div_to_l_
 10489  01516A  C079  F071         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10490  01516E  C07A  F072         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10491  015172  C07B  F073         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10492                           
 10493                           ; BSR set to: 0
 10494  015176  0012               	return		;funcret
 10495  015178                     __end_of__div_to_l_:
 10496                           	opt stack 0
 10497                           tblptru	equ	0xFF8
 10498                           tblptrh	equ	0xFF7
 10499                           tblptrl	equ	0xFF6
 10500                           tablat	equ	0xFF5
 10501                           prodh	equ	0xFF4
 10502                           prodl	equ	0xFF3
 10503                           intcon	equ	0xFF2
 10504                           postinc0	equ	0xFEE
 10505                           wreg	equ	0xFE8
 10506                           indf2	equ	0xFDF
 10507                           postinc2	equ	0xFDE
 10508                           fsr2h	equ	0xFDA
 10509                           fsr2l	equ	0xFD9
 10510                           status	equ	0xFD8
 10511                           
 10512 ;; *************** function ___xxtofl *****************
 10513 ;; Defined at:
 10514 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 10515 ;; Parameters:    Size  Location     Type
 10516 ;;  sign            1    wreg     unsigned char 
 10517 ;;  val             4   16[BANK0 ] long 
 10518 ;; Auto vars:     Size  Location     Type
 10519 ;;  sign            1   24[BANK0 ] unsigned char 
 10520 ;;  arg             4   26[BANK0 ] unsigned long 
 10521 ;;  exp             1   25[BANK0 ] unsigned char 
 10522 ;; Return value:  Size  Location     Type
 10523 ;;                  4   16[BANK0 ] unsigned char 
 10524 ;; Registers used:
 10525 ;;		wreg, status,2, status,0
 10526 ;; Tracked objects:
 10527 ;;		On entry : 0/0
 10528 ;;		On exit  : 0/0
 10529 ;;		Unchanged: 0/0
 10530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10531 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10532 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10533 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10534 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10535 ;;Total ram usage:       14 bytes
 10536 ;; Hardware stack levels used:    1
 10537 ;; Hardware stack levels required when called:    3
 10538 ;; This function calls:
 10539 ;;		Nothing
 10540 ;; This function is called by:
 10541 ;;		_main
 10542 ;;		_LCD_Handler
 10543 ;;		_sprintf
 10544 ;; This function uses a non-reentrant model
 10545 ;;
 10546                           
 10547                           	psect	text17
 10548  0145C0                     __ptext17:
 10549                           	opt stack 0
 10550  0145C0                     ___xxtofl:
 10551                           	opt stack 27
 10552                           
 10553                           ; BSR set to: 0
 10554                           ;incstack = 0
 10555                           ;___xxtofl@sign stored from wreg
 10556  0145C0  0100               	movlb	0	; () banked
 10557  0145C2  6F78               	movwf	___xxtofl@sign& (0+255),b
 10558  0145C4  0100               	movlb	0	; () banked
 10559  0145C6  5178               	movf	___xxtofl@sign& (0+255),w,b
 10560  0145C8  0100               	movlb	0	; () banked
 10561  0145CA  B4D8               	btfsc	status,2,c
 10562  0145CC  D01E               	goto	l1590
 10563                           
 10564                           ; BSR set to: 0
 10565  0145CE  0100               	movlb	0	; () banked
 10566  0145D0  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10567  0145D2  D01B               	goto	l1590
 10568                           
 10569                           ; BSR set to: 0
 10570  0145D4  C070  F074         	movff	___xxtofl@val,??___xxtofl
 10571  0145D8  C071  F075         	movff	___xxtofl@val+1,??___xxtofl+1
 10572  0145DC  C072  F076         	movff	___xxtofl@val+2,??___xxtofl+2
 10573  0145E0  C073  F077         	movff	___xxtofl@val+3,??___xxtofl+3
 10574  0145E4  0100               	movlb	0	; () banked
 10575  0145E6  1F74               	comf	??___xxtofl& (0+255),f,b
 10576  0145E8  1F75               	comf	(??___xxtofl+1)& (0+255),f,b
 10577  0145EA  1F76               	comf	(??___xxtofl+2)& (0+255),f,b
 10578  0145EC  1F77               	comf	(??___xxtofl+3)& (0+255),f,b
 10579  0145EE  2B74               	incf	??___xxtofl& (0+255),f,b
 10580  0145F0  0E00               	movlw	0
 10581  0145F2  2375               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10582  0145F4  2376               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10583  0145F6  2377               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10584  0145F8  C074  F07A         	movff	??___xxtofl,___xxtofl@arg
 10585  0145FC  C075  F07B         	movff	??___xxtofl+1,___xxtofl@arg+1
 10586  014600  C076  F07C         	movff	??___xxtofl+2,___xxtofl@arg+2
 10587  014604  C077  F07D         	movff	??___xxtofl+3,___xxtofl@arg+3
 10588  014608  D008               	goto	l8364
 10589  01460A                     l1590:
 10590                           
 10591                           ; BSR set to: 0
 10592  01460A  C070  F07A         	movff	___xxtofl@val,___xxtofl@arg
 10593  01460E  C071  F07B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10594  014612  C072  F07C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10595  014616  C073  F07D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10596  01461A                     l8364:
 10597                           
 10598                           ; BSR set to: 0
 10599  01461A  0100               	movlb	0	; () banked
 10600  01461C  5170               	movf	___xxtofl@val& (0+255),w,b
 10601  01461E  0100               	movlb	0	; () banked
 10602  014620  1171               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10603  014622  0100               	movlb	0	; () banked
 10604  014624  1172               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10605  014626  0100               	movlb	0	; () banked
 10606  014628  1173               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 10607  01462A  A4D8               	btfss	status,2,c
 10608  01462C  D00A               	goto	l8370
 10609                           
 10610                           ; BSR set to: 0
 10611  01462E  0E00               	movlw	0
 10612  014630  0100               	movlb	0	; () banked
 10613  014632  6F70               	movwf	?___xxtofl& (0+255),b
 10614  014634  0E00               	movlw	0
 10615  014636  6F71               	movwf	(?___xxtofl+1)& (0+255),b
 10616  014638  0E00               	movlw	0
 10617  01463A  6F72               	movwf	(?___xxtofl+2)& (0+255),b
 10618  01463C  0E00               	movlw	0
 10619  01463E  6F73               	movwf	(?___xxtofl+3)& (0+255),b
 10620                           
 10621                           ; BSR set to: 0
 10622  014640  0012               	return	
 10623  014642                     l8370:
 10624                           
 10625                           ; BSR set to: 0
 10626  014642  0E96               	movlw	150
 10627  014644  0100               	movlb	0	; () banked
 10628  014646  6F79               	movwf	___xxtofl@exp& (0+255),b
 10629  014648  D008               	goto	l8374
 10630  01464A                     l8372:
 10631                           
 10632                           ; BSR set to: 0
 10633  01464A  0100               	movlb	0	; () banked
 10634  01464C  2B79               	incf	___xxtofl@exp& (0+255),f,b
 10635  01464E  0100               	movlb	0	; () banked
 10636  014650  90D8               	bcf	status,0,c
 10637  014652  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10638  014654  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10639  014656  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10640  014658  337A               	rrcf	___xxtofl@arg& (0+255),f,b
 10641  01465A                     l8374:
 10642                           
 10643                           ; BSR set to: 0
 10644  01465A  0E00               	movlw	0
 10645  01465C  0100               	movlb	0	; () banked
 10646  01465E  157A               	andwf	___xxtofl@arg& (0+255),w,b
 10647  014660  0100               	movlb	0	; () banked
 10648  014662  6F74               	movwf	??___xxtofl& (0+255),b
 10649  014664  0E00               	movlw	0
 10650  014666  0100               	movlb	0	; () banked
 10651  014668  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10652  01466A  0100               	movlb	0	; () banked
 10653  01466C  6F75               	movwf	(??___xxtofl+1)& (0+255),b
 10654  01466E  0E00               	movlw	0
 10655  014670  0100               	movlb	0	; () banked
 10656  014672  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10657  014674  0100               	movlb	0	; () banked
 10658  014676  6F76               	movwf	(??___xxtofl+2)& (0+255),b
 10659  014678  0EFE               	movlw	254
 10660  01467A  0100               	movlb	0	; () banked
 10661  01467C  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10662  01467E  0100               	movlb	0	; () banked
 10663  014680  6F77               	movwf	(??___xxtofl+3)& (0+255),b
 10664  014682  0100               	movlb	0	; () banked
 10665  014684  5174               	movf	??___xxtofl& (0+255),w,b
 10666  014686  0100               	movlb	0	; () banked
 10667  014688  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10668  01468A  0100               	movlb	0	; () banked
 10669  01468C  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10670  01468E  0100               	movlb	0	; () banked
 10671  014690  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10672  014692  B4D8               	btfsc	status,2,c
 10673  014694  D010               	goto	l1597
 10674  014696  D7D9               	goto	l8372
 10675  014698                     l8376:
 10676                           
 10677                           ; BSR set to: 0
 10678  014698  0100               	movlb	0	; () banked
 10679  01469A  2B79               	incf	___xxtofl@exp& (0+255),f,b
 10680                           
 10681                           ; BSR set to: 0
 10682  01469C  0E01               	movlw	1
 10683  01469E  0100               	movlb	0	; () banked
 10684  0146A0  277A               	addwf	___xxtofl@arg& (0+255),f,b
 10685  0146A2  0E00               	movlw	0
 10686  0146A4  237B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10687  0146A6  237C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10688  0146A8  237D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10689                           
 10690                           ; BSR set to: 0
 10691  0146AA  0100               	movlb	0	; () banked
 10692  0146AC  90D8               	bcf	status,0,c
 10693  0146AE  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10694  0146B0  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10695  0146B2  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10696  0146B4  337A               	rrcf	___xxtofl@arg& (0+255),f,b
 10697  0146B6                     l1597:
 10698                           
 10699                           ; BSR set to: 0
 10700  0146B6  0E00               	movlw	0
 10701  0146B8  0100               	movlb	0	; () banked
 10702  0146BA  157A               	andwf	___xxtofl@arg& (0+255),w,b
 10703  0146BC  0100               	movlb	0	; () banked
 10704  0146BE  6F74               	movwf	??___xxtofl& (0+255),b
 10705  0146C0  0E00               	movlw	0
 10706  0146C2  0100               	movlb	0	; () banked
 10707  0146C4  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10708  0146C6  0100               	movlb	0	; () banked
 10709  0146C8  6F75               	movwf	(??___xxtofl+1)& (0+255),b
 10710  0146CA  0E00               	movlw	0
 10711  0146CC  0100               	movlb	0	; () banked
 10712  0146CE  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10713  0146D0  0100               	movlb	0	; () banked
 10714  0146D2  6F76               	movwf	(??___xxtofl+2)& (0+255),b
 10715  0146D4  0EFF               	movlw	255
 10716  0146D6  0100               	movlb	0	; () banked
 10717  0146D8  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10718  0146DA  0100               	movlb	0	; () banked
 10719  0146DC  6F77               	movwf	(??___xxtofl+3)& (0+255),b
 10720  0146DE  0100               	movlb	0	; () banked
 10721  0146E0  5174               	movf	??___xxtofl& (0+255),w,b
 10722  0146E2  0100               	movlb	0	; () banked
 10723  0146E4  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10724  0146E6  0100               	movlb	0	; () banked
 10725  0146E8  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10726  0146EA  0100               	movlb	0	; () banked
 10727  0146EC  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10728  0146EE  B4D8               	btfsc	status,2,c
 10729  0146F0  D009               	goto	l8384
 10730  0146F2  D7D2               	goto	l8376
 10731  0146F4                     l8382:
 10732                           
 10733                           ; BSR set to: 0
 10734  0146F4  0100               	movlb	0	; () banked
 10735  0146F6  0779               	decf	___xxtofl@exp& (0+255),f,b
 10736  0146F8  0100               	movlb	0	; () banked
 10737  0146FA  90D8               	bcf	status,0,c
 10738  0146FC  377A               	rlcf	___xxtofl@arg& (0+255),f,b
 10739  0146FE  377B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10740  014700  377C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10741  014702  377D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10742  014704                     l8384:
 10743                           
 10744                           ; BSR set to: 0
 10745  014704  0100               	movlb	0	; () banked
 10746  014706  BF7C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10747  014708  D004               	goto	l1604
 10748                           
 10749                           ; BSR set to: 0
 10750  01470A  0E02               	movlw	2
 10751  01470C  0100               	movlb	0	; () banked
 10752  01470E  6179               	cpfslt	___xxtofl@exp& (0+255),b
 10753  014710  D7F1               	goto	l8382
 10754  014712                     l1604:
 10755                           
 10756                           ; BSR set to: 0
 10757  014712  0100               	movlb	0	; () banked
 10758  014714  B179               	btfsc	___xxtofl@exp& (0+255),0,b
 10759  014716  D009               	goto	l1605
 10760                           
 10761                           ; BSR set to: 0
 10762  014718  0EFF               	movlw	255
 10763  01471A  0100               	movlb	0	; () banked
 10764  01471C  177A               	andwf	___xxtofl@arg& (0+255),f,b
 10765  01471E  0EFF               	movlw	255
 10766  014720  177B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 10767  014722  0E7F               	movlw	127
 10768  014724  177C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 10769  014726  0EFF               	movlw	255
 10770  014728  177D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 10771  01472A                     l1605:
 10772                           
 10773                           ; BSR set to: 0
 10774  01472A  0100               	movlb	0	; () banked
 10775  01472C  90D8               	bcf	status,0,c
 10776  01472E  3379               	rrcf	___xxtofl@exp& (0+255),f,b
 10777  014730  C079  F074         	movff	___xxtofl@exp,??___xxtofl
 10778  014734  0100               	movlb	0	; () banked
 10779  014736  6B75               	clrf	(??___xxtofl+1)& (0+255),b
 10780  014738  6B76               	clrf	(??___xxtofl+2)& (0+255),b
 10781  01473A  6B77               	clrf	(??___xxtofl+3)& (0+255),b
 10782  01473C  C074  F077         	movff	??___xxtofl,??___xxtofl+3
 10783  014740  0100               	movlb	0	; () banked
 10784  014742  6B76               	clrf	(??___xxtofl+2)& (0+255),b
 10785  014744  6B75               	clrf	(??___xxtofl+1)& (0+255),b
 10786  014746  6B74               	clrf	??___xxtofl& (0+255),b
 10787  014748  0100               	movlb	0	; () banked
 10788  01474A  5174               	movf	??___xxtofl& (0+255),w,b
 10789  01474C  0100               	movlb	0	; () banked
 10790  01474E  137A               	iorwf	___xxtofl@arg& (0+255),f,b
 10791  014750  0100               	movlb	0	; () banked
 10792  014752  5175               	movf	(??___xxtofl+1)& (0+255),w,b
 10793  014754  0100               	movlb	0	; () banked
 10794  014756  137B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10795  014758  0100               	movlb	0	; () banked
 10796  01475A  5176               	movf	(??___xxtofl+2)& (0+255),w,b
 10797  01475C  0100               	movlb	0	; () banked
 10798  01475E  137C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10799  014760  0100               	movlb	0	; () banked
 10800  014762  5177               	movf	(??___xxtofl+3)& (0+255),w,b
 10801  014764  0100               	movlb	0	; () banked
 10802  014766  137D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10803                           
 10804                           ; BSR set to: 0
 10805  014768  0100               	movlb	0	; () banked
 10806  01476A  5178               	movf	___xxtofl@sign& (0+255),w,b
 10807  01476C  0100               	movlb	0	; () banked
 10808  01476E  B4D8               	btfsc	status,2,c
 10809  014770  D005               	goto	l8396
 10810                           
 10811                           ; BSR set to: 0
 10812  014772  0100               	movlb	0	; () banked
 10813  014774  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10814  014776  D002               	goto	l8396
 10815                           
 10816                           ; BSR set to: 0
 10817  014778  0100               	movlb	0	; () banked
 10818  01477A  8F7D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10819  01477C                     l8396:
 10820                           
 10821                           ; BSR set to: 0
 10822  01477C  C07A  F070         	movff	___xxtofl@arg,?___xxtofl
 10823  014780  C07B  F071         	movff	___xxtofl@arg+1,?___xxtofl+1
 10824  014784  C07C  F072         	movff	___xxtofl@arg+2,?___xxtofl+2
 10825  014788  C07D  F073         	movff	___xxtofl@arg+3,?___xxtofl+3
 10826  01478C  0012               	return	
 10827  01478E                     __end_of___xxtofl:
 10828                           	opt stack 0
 10829                           tblptru	equ	0xFF8
 10830                           tblptrh	equ	0xFF7
 10831                           tblptrl	equ	0xFF6
 10832                           tablat	equ	0xFF5
 10833                           prodh	equ	0xFF4
 10834                           prodl	equ	0xFF3
 10835                           intcon	equ	0xFF2
 10836                           postinc0	equ	0xFEE
 10837                           wreg	equ	0xFE8
 10838                           indf2	equ	0xFDF
 10839                           postinc2	equ	0xFDE
 10840                           fsr2h	equ	0xFDA
 10841                           fsr2l	equ	0xFD9
 10842                           status	equ	0xFD8
 10843                           
 10844 ;; *************** function ___llmod *****************
 10845 ;; Defined at:
 10846 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;  dividend        4   16[BANK0 ] unsigned long 
 10849 ;;  divisor         4   20[BANK0 ] unsigned long 
 10850 ;; Auto vars:     Size  Location     Type
 10851 ;;  counter         1   24[BANK0 ] unsigned char 
 10852 ;; Return value:  Size  Location     Type
 10853 ;;                  4   16[BANK0 ] unsigned long 
 10854 ;; Registers used:
 10855 ;;		wreg, status,2, status,0
 10856 ;; Tracked objects:
 10857 ;;		On entry : 0/0
 10858 ;;		On exit  : 0/0
 10859 ;;		Unchanged: 0/0
 10860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10861 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10862 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10864 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10865 ;;Total ram usage:        9 bytes
 10866 ;; Hardware stack levels used:    1
 10867 ;; Hardware stack levels required when called:    3
 10868 ;; This function calls:
 10869 ;;		Nothing
 10870 ;; This function is called by:
 10871 ;;		_sprintf
 10872 ;; This function uses a non-reentrant model
 10873 ;;
 10874                           
 10875                           	psect	text18
 10876  015B46                     __ptext18:
 10877                           	opt stack 0
 10878  015B46                     ___llmod:
 10879                           	opt stack 25
 10880                           
 10881                           ; BSR set to: 0
 10882                           ;incstack = 0
 10883  015B46  0100               	movlb	0	; () banked
 10884  015B48  5174               	movf	___llmod@divisor& (0+255),w,b
 10885  015B4A  0100               	movlb	0	; () banked
 10886  015B4C  1175               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10887  015B4E  0100               	movlb	0	; () banked
 10888  015B50  1176               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10889  015B52  0100               	movlb	0	; () banked
 10890  015B54  1177               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10891  015B56  B4D8               	btfsc	status,2,c
 10892  015B58  D03A               	goto	l1398
 10893                           
 10894                           ; BSR set to: 0
 10895  015B5A  0E01               	movlw	1
 10896  015B5C  0100               	movlb	0	; () banked
 10897  015B5E  6F78               	movwf	___llmod@counter& (0+255),b
 10898  015B60  D008               	goto	l8348
 10899  015B62                     l8346:
 10900                           
 10901                           ; BSR set to: 0
 10902  015B62  0100               	movlb	0	; () banked
 10903  015B64  90D8               	bcf	status,0,c
 10904  015B66  3774               	rlcf	___llmod@divisor& (0+255),f,b
 10905  015B68  3775               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10906  015B6A  3776               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10907  015B6C  3777               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10908  015B6E  0100               	movlb	0	; () banked
 10909  015B70  2B78               	incf	___llmod@counter& (0+255),f,b
 10910  015B72                     l8348:
 10911                           
 10912                           ; BSR set to: 0
 10913  015B72  0100               	movlb	0	; () banked
 10914  015B74  AF77               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10915  015B76  D7F5               	goto	l8346
 10916  015B78                     l8350:
 10917                           
 10918                           ; BSR set to: 0
 10919  015B78  0100               	movlb	0	; () banked
 10920  015B7A  5174               	movf	___llmod@divisor& (0+255),w,b
 10921  015B7C  0100               	movlb	0	; () banked
 10922  015B7E  5D70               	subwf	___llmod@dividend& (0+255),w,b
 10923  015B80  0100               	movlb	0	; () banked
 10924  015B82  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
 10925  015B84  0100               	movlb	0	; () banked
 10926  015B86  5971               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10927  015B88  0100               	movlb	0	; () banked
 10928  015B8A  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
 10929  015B8C  0100               	movlb	0	; () banked
 10930  015B8E  5972               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10931  015B90  0100               	movlb	0	; () banked
 10932  015B92  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
 10933  015B94  0100               	movlb	0	; () banked
 10934  015B96  5973               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10935  015B98  A0D8               	btfss	status,0,c
 10936  015B9A  D010               	goto	l8354
 10937                           
 10938                           ; BSR set to: 0
 10939  015B9C  0100               	movlb	0	; () banked
 10940  015B9E  5174               	movf	___llmod@divisor& (0+255),w,b
 10941  015BA0  0100               	movlb	0	; () banked
 10942  015BA2  5F70               	subwf	___llmod@dividend& (0+255),f,b
 10943  015BA4  0100               	movlb	0	; () banked
 10944  015BA6  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
 10945  015BA8  0100               	movlb	0	; () banked
 10946  015BAA  5B71               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10947  015BAC  0100               	movlb	0	; () banked
 10948  015BAE  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
 10949  015BB0  0100               	movlb	0	; () banked
 10950  015BB2  5B72               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10951  015BB4  0100               	movlb	0	; () banked
 10952  015BB6  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
 10953  015BB8  0100               	movlb	0	; () banked
 10954  015BBA  5B73               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10955  015BBC                     l8354:
 10956                           
 10957                           ; BSR set to: 0
 10958  015BBC  0100               	movlb	0	; () banked
 10959  015BBE  90D8               	bcf	status,0,c
 10960  015BC0  3377               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10961  015BC2  3376               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10962  015BC4  3375               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10963  015BC6  3374               	rrcf	___llmod@divisor& (0+255),f,b
 10964                           
 10965                           ; BSR set to: 0
 10966  015BC8  0100               	movlb	0	; () banked
 10967  015BCA  2F78               	decfsz	___llmod@counter& (0+255),f,b
 10968  015BCC  D7D5               	goto	l8350
 10969  015BCE                     l1398:
 10970                           
 10971                           ; BSR set to: 0
 10972  015BCE  C070  F070         	movff	___llmod@dividend,?___llmod
 10973  015BD2  C071  F071         	movff	___llmod@dividend+1,?___llmod+1
 10974  015BD6  C072  F072         	movff	___llmod@dividend+2,?___llmod+2
 10975  015BDA  C073  F073         	movff	___llmod@dividend+3,?___llmod+3
 10976                           
 10977                           ; BSR set to: 0
 10978  015BDE  0012               	return		;funcret
 10979  015BE0                     __end_of___llmod:
 10980                           	opt stack 0
 10981                           tblptru	equ	0xFF8
 10982                           tblptrh	equ	0xFF7
 10983                           tblptrl	equ	0xFF6
 10984                           tablat	equ	0xFF5
 10985                           prodh	equ	0xFF4
 10986                           prodl	equ	0xFF3
 10987                           intcon	equ	0xFF2
 10988                           postinc0	equ	0xFEE
 10989                           wreg	equ	0xFE8
 10990                           indf2	equ	0xFDF
 10991                           postinc2	equ	0xFDE
 10992                           fsr2h	equ	0xFDA
 10993                           fsr2l	equ	0xFD9
 10994                           status	equ	0xFD8
 10995                           
 10996 ;; *************** function ___lldiv *****************
 10997 ;; Defined at:
 10998 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 10999 ;; Parameters:    Size  Location     Type
 11000 ;;  dividend        4   16[BANK0 ] unsigned long 
 11001 ;;  divisor         4   20[BANK0 ] unsigned long 
 11002 ;; Auto vars:     Size  Location     Type
 11003 ;;  quotient        4   24[BANK0 ] unsigned long 
 11004 ;;  counter         1   28[BANK0 ] unsigned char 
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  4   16[BANK0 ] unsigned long 
 11007 ;; Registers used:
 11008 ;;		wreg, status,2, status,0
 11009 ;; Tracked objects:
 11010 ;;		On entry : 0/0
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11014 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11015 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;Total ram usage:       13 bytes
 11019 ;; Hardware stack levels used:    1
 11020 ;; Hardware stack levels required when called:    3
 11021 ;; This function calls:
 11022 ;;		Nothing
 11023 ;; This function is called by:
 11024 ;;		_sprintf
 11025 ;; This function uses a non-reentrant model
 11026 ;;
 11027                           
 11028                           	psect	text19
 11029  0157E0                     __ptext19:
 11030                           	opt stack 0
 11031  0157E0                     ___lldiv:
 11032                           	opt stack 25
 11033                           
 11034                           ; BSR set to: 0
 11035                           ;incstack = 0
 11036  0157E0  0E00               	movlw	0
 11037  0157E2  0100               	movlb	0	; () banked
 11038  0157E4  6F78               	movwf	___lldiv@quotient& (0+255),b
 11039  0157E6  0E00               	movlw	0
 11040  0157E8  6F79               	movwf	(___lldiv@quotient+1)& (0+255),b
 11041  0157EA  0E00               	movlw	0
 11042  0157EC  6F7A               	movwf	(___lldiv@quotient+2)& (0+255),b
 11043  0157EE  0E00               	movlw	0
 11044  0157F0  6F7B               	movwf	(___lldiv@quotient+3)& (0+255),b
 11045                           
 11046                           ; BSR set to: 0
 11047  0157F2  0100               	movlb	0	; () banked
 11048  0157F4  5174               	movf	___lldiv@divisor& (0+255),w,b
 11049  0157F6  0100               	movlb	0	; () banked
 11050  0157F8  1175               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11051  0157FA  0100               	movlb	0	; () banked
 11052  0157FC  1176               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11053  0157FE  0100               	movlb	0	; () banked
 11054  015800  1177               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11055  015802  B4D8               	btfsc	status,2,c
 11056  015804  D042               	goto	l1388
 11057                           
 11058                           ; BSR set to: 0
 11059  015806  0E01               	movlw	1
 11060  015808  0100               	movlb	0	; () banked
 11061  01580A  6F7C               	movwf	___lldiv@counter& (0+255),b
 11062  01580C  D008               	goto	l8328
 11063  01580E                     l8326:
 11064                           
 11065                           ; BSR set to: 0
 11066  01580E  0100               	movlb	0	; () banked
 11067  015810  90D8               	bcf	status,0,c
 11068  015812  3774               	rlcf	___lldiv@divisor& (0+255),f,b
 11069  015814  3775               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11070  015816  3776               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11071  015818  3777               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11072  01581A  0100               	movlb	0	; () banked
 11073  01581C  2B7C               	incf	___lldiv@counter& (0+255),f,b
 11074  01581E                     l8328:
 11075                           
 11076                           ; BSR set to: 0
 11077  01581E  0100               	movlb	0	; () banked
 11078  015820  AF77               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11079  015822  D7F5               	goto	l8326
 11080  015824                     l8330:
 11081                           
 11082                           ; BSR set to: 0
 11083  015824  0100               	movlb	0	; () banked
 11084  015826  90D8               	bcf	status,0,c
 11085  015828  3778               	rlcf	___lldiv@quotient& (0+255),f,b
 11086  01582A  3779               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11087  01582C  377A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11088  01582E  377B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11089                           
 11090                           ; BSR set to: 0
 11091  015830  0100               	movlb	0	; () banked
 11092  015832  5174               	movf	___lldiv@divisor& (0+255),w,b
 11093  015834  0100               	movlb	0	; () banked
 11094  015836  5D70               	subwf	___lldiv@dividend& (0+255),w,b
 11095  015838  0100               	movlb	0	; () banked
 11096  01583A  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11097  01583C  0100               	movlb	0	; () banked
 11098  01583E  5971               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11099  015840  0100               	movlb	0	; () banked
 11100  015842  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11101  015844  0100               	movlb	0	; () banked
 11102  015846  5972               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11103  015848  0100               	movlb	0	; () banked
 11104  01584A  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11105  01584C  0100               	movlb	0	; () banked
 11106  01584E  5973               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11107  015850  A0D8               	btfss	status,0,c
 11108  015852  D012               	goto	l8338
 11109                           
 11110                           ; BSR set to: 0
 11111  015854  0100               	movlb	0	; () banked
 11112  015856  5174               	movf	___lldiv@divisor& (0+255),w,b
 11113  015858  0100               	movlb	0	; () banked
 11114  01585A  5F70               	subwf	___lldiv@dividend& (0+255),f,b
 11115  01585C  0100               	movlb	0	; () banked
 11116  01585E  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11117  015860  0100               	movlb	0	; () banked
 11118  015862  5B71               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11119  015864  0100               	movlb	0	; () banked
 11120  015866  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11121  015868  0100               	movlb	0	; () banked
 11122  01586A  5B72               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11123  01586C  0100               	movlb	0	; () banked
 11124  01586E  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11125  015870  0100               	movlb	0	; () banked
 11126  015872  5B73               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11127                           
 11128                           ; BSR set to: 0
 11129  015874  0100               	movlb	0	; () banked
 11130  015876  8178               	bsf	___lldiv@quotient& (0+255),0,b
 11131  015878                     l8338:
 11132                           
 11133                           ; BSR set to: 0
 11134  015878  0100               	movlb	0	; () banked
 11135  01587A  90D8               	bcf	status,0,c
 11136  01587C  3377               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11137  01587E  3376               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11138  015880  3375               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11139  015882  3374               	rrcf	___lldiv@divisor& (0+255),f,b
 11140                           
 11141                           ; BSR set to: 0
 11142  015884  0100               	movlb	0	; () banked
 11143  015886  2F7C               	decfsz	___lldiv@counter& (0+255),f,b
 11144  015888  D7CD               	goto	l8330
 11145  01588A                     l1388:
 11146                           
 11147                           ; BSR set to: 0
 11148  01588A  C078  F070         	movff	___lldiv@quotient,?___lldiv
 11149  01588E  C079  F071         	movff	___lldiv@quotient+1,?___lldiv+1
 11150  015892  C07A  F072         	movff	___lldiv@quotient+2,?___lldiv+2
 11151  015896  C07B  F073         	movff	___lldiv@quotient+3,?___lldiv+3
 11152                           
 11153                           ; BSR set to: 0
 11154  01589A  0012               	return		;funcret
 11155  01589C                     __end_of___lldiv:
 11156                           	opt stack 0
 11157                           tblptru	equ	0xFF8
 11158                           tblptrh	equ	0xFF7
 11159                           tblptrl	equ	0xFF6
 11160                           tablat	equ	0xFF5
 11161                           prodh	equ	0xFF4
 11162                           prodl	equ	0xFF3
 11163                           intcon	equ	0xFF2
 11164                           postinc0	equ	0xFEE
 11165                           wreg	equ	0xFE8
 11166                           indf2	equ	0xFDF
 11167                           postinc2	equ	0xFDE
 11168                           fsr2h	equ	0xFDA
 11169                           fsr2l	equ	0xFD9
 11170                           status	equ	0xFD8
 11171                           
 11172 ;; *************** function ___fltol *****************
 11173 ;; Defined at:
 11174 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 11175 ;; Parameters:    Size  Location     Type
 11176 ;;  f1              4   88[BANK0 ] unsigned long 
 11177 ;; Auto vars:     Size  Location     Type
 11178 ;;  exp1            1   97[BANK0 ] unsigned char 
 11179 ;;  sign1           1   96[BANK0 ] unsigned char 
 11180 ;; Return value:  Size  Location     Type
 11181 ;;                  4   88[BANK0 ] long 
 11182 ;; Registers used:
 11183 ;;		wreg, status,2, status,0
 11184 ;; Tracked objects:
 11185 ;;		On entry : 0/0
 11186 ;;		On exit  : 0/0
 11187 ;;		Unchanged: 0/0
 11188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11189 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11190 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11191 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11192 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11193 ;;Total ram usage:       10 bytes
 11194 ;; Hardware stack levels used:    1
 11195 ;; Hardware stack levels required when called:    3
 11196 ;; This function calls:
 11197 ;;		Nothing
 11198 ;; This function is called by:
 11199 ;;		_main
 11200 ;;		_sprintf
 11201 ;; This function uses a non-reentrant model
 11202 ;;
 11203                           
 11204                           	psect	text20
 11205  01546C                     __ptext20:
 11206                           	opt stack 0
 11207  01546C                     ___fltol:
 11208                           	opt stack 27
 11209                           
 11210                           ; BSR set to: 0
 11211                           ;incstack = 0
 11212  01546C  0100               	movlb	0	; () banked
 11213  01546E  35BA               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11214  015470  35BB               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11215  015472  0100               	movlb	0	; () banked
 11216  015474  6FC1               	movwf	___fltol@exp1& (0+255),b
 11217  015476  0100               	movlb	0	; () banked
 11218  015478  51C1               	movf	___fltol@exp1& (0+255),w,b
 11219  01547A  A4D8               	btfss	status,2,c
 11220  01547C  D00A               	goto	l8282
 11221                           
 11222                           ; BSR set to: 0
 11223  01547E  0E00               	movlw	0
 11224  015480  0100               	movlb	0	; () banked
 11225  015482  6FB8               	movwf	?___fltol& (0+255),b
 11226  015484  0E00               	movlw	0
 11227  015486  6FB9               	movwf	(?___fltol+1)& (0+255),b
 11228  015488  0E00               	movlw	0
 11229  01548A  6FBA               	movwf	(?___fltol+2)& (0+255),b
 11230  01548C  0E00               	movlw	0
 11231  01548E  6FBB               	movwf	(?___fltol+3)& (0+255),b
 11232                           
 11233                           ; BSR set to: 0
 11234  015490  0012               	return	
 11235  015492                     l8282:
 11236                           
 11237                           ; BSR set to: 0
 11238  015492  C0B8  F0BC         	movff	___fltol@f1,??___fltol
 11239  015496  C0B9  F0BD         	movff	___fltol@f1+1,??___fltol+1
 11240  01549A  C0BA  F0BE         	movff	___fltol@f1+2,??___fltol+2
 11241  01549E  C0BB  F0BF         	movff	___fltol@f1+3,??___fltol+3
 11242  0154A2  0E20               	movlw	32
 11243  0154A4  D006               	goto	u10960
 11244  0154A6                     u10965:
 11245  0154A6  0100               	movlb	0	; () banked
 11246  0154A8  90D8               	bcf	status,0,c
 11247  0154AA  33BF               	rrcf	(??___fltol+3)& (0+255),f,b
 11248  0154AC  33BE               	rrcf	(??___fltol+2)& (0+255),f,b
 11249  0154AE  33BD               	rrcf	(??___fltol+1)& (0+255),f,b
 11250  0154B0  33BC               	rrcf	??___fltol& (0+255),f,b
 11251  0154B2                     u10960:
 11252  0154B2  2EE8               	decfsz	wreg,f,c
 11253  0154B4  D7F8               	goto	u10965
 11254  0154B6  0100               	movlb	0	; () banked
 11255  0154B8  51BC               	movf	??___fltol& (0+255),w,b
 11256  0154BA  0100               	movlb	0	; () banked
 11257  0154BC  6FC0               	movwf	___fltol@sign1& (0+255),b
 11258                           
 11259                           ; BSR set to: 0
 11260  0154BE  0100               	movlb	0	; () banked
 11261  0154C0  8FBA               	bsf	(___fltol@f1+2)& (0+255),7,b
 11262                           
 11263                           ; BSR set to: 0
 11264  0154C2  0EFF               	movlw	255
 11265  0154C4  0100               	movlb	0	; () banked
 11266  0154C6  17B8               	andwf	___fltol@f1& (0+255),f,b
 11267  0154C8  0EFF               	movlw	255
 11268  0154CA  17B9               	andwf	(___fltol@f1+1)& (0+255),f,b
 11269  0154CC  0EFF               	movlw	255
 11270  0154CE  17BA               	andwf	(___fltol@f1+2)& (0+255),f,b
 11271  0154D0  0E00               	movlw	0
 11272  0154D2  17BB               	andwf	(___fltol@f1+3)& (0+255),f,b
 11273                           
 11274                           ; BSR set to: 0
 11275  0154D4  0E96               	movlw	150
 11276  0154D6  0100               	movlb	0	; () banked
 11277  0154D8  5FC1               	subwf	___fltol@exp1& (0+255),f,b
 11278                           
 11279                           ; BSR set to: 0
 11280  0154DA  0100               	movlb	0	; () banked
 11281  0154DC  AFC1               	btfss	___fltol@exp1& (0+255),7,b
 11282  0154DE  D01A               	goto	l8302
 11283                           
 11284                           ; BSR set to: 0
 11285  0154E0  0100               	movlb	0	; () banked
 11286  0154E2  51C1               	movf	___fltol@exp1& (0+255),w,b
 11287  0154E4  0A80               	xorlw	128
 11288  0154E6  0F97               	addlw	151
 11289  0154E8  B0D8               	btfsc	status,0,c
 11290  0154EA  D00A               	goto	l8298
 11291                           
 11292                           ; BSR set to: 0
 11293  0154EC  0E00               	movlw	0
 11294  0154EE  0100               	movlb	0	; () banked
 11295  0154F0  6FB8               	movwf	?___fltol& (0+255),b
 11296  0154F2  0E00               	movlw	0
 11297  0154F4  6FB9               	movwf	(?___fltol+1)& (0+255),b
 11298  0154F6  0E00               	movlw	0
 11299  0154F8  6FBA               	movwf	(?___fltol+2)& (0+255),b
 11300  0154FA  0E00               	movlw	0
 11301  0154FC  6FBB               	movwf	(?___fltol+3)& (0+255),b
 11302                           
 11303                           ; BSR set to: 0
 11304  0154FE  0012               	return	
 11305  015500                     l8298:
 11306                           
 11307                           ; BSR set to: 0
 11308  015500  0100               	movlb	0	; () banked
 11309  015502  90D8               	bcf	status,0,c
 11310  015504  33BB               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11311  015506  33BA               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11312  015508  33B9               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11313  01550A  33B8               	rrcf	___fltol@f1& (0+255),f,b
 11314                           
 11315                           ; BSR set to: 0
 11316  01550C  0100               	movlb	0	; () banked
 11317  01550E  3FC1               	incfsz	___fltol@exp1& (0+255),f,b
 11318  015510  D7F7               	goto	l8298
 11319                           
 11320                           ; BSR set to: 0
 11321  015512  D01B               	goto	l8312
 11322  015514                     l8302:
 11323                           
 11324                           ; BSR set to: 0
 11325  015514  0E1F               	movlw	31
 11326  015516  0100               	movlb	0	; () banked
 11327  015518  65C1               	cpfsgt	___fltol@exp1& (0+255),b
 11328  01551A  D012               	goto	l8310
 11329                           
 11330                           ; BSR set to: 0
 11331  01551C  0E00               	movlw	0
 11332  01551E  0100               	movlb	0	; () banked
 11333  015520  6FB8               	movwf	?___fltol& (0+255),b
 11334  015522  0E00               	movlw	0
 11335  015524  6FB9               	movwf	(?___fltol+1)& (0+255),b
 11336  015526  0E00               	movlw	0
 11337  015528  6FBA               	movwf	(?___fltol+2)& (0+255),b
 11338  01552A  0E00               	movlw	0
 11339  01552C  6FBB               	movwf	(?___fltol+3)& (0+255),b
 11340                           
 11341                           ; BSR set to: 0
 11342  01552E  0012               	return	
 11343  015530                     l8308:
 11344                           
 11345                           ; BSR set to: 0
 11346  015530  0100               	movlb	0	; () banked
 11347  015532  90D8               	bcf	status,0,c
 11348  015534  37B8               	rlcf	___fltol@f1& (0+255),f,b
 11349  015536  37B9               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11350  015538  37BA               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11351  01553A  37BB               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11352  01553C  0100               	movlb	0	; () banked
 11353  01553E  07C1               	decf	___fltol@exp1& (0+255),f,b
 11354  015540                     l8310:
 11355                           
 11356                           ; BSR set to: 0
 11357  015540  0100               	movlb	0	; () banked
 11358  015542  51C1               	movf	___fltol@exp1& (0+255),w,b
 11359  015544  0100               	movlb	0	; () banked
 11360  015546  A4D8               	btfss	status,2,c
 11361  015548  D7F3               	goto	l8308
 11362  01554A                     l8312:
 11363                           
 11364                           ; BSR set to: 0
 11365  01554A  0100               	movlb	0	; () banked
 11366  01554C  51C0               	movf	___fltol@sign1& (0+255),w,b
 11367  01554E  0100               	movlb	0	; () banked
 11368  015550  B4D8               	btfsc	status,2,c
 11369  015552  D009               	goto	l8316
 11370                           
 11371                           ; BSR set to: 0
 11372  015554  0100               	movlb	0	; () banked
 11373  015556  1FBB               	comf	(___fltol@f1+3)& (0+255),f,b
 11374  015558  1FBA               	comf	(___fltol@f1+2)& (0+255),f,b
 11375  01555A  1FB9               	comf	(___fltol@f1+1)& (0+255),f,b
 11376  01555C  6DB8               	negf	___fltol@f1& (0+255),b
 11377  01555E  0E00               	movlw	0
 11378  015560  23B9               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11379  015562  23BA               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11380  015564  23BB               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11381  015566                     l8316:
 11382                           
 11383                           ; BSR set to: 0
 11384  015566  C0B8  F0B8         	movff	___fltol@f1,?___fltol
 11385  01556A  C0B9  F0B9         	movff	___fltol@f1+1,?___fltol+1
 11386  01556E  C0BA  F0BA         	movff	___fltol@f1+2,?___fltol+2
 11387  015572  C0BB  F0BB         	movff	___fltol@f1+3,?___fltol+3
 11388  015576  0012               	return	
 11389  015578                     __end_of___fltol:
 11390                           	opt stack 0
 11391                           tblptru	equ	0xFF8
 11392                           tblptrh	equ	0xFF7
 11393                           tblptrl	equ	0xFF6
 11394                           tablat	equ	0xFF5
 11395                           prodh	equ	0xFF4
 11396                           prodl	equ	0xFF3
 11397                           intcon	equ	0xFF2
 11398                           postinc0	equ	0xFEE
 11399                           wreg	equ	0xFE8
 11400                           indf2	equ	0xFDF
 11401                           postinc2	equ	0xFDE
 11402                           fsr2h	equ	0xFDA
 11403                           fsr2l	equ	0xFD9
 11404                           status	equ	0xFD8
 11405                           
 11406 ;; *************** function ___flsub *****************
 11407 ;; Defined at:
 11408 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11409 ;; Parameters:    Size  Location     Type
 11410 ;;  b               4   88[BANK0 ] long 
 11411 ;;  a               4   92[BANK0 ] long 
 11412 ;; Auto vars:     Size  Location     Type
 11413 ;;		None
 11414 ;; Return value:  Size  Location     Type
 11415 ;;                  4   88[BANK0 ] long 
 11416 ;; Registers used:
 11417 ;;		wreg, status,2, status,0, cstack
 11418 ;; Tracked objects:
 11419 ;;		On entry : 0/0
 11420 ;;		On exit  : 0/0
 11421 ;;		Unchanged: 0/0
 11422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11423 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11426 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11427 ;;Total ram usage:        8 bytes
 11428 ;; Hardware stack levels used:    1
 11429 ;; Hardware stack levels required when called:    4
 11430 ;; This function calls:
 11431 ;;		___fladd
 11432 ;; This function is called by:
 11433 ;;		_sprintf
 11434 ;; This function uses a non-reentrant model
 11435 ;;
 11436                           
 11437                           	psect	text21
 11438  015DF0                     __ptext21:
 11439                           	opt stack 0
 11440  015DF0                     ___flsub:
 11441                           	opt stack 24
 11442                           
 11443                           ; BSR set to: 0
 11444                           ;incstack = 0
 11445  015DF0  0E00               	movlw	0
 11446  015DF2  0100               	movlb	0	; () banked
 11447  015DF4  1BBC               	xorwf	___flsub@a& (0+255),f,b
 11448  015DF6  0E00               	movlw	0
 11449  015DF8  1BBD               	xorwf	(___flsub@a+1)& (0+255),f,b
 11450  015DFA  0E00               	movlw	0
 11451  015DFC  1BBE               	xorwf	(___flsub@a+2)& (0+255),f,b
 11452  015DFE  0E80               	movlw	128
 11453  015E00  1BBF               	xorwf	(___flsub@a+3)& (0+255),f,b
 11454                           
 11455                           ; BSR set to: 0
 11456  015E02  C0B8  F0A4         	movff	___flsub@b,___fladd@b
 11457  015E06  C0B9  F0A5         	movff	___flsub@b+1,___fladd@b+1
 11458  015E0A  C0BA  F0A6         	movff	___flsub@b+2,___fladd@b+2
 11459  015E0E  C0BB  F0A7         	movff	___flsub@b+3,___fladd@b+3
 11460  015E12  C0BC  F0A8         	movff	___flsub@a,___fladd@a
 11461  015E16  C0BD  F0A9         	movff	___flsub@a+1,___fladd@a+1
 11462  015E1A  C0BE  F0AA         	movff	___flsub@a+2,___fladd@a+2
 11463  015E1E  C0BF  F0AB         	movff	___flsub@a+3,___fladd@a+3
 11464  015E22  EC0F  F099         	call	___fladd	;wreg free
 11465  015E26  C0A4  F0B8         	movff	?___fladd,?___flsub
 11466  015E2A  C0A5  F0B9         	movff	?___fladd+1,?___flsub+1
 11467  015E2E  C0A6  F0BA         	movff	?___fladd+2,?___flsub+2
 11468  015E32  C0A7  F0BB         	movff	?___fladd+3,?___flsub+3
 11469  015E36  0012               	return	
 11470  015E38                     __end_of___flsub:
 11471                           	opt stack 0
 11472                           tblptru	equ	0xFF8
 11473                           tblptrh	equ	0xFF7
 11474                           tblptrl	equ	0xFF6
 11475                           tablat	equ	0xFF5
 11476                           prodh	equ	0xFF4
 11477                           prodl	equ	0xFF3
 11478                           intcon	equ	0xFF2
 11479                           postinc0	equ	0xFEE
 11480                           wreg	equ	0xFE8
 11481                           indf2	equ	0xFDF
 11482                           postinc2	equ	0xFDE
 11483                           fsr2h	equ	0xFDA
 11484                           fsr2l	equ	0xFD9
 11485                           status	equ	0xFD8
 11486                           
 11487 ;; *************** function ___fladd *****************
 11488 ;; Defined at:
 11489 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11490 ;; Parameters:    Size  Location     Type
 11491 ;;  b               4   68[BANK0 ] long 
 11492 ;;  a               4   72[BANK0 ] long 
 11493 ;; Auto vars:     Size  Location     Type
 11494 ;;  grs             1   87[BANK0 ] unsigned char 
 11495 ;;  bexp            1   86[BANK0 ] unsigned char 
 11496 ;;  aexp            1   85[BANK0 ] unsigned char 
 11497 ;;  signs           1   84[BANK0 ] unsigned char 
 11498 ;; Return value:  Size  Location     Type
 11499 ;;                  4   68[BANK0 ] unsigned char 
 11500 ;; Registers used:
 11501 ;;		wreg, status,2, status,0
 11502 ;; Tracked objects:
 11503 ;;		On entry : 0/0
 11504 ;;		On exit  : 0/0
 11505 ;;		Unchanged: 0/0
 11506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11507 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11508 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11509 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11510 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11511 ;;Total ram usage:       20 bytes
 11512 ;; Hardware stack levels used:    1
 11513 ;; Hardware stack levels required when called:    3
 11514 ;; This function calls:
 11515 ;;		Nothing
 11516 ;; This function is called by:
 11517 ;;		_main
 11518 ;;		_sprintf
 11519 ;;		___flsub
 11520 ;; This function uses a non-reentrant model
 11521 ;;
 11522                           
 11523                           	psect	text22
 11524  01321E                     __ptext22:
 11525                           	opt stack 0
 11526  01321E                     ___fladd:
 11527                           	opt stack 27
 11528                           
 11529                           ;incstack = 0
 11530  01321E  0100               	movlb	0	; () banked
 11531  013220  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 11532  013222  0B80               	andlw	128
 11533  013224  0100               	movlb	0	; () banked
 11534  013226  6FB4               	movwf	___fladd@signs& (0+255),b
 11535  013228  0100               	movlb	0	; () banked
 11536  01322A  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 11537  01322C  25A7               	addwf	(___fladd@b+3)& (0+255),w,b
 11538  01322E  0100               	movlb	0	; () banked
 11539  013230  6FB6               	movwf	___fladd@bexp& (0+255),b
 11540                           
 11541                           ; BSR set to: 0
 11542  013232  0100               	movlb	0	; () banked
 11543  013234  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 11544  013236  D002               	goto	l7614
 11545                           
 11546                           ; BSR set to: 0
 11547  013238  0100               	movlb	0	; () banked
 11548  01323A  81B6               	bsf	___fladd@bexp& (0+255),0,b
 11549  01323C                     l7614:
 11550                           
 11551                           ; BSR set to: 0
 11552  01323C  0100               	movlb	0	; () banked
 11553  01323E  51B6               	movf	___fladd@bexp& (0+255),w,b
 11554  013240  0100               	movlb	0	; () banked
 11555  013242  B4D8               	btfsc	status,2,c
 11556  013244  D012               	goto	l7624
 11557                           
 11558                           ; BSR set to: 0
 11559  013246  0100               	movlb	0	; () banked
 11560  013248  29B6               	incf	___fladd@bexp& (0+255),w,b
 11561  01324A  A4D8               	btfss	status,2,c
 11562  01324C  D009               	goto	l7620
 11563                           
 11564                           ; BSR set to: 0
 11565  01324E  0E00               	movlw	0
 11566  013250  0100               	movlb	0	; () banked
 11567  013252  6FA4               	movwf	___fladd@b& (0+255),b
 11568  013254  0E00               	movlw	0
 11569  013256  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 11570  013258  0E00               	movlw	0
 11571  01325A  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 11572  01325C  0E00               	movlw	0
 11573  01325E  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 11574  013260                     l7620:
 11575                           
 11576                           ; BSR set to: 0
 11577  013260  0100               	movlb	0	; () banked
 11578  013262  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 11579                           
 11580                           ; BSR set to: 0
 11581  013264  0E00               	movlw	0
 11582  013266  0100               	movlb	0	; () banked
 11583  013268  D008               	goto	L9
 11584  01326A                     l7624:
 11585                           
 11586                           ; BSR set to: 0
 11587  01326A  0E00               	movlw	0
 11588  01326C  0100               	movlb	0	; () banked
 11589  01326E  6FA4               	movwf	___fladd@b& (0+255),b
 11590  013270  0E00               	movlw	0
 11591  013272  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 11592  013274  0E00               	movlw	0
 11593  013276  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 11594  013278  0E00               	movlw	0
 11595  01327A                     L9:
 11596  01327A  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 11597                           
 11598                           ; BSR set to: 0
 11599                           
 11600                           ; BSR set to: 0
 11601  01327C  0100               	movlb	0	; () banked
 11602  01327E  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 11603  013280  0B80               	andlw	128
 11604  013282  0100               	movlb	0	; () banked
 11605  013284  6FB5               	movwf	___fladd@aexp& (0+255),b
 11606                           
 11607                           ; BSR set to: 0
 11608  013286  0100               	movlb	0	; () banked
 11609  013288  51B4               	movf	___fladd@signs& (0+255),w,b
 11610  01328A  0100               	movlb	0	; () banked
 11611  01328C  19B5               	xorwf	___fladd@aexp& (0+255),w,b
 11612  01328E  B4D8               	btfsc	status,2,c
 11613  013290  D002               	goto	l7632
 11614                           
 11615                           ; BSR set to: 0
 11616  013292  0100               	movlb	0	; () banked
 11617  013294  8DB4               	bsf	___fladd@signs& (0+255),6,b
 11618  013296                     l7632:
 11619                           
 11620                           ; BSR set to: 0
 11621  013296  0100               	movlb	0	; () banked
 11622  013298  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 11623  01329A  25AB               	addwf	(___fladd@a+3)& (0+255),w,b
 11624  01329C  0100               	movlb	0	; () banked
 11625  01329E  6FB5               	movwf	___fladd@aexp& (0+255),b
 11626                           
 11627                           ; BSR set to: 0
 11628  0132A0  0100               	movlb	0	; () banked
 11629  0132A2  AFAA               	btfss	(___fladd@a+2)& (0+255),7,b
 11630  0132A4  D002               	goto	l7638
 11631                           
 11632                           ; BSR set to: 0
 11633  0132A6  0100               	movlb	0	; () banked
 11634  0132A8  81B5               	bsf	___fladd@aexp& (0+255),0,b
 11635  0132AA                     l7638:
 11636                           
 11637                           ; BSR set to: 0
 11638  0132AA  0100               	movlb	0	; () banked
 11639  0132AC  51B5               	movf	___fladd@aexp& (0+255),w,b
 11640  0132AE  0100               	movlb	0	; () banked
 11641  0132B0  B4D8               	btfsc	status,2,c
 11642  0132B2  D012               	goto	l7648
 11643                           
 11644                           ; BSR set to: 0
 11645  0132B4  0100               	movlb	0	; () banked
 11646  0132B6  29B5               	incf	___fladd@aexp& (0+255),w,b
 11647  0132B8  A4D8               	btfss	status,2,c
 11648  0132BA  D009               	goto	l7644
 11649                           
 11650                           ; BSR set to: 0
 11651  0132BC  0E00               	movlw	0
 11652  0132BE  0100               	movlb	0	; () banked
 11653  0132C0  6FA8               	movwf	___fladd@a& (0+255),b
 11654  0132C2  0E00               	movlw	0
 11655  0132C4  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 11656  0132C6  0E00               	movlw	0
 11657  0132C8  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 11658  0132CA  0E00               	movlw	0
 11659  0132CC  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 11660  0132CE                     l7644:
 11661                           
 11662                           ; BSR set to: 0
 11663  0132CE  0100               	movlb	0	; () banked
 11664  0132D0  8FAA               	bsf	(___fladd@a+2)& (0+255),7,b
 11665                           
 11666                           ; BSR set to: 0
 11667  0132D2  0E00               	movlw	0
 11668  0132D4  0100               	movlb	0	; () banked
 11669  0132D6  D008               	goto	L10
 11670  0132D8                     l7648:
 11671                           
 11672                           ; BSR set to: 0
 11673  0132D8  0E00               	movlw	0
 11674  0132DA  0100               	movlb	0	; () banked
 11675  0132DC  6FA8               	movwf	___fladd@a& (0+255),b
 11676  0132DE  0E00               	movlw	0
 11677  0132E0  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 11678  0132E2  0E00               	movlw	0
 11679  0132E4  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 11680  0132E6  0E00               	movlw	0
 11681  0132E8                     L10:
 11682  0132E8  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 11683                           
 11684                           ; BSR set to: 0
 11685                           
 11686                           ; BSR set to: 0
 11687  0132EA  0100               	movlb	0	; () banked
 11688  0132EC  51B6               	movf	___fladd@bexp& (0+255),w,b
 11689  0132EE  0100               	movlb	0	; () banked
 11690  0132F0  5DB5               	subwf	___fladd@aexp& (0+255),w,b
 11691  0132F2  B0D8               	btfsc	status,0,c
 11692  0132F4  D024               	goto	l7686
 11693                           
 11694                           ; BSR set to: 0
 11695  0132F6  0100               	movlb	0	; () banked
 11696  0132F8  ADB4               	btfss	___fladd@signs& (0+255),6,b
 11697  0132FA  D003               	goto	l7656
 11698                           
 11699                           ; BSR set to: 0
 11700  0132FC  0E80               	movlw	128
 11701  0132FE  0100               	movlb	0	; () banked
 11702  013300  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 11703  013302                     l7656:
 11704                           
 11705                           ; BSR set to: 0
 11706  013302  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
 11707                           
 11708                           ; BSR set to: 0
 11709  013306  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 11710                           
 11711                           ; BSR set to: 0
 11712  01330A  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
 11713                           
 11714                           ; BSR set to: 0
 11715  01330E  C0A4  F0B7         	movff	___fladd@b,___fladd@grs
 11716                           
 11717                           ; BSR set to: 0
 11718  013312  C0A8  F0A4         	movff	___fladd@a,___fladd@b
 11719                           
 11720                           ; BSR set to: 0
 11721  013316  C0B7  F0A8         	movff	___fladd@grs,___fladd@a
 11722                           
 11723                           ; BSR set to: 0
 11724  01331A  C0A5  F0B7         	movff	___fladd@b+1,___fladd@grs
 11725                           
 11726                           ; BSR set to: 0
 11727  01331E  C0A9  F0A5         	movff	___fladd@a+1,___fladd@b+1
 11728                           
 11729                           ; BSR set to: 0
 11730  013322  C0B7  F0A9         	movff	___fladd@grs,___fladd@a+1
 11731                           
 11732                           ; BSR set to: 0
 11733  013326  C0A6  F0B7         	movff	___fladd@b+2,___fladd@grs
 11734                           
 11735                           ; BSR set to: 0
 11736  01332A  C0AA  F0A6         	movff	___fladd@a+2,___fladd@b+2
 11737                           
 11738                           ; BSR set to: 0
 11739  01332E  C0B7  F0AA         	movff	___fladd@grs,___fladd@a+2
 11740                           
 11741                           ; BSR set to: 0
 11742  013332  C0A7  F0B7         	movff	___fladd@b+3,___fladd@grs
 11743                           
 11744                           ; BSR set to: 0
 11745  013336  C0AB  F0A7         	movff	___fladd@a+3,___fladd@b+3
 11746                           
 11747                           ; BSR set to: 0
 11748  01333A  C0B7  F0AB         	movff	___fladd@grs,___fladd@a+3
 11749  01333E                     l7686:
 11750                           
 11751                           ; BSR set to: 0
 11752  01333E  0E00               	movlw	0
 11753  013340  0100               	movlb	0	; () banked
 11754  013342  6FB7               	movwf	___fladd@grs& (0+255),b
 11755                           
 11756                           ; BSR set to: 0
 11757  013344  0100               	movlb	0	; () banked
 11758  013346  51B6               	movf	___fladd@bexp& (0+255),w,b
 11759  013348  0100               	movlb	0	; () banked
 11760  01334A  6FAC               	movwf	??___fladd& (0+255),b
 11761  01334C  6BAD               	clrf	(??___fladd+1)& (0+255),b
 11762  01334E  0100               	movlb	0	; () banked
 11763  013350  1FAC               	comf	??___fladd& (0+255),f,b
 11764  013352  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 11765  013354  4BAC               	infsnz	??___fladd& (0+255),f,b
 11766  013356  2BAD               	incf	(??___fladd+1)& (0+255),f,b
 11767  013358  0100               	movlb	0	; () banked
 11768  01335A  51B5               	movf	___fladd@aexp& (0+255),w,b
 11769  01335C  0100               	movlb	0	; () banked
 11770  01335E  6FAE               	movwf	(??___fladd+2)& (0+255),b
 11771  013360  6BAF               	clrf	(??___fladd+3)& (0+255),b
 11772  013362  0100               	movlb	0	; () banked
 11773  013364  51AC               	movf	??___fladd& (0+255),w,b
 11774  013366  0100               	movlb	0	; () banked
 11775  013368  27AE               	addwf	(??___fladd+2)& (0+255),f,b
 11776  01336A  0100               	movlb	0	; () banked
 11777  01336C  51AD               	movf	(??___fladd+1)& (0+255),w,b
 11778  01336E  0100               	movlb	0	; () banked
 11779  013370  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 11780  013372  0100               	movlb	0	; () banked
 11781  013374  BFAF               	btfsc	(??___fladd+3)& (0+255),7,b
 11782  013376  D03D               	goto	l1483
 11783  013378  0100               	movlb	0	; () banked
 11784  01337A  51AF               	movf	(??___fladd+3)& (0+255),w,b
 11785  01337C  E105               	bnz	u10010
 11786  01337E  0E1A               	movlw	26
 11787  013380  0100               	movlb	0	; () banked
 11788  013382  5DAE               	subwf	(??___fladd+2)& (0+255),w,b
 11789  013384  A0D8               	btfss	status,0,c
 11790  013386  D035               	goto	l1483
 11791  013388                     u10010:
 11792                           
 11793                           ; BSR set to: 0
 11794  013388  0100               	movlb	0	; () banked
 11795  01338A  51A4               	movf	___fladd@b& (0+255),w,b
 11796  01338C  0100               	movlb	0	; () banked
 11797  01338E  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 11798  013390  0100               	movlb	0	; () banked
 11799  013392  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 11800  013394  0100               	movlb	0	; () banked
 11801  013396  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 11802  013398  B4D8               	btfsc	status,2,c
 11803  01339A  D002               	goto	u10020
 11804  01339C  0E01               	movlw	1
 11805  01339E  D001               	goto	u10030
 11806  0133A0                     u10020:
 11807  0133A0  0E00               	movlw	0
 11808  0133A2                     u10030:
 11809  0133A2  0100               	movlb	0	; () banked
 11810  0133A4  6FB7               	movwf	___fladd@grs& (0+255),b
 11811                           
 11812                           ; BSR set to: 0
 11813  0133A6  0E00               	movlw	0
 11814  0133A8  0100               	movlb	0	; () banked
 11815  0133AA  6FA4               	movwf	___fladd@b& (0+255),b
 11816  0133AC  0E00               	movlw	0
 11817  0133AE  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 11818  0133B0  0E00               	movlw	0
 11819  0133B2  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 11820  0133B4  0E00               	movlw	0
 11821  0133B6  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 11822                           
 11823                           ; BSR set to: 0
 11824  0133B8  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 11825  0133BC  D020               	goto	l1482
 11826  0133BE                     l1484:
 11827                           
 11828                           ; BSR set to: 0
 11829  0133BE  0100               	movlb	0	; () banked
 11830  0133C0  A1B7               	btfss	___fladd@grs& (0+255),0,b
 11831  0133C2  D007               	goto	l7698
 11832                           
 11833                           ; BSR set to: 0
 11834  0133C4  0100               	movlb	0	; () banked
 11835  0133C6  90D8               	bcf	status,0,c
 11836  0133C8  31B7               	rrcf	___fladd@grs& (0+255),w,b
 11837  0133CA  0901               	iorlw	1
 11838  0133CC  0100               	movlb	0	; () banked
 11839  0133CE  6FB7               	movwf	___fladd@grs& (0+255),b
 11840  0133D0  D003               	goto	l7700
 11841  0133D2                     l7698:
 11842                           
 11843                           ; BSR set to: 0
 11844  0133D2  0100               	movlb	0	; () banked
 11845  0133D4  90D8               	bcf	status,0,c
 11846  0133D6  33B7               	rrcf	___fladd@grs& (0+255),f,b
 11847  0133D8                     l7700:
 11848                           
 11849                           ; BSR set to: 0
 11850  0133D8  0100               	movlb	0	; () banked
 11851  0133DA  A1A4               	btfss	___fladd@b& (0+255),0,b
 11852  0133DC  D002               	goto	l7704
 11853                           
 11854                           ; BSR set to: 0
 11855  0133DE  0100               	movlb	0	; () banked
 11856  0133E0  8FB7               	bsf	___fladd@grs& (0+255),7,b
 11857  0133E2                     l7704:
 11858                           
 11859                           ; BSR set to: 0
 11860  0133E2  0100               	movlb	0	; () banked
 11861  0133E4  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 11862  0133E6  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 11863  0133E8  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 11864  0133EA  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 11865  0133EC  33A4               	rrcf	___fladd@b& (0+255),f,b
 11866                           
 11867                           ; BSR set to: 0
 11868  0133EE  0100               	movlb	0	; () banked
 11869  0133F0  2BB6               	incf	___fladd@bexp& (0+255),f,b
 11870  0133F2                     l1483:
 11871                           
 11872                           ; BSR set to: 0
 11873  0133F2  0100               	movlb	0	; () banked
 11874  0133F4  51B5               	movf	___fladd@aexp& (0+255),w,b
 11875  0133F6  0100               	movlb	0	; () banked
 11876  0133F8  5DB6               	subwf	___fladd@bexp& (0+255),w,b
 11877  0133FA  A0D8               	btfss	status,0,c
 11878  0133FC  D7E0               	goto	l1484
 11879  0133FE                     l1482:
 11880                           
 11881                           ; BSR set to: 0
 11882  0133FE  0100               	movlb	0	; () banked
 11883  013400  BDB4               	btfsc	___fladd@signs& (0+255),6,b
 11884  013402  D03F               	goto	l7732
 11885                           
 11886                           ; BSR set to: 0
 11887  013404  0100               	movlb	0	; () banked
 11888  013406  51B6               	movf	___fladd@bexp& (0+255),w,b
 11889  013408  0100               	movlb	0	; () banked
 11890  01340A  A4D8               	btfss	status,2,c
 11891  01340C  D00A               	goto	l7714
 11892                           
 11893                           ; BSR set to: 0
 11894  01340E  0E00               	movlw	0
 11895  013410  0100               	movlb	0	; () banked
 11896  013412  6FA4               	movwf	?___fladd& (0+255),b
 11897  013414  0E00               	movlw	0
 11898  013416  6FA5               	movwf	(?___fladd+1)& (0+255),b
 11899  013418  0E00               	movlw	0
 11900  01341A  6FA6               	movwf	(?___fladd+2)& (0+255),b
 11901  01341C  0E00               	movlw	0
 11902  01341E  6FA7               	movwf	(?___fladd+3)& (0+255),b
 11903                           
 11904                           ; BSR set to: 0
 11905  013420  0012               	return	
 11906  013422                     l7714:
 11907                           
 11908                           ; BSR set to: 0
 11909  013422  0100               	movlb	0	; () banked
 11910  013424  51A8               	movf	___fladd@a& (0+255),w,b
 11911  013426  0100               	movlb	0	; () banked
 11912  013428  27A4               	addwf	___fladd@b& (0+255),f,b
 11913  01342A  0100               	movlb	0	; () banked
 11914  01342C  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 11915  01342E  0100               	movlb	0	; () banked
 11916  013430  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 11917  013432  0100               	movlb	0	; () banked
 11918  013434  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 11919  013436  0100               	movlb	0	; () banked
 11920  013438  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 11921  01343A  0100               	movlb	0	; () banked
 11922  01343C  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 11923  01343E  0100               	movlb	0	; () banked
 11924  013440  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 11925                           
 11926                           ; BSR set to: 0
 11927  013442  0100               	movlb	0	; () banked
 11928  013444  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 11929  013446  D0CC               	goto	l7768
 11930                           
 11931                           ; BSR set to: 0
 11932  013448  0100               	movlb	0	; () banked
 11933  01344A  A1B7               	btfss	___fladd@grs& (0+255),0,b
 11934  01344C  D009               	goto	l7722
 11935                           
 11936                           ; BSR set to: 0
 11937  01344E  0100               	movlb	0	; () banked
 11938  013450  90D8               	bcf	status,0,c
 11939  013452  33B7               	rrcf	___fladd@grs& (0+255),f,b
 11940  013454  0100               	movlb	0	; () banked
 11941  013456  51B7               	movf	___fladd@grs& (0+255),w,b
 11942  013458  0901               	iorlw	1
 11943  01345A  0100               	movlb	0	; () banked
 11944  01345C  6FB7               	movwf	___fladd@grs& (0+255),b
 11945  01345E  D003               	goto	l7724
 11946  013460                     l7722:
 11947                           
 11948                           ; BSR set to: 0
 11949  013460  0100               	movlb	0	; () banked
 11950  013462  90D8               	bcf	status,0,c
 11951  013464  33B7               	rrcf	___fladd@grs& (0+255),f,b
 11952  013466                     l7724:
 11953                           
 11954                           ; BSR set to: 0
 11955  013466  0100               	movlb	0	; () banked
 11956  013468  A1A4               	btfss	___fladd@b& (0+255),0,b
 11957  01346A  D002               	goto	l7728
 11958                           
 11959                           ; BSR set to: 0
 11960  01346C  0100               	movlb	0	; () banked
 11961  01346E  8FB7               	bsf	___fladd@grs& (0+255),7,b
 11962  013470                     l7728:
 11963                           
 11964                           ; BSR set to: 0
 11965  013470  0100               	movlb	0	; () banked
 11966  013472  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 11967  013474  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 11968  013476  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 11969  013478  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 11970  01347A  33A4               	rrcf	___fladd@b& (0+255),f,b
 11971                           
 11972                           ; BSR set to: 0
 11973  01347C  0100               	movlb	0	; () banked
 11974  01347E  2BB6               	incf	___fladd@bexp& (0+255),f,b
 11975                           
 11976                           ; BSR set to: 0
 11977  013480  D0AF               	goto	l7768
 11978  013482                     l7732:
 11979                           
 11980                           ; BSR set to: 0
 11981  013482  0100               	movlb	0	; () banked
 11982  013484  51A8               	movf	___fladd@a& (0+255),w,b
 11983  013486  0100               	movlb	0	; () banked
 11984  013488  5DA4               	subwf	___fladd@b& (0+255),w,b
 11985  01348A  0100               	movlb	0	; () banked
 11986  01348C  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 11987  01348E  0100               	movlb	0	; () banked
 11988  013490  59A5               	subwfb	(___fladd@b+1)& (0+255),w,b
 11989  013492  0100               	movlb	0	; () banked
 11990  013494  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 11991  013496  0100               	movlb	0	; () banked
 11992  013498  59A6               	subwfb	(___fladd@b+2)& (0+255),w,b
 11993  01349A  0100               	movlb	0	; () banked
 11994  01349C  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 11995  01349E  0A80               	xorlw	128
 11996  0134A0  0100               	movlb	0	; () banked
 11997  0134A2  6FAC               	movwf	??___fladd& (0+255),b
 11998  0134A4  0100               	movlb	0	; () banked
 11999  0134A6  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12000  0134A8  0A80               	xorlw	128
 12001  0134AA  0100               	movlb	0	; () banked
 12002  0134AC  59AC               	subwfb	??___fladd& (0+255),w,b
 12003  0134AE  B0D8               	btfsc	status,0,c
 12004  0134B0  D050               	goto	l7742
 12005                           
 12006                           ; BSR set to: 0
 12007  0134B2  C0A4  F0AC         	movff	___fladd@b,??___fladd
 12008  0134B6  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 12009  0134BA  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 12010  0134BE  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 12011  0134C2  0100               	movlb	0	; () banked
 12012  0134C4  1FAC               	comf	??___fladd& (0+255),f,b
 12013  0134C6  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 12014  0134C8  1FAE               	comf	(??___fladd+2)& (0+255),f,b
 12015  0134CA  1FAF               	comf	(??___fladd+3)& (0+255),f,b
 12016  0134CC  2BAC               	incf	??___fladd& (0+255),f,b
 12017  0134CE  0E00               	movlw	0
 12018  0134D0  23AD               	addwfc	(??___fladd+1)& (0+255),f,b
 12019  0134D2  23AE               	addwfc	(??___fladd+2)& (0+255),f,b
 12020  0134D4  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 12021  0134D6  0100               	movlb	0	; () banked
 12022  0134D8  51A8               	movf	___fladd@a& (0+255),w,b
 12023  0134DA  0100               	movlb	0	; () banked
 12024  0134DC  25AC               	addwf	??___fladd& (0+255),w,b
 12025  0134DE  0100               	movlb	0	; () banked
 12026  0134E0  6FB0               	movwf	(??___fladd+4)& (0+255),b
 12027  0134E2  0100               	movlb	0	; () banked
 12028  0134E4  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 12029  0134E6  0100               	movlb	0	; () banked
 12030  0134E8  21AD               	addwfc	(??___fladd+1)& (0+255),w,b
 12031  0134EA  0100               	movlb	0	; () banked
 12032  0134EC  6FB1               	movwf	(??___fladd+5)& (0+255),b
 12033  0134EE  0100               	movlb	0	; () banked
 12034  0134F0  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 12035  0134F2  0100               	movlb	0	; () banked
 12036  0134F4  21AE               	addwfc	(??___fladd+2)& (0+255),w,b
 12037  0134F6  0100               	movlb	0	; () banked
 12038  0134F8  6FB2               	movwf	(??___fladd+6)& (0+255),b
 12039  0134FA  0100               	movlb	0	; () banked
 12040  0134FC  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12041  0134FE  0100               	movlb	0	; () banked
 12042  013500  21AF               	addwfc	(??___fladd+3)& (0+255),w,b
 12043  013502  0100               	movlb	0	; () banked
 12044  013504  6FB3               	movwf	(??___fladd+7)& (0+255),b
 12045  013506  0EFF               	movlw	255
 12046  013508  0100               	movlb	0	; () banked
 12047  01350A  25B0               	addwf	(??___fladd+4)& (0+255),w,b
 12048  01350C  0100               	movlb	0	; () banked
 12049  01350E  6FA4               	movwf	___fladd@b& (0+255),b
 12050  013510  0EFF               	movlw	255
 12051  013512  0100               	movlb	0	; () banked
 12052  013514  21B1               	addwfc	(??___fladd+5)& (0+255),w,b
 12053  013516  0100               	movlb	0	; () banked
 12054  013518  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 12055  01351A  0EFF               	movlw	255
 12056  01351C  0100               	movlb	0	; () banked
 12057  01351E  21B2               	addwfc	(??___fladd+6)& (0+255),w,b
 12058  013520  0100               	movlb	0	; () banked
 12059  013522  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 12060  013524  0EFF               	movlw	255
 12061  013526  0100               	movlb	0	; () banked
 12062  013528  21B3               	addwfc	(??___fladd+7)& (0+255),w,b
 12063  01352A  0100               	movlb	0	; () banked
 12064  01352C  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 12065  01352E  0E80               	movlw	128
 12066  013530  0100               	movlb	0	; () banked
 12067  013532  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 12068                           
 12069                           ; BSR set to: 0
 12070  013534  0100               	movlb	0	; () banked
 12071  013536  6DB7               	negf	___fladd@grs& (0+255),b
 12072                           
 12073                           ; BSR set to: 0
 12074  013538  0100               	movlb	0	; () banked
 12075  01353A  51B7               	movf	___fladd@grs& (0+255),w,b
 12076  01353C  0100               	movlb	0	; () banked
 12077  01353E  A4D8               	btfss	status,2,c
 12078  013540  D018               	goto	l1499
 12079                           
 12080                           ; BSR set to: 0
 12081  013542  0E01               	movlw	1
 12082  013544  0100               	movlb	0	; () banked
 12083  013546  27A4               	addwf	___fladd@b& (0+255),f,b
 12084  013548  0E00               	movlw	0
 12085  01354A  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 12086  01354C  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 12087  01354E  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 12088                           
 12089                           ; BSR set to: 0
 12090  013550  D010               	goto	l1499
 12091  013552                     l7742:
 12092                           
 12093                           ; BSR set to: 0
 12094  013552  0100               	movlb	0	; () banked
 12095  013554  51A8               	movf	___fladd@a& (0+255),w,b
 12096  013556  0100               	movlb	0	; () banked
 12097  013558  5FA4               	subwf	___fladd@b& (0+255),f,b
 12098  01355A  0100               	movlb	0	; () banked
 12099  01355C  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 12100  01355E  0100               	movlb	0	; () banked
 12101  013560  5BA5               	subwfb	(___fladd@b+1)& (0+255),f,b
 12102  013562  0100               	movlb	0	; () banked
 12103  013564  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 12104  013566  0100               	movlb	0	; () banked
 12105  013568  5BA6               	subwfb	(___fladd@b+2)& (0+255),f,b
 12106  01356A  0100               	movlb	0	; () banked
 12107  01356C  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12108  01356E  0100               	movlb	0	; () banked
 12109  013570  5BA7               	subwfb	(___fladd@b+3)& (0+255),f,b
 12110  013572                     l1499:
 12111                           
 12112                           ; BSR set to: 0
 12113  013572  0100               	movlb	0	; () banked
 12114  013574  51A4               	movf	___fladd@b& (0+255),w,b
 12115  013576  0100               	movlb	0	; () banked
 12116  013578  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 12117  01357A  0100               	movlb	0	; () banked
 12118  01357C  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 12119  01357E  0100               	movlb	0	; () banked
 12120  013580  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 12121  013582  A4D8               	btfss	status,2,c
 12122  013584  D02A               	goto	l7766
 12123                           
 12124                           ; BSR set to: 0
 12125  013586  0100               	movlb	0	; () banked
 12126  013588  51B7               	movf	___fladd@grs& (0+255),w,b
 12127  01358A  0100               	movlb	0	; () banked
 12128  01358C  A4D8               	btfss	status,2,c
 12129  01358E  D025               	goto	l7766
 12130                           
 12131                           ; BSR set to: 0
 12132  013590  0E00               	movlw	0
 12133  013592  0100               	movlb	0	; () banked
 12134  013594  6FA4               	movwf	?___fladd& (0+255),b
 12135  013596  0E00               	movlw	0
 12136  013598  6FA5               	movwf	(?___fladd+1)& (0+255),b
 12137  01359A  0E00               	movlw	0
 12138  01359C  6FA6               	movwf	(?___fladd+2)& (0+255),b
 12139  01359E  0E00               	movlw	0
 12140  0135A0  6FA7               	movwf	(?___fladd+3)& (0+255),b
 12141                           
 12142                           ; BSR set to: 0
 12143  0135A2  0012               	return	
 12144  0135A4                     l7750:
 12145                           
 12146                           ; BSR set to: 0
 12147  0135A4  0100               	movlb	0	; () banked
 12148  0135A6  90D8               	bcf	status,0,c
 12149  0135A8  37A4               	rlcf	___fladd@b& (0+255),f,b
 12150  0135AA  37A5               	rlcf	(___fladd@b+1)& (0+255),f,b
 12151  0135AC  37A6               	rlcf	(___fladd@b+2)& (0+255),f,b
 12152  0135AE  37A7               	rlcf	(___fladd@b+3)& (0+255),f,b
 12153                           
 12154                           ; BSR set to: 0
 12155  0135B0  0100               	movlb	0	; () banked
 12156  0135B2  AFB7               	btfss	___fladd@grs& (0+255),7,b
 12157  0135B4  D002               	goto	l7756
 12158                           
 12159                           ; BSR set to: 0
 12160  0135B6  0100               	movlb	0	; () banked
 12161  0135B8  81A4               	bsf	___fladd@b& (0+255),0,b
 12162  0135BA                     l7756:
 12163                           
 12164                           ; BSR set to: 0
 12165  0135BA  0100               	movlb	0	; () banked
 12166  0135BC  A1B7               	btfss	___fladd@grs& (0+255),0,b
 12167  0135BE  D003               	goto	l7760
 12168                           
 12169                           ; BSR set to: 0
 12170  0135C0  80D8               	bsf	status,0,c
 12171  0135C2  0100               	movlb	0	; () banked
 12172  0135C4  D002               	goto	L11
 12173  0135C6                     l7760:
 12174                           
 12175                           ; BSR set to: 0
 12176  0135C6  0100               	movlb	0	; () banked
 12177  0135C8  90D8               	bcf	status,0,c
 12178  0135CA                     L11:
 12179  0135CA  37B7               	rlcf	___fladd@grs& (0+255),f,b
 12180                           
 12181                           ; BSR set to: 0
 12182                           
 12183                           ; BSR set to: 0
 12184  0135CC  0100               	movlb	0	; () banked
 12185  0135CE  51B6               	movf	___fladd@bexp& (0+255),w,b
 12186  0135D0  0100               	movlb	0	; () banked
 12187  0135D2  B4D8               	btfsc	status,2,c
 12188  0135D4  D002               	goto	l7766
 12189                           
 12190                           ; BSR set to: 0
 12191  0135D6  0100               	movlb	0	; () banked
 12192  0135D8  07B6               	decf	___fladd@bexp& (0+255),f,b
 12193  0135DA                     l7766:
 12194                           
 12195                           ; BSR set to: 0
 12196  0135DA  0100               	movlb	0	; () banked
 12197  0135DC  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 12198  0135DE  D7E2               	goto	l7750
 12199  0135E0                     l7768:
 12200                           
 12201                           ; BSR set to: 0
 12202  0135E0  0E00               	movlw	0
 12203  0135E2  0100               	movlb	0	; () banked
 12204  0135E4  6FB5               	movwf	___fladd@aexp& (0+255),b
 12205                           
 12206                           ; BSR set to: 0
 12207  0135E6  0100               	movlb	0	; () banked
 12208  0135E8  AFB7               	btfss	___fladd@grs& (0+255),7,b
 12209  0135EA  D00D               	goto	l1508
 12210                           
 12211                           ; BSR set to: 0
 12212  0135EC  C0B7  F0AC         	movff	___fladd@grs,??___fladd
 12213  0135F0  0E7F               	movlw	127
 12214  0135F2  0100               	movlb	0	; () banked
 12215  0135F4  17AC               	andwf	??___fladd& (0+255),f,b
 12216  0135F6  A4D8               	btfss	status,2,c
 12217  0135F8  D003               	goto	l7776
 12218                           
 12219                           ; BSR set to: 0
 12220                           
 12221                           ; BSR set to: 0
 12222  0135FA  0100               	movlb	0	; () banked
 12223  0135FC  A1A4               	btfss	___fladd@b& (0+255),0,b
 12224  0135FE  D003               	goto	l1508
 12225  013600                     l7776:
 12226                           
 12227                           ; BSR set to: 0
 12228  013600  0E01               	movlw	1
 12229  013602  0100               	movlb	0	; () banked
 12230  013604  6FB5               	movwf	___fladd@aexp& (0+255),b
 12231  013606                     l1508:
 12232                           
 12233                           ; BSR set to: 0
 12234  013606  0100               	movlb	0	; () banked
 12235  013608  51B5               	movf	___fladd@aexp& (0+255),w,b
 12236  01360A  0100               	movlb	0	; () banked
 12237  01360C  B4D8               	btfsc	status,2,c
 12238  01360E  D026               	goto	l7786
 12239                           
 12240                           ; BSR set to: 0
 12241  013610  0E01               	movlw	1
 12242  013612  0100               	movlb	0	; () banked
 12243  013614  27A4               	addwf	___fladd@b& (0+255),f,b
 12244  013616  0E00               	movlw	0
 12245  013618  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 12246  01361A  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 12247  01361C  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 12248                           
 12249                           ; BSR set to: 0
 12250  01361E  0100               	movlb	0	; () banked
 12251  013620  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 12252  013622  D01C               	goto	l7786
 12253                           
 12254                           ; BSR set to: 0
 12255  013624  C0A4  F0AC         	movff	___fladd@b,??___fladd
 12256  013628  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 12257  01362C  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 12258  013630  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 12259  013634  0100               	movlb	0	; () banked
 12260  013636  35AF               	rlcf	(??___fladd+3)& (0+255),w,b
 12261  013638  33AF               	rrcf	(??___fladd+3)& (0+255),f,b
 12262  01363A  33AE               	rrcf	(??___fladd+2)& (0+255),f,b
 12263  01363C  33AD               	rrcf	(??___fladd+1)& (0+255),f,b
 12264  01363E  33AC               	rrcf	??___fladd& (0+255),f,b
 12265  013640  C0AC  F0A4         	movff	??___fladd,___fladd@b
 12266  013644  C0AD  F0A5         	movff	??___fladd+1,___fladd@b+1
 12267  013648  C0AE  F0A6         	movff	??___fladd+2,___fladd@b+2
 12268  01364C  C0AF  F0A7         	movff	??___fladd+3,___fladd@b+3
 12269  013650  0100               	movlb	0	; () banked
 12270  013652  29B6               	incf	___fladd@bexp& (0+255),w,b
 12271  013654  B4D8               	btfsc	status,2,c
 12272  013656  D002               	goto	l7786
 12273                           
 12274                           ; BSR set to: 0
 12275  013658  0100               	movlb	0	; () banked
 12276  01365A  2BB6               	incf	___fladd@bexp& (0+255),f,b
 12277  01365C                     l7786:
 12278                           
 12279                           ; BSR set to: 0
 12280  01365C  0100               	movlb	0	; () banked
 12281  01365E  29B6               	incf	___fladd@bexp& (0+255),w,b
 12282  013660  B4D8               	btfsc	status,2,c
 12283  013662  D005               	goto	l7790
 12284                           
 12285                           ; BSR set to: 0
 12286  013664  0100               	movlb	0	; () banked
 12287  013666  51B6               	movf	___fladd@bexp& (0+255),w,b
 12288  013668  0100               	movlb	0	; () banked
 12289  01366A  A4D8               	btfss	status,2,c
 12290  01366C  D011               	goto	l7794
 12291  01366E                     l7790:
 12292                           
 12293                           ; BSR set to: 0
 12294  01366E  0E00               	movlw	0
 12295  013670  0100               	movlb	0	; () banked
 12296  013672  6FA4               	movwf	___fladd@b& (0+255),b
 12297  013674  0E00               	movlw	0
 12298  013676  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 12299  013678  0E00               	movlw	0
 12300  01367A  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 12301  01367C  0E00               	movlw	0
 12302  01367E  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 12303  013680  0100               	movlb	0	; () banked
 12304  013682  51B6               	movf	___fladd@bexp& (0+255),w,b
 12305  013684  0100               	movlb	0	; () banked
 12306  013686  A4D8               	btfss	status,2,c
 12307  013688  D003               	goto	l7794
 12308                           
 12309                           ; BSR set to: 0
 12310  01368A  0E00               	movlw	0
 12311  01368C  0100               	movlb	0	; () banked
 12312  01368E  6FB4               	movwf	___fladd@signs& (0+255),b
 12313  013690                     l7794:
 12314                           
 12315                           ; BSR set to: 0
 12316  013690  0100               	movlb	0	; () banked
 12317  013692  A1B6               	btfss	___fladd@bexp& (0+255),0,b
 12318  013694  D003               	goto	l7798
 12319                           
 12320                           ; BSR set to: 0
 12321  013696  0100               	movlb	0	; () banked
 12322  013698  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 12323  01369A  D002               	goto	l7800
 12324  01369C                     l7798:
 12325                           
 12326                           ; BSR set to: 0
 12327  01369C  0100               	movlb	0	; () banked
 12328  01369E  9FA6               	bcf	(___fladd@b+2)& (0+255),7,b
 12329  0136A0                     l7800:
 12330                           
 12331                           ; BSR set to: 0
 12332  0136A0  0100               	movlb	0	; () banked
 12333  0136A2  90D8               	bcf	status,0,c
 12334  0136A4  31B6               	rrcf	___fladd@bexp& (0+255),w,b
 12335  0136A6  0100               	movlb	0	; () banked
 12336  0136A8  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 12337                           
 12338                           ; BSR set to: 0
 12339  0136AA  0100               	movlb	0	; () banked
 12340  0136AC  AFB4               	btfss	___fladd@signs& (0+255),7,b
 12341  0136AE  D002               	goto	l7806
 12342                           
 12343                           ; BSR set to: 0
 12344  0136B0  0100               	movlb	0	; () banked
 12345  0136B2  8FA7               	bsf	(___fladd@b+3)& (0+255),7,b
 12346  0136B4                     l7806:
 12347                           
 12348                           ; BSR set to: 0
 12349  0136B4  C0A4  F0A4         	movff	___fladd@b,?___fladd
 12350  0136B8  C0A5  F0A5         	movff	___fladd@b+1,?___fladd+1
 12351  0136BC  C0A6  F0A6         	movff	___fladd@b+2,?___fladd+2
 12352  0136C0  C0A7  F0A7         	movff	___fladd@b+3,?___fladd+3
 12353  0136C4  0012               	return	
 12354  0136C6                     __end_of___fladd:
 12355                           	opt stack 0
 12356                           tblptru	equ	0xFF8
 12357                           tblptrh	equ	0xFF7
 12358                           tblptrl	equ	0xFF6
 12359                           tablat	equ	0xFF5
 12360                           prodh	equ	0xFF4
 12361                           prodl	equ	0xFF3
 12362                           intcon	equ	0xFF2
 12363                           postinc0	equ	0xFEE
 12364                           wreg	equ	0xFE8
 12365                           indf2	equ	0xFDF
 12366                           postinc2	equ	0xFDE
 12367                           fsr2h	equ	0xFDA
 12368                           fsr2l	equ	0xFD9
 12369                           status	equ	0xFD8
 12370                           
 12371 ;; *************** function ___flneg *****************
 12372 ;; Defined at:
 12373 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 12374 ;; Parameters:    Size  Location     Type
 12375 ;;  f1              4   55[BANK0 ] unsigned char 
 12376 ;; Auto vars:     Size  Location     Type
 12377 ;;		None
 12378 ;; Return value:  Size  Location     Type
 12379 ;;                  4   55[BANK0 ] unsigned char 
 12380 ;; Registers used:
 12381 ;;		wreg, status,2, status,0
 12382 ;; Tracked objects:
 12383 ;;		On entry : 0/0
 12384 ;;		On exit  : 0/0
 12385 ;;		Unchanged: 0/0
 12386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12387 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12390 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12391 ;;Total ram usage:        4 bytes
 12392 ;; Hardware stack levels used:    1
 12393 ;; Hardware stack levels required when called:    3
 12394 ;; This function calls:
 12395 ;;		Nothing
 12396 ;; This function is called by:
 12397 ;;		_main
 12398 ;;		_sprintf
 12399 ;; This function uses a non-reentrant model
 12400 ;;
 12401                           
 12402                           	psect	text23
 12403  015F38                     __ptext23:
 12404                           	opt stack 0
 12405  015F38                     ___flneg:
 12406                           	opt stack 27
 12407                           
 12408                           ; BSR set to: 0
 12409                           ;incstack = 0
 12410  015F38  0100               	movlb	0	; () banked
 12411  015F3A  5197               	movf	___flneg@f1& (0+255),w,b
 12412  015F3C  0100               	movlb	0	; () banked
 12413  015F3E  1198               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12414  015F40  0100               	movlb	0	; () banked
 12415  015F42  1199               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12416  015F44  0100               	movlb	0	; () banked
 12417  015F46  119A               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12418  015F48  B4D8               	btfsc	status,2,c
 12419  015F4A  D009               	goto	l8272
 12420                           
 12421                           ; BSR set to: 0
 12422  015F4C  0E00               	movlw	0
 12423  015F4E  0100               	movlb	0	; () banked
 12424  015F50  1B97               	xorwf	___flneg@f1& (0+255),f,b
 12425  015F52  0E00               	movlw	0
 12426  015F54  1B98               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12427  015F56  0E00               	movlw	0
 12428  015F58  1B99               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12429  015F5A  0E80               	movlw	128
 12430  015F5C  1B9A               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12431  015F5E                     l8272:
 12432                           
 12433                           ; BSR set to: 0
 12434  015F5E  C097  F097         	movff	___flneg@f1,?___flneg
 12435  015F62  C098  F098         	movff	___flneg@f1+1,?___flneg+1
 12436  015F66  C099  F099         	movff	___flneg@f1+2,?___flneg+2
 12437  015F6A  C09A  F09A         	movff	___flneg@f1+3,?___flneg+3
 12438  015F6E  0012               	return	
 12439  015F70                     __end_of___flneg:
 12440                           	opt stack 0
 12441                           tblptru	equ	0xFF8
 12442                           tblptrh	equ	0xFF7
 12443                           tblptrl	equ	0xFF6
 12444                           tablat	equ	0xFF5
 12445                           prodh	equ	0xFF4
 12446                           prodl	equ	0xFF3
 12447                           intcon	equ	0xFF2
 12448                           postinc0	equ	0xFEE
 12449                           wreg	equ	0xFE8
 12450                           indf2	equ	0xFDF
 12451                           postinc2	equ	0xFDE
 12452                           fsr2h	equ	0xFDA
 12453                           fsr2l	equ	0xFD9
 12454                           status	equ	0xFD8
 12455                           
 12456 ;; *************** function ___flge *****************
 12457 ;; Defined at:
 12458 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 12459 ;; Parameters:    Size  Location     Type
 12460 ;;  ff1             4   16[BANK0 ] unsigned char 
 12461 ;;  ff2             4   20[BANK0 ] unsigned char 
 12462 ;; Auto vars:     Size  Location     Type
 12463 ;;		None
 12464 ;; Return value:  Size  Location     Type
 12465 ;;		None               void
 12466 ;; Registers used:
 12467 ;;		wreg, status,2, status,0
 12468 ;; Tracked objects:
 12469 ;;		On entry : 0/0
 12470 ;;		On exit  : 0/0
 12471 ;;		Unchanged: 0/0
 12472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12473 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12475 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12476 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12477 ;;Total ram usage:       12 bytes
 12478 ;; Hardware stack levels used:    1
 12479 ;; Hardware stack levels required when called:    3
 12480 ;; This function calls:
 12481 ;;		Nothing
 12482 ;; This function is called by:
 12483 ;;		_sprintf
 12484 ;; This function uses a non-reentrant model
 12485 ;;
 12486                           
 12487                           	psect	text24
 12488  014E60                     __ptext24:
 12489                           	opt stack 0
 12490  014E60                     ___flge:
 12491                           	opt stack 25
 12492                           
 12493                           ; BSR set to: 0
 12494                           ;incstack = 0
 12495  014E60  0E00               	movlw	0
 12496  014E62  0100               	movlb	0	; () banked
 12497  014E64  1570               	andwf	___flge@ff1& (0+255),w,b
 12498  014E66  0100               	movlb	0	; () banked
 12499  014E68  6F78               	movwf	??___flge& (0+255),b
 12500  014E6A  0E00               	movlw	0
 12501  014E6C  0100               	movlb	0	; () banked
 12502  014E6E  1571               	andwf	(___flge@ff1+1)& (0+255),w,b
 12503  014E70  0100               	movlb	0	; () banked
 12504  014E72  6F79               	movwf	(??___flge+1)& (0+255),b
 12505  014E74  0E80               	movlw	128
 12506  014E76  0100               	movlb	0	; () banked
 12507  014E78  1572               	andwf	(___flge@ff1+2)& (0+255),w,b
 12508  014E7A  0100               	movlb	0	; () banked
 12509  014E7C  6F7A               	movwf	(??___flge+2)& (0+255),b
 12510  014E7E  0E7F               	movlw	127
 12511  014E80  0100               	movlb	0	; () banked
 12512  014E82  1573               	andwf	(___flge@ff1+3)& (0+255),w,b
 12513  014E84  0100               	movlb	0	; () banked
 12514  014E86  6F7B               	movwf	(??___flge+3)& (0+255),b
 12515  014E88  0100               	movlb	0	; () banked
 12516  014E8A  5178               	movf	??___flge& (0+255),w,b
 12517  014E8C  0100               	movlb	0	; () banked
 12518  014E8E  1179               	iorwf	(??___flge+1)& (0+255),w,b
 12519  014E90  0100               	movlb	0	; () banked
 12520  014E92  117A               	iorwf	(??___flge+2)& (0+255),w,b
 12521  014E94  0100               	movlb	0	; () banked
 12522  014E96  117B               	iorwf	(??___flge+3)& (0+255),w,b
 12523  014E98  A4D8               	btfss	status,2,c
 12524  014E9A  D009               	goto	l8250
 12525                           
 12526                           ; BSR set to: 0
 12527  014E9C  0E00               	movlw	0
 12528  014E9E  0100               	movlb	0	; () banked
 12529  014EA0  6F70               	movwf	___flge@ff1& (0+255),b
 12530  014EA2  0E00               	movlw	0
 12531  014EA4  6F71               	movwf	(___flge@ff1+1)& (0+255),b
 12532  014EA6  0E00               	movlw	0
 12533  014EA8  6F72               	movwf	(___flge@ff1+2)& (0+255),b
 12534  014EAA  0E00               	movlw	0
 12535  014EAC  6F73               	movwf	(___flge@ff1+3)& (0+255),b
 12536  014EAE                     l8250:
 12537                           
 12538                           ; BSR set to: 0
 12539  014EAE  0E00               	movlw	0
 12540  014EB0  0100               	movlb	0	; () banked
 12541  014EB2  1574               	andwf	___flge@ff2& (0+255),w,b
 12542  014EB4  0100               	movlb	0	; () banked
 12543  014EB6  6F78               	movwf	??___flge& (0+255),b
 12544  014EB8  0E00               	movlw	0
 12545  014EBA  0100               	movlb	0	; () banked
 12546  014EBC  1575               	andwf	(___flge@ff2+1)& (0+255),w,b
 12547  014EBE  0100               	movlb	0	; () banked
 12548  014EC0  6F79               	movwf	(??___flge+1)& (0+255),b
 12549  014EC2  0E80               	movlw	128
 12550  014EC4  0100               	movlb	0	; () banked
 12551  014EC6  1576               	andwf	(___flge@ff2+2)& (0+255),w,b
 12552  014EC8  0100               	movlb	0	; () banked
 12553  014ECA  6F7A               	movwf	(??___flge+2)& (0+255),b
 12554  014ECC  0E7F               	movlw	127
 12555  014ECE  0100               	movlb	0	; () banked
 12556  014ED0  1577               	andwf	(___flge@ff2+3)& (0+255),w,b
 12557  014ED2  0100               	movlb	0	; () banked
 12558  014ED4  6F7B               	movwf	(??___flge+3)& (0+255),b
 12559  014ED6  0100               	movlb	0	; () banked
 12560  014ED8  5178               	movf	??___flge& (0+255),w,b
 12561  014EDA  0100               	movlb	0	; () banked
 12562  014EDC  1179               	iorwf	(??___flge+1)& (0+255),w,b
 12563  014EDE  0100               	movlb	0	; () banked
 12564  014EE0  117A               	iorwf	(??___flge+2)& (0+255),w,b
 12565  014EE2  0100               	movlb	0	; () banked
 12566  014EE4  117B               	iorwf	(??___flge+3)& (0+255),w,b
 12567  014EE6  A4D8               	btfss	status,2,c
 12568  014EE8  D009               	goto	l8254
 12569                           
 12570                           ; BSR set to: 0
 12571  014EEA  0E00               	movlw	0
 12572  014EEC  0100               	movlb	0	; () banked
 12573  014EEE  6F74               	movwf	___flge@ff2& (0+255),b
 12574  014EF0  0E00               	movlw	0
 12575  014EF2  6F75               	movwf	(___flge@ff2+1)& (0+255),b
 12576  014EF4  0E00               	movlw	0
 12577  014EF6  6F76               	movwf	(___flge@ff2+2)& (0+255),b
 12578  014EF8  0E00               	movlw	0
 12579  014EFA  6F77               	movwf	(___flge@ff2+3)& (0+255),b
 12580  014EFC                     l8254:
 12581                           
 12582                           ; BSR set to: 0
 12583  014EFC  0100               	movlb	0	; () banked
 12584  014EFE  AF73               	btfss	(___flge@ff1+3)& (0+255),7,b
 12585  014F00  D026               	goto	l8258
 12586                           
 12587                           ; BSR set to: 0
 12588  014F02  C070  F078         	movff	___flge@ff1,??___flge
 12589  014F06  C071  F079         	movff	___flge@ff1+1,??___flge+1
 12590  014F0A  C072  F07A         	movff	___flge@ff1+2,??___flge+2
 12591  014F0E  C073  F07B         	movff	___flge@ff1+3,??___flge+3
 12592  014F12  0100               	movlb	0	; () banked
 12593  014F14  1F78               	comf	??___flge& (0+255),f,b
 12594  014F16  1F79               	comf	(??___flge+1)& (0+255),f,b
 12595  014F18  1F7A               	comf	(??___flge+2)& (0+255),f,b
 12596  014F1A  1F7B               	comf	(??___flge+3)& (0+255),f,b
 12597  014F1C  2B78               	incf	??___flge& (0+255),f,b
 12598  014F1E  0E00               	movlw	0
 12599  014F20  2379               	addwfc	(??___flge+1)& (0+255),f,b
 12600  014F22  237A               	addwfc	(??___flge+2)& (0+255),f,b
 12601  014F24  237B               	addwfc	(??___flge+3)& (0+255),f,b
 12602  014F26  0E00               	movlw	0
 12603  014F28  0100               	movlb	0	; () banked
 12604  014F2A  2578               	addwf	??___flge& (0+255),w,b
 12605  014F2C  0100               	movlb	0	; () banked
 12606  014F2E  6F70               	movwf	___flge@ff1& (0+255),b
 12607  014F30  0E00               	movlw	0
 12608  014F32  0100               	movlb	0	; () banked
 12609  014F34  2179               	addwfc	(??___flge+1)& (0+255),w,b
 12610  014F36  0100               	movlb	0	; () banked
 12611  014F38  6F71               	movwf	(___flge@ff1+1)& (0+255),b
 12612  014F3A  0E00               	movlw	0
 12613  014F3C  0100               	movlb	0	; () banked
 12614  014F3E  217A               	addwfc	(??___flge+2)& (0+255),w,b
 12615  014F40  0100               	movlb	0	; () banked
 12616  014F42  6F72               	movwf	(___flge@ff1+2)& (0+255),b
 12617  014F44  0E80               	movlw	128
 12618  014F46  0100               	movlb	0	; () banked
 12619  014F48  217B               	addwfc	(??___flge+3)& (0+255),w,b
 12620  014F4A  0100               	movlb	0	; () banked
 12621  014F4C  6F73               	movwf	(___flge@ff1+3)& (0+255),b
 12622  014F4E                     l8258:
 12623                           
 12624                           ; BSR set to: 0
 12625  014F4E  0100               	movlb	0	; () banked
 12626  014F50  AF77               	btfss	(___flge@ff2+3)& (0+255),7,b
 12627  014F52  D026               	goto	l1205
 12628                           
 12629                           ; BSR set to: 0
 12630  014F54  C074  F078         	movff	___flge@ff2,??___flge
 12631  014F58  C075  F079         	movff	___flge@ff2+1,??___flge+1
 12632  014F5C  C076  F07A         	movff	___flge@ff2+2,??___flge+2
 12633  014F60  C077  F07B         	movff	___flge@ff2+3,??___flge+3
 12634  014F64  0100               	movlb	0	; () banked
 12635  014F66  1F78               	comf	??___flge& (0+255),f,b
 12636  014F68  1F79               	comf	(??___flge+1)& (0+255),f,b
 12637  014F6A  1F7A               	comf	(??___flge+2)& (0+255),f,b
 12638  014F6C  1F7B               	comf	(??___flge+3)& (0+255),f,b
 12639  014F6E  2B78               	incf	??___flge& (0+255),f,b
 12640  014F70  0E00               	movlw	0
 12641  014F72  2379               	addwfc	(??___flge+1)& (0+255),f,b
 12642  014F74  237A               	addwfc	(??___flge+2)& (0+255),f,b
 12643  014F76  237B               	addwfc	(??___flge+3)& (0+255),f,b
 12644  014F78  0E00               	movlw	0
 12645  014F7A  0100               	movlb	0	; () banked
 12646  014F7C  2578               	addwf	??___flge& (0+255),w,b
 12647  014F7E  0100               	movlb	0	; () banked
 12648  014F80  6F74               	movwf	___flge@ff2& (0+255),b
 12649  014F82  0E00               	movlw	0
 12650  014F84  0100               	movlb	0	; () banked
 12651  014F86  2179               	addwfc	(??___flge+1)& (0+255),w,b
 12652  014F88  0100               	movlb	0	; () banked
 12653  014F8A  6F75               	movwf	(___flge@ff2+1)& (0+255),b
 12654  014F8C  0E00               	movlw	0
 12655  014F8E  0100               	movlb	0	; () banked
 12656  014F90  217A               	addwfc	(??___flge+2)& (0+255),w,b
 12657  014F92  0100               	movlb	0	; () banked
 12658  014F94  6F76               	movwf	(___flge@ff2+2)& (0+255),b
 12659  014F96  0E80               	movlw	128
 12660  014F98  0100               	movlb	0	; () banked
 12661  014F9A  217B               	addwfc	(??___flge+3)& (0+255),w,b
 12662  014F9C  0100               	movlb	0	; () banked
 12663  014F9E  6F77               	movwf	(___flge@ff2+3)& (0+255),b
 12664  014FA0                     l1205:
 12665                           
 12666                           ; BSR set to: 0
 12667  014FA0  0E00               	movlw	0
 12668  014FA2  0100               	movlb	0	; () banked
 12669  014FA4  1B70               	xorwf	___flge@ff1& (0+255),f,b
 12670  014FA6  0E00               	movlw	0
 12671  014FA8  1B71               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12672  014FAA  0E00               	movlw	0
 12673  014FAC  1B72               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12674  014FAE  0E80               	movlw	128
 12675  014FB0  1B73               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12676  014FB2  0E00               	movlw	0
 12677  014FB4  0100               	movlb	0	; () banked
 12678  014FB6  1B74               	xorwf	___flge@ff2& (0+255),f,b
 12679  014FB8  0E00               	movlw	0
 12680  014FBA  1B75               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12681  014FBC  0E00               	movlw	0
 12682  014FBE  1B76               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12683  014FC0  0E80               	movlw	128
 12684  014FC2  1B77               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12685  014FC4  0100               	movlb	0	; () banked
 12686  014FC6  5174               	movf	___flge@ff2& (0+255),w,b
 12687  014FC8  0100               	movlb	0	; () banked
 12688  014FCA  5D70               	subwf	___flge@ff1& (0+255),w,b
 12689  014FCC  0100               	movlb	0	; () banked
 12690  014FCE  5175               	movf	(___flge@ff2+1)& (0+255),w,b
 12691  014FD0  0100               	movlb	0	; () banked
 12692  014FD2  5971               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12693  014FD4  0100               	movlb	0	; () banked
 12694  014FD6  5176               	movf	(___flge@ff2+2)& (0+255),w,b
 12695  014FD8  0100               	movlb	0	; () banked
 12696  014FDA  5972               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12697  014FDC  0100               	movlb	0	; () banked
 12698  014FDE  5177               	movf	(___flge@ff2+3)& (0+255),w,b
 12699  014FE0  0100               	movlb	0	; () banked
 12700  014FE2  5973               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12701  014FE4  B0D8               	btfsc	status,0,c
 12702  014FE6  D002               	goto	l8264
 12703                           
 12704                           ; BSR set to: 0
 12705  014FE8  90D8               	bcf	status,0,c
 12706  014FEA  0012               	return	
 12707  014FEC                     l8264:
 12708                           
 12709                           ; BSR set to: 0
 12710  014FEC  80D8               	bsf	status,0,c
 12711                           
 12712                           ; BSR set to: 0
 12713  014FEE  0012               	return	
 12714  014FF0                     __end_of___flge:
 12715                           	opt stack 0
 12716                           tblptru	equ	0xFF8
 12717                           tblptrh	equ	0xFF7
 12718                           tblptrl	equ	0xFF6
 12719                           tablat	equ	0xFF5
 12720                           prodh	equ	0xFF4
 12721                           prodl	equ	0xFF3
 12722                           intcon	equ	0xFF2
 12723                           postinc0	equ	0xFEE
 12724                           wreg	equ	0xFE8
 12725                           indf2	equ	0xFDF
 12726                           postinc2	equ	0xFDE
 12727                           fsr2h	equ	0xFDA
 12728                           fsr2l	equ	0xFD9
 12729                           status	equ	0xFD8
 12730                           
 12731 ;; *************** function ___fldiv *****************
 12732 ;; Defined at:
 12733 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 12734 ;; Parameters:    Size  Location     Type
 12735 ;;  b               4   30[BANK0 ] unsigned char 
 12736 ;;  a               4   34[BANK0 ] unsigned char 
 12737 ;; Auto vars:     Size  Location     Type
 12738 ;;  grs             4   49[BANK0 ] unsigned long 
 12739 ;;  rem             4   43[BANK0 ] unsigned long 
 12740 ;;  new_exp         2   47[BANK0 ] int 
 12741 ;;  aexp            1   54[BANK0 ] unsigned char 
 12742 ;;  bexp            1   53[BANK0 ] unsigned char 
 12743 ;;  sign            1   42[BANK0 ] unsigned char 
 12744 ;; Return value:  Size  Location     Type
 12745 ;;                  4   30[BANK0 ] unsigned char 
 12746 ;; Registers used:
 12747 ;;		wreg, status,2, status,0
 12748 ;; Tracked objects:
 12749 ;;		On entry : 0/0
 12750 ;;		On exit  : 0/0
 12751 ;;		Unchanged: 0/0
 12752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12753 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12754 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12755 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12756 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12757 ;;Total ram usage:       25 bytes
 12758 ;; Hardware stack levels used:    1
 12759 ;; Hardware stack levels required when called:    3
 12760 ;; This function calls:
 12761 ;;		Nothing
 12762 ;; This function is called by:
 12763 ;;		_LCD_Handler
 12764 ;; This function uses a non-reentrant model
 12765 ;;
 12766                           
 12767                           	psect	text25
 12768  013B6C                     __ptext25:
 12769                           	opt stack 0
 12770  013B6C                     ___fldiv:
 12771                           	opt stack 26
 12772                           
 12773                           ; BSR set to: 0
 12774                           ;incstack = 0
 12775  013B6C  0100               	movlb	0	; () banked
 12776  013B6E  5181               	movf	(___fldiv@b+3)& (0+255),w,b
 12777  013B70  0B80               	andlw	128
 12778  013B72  0100               	movlb	0	; () banked
 12779  013B74  6F8A               	movwf	___fldiv@sign& (0+255),b
 12780  013B76  0100               	movlb	0	; () banked
 12781  013B78  5181               	movf	(___fldiv@b+3)& (0+255),w,b
 12782  013B7A  2581               	addwf	(___fldiv@b+3)& (0+255),w,b
 12783  013B7C  0100               	movlb	0	; () banked
 12784  013B7E  6F95               	movwf	___fldiv@bexp& (0+255),b
 12785                           
 12786                           ; BSR set to: 0
 12787  013B80  0100               	movlb	0	; () banked
 12788  013B82  AF80               	btfss	(___fldiv@b+2)& (0+255),7,b
 12789  013B84  D002               	goto	l6556
 12790                           
 12791                           ; BSR set to: 0
 12792  013B86  0100               	movlb	0	; () banked
 12793  013B88  8195               	bsf	___fldiv@bexp& (0+255),0,b
 12794  013B8A                     l6556:
 12795                           
 12796                           ; BSR set to: 0
 12797  013B8A  0100               	movlb	0	; () banked
 12798  013B8C  5195               	movf	___fldiv@bexp& (0+255),w,b
 12799  013B8E  0100               	movlb	0	; () banked
 12800  013B90  B4D8               	btfsc	status,2,c
 12801  013B92  D012               	goto	l6566
 12802                           
 12803                           ; BSR set to: 0
 12804  013B94  0100               	movlb	0	; () banked
 12805  013B96  2995               	incf	___fldiv@bexp& (0+255),w,b
 12806  013B98  A4D8               	btfss	status,2,c
 12807  013B9A  D009               	goto	l6562
 12808                           
 12809                           ; BSR set to: 0
 12810  013B9C  0E00               	movlw	0
 12811  013B9E  0100               	movlb	0	; () banked
 12812  013BA0  6F7E               	movwf	___fldiv@b& (0+255),b
 12813  013BA2  0E00               	movlw	0
 12814  013BA4  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 12815  013BA6  0E00               	movlw	0
 12816  013BA8  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 12817  013BAA  0E00               	movlw	0
 12818  013BAC  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 12819  013BAE                     l6562:
 12820                           
 12821                           ; BSR set to: 0
 12822  013BAE  0100               	movlb	0	; () banked
 12823  013BB0  8F80               	bsf	(___fldiv@b+2)& (0+255),7,b
 12824                           
 12825                           ; BSR set to: 0
 12826  013BB2  0E00               	movlw	0
 12827  013BB4  0100               	movlb	0	; () banked
 12828  013BB6  D008               	goto	L12
 12829  013BB8                     l6566:
 12830                           
 12831                           ; BSR set to: 0
 12832  013BB8  0E00               	movlw	0
 12833  013BBA  0100               	movlb	0	; () banked
 12834  013BBC  6F7E               	movwf	___fldiv@b& (0+255),b
 12835  013BBE  0E00               	movlw	0
 12836  013BC0  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 12837  013BC2  0E00               	movlw	0
 12838  013BC4  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 12839  013BC6  0E00               	movlw	0
 12840  013BC8                     L12:
 12841  013BC8  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 12842                           
 12843                           ; BSR set to: 0
 12844                           
 12845                           ; BSR set to: 0
 12846  013BCA  0100               	movlb	0	; () banked
 12847  013BCC  5185               	movf	(___fldiv@a+3)& (0+255),w,b
 12848  013BCE  0B80               	andlw	128
 12849  013BD0  0100               	movlb	0	; () banked
 12850  013BD2  1B8A               	xorwf	___fldiv@sign& (0+255),f,b
 12851                           
 12852                           ; BSR set to: 0
 12853  013BD4  0100               	movlb	0	; () banked
 12854  013BD6  5185               	movf	(___fldiv@a+3)& (0+255),w,b
 12855  013BD8  2585               	addwf	(___fldiv@a+3)& (0+255),w,b
 12856  013BDA  0100               	movlb	0	; () banked
 12857  013BDC  6F96               	movwf	___fldiv@aexp& (0+255),b
 12858                           
 12859                           ; BSR set to: 0
 12860  013BDE  0100               	movlb	0	; () banked
 12861  013BE0  AF84               	btfss	(___fldiv@a+2)& (0+255),7,b
 12862  013BE2  D002               	goto	l6576
 12863                           
 12864                           ; BSR set to: 0
 12865  013BE4  0100               	movlb	0	; () banked
 12866  013BE6  8196               	bsf	___fldiv@aexp& (0+255),0,b
 12867  013BE8                     l6576:
 12868                           
 12869                           ; BSR set to: 0
 12870  013BE8  0100               	movlb	0	; () banked
 12871  013BEA  5196               	movf	___fldiv@aexp& (0+255),w,b
 12872  013BEC  0100               	movlb	0	; () banked
 12873  013BEE  B4D8               	btfsc	status,2,c
 12874  013BF0  D012               	goto	l6586
 12875                           
 12876                           ; BSR set to: 0
 12877  013BF2  0100               	movlb	0	; () banked
 12878  013BF4  2996               	incf	___fldiv@aexp& (0+255),w,b
 12879  013BF6  A4D8               	btfss	status,2,c
 12880  013BF8  D009               	goto	l6582
 12881                           
 12882                           ; BSR set to: 0
 12883  013BFA  0E00               	movlw	0
 12884  013BFC  0100               	movlb	0	; () banked
 12885  013BFE  6F82               	movwf	___fldiv@a& (0+255),b
 12886  013C00  0E00               	movlw	0
 12887  013C02  6F83               	movwf	(___fldiv@a+1)& (0+255),b
 12888  013C04  0E00               	movlw	0
 12889  013C06  6F84               	movwf	(___fldiv@a+2)& (0+255),b
 12890  013C08  0E00               	movlw	0
 12891  013C0A  6F85               	movwf	(___fldiv@a+3)& (0+255),b
 12892  013C0C                     l6582:
 12893                           
 12894                           ; BSR set to: 0
 12895  013C0C  0100               	movlb	0	; () banked
 12896  013C0E  8F84               	bsf	(___fldiv@a+2)& (0+255),7,b
 12897                           
 12898                           ; BSR set to: 0
 12899  013C10  0E00               	movlw	0
 12900  013C12  0100               	movlb	0	; () banked
 12901  013C14  D008               	goto	L13
 12902  013C16                     l6586:
 12903                           
 12904                           ; BSR set to: 0
 12905  013C16  0E00               	movlw	0
 12906  013C18  0100               	movlb	0	; () banked
 12907  013C1A  6F82               	movwf	___fldiv@a& (0+255),b
 12908  013C1C  0E00               	movlw	0
 12909  013C1E  6F83               	movwf	(___fldiv@a+1)& (0+255),b
 12910  013C20  0E00               	movlw	0
 12911  013C22  6F84               	movwf	(___fldiv@a+2)& (0+255),b
 12912  013C24  0E00               	movlw	0
 12913  013C26                     L13:
 12914  013C26  6F85               	movwf	(___fldiv@a+3)& (0+255),b
 12915                           
 12916                           ; BSR set to: 0
 12917                           
 12918                           ; BSR set to: 0
 12919  013C28  0100               	movlb	0	; () banked
 12920  013C2A  5182               	movf	___fldiv@a& (0+255),w,b
 12921  013C2C  0100               	movlb	0	; () banked
 12922  013C2E  1183               	iorwf	(___fldiv@a+1)& (0+255),w,b
 12923  013C30  0100               	movlb	0	; () banked
 12924  013C32  1184               	iorwf	(___fldiv@a+2)& (0+255),w,b
 12925  013C34  0100               	movlb	0	; () banked
 12926  013C36  1185               	iorwf	(___fldiv@a+3)& (0+255),w,b
 12927  013C38  A4D8               	btfss	status,2,c
 12928  013C3A  D017               	goto	l6598
 12929                           
 12930                           ; BSR set to: 0
 12931  013C3C  0E00               	movlw	0
 12932  013C3E  0100               	movlb	0	; () banked
 12933  013C40  6F7E               	movwf	___fldiv@b& (0+255),b
 12934  013C42  0E00               	movlw	0
 12935  013C44  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 12936  013C46  0E00               	movlw	0
 12937  013C48  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 12938  013C4A  0E00               	movlw	0
 12939  013C4C  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 12940                           
 12941                           ; BSR set to: 0
 12942  013C4E  0100               	movlb	0	; () banked
 12943  013C50  0E80               	movlw	128
 12944  013C52  1380               	iorwf	(___fldiv@b+2)& (0+255),f,b
 12945  013C54  0E7F               	movlw	127
 12946  013C56  1381               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12947                           
 12948                           ; BSR set to: 0
 12949  013C58  C07E  F07E         	movff	___fldiv@b,?___fldiv
 12950  013C5C  C07F  F07F         	movff	___fldiv@b+1,?___fldiv+1
 12951  013C60  C080  F080         	movff	___fldiv@b+2,?___fldiv+2
 12952  013C64  C081  F081         	movff	___fldiv@b+3,?___fldiv+3
 12953                           
 12954                           ; BSR set to: 0
 12955  013C68  0012               	return	
 12956  013C6A                     l6598:
 12957                           
 12958                           ; BSR set to: 0
 12959  013C6A  0100               	movlb	0	; () banked
 12960  013C6C  5195               	movf	___fldiv@bexp& (0+255),w,b
 12961  013C6E  0100               	movlb	0	; () banked
 12962  013C70  A4D8               	btfss	status,2,c
 12963  013C72  D012               	goto	l6606
 12964                           
 12965                           ; BSR set to: 0
 12966  013C74  0E00               	movlw	0
 12967  013C76  0100               	movlb	0	; () banked
 12968  013C78  6F7E               	movwf	___fldiv@b& (0+255),b
 12969  013C7A  0E00               	movlw	0
 12970  013C7C  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 12971  013C7E  0E00               	movlw	0
 12972  013C80  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 12973  013C82  0E00               	movlw	0
 12974  013C84  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 12975                           
 12976                           ; BSR set to: 0
 12977  013C86  C07E  F07E         	movff	___fldiv@b,?___fldiv
 12978  013C8A  C07F  F07F         	movff	___fldiv@b+1,?___fldiv+1
 12979  013C8E  C080  F080         	movff	___fldiv@b+2,?___fldiv+2
 12980  013C92  C081  F081         	movff	___fldiv@b+3,?___fldiv+3
 12981                           
 12982                           ; BSR set to: 0
 12983  013C96  0012               	return	
 12984  013C98                     l6606:
 12985                           
 12986                           ; BSR set to: 0
 12987  013C98  0100               	movlb	0	; () banked
 12988  013C9A  5196               	movf	___fldiv@aexp& (0+255),w,b
 12989  013C9C  0100               	movlb	0	; () banked
 12990  013C9E  6F86               	movwf	??___fldiv& (0+255),b
 12991  013CA0  6B87               	clrf	(??___fldiv+1)& (0+255),b
 12992  013CA2  0100               	movlb	0	; () banked
 12993  013CA4  1F86               	comf	??___fldiv& (0+255),f,b
 12994  013CA6  1F87               	comf	(??___fldiv+1)& (0+255),f,b
 12995  013CA8  4B86               	infsnz	??___fldiv& (0+255),f,b
 12996  013CAA  2B87               	incf	(??___fldiv+1)& (0+255),f,b
 12997  013CAC  0100               	movlb	0	; () banked
 12998  013CAE  5195               	movf	___fldiv@bexp& (0+255),w,b
 12999  013CB0  0100               	movlb	0	; () banked
 13000  013CB2  6F88               	movwf	(??___fldiv+2)& (0+255),b
 13001  013CB4  6B89               	clrf	(??___fldiv+3)& (0+255),b
 13002  013CB6  0100               	movlb	0	; () banked
 13003  013CB8  5186               	movf	??___fldiv& (0+255),w,b
 13004  013CBA  0100               	movlb	0	; () banked
 13005  013CBC  2788               	addwf	(??___fldiv+2)& (0+255),f,b
 13006  013CBE  0100               	movlb	0	; () banked
 13007  013CC0  5187               	movf	(??___fldiv+1)& (0+255),w,b
 13008  013CC2  0100               	movlb	0	; () banked
 13009  013CC4  2389               	addwfc	(??___fldiv+3)& (0+255),f,b
 13010  013CC6  0E7F               	movlw	127
 13011  013CC8  0100               	movlb	0	; () banked
 13012  013CCA  2588               	addwf	(??___fldiv+2)& (0+255),w,b
 13013  013CCC  0100               	movlb	0	; () banked
 13014  013CCE  6F8F               	movwf	___fldiv@new_exp& (0+255),b
 13015  013CD0  0E00               	movlw	0
 13016  013CD2  0100               	movlb	0	; () banked
 13017  013CD4  2189               	addwfc	(??___fldiv+3)& (0+255),w,b
 13018  013CD6  0100               	movlb	0	; () banked
 13019  013CD8  6F90               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13020                           
 13021                           ; BSR set to: 0
 13022  013CDA  C07E  F08B         	movff	___fldiv@b,___fldiv@rem
 13023  013CDE  C07F  F08C         	movff	___fldiv@b+1,___fldiv@rem+1
 13024  013CE2  C080  F08D         	movff	___fldiv@b+2,___fldiv@rem+2
 13025  013CE6  C081  F08E         	movff	___fldiv@b+3,___fldiv@rem+3
 13026                           
 13027                           ; BSR set to: 0
 13028  013CEA  0E00               	movlw	0
 13029  013CEC  0100               	movlb	0	; () banked
 13030  013CEE  6F7E               	movwf	___fldiv@b& (0+255),b
 13031  013CF0  0E00               	movlw	0
 13032  013CF2  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13033  013CF4  0E00               	movlw	0
 13034  013CF6  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13035  013CF8  0E00               	movlw	0
 13036  013CFA  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13037                           
 13038                           ; BSR set to: 0
 13039  013CFC  0E00               	movlw	0
 13040  013CFE  0100               	movlb	0	; () banked
 13041  013D00  6F91               	movwf	___fldiv@grs& (0+255),b
 13042  013D02  0E00               	movlw	0
 13043  013D04  6F92               	movwf	(___fldiv@grs+1)& (0+255),b
 13044  013D06  0E00               	movlw	0
 13045  013D08  6F93               	movwf	(___fldiv@grs+2)& (0+255),b
 13046  013D0A  0E00               	movlw	0
 13047  013D0C  6F94               	movwf	(___fldiv@grs+3)& (0+255),b
 13048                           
 13049                           ; BSR set to: 0
 13050  013D0E  0E00               	movlw	0
 13051  013D10  0100               	movlb	0	; () banked
 13052  013D12  6F96               	movwf	___fldiv@aexp& (0+255),b
 13053  013D14  D042               	goto	l1538
 13054  013D16                     l6616:
 13055                           
 13056                           ; BSR set to: 0
 13057  013D16  0100               	movlb	0	; () banked
 13058  013D18  5196               	movf	___fldiv@aexp& (0+255),w,b
 13059  013D1A  0100               	movlb	0	; () banked
 13060  013D1C  B4D8               	btfsc	status,2,c
 13061  013D1E  D017               	goto	l6624
 13062                           
 13063                           ; BSR set to: 0
 13064  013D20  0100               	movlb	0	; () banked
 13065  013D22  90D8               	bcf	status,0,c
 13066  013D24  378B               	rlcf	___fldiv@rem& (0+255),f,b
 13067  013D26  378C               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13068  013D28  378D               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13069  013D2A  378E               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13070  013D2C  0100               	movlb	0	; () banked
 13071  013D2E  90D8               	bcf	status,0,c
 13072  013D30  377E               	rlcf	___fldiv@b& (0+255),f,b
 13073  013D32  377F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13074  013D34  3780               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13075  013D36  3781               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13076                           
 13077                           ; BSR set to: 0
 13078  013D38  0100               	movlb	0	; () banked
 13079  013D3A  AF94               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13080  013D3C  D002               	goto	l1541
 13081                           
 13082                           ; BSR set to: 0
 13083  013D3E  0100               	movlb	0	; () banked
 13084  013D40  817E               	bsf	___fldiv@b& (0+255),0,b
 13085  013D42                     l1541:
 13086                           
 13087                           ; BSR set to: 0
 13088  013D42  0100               	movlb	0	; () banked
 13089  013D44  90D8               	bcf	status,0,c
 13090  013D46  3791               	rlcf	___fldiv@grs& (0+255),f,b
 13091  013D48  3792               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13092  013D4A  3793               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13093  013D4C  3794               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13094  013D4E                     l6624:
 13095                           
 13096                           ; BSR set to: 0
 13097  013D4E  0100               	movlb	0	; () banked
 13098  013D50  5182               	movf	___fldiv@a& (0+255),w,b
 13099  013D52  0100               	movlb	0	; () banked
 13100  013D54  5D8B               	subwf	___fldiv@rem& (0+255),w,b
 13101  013D56  0100               	movlb	0	; () banked
 13102  013D58  5183               	movf	(___fldiv@a+1)& (0+255),w,b
 13103  013D5A  0100               	movlb	0	; () banked
 13104  013D5C  598C               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13105  013D5E  0100               	movlb	0	; () banked
 13106  013D60  5184               	movf	(___fldiv@a+2)& (0+255),w,b
 13107  013D62  0100               	movlb	0	; () banked
 13108  013D64  598D               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13109  013D66  0100               	movlb	0	; () banked
 13110  013D68  5185               	movf	(___fldiv@a+3)& (0+255),w,b
 13111  013D6A  0100               	movlb	0	; () banked
 13112  013D6C  598E               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13113  013D6E  A0D8               	btfss	status,0,c
 13114  013D70  D012               	goto	l6630
 13115                           
 13116                           ; BSR set to: 0
 13117  013D72  0100               	movlb	0	; () banked
 13118  013D74  8D94               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13119                           
 13120                           ; BSR set to: 0
 13121  013D76  0100               	movlb	0	; () banked
 13122  013D78  5182               	movf	___fldiv@a& (0+255),w,b
 13123  013D7A  0100               	movlb	0	; () banked
 13124  013D7C  5F8B               	subwf	___fldiv@rem& (0+255),f,b
 13125  013D7E  0100               	movlb	0	; () banked
 13126  013D80  5183               	movf	(___fldiv@a+1)& (0+255),w,b
 13127  013D82  0100               	movlb	0	; () banked
 13128  013D84  5B8C               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13129  013D86  0100               	movlb	0	; () banked
 13130  013D88  5184               	movf	(___fldiv@a+2)& (0+255),w,b
 13131  013D8A  0100               	movlb	0	; () banked
 13132  013D8C  5B8D               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13133  013D8E  0100               	movlb	0	; () banked
 13134  013D90  5185               	movf	(___fldiv@a+3)& (0+255),w,b
 13135  013D92  0100               	movlb	0	; () banked
 13136  013D94  5B8E               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13137  013D96                     l6630:
 13138                           
 13139                           ; BSR set to: 0
 13140  013D96  0100               	movlb	0	; () banked
 13141  013D98  2B96               	incf	___fldiv@aexp& (0+255),f,b
 13142  013D9A                     l1538:
 13143                           
 13144                           ; BSR set to: 0
 13145  013D9A  0E19               	movlw	25
 13146  013D9C  0100               	movlb	0	; () banked
 13147  013D9E  6596               	cpfsgt	___fldiv@aexp& (0+255),b
 13148  013DA0  D7BA               	goto	l6616
 13149                           
 13150                           ; BSR set to: 0
 13151                           
 13152                           ; BSR set to: 0
 13153  013DA2  0100               	movlb	0	; () banked
 13154  013DA4  518B               	movf	___fldiv@rem& (0+255),w,b
 13155  013DA6  0100               	movlb	0	; () banked
 13156  013DA8  118C               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13157  013DAA  0100               	movlb	0	; () banked
 13158  013DAC  118D               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13159  013DAE  0100               	movlb	0	; () banked
 13160  013DB0  118E               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13161  013DB2  B4D8               	btfsc	status,2,c
 13162  013DB4  D018               	goto	l6642
 13163                           
 13164                           ; BSR set to: 0
 13165  013DB6  0100               	movlb	0	; () banked
 13166  013DB8  8191               	bsf	___fldiv@grs& (0+255),0,b
 13167                           
 13168                           ; BSR set to: 0
 13169  013DBA  D015               	goto	l6642
 13170  013DBC                     l6636:
 13171                           
 13172                           ; BSR set to: 0
 13173  013DBC  0100               	movlb	0	; () banked
 13174  013DBE  90D8               	bcf	status,0,c
 13175  013DC0  377E               	rlcf	___fldiv@b& (0+255),f,b
 13176  013DC2  377F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13177  013DC4  3780               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13178  013DC6  3781               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13179                           
 13180                           ; BSR set to: 0
 13181  013DC8  0100               	movlb	0	; () banked
 13182  013DCA  AF94               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13183  013DCC  D002               	goto	l1547
 13184                           
 13185                           ; BSR set to: 0
 13186  013DCE  0100               	movlb	0	; () banked
 13187  013DD0  817E               	bsf	___fldiv@b& (0+255),0,b
 13188  013DD2                     l1547:
 13189                           
 13190                           ; BSR set to: 0
 13191  013DD2  0100               	movlb	0	; () banked
 13192  013DD4  90D8               	bcf	status,0,c
 13193  013DD6  3791               	rlcf	___fldiv@grs& (0+255),f,b
 13194  013DD8  3792               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13195  013DDA  3793               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13196  013DDC  3794               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13197  013DDE  0100               	movlb	0	; () banked
 13198  013DE0  078F               	decf	___fldiv@new_exp& (0+255),f,b
 13199  013DE2  A0D8               	btfss	status,0,c
 13200  013DE4  0790               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13201  013DE6                     l6642:
 13202                           
 13203                           ; BSR set to: 0
 13204  013DE6  0100               	movlb	0	; () banked
 13205  013DE8  AF80               	btfss	(___fldiv@b+2)& (0+255),7,b
 13206  013DEA  D7E8               	goto	l6636
 13207                           
 13208                           ; BSR set to: 0
 13209                           
 13210                           ; BSR set to: 0
 13211  013DEC  0E00               	movlw	0
 13212  013DEE  0100               	movlb	0	; () banked
 13213  013DF0  6F96               	movwf	___fldiv@aexp& (0+255),b
 13214                           
 13215                           ; BSR set to: 0
 13216  013DF2  0100               	movlb	0	; () banked
 13217  013DF4  AF94               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13218  013DF6  D024               	goto	l1549
 13219                           
 13220                           ; BSR set to: 0
 13221  013DF8  0EFF               	movlw	255
 13222  013DFA  0100               	movlb	0	; () banked
 13223  013DFC  1591               	andwf	___fldiv@grs& (0+255),w,b
 13224  013DFE  0100               	movlb	0	; () banked
 13225  013E00  6F86               	movwf	??___fldiv& (0+255),b
 13226  013E02  0EFF               	movlw	255
 13227  013E04  0100               	movlb	0	; () banked
 13228  013E06  1592               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13229  013E08  0100               	movlb	0	; () banked
 13230  013E0A  6F87               	movwf	(??___fldiv+1)& (0+255),b
 13231  013E0C  0EFF               	movlw	255
 13232  013E0E  0100               	movlb	0	; () banked
 13233  013E10  1593               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13234  013E12  0100               	movlb	0	; () banked
 13235  013E14  6F88               	movwf	(??___fldiv+2)& (0+255),b
 13236  013E16  0E7F               	movlw	127
 13237  013E18  0100               	movlb	0	; () banked
 13238  013E1A  1594               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13239  013E1C  0100               	movlb	0	; () banked
 13240  013E1E  6F89               	movwf	(??___fldiv+3)& (0+255),b
 13241  013E20  0100               	movlb	0	; () banked
 13242  013E22  5186               	movf	??___fldiv& (0+255),w,b
 13243  013E24  0100               	movlb	0	; () banked
 13244  013E26  1187               	iorwf	(??___fldiv+1)& (0+255),w,b
 13245  013E28  0100               	movlb	0	; () banked
 13246  013E2A  1188               	iorwf	(??___fldiv+2)& (0+255),w,b
 13247  013E2C  0100               	movlb	0	; () banked
 13248  013E2E  1189               	iorwf	(??___fldiv+3)& (0+255),w,b
 13249  013E30  A4D8               	btfss	status,2,c
 13250  013E32  D003               	goto	l6652
 13251                           
 13252                           ; BSR set to: 0
 13253                           
 13254                           ; BSR set to: 0
 13255  013E34  0100               	movlb	0	; () banked
 13256  013E36  A17E               	btfss	___fldiv@b& (0+255),0,b
 13257  013E38  D003               	goto	l1549
 13258  013E3A                     l6652:
 13259                           
 13260                           ; BSR set to: 0
 13261  013E3A  0E01               	movlw	1
 13262  013E3C  0100               	movlb	0	; () banked
 13263  013E3E  6F96               	movwf	___fldiv@aexp& (0+255),b
 13264  013E40                     l1549:
 13265                           
 13266                           ; BSR set to: 0
 13267  013E40  0100               	movlb	0	; () banked
 13268  013E42  5196               	movf	___fldiv@aexp& (0+255),w,b
 13269  013E44  0100               	movlb	0	; () banked
 13270  013E46  B4D8               	btfsc	status,2,c
 13271  013E48  D023               	goto	l6662
 13272                           
 13273                           ; BSR set to: 0
 13274  013E4A  0E01               	movlw	1
 13275  013E4C  0100               	movlb	0	; () banked
 13276  013E4E  277E               	addwf	___fldiv@b& (0+255),f,b
 13277  013E50  0E00               	movlw	0
 13278  013E52  237F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 13279  013E54  2380               	addwfc	(___fldiv@b+2)& (0+255),f,b
 13280  013E56  2381               	addwfc	(___fldiv@b+3)& (0+255),f,b
 13281                           
 13282                           ; BSR set to: 0
 13283  013E58  0100               	movlb	0	; () banked
 13284  013E5A  A181               	btfss	(___fldiv@b+3)& (0+255),0,b
 13285  013E5C  D019               	goto	l6662
 13286                           
 13287                           ; BSR set to: 0
 13288  013E5E  C07E  F086         	movff	___fldiv@b,??___fldiv
 13289  013E62  C07F  F087         	movff	___fldiv@b+1,??___fldiv+1
 13290  013E66  C080  F088         	movff	___fldiv@b+2,??___fldiv+2
 13291  013E6A  C081  F089         	movff	___fldiv@b+3,??___fldiv+3
 13292  013E6E  0100               	movlb	0	; () banked
 13293  013E70  3589               	rlcf	(??___fldiv+3)& (0+255),w,b
 13294  013E72  3389               	rrcf	(??___fldiv+3)& (0+255),f,b
 13295  013E74  3388               	rrcf	(??___fldiv+2)& (0+255),f,b
 13296  013E76  3387               	rrcf	(??___fldiv+1)& (0+255),f,b
 13297  013E78  3386               	rrcf	??___fldiv& (0+255),f,b
 13298  013E7A  C086  F07E         	movff	??___fldiv,___fldiv@b
 13299  013E7E  C087  F07F         	movff	??___fldiv+1,___fldiv@b+1
 13300  013E82  C088  F080         	movff	??___fldiv+2,___fldiv@b+2
 13301  013E86  C089  F081         	movff	??___fldiv+3,___fldiv@b+3
 13302                           
 13303                           ; BSR set to: 0
 13304  013E8A  0100               	movlb	0	; () banked
 13305  013E8C  4B8F               	infsnz	___fldiv@new_exp& (0+255),f,b
 13306  013E8E  2B90               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13307  013E90                     l6662:
 13308                           
 13309                           ; BSR set to: 0
 13310  013E90  0100               	movlb	0	; () banked
 13311  013E92  BF90               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13312  013E94  D014               	goto	l6666
 13313  013E96  0100               	movlb	0	; () banked
 13314  013E98  5190               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13315  013E9A  E104               	bnz	u8390
 13316  013E9C  0100               	movlb	0	; () banked
 13317  013E9E  298F               	incf	___fldiv@new_exp& (0+255),w,b
 13318  013EA0  A0D8               	btfss	status,0,c
 13319  013EA2  D00D               	goto	l6666
 13320  013EA4                     u8390:
 13321                           
 13322                           ; BSR set to: 0
 13323  013EA4  0E00               	movlw	0
 13324  013EA6  0100               	movlb	0	; () banked
 13325  013EA8  6F90               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13326  013EAA  698F               	setf	___fldiv@new_exp& (0+255),b
 13327  013EAC  0E00               	movlw	0
 13328  013EAE  0100               	movlb	0	; () banked
 13329  013EB0  6F7E               	movwf	___fldiv@b& (0+255),b
 13330  013EB2  0E00               	movlw	0
 13331  013EB4  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13332  013EB6  0E00               	movlw	0
 13333  013EB8  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13334  013EBA  0E00               	movlw	0
 13335  013EBC  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13336  013EBE                     l6666:
 13337                           
 13338                           ; BSR set to: 0
 13339  013EBE  0100               	movlb	0	; () banked
 13340  013EC0  BF90               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13341  013EC2  D007               	goto	l6668
 13342  013EC4  0100               	movlb	0	; () banked
 13343  013EC6  5190               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13344  013EC8  E115               	bnz	l6670
 13345  013ECA  0100               	movlb	0	; () banked
 13346  013ECC  058F               	decf	___fldiv@new_exp& (0+255),w,b
 13347  013ECE  B0D8               	btfsc	status,0,c
 13348  013ED0  D011               	goto	l6670
 13349  013ED2                     l6668:
 13350                           
 13351                           ; BSR set to: 0
 13352  013ED2  0E00               	movlw	0
 13353  013ED4  0100               	movlb	0	; () banked
 13354  013ED6  6F90               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13355  013ED8  0E00               	movlw	0
 13356  013EDA  6F8F               	movwf	___fldiv@new_exp& (0+255),b
 13357  013EDC  0E00               	movlw	0
 13358  013EDE  0100               	movlb	0	; () banked
 13359  013EE0  6F7E               	movwf	___fldiv@b& (0+255),b
 13360  013EE2  0E00               	movlw	0
 13361  013EE4  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13362  013EE6  0E00               	movlw	0
 13363  013EE8  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13364  013EEA  0E00               	movlw	0
 13365  013EEC  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13366  013EEE  0E00               	movlw	0
 13367  013EF0  0100               	movlb	0	; () banked
 13368  013EF2  6F8A               	movwf	___fldiv@sign& (0+255),b
 13369  013EF4                     l6670:
 13370                           
 13371                           ; BSR set to: 0
 13372  013EF4  C08F  F095         	movff	___fldiv@new_exp,___fldiv@bexp
 13373                           
 13374                           ; BSR set to: 0
 13375  013EF8  0100               	movlb	0	; () banked
 13376  013EFA  A195               	btfss	___fldiv@bexp& (0+255),0,b
 13377  013EFC  D003               	goto	l6676
 13378                           
 13379                           ; BSR set to: 0
 13380  013EFE  0100               	movlb	0	; () banked
 13381  013F00  8F80               	bsf	(___fldiv@b+2)& (0+255),7,b
 13382  013F02  D002               	goto	l6678
 13383  013F04                     l6676:
 13384                           
 13385                           ; BSR set to: 0
 13386  013F04  0100               	movlb	0	; () banked
 13387  013F06  9F80               	bcf	(___fldiv@b+2)& (0+255),7,b
 13388  013F08                     l6678:
 13389                           
 13390                           ; BSR set to: 0
 13391  013F08  0100               	movlb	0	; () banked
 13392  013F0A  90D8               	bcf	status,0,c
 13393  013F0C  3195               	rrcf	___fldiv@bexp& (0+255),w,b
 13394  013F0E  0100               	movlb	0	; () banked
 13395  013F10  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13396                           
 13397                           ; BSR set to: 0
 13398  013F12  0100               	movlb	0	; () banked
 13399  013F14  518A               	movf	___fldiv@sign& (0+255),w,b
 13400  013F16  0100               	movlb	0	; () banked
 13401  013F18  1381               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13402                           
 13403                           ; BSR set to: 0
 13404  013F1A  C07E  F07E         	movff	___fldiv@b,?___fldiv
 13405  013F1E  C07F  F07F         	movff	___fldiv@b+1,?___fldiv+1
 13406  013F22  C080  F080         	movff	___fldiv@b+2,?___fldiv+2
 13407  013F26  C081  F081         	movff	___fldiv@b+3,?___fldiv+3
 13408  013F2A  0012               	return	
 13409  013F2C                     __end_of___fldiv:
 13410                           	opt stack 0
 13411                           tblptru	equ	0xFF8
 13412                           tblptrh	equ	0xFF7
 13413                           tblptrl	equ	0xFF6
 13414                           tablat	equ	0xFF5
 13415                           prodh	equ	0xFF4
 13416                           prodl	equ	0xFF3
 13417                           intcon	equ	0xFF2
 13418                           postinc0	equ	0xFEE
 13419                           wreg	equ	0xFE8
 13420                           indf2	equ	0xFDF
 13421                           postinc2	equ	0xFDE
 13422                           fsr2h	equ	0xFDA
 13423                           fsr2l	equ	0xFD9
 13424                           status	equ	0xFD8
 13425                           
 13426 ;; *************** function _LCD_write_message *****************
 13427 ;; Defined at:
 13428 ;;		line 178 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13429 ;; Parameters:    Size  Location     Type
 13430 ;;  buffer          2   33[BANK0 ] PTR const unsigned char 
 13431 ;;		 -> STR_17(8), STR_16(8), STR_15(8), STR_14(8), 
 13432 ;;		 -> STR_13(5), STR_12(5), STR_11(5), STR_10(7), 
 13433 ;;		 -> STR_9(14), STR_8(17), STR_7(12), STR_6(21), 
 13434 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
 13435 ;; Auto vars:     Size  Location     Type
 13436 ;;		None
 13437 ;; Return value:  Size  Location     Type
 13438 ;;		None               void
 13439 ;; Registers used:
 13440 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13441 ;; Tracked objects:
 13442 ;;		On entry : 0/0
 13443 ;;		On exit  : 0/0
 13444 ;;		Unchanged: 0/0
 13445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13446 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13449 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13450 ;;Total ram usage:        2 bytes
 13451 ;; Hardware stack levels used:    1
 13452 ;; Hardware stack levels required when called:    8
 13453 ;; This function calls:
 13454 ;;		_LCD_write_char
 13455 ;; This function is called by:
 13456 ;;		_main
 13457 ;;		_LCD_Handler
 13458 ;; This function uses a non-reentrant model
 13459 ;;
 13460                           
 13461                           	psect	text26
 13462  015FA6                     __ptext26:
 13463                           	opt stack 0
 13464  015FA6                     _LCD_write_message:
 13465                           	opt stack 22
 13466                           
 13467                           ;src\LCD_44780.c: 181: while(*buffer) {
 13468                           
 13469                           ; BSR set to: 0
 13470                           ;incstack = 0
 13471  015FA6  D00D               	goto	l8408
 13472  015FA8                     l8404:
 13473                           
 13474                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 13475  015FA8  C081  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13476  015FAC  C082  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13477  015FB0                     	if	0	;tblptru may be non-zero
 13478  015FB0                     	endif
 13479  015FB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13480  015FB0  0E00               	movlw	low (__mediumconst shr (0+16))
 13481  015FB2  6EF8               	movwf	tblptru,c
 13482  015FB4                     	endif
 13483  015FB4  0008               	tblrd		*
 13484  015FB6  50F5               	movf	tablat,w,c
 13485  015FB8  ECF0  F0AD         	call	_LCD_write_char
 13486                           
 13487                           ;src\LCD_44780.c: 186: buffer++;
 13488  015FBC  0100               	movlb	0	; () banked
 13489  015FBE  4B81               	infsnz	LCD_write_message@buffer& (0+255),f,b
 13490  015FC0  2B82               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 13491  015FC2                     l8408:
 13492  015FC2  C081  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13493  015FC6  C082  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13494  015FCA                     	if	0	;tblptru may be non-zero
 13495  015FCA                     	endif
 13496  015FCA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13497  015FCA  0E00               	movlw	low (__mediumconst shr (0+16))
 13498  015FCC  6EF8               	movwf	tblptru,c
 13499  015FCE                     	endif
 13500  015FCE  0008               	tblrd		*
 13501  015FD0  50F5               	movf	tablat,w,c
 13502  015FD2  0900               	iorlw	0
 13503  015FD4  B4D8               	btfsc	status,2,c
 13504  015FD6  0012               	return	
 13505  015FD8  D7E7               	goto	l8404
 13506  015FDA                     __end_of_LCD_write_message:
 13507                           	opt stack 0
 13508                           tblptru	equ	0xFF8
 13509                           tblptrh	equ	0xFF7
 13510                           tblptrl	equ	0xFF6
 13511                           tablat	equ	0xFF5
 13512                           prodh	equ	0xFF4
 13513                           prodl	equ	0xFF3
 13514                           intcon	equ	0xFF2
 13515                           postinc0	equ	0xFEE
 13516                           wreg	equ	0xFE8
 13517                           indf2	equ	0xFDF
 13518                           postinc2	equ	0xFDE
 13519                           fsr2h	equ	0xFDA
 13520                           fsr2l	equ	0xFD9
 13521                           status	equ	0xFD8
 13522                           
 13523 ;; *************** function _LCD_write_integer *****************
 13524 ;; Defined at:
 13525 ;;		line 210 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13526 ;; Parameters:    Size  Location     Type
 13527 ;;  value           2   40[BANK0 ] int 
 13528 ;;  number_of_di    1   42[BANK0 ] unsigned char 
 13529 ;;  zero_cleanin    1   43[BANK0 ] unsigned char 
 13530 ;; Auto vars:     Size  Location     Type
 13531 ;;  convertedInt    6   49[BANK0 ] unsigned char [6]
 13532 ;;  index           1   55[BANK0 ] unsigned char 
 13533 ;; Return value:  Size  Location     Type
 13534 ;;		None               void
 13535 ;; Registers used:
 13536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13537 ;; Tracked objects:
 13538 ;;		On entry : 0/0
 13539 ;;		On exit  : 0/0
 13540 ;;		Unchanged: 0/0
 13541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13542 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13543 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13544 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13545 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13546 ;;Total ram usage:       16 bytes
 13547 ;; Hardware stack levels used:    1
 13548 ;; Hardware stack levels required when called:    9
 13549 ;; This function calls:
 13550 ;;		_LCD_write_string
 13551 ;;		_itoa
 13552 ;; This function is called by:
 13553 ;;		_LCD_Handler
 13554 ;; This function uses a non-reentrant model
 13555 ;;
 13556                           
 13557                           	psect	text27
 13558  014954                     __ptext27:
 13559                           	opt stack 0
 13560  014954                     _LCD_write_integer:
 13561                           	opt stack 20
 13562                           
 13563                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 13564                           
 13565                           ;incstack = 0
 13566  014954  EE21  F000         	lfsr	2,LCD_write_integer@F17272
 13567  014958  EE10  F091         	lfsr	1,LCD_write_integer@convertedInt
 13568  01495C  0E05               	movlw	5
 13569  01495E                     u11191:
 13570  01495E  CFDB FFE3          	movff	plusw2,plusw1
 13571  014962  06E8               	decf	wreg,f,c
 13572  014964  E2FC               	bc	u11191
 13573                           
 13574                           ;src\LCD_44780.c: 216: unsigned char index;
 13575                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 13576  014966  0E91               	movlw	low LCD_write_integer@convertedInt
 13577  014968  0100               	movlb	0	; () banked
 13578  01496A  6F80               	movwf	itoa@buf& (0+255),b
 13579  01496C  0E00               	movlw	high LCD_write_integer@convertedInt
 13580  01496E  0100               	movlb	0	; () banked
 13581  014970  6F81               	movwf	(itoa@buf+1)& (0+255),b
 13582  014972  C088  F082         	movff	LCD_write_integer@value,itoa@val
 13583  014976  C089  F083         	movff	LCD_write_integer@value+1,itoa@val+1
 13584  01497A  0E00               	movlw	0
 13585  01497C  0100               	movlb	0	; () banked
 13586  01497E  6F85               	movwf	(itoa@base+1)& (0+255),b
 13587  014980  0E0A               	movlw	10
 13588  014982  6F84               	movwf	itoa@base& (0+255),b
 13589  014984  EC1C  F0AF         	call	_itoa	;wreg free
 13590                           
 13591                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 13592  014988  0100               	movlb	0	; () banked
 13593  01498A  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13594  01498C  0100               	movlb	0	; () banked
 13595  01498E  B4D8               	btfsc	status,2,c
 13596  014990  D0B8               	goto	l8440
 13597                           
 13598                           ; BSR set to: 0
 13599                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 13600  014992  0100               	movlb	0	; () banked
 13601  014994  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13602  014996  0D01               	mullw	1
 13603  014998  0E91               	movlw	low LCD_write_integer@convertedInt
 13604  01499A  24F3               	addwf	prodl,w,c
 13605  01499C  6ED9               	movwf	fsr2l,c
 13606  01499E  0E00               	movlw	high LCD_write_integer@convertedInt
 13607  0149A0  20F4               	addwfc	prodh,w,c
 13608  0149A2  6EDA               	movwf	fsr2h,c
 13609  0149A4  0E00               	movlw	0
 13610  0149A6  6EDF               	movwf	indf2,c
 13611                           
 13612                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 13613  0149A8  D070               	goto	l8436
 13614  0149AA                     l8418:
 13615                           
 13616                           ; BSR set to: 0
 13617                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 13618  0149AA  0100               	movlb	0	; () banked
 13619  0149AC  058A               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 13620  0149AE  0100               	movlb	0	; () banked
 13621  0149B0  6F97               	movwf	LCD_write_integer@index& (0+255),b
 13622  0149B2                     l8420:
 13623                           
 13624                           ; BSR set to: 0
 13625  0149B2  0100               	movlb	0	; () banked
 13626  0149B4  5197               	movf	LCD_write_integer@index& (0+255),w,b
 13627  0149B6  0100               	movlb	0	; () banked
 13628  0149B8  B4D8               	btfsc	status,2,c
 13629  0149BA  D067               	goto	l8436
 13630                           
 13631                           ; BSR set to: 0
 13632                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 13633                           
 13634                           ; BSR set to: 0
 13635                           
 13636                           ; BSR set to: 0
 13637  0149BC  0EFF               	movlw	255
 13638  0149BE  0100               	movlb	0	; () banked
 13639  0149C0  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 13640  0149C2  0EFF               	movlw	255
 13641  0149C4  0100               	movlb	0	; () banked
 13642  0149C6  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13643  0149C8  0100               	movlb	0	; () banked
 13644  0149CA  5197               	movf	LCD_write_integer@index& (0+255),w,b
 13645  0149CC  0100               	movlb	0	; () banked
 13646  0149CE  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13647  0149D0  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13648  0149D2  0100               	movlb	0	; () banked
 13649  0149D4  518C               	movf	??_LCD_write_integer& (0+255),w,b
 13650  0149D6  0100               	movlb	0	; () banked
 13651  0149D8  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13652  0149DA  0100               	movlb	0	; () banked
 13653  0149DC  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13654  0149DE  0100               	movlb	0	; () banked
 13655  0149E0  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13656  0149E2  0E91               	movlw	low LCD_write_integer@convertedInt
 13657  0149E4  0100               	movlb	0	; () banked
 13658  0149E6  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13659  0149E8  6ED9               	movwf	fsr2l,c
 13660  0149EA  0E00               	movlw	high LCD_write_integer@convertedInt
 13661  0149EC  0100               	movlb	0	; () banked
 13662  0149EE  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13663  0149F0  6EDA               	movwf	fsr2h,c
 13664  0149F2  0100               	movlb	0	; () banked
 13665  0149F4  5197               	movf	LCD_write_integer@index& (0+255),w,b
 13666  0149F6  0D01               	mullw	1
 13667  0149F8  0E91               	movlw	low LCD_write_integer@convertedInt
 13668  0149FA  24F3               	addwf	prodl,w,c
 13669  0149FC  6EE1               	movwf	fsr1l,c
 13670  0149FE  0E00               	movlw	high LCD_write_integer@convertedInt
 13671  014A00  20F4               	addwfc	prodh,w,c
 13672  014A02  6EE2               	movwf	fsr1h,c
 13673  014A04  CFDF FFE7          	movff	indf2,indf1
 13674                           
 13675                           ; BSR set to: 0
 13676                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 13677  014A08  0100               	movlb	0	; () banked
 13678  014A0A  058B               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 13679  014A0C  A4D8               	btfss	status,2,c
 13680  014A0E  D01D               	goto	l8430
 13681                           
 13682                           ; BSR set to: 0
 13683                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 13684  014A10  0EFF               	movlw	255
 13685  014A12  0100               	movlb	0	; () banked
 13686  014A14  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 13687  014A16  0EFF               	movlw	255
 13688  014A18  0100               	movlb	0	; () banked
 13689  014A1A  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13690  014A1C  0100               	movlb	0	; () banked
 13691  014A1E  5197               	movf	LCD_write_integer@index& (0+255),w,b
 13692  014A20  0100               	movlb	0	; () banked
 13693  014A22  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13694  014A24  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13695  014A26  0100               	movlb	0	; () banked
 13696  014A28  518C               	movf	??_LCD_write_integer& (0+255),w,b
 13697  014A2A  0100               	movlb	0	; () banked
 13698  014A2C  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13699  014A2E  0100               	movlb	0	; () banked
 13700  014A30  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13701  014A32  0100               	movlb	0	; () banked
 13702  014A34  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13703  014A36  0E91               	movlw	low LCD_write_integer@convertedInt
 13704  014A38  0100               	movlb	0	; () banked
 13705  014A3A  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13706  014A3C  6ED9               	movwf	fsr2l,c
 13707  014A3E  0E00               	movlw	high LCD_write_integer@convertedInt
 13708  014A40  0100               	movlb	0	; () banked
 13709  014A42  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13710  014A44  6EDA               	movwf	fsr2h,c
 13711  014A46  0E20               	movlw	32
 13712  014A48  D01C               	goto	L14
 13713  014A4A                     l8430:
 13714                           
 13715                           ; BSR set to: 0
 13716                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 13717  014A4A  0EFF               	movlw	255
 13718  014A4C  0100               	movlb	0	; () banked
 13719  014A4E  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 13720  014A50  0EFF               	movlw	255
 13721  014A52  0100               	movlb	0	; () banked
 13722  014A54  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13723  014A56  0100               	movlb	0	; () banked
 13724  014A58  5197               	movf	LCD_write_integer@index& (0+255),w,b
 13725  014A5A  0100               	movlb	0	; () banked
 13726  014A5C  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13727  014A5E  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13728  014A60  0100               	movlb	0	; () banked
 13729  014A62  518C               	movf	??_LCD_write_integer& (0+255),w,b
 13730  014A64  0100               	movlb	0	; () banked
 13731  014A66  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13732  014A68  0100               	movlb	0	; () banked
 13733  014A6A  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13734  014A6C  0100               	movlb	0	; () banked
 13735  014A6E  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13736  014A70  0E91               	movlw	low LCD_write_integer@convertedInt
 13737  014A72  0100               	movlb	0	; () banked
 13738  014A74  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13739  014A76  6ED9               	movwf	fsr2l,c
 13740  014A78  0E00               	movlw	high LCD_write_integer@convertedInt
 13741  014A7A  0100               	movlb	0	; () banked
 13742  014A7C  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13743  014A7E  6EDA               	movwf	fsr2h,c
 13744  014A80  0E30               	movlw	48
 13745  014A82                     L14:
 13746  014A82  6EDF               	movwf	indf2,c
 13747                           
 13748                           ; BSR set to: 0
 13749                           
 13750                           ; BSR set to: 0
 13751  014A84  0100               	movlb	0	; () banked
 13752  014A86  0797               	decf	LCD_write_integer@index& (0+255),f,b
 13753  014A88  D794               	goto	l8420
 13754  014A8A                     l8436:
 13755                           
 13756                           ; BSR set to: 0
 13757  014A8A  0EFF               	movlw	255
 13758  014A8C  0100               	movlb	0	; () banked
 13759  014A8E  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 13760  014A90  0EFF               	movlw	255
 13761  014A92  0100               	movlb	0	; () banked
 13762  014A94  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13763  014A96  0100               	movlb	0	; () banked
 13764  014A98  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13765  014A9A  0100               	movlb	0	; () banked
 13766  014A9C  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13767  014A9E  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13768  014AA0  0100               	movlb	0	; () banked
 13769  014AA2  518C               	movf	??_LCD_write_integer& (0+255),w,b
 13770  014AA4  0100               	movlb	0	; () banked
 13771  014AA6  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13772  014AA8  0100               	movlb	0	; () banked
 13773  014AAA  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13774  014AAC  0100               	movlb	0	; () banked
 13775  014AAE  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13776  014AB0  0E91               	movlw	low LCD_write_integer@convertedInt
 13777  014AB2  0100               	movlb	0	; () banked
 13778  014AB4  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13779  014AB6  6ED9               	movwf	fsr2l,c
 13780  014AB8  0E00               	movlw	high LCD_write_integer@convertedInt
 13781  014ABA  0100               	movlb	0	; () banked
 13782  014ABC  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13783  014ABE  6EDA               	movwf	fsr2h,c
 13784  014AC0  0E3A               	movlw	58
 13785  014AC2  60DF               	cpfslt	indf2,c
 13786  014AC4  D772               	goto	l8418
 13787                           
 13788                           ; BSR set to: 0
 13789  014AC6  0EFF               	movlw	255
 13790  014AC8  0100               	movlb	0	; () banked
 13791  014ACA  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 13792  014ACC  0EFF               	movlw	255
 13793  014ACE  0100               	movlb	0	; () banked
 13794  014AD0  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13795  014AD2  0100               	movlb	0	; () banked
 13796  014AD4  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13797  014AD6  0100               	movlb	0	; () banked
 13798  014AD8  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13799  014ADA  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13800  014ADC  0100               	movlb	0	; () banked
 13801  014ADE  518C               	movf	??_LCD_write_integer& (0+255),w,b
 13802  014AE0  0100               	movlb	0	; () banked
 13803  014AE2  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13804  014AE4  0100               	movlb	0	; () banked
 13805  014AE6  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13806  014AE8  0100               	movlb	0	; () banked
 13807  014AEA  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13808  014AEC  0E91               	movlw	low LCD_write_integer@convertedInt
 13809  014AEE  0100               	movlb	0	; () banked
 13810  014AF0  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13811  014AF2  6ED9               	movwf	fsr2l,c
 13812  014AF4  0E00               	movlw	high LCD_write_integer@convertedInt
 13813  014AF6  0100               	movlb	0	; () banked
 13814  014AF8  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13815  014AFA  6EDA               	movwf	fsr2h,c
 13816  014AFC  0E2F               	movlw	47
 13817  014AFE  64DF               	cpfsgt	indf2,c
 13818  014B00  D754               	goto	l8418
 13819  014B02                     l8440:
 13820                           
 13821                           ; BSR set to: 0
 13822                           ;src\LCD_44780.c: 243: }
 13823                           ;src\LCD_44780.c: 245: }
 13824                           ;src\LCD_44780.c: 246: }
 13825                           ;src\LCD_44780.c: 247: }
 13826                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 13827  014B02  0E91               	movlw	low LCD_write_integer@convertedInt
 13828  014B04  0100               	movlb	0	; () banked
 13829  014B06  6F81               	movwf	LCD_write_string@buffer& (0+255),b
 13830  014B08  0E00               	movlw	high LCD_write_integer@convertedInt
 13831  014B0A  0100               	movlb	0	; () banked
 13832  014B0C  6F82               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 13833  014B0E  EC34  F0B0         	call	_LCD_write_string	;wreg free
 13834  014B12  0012               	return		;funcret
 13835  014B14                     __end_of_LCD_write_integer:
 13836                           	opt stack 0
 13837                           tblptru	equ	0xFF8
 13838                           tblptrh	equ	0xFF7
 13839                           tblptrl	equ	0xFF6
 13840                           tablat	equ	0xFF5
 13841                           prodh	equ	0xFF4
 13842                           prodl	equ	0xFF3
 13843                           intcon	equ	0xFF2
 13844                           postinc0	equ	0xFEE
 13845                           wreg	equ	0xFE8
 13846                           indf1	equ	0xFE7
 13847                           plusw1	equ	0xFE3
 13848                           fsr1h	equ	0xFE2
 13849                           fsr1l	equ	0xFE1
 13850                           indf2	equ	0xFDF
 13851                           postinc2	equ	0xFDE
 13852                           plusw2	equ	0xFDB
 13853                           fsr2h	equ	0xFDA
 13854                           fsr2l	equ	0xFD9
 13855                           status	equ	0xFD8
 13856                           
 13857 ;; *************** function _itoa *****************
 13858 ;; Defined at:
 13859 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 13860 ;; Parameters:    Size  Location     Type
 13861 ;;  buf             2   32[BANK0 ] PTR unsigned char 
 13862 ;;		 -> LCD_write_integer@convertedInt(6), 
 13863 ;;  val             2   34[BANK0 ] int 
 13864 ;;  base            2   36[BANK0 ] int 
 13865 ;; Auto vars:     Size  Location     Type
 13866 ;;  cp              2   38[BANK0 ] PTR unsigned char 
 13867 ;;		 -> LCD_write_integer@convertedInt(6), 
 13868 ;; Return value:  Size  Location     Type
 13869 ;;                  2   32[BANK0 ] PTR unsigned char 
 13870 ;; Registers used:
 13871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13872 ;; Tracked objects:
 13873 ;;		On entry : 0/0
 13874 ;;		On exit  : 0/0
 13875 ;;		Unchanged: 0/0
 13876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13877 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13878 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13880 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13881 ;;Total ram usage:        8 bytes
 13882 ;; Hardware stack levels used:    1
 13883 ;; Hardware stack levels required when called:    5
 13884 ;; This function calls:
 13885 ;;		_utoa
 13886 ;; This function is called by:
 13887 ;;		_LCD_write_integer
 13888 ;; This function uses a non-reentrant model
 13889 ;;
 13890                           
 13891                           	psect	text28
 13892  015E38                     __ptext28:
 13893                           	opt stack 0
 13894  015E38                     _itoa:
 13895                           	opt stack 23
 13896                           
 13897                           ;incstack = 0
 13898  015E38  C080  F086         	movff	itoa@buf,itoa@cp
 13899  015E3C  C081  F087         	movff	itoa@buf+1,itoa@cp+1
 13900  015E40  0100               	movlb	0	; () banked
 13901  015E42  AF83               	btfss	(itoa@val+1)& (0+255),7,b
 13902  015E44  D00E               	goto	l5610
 13903                           
 13904                           ; BSR set to: 0
 13905  015E46  C080  FFD9         	movff	itoa@buf,fsr2l
 13906  015E4A  C081  FFDA         	movff	itoa@buf+1,fsr2h
 13907  015E4E  0E2D               	movlw	45
 13908  015E50  6EDF               	movwf	indf2,c
 13909                           
 13910                           ; BSR set to: 0
 13911  015E52  0100               	movlb	0	; () banked
 13912  015E54  4B80               	infsnz	itoa@buf& (0+255),f,b
 13913  015E56  2B81               	incf	(itoa@buf+1)& (0+255),f,b
 13914                           
 13915                           ; BSR set to: 0
 13916  015E58  0100               	movlb	0	; () banked
 13917  015E5A  6D82               	negf	itoa@val& (0+255),b
 13918  015E5C  1F83               	comf	(itoa@val+1)& (0+255),f,b
 13919  015E5E  B0D8               	btfsc	status,0,c
 13920  015E60  2B83               	incf	(itoa@val+1)& (0+255),f,b
 13921  015E62                     l5610:
 13922                           
 13923                           ; BSR set to: 0
 13924  015E62  C080  F077         	movff	itoa@buf,utoa@buf
 13925  015E66  C081  F078         	movff	itoa@buf+1,utoa@buf+1
 13926  015E6A  C082  F079         	movff	itoa@val,utoa@val
 13927  015E6E  C083  F07A         	movff	itoa@val+1,utoa@val+1
 13928  015E72  C084  F07B         	movff	itoa@base,utoa@base
 13929  015E76  C085  F07C         	movff	itoa@base+1,utoa@base+1
 13930  015E7A  EC91  F0AB         	call	_utoa	;wreg free
 13931  015E7E  0012               	return	
 13932  015E80                     __end_of_itoa:
 13933                           	opt stack 0
 13934                           tblptru	equ	0xFF8
 13935                           tblptrh	equ	0xFF7
 13936                           tblptrl	equ	0xFF6
 13937                           tablat	equ	0xFF5
 13938                           prodh	equ	0xFF4
 13939                           prodl	equ	0xFF3
 13940                           intcon	equ	0xFF2
 13941                           postinc0	equ	0xFEE
 13942                           wreg	equ	0xFE8
 13943                           indf1	equ	0xFE7
 13944                           plusw1	equ	0xFE3
 13945                           fsr1h	equ	0xFE2
 13946                           fsr1l	equ	0xFE1
 13947                           indf2	equ	0xFDF
 13948                           postinc2	equ	0xFDE
 13949                           plusw2	equ	0xFDB
 13950                           fsr2h	equ	0xFDA
 13951                           fsr2l	equ	0xFD9
 13952                           status	equ	0xFD8
 13953                           
 13954 ;; *************** function _utoa *****************
 13955 ;; Defined at:
 13956 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 13957 ;; Parameters:    Size  Location     Type
 13958 ;;  buf             2   23[BANK0 ] PTR unsigned char 
 13959 ;;		 -> LCD_write_integer@convertedInt(6), 
 13960 ;;  val             2   25[BANK0 ] unsigned int 
 13961 ;;  base            2   27[BANK0 ] int 
 13962 ;; Auto vars:     Size  Location     Type
 13963 ;;  v               2   29[BANK0 ] unsigned int 
 13964 ;;  c               1   31[BANK0 ] unsigned char 
 13965 ;; Return value:  Size  Location     Type
 13966 ;;                  2   23[BANK0 ] PTR unsigned char 
 13967 ;; Registers used:
 13968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13969 ;; Tracked objects:
 13970 ;;		On entry : 0/0
 13971 ;;		On exit  : 0/0
 13972 ;;		Unchanged: 0/0
 13973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13974 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13975 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13977 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13978 ;;Total ram usage:        9 bytes
 13979 ;; Hardware stack levels used:    1
 13980 ;; Hardware stack levels required when called:    4
 13981 ;; This function calls:
 13982 ;;		___lwdiv
 13983 ;;		___lwmod
 13984 ;; This function is called by:
 13985 ;;		_itoa
 13986 ;; This function uses a non-reentrant model
 13987 ;;
 13988                           
 13989                           	psect	text29
 13990  015722                     __ptext29:
 13991                           	opt stack 0
 13992  015722                     _utoa:
 13993                           	opt stack 23
 13994                           
 13995                           ;incstack = 0
 13996  015722  C079  F07D         	movff	utoa@val,utoa@v
 13997  015726  C07A  F07E         	movff	utoa@val+1,utoa@v+1
 13998  01572A                     l5132:
 13999  01572A  C07D  F070         	movff	utoa@v,___lwdiv@dividend
 14000  01572E  C07E  F071         	movff	utoa@v+1,___lwdiv@dividend+1
 14001  015732  C07B  F072         	movff	utoa@base,___lwdiv@divisor
 14002  015736  C07C  F073         	movff	utoa@base+1,___lwdiv@divisor+1
 14003  01573A  EC3B  F0AE         	call	___lwdiv	;wreg free
 14004  01573E  C070  F07D         	movff	?___lwdiv,utoa@v
 14005  015742  C071  F07E         	movff	?___lwdiv+1,utoa@v+1
 14006  015746  0100               	movlb	0	; () banked
 14007  015748  4B77               	infsnz	utoa@buf& (0+255),f,b
 14008  01574A  2B78               	incf	(utoa@buf+1)& (0+255),f,b
 14009                           
 14010                           ; BSR set to: 0
 14011  01574C  0100               	movlb	0	; () banked
 14012  01574E  517D               	movf	utoa@v& (0+255),w,b
 14013  015750  0100               	movlb	0	; () banked
 14014  015752  117E               	iorwf	(utoa@v+1)& (0+255),w,b
 14015  015754  A4D8               	btfss	status,2,c
 14016  015756  D7E9               	goto	l5132
 14017                           
 14018                           ; BSR set to: 0
 14019                           
 14020                           ; BSR set to: 0
 14021  015758  C077  FFD9         	movff	utoa@buf,fsr2l
 14022  01575C  C078  FFDA         	movff	utoa@buf+1,fsr2h
 14023  015760  0E00               	movlw	0
 14024  015762  6EDF               	movwf	indf2,c
 14025                           
 14026                           ; BSR set to: 0
 14027  015764  0100               	movlb	0	; () banked
 14028  015766  0777               	decf	utoa@buf& (0+255),f,b
 14029  015768  A0D8               	btfss	status,0,c
 14030  01576A  0778               	decf	(utoa@buf+1)& (0+255),f,b
 14031  01576C                     l5142:
 14032                           
 14033                           ; BSR set to: 0
 14034  01576C  C079  F070         	movff	utoa@val,___lwmod@dividend
 14035  015770  C07A  F071         	movff	utoa@val+1,___lwmod@dividend+1
 14036  015774  C07B  F072         	movff	utoa@base,___lwmod@divisor
 14037  015778  C07C  F073         	movff	utoa@base+1,___lwmod@divisor+1
 14038  01577C  EC77  F0AE         	call	___lwmod	;wreg free
 14039  015780  0100               	movlb	0	; () banked
 14040  015782  5170               	movf	?___lwmod& (0+255),w,b
 14041  015784  0100               	movlb	0	; () banked
 14042  015786  6F7F               	movwf	utoa@c& (0+255),b
 14043                           
 14044                           ; BSR set to: 0
 14045  015788  C079  F070         	movff	utoa@val,___lwdiv@dividend
 14046  01578C  C07A  F071         	movff	utoa@val+1,___lwdiv@dividend+1
 14047  015790  C07B  F072         	movff	utoa@base,___lwdiv@divisor
 14048  015794  C07C  F073         	movff	utoa@base+1,___lwdiv@divisor+1
 14049  015798  EC3B  F0AE         	call	___lwdiv	;wreg free
 14050  01579C  C070  F079         	movff	?___lwdiv,utoa@val
 14051  0157A0  C071  F07A         	movff	?___lwdiv+1,utoa@val+1
 14052  0157A4  0E09               	movlw	9
 14053  0157A6  0100               	movlb	0	; () banked
 14054  0157A8  657F               	cpfsgt	utoa@c& (0+255),b
 14055  0157AA  D003               	goto	l1362
 14056                           
 14057                           ; BSR set to: 0
 14058  0157AC  0E07               	movlw	7
 14059  0157AE  0100               	movlb	0	; () banked
 14060  0157B0  277F               	addwf	utoa@c& (0+255),f,b
 14061  0157B2                     l1362:
 14062                           
 14063                           ; BSR set to: 0
 14064  0157B2  0E30               	movlw	48
 14065  0157B4  0100               	movlb	0	; () banked
 14066  0157B6  277F               	addwf	utoa@c& (0+255),f,b
 14067                           
 14068                           ; BSR set to: 0
 14069  0157B8  C077  FFD9         	movff	utoa@buf,fsr2l
 14070  0157BC  C078  FFDA         	movff	utoa@buf+1,fsr2h
 14071  0157C0  C07F  FFDF         	movff	utoa@c,indf2
 14072                           
 14073                           ; BSR set to: 0
 14074  0157C4  0100               	movlb	0	; () banked
 14075  0157C6  0777               	decf	utoa@buf& (0+255),f,b
 14076  0157C8  A0D8               	btfss	status,0,c
 14077  0157CA  0778               	decf	(utoa@buf+1)& (0+255),f,b
 14078                           
 14079                           ; BSR set to: 0
 14080  0157CC  0100               	movlb	0	; () banked
 14081  0157CE  5179               	movf	utoa@val& (0+255),w,b
 14082  0157D0  0100               	movlb	0	; () banked
 14083  0157D2  117A               	iorwf	(utoa@val+1)& (0+255),w,b
 14084  0157D4  A4D8               	btfss	status,2,c
 14085  0157D6  D7CA               	goto	l5142
 14086                           
 14087                           ; BSR set to: 0
 14088                           ;	Return value of _utoa is never used
 14089                           
 14090                           ; BSR set to: 0
 14091  0157D8  0100               	movlb	0	; () banked
 14092  0157DA  4B77               	infsnz	utoa@buf& (0+255),f,b
 14093  0157DC  2B78               	incf	(utoa@buf+1)& (0+255),f,b
 14094  0157DE  0012               	return	
 14095  0157E0                     __end_of_utoa:
 14096                           	opt stack 0
 14097                           tblptru	equ	0xFF8
 14098                           tblptrh	equ	0xFF7
 14099                           tblptrl	equ	0xFF6
 14100                           tablat	equ	0xFF5
 14101                           prodh	equ	0xFF4
 14102                           prodl	equ	0xFF3
 14103                           intcon	equ	0xFF2
 14104                           postinc0	equ	0xFEE
 14105                           wreg	equ	0xFE8
 14106                           indf1	equ	0xFE7
 14107                           plusw1	equ	0xFE3
 14108                           fsr1h	equ	0xFE2
 14109                           fsr1l	equ	0xFE1
 14110                           indf2	equ	0xFDF
 14111                           postinc2	equ	0xFDE
 14112                           plusw2	equ	0xFDB
 14113                           fsr2h	equ	0xFDA
 14114                           fsr2l	equ	0xFD9
 14115                           status	equ	0xFD8
 14116                           
 14117 ;; *************** function ___lwmod *****************
 14118 ;; Defined at:
 14119 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14120 ;; Parameters:    Size  Location     Type
 14121 ;;  dividend        2   16[BANK0 ] unsigned int 
 14122 ;;  divisor         2   18[BANK0 ] unsigned int 
 14123 ;; Auto vars:     Size  Location     Type
 14124 ;;  counter         1   20[BANK0 ] unsigned char 
 14125 ;; Return value:  Size  Location     Type
 14126 ;;                  2   16[BANK0 ] unsigned int 
 14127 ;; Registers used:
 14128 ;;		wreg, status,2, status,0
 14129 ;; Tracked objects:
 14130 ;;		On entry : 0/0
 14131 ;;		On exit  : 0/0
 14132 ;;		Unchanged: 0/0
 14133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14134 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14135 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14137 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14138 ;;Total ram usage:        5 bytes
 14139 ;; Hardware stack levels used:    1
 14140 ;; Hardware stack levels required when called:    3
 14141 ;; This function calls:
 14142 ;;		Nothing
 14143 ;; This function is called by:
 14144 ;;		_utoa
 14145 ;; This function uses a non-reentrant model
 14146 ;;
 14147                           
 14148                           	psect	text30
 14149  015CEE                     __ptext30:
 14150                           	opt stack 0
 14151  015CEE                     ___lwmod:
 14152                           	opt stack 23
 14153                           
 14154                           ; BSR set to: 0
 14155                           ;incstack = 0
 14156  015CEE  0100               	movlb	0	; () banked
 14157  015CF0  5172               	movf	___lwmod@divisor& (0+255),w,b
 14158  015CF2  0100               	movlb	0	; () banked
 14159  015CF4  1173               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14160  015CF6  B4D8               	btfsc	status,2,c
 14161  015CF8  D026               	goto	l1451
 14162                           
 14163                           ; BSR set to: 0
 14164  015CFA  0E01               	movlw	1
 14165  015CFC  0100               	movlb	0	; () banked
 14166  015CFE  6F74               	movwf	___lwmod@counter& (0+255),b
 14167  015D00  D006               	goto	l4690
 14168  015D02                     l4688:
 14169                           
 14170                           ; BSR set to: 0
 14171  015D02  0100               	movlb	0	; () banked
 14172  015D04  90D8               	bcf	status,0,c
 14173  015D06  3772               	rlcf	___lwmod@divisor& (0+255),f,b
 14174  015D08  3773               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14175  015D0A  0100               	movlb	0	; () banked
 14176  015D0C  2B74               	incf	___lwmod@counter& (0+255),f,b
 14177  015D0E                     l4690:
 14178                           
 14179                           ; BSR set to: 0
 14180  015D0E  0100               	movlb	0	; () banked
 14181  015D10  AF73               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14182  015D12  D7F7               	goto	l4688
 14183  015D14                     l4692:
 14184                           
 14185                           ; BSR set to: 0
 14186  015D14  0100               	movlb	0	; () banked
 14187  015D16  5172               	movf	___lwmod@divisor& (0+255),w,b
 14188  015D18  0100               	movlb	0	; () banked
 14189  015D1A  5D70               	subwf	___lwmod@dividend& (0+255),w,b
 14190  015D1C  0100               	movlb	0	; () banked
 14191  015D1E  5173               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14192  015D20  0100               	movlb	0	; () banked
 14193  015D22  5971               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14194  015D24  A0D8               	btfss	status,0,c
 14195  015D26  D008               	goto	l4696
 14196                           
 14197                           ; BSR set to: 0
 14198  015D28  0100               	movlb	0	; () banked
 14199  015D2A  5172               	movf	___lwmod@divisor& (0+255),w,b
 14200  015D2C  0100               	movlb	0	; () banked
 14201  015D2E  5F70               	subwf	___lwmod@dividend& (0+255),f,b
 14202  015D30  0100               	movlb	0	; () banked
 14203  015D32  5173               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14204  015D34  0100               	movlb	0	; () banked
 14205  015D36  5B71               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14206  015D38                     l4696:
 14207                           
 14208                           ; BSR set to: 0
 14209  015D38  0100               	movlb	0	; () banked
 14210  015D3A  90D8               	bcf	status,0,c
 14211  015D3C  3373               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14212  015D3E  3372               	rrcf	___lwmod@divisor& (0+255),f,b
 14213                           
 14214                           ; BSR set to: 0
 14215  015D40  0100               	movlb	0	; () banked
 14216  015D42  2F74               	decfsz	___lwmod@counter& (0+255),f,b
 14217  015D44  D7E7               	goto	l4692
 14218  015D46                     l1451:
 14219                           
 14220                           ; BSR set to: 0
 14221  015D46  C070  F070         	movff	___lwmod@dividend,?___lwmod
 14222  015D4A  C071  F071         	movff	___lwmod@dividend+1,?___lwmod+1
 14223                           
 14224                           ; BSR set to: 0
 14225  015D4E  0012               	return		;funcret
 14226  015D50                     __end_of___lwmod:
 14227                           	opt stack 0
 14228                           tblptru	equ	0xFF8
 14229                           tblptrh	equ	0xFF7
 14230                           tblptrl	equ	0xFF6
 14231                           tablat	equ	0xFF5
 14232                           prodh	equ	0xFF4
 14233                           prodl	equ	0xFF3
 14234                           intcon	equ	0xFF2
 14235                           postinc0	equ	0xFEE
 14236                           wreg	equ	0xFE8
 14237                           indf1	equ	0xFE7
 14238                           plusw1	equ	0xFE3
 14239                           fsr1h	equ	0xFE2
 14240                           fsr1l	equ	0xFE1
 14241                           indf2	equ	0xFDF
 14242                           postinc2	equ	0xFDE
 14243                           plusw2	equ	0xFDB
 14244                           fsr2h	equ	0xFDA
 14245                           fsr2l	equ	0xFD9
 14246                           status	equ	0xFD8
 14247                           
 14248 ;; *************** function ___lwdiv *****************
 14249 ;; Defined at:
 14250 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 14251 ;; Parameters:    Size  Location     Type
 14252 ;;  dividend        2   16[BANK0 ] unsigned int 
 14253 ;;  divisor         2   18[BANK0 ] unsigned int 
 14254 ;; Auto vars:     Size  Location     Type
 14255 ;;  quotient        2   20[BANK0 ] unsigned int 
 14256 ;;  counter         1   22[BANK0 ] unsigned char 
 14257 ;; Return value:  Size  Location     Type
 14258 ;;                  2   16[BANK0 ] unsigned int 
 14259 ;; Registers used:
 14260 ;;		wreg, status,2, status,0
 14261 ;; Tracked objects:
 14262 ;;		On entry : 0/0
 14263 ;;		On exit  : 0/0
 14264 ;;		Unchanged: 0/0
 14265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14266 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14267 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14269 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14270 ;;Total ram usage:        7 bytes
 14271 ;; Hardware stack levels used:    1
 14272 ;; Hardware stack levels required when called:    3
 14273 ;; This function calls:
 14274 ;;		Nothing
 14275 ;; This function is called by:
 14276 ;;		_utoa
 14277 ;; This function uses a non-reentrant model
 14278 ;;
 14279                           
 14280                           	psect	text31
 14281  015C76                     __ptext31:
 14282                           	opt stack 0
 14283  015C76                     ___lwdiv:
 14284                           	opt stack 23
 14285                           
 14286                           ; BSR set to: 0
 14287                           ;incstack = 0
 14288  015C76  0E00               	movlw	0
 14289  015C78  0100               	movlb	0	; () banked
 14290  015C7A  6F75               	movwf	(___lwdiv@quotient+1)& (0+255),b
 14291  015C7C  0E00               	movlw	0
 14292  015C7E  6F74               	movwf	___lwdiv@quotient& (0+255),b
 14293                           
 14294                           ; BSR set to: 0
 14295  015C80  0100               	movlb	0	; () banked
 14296  015C82  5172               	movf	___lwdiv@divisor& (0+255),w,b
 14297  015C84  0100               	movlb	0	; () banked
 14298  015C86  1173               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 14299  015C88  B4D8               	btfsc	status,2,c
 14300  015C8A  D02C               	goto	l1441
 14301                           
 14302                           ; BSR set to: 0
 14303  015C8C  0E01               	movlw	1
 14304  015C8E  0100               	movlb	0	; () banked
 14305  015C90  6F76               	movwf	___lwdiv@counter& (0+255),b
 14306  015C92  D006               	goto	l4670
 14307  015C94                     l4668:
 14308                           
 14309                           ; BSR set to: 0
 14310  015C94  0100               	movlb	0	; () banked
 14311  015C96  90D8               	bcf	status,0,c
 14312  015C98  3772               	rlcf	___lwdiv@divisor& (0+255),f,b
 14313  015C9A  3773               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 14314  015C9C  0100               	movlb	0	; () banked
 14315  015C9E  2B76               	incf	___lwdiv@counter& (0+255),f,b
 14316  015CA0                     l4670:
 14317                           
 14318                           ; BSR set to: 0
 14319  015CA0  0100               	movlb	0	; () banked
 14320  015CA2  AF73               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 14321  015CA4  D7F7               	goto	l4668
 14322  015CA6                     l4672:
 14323                           
 14324                           ; BSR set to: 0
 14325  015CA6  0100               	movlb	0	; () banked
 14326  015CA8  90D8               	bcf	status,0,c
 14327  015CAA  3774               	rlcf	___lwdiv@quotient& (0+255),f,b
 14328  015CAC  3775               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 14329                           
 14330                           ; BSR set to: 0
 14331  015CAE  0100               	movlb	0	; () banked
 14332  015CB0  5172               	movf	___lwdiv@divisor& (0+255),w,b
 14333  015CB2  0100               	movlb	0	; () banked
 14334  015CB4  5D70               	subwf	___lwdiv@dividend& (0+255),w,b
 14335  015CB6  0100               	movlb	0	; () banked
 14336  015CB8  5173               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14337  015CBA  0100               	movlb	0	; () banked
 14338  015CBC  5971               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 14339  015CBE  A0D8               	btfss	status,0,c
 14340  015CC0  D00A               	goto	l4680
 14341                           
 14342                           ; BSR set to: 0
 14343  015CC2  0100               	movlb	0	; () banked
 14344  015CC4  5172               	movf	___lwdiv@divisor& (0+255),w,b
 14345  015CC6  0100               	movlb	0	; () banked
 14346  015CC8  5F70               	subwf	___lwdiv@dividend& (0+255),f,b
 14347  015CCA  0100               	movlb	0	; () banked
 14348  015CCC  5173               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14349  015CCE  0100               	movlb	0	; () banked
 14350  015CD0  5B71               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 14351                           
 14352                           ; BSR set to: 0
 14353  015CD2  0100               	movlb	0	; () banked
 14354  015CD4  8174               	bsf	___lwdiv@quotient& (0+255),0,b
 14355  015CD6                     l4680:
 14356                           
 14357                           ; BSR set to: 0
 14358  015CD6  0100               	movlb	0	; () banked
 14359  015CD8  90D8               	bcf	status,0,c
 14360  015CDA  3373               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 14361  015CDC  3372               	rrcf	___lwdiv@divisor& (0+255),f,b
 14362                           
 14363                           ; BSR set to: 0
 14364  015CDE  0100               	movlb	0	; () banked
 14365  015CE0  2F76               	decfsz	___lwdiv@counter& (0+255),f,b
 14366  015CE2  D7E1               	goto	l4672
 14367  015CE4                     l1441:
 14368                           
 14369                           ; BSR set to: 0
 14370  015CE4  C074  F070         	movff	___lwdiv@quotient,?___lwdiv
 14371  015CE8  C075  F071         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14372                           
 14373                           ; BSR set to: 0
 14374  015CEC  0012               	return		;funcret
 14375  015CEE                     __end_of___lwdiv:
 14376                           	opt stack 0
 14377                           tblptru	equ	0xFF8
 14378                           tblptrh	equ	0xFF7
 14379                           tblptrl	equ	0xFF6
 14380                           tablat	equ	0xFF5
 14381                           prodh	equ	0xFF4
 14382                           prodl	equ	0xFF3
 14383                           intcon	equ	0xFF2
 14384                           postinc0	equ	0xFEE
 14385                           wreg	equ	0xFE8
 14386                           indf1	equ	0xFE7
 14387                           plusw1	equ	0xFE3
 14388                           fsr1h	equ	0xFE2
 14389                           fsr1l	equ	0xFE1
 14390                           indf2	equ	0xFDF
 14391                           postinc2	equ	0xFDE
 14392                           plusw2	equ	0xFDB
 14393                           fsr2h	equ	0xFDA
 14394                           fsr2l	equ	0xFD9
 14395                           status	equ	0xFD8
 14396                           
 14397 ;; *************** function _LCD_write_string *****************
 14398 ;; Defined at:
 14399 ;;		line 194 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14400 ;; Parameters:    Size  Location     Type
 14401 ;;  buffer          2   33[BANK0 ] PTR unsigned char 
 14402 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 14403 ;; Auto vars:     Size  Location     Type
 14404 ;;		None
 14405 ;; Return value:  Size  Location     Type
 14406 ;;		None               void
 14407 ;; Registers used:
 14408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14409 ;; Tracked objects:
 14410 ;;		On entry : 0/0
 14411 ;;		On exit  : 0/0
 14412 ;;		Unchanged: 0/0
 14413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14414 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14417 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14418 ;;Total ram usage:        2 bytes
 14419 ;; Hardware stack levels used:    1
 14420 ;; Hardware stack levels required when called:    8
 14421 ;; This function calls:
 14422 ;;		_LCD_write_char
 14423 ;; This function is called by:
 14424 ;;		_LCD_write_integer
 14425 ;;		_LCD_Handler
 14426 ;; This function uses a non-reentrant model
 14427 ;;
 14428                           
 14429                           	psect	text32
 14430  016068                     __ptext32:
 14431                           	opt stack 0
 14432  016068                     _LCD_write_string:
 14433                           	opt stack 21
 14434                           
 14435                           ;src\LCD_44780.c: 197: while(*buffer){
 14436                           
 14437                           ; BSR set to: 0
 14438                           ;incstack = 0
 14439  016068  D00A               	goto	l8046
 14440  01606A                     l8042:
 14441                           
 14442                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 14443  01606A  C081  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14444  01606E  C082  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14445  016072  50DF               	movf	indf2,w,c
 14446  016074  ECF0  F0AD         	call	_LCD_write_char
 14447                           
 14448                           ;src\LCD_44780.c: 202: buffer++;
 14449  016078  0100               	movlb	0	; () banked
 14450  01607A  4B81               	infsnz	LCD_write_string@buffer& (0+255),f,b
 14451  01607C  2B82               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 14452  01607E                     l8046:
 14453  01607E  C081  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14454  016082  C082  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14455  016086  50DF               	movf	indf2,w,c
 14456  016088  B4D8               	btfsc	status,2,c
 14457  01608A  0012               	return	
 14458  01608C  D7EE               	goto	l8042
 14459  01608E                     __end_of_LCD_write_string:
 14460                           	opt stack 0
 14461                           tblptru	equ	0xFF8
 14462                           tblptrh	equ	0xFF7
 14463                           tblptrl	equ	0xFF6
 14464                           tablat	equ	0xFF5
 14465                           prodh	equ	0xFF4
 14466                           prodl	equ	0xFF3
 14467                           intcon	equ	0xFF2
 14468                           postinc0	equ	0xFEE
 14469                           wreg	equ	0xFE8
 14470                           indf1	equ	0xFE7
 14471                           plusw1	equ	0xFE3
 14472                           fsr1h	equ	0xFE2
 14473                           fsr1l	equ	0xFE1
 14474                           indf2	equ	0xFDF
 14475                           postinc2	equ	0xFDE
 14476                           plusw2	equ	0xFDB
 14477                           fsr2h	equ	0xFDA
 14478                           fsr2l	equ	0xFD9
 14479                           status	equ	0xFD8
 14480                           
 14481 ;; *************** function _LCD_write_char *****************
 14482 ;; Defined at:
 14483 ;;		line 145 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14484 ;; Parameters:    Size  Location     Type
 14485 ;;  value           1    wreg     unsigned char 
 14486 ;; Auto vars:     Size  Location     Type
 14487 ;;  value           1   32[BANK0 ] unsigned char 
 14488 ;;  D0              1   31[BANK0 ] unsigned char 
 14489 ;;  D1              1   30[BANK0 ] unsigned char 
 14490 ;;  D2              1   29[BANK0 ] unsigned char 
 14491 ;;  D3              1   28[BANK0 ] unsigned char 
 14492 ;; Return value:  Size  Location     Type
 14493 ;;		None               void
 14494 ;; Registers used:
 14495 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14496 ;; Tracked objects:
 14497 ;;		On entry : 0/0
 14498 ;;		On exit  : 0/0
 14499 ;;		Unchanged: 0/0
 14500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14502 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14504 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14505 ;;Total ram usage:        5 bytes
 14506 ;; Hardware stack levels used:    1
 14507 ;; Hardware stack levels required when called:    7
 14508 ;; This function calls:
 14509 ;;		_LCD_send_command
 14510 ;; This function is called by:
 14511 ;;		_LCD_write_message
 14512 ;;		_LCD_write_string
 14513 ;; This function uses a non-reentrant model
 14514 ;;
 14515                           
 14516                           	psect	text33
 14517  015BE0                     __ptext33:
 14518                           	opt stack 0
 14519  015BE0                     _LCD_write_char:
 14520                           	opt stack 22
 14521                           
 14522                           ;incstack = 0
 14523                           ;LCD_write_char@value stored from wreg
 14524  015BE0  0100               	movlb	0	; () banked
 14525  015BE2  6F80               	movwf	LCD_write_char@value& (0+255),b
 14526                           
 14527                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 14528                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 14529  015BE4  848D               	bsf	3981,2,c	;volatile
 14530                           
 14531                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 14532  015BE6  0100               	movlb	0	; () banked
 14533  015BE8  4580               	rlncf	LCD_write_char@value& (0+255),w,b
 14534  015BEA  0B01               	andlw	1
 14535  015BEC  0100               	movlb	0	; () banked
 14536  015BEE  6F7C               	movwf	LCD_write_char@D3& (0+255),b
 14537                           
 14538                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 14539  015BF0  0100               	movlb	0	; () banked
 14540  015BF2  4580               	rlncf	LCD_write_char@value& (0+255),w,b
 14541  015BF4  46E8               	rlncf	wreg,f,c
 14542  015BF6  0B03               	andlw	3
 14543  015BF8  0B01               	andlw	1
 14544  015BFA  0100               	movlb	0	; () banked
 14545  015BFC  6F7D               	movwf	LCD_write_char@D2& (0+255),b
 14546                           
 14547                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 14548  015BFE  0100               	movlb	0	; () banked
 14549  015C00  3980               	swapf	LCD_write_char@value& (0+255),w,b
 14550  015C02  42E8               	rrncf	wreg,f,c
 14551  015C04  0B07               	andlw	7
 14552  015C06  0B01               	andlw	1
 14553  015C08  0100               	movlb	0	; () banked
 14554  015C0A  6F7E               	movwf	LCD_write_char@D1& (0+255),b
 14555                           
 14556                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 14557  015C0C  0100               	movlb	0	; () banked
 14558  015C0E  3980               	swapf	LCD_write_char@value& (0+255),w,b
 14559  015C10  0B0F               	andlw	15
 14560  015C12  0B01               	andlw	1
 14561  015C14  0100               	movlb	0	; () banked
 14562  015C16  6F7F               	movwf	LCD_write_char@D0& (0+255),b
 14563                           
 14564                           ; BSR set to: 0
 14565                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 14566  015C18  C07D  F078         	movff	LCD_write_char@D2,LCD_send_command@D2
 14567  015C1C  C07E  F079         	movff	LCD_write_char@D1,LCD_send_command@D1
 14568  015C20  C07F  F07A         	movff	LCD_write_char@D0,LCD_send_command@D0
 14569  015C24  0100               	movlb	0	; () banked
 14570  015C26  517C               	movf	LCD_write_char@D3& (0+255),w,b
 14571  015C28  EC62  F0AF         	call	_LCD_send_command
 14572                           
 14573                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 14574  015C2C  0100               	movlb	0	; () banked
 14575  015C2E  3980               	swapf	LCD_write_char@value& (0+255),w,b
 14576  015C30  46E8               	rlncf	wreg,f,c
 14577  015C32  0B1F               	andlw	31
 14578  015C34  0B01               	andlw	1
 14579  015C36  0100               	movlb	0	; () banked
 14580  015C38  6F7C               	movwf	LCD_write_char@D3& (0+255),b
 14581                           
 14582                           ; BSR set to: 0
 14583                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 14584  015C3A  0100               	movlb	0	; () banked
 14585  015C3C  4180               	rrncf	LCD_write_char@value& (0+255),w,b
 14586  015C3E  42E8               	rrncf	wreg,f,c
 14587  015C40  0B3F               	andlw	63
 14588  015C42  0B01               	andlw	1
 14589  015C44  0100               	movlb	0	; () banked
 14590  015C46  6F7D               	movwf	LCD_write_char@D2& (0+255),b
 14591                           
 14592                           ; BSR set to: 0
 14593                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 14594  015C48  0100               	movlb	0	; () banked
 14595  015C4A  90D8               	bcf	status,0,c
 14596  015C4C  3180               	rrcf	LCD_write_char@value& (0+255),w,b
 14597  015C4E  0B01               	andlw	1
 14598  015C50  0100               	movlb	0	; () banked
 14599  015C52  6F7E               	movwf	LCD_write_char@D1& (0+255),b
 14600                           
 14601                           ; BSR set to: 0
 14602                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 14603  015C54  0100               	movlb	0	; () banked
 14604  015C56  5180               	movf	LCD_write_char@value& (0+255),w,b
 14605  015C58  0B01               	andlw	1
 14606  015C5A  0100               	movlb	0	; () banked
 14607  015C5C  6F7F               	movwf	LCD_write_char@D0& (0+255),b
 14608                           
 14609                           ; BSR set to: 0
 14610                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 14611  015C5E  C07D  F078         	movff	LCD_write_char@D2,LCD_send_command@D2
 14612  015C62  C07E  F079         	movff	LCD_write_char@D1,LCD_send_command@D1
 14613  015C66  C07F  F07A         	movff	LCD_write_char@D0,LCD_send_command@D0
 14614  015C6A  0100               	movlb	0	; () banked
 14615  015C6C  517C               	movf	LCD_write_char@D3& (0+255),w,b
 14616  015C6E  EC62  F0AF         	call	_LCD_send_command
 14617                           
 14618                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 14619  015C72  948D               	bcf	3981,2,c	;volatile
 14620  015C74  0012               	return		;funcret
 14621  015C76                     __end_of_LCD_write_char:
 14622                           	opt stack 0
 14623                           tblptru	equ	0xFF8
 14624                           tblptrh	equ	0xFF7
 14625                           tblptrl	equ	0xFF6
 14626                           tablat	equ	0xFF5
 14627                           prodh	equ	0xFF4
 14628                           prodl	equ	0xFF3
 14629                           intcon	equ	0xFF2
 14630                           postinc0	equ	0xFEE
 14631                           wreg	equ	0xFE8
 14632                           indf1	equ	0xFE7
 14633                           plusw1	equ	0xFE3
 14634                           fsr1h	equ	0xFE2
 14635                           fsr1l	equ	0xFE1
 14636                           indf2	equ	0xFDF
 14637                           postinc2	equ	0xFDE
 14638                           plusw2	equ	0xFDB
 14639                           fsr2h	equ	0xFDA
 14640                           fsr2l	equ	0xFD9
 14641                           status	equ	0xFD8
 14642                           
 14643 ;; *************** function _LCD_initialize *****************
 14644 ;; Defined at:
 14645 ;;		line 283 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14646 ;; Parameters:    Size  Location     Type
 14647 ;;  quartz_frequ    1    wreg     unsigned char 
 14648 ;; Auto vars:     Size  Location     Type
 14649 ;;  quartz_frequ    1   30[BANK0 ] unsigned char 
 14650 ;; Return value:  Size  Location     Type
 14651 ;;		None               void
 14652 ;; Registers used:
 14653 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14654 ;; Tracked objects:
 14655 ;;		On entry : 0/0
 14656 ;;		On exit  : 0/0
 14657 ;;		Unchanged: 0/0
 14658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14662 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14663 ;;Total ram usage:        1 bytes
 14664 ;; Hardware stack levels used:    1
 14665 ;; Hardware stack levels required when called:    8
 14666 ;; This function calls:
 14667 ;;		_LCD_clear
 14668 ;;		_LCD_cursor
 14669 ;;		_LCD_send_command
 14670 ;;		_delay_ms
 14671 ;;		_delay_set_quartz
 14672 ;; This function is called by:
 14673 ;;		_main
 14674 ;;		_LCD_Handler
 14675 ;;		_board_initialization
 14676 ;; This function uses a non-reentrant model
 14677 ;;
 14678                           
 14679                           	psect	text34
 14680  0152FE                     __ptext34:
 14681                           	opt stack 0
 14682  0152FE                     _LCD_initialize:
 14683                           	opt stack 21
 14684                           
 14685                           ;incstack = 0
 14686                           ;LCD_initialize@quartz_frequency stored from wreg
 14687  0152FE  0100               	movlb	0	; () banked
 14688  015300  6F7E               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 14689                           
 14690                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 14691  015302  0100               	movlb	0	; () banked
 14692  015304  517E               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 14693  015306  ECC7  F0B0         	call	_delay_set_quartz
 14694                           
 14695                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 14696  01530A  948D               	bcf	3981,2,c	;volatile
 14697                           
 14698                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 14699  01530C  928B               	bcf	3979,1,c	;volatile
 14700                           
 14701                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 14702  01530E  908B               	bcf	3979,0,c	;volatile
 14703                           
 14704                           ;src\LCD_44780.c: 291: delay_ms (100);
 14705  015310  0E00               	movlw	0
 14706  015312  0100               	movlb	0	; () banked
 14707  015314  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14708  015316  0E64               	movlw	100
 14709  015318  6F76               	movwf	delay_ms@value_ms& (0+255),b
 14710  01531A  EC7F  F0AF         	call	_delay_ms	;wreg free
 14711                           
 14712                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 14713  01531E  0E00               	movlw	0
 14714  015320  0100               	movlb	0	; () banked
 14715  015322  6F78               	movwf	LCD_send_command@D2& (0+255),b
 14716  015324  0E01               	movlw	1
 14717  015326  0100               	movlb	0	; () banked
 14718  015328  6F79               	movwf	LCD_send_command@D1& (0+255),b
 14719  01532A  0E01               	movlw	1
 14720  01532C  0100               	movlb	0	; () banked
 14721  01532E  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 14722  015330  0E00               	movlw	0
 14723  015332  EC62  F0AF         	call	_LCD_send_command
 14724                           
 14725                           ;src\LCD_44780.c: 293: delay_ms (100);
 14726  015336  0E00               	movlw	0
 14727  015338  0100               	movlb	0	; () banked
 14728  01533A  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14729  01533C  0E64               	movlw	100
 14730  01533E  6F76               	movwf	delay_ms@value_ms& (0+255),b
 14731  015340  EC7F  F0AF         	call	_delay_ms	;wreg free
 14732                           
 14733                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 14734  015344  0E00               	movlw	0
 14735  015346  0100               	movlb	0	; () banked
 14736  015348  6F78               	movwf	LCD_send_command@D2& (0+255),b
 14737  01534A  0E01               	movlw	1
 14738  01534C  0100               	movlb	0	; () banked
 14739  01534E  6F79               	movwf	LCD_send_command@D1& (0+255),b
 14740  015350  0E01               	movlw	1
 14741  015352  0100               	movlb	0	; () banked
 14742  015354  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 14743  015356  0E00               	movlw	0
 14744  015358  EC62  F0AF         	call	_LCD_send_command
 14745                           
 14746                           ;src\LCD_44780.c: 295: delay_ms (10);
 14747  01535C  0E00               	movlw	0
 14748  01535E  0100               	movlb	0	; () banked
 14749  015360  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14750  015362  0E0A               	movlw	10
 14751  015364  6F76               	movwf	delay_ms@value_ms& (0+255),b
 14752  015366  EC7F  F0AF         	call	_delay_ms	;wreg free
 14753                           
 14754                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 14755  01536A  0E00               	movlw	0
 14756  01536C  0100               	movlb	0	; () banked
 14757  01536E  6F78               	movwf	LCD_send_command@D2& (0+255),b
 14758  015370  0E01               	movlw	1
 14759  015372  0100               	movlb	0	; () banked
 14760  015374  6F79               	movwf	LCD_send_command@D1& (0+255),b
 14761  015376  0E01               	movlw	1
 14762  015378  0100               	movlb	0	; () banked
 14763  01537A  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 14764  01537C  0E00               	movlw	0
 14765  01537E  EC62  F0AF         	call	_LCD_send_command
 14766                           
 14767                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 14768  015382  0E00               	movlw	0
 14769  015384  0100               	movlb	0	; () banked
 14770  015386  6F78               	movwf	LCD_send_command@D2& (0+255),b
 14771  015388  0E01               	movlw	1
 14772  01538A  0100               	movlb	0	; () banked
 14773  01538C  6F79               	movwf	LCD_send_command@D1& (0+255),b
 14774  01538E  0E00               	movlw	0
 14775  015390  0100               	movlb	0	; () banked
 14776  015392  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 14777  015394  0E00               	movlw	0
 14778  015396  EC62  F0AF         	call	_LCD_send_command
 14779                           
 14780                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 14781  01539A  0E00               	movlw	0
 14782  01539C  0100               	movlb	0	; () banked
 14783  01539E  6F78               	movwf	LCD_send_command@D2& (0+255),b
 14784  0153A0  0E01               	movlw	1
 14785  0153A2  0100               	movlb	0	; () banked
 14786  0153A4  6F79               	movwf	LCD_send_command@D1& (0+255),b
 14787  0153A6  0E00               	movlw	0
 14788  0153A8  0100               	movlb	0	; () banked
 14789  0153AA  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 14790  0153AC  0E00               	movlw	0
 14791  0153AE  EC62  F0AF         	call	_LCD_send_command
 14792                           
 14793                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 14794  0153B2  0E00               	movlw	0
 14795  0153B4  0100               	movlb	0	; () banked
 14796  0153B6  6F78               	movwf	LCD_send_command@D2& (0+255),b
 14797  0153B8  0E00               	movlw	0
 14798  0153BA  0100               	movlb	0	; () banked
 14799  0153BC  6F79               	movwf	LCD_send_command@D1& (0+255),b
 14800  0153BE  0E00               	movlw	0
 14801  0153C0  0100               	movlb	0	; () banked
 14802  0153C2  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 14803  0153C4  0E01               	movlw	1
 14804  0153C6  EC62  F0AF         	call	_LCD_send_command
 14805                           
 14806                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 14807  0153CA  0E00               	movlw	0
 14808  0153CC  0100               	movlb	0	; () banked
 14809  0153CE  6F78               	movwf	LCD_send_command@D2& (0+255),b
 14810  0153D0  0E00               	movlw	0
 14811  0153D2  0100               	movlb	0	; () banked
 14812  0153D4  6F79               	movwf	LCD_send_command@D1& (0+255),b
 14813  0153D6  0E00               	movlw	0
 14814  0153D8  0100               	movlb	0	; () banked
 14815  0153DA  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 14816  0153DC  0E00               	movlw	0
 14817  0153DE  EC62  F0AF         	call	_LCD_send_command
 14818                           
 14819                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 14820  0153E2  0E00               	movlw	0
 14821  0153E4  0100               	movlb	0	; () banked
 14822  0153E6  6F78               	movwf	LCD_send_command@D2& (0+255),b
 14823  0153E8  0E00               	movlw	0
 14824  0153EA  0100               	movlb	0	; () banked
 14825  0153EC  6F79               	movwf	LCD_send_command@D1& (0+255),b
 14826  0153EE  0E00               	movlw	0
 14827  0153F0  0100               	movlb	0	; () banked
 14828  0153F2  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 14829  0153F4  0E01               	movlw	1
 14830  0153F6  EC62  F0AF         	call	_LCD_send_command
 14831                           
 14832                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 14833  0153FA  0E00               	movlw	0
 14834  0153FC  0100               	movlb	0	; () banked
 14835  0153FE  6F78               	movwf	LCD_send_command@D2& (0+255),b
 14836  015400  0E00               	movlw	0
 14837  015402  0100               	movlb	0	; () banked
 14838  015404  6F79               	movwf	LCD_send_command@D1& (0+255),b
 14839  015406  0E00               	movlw	0
 14840  015408  0100               	movlb	0	; () banked
 14841  01540A  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 14842  01540C  0E00               	movlw	0
 14843  01540E  EC62  F0AF         	call	_LCD_send_command
 14844                           
 14845                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 14846  015412  0E00               	movlw	0
 14847  015414  0100               	movlb	0	; () banked
 14848  015416  6F78               	movwf	LCD_send_command@D2& (0+255),b
 14849  015418  0E00               	movlw	0
 14850  01541A  0100               	movlb	0	; () banked
 14851  01541C  6F79               	movwf	LCD_send_command@D1& (0+255),b
 14852  01541E  0E01               	movlw	1
 14853  015420  0100               	movlb	0	; () banked
 14854  015422  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 14855  015424  0E00               	movlw	0
 14856  015426  EC62  F0AF         	call	_LCD_send_command
 14857                           
 14858                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 14859  01542A  0E00               	movlw	0
 14860  01542C  0100               	movlb	0	; () banked
 14861  01542E  6F78               	movwf	LCD_send_command@D2& (0+255),b
 14862  015430  0E00               	movlw	0
 14863  015432  0100               	movlb	0	; () banked
 14864  015434  6F79               	movwf	LCD_send_command@D1& (0+255),b
 14865  015436  0E00               	movlw	0
 14866  015438  0100               	movlb	0	; () banked
 14867  01543A  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 14868  01543C  0E00               	movlw	0
 14869  01543E  EC62  F0AF         	call	_LCD_send_command
 14870                           
 14871                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 14872  015442  0E01               	movlw	1
 14873  015444  0100               	movlb	0	; () banked
 14874  015446  6F78               	movwf	LCD_send_command@D2& (0+255),b
 14875  015448  0E01               	movlw	1
 14876  01544A  0100               	movlb	0	; () banked
 14877  01544C  6F79               	movwf	LCD_send_command@D1& (0+255),b
 14878  01544E  0E00               	movlw	0
 14879  015450  0100               	movlb	0	; () banked
 14880  015452  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 14881  015454  0E00               	movlw	0
 14882  015456  EC62  F0AF         	call	_LCD_send_command
 14883                           
 14884                           ;src\LCD_44780.c: 312: LCD_clear ();
 14885  01545A  EC06  F0B0         	call	_LCD_clear	;wreg free
 14886                           
 14887                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 14888  01545E  0E00               	movlw	0
 14889  015460  0100               	movlb	0	; () banked
 14890  015462  6F7C               	movwf	LCD_cursor@blinking& (0+255),b
 14891  015464  0E00               	movlw	0
 14892  015466  ECED  F0AF         	call	_LCD_cursor
 14893  01546A  0012               	return		;funcret
 14894  01546C                     __end_of_LCD_initialize:
 14895                           	opt stack 0
 14896                           tblptru	equ	0xFF8
 14897                           tblptrh	equ	0xFF7
 14898                           tblptrl	equ	0xFF6
 14899                           tablat	equ	0xFF5
 14900                           prodh	equ	0xFF4
 14901                           prodl	equ	0xFF3
 14902                           intcon	equ	0xFF2
 14903                           postinc0	equ	0xFEE
 14904                           wreg	equ	0xFE8
 14905                           indf1	equ	0xFE7
 14906                           plusw1	equ	0xFE3
 14907                           fsr1h	equ	0xFE2
 14908                           fsr1l	equ	0xFE1
 14909                           indf2	equ	0xFDF
 14910                           postinc2	equ	0xFDE
 14911                           plusw2	equ	0xFDB
 14912                           fsr2h	equ	0xFDA
 14913                           fsr2l	equ	0xFD9
 14914                           status	equ	0xFD8
 14915                           
 14916 ;; *************** function _delay_set_quartz *****************
 14917 ;; Defined at:
 14918 ;;		line 115 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 14919 ;; Parameters:    Size  Location     Type
 14920 ;;  frequency       1    wreg     unsigned char 
 14921 ;; Auto vars:     Size  Location     Type
 14922 ;;  frequency       1   16[BANK0 ] unsigned char 
 14923 ;; Return value:  Size  Location     Type
 14924 ;;		None               void
 14925 ;; Registers used:
 14926 ;;		wreg
 14927 ;; Tracked objects:
 14928 ;;		On entry : 0/0
 14929 ;;		On exit  : 0/0
 14930 ;;		Unchanged: 0/0
 14931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14935 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14936 ;;Total ram usage:        1 bytes
 14937 ;; Hardware stack levels used:    1
 14938 ;; Hardware stack levels required when called:    3
 14939 ;; This function calls:
 14940 ;;		Nothing
 14941 ;; This function is called by:
 14942 ;;		_LCD_initialize
 14943 ;; This function uses a non-reentrant model
 14944 ;;
 14945                           
 14946                           	psect	text35
 14947  01618E                     __ptext35:
 14948                           	opt stack 0
 14949  01618E                     _delay_set_quartz:
 14950                           	opt stack 25
 14951                           
 14952                           ;incstack = 0
 14953                           ;delay_set_quartz@frequency stored from wreg
 14954  01618E  0100               	movlb	0	; () banked
 14955  016190  6F70               	movwf	delay_set_quartz@frequency& (0+255),b
 14956                           
 14957                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 14958  016192  C070  F0EC         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 14959  016196  0012               	return		;funcret
 14960  016198                     __end_of_delay_set_quartz:
 14961                           	opt stack 0
 14962                           tblptru	equ	0xFF8
 14963                           tblptrh	equ	0xFF7
 14964                           tblptrl	equ	0xFF6
 14965                           tablat	equ	0xFF5
 14966                           prodh	equ	0xFF4
 14967                           prodl	equ	0xFF3
 14968                           intcon	equ	0xFF2
 14969                           postinc0	equ	0xFEE
 14970                           wreg	equ	0xFE8
 14971                           indf1	equ	0xFE7
 14972                           plusw1	equ	0xFE3
 14973                           fsr1h	equ	0xFE2
 14974                           fsr1l	equ	0xFE1
 14975                           indf2	equ	0xFDF
 14976                           postinc2	equ	0xFDE
 14977                           plusw2	equ	0xFDB
 14978                           fsr2h	equ	0xFDA
 14979                           fsr2l	equ	0xFD9
 14980                           status	equ	0xFD8
 14981                           
 14982 ;; *************** function _LCD_cursor *****************
 14983 ;; Defined at:
 14984 ;;		line 266 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14985 ;; Parameters:    Size  Location     Type
 14986 ;;  active          1    wreg     unsigned char 
 14987 ;;  blinking        1   28[BANK0 ] unsigned char 
 14988 ;; Auto vars:     Size  Location     Type
 14989 ;;  active          1   29[BANK0 ] unsigned char 
 14990 ;; Return value:  Size  Location     Type
 14991 ;;		None               void
 14992 ;; Registers used:
 14993 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14994 ;; Tracked objects:
 14995 ;;		On entry : 0/0
 14996 ;;		On exit  : 0/0
 14997 ;;		Unchanged: 0/0
 14998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14999 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15002 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15003 ;;Total ram usage:        2 bytes
 15004 ;; Hardware stack levels used:    1
 15005 ;; Hardware stack levels required when called:    7
 15006 ;; This function calls:
 15007 ;;		_LCD_send_command
 15008 ;; This function is called by:
 15009 ;;		_LCD_initialize
 15010 ;; This function uses a non-reentrant model
 15011 ;;
 15012                           
 15013                           	psect	text36
 15014  015FDA                     __ptext36:
 15015                           	opt stack 0
 15016  015FDA                     _LCD_cursor:
 15017                           	opt stack 21
 15018                           
 15019                           ;incstack = 0
 15020                           ;LCD_cursor@active stored from wreg
 15021  015FDA  0100               	movlb	0	; () banked
 15022  015FDC  6F7D               	movwf	LCD_cursor@active& (0+255),b
 15023                           
 15024                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 15025  015FDE  0E00               	movlw	0
 15026  015FE0  0100               	movlb	0	; () banked
 15027  015FE2  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15028  015FE4  0E00               	movlw	0
 15029  015FE6  0100               	movlb	0	; () banked
 15030  015FE8  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15031  015FEA  0E00               	movlw	0
 15032  015FEC  0100               	movlb	0	; () banked
 15033  015FEE  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15034  015FF0  0E00               	movlw	0
 15035  015FF2  EC62  F0AF         	call	_LCD_send_command
 15036                           
 15037                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 15038  015FF6  0E01               	movlw	1
 15039  015FF8  0100               	movlb	0	; () banked
 15040  015FFA  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15041  015FFC  C07D  F079         	movff	LCD_cursor@active,LCD_send_command@D1
 15042  016000  C07C  F07A         	movff	LCD_cursor@blinking,LCD_send_command@D0
 15043  016004  0E01               	movlw	1
 15044  016006  EC62  F0AF         	call	_LCD_send_command
 15045  01600A  0012               	return		;funcret
 15046  01600C                     __end_of_LCD_cursor:
 15047                           	opt stack 0
 15048                           tblptru	equ	0xFF8
 15049                           tblptrh	equ	0xFF7
 15050                           tblptrl	equ	0xFF6
 15051                           tablat	equ	0xFF5
 15052                           prodh	equ	0xFF4
 15053                           prodl	equ	0xFF3
 15054                           intcon	equ	0xFF2
 15055                           postinc0	equ	0xFEE
 15056                           wreg	equ	0xFE8
 15057                           indf1	equ	0xFE7
 15058                           plusw1	equ	0xFE3
 15059                           fsr1h	equ	0xFE2
 15060                           fsr1l	equ	0xFE1
 15061                           indf2	equ	0xFDF
 15062                           postinc2	equ	0xFDE
 15063                           plusw2	equ	0xFDB
 15064                           fsr2h	equ	0xFDA
 15065                           fsr2l	equ	0xFD9
 15066                           status	equ	0xFD8
 15067                           
 15068 ;; *************** function _LCD_clear *****************
 15069 ;; Defined at:
 15070 ;;		line 257 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15071 ;; Parameters:    Size  Location     Type
 15072 ;;		None
 15073 ;; Auto vars:     Size  Location     Type
 15074 ;;		None
 15075 ;; Return value:  Size  Location     Type
 15076 ;;		None               void
 15077 ;; Registers used:
 15078 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15079 ;; Tracked objects:
 15080 ;;		On entry : 0/0
 15081 ;;		On exit  : 0/0
 15082 ;;		Unchanged: 0/0
 15083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15088 ;;Total ram usage:        0 bytes
 15089 ;; Hardware stack levels used:    1
 15090 ;; Hardware stack levels required when called:    7
 15091 ;; This function calls:
 15092 ;;		_LCD_send_command
 15093 ;; This function is called by:
 15094 ;;		_LCD_initialize
 15095 ;;		_LCD_Handler
 15096 ;;		_board_initialization
 15097 ;; This function uses a non-reentrant model
 15098 ;;
 15099                           
 15100                           	psect	text37
 15101  01600C                     __ptext37:
 15102                           	opt stack 0
 15103  01600C                     _LCD_clear:
 15104                           	opt stack 21
 15105                           
 15106                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 15107                           
 15108                           ;incstack = 0
 15109  01600C  0E00               	movlw	0
 15110  01600E  0100               	movlb	0	; () banked
 15111  016010  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15112  016012  0E00               	movlw	0
 15113  016014  0100               	movlb	0	; () banked
 15114  016016  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15115  016018  0E00               	movlw	0
 15116  01601A  0100               	movlb	0	; () banked
 15117  01601C  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15118  01601E  0E00               	movlw	0
 15119  016020  EC62  F0AF         	call	_LCD_send_command
 15120                           
 15121                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 15122  016024  0E00               	movlw	0
 15123  016026  0100               	movlb	0	; () banked
 15124  016028  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15125  01602A  0E00               	movlw	0
 15126  01602C  0100               	movlb	0	; () banked
 15127  01602E  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15128  016030  0E01               	movlw	1
 15129  016032  0100               	movlb	0	; () banked
 15130  016034  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15131  016036  0E00               	movlw	0
 15132  016038  EC62  F0AF         	call	_LCD_send_command
 15133  01603C  0012               	return		;funcret
 15134  01603E                     __end_of_LCD_clear:
 15135                           	opt stack 0
 15136                           tblptru	equ	0xFF8
 15137                           tblptrh	equ	0xFF7
 15138                           tblptrl	equ	0xFF6
 15139                           tablat	equ	0xFF5
 15140                           prodh	equ	0xFF4
 15141                           prodl	equ	0xFF3
 15142                           intcon	equ	0xFF2
 15143                           postinc0	equ	0xFEE
 15144                           wreg	equ	0xFE8
 15145                           indf1	equ	0xFE7
 15146                           plusw1	equ	0xFE3
 15147                           fsr1h	equ	0xFE2
 15148                           fsr1l	equ	0xFE1
 15149                           indf2	equ	0xFDF
 15150                           postinc2	equ	0xFDE
 15151                           plusw2	equ	0xFDB
 15152                           fsr2h	equ	0xFDA
 15153                           fsr2l	equ	0xFD9
 15154                           status	equ	0xFD8
 15155                           
 15156 ;; *************** function _LCD_goto_xy *****************
 15157 ;; Defined at:
 15158 ;;		line 136 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15159 ;; Parameters:    Size  Location     Type
 15160 ;;  x               1    wreg     unsigned char 
 15161 ;;  y               1   31[BANK0 ] unsigned char 
 15162 ;; Auto vars:     Size  Location     Type
 15163 ;;  x               1   32[BANK0 ] unsigned char 
 15164 ;; Return value:  Size  Location     Type
 15165 ;;		None               void
 15166 ;; Registers used:
 15167 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15168 ;; Tracked objects:
 15169 ;;		On entry : 0/0
 15170 ;;		On exit  : 0/0
 15171 ;;		Unchanged: 0/0
 15172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15173 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15174 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15177 ;;Total ram usage:        2 bytes
 15178 ;; Hardware stack levels used:    1
 15179 ;; Hardware stack levels required when called:    8
 15180 ;; This function calls:
 15181 ;;		_LCD_goto_line
 15182 ;;		_LCD_shift_cursor
 15183 ;; This function is called by:
 15184 ;;		_LCD_Handler
 15185 ;; This function uses a non-reentrant model
 15186 ;;
 15187                           
 15188                           	psect	text38
 15189  01610E                     __ptext38:
 15190                           	opt stack 0
 15191  01610E                     _LCD_goto_xy:
 15192                           	opt stack 21
 15193                           
 15194                           ;incstack = 0
 15195                           ;LCD_goto_xy@x stored from wreg
 15196  01610E  0100               	movlb	0	; () banked
 15197  016110  6F80               	movwf	LCD_goto_xy@x& (0+255),b
 15198                           
 15199                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 15200  016112  0100               	movlb	0	; () banked
 15201  016114  517F               	movf	LCD_goto_xy@y& (0+255),w,b
 15202  016116  ECBC  F0AA         	call	_LCD_goto_line
 15203                           
 15204                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 15205  01611A  0100               	movlb	0	; () banked
 15206  01611C  0580               	decf	LCD_goto_xy@x& (0+255),w,b
 15207  01611E  0100               	movlb	0	; () banked
 15208  016120  6F7C               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 15209  016122  0E01               	movlw	1
 15210  016124  ECD2  F0AE         	call	_LCD_shift_cursor
 15211  016128  0012               	return		;funcret
 15212  01612A                     __end_of_LCD_goto_xy:
 15213                           	opt stack 0
 15214                           tblptru	equ	0xFF8
 15215                           tblptrh	equ	0xFF7
 15216                           tblptrl	equ	0xFF6
 15217                           tablat	equ	0xFF5
 15218                           prodh	equ	0xFF4
 15219                           prodl	equ	0xFF3
 15220                           intcon	equ	0xFF2
 15221                           postinc0	equ	0xFEE
 15222                           wreg	equ	0xFE8
 15223                           indf1	equ	0xFE7
 15224                           plusw1	equ	0xFE3
 15225                           fsr1h	equ	0xFE2
 15226                           fsr1l	equ	0xFE1
 15227                           indf2	equ	0xFDF
 15228                           postinc2	equ	0xFDE
 15229                           plusw2	equ	0xFDB
 15230                           fsr2h	equ	0xFDA
 15231                           fsr2l	equ	0xFD9
 15232                           status	equ	0xFD8
 15233                           
 15234 ;; *************** function _LCD_shift_cursor *****************
 15235 ;; Defined at:
 15236 ;;		line 98 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15237 ;; Parameters:    Size  Location     Type
 15238 ;;  shift           1    wreg     unsigned char 
 15239 ;;  number_of_sh    1   28[BANK0 ] unsigned char 
 15240 ;; Auto vars:     Size  Location     Type
 15241 ;;  shift           1   29[BANK0 ] unsigned char 
 15242 ;;  i               1   30[BANK0 ] unsigned char 
 15243 ;; Return value:  Size  Location     Type
 15244 ;;		None               void
 15245 ;; Registers used:
 15246 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15247 ;; Tracked objects:
 15248 ;;		On entry : 0/0
 15249 ;;		On exit  : 0/0
 15250 ;;		Unchanged: 0/0
 15251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15252 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15253 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15255 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15256 ;;Total ram usage:        3 bytes
 15257 ;; Hardware stack levels used:    1
 15258 ;; Hardware stack levels required when called:    7
 15259 ;; This function calls:
 15260 ;;		_LCD_send_command
 15261 ;; This function is called by:
 15262 ;;		_LCD_goto_xy
 15263 ;; This function uses a non-reentrant model
 15264 ;;
 15265                           
 15266                           	psect	text39
 15267  015DA4                     __ptext39:
 15268                           	opt stack 0
 15269  015DA4                     _LCD_shift_cursor:
 15270                           	opt stack 21
 15271                           
 15272                           ;incstack = 0
 15273                           ;LCD_shift_cursor@shift stored from wreg
 15274  015DA4  0100               	movlb	0	; () banked
 15275  015DA6  6F7D               	movwf	LCD_shift_cursor@shift& (0+255),b
 15276                           
 15277                           ;src\LCD_44780.c: 100: unsigned char i;
 15278                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 15279  015DA8  0E00               	movlw	0
 15280  015DAA  0100               	movlb	0	; () banked
 15281  015DAC  6F7E               	movwf	LCD_shift_cursor@i& (0+255),b
 15282  015DAE  D019               	goto	l8026
 15283  015DB0                     l8022:
 15284                           
 15285                           ; BSR set to: 0
 15286                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 15287  015DB0  0E00               	movlw	0
 15288  015DB2  0100               	movlb	0	; () banked
 15289  015DB4  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15290  015DB6  0E00               	movlw	0
 15291  015DB8  0100               	movlb	0	; () banked
 15292  015DBA  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15293  015DBC  0E01               	movlw	1
 15294  015DBE  0100               	movlb	0	; () banked
 15295  015DC0  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15296  015DC2  0E00               	movlw	0
 15297  015DC4  EC62  F0AF         	call	_LCD_send_command
 15298                           
 15299                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 15300  015DC8  C07D  F078         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 15301  015DCC  0E00               	movlw	0
 15302  015DCE  0100               	movlb	0	; () banked
 15303  015DD0  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15304  015DD2  0E00               	movlw	0
 15305  015DD4  0100               	movlb	0	; () banked
 15306  015DD6  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15307  015DD8  0E00               	movlw	0
 15308  015DDA  EC62  F0AF         	call	_LCD_send_command
 15309  015DDE  0100               	movlb	0	; () banked
 15310  015DE0  2B7E               	incf	LCD_shift_cursor@i& (0+255),f,b
 15311  015DE2                     l8026:
 15312                           
 15313                           ; BSR set to: 0
 15314  015DE2  0100               	movlb	0	; () banked
 15315  015DE4  517C               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 15316  015DE6  0100               	movlb	0	; () banked
 15317  015DE8  5D7E               	subwf	LCD_shift_cursor@i& (0+255),w,b
 15318  015DEA  B0D8               	btfsc	status,0,c
 15319  015DEC  0012               	return	
 15320  015DEE  D7E0               	goto	l8022
 15321  015DF0                     __end_of_LCD_shift_cursor:
 15322                           	opt stack 0
 15323                           tblptru	equ	0xFF8
 15324                           tblptrh	equ	0xFF7
 15325                           tblptrl	equ	0xFF6
 15326                           tablat	equ	0xFF5
 15327                           prodh	equ	0xFF4
 15328                           prodl	equ	0xFF3
 15329                           intcon	equ	0xFF2
 15330                           postinc0	equ	0xFEE
 15331                           wreg	equ	0xFE8
 15332                           indf1	equ	0xFE7
 15333                           plusw1	equ	0xFE3
 15334                           fsr1h	equ	0xFE2
 15335                           fsr1l	equ	0xFE1
 15336                           indf2	equ	0xFDF
 15337                           postinc2	equ	0xFDE
 15338                           plusw2	equ	0xFDB
 15339                           fsr2h	equ	0xFDA
 15340                           fsr2l	equ	0xFD9
 15341                           status	equ	0xFD8
 15342                           
 15343 ;; *************** function _LCD_goto_line *****************
 15344 ;; Defined at:
 15345 ;;		line 111 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15346 ;; Parameters:    Size  Location     Type
 15347 ;;  line            1    wreg     unsigned char 
 15348 ;; Auto vars:     Size  Location     Type
 15349 ;;  line            1   28[BANK0 ] unsigned char 
 15350 ;; Return value:  Size  Location     Type
 15351 ;;		None               void
 15352 ;; Registers used:
 15353 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15354 ;; Tracked objects:
 15355 ;;		On entry : 0/0
 15356 ;;		On exit  : 0/0
 15357 ;;		Unchanged: 0/0
 15358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15360 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15362 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15363 ;;Total ram usage:        1 bytes
 15364 ;; Hardware stack levels used:    1
 15365 ;; Hardware stack levels required when called:    7
 15366 ;; This function calls:
 15367 ;;		_LCD_send_command
 15368 ;; This function is called by:
 15369 ;;		_LCD_goto_xy
 15370 ;;		_main
 15371 ;;		_LCD_Handler
 15372 ;;		_board_initialization
 15373 ;; This function uses a non-reentrant model
 15374 ;;
 15375                           
 15376                           	psect	text40
 15377  015578                     __ptext40:
 15378                           	opt stack 0
 15379  015578                     _LCD_goto_line:
 15380                           	opt stack 22
 15381                           
 15382                           ; BSR set to: 0
 15383                           ;incstack = 0
 15384                           ;LCD_goto_line@line stored from wreg
 15385  015578  0100               	movlb	0	; () banked
 15386  01557A  6F7C               	movwf	LCD_goto_line@line& (0+255),b
 15387                           
 15388                           ;src\LCD_44780.c: 113: switch(line) {
 15389  01557C  D064               	goto	l8038
 15390  01557E                     l8030:
 15391  01557E  0E00               	movlw	0
 15392  015580  0100               	movlb	0	; () banked
 15393  015582  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15394  015584  0E00               	movlw	0
 15395  015586  0100               	movlb	0	; () banked
 15396  015588  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15397  01558A  0E00               	movlw	0
 15398  01558C  0100               	movlb	0	; () banked
 15399  01558E  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15400  015590  0E01               	movlw	1
 15401  015592  EC62  F0AF         	call	_LCD_send_command
 15402                           
 15403                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 15404  015596  0E00               	movlw	0
 15405  015598  0100               	movlb	0	; () banked
 15406  01559A  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15407  01559C  0E00               	movlw	0
 15408  01559E  0100               	movlb	0	; () banked
 15409  0155A0  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15410  0155A2  0E00               	movlw	0
 15411  0155A4  0100               	movlb	0	; () banked
 15412  0155A6  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15413  0155A8  0E00               	movlw	0
 15414  0155AA  EC62  F0AF         	call	_LCD_send_command
 15415                           
 15416                           ;src\LCD_44780.c: 117: break;
 15417  0155AE  0012               	return	
 15418  0155B0                     l8032:
 15419  0155B0  0E01               	movlw	1
 15420  0155B2  0100               	movlb	0	; () banked
 15421  0155B4  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15422  0155B6  0E00               	movlw	0
 15423  0155B8  0100               	movlb	0	; () banked
 15424  0155BA  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15425  0155BC  0E00               	movlw	0
 15426  0155BE  0100               	movlb	0	; () banked
 15427  0155C0  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15428  0155C2  0E01               	movlw	1
 15429  0155C4  EC62  F0AF         	call	_LCD_send_command
 15430                           
 15431                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 15432  0155C8  0E00               	movlw	0
 15433  0155CA  0100               	movlb	0	; () banked
 15434  0155CC  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15435  0155CE  0E00               	movlw	0
 15436  0155D0  0100               	movlb	0	; () banked
 15437  0155D2  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15438  0155D4  0E00               	movlw	0
 15439  0155D6  0100               	movlb	0	; () banked
 15440  0155D8  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15441  0155DA  0E00               	movlw	0
 15442  0155DC  EC62  F0AF         	call	_LCD_send_command
 15443                           
 15444                           ;src\LCD_44780.c: 121: break;
 15445  0155E0  0012               	return	
 15446  0155E2                     l8034:
 15447  0155E2  0E00               	movlw	0
 15448  0155E4  0100               	movlb	0	; () banked
 15449  0155E6  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15450  0155E8  0E00               	movlw	0
 15451  0155EA  0100               	movlb	0	; () banked
 15452  0155EC  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15453  0155EE  0E01               	movlw	1
 15454  0155F0  0100               	movlb	0	; () banked
 15455  0155F2  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15456  0155F4  0E01               	movlw	1
 15457  0155F6  EC62  F0AF         	call	_LCD_send_command
 15458                           
 15459                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 15460  0155FA  0E01               	movlw	1
 15461  0155FC  0100               	movlb	0	; () banked
 15462  0155FE  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15463  015600  0E00               	movlw	0
 15464  015602  0100               	movlb	0	; () banked
 15465  015604  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15466  015606  0E00               	movlw	0
 15467  015608  0100               	movlb	0	; () banked
 15468  01560A  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15469  01560C  0E00               	movlw	0
 15470  01560E  EC62  F0AF         	call	_LCD_send_command
 15471                           
 15472                           ;src\LCD_44780.c: 125: break;
 15473  015612  0012               	return	
 15474  015614                     l8036:
 15475  015614  0E01               	movlw	1
 15476  015616  0100               	movlb	0	; () banked
 15477  015618  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15478  01561A  0E00               	movlw	0
 15479  01561C  0100               	movlb	0	; () banked
 15480  01561E  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15481  015620  0E01               	movlw	1
 15482  015622  0100               	movlb	0	; () banked
 15483  015624  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15484  015626  0E01               	movlw	1
 15485  015628  EC62  F0AF         	call	_LCD_send_command
 15486                           
 15487                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 15488  01562C  0E01               	movlw	1
 15489  01562E  0100               	movlb	0	; () banked
 15490  015630  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15491  015632  0E00               	movlw	0
 15492  015634  0100               	movlb	0	; () banked
 15493  015636  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15494  015638  0E00               	movlw	0
 15495  01563A  0100               	movlb	0	; () banked
 15496  01563C  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15497  01563E  0E00               	movlw	0
 15498  015640  EC62  F0AF         	call	_LCD_send_command
 15499                           
 15500                           ;src\LCD_44780.c: 129: }
 15501  015644  0012               	return	
 15502  015646                     l8038:
 15503  015646  0100               	movlb	0	; () banked
 15504  015648  517C               	movf	LCD_goto_line@line& (0+255),w,b
 15505                           
 15506                           ; Switch size 1, requested type "space"
 15507                           ; Number of cases is 4, Range of values is 1 to 4
 15508                           ; switch strategies available:
 15509                           ; Name         Instructions Cycles
 15510                           ; simple_byte           13     7 (average)
 15511                           ;	Chosen strategy is simple_byte
 15512  01564A  0A01               	xorlw	1	; case 1
 15513  01564C  B4D8               	btfsc	status,2,c
 15514  01564E  D797               	goto	l8030
 15515  015650  0A03               	xorlw	3	; case 2
 15516  015652  B4D8               	btfsc	status,2,c
 15517  015654  D7AD               	goto	l8032
 15518  015656  0A01               	xorlw	1	; case 3
 15519  015658  B4D8               	btfsc	status,2,c
 15520  01565A  D7C3               	goto	l8034
 15521  01565C  0A07               	xorlw	7	; case 4
 15522  01565E  A4D8               	btfss	status,2,c
 15523  015660  0012               	return	
 15524  015662  D7D8               	goto	l8036
 15525  015664                     __end_of_LCD_goto_line:
 15526                           	opt stack 0
 15527                           tblptru	equ	0xFF8
 15528                           tblptrh	equ	0xFF7
 15529                           tblptrl	equ	0xFF6
 15530                           tablat	equ	0xFF5
 15531                           prodh	equ	0xFF4
 15532                           prodl	equ	0xFF3
 15533                           intcon	equ	0xFF2
 15534                           postinc0	equ	0xFEE
 15535                           wreg	equ	0xFE8
 15536                           indf1	equ	0xFE7
 15537                           plusw1	equ	0xFE3
 15538                           fsr1h	equ	0xFE2
 15539                           fsr1l	equ	0xFE1
 15540                           indf2	equ	0xFDF
 15541                           postinc2	equ	0xFDE
 15542                           plusw2	equ	0xFDB
 15543                           fsr2h	equ	0xFDA
 15544                           fsr2l	equ	0xFD9
 15545                           status	equ	0xFD8
 15546                           
 15547 ;; *************** function _LCD_send_command *****************
 15548 ;; Defined at:
 15549 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15550 ;; Parameters:    Size  Location     Type
 15551 ;;  D3              1    wreg     unsigned char 
 15552 ;;  D2              1   24[BANK0 ] unsigned char 
 15553 ;;  D1              1   25[BANK0 ] unsigned char 
 15554 ;;  D0              1   26[BANK0 ] unsigned char 
 15555 ;; Auto vars:     Size  Location     Type
 15556 ;;  D3              1   27[BANK0 ] unsigned char 
 15557 ;; Return value:  Size  Location     Type
 15558 ;;		None               void
 15559 ;; Registers used:
 15560 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15561 ;; Tracked objects:
 15562 ;;		On entry : 0/0
 15563 ;;		On exit  : 0/0
 15564 ;;		Unchanged: 0/0
 15565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15566 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15567 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15569 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15570 ;;Total ram usage:        4 bytes
 15571 ;; Hardware stack levels used:    1
 15572 ;; Hardware stack levels required when called:    6
 15573 ;; This function calls:
 15574 ;;		_LCD_enable_pulse
 15575 ;; This function is called by:
 15576 ;;		_LCD_shift_cursor
 15577 ;;		_LCD_goto_line
 15578 ;;		_LCD_write_char
 15579 ;;		_LCD_clear
 15580 ;;		_LCD_cursor
 15581 ;;		_LCD_initialize
 15582 ;;		_LCD_home
 15583 ;;		_LCD_shift
 15584 ;; This function uses a non-reentrant model
 15585 ;;
 15586                           
 15587                           	psect	text41
 15588  015EC4                     __ptext41:
 15589                           	opt stack 0
 15590  015EC4                     _LCD_send_command:
 15591                           	opt stack 22
 15592                           
 15593                           ;incstack = 0
 15594                           ;LCD_send_command@D3 stored from wreg
 15595  015EC4  0100               	movlb	0	; () banked
 15596  015EC6  6F7B               	movwf	LCD_send_command@D3& (0+255),b
 15597                           
 15598                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 15599  015EC8  0100               	movlb	0	; () banked
 15600  015ECA  B17A               	btfsc	LCD_send_command@D0& (0+255),0,b
 15601  015ECC  D002               	bra	u9885
 15602  015ECE  948B               	bcf	3979,2,c	;volatile
 15603  015ED0  D001               	bra	u9886
 15604  015ED2                     u9885:
 15605  015ED2  848B               	bsf	3979,2,c	;volatile
 15606  015ED4                     u9886:
 15607                           
 15608                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 15609  015ED4  0100               	movlb	0	; () banked
 15610  015ED6  B179               	btfsc	LCD_send_command@D1& (0+255),0,b
 15611  015ED8  D002               	bra	u9895
 15612  015EDA  968B               	bcf	3979,3,c	;volatile
 15613  015EDC  D001               	bra	u9896
 15614  015EDE                     u9895:
 15615  015EDE  868B               	bsf	3979,3,c	;volatile
 15616  015EE0                     u9896:
 15617                           
 15618                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 15619  015EE0  0100               	movlb	0	; () banked
 15620  015EE2  B178               	btfsc	LCD_send_command@D2& (0+255),0,b
 15621  015EE4  D002               	bra	u9905
 15622  015EE6  908C               	bcf	3980,0,c	;volatile
 15623  015EE8  D001               	bra	u9906
 15624  015EEA                     u9905:
 15625  015EEA  808C               	bsf	3980,0,c	;volatile
 15626  015EEC                     u9906:
 15627                           
 15628                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 15629  015EEC  0100               	movlb	0	; () banked
 15630  015EEE  B17B               	btfsc	LCD_send_command@D3& (0+255),0,b
 15631  015EF0  D002               	bra	u9915
 15632  015EF2  928C               	bcf	3980,1,c	;volatile
 15633  015EF4  D001               	bra	u9916
 15634  015EF6                     u9915:
 15635  015EF6  828C               	bsf	3980,1,c	;volatile
 15636  015EF8                     u9916:
 15637                           
 15638                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 15639  015EF8  EC59  F0B0         	call	_LCD_enable_pulse	;wreg free
 15640  015EFC  0012               	return		;funcret
 15641  015EFE                     __end_of_LCD_send_command:
 15642                           	opt stack 0
 15643                           tblptru	equ	0xFF8
 15644                           tblptrh	equ	0xFF7
 15645                           tblptrl	equ	0xFF6
 15646                           tablat	equ	0xFF5
 15647                           prodh	equ	0xFF4
 15648                           prodl	equ	0xFF3
 15649                           intcon	equ	0xFF2
 15650                           postinc0	equ	0xFEE
 15651                           wreg	equ	0xFE8
 15652                           indf1	equ	0xFE7
 15653                           plusw1	equ	0xFE3
 15654                           fsr1h	equ	0xFE2
 15655                           fsr1l	equ	0xFE1
 15656                           indf2	equ	0xFDF
 15657                           postinc2	equ	0xFDE
 15658                           plusw2	equ	0xFDB
 15659                           fsr2h	equ	0xFDA
 15660                           fsr2l	equ	0xFD9
 15661                           status	equ	0xFD8
 15662                           
 15663 ;; *************** function _LCD_enable_pulse *****************
 15664 ;; Defined at:
 15665 ;;		line 49 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15666 ;; Parameters:    Size  Location     Type
 15667 ;;		None
 15668 ;; Auto vars:     Size  Location     Type
 15669 ;;		None
 15670 ;; Return value:  Size  Location     Type
 15671 ;;		None               void
 15672 ;; Registers used:
 15673 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15674 ;; Tracked objects:
 15675 ;;		On entry : 0/0
 15676 ;;		On exit  : 0/0
 15677 ;;		Unchanged: 0/0
 15678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15683 ;;Total ram usage:        0 bytes
 15684 ;; Hardware stack levels used:    1
 15685 ;; Hardware stack levels required when called:    5
 15686 ;; This function calls:
 15687 ;;		_delay_ms
 15688 ;; This function is called by:
 15689 ;;		_LCD_send_command
 15690 ;; This function uses a non-reentrant model
 15691 ;;
 15692                           
 15693                           	psect	text42
 15694  0160B2                     __ptext42:
 15695                           	opt stack 0
 15696  0160B2                     _LCD_enable_pulse:
 15697                           	opt stack 22
 15698                           
 15699                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 15700                           
 15701                           ;incstack = 0
 15702  0160B2  828B               	bsf	3979,1,c	;volatile
 15703                           
 15704                           ;src\LCD_44780.c: 52: delay_ms (1);
 15705  0160B4  0E00               	movlw	0
 15706  0160B6  0100               	movlb	0	; () banked
 15707  0160B8  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15708  0160BA  0E01               	movlw	1
 15709  0160BC  6F76               	movwf	delay_ms@value_ms& (0+255),b
 15710  0160BE  EC7F  F0AF         	call	_delay_ms	;wreg free
 15711                           
 15712                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 15713  0160C2  928B               	bcf	3979,1,c	;volatile
 15714                           
 15715                           ;src\LCD_44780.c: 54: delay_ms (1);
 15716  0160C4  0E00               	movlw	0
 15717  0160C6  0100               	movlb	0	; () banked
 15718  0160C8  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15719  0160CA  0E01               	movlw	1
 15720  0160CC  6F76               	movwf	delay_ms@value_ms& (0+255),b
 15721  0160CE  EC7F  F0AF         	call	_delay_ms	;wreg free
 15722  0160D2  0012               	return		;funcret
 15723  0160D4                     __end_of_LCD_enable_pulse:
 15724                           	opt stack 0
 15725                           tblptru	equ	0xFF8
 15726                           tblptrh	equ	0xFF7
 15727                           tblptrl	equ	0xFF6
 15728                           tablat	equ	0xFF5
 15729                           prodh	equ	0xFF4
 15730                           prodl	equ	0xFF3
 15731                           intcon	equ	0xFF2
 15732                           postinc0	equ	0xFEE
 15733                           wreg	equ	0xFE8
 15734                           indf1	equ	0xFE7
 15735                           plusw1	equ	0xFE3
 15736                           fsr1h	equ	0xFE2
 15737                           fsr1l	equ	0xFE1
 15738                           indf2	equ	0xFDF
 15739                           postinc2	equ	0xFDE
 15740                           plusw2	equ	0xFDB
 15741                           fsr2h	equ	0xFDA
 15742                           fsr2l	equ	0xFD9
 15743                           status	equ	0xFD8
 15744                           
 15745 ;; *************** function _delay_ms *****************
 15746 ;; Defined at:
 15747 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 15748 ;; Parameters:    Size  Location     Type
 15749 ;;  value_ms        2   22[BANK0 ] unsigned int 
 15750 ;; Auto vars:     Size  Location     Type
 15751 ;;		None
 15752 ;; Return value:  Size  Location     Type
 15753 ;;		None               void
 15754 ;; Registers used:
 15755 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15756 ;; Tracked objects:
 15757 ;;		On entry : 0/0
 15758 ;;		On exit  : 0/0
 15759 ;;		Unchanged: 0/0
 15760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15761 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15764 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15765 ;;Total ram usage:        2 bytes
 15766 ;; Hardware stack levels used:    1
 15767 ;; Hardware stack levels required when called:    4
 15768 ;; This function calls:
 15769 ;;		___wmul
 15770 ;; This function is called by:
 15771 ;;		_LCD_enable_pulse
 15772 ;;		_LCD_initialize
 15773 ;;		_main
 15774 ;;		_delay_s
 15775 ;; This function uses a non-reentrant model
 15776 ;;
 15777                           
 15778                           	psect	text43
 15779  015EFE                     __ptext43:
 15780                           	opt stack 0
 15781  015EFE                     _delay_ms:
 15782                           	opt stack 26
 15783                           
 15784                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 15785                           
 15786                           ;incstack = 0
 15787  015EFE  C0EC  F070         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 15788  015F02  0100               	movlb	0	; () banked
 15789  015F04  6B71               	clrf	(___wmul@multiplier+1)& (0+255),b
 15790  015F06  C076  F072         	movff	delay_ms@value_ms,___wmul@multiplicand
 15791  015F0A  C077  F073         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 15792  015F0E  ECB8  F0AF         	call	___wmul	;wreg free
 15793  015F12  C070  F0E0         	movff	?___wmul,_clock_counter_reference	;volatile
 15794  015F16  C071  F0E1         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 15795                           
 15796                           ;src\delay.c: 75: while (clock_counter_reference) {
 15797  015F1A  D007               	goto	l581
 15798  015F1C                     l7574:
 15799                           
 15800                           ;src\delay.c: 85: _delay(240);
 15801  015F1C  0E50               	movlw	80
 15802  015F1E                     u12067:
 15803  015F1E  2EE8               	decfsz	wreg,f,c
 15804  015F20  D7FE               	goto	u12067
 15805                           
 15806                           ;src\delay.c: 88: clock_counter_reference--;
 15807  015F22  0100               	movlb	0	; () banked
 15808  015F24  07E0               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 15809  015F26  A0D8               	btfss	status,0,c
 15810  015F28  07E1               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 15811  015F2A                     l581:
 15812  015F2A  0100               	movlb	0	; () banked
 15813  015F2C  51E0               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 15814  015F2E  0100               	movlb	0	; () banked
 15815  015F30  11E1               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 15816  015F32  B4D8               	btfsc	status,2,c
 15817  015F34  0012               	return	
 15818  015F36  D7F2               	goto	l7574
 15819  015F38                     __end_of_delay_ms:
 15820                           	opt stack 0
 15821                           tblptru	equ	0xFF8
 15822                           tblptrh	equ	0xFF7
 15823                           tblptrl	equ	0xFF6
 15824                           tablat	equ	0xFF5
 15825                           prodh	equ	0xFF4
 15826                           prodl	equ	0xFF3
 15827                           intcon	equ	0xFF2
 15828                           postinc0	equ	0xFEE
 15829                           wreg	equ	0xFE8
 15830                           indf1	equ	0xFE7
 15831                           plusw1	equ	0xFE3
 15832                           fsr1h	equ	0xFE2
 15833                           fsr1l	equ	0xFE1
 15834                           indf2	equ	0xFDF
 15835                           postinc2	equ	0xFDE
 15836                           plusw2	equ	0xFDB
 15837                           fsr2h	equ	0xFDA
 15838                           fsr2l	equ	0xFD9
 15839                           status	equ	0xFD8
 15840                           
 15841 ;; *************** function ___wmul *****************
 15842 ;; Defined at:
 15843 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 15844 ;; Parameters:    Size  Location     Type
 15845 ;;  multiplier      2   16[BANK0 ] unsigned int 
 15846 ;;  multiplicand    2   18[BANK0 ] unsigned int 
 15847 ;; Auto vars:     Size  Location     Type
 15848 ;;  product         2   20[BANK0 ] unsigned int 
 15849 ;; Return value:  Size  Location     Type
 15850 ;;                  2   16[BANK0 ] unsigned int 
 15851 ;; Registers used:
 15852 ;;		wreg, status,2, status,0, prodl, prodh
 15853 ;; Tracked objects:
 15854 ;;		On entry : 0/0
 15855 ;;		On exit  : 0/0
 15856 ;;		Unchanged: 0/0
 15857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15858 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15859 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15861 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15862 ;;Total ram usage:        6 bytes
 15863 ;; Hardware stack levels used:    1
 15864 ;; Hardware stack levels required when called:    3
 15865 ;; This function calls:
 15866 ;;		Nothing
 15867 ;; This function is called by:
 15868 ;;		_delay_ms
 15869 ;;		_sprintf
 15870 ;; This function uses a non-reentrant model
 15871 ;;
 15872                           
 15873                           	psect	text44
 15874  015F70                     __ptext44:
 15875                           	opt stack 0
 15876  015F70                     ___wmul:
 15877                           	opt stack 26
 15878                           
 15879                           ; BSR set to: 0
 15880                           ;incstack = 0
 15881  015F70  0100               	movlb	0	; () banked
 15882  015F72  5170               	movf	___wmul@multiplier& (0+255),w,b
 15883  015F74  0100               	movlb	0	; () banked
 15884  015F76  0372               	mulwf	___wmul@multiplicand& (0+255),b
 15885  015F78  CFF3 F074          	movff	prodl,___wmul@product
 15886  015F7C  CFF4 F075          	movff	prodh,___wmul@product+1
 15887  015F80  0100               	movlb	0	; () banked
 15888  015F82  5170               	movf	___wmul@multiplier& (0+255),w,b
 15889  015F84  0100               	movlb	0	; () banked
 15890  015F86  0373               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 15891  015F88  50F3               	movf	prodl,w,c
 15892  015F8A  0100               	movlb	0	; () banked
 15893  015F8C  2775               	addwf	(___wmul@product+1)& (0+255),f,b
 15894  015F8E  0100               	movlb	0	; () banked
 15895  015F90  5171               	movf	(___wmul@multiplier+1)& (0+255),w,b
 15896  015F92  0100               	movlb	0	; () banked
 15897  015F94  0372               	mulwf	___wmul@multiplicand& (0+255),b
 15898  015F96  50F3               	movf	prodl,w,c
 15899  015F98  0100               	movlb	0	; () banked
 15900  015F9A  2775               	addwf	(___wmul@product+1)& (0+255),f,b
 15901                           
 15902                           ; BSR set to: 0
 15903  015F9C  C074  F070         	movff	___wmul@product,?___wmul
 15904  015FA0  C075  F071         	movff	___wmul@product+1,?___wmul+1
 15905  015FA4  0012               	return	
 15906  015FA6                     __end_of___wmul:
 15907                           	opt stack 0
 15908                           tblptru	equ	0xFF8
 15909                           tblptrh	equ	0xFF7
 15910                           tblptrl	equ	0xFF6
 15911                           tablat	equ	0xFF5
 15912                           prodh	equ	0xFF4
 15913                           prodl	equ	0xFF3
 15914                           intcon	equ	0xFF2
 15915                           postinc0	equ	0xFEE
 15916                           wreg	equ	0xFE8
 15917                           indf1	equ	0xFE7
 15918                           plusw1	equ	0xFE3
 15919                           fsr1h	equ	0xFE2
 15920                           fsr1l	equ	0xFE1
 15921                           indf2	equ	0xFDF
 15922                           postinc2	equ	0xFDE
 15923                           plusw2	equ	0xFDB
 15924                           fsr2h	equ	0xFDA
 15925                           fsr2l	equ	0xFD9
 15926                           status	equ	0xFD8
 15927                           
 15928 ;; *************** function _Joystick_Polling *****************
 15929 ;; Defined at:
 15930 ;;		line 451 in file "RemoteCan.c"
 15931 ;; Parameters:    Size  Location     Type
 15932 ;;		None
 15933 ;; Auto vars:     Size  Location     Type
 15934 ;;  i               1   17[BANK0 ] unsigned char 
 15935 ;; Return value:  Size  Location     Type
 15936 ;;		None               void
 15937 ;; Registers used:
 15938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15939 ;; Tracked objects:
 15940 ;;		On entry : 0/0
 15941 ;;		On exit  : 0/0
 15942 ;;		Unchanged: 0/0
 15943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15945 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15946 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15947 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15948 ;;Total ram usage:        2 bytes
 15949 ;; Hardware stack levels used:    1
 15950 ;; Hardware stack levels required when called:    3
 15951 ;; This function calls:
 15952 ;;		Nothing
 15953 ;; This function is called by:
 15954 ;;		_main
 15955 ;; This function uses a non-reentrant model
 15956 ;;
 15957                           
 15958                           	psect	text45
 15959  015D50                     __ptext45:
 15960                           	opt stack 0
 15961  015D50                     _Joystick_Polling:
 15962                           	opt stack 27
 15963                           
 15964                           ;RemoteCan.c: 452: for (unsigned char i = 0; i < 2; i++) {
 15965                           
 15966                           ; BSR set to: 0
 15967                           ;incstack = 0
 15968  015D50  0E00               	movlw	0
 15969  015D52  0100               	movlb	0	; () banked
 15970  015D54  6F71               	movwf	Joystick_Polling@i& (0+255),b
 15971  015D56                     l6942:
 15972                           
 15973                           ; BSR set to: 0
 15974  015D56  0E01               	movlw	1
 15975  015D58  0100               	movlb	0	; () banked
 15976  015D5A  6571               	cpfsgt	Joystick_Polling@i& (0+255),b
 15977  015D5C  D001               	goto	l884
 15978  015D5E  0012               	return	
 15979  015D60                     l884:
 15980                           
 15981                           ; BSR set to: 0
 15982                           ;RemoteCan.c: 453: ADCON0bits.GO = 1;
 15983  015D60  82C2               	bsf	4034,1,c	;volatile
 15984  015D62                     l886:
 15985  015D62  B2C2               	btfsc	4034,1,c	;volatile
 15986  015D64  D7FE               	goto	l886
 15987                           
 15988                           ;RemoteCan.c: 455: JoystickValues[i] = ADRESH;
 15989  015D66  0100               	movlb	0	; () banked
 15990  015D68  5171               	movf	Joystick_Polling@i& (0+255),w,b
 15991  015D6A  0D01               	mullw	1
 15992  015D6C  0EDC               	movlw	low _JoystickValues
 15993  015D6E  24F3               	addwf	prodl,w,c
 15994  015D70  6ED9               	movwf	fsr2l,c
 15995  015D72  0E00               	movlw	high _JoystickValues
 15996  015D74  20F4               	addwfc	prodh,w,c
 15997  015D76  6EDA               	movwf	fsr2h,c
 15998  015D78  CFC4 FFDF          	movff	4036,indf2	;volatile
 15999                           
 16000                           ; BSR set to: 0
 16001                           ;RemoteCan.c: 456: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 16002  015D7C  A4C2               	btfss	4034,2,c	;volatile
 16003  015D7E  D002               	goto	u8880
 16004  015D80  0E01               	movlw	1
 16005  015D82  D001               	goto	u8886
 16006  015D84                     u8880:
 16007  015D84  0E00               	movlw	0
 16008  015D86                     u8886:
 16009  015D86  0AFF               	xorlw	255
 16010  015D88  0100               	movlb	0	; () banked
 16011  015D8A  6F70               	movwf	??_Joystick_Polling& (0+255),b
 16012  015D8C  0100               	movlb	0	; () banked
 16013  015D8E  4770               	rlncf	??_Joystick_Polling& (0+255),f,b
 16014  015D90  4770               	rlncf	??_Joystick_Polling& (0+255),f,b
 16015  015D92  50C2               	movf	4034,w,c	;volatile
 16016  015D94  0100               	movlb	0	; () banked
 16017  015D96  1970               	xorwf	??_Joystick_Polling& (0+255),w,b
 16018  015D98  0BFB               	andlw	-5
 16019  015D9A  1970               	xorwf	??_Joystick_Polling& (0+255),w,b
 16020  015D9C  6EC2               	movwf	4034,c	;volatile
 16021                           
 16022                           ; BSR set to: 0
 16023  015D9E  0100               	movlb	0	; () banked
 16024  015DA0  2B71               	incf	Joystick_Polling@i& (0+255),f,b
 16025  015DA2  D7D9               	goto	l6942
 16026  015DA4                     __end_of_Joystick_Polling:
 16027                           	opt stack 0
 16028                           tblptru	equ	0xFF8
 16029                           tblptrh	equ	0xFF7
 16030                           tblptrl	equ	0xFF6
 16031                           tablat	equ	0xFF5
 16032                           prodh	equ	0xFF4
 16033                           prodl	equ	0xFF3
 16034                           intcon	equ	0xFF2
 16035                           postinc0	equ	0xFEE
 16036                           wreg	equ	0xFE8
 16037                           indf1	equ	0xFE7
 16038                           plusw1	equ	0xFE3
 16039                           fsr1h	equ	0xFE2
 16040                           fsr1l	equ	0xFE1
 16041                           indf2	equ	0xFDF
 16042                           postinc2	equ	0xFDE
 16043                           plusw2	equ	0xFDB
 16044                           fsr2h	equ	0xFDA
 16045                           fsr2l	equ	0xFD9
 16046                           status	equ	0xFD8
 16047                           
 16048 ;; *************** function _F2_Button_Polling *****************
 16049 ;; Defined at:
 16050 ;;		line 441 in file "RemoteCan.c"
 16051 ;; Parameters:    Size  Location     Type
 16052 ;;		None
 16053 ;; Auto vars:     Size  Location     Type
 16054 ;;		None
 16055 ;; Return value:  Size  Location     Type
 16056 ;;		None               void
 16057 ;; Registers used:
 16058 ;;		None
 16059 ;; Tracked objects:
 16060 ;;		On entry : 0/0
 16061 ;;		On exit  : 0/0
 16062 ;;		Unchanged: 0/0
 16063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16068 ;;Total ram usage:        0 bytes
 16069 ;; Hardware stack levels used:    1
 16070 ;; Hardware stack levels required when called:    3
 16071 ;; This function calls:
 16072 ;;		Nothing
 16073 ;; This function is called by:
 16074 ;;		_main
 16075 ;; This function uses a non-reentrant model
 16076 ;;
 16077                           
 16078                           	psect	text46
 16079  01612A                     __ptext46:
 16080                           	opt stack 0
 16081  01612A                     _F2_Button_Polling:
 16082                           	opt stack 27
 16083                           
 16084                           ;RemoteCan.c: 442: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 16085                           
 16086                           ; BSR set to: 0
 16087                           ;incstack = 0
 16088  01612A  A281               	btfss	3969,1,c	;volatile
 16089  01612C  D002               	goto	l879
 16090  01612E  B84C               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16091  016130  0012               	return	
 16092  016132                     l879:
 16093                           
 16094                           ;RemoteCan.c: 443: wait_low_3 = 0;
 16095  016132  984C               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16096                           
 16097                           ;RemoteCan.c: 444: if (PORTBbits.RB1 == 1) {
 16098  016134  A281               	btfss	3969,1,c	;volatile
 16099  016136  0012               	return	
 16100                           
 16101                           ;RemoteCan.c: 445: F2_switch = ~F2_switch;
 16102  016138  B44B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16103  01613A  D002               	goto	u8810
 16104  01613C  844B               	bsf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16105  01613E  D001               	goto	u8825
 16106  016140                     u8810:
 16107  016140  944B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16108  016142                     u8825:
 16109                           
 16110                           ;RemoteCan.c: 446: wait_low_3 = 1;
 16111  016142  884C               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16112  016144  0012               	return	
 16113  016146                     __end_of_F2_Button_Polling:
 16114                           	opt stack 0
 16115                           tblptru	equ	0xFF8
 16116                           tblptrh	equ	0xFF7
 16117                           tblptrl	equ	0xFF6
 16118                           tablat	equ	0xFF5
 16119                           prodh	equ	0xFF4
 16120                           prodl	equ	0xFF3
 16121                           intcon	equ	0xFF2
 16122                           postinc0	equ	0xFEE
 16123                           wreg	equ	0xFE8
 16124                           indf1	equ	0xFE7
 16125                           plusw1	equ	0xFE3
 16126                           fsr1h	equ	0xFE2
 16127                           fsr1l	equ	0xFE1
 16128                           indf2	equ	0xFDF
 16129                           postinc2	equ	0xFDE
 16130                           plusw2	equ	0xFDB
 16131                           fsr2h	equ	0xFDA
 16132                           fsr2l	equ	0xFD9
 16133                           status	equ	0xFD8
 16134                           
 16135 ;; *************** function _F1_Button_Polling *****************
 16136 ;; Defined at:
 16137 ;;		line 431 in file "RemoteCan.c"
 16138 ;; Parameters:    Size  Location     Type
 16139 ;;		None
 16140 ;; Auto vars:     Size  Location     Type
 16141 ;;		None
 16142 ;; Return value:  Size  Location     Type
 16143 ;;		None               void
 16144 ;; Registers used:
 16145 ;;		None
 16146 ;; Tracked objects:
 16147 ;;		On entry : 0/0
 16148 ;;		On exit  : 0/0
 16149 ;;		Unchanged: 0/0
 16150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16155 ;;Total ram usage:        0 bytes
 16156 ;; Hardware stack levels used:    1
 16157 ;; Hardware stack levels required when called:    3
 16158 ;; This function calls:
 16159 ;;		Nothing
 16160 ;; This function is called by:
 16161 ;;		_main
 16162 ;; This function uses a non-reentrant model
 16163 ;;
 16164                           
 16165                           	psect	text47
 16166  016146                     __ptext47:
 16167                           	opt stack 0
 16168  016146                     _F1_Button_Polling:
 16169                           	opt stack 27
 16170                           
 16171                           ;RemoteCan.c: 432: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 16172                           
 16173                           ;incstack = 0
 16174  016146  A881               	btfss	3969,4,c	;volatile
 16175  016148  D002               	goto	l872
 16176  01614A  B64C               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16177  01614C  0012               	return	
 16178  01614E                     l872:
 16179                           
 16180                           ;RemoteCan.c: 433: wait_low_2 = 0;
 16181  01614E  964C               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16182                           
 16183                           ;RemoteCan.c: 434: if (PORTBbits.RB4 == 1) {
 16184  016150  A881               	btfss	3969,4,c	;volatile
 16185  016152  0012               	return	
 16186                           
 16187                           ;RemoteCan.c: 435: F1_switch = ~F1_switch;
 16188  016154  B24B               	btfsc	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16189  016156  D002               	goto	u8760
 16190  016158  824B               	bsf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16191  01615A  D001               	goto	u8775
 16192  01615C                     u8760:
 16193  01615C  924B               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16194  01615E                     u8775:
 16195                           
 16196                           ;RemoteCan.c: 436: wait_low_2 = 1;
 16197  01615E  864C               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16198  016160  0012               	return	
 16199  016162                     __end_of_F1_Button_Polling:
 16200                           	opt stack 0
 16201                           tblptru	equ	0xFF8
 16202                           tblptrh	equ	0xFF7
 16203                           tblptrl	equ	0xFF6
 16204                           tablat	equ	0xFF5
 16205                           prodh	equ	0xFF4
 16206                           prodl	equ	0xFF3
 16207                           intcon	equ	0xFF2
 16208                           postinc0	equ	0xFEE
 16209                           wreg	equ	0xFE8
 16210                           indf1	equ	0xFE7
 16211                           plusw1	equ	0xFE3
 16212                           fsr1h	equ	0xFE2
 16213                           fsr1l	equ	0xFE1
 16214                           indf2	equ	0xFDF
 16215                           postinc2	equ	0xFDE
 16216                           plusw2	equ	0xFDB
 16217                           fsr2h	equ	0xFDA
 16218                           fsr2l	equ	0xFD9
 16219                           status	equ	0xFD8
 16220                           
 16221 ;; *************** function _CAN_interpreter *****************
 16222 ;; Defined at:
 16223 ;;		line 387 in file "RemoteCan.c"
 16224 ;; Parameters:    Size  Location     Type
 16225 ;;		None
 16226 ;; Auto vars:     Size  Location     Type
 16227 ;;		None
 16228 ;; Return value:  Size  Location     Type
 16229 ;;		None               void
 16230 ;; Registers used:
 16231 ;;		wreg, status,2, status,0
 16232 ;; Tracked objects:
 16233 ;;		On entry : 0/0
 16234 ;;		On exit  : 0/0
 16235 ;;		Unchanged: 0/0
 16236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16239 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16240 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16241 ;;Total ram usage:        4 bytes
 16242 ;; Hardware stack levels used:    1
 16243 ;; Hardware stack levels required when called:    3
 16244 ;; This function calls:
 16245 ;;		Nothing
 16246 ;; This function is called by:
 16247 ;;		_main
 16248 ;; This function uses a non-reentrant model
 16249 ;;
 16250                           
 16251                           	psect	text48
 16252  015956                     __ptext48:
 16253                           	opt stack 0
 16254  015956                     _CAN_interpreter:
 16255                           	opt stack 27
 16256                           
 16257                           ;RemoteCan.c: 388: if (id == 0b00000000010) {
 16258                           
 16259                           ;incstack = 0
 16260  015956  0E02               	movlw	2
 16261  015958  180C               	xorwf	_id,w,c	;volatile
 16262  01595A  100D               	iorwf	_id+1,w,c	;volatile
 16263  01595C  100E               	iorwf	_id+2,w,c	;volatile
 16264  01595E  100F               	iorwf	_id+3,w,c	;volatile
 16265  015960  A4D8               	btfss	status,2,c
 16266  015962  D015               	goto	l6970
 16267                           
 16268                           ;RemoteCan.c: 389: if (RTR_Flag == 1) {
 16269  015964  A84B               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 16270  015966  D00C               	goto	l6960
 16271                           
 16272                           ;RemoteCan.c: 390: pr_time_4 = time_counter;
 16273  015968  C01C  F014         	movff	_time_counter,_pr_time_4	;volatile
 16274  01596C  C01D  F015         	movff	_time_counter+1,_pr_time_4+1	;volatile
 16275  015970  C01E  F016         	movff	_time_counter+2,_pr_time_4+2	;volatile
 16276  015974  C01F  F017         	movff	_time_counter+3,_pr_time_4+3	;volatile
 16277                           
 16278                           ;RemoteCan.c: 391: MotoreFlag = 1;
 16279  015978  864B               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 16280                           
 16281                           ;RemoteCan.c: 392: AbsFlag = 0;
 16282  01597A  904B               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 16283                           
 16284                           ;RemoteCan.c: 393: SterzoFlag = 0;
 16285  01597C  9A4B               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 16286                           
 16287                           ;RemoteCan.c: 394: } else {
 16288  01597E  D007               	goto	l6970
 16289  015980                     l6960:
 16290                           
 16291                           ;RemoteCan.c: 395: if (data[0] == 0x01) {
 16292  015980  0428               	decf	_data,w,c
 16293  015982  B4D8               	btfsc	status,2,c
 16294                           
 16295                           ;RemoteCan.c: 396: AbsFlag = 1;
 16296  015984  804B               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 16297                           
 16298                           ;RemoteCan.c: 397: }
 16299                           ;RemoteCan.c: 398: if (data[0] == 0x02) {
 16300  015986  0E02               	movlw	2
 16301  015988  1828               	xorwf	_data,w,c
 16302  01598A  B4D8               	btfsc	status,2,c
 16303                           
 16304                           ;RemoteCan.c: 399: SterzoFlag = 1;
 16305  01598C  8A4B               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 16306  01598E                     l6970:
 16307                           
 16308                           ;RemoteCan.c: 406: }
 16309                           ;RemoteCan.c: 408: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 16310  01598E  0E06               	movlw	6
 16311  015990  180C               	xorwf	_id,w,c	;volatile
 16312  015992  100D               	iorwf	_id+1,w,c	;volatile
 16313  015994  100E               	iorwf	_id+2,w,c	;volatile
 16314  015996  100F               	iorwf	_id+3,w,c	;volatile
 16315  015998  B4D8               	btfsc	status,2,c
 16316  01599A  B84B               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 16317  01599C  D027               	goto	l6982
 16318                           
 16319                           ;RemoteCan.c: 409: left_speed = data_speed_rx[1];
 16320  01599E  C002  F020         	movff	_data_speed_rx+1,_left_speed
 16321  0159A2  6A21               	clrf	_left_speed+1,c
 16322                           
 16323                           ;RemoteCan.c: 410: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 16324  0159A4  5020               	movf	_left_speed,w,c
 16325  0159A6  0100               	movlb	0	; () banked
 16326  0159A8  6F70               	movwf	??_CAN_interpreter& (0+255),b
 16327  0159AA  5001               	movf	_data_speed_rx,w,c
 16328  0159AC  6E20               	movwf	_left_speed,c
 16329  0159AE  C070  F021         	movff	??_CAN_interpreter,_left_speed+1
 16330                           
 16331                           ; BSR set to: 0
 16332                           ;RemoteCan.c: 411: right_speed = data_speed_rx[3];
 16333  0159B2  C004  F022         	movff	_data_speed_rx+3,_right_speed
 16334  0159B6  6A23               	clrf	_right_speed+1,c
 16335                           
 16336                           ;RemoteCan.c: 412: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 16337  0159B8  5022               	movf	_right_speed,w,c
 16338  0159BA  0100               	movlb	0	; () banked
 16339  0159BC  6F70               	movwf	??_CAN_interpreter& (0+255),b
 16340  0159BE  5003               	movf	_data_speed_rx+2,w,c
 16341  0159C0  6E22               	movwf	_right_speed,c
 16342  0159C2  C070  F023         	movff	??_CAN_interpreter,_right_speed+1
 16343                           
 16344                           ; BSR set to: 0
 16345                           ;RemoteCan.c: 413: actual_speed = (right_speed + left_speed) / 2;
 16346  0159C6  5020               	movf	_left_speed,w,c
 16347  0159C8  2422               	addwf	_right_speed,w,c
 16348  0159CA  0100               	movlb	0	; () banked
 16349  0159CC  6F70               	movwf	??_CAN_interpreter& (0+255),b
 16350  0159CE  5021               	movf	_left_speed+1,w,c
 16351  0159D0  2023               	addwfc	_right_speed+1,w,c
 16352  0159D2  0100               	movlb	0	; () banked
 16353  0159D4  6F71               	movwf	(??_CAN_interpreter+1)& (0+255),b
 16354  0159D6  90D8               	bcf	status,0,c
 16355  0159D8  0100               	movlb	0	; () banked
 16356  0159DA  3171               	rrcf	(??_CAN_interpreter+1)& (0+255),w,b
 16357  0159DC  0100               	movlb	0	; () banked
 16358  0159DE  6F72               	movwf	(??_CAN_interpreter+2)& (0+255),b
 16359  0159E0  0100               	movlb	0	; () banked
 16360  0159E2  3170               	rrcf	??_CAN_interpreter& (0+255),w,b
 16361  0159E4  0100               	movlb	0	; () banked
 16362  0159E6  6FDE               	movwf	_actual_speed& (0+255),b
 16363  0159E8  C072  F0DF         	movff	??_CAN_interpreter+2,_actual_speed+1
 16364  0159EC                     l6982:
 16365                           
 16366                           ;RemoteCan.c: 414: }
 16367                           ;RemoteCan.c: 416: if (id == 0b00000001001) {
 16368  0159EC  0E09               	movlw	9
 16369  0159EE  180C               	xorwf	_id,w,c	;volatile
 16370  0159F0  100D               	iorwf	_id+1,w,c	;volatile
 16371  0159F2  100E               	iorwf	_id+2,w,c	;volatile
 16372  0159F4  100F               	iorwf	_id+3,w,c	;volatile
 16373  0159F6  A4D8               	btfss	status,2,c
 16374  0159F8  0012               	return	
 16375                           
 16376                           ;RemoteCan.c: 417: battery = data[0];
 16377  0159FA  C028  F026         	movff	_data,_battery	;volatile
 16378  0159FE  0012               	return	
 16379  015A00                     __end_of_CAN_interpreter:
 16380                           	opt stack 0
 16381                           tblptru	equ	0xFF8
 16382                           tblptrh	equ	0xFF7
 16383                           tblptrl	equ	0xFF6
 16384                           tablat	equ	0xFF5
 16385                           prodh	equ	0xFF4
 16386                           prodl	equ	0xFF3
 16387                           intcon	equ	0xFF2
 16388                           postinc0	equ	0xFEE
 16389                           wreg	equ	0xFE8
 16390                           indf1	equ	0xFE7
 16391                           plusw1	equ	0xFE3
 16392                           fsr1h	equ	0xFE2
 16393                           fsr1l	equ	0xFE1
 16394                           indf2	equ	0xFDF
 16395                           postinc2	equ	0xFDE
 16396                           plusw2	equ	0xFDB
 16397                           fsr2h	equ	0xFDA
 16398                           fsr2l	equ	0xFD9
 16399                           status	equ	0xFD8
 16400                           
 16401 ;; *************** function _CAN_Send *****************
 16402 ;; Defined at:
 16403 ;;		line 308 in file "RemoteCan.c"
 16404 ;; Parameters:    Size  Location     Type
 16405 ;;		None
 16406 ;; Auto vars:     Size  Location     Type
 16407 ;;		None
 16408 ;; Return value:  Size  Location     Type
 16409 ;;		None               void
 16410 ;; Registers used:
 16411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16412 ;; Tracked objects:
 16413 ;;		On entry : 0/0
 16414 ;;		On exit  : 0/0
 16415 ;;		Unchanged: 0/0
 16416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16421 ;;Total ram usage:        0 bytes
 16422 ;; Hardware stack levels used:    1
 16423 ;; Hardware stack levels required when called:    4
 16424 ;; This function calls:
 16425 ;;		_CANisTxReady
 16426 ;;		_CANsendMessage
 16427 ;; This function is called by:
 16428 ;;		_main
 16429 ;; This function uses a non-reentrant model
 16430 ;;
 16431                           
 16432                           	psect	text49
 16433  01589C                     __ptext49:
 16434                           	opt stack 0
 16435  01589C                     _CAN_Send:
 16436                           	opt stack 26
 16437  01589C                     l6922:
 16438  01589C  EC47  F0B0         	call	_CANisTxReady	;wreg free
 16439  0158A0  06E8               	decf	wreg,f,c
 16440  0158A2  A4D8               	btfss	status,2,c
 16441  0158A4  D7FB               	goto	l6922
 16442                           
 16443                           ;RemoteCan.c: 310: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 16444  0158A6  0E05               	movlw	5
 16445  0158A8  0100               	movlb	0	; () banked
 16446  0158AA  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 16447  0158AC  0E00               	movlw	0
 16448  0158AE  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16449  0158B0  0E00               	movlw	0
 16450  0158B2  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16451  0158B4  0E00               	movlw	0
 16452  0158B6  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16453  0158B8  0EEB               	movlw	low _data_steering
 16454  0158BA  0100               	movlb	0	; () banked
 16455  0158BC  6F74               	movwf	CANsendMessage@data& (0+255),b
 16456  0158BE  0E00               	movlw	high _data_steering
 16457  0158C0  0100               	movlb	0	; () banked
 16458  0158C2  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 16459  0158C4  0E08               	movlw	8
 16460  0158C6  0100               	movlb	0	; () banked
 16461  0158C8  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 16462  0158CA  0EBC               	movlw	188
 16463  0158CC  0100               	movlb	0	; () banked
 16464  0158CE  6F77               	movwf	CANsendMessage@flags& (0+255),b
 16465  0158D0  ECCD  F089         	call	_CANsendMessage	;wreg free
 16466                           
 16467                           ;RemoteCan.c: 311: data_speed[0] = set_speed;
 16468  0158D4  C0E2  F0EA         	movff	_set_speed,_data_speed	;volatile
 16469                           
 16470                           ;RemoteCan.c: 312: data_speed[1] = (set_speed >> 8);
 16471  0158D8  0100               	movlb	0	; () banked
 16472  0158DA  51E3               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 16473  0158DC  0100               	movlb	0	; () banked
 16474  0158DE  6FEB               	movwf	(_data_speed+1)& (0+255),b
 16475                           
 16476                           ; BSR set to: 0
 16477                           ;RemoteCan.c: 313: data_speed[2] = dir;
 16478  0158E0  C0E4  F0EC         	movff	_dir,_data_speed+2	;volatile
 16479  0158E4                     l6932:
 16480  0158E4  EC47  F0B0         	call	_CANisTxReady	;wreg free
 16481  0158E8  06E8               	decf	wreg,f,c
 16482  0158EA  A4D8               	btfss	status,2,c
 16483  0158EC  D7FB               	goto	l6932
 16484                           
 16485                           ;RemoteCan.c: 315: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 16486  0158EE  0E03               	movlw	3
 16487  0158F0  0100               	movlb	0	; () banked
 16488  0158F2  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 16489  0158F4  0E00               	movlw	0
 16490  0158F6  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16491  0158F8  0E00               	movlw	0
 16492  0158FA  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16493  0158FC  0E00               	movlw	0
 16494  0158FE  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16495  015900  0EEA               	movlw	low _data_speed
 16496  015902  0100               	movlb	0	; () banked
 16497  015904  6F74               	movwf	CANsendMessage@data& (0+255),b
 16498  015906  0E00               	movlw	high _data_speed
 16499  015908  0100               	movlb	0	; () banked
 16500  01590A  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 16501  01590C  0E08               	movlw	8
 16502  01590E  0100               	movlb	0	; () banked
 16503  015910  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 16504  015912  0EBC               	movlw	188
 16505  015914  0100               	movlb	0	; () banked
 16506  015916  6F77               	movwf	CANsendMessage@flags& (0+255),b
 16507  015918  ECCD  F089         	call	_CANsendMessage	;wreg free
 16508  01591C                     l6936:
 16509  01591C  EC47  F0B0         	call	_CANisTxReady	;wreg free
 16510  015920  06E8               	decf	wreg,f,c
 16511  015922  A4D8               	btfss	status,2,c
 16512  015924  D7FB               	goto	l6936
 16513                           
 16514                           ;RemoteCan.c: 317: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_1);
 16515  015926  0E04               	movlw	4
 16516  015928  0100               	movlb	0	; () banked
 16517  01592A  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 16518  01592C  0E00               	movlw	0
 16519  01592E  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16520  015930  0E00               	movlw	0
 16521  015932  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16522  015934  0E00               	movlw	0
 16523  015936  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16524  015938  0EE9               	movlw	low _data_brake
 16525  01593A  0100               	movlb	0	; () banked
 16526  01593C  6F74               	movwf	CANsendMessage@data& (0+255),b
 16527  01593E  0E00               	movlw	high _data_brake
 16528  015940  0100               	movlb	0	; () banked
 16529  015942  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 16530  015944  0E08               	movlw	8
 16531  015946  0100               	movlb	0	; () banked
 16532  015948  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 16533  01594A  0EBD               	movlw	189
 16534  01594C  0100               	movlb	0	; () banked
 16535  01594E  6F77               	movwf	CANsendMessage@flags& (0+255),b
 16536  015950  ECCD  F089         	call	_CANsendMessage	;wreg free
 16537  015954  0012               	return		;funcret
 16538  015956                     __end_of_CAN_Send:
 16539                           	opt stack 0
 16540                           tblptru	equ	0xFF8
 16541                           tblptrh	equ	0xFF7
 16542                           tblptrl	equ	0xFF6
 16543                           tablat	equ	0xFF5
 16544                           prodh	equ	0xFF4
 16545                           prodl	equ	0xFF3
 16546                           intcon	equ	0xFF2
 16547                           postinc0	equ	0xFEE
 16548                           wreg	equ	0xFE8
 16549                           indf1	equ	0xFE7
 16550                           plusw1	equ	0xFE3
 16551                           fsr1h	equ	0xFE2
 16552                           fsr1l	equ	0xFE1
 16553                           indf2	equ	0xFDF
 16554                           postinc2	equ	0xFDE
 16555                           plusw2	equ	0xFDB
 16556                           fsr2h	equ	0xFDA
 16557                           fsr2l	equ	0xFD9
 16558                           status	equ	0xFD8
 16559                           
 16560 ;; *************** function _CANsendMessage *****************
 16561 ;; Defined at:
 16562 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 16563 ;; Parameters:    Size  Location     Type
 16564 ;;  identifier      4   16[BANK0 ] unsigned long 
 16565 ;;  data            2   20[BANK0 ] PTR unsigned char 
 16566 ;;		 -> data_speed(1), park_assist_state(8), data_brake(1), data_steering(1), 
 16567 ;;		 -> data(1), 
 16568 ;;  dataLength      1   22[BANK0 ] unsigned char 
 16569 ;;  flags           1   23[BANK0 ] enum E16909
 16570 ;; Auto vars:     Size  Location     Type
 16571 ;;  tamp            4   28[BANK0 ] unsigned long 
 16572 ;; Return value:  Size  Location     Type
 16573 ;;		None               void
 16574 ;; Registers used:
 16575 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16576 ;; Tracked objects:
 16577 ;;		On entry : 0/0
 16578 ;;		On exit  : 0/0
 16579 ;;		Unchanged: 0/0
 16580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16581 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16582 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16583 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16584 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16585 ;;Total ram usage:       16 bytes
 16586 ;; Hardware stack levels used:    1
 16587 ;; Hardware stack levels required when called:    3
 16588 ;; This function calls:
 16589 ;;		Nothing
 16590 ;; This function is called by:
 16591 ;;		_main
 16592 ;;		_CAN_Send
 16593 ;;		_LCD_Handler
 16594 ;; This function uses a non-reentrant model
 16595 ;;
 16596                           
 16597                           	psect	text50
 16598  01139A                     __ptext50:
 16599                           	opt stack 0
 16600  01139A                     _CANsendMessage:
 16601                           	opt stack 26
 16602                           
 16603                           ;inc\CANlib.h: 296: unsigned long tamp;
 16604                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 16605                           
 16606                           ;incstack = 0
 16607  01139A  010F               	movlb	15	; () banked
 16608  01139C  B740               	btfsc	64,3,b	;volatile
 16609  01139E  D13F               	goto	l375
 16610                           
 16611                           ; BSR set to: 15
 16612                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 16613  0113A0  C076  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 16614                           
 16615                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 16616  0113A4  0100               	movlb	0	; () banked
 16617  0113A6  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 16618  0113A8  D003               	goto	l376
 16619                           
 16620                           ; BSR set to: 0
 16621                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 16622  0113AA  010F               	movlb	15	; () banked
 16623  0113AC  8D45               	bsf	69,6,b	;volatile
 16624  0113AE  D002               	goto	l377
 16625  0113B0                     l376:
 16626                           
 16627                           ; BSR set to: 0
 16628                           ;inc\CANlib.h: 302: else
 16629                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 16630  0113B0  010F               	movlb	15	; () banked
 16631  0113B2  9D45               	bcf	69,6,b	;volatile
 16632  0113B4                     l377:
 16633                           
 16634                           ; BSR set to: 15
 16635                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 16636  0113B4  0100               	movlb	0	; () banked
 16637  0113B6  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 16638  0113B8  D079               	goto	l378
 16639                           
 16640                           ; BSR set to: 0
 16641                           ;inc\CANlib.h: 306: {
 16642                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 16643  0113BA  0100               	movlb	0	; () banked
 16644  0113BC  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 16645  0113BE  0100               	movlb	0	; () banked
 16646  0113C0  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 16647  0113C2  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16648  0113C4  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16649  0113C6  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16650                           
 16651                           ; BSR set to: 0
 16652                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 16653  0113C8  C07C  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 16654                           
 16655                           ; BSR set to: 0
 16656                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 16657  0113CC  0E00               	movlw	0
 16658  0113CE  0100               	movlb	0	; () banked
 16659  0113D0  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 16660  0113D2  0100               	movlb	0	; () banked
 16661  0113D4  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 16662  0113D6  0EFF               	movlw	255
 16663  0113D8  0100               	movlb	0	; () banked
 16664  0113DA  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16665  0113DC  0100               	movlb	0	; () banked
 16666  0113DE  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16667  0113E0  0E00               	movlw	0
 16668  0113E2  0100               	movlb	0	; () banked
 16669  0113E4  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16670  0113E6  0100               	movlb	0	; () banked
 16671  0113E8  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16672  0113EA  0E00               	movlw	0
 16673  0113EC  0100               	movlb	0	; () banked
 16674  0113EE  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16675  0113F0  0100               	movlb	0	; () banked
 16676  0113F2  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16677                           
 16678                           ; BSR set to: 0
 16679                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 16680  0113F4  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 16681  0113F8  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16682  0113FC  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16683  011400  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16684  011404  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 16685  011408  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16686  01140C  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16687  011410  0100               	movlb	0	; () banked
 16688  011412  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 16689  011414  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 16690  011418  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16691  01141C  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16692  011420  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16693                           
 16694                           ; BSR set to: 0
 16695                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 16696  011424  C07C  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 16697                           
 16698                           ; BSR set to: 0
 16699                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 16700  011428  0E00               	movlw	0
 16701  01142A  010F               	movlb	15	; () banked
 16702  01142C  6F42               	movwf	66,b	;volatile
 16703                           
 16704                           ; BSR set to: 15
 16705                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 16706  01142E  010F               	movlb	15	; () banked
 16707  011430  8742               	bsf	66,3,b	;volatile
 16708                           
 16709                           ; BSR set to: 15
 16710                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 16711  011432  0100               	movlb	0	; () banked
 16712  011434  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16713  011436  D002               	goto	l379
 16714                           
 16715                           ; BSR set to: 0
 16716                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 16717  011438  010F               	movlb	15	; () banked
 16718  01143A  8142               	bsf	66,0,b	;volatile
 16719  01143C                     l379:
 16720                           
 16721                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 16722  01143C  0100               	movlb	0	; () banked
 16723  01143E  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16724  011440  D002               	goto	l380
 16725                           
 16726                           ; BSR set to: 0
 16727                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 16728  011442  010F               	movlb	15	; () banked
 16729  011444  8342               	bsf	66,1,b	;volatile
 16730  011446                     l380:
 16731                           
 16732                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 16733  011446  0100               	movlb	0	; () banked
 16734  011448  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16735  01144A  D002               	goto	l381
 16736                           
 16737                           ; BSR set to: 0
 16738                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 16739  01144C  010F               	movlb	15	; () banked
 16740  01144E  8B42               	bsf	66,5,b	;volatile
 16741  011450                     l381:
 16742                           
 16743                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 16744  011450  0100               	movlb	0	; () banked
 16745  011452  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16746  011454  D002               	goto	l382
 16747                           
 16748                           ; BSR set to: 0
 16749                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 16750  011456  010F               	movlb	15	; () banked
 16751  011458  8D42               	bsf	66,6,b	;volatile
 16752  01145A                     l382:
 16753                           
 16754                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 16755  01145A  0100               	movlb	0	; () banked
 16756  01145C  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16757  01145E  D002               	goto	l6050
 16758                           
 16759                           ; BSR set to: 0
 16760                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 16761  011460  010F               	movlb	15	; () banked
 16762  011462  8F42               	bsf	66,7,b	;volatile
 16763  011464                     l6050:
 16764                           
 16765                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 16766  011464  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 16767  011468  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16768  01146C  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16769  011470  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16770  011474  0E16               	movlw	22
 16771  011476  D006               	goto	u7450
 16772  011478                     u7455:
 16773  011478  0100               	movlb	0	; () banked
 16774  01147A  90D8               	bcf	status,0,c
 16775  01147C  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16776  01147E  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16777  011480  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16778  011482  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 16779  011484                     u7450:
 16780  011484  2EE8               	decfsz	wreg,f,c
 16781  011486  D7F8               	goto	u7455
 16782  011488  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 16783  01148C  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16784  011490  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16785  011494  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16786                           
 16787                           ; BSR set to: 0
 16788                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 16789  011498  0100               	movlb	0	; () banked
 16790  01149A  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 16791  01149C  0100               	movlb	0	; () banked
 16792  01149E  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 16793  0114A0  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16794  0114A2  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16795  0114A4  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16796                           
 16797                           ; BSR set to: 0
 16798                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 16799  0114A6  C07C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 16800                           
 16801                           ;inc\CANlib.h: 332: }
 16802  0114AA  D059               	goto	l6070
 16803  0114AC                     l378:
 16804                           
 16805                           ; BSR set to: 0
 16806                           ;inc\CANlib.h: 334: else
 16807                           ;inc\CANlib.h: 336: {
 16808                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 16809  0114AC  010F               	movlb	15	; () banked
 16810  0114AE  9742               	bcf	66,3,b	;volatile
 16811                           
 16812                           ; BSR set to: 15
 16813                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 16814  0114B0  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 16815  0114B4  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16816  0114B8  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16817  0114BC  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16818  0114C0  0E04               	movlw	4
 16819  0114C2  D006               	goto	u7460
 16820  0114C4                     u7465:
 16821  0114C4  0100               	movlb	0	; () banked
 16822  0114C6  90D8               	bcf	status,0,c
 16823  0114C8  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16824  0114CA  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16825  0114CC  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16826  0114CE  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 16827  0114D0                     u7460:
 16828  0114D0  2EE8               	decfsz	wreg,f,c
 16829  0114D2  D7F8               	goto	u7465
 16830  0114D4  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 16831  0114D8  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16832  0114DC  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16833  0114E0  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16834                           
 16835                           ; BSR set to: 0
 16836                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 16837  0114E4  0100               	movlb	0	; () banked
 16838  0114E6  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 16839  0114E8  0100               	movlb	0	; () banked
 16840  0114EA  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 16841  0114EC  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16842  0114EE  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16843  0114F0  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16844                           
 16845                           ; BSR set to: 0
 16846                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 16847  0114F2  C07C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 16848                           
 16849                           ; BSR set to: 0
 16850                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 16851  0114F6  0E07               	movlw	7
 16852  0114F8  0100               	movlb	0	; () banked
 16853  0114FA  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 16854  0114FC  0100               	movlb	0	; () banked
 16855  0114FE  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 16856  011500  0E00               	movlw	0
 16857  011502  0100               	movlb	0	; () banked
 16858  011504  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16859  011506  0100               	movlb	0	; () banked
 16860  011508  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16861  01150A  0E00               	movlw	0
 16862  01150C  0100               	movlb	0	; () banked
 16863  01150E  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16864  011510  0100               	movlb	0	; () banked
 16865  011512  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16866  011514  0E00               	movlw	0
 16867  011516  0100               	movlb	0	; () banked
 16868  011518  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16869  01151A  0100               	movlb	0	; () banked
 16870  01151C  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16871                           
 16872                           ; BSR set to: 0
 16873                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 16874  01151E  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 16875  011522  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16876  011526  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16877  01152A  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16878  01152E  0E05               	movlw	5
 16879  011530                     u7475:
 16880  011530  90D8               	bcf	status,0,c
 16881  011532  0100               	movlb	0	; () banked
 16882  011534  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 16883  011536  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 16884  011538  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 16885  01153A  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 16886  01153C  2EE8               	decfsz	wreg,f,c
 16887  01153E  D7F8               	goto	u7475
 16888  011540  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 16889  011544  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16890  011548  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16891  01154C  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16892                           
 16893                           ; BSR set to: 0
 16894                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 16895  011550  010F               	movlb	15	; () banked
 16896  011552  5142               	movf	66,w,b	;volatile
 16897  011554  0B1F               	andlw	31
 16898  011556  010F               	movlb	15	; () banked
 16899  011558  6F42               	movwf	66,b	;volatile
 16900                           
 16901                           ; BSR set to: 15
 16902                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 16903  01155A  C07C  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 16904  01155E                     l6070:
 16905                           
 16906                           ;inc\CANlib.h: 347: }
 16907                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 16908  01155E  0100               	movlb	0	; () banked
 16909  011560  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 16910  011562  D003               	goto	l385
 16911                           
 16912                           ; BSR set to: 0
 16913                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 16914  011564  010F               	movlb	15	; () banked
 16915  011566  8140               	bsf	64,0,b	;volatile
 16916  011568  D002               	goto	l386
 16917  01156A                     l385:
 16918                           
 16919                           ; BSR set to: 0
 16920                           ;inc\CANlib.h: 351: else
 16921                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 16922  01156A  010F               	movlb	15	; () banked
 16923  01156C  9140               	bcf	64,0,b	;volatile
 16924  01156E                     l386:
 16925                           
 16926                           ; BSR set to: 15
 16927                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 16928  01156E  0100               	movlb	0	; () banked
 16929  011570  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 16930  011572  D003               	goto	l387
 16931                           
 16932                           ; BSR set to: 0
 16933                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 16934  011574  010F               	movlb	15	; () banked
 16935  011576  8340               	bsf	64,1,b	;volatile
 16936  011578  D002               	goto	l6076
 16937  01157A                     l387:
 16938                           
 16939                           ; BSR set to: 0
 16940                           ;inc\CANlib.h: 355: else
 16941                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 16942  01157A  010F               	movlb	15	; () banked
 16943  01157C  9340               	bcf	64,1,b	;volatile
 16944  01157E                     l6076:
 16945                           
 16946                           ; BSR set to: 15
 16947                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 16948  01157E  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 16949  011582  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16950  011586  50DF               	movf	indf2,w,c
 16951  011588  010F               	movlb	15	; () banked
 16952  01158A  6F46               	movwf	70,b	;volatile
 16953                           
 16954                           ; BSR set to: 15
 16955                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 16956  01158C  0100               	movlb	0	; () banked
 16957  01158E  EE20 F001          	lfsr	2,1
 16958  011592  5174               	movf	CANsendMessage@data& (0+255),w,b
 16959  011594  26D9               	addwf	fsr2l,f,c
 16960  011596  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16961  011598  22DA               	addwfc	fsr2h,f,c
 16962  01159A  50DF               	movf	indf2,w,c
 16963  01159C  010F               	movlb	15	; () banked
 16964  01159E  6F47               	movwf	71,b	;volatile
 16965                           
 16966                           ; BSR set to: 15
 16967                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 16968  0115A0  0100               	movlb	0	; () banked
 16969  0115A2  EE20 F002          	lfsr	2,2
 16970  0115A6  5174               	movf	CANsendMessage@data& (0+255),w,b
 16971  0115A8  26D9               	addwf	fsr2l,f,c
 16972  0115AA  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16973  0115AC  22DA               	addwfc	fsr2h,f,c
 16974  0115AE  50DF               	movf	indf2,w,c
 16975  0115B0  010F               	movlb	15	; () banked
 16976  0115B2  6F48               	movwf	72,b	;volatile
 16977                           
 16978                           ; BSR set to: 15
 16979                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 16980  0115B4  0100               	movlb	0	; () banked
 16981  0115B6  EE20 F003          	lfsr	2,3
 16982  0115BA  5174               	movf	CANsendMessage@data& (0+255),w,b
 16983  0115BC  26D9               	addwf	fsr2l,f,c
 16984  0115BE  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16985  0115C0  22DA               	addwfc	fsr2h,f,c
 16986  0115C2  50DF               	movf	indf2,w,c
 16987  0115C4  010F               	movlb	15	; () banked
 16988  0115C6  6F49               	movwf	73,b	;volatile
 16989                           
 16990                           ; BSR set to: 15
 16991                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 16992  0115C8  0100               	movlb	0	; () banked
 16993  0115CA  EE20 F004          	lfsr	2,4
 16994  0115CE  5174               	movf	CANsendMessage@data& (0+255),w,b
 16995  0115D0  26D9               	addwf	fsr2l,f,c
 16996  0115D2  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16997  0115D4  22DA               	addwfc	fsr2h,f,c
 16998  0115D6  50DF               	movf	indf2,w,c
 16999  0115D8  010F               	movlb	15	; () banked
 17000  0115DA  6F4A               	movwf	74,b	;volatile
 17001                           
 17002                           ; BSR set to: 15
 17003                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17004  0115DC  0100               	movlb	0	; () banked
 17005  0115DE  EE20 F005          	lfsr	2,5
 17006  0115E2  5174               	movf	CANsendMessage@data& (0+255),w,b
 17007  0115E4  26D9               	addwf	fsr2l,f,c
 17008  0115E6  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17009  0115E8  22DA               	addwfc	fsr2h,f,c
 17010  0115EA  50DF               	movf	indf2,w,c
 17011  0115EC  010F               	movlb	15	; () banked
 17012  0115EE  6F4B               	movwf	75,b	;volatile
 17013                           
 17014                           ; BSR set to: 15
 17015                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17016  0115F0  0100               	movlb	0	; () banked
 17017  0115F2  EE20 F006          	lfsr	2,6
 17018  0115F6  5174               	movf	CANsendMessage@data& (0+255),w,b
 17019  0115F8  26D9               	addwf	fsr2l,f,c
 17020  0115FA  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17021  0115FC  22DA               	addwfc	fsr2h,f,c
 17022  0115FE  50DF               	movf	indf2,w,c
 17023  011600  010F               	movlb	15	; () banked
 17024  011602  6F4C               	movwf	76,b	;volatile
 17025                           
 17026                           ; BSR set to: 15
 17027                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17028  011604  0100               	movlb	0	; () banked
 17029  011606  EE20 F007          	lfsr	2,7
 17030  01160A  5174               	movf	CANsendMessage@data& (0+255),w,b
 17031  01160C  26D9               	addwf	fsr2l,f,c
 17032  01160E  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17033  011610  22DA               	addwfc	fsr2h,f,c
 17034  011612  50DF               	movf	indf2,w,c
 17035  011614  010F               	movlb	15	; () banked
 17036  011616  6F4D               	movwf	77,b	;volatile
 17037                           
 17038                           ; BSR set to: 15
 17039                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17040  011618  010F               	movlb	15	; () banked
 17041  01161A  8740               	bsf	64,3,b	;volatile
 17042                           
 17043                           ; BSR set to: 15
 17044                           ;inc\CANlib.h: 368: return;
 17045  01161C  0012               	return	
 17046  01161E                     l375:
 17047                           
 17048                           ; BSR set to: 15
 17049                           ;inc\CANlib.h: 369: }
 17050                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17051  01161E  010F               	movlb	15	; () banked
 17052  011620  B730               	btfsc	48,3,b	;volatile
 17053  011622  D13F               	goto	l390
 17054                           
 17055                           ; BSR set to: 15
 17056                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17057  011624  C076  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 17058                           
 17059                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17060  011628  0100               	movlb	0	; () banked
 17061  01162A  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 17062  01162C  D003               	goto	l391
 17063                           
 17064                           ; BSR set to: 0
 17065                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17066  01162E  010F               	movlb	15	; () banked
 17067  011630  8D35               	bsf	53,6,b	;volatile
 17068  011632  D002               	goto	l392
 17069  011634                     l391:
 17070                           
 17071                           ; BSR set to: 0
 17072                           ;inc\CANlib.h: 378: else
 17073                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17074  011634  010F               	movlb	15	; () banked
 17075  011636  9D35               	bcf	53,6,b	;volatile
 17076  011638                     l392:
 17077                           
 17078                           ; BSR set to: 15
 17079                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 17080  011638  0100               	movlb	0	; () banked
 17081  01163A  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 17082  01163C  D079               	goto	l393
 17083                           
 17084                           ; BSR set to: 0
 17085                           ;inc\CANlib.h: 382: {
 17086                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 17087  01163E  0100               	movlb	0	; () banked
 17088  011640  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 17089  011642  0100               	movlb	0	; () banked
 17090  011644  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17091  011646  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17092  011648  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17093  01164A  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17094                           
 17095                           ; BSR set to: 0
 17096                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 17097  01164C  C07C  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 17098                           
 17099                           ; BSR set to: 0
 17100                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 17101  011650  0E00               	movlw	0
 17102  011652  0100               	movlb	0	; () banked
 17103  011654  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17104  011656  0100               	movlb	0	; () banked
 17105  011658  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17106  01165A  0EFF               	movlw	255
 17107  01165C  0100               	movlb	0	; () banked
 17108  01165E  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17109  011660  0100               	movlb	0	; () banked
 17110  011662  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17111  011664  0E00               	movlw	0
 17112  011666  0100               	movlb	0	; () banked
 17113  011668  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17114  01166A  0100               	movlb	0	; () banked
 17115  01166C  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17116  01166E  0E00               	movlw	0
 17117  011670  0100               	movlb	0	; () banked
 17118  011672  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17119  011674  0100               	movlb	0	; () banked
 17120  011676  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17121                           
 17122                           ; BSR set to: 0
 17123                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 17124  011678  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17125  01167C  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17126  011680  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17127  011684  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17128  011688  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 17129  01168C  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17130  011690  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17131  011694  0100               	movlb	0	; () banked
 17132  011696  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 17133  011698  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17134  01169C  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17135  0116A0  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17136  0116A4  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17137                           
 17138                           ; BSR set to: 0
 17139                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 17140  0116A8  C07C  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 17141                           
 17142                           ; BSR set to: 0
 17143                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 17144  0116AC  0E00               	movlw	0
 17145  0116AE  010F               	movlb	15	; () banked
 17146  0116B0  6F32               	movwf	50,b	;volatile
 17147                           
 17148                           ; BSR set to: 15
 17149                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 17150  0116B2  010F               	movlb	15	; () banked
 17151  0116B4  8732               	bsf	50,3,b	;volatile
 17152                           
 17153                           ; BSR set to: 15
 17154                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 17155  0116B6  0100               	movlb	0	; () banked
 17156  0116B8  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17157  0116BA  D002               	goto	l394
 17158                           
 17159                           ; BSR set to: 0
 17160                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 17161  0116BC  010F               	movlb	15	; () banked
 17162  0116BE  8132               	bsf	50,0,b	;volatile
 17163  0116C0                     l394:
 17164                           
 17165                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 17166  0116C0  0100               	movlb	0	; () banked
 17167  0116C2  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17168  0116C4  D002               	goto	l395
 17169                           
 17170                           ; BSR set to: 0
 17171                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 17172  0116C6  010F               	movlb	15	; () banked
 17173  0116C8  8332               	bsf	50,1,b	;volatile
 17174  0116CA                     l395:
 17175                           
 17176                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 17177  0116CA  0100               	movlb	0	; () banked
 17178  0116CC  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17179  0116CE  D002               	goto	l396
 17180                           
 17181                           ; BSR set to: 0
 17182                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 17183  0116D0  010F               	movlb	15	; () banked
 17184  0116D2  8B32               	bsf	50,5,b	;volatile
 17185  0116D4                     l396:
 17186                           
 17187                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 17188  0116D4  0100               	movlb	0	; () banked
 17189  0116D6  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17190  0116D8  D002               	goto	l397
 17191                           
 17192                           ; BSR set to: 0
 17193                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 17194  0116DA  010F               	movlb	15	; () banked
 17195  0116DC  8D32               	bsf	50,6,b	;volatile
 17196  0116DE                     l397:
 17197                           
 17198                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 17199  0116DE  0100               	movlb	0	; () banked
 17200  0116E0  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17201  0116E2  D002               	goto	l6126
 17202                           
 17203                           ; BSR set to: 0
 17204                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 17205  0116E4  010F               	movlb	15	; () banked
 17206  0116E6  8F32               	bsf	50,7,b	;volatile
 17207  0116E8                     l6126:
 17208                           
 17209                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 17210  0116E8  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17211  0116EC  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17212  0116F0  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17213  0116F4  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17214  0116F8  0E16               	movlw	22
 17215  0116FA  D006               	goto	u7580
 17216  0116FC                     u7585:
 17217  0116FC  0100               	movlb	0	; () banked
 17218  0116FE  90D8               	bcf	status,0,c
 17219  011700  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17220  011702  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17221  011704  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17222  011706  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17223  011708                     u7580:
 17224  011708  2EE8               	decfsz	wreg,f,c
 17225  01170A  D7F8               	goto	u7585
 17226  01170C  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17227  011710  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17228  011714  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17229  011718  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17230                           
 17231                           ; BSR set to: 0
 17232                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 17233  01171C  0100               	movlb	0	; () banked
 17234  01171E  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17235  011720  0100               	movlb	0	; () banked
 17236  011722  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17237  011724  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17238  011726  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17239  011728  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17240                           
 17241                           ; BSR set to: 0
 17242                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 17243  01172A  C07C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 17244                           
 17245                           ;inc\CANlib.h: 407: }
 17246  01172E  D059               	goto	l6146
 17247  011730                     l393:
 17248                           
 17249                           ; BSR set to: 0
 17250                           ;inc\CANlib.h: 409: else
 17251                           ;inc\CANlib.h: 411: {
 17252                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 17253  011730  010F               	movlb	15	; () banked
 17254  011732  9732               	bcf	50,3,b	;volatile
 17255                           
 17256                           ; BSR set to: 15
 17257                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 17258  011734  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17259  011738  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17260  01173C  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17261  011740  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17262  011744  0E04               	movlw	4
 17263  011746  D006               	goto	u7590
 17264  011748                     u7595:
 17265  011748  0100               	movlb	0	; () banked
 17266  01174A  90D8               	bcf	status,0,c
 17267  01174C  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17268  01174E  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17269  011750  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17270  011752  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17271  011754                     u7590:
 17272  011754  2EE8               	decfsz	wreg,f,c
 17273  011756  D7F8               	goto	u7595
 17274  011758  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17275  01175C  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17276  011760  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17277  011764  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17278                           
 17279                           ; BSR set to: 0
 17280                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 17281  011768  0100               	movlb	0	; () banked
 17282  01176A  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17283  01176C  0100               	movlb	0	; () banked
 17284  01176E  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17285  011770  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17286  011772  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17287  011774  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17288                           
 17289                           ; BSR set to: 0
 17290                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 17291  011776  C07C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 17292                           
 17293                           ; BSR set to: 0
 17294                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 17295  01177A  0E07               	movlw	7
 17296  01177C  0100               	movlb	0	; () banked
 17297  01177E  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17298  011780  0100               	movlb	0	; () banked
 17299  011782  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17300  011784  0E00               	movlw	0
 17301  011786  0100               	movlb	0	; () banked
 17302  011788  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17303  01178A  0100               	movlb	0	; () banked
 17304  01178C  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17305  01178E  0E00               	movlw	0
 17306  011790  0100               	movlb	0	; () banked
 17307  011792  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17308  011794  0100               	movlb	0	; () banked
 17309  011796  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17310  011798  0E00               	movlw	0
 17311  01179A  0100               	movlb	0	; () banked
 17312  01179C  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17313  01179E  0100               	movlb	0	; () banked
 17314  0117A0  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17315                           
 17316                           ; BSR set to: 0
 17317                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 17318  0117A2  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17319  0117A6  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17320  0117AA  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17321  0117AE  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17322  0117B2  0E05               	movlw	5
 17323  0117B4                     u7605:
 17324  0117B4  90D8               	bcf	status,0,c
 17325  0117B6  0100               	movlb	0	; () banked
 17326  0117B8  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 17327  0117BA  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17328  0117BC  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17329  0117BE  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17330  0117C0  2EE8               	decfsz	wreg,f,c
 17331  0117C2  D7F8               	goto	u7605
 17332  0117C4  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17333  0117C8  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17334  0117CC  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17335  0117D0  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17336                           
 17337                           ; BSR set to: 0
 17338                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 17339  0117D4  010F               	movlb	15	; () banked
 17340  0117D6  5132               	movf	50,w,b	;volatile
 17341  0117D8  0B1F               	andlw	31
 17342  0117DA  010F               	movlb	15	; () banked
 17343  0117DC  6F32               	movwf	50,b	;volatile
 17344                           
 17345                           ; BSR set to: 15
 17346                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 17347  0117DE  C07C  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 17348  0117E2                     l6146:
 17349                           
 17350                           ;inc\CANlib.h: 422: }
 17351                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 17352  0117E2  0100               	movlb	0	; () banked
 17353  0117E4  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 17354  0117E6  D003               	goto	l400
 17355                           
 17356                           ; BSR set to: 0
 17357                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 17358  0117E8  010F               	movlb	15	; () banked
 17359  0117EA  8130               	bsf	48,0,b	;volatile
 17360  0117EC  D002               	goto	l401
 17361  0117EE                     l400:
 17362                           
 17363                           ; BSR set to: 0
 17364                           ;inc\CANlib.h: 426: else
 17365                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 17366  0117EE  010F               	movlb	15	; () banked
 17367  0117F0  9130               	bcf	48,0,b	;volatile
 17368  0117F2                     l401:
 17369                           
 17370                           ; BSR set to: 15
 17371                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 17372  0117F2  0100               	movlb	0	; () banked
 17373  0117F4  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 17374  0117F6  D003               	goto	l402
 17375                           
 17376                           ; BSR set to: 0
 17377                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 17378  0117F8  010F               	movlb	15	; () banked
 17379  0117FA  8330               	bsf	48,1,b	;volatile
 17380  0117FC  D002               	goto	l6152
 17381  0117FE                     l402:
 17382                           
 17383                           ; BSR set to: 0
 17384                           ;inc\CANlib.h: 430: else
 17385                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 17386  0117FE  010F               	movlb	15	; () banked
 17387  011800  9330               	bcf	48,1,b	;volatile
 17388  011802                     l6152:
 17389                           
 17390                           ; BSR set to: 15
 17391                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 17392  011802  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 17393  011806  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17394  01180A  50DF               	movf	indf2,w,c
 17395  01180C  010F               	movlb	15	; () banked
 17396  01180E  6F36               	movwf	54,b	;volatile
 17397                           
 17398                           ; BSR set to: 15
 17399                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 17400  011810  0100               	movlb	0	; () banked
 17401  011812  EE20 F001          	lfsr	2,1
 17402  011816  5174               	movf	CANsendMessage@data& (0+255),w,b
 17403  011818  26D9               	addwf	fsr2l,f,c
 17404  01181A  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17405  01181C  22DA               	addwfc	fsr2h,f,c
 17406  01181E  50DF               	movf	indf2,w,c
 17407  011820  010F               	movlb	15	; () banked
 17408  011822  6F37               	movwf	55,b	;volatile
 17409                           
 17410                           ; BSR set to: 15
 17411                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 17412  011824  0100               	movlb	0	; () banked
 17413  011826  EE20 F002          	lfsr	2,2
 17414  01182A  5174               	movf	CANsendMessage@data& (0+255),w,b
 17415  01182C  26D9               	addwf	fsr2l,f,c
 17416  01182E  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17417  011830  22DA               	addwfc	fsr2h,f,c
 17418  011832  50DF               	movf	indf2,w,c
 17419  011834  010F               	movlb	15	; () banked
 17420  011836  6F38               	movwf	56,b	;volatile
 17421                           
 17422                           ; BSR set to: 15
 17423                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 17424  011838  0100               	movlb	0	; () banked
 17425  01183A  EE20 F003          	lfsr	2,3
 17426  01183E  5174               	movf	CANsendMessage@data& (0+255),w,b
 17427  011840  26D9               	addwf	fsr2l,f,c
 17428  011842  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17429  011844  22DA               	addwfc	fsr2h,f,c
 17430  011846  50DF               	movf	indf2,w,c
 17431  011848  010F               	movlb	15	; () banked
 17432  01184A  6F39               	movwf	57,b	;volatile
 17433                           
 17434                           ; BSR set to: 15
 17435                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 17436  01184C  0100               	movlb	0	; () banked
 17437  01184E  EE20 F004          	lfsr	2,4
 17438  011852  5174               	movf	CANsendMessage@data& (0+255),w,b
 17439  011854  26D9               	addwf	fsr2l,f,c
 17440  011856  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17441  011858  22DA               	addwfc	fsr2h,f,c
 17442  01185A  50DF               	movf	indf2,w,c
 17443  01185C  010F               	movlb	15	; () banked
 17444  01185E  6F3A               	movwf	58,b	;volatile
 17445                           
 17446                           ; BSR set to: 15
 17447                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 17448  011860  0100               	movlb	0	; () banked
 17449  011862  EE20 F005          	lfsr	2,5
 17450  011866  5174               	movf	CANsendMessage@data& (0+255),w,b
 17451  011868  26D9               	addwf	fsr2l,f,c
 17452  01186A  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17453  01186C  22DA               	addwfc	fsr2h,f,c
 17454  01186E  50DF               	movf	indf2,w,c
 17455  011870  010F               	movlb	15	; () banked
 17456  011872  6F3B               	movwf	59,b	;volatile
 17457                           
 17458                           ; BSR set to: 15
 17459                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 17460  011874  0100               	movlb	0	; () banked
 17461  011876  EE20 F006          	lfsr	2,6
 17462  01187A  5174               	movf	CANsendMessage@data& (0+255),w,b
 17463  01187C  26D9               	addwf	fsr2l,f,c
 17464  01187E  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17465  011880  22DA               	addwfc	fsr2h,f,c
 17466  011882  50DF               	movf	indf2,w,c
 17467  011884  010F               	movlb	15	; () banked
 17468  011886  6F3C               	movwf	60,b	;volatile
 17469                           
 17470                           ; BSR set to: 15
 17471                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 17472  011888  0100               	movlb	0	; () banked
 17473  01188A  EE20 F007          	lfsr	2,7
 17474  01188E  5174               	movf	CANsendMessage@data& (0+255),w,b
 17475  011890  26D9               	addwf	fsr2l,f,c
 17476  011892  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17477  011894  22DA               	addwfc	fsr2h,f,c
 17478  011896  50DF               	movf	indf2,w,c
 17479  011898  010F               	movlb	15	; () banked
 17480  01189A  6F3D               	movwf	61,b	;volatile
 17481                           
 17482                           ; BSR set to: 15
 17483                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 17484  01189C  010F               	movlb	15	; () banked
 17485  01189E  8730               	bsf	48,3,b	;volatile
 17486                           
 17487                           ; BSR set to: 15
 17488                           ;inc\CANlib.h: 444: return;
 17489  0118A0  0012               	return	
 17490  0118A2                     l390:
 17491                           
 17492                           ; BSR set to: 15
 17493                           ;inc\CANlib.h: 445: }
 17494                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 17495  0118A2  010F               	movlb	15	; () banked
 17496  0118A4  B720               	btfsc	32,3,b	;volatile
 17497  0118A6  0012               	return	
 17498                           
 17499                           ; BSR set to: 15
 17500                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 17501  0118A8  C076  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 17502                           
 17503                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 17504  0118AC  0100               	movlb	0	; () banked
 17505  0118AE  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 17506  0118B0  D003               	goto	l405
 17507                           
 17508                           ; BSR set to: 0
 17509                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 17510  0118B2  010F               	movlb	15	; () banked
 17511  0118B4  8D25               	bsf	37,6,b	;volatile
 17512  0118B6  D002               	goto	l406
 17513  0118B8                     l405:
 17514                           
 17515                           ; BSR set to: 0
 17516                           ;inc\CANlib.h: 454: else
 17517                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 17518  0118B8  010F               	movlb	15	; () banked
 17519  0118BA  9D25               	bcf	37,6,b	;volatile
 17520  0118BC                     l406:
 17521                           
 17522                           ; BSR set to: 15
 17523                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 17524  0118BC  0100               	movlb	0	; () banked
 17525  0118BE  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 17526  0118C0  D079               	goto	l407
 17527                           
 17528                           ; BSR set to: 0
 17529                           ;inc\CANlib.h: 458: {
 17530                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 17531  0118C2  0100               	movlb	0	; () banked
 17532  0118C4  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 17533  0118C6  0100               	movlb	0	; () banked
 17534  0118C8  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17535  0118CA  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17536  0118CC  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17537  0118CE  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17538                           
 17539                           ; BSR set to: 0
 17540                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 17541  0118D0  C07C  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 17542                           
 17543                           ; BSR set to: 0
 17544                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 17545  0118D4  0E00               	movlw	0
 17546  0118D6  0100               	movlb	0	; () banked
 17547  0118D8  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17548  0118DA  0100               	movlb	0	; () banked
 17549  0118DC  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17550  0118DE  0EFF               	movlw	255
 17551  0118E0  0100               	movlb	0	; () banked
 17552  0118E2  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17553  0118E4  0100               	movlb	0	; () banked
 17554  0118E6  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17555  0118E8  0E00               	movlw	0
 17556  0118EA  0100               	movlb	0	; () banked
 17557  0118EC  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17558  0118EE  0100               	movlb	0	; () banked
 17559  0118F0  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17560  0118F2  0E00               	movlw	0
 17561  0118F4  0100               	movlb	0	; () banked
 17562  0118F6  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17563  0118F8  0100               	movlb	0	; () banked
 17564  0118FA  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17565                           
 17566                           ; BSR set to: 0
 17567                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 17568  0118FC  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17569  011900  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17570  011904  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17571  011908  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17572  01190C  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 17573  011910  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17574  011914  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17575  011918  0100               	movlb	0	; () banked
 17576  01191A  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 17577  01191C  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17578  011920  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17579  011924  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17580  011928  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17581                           
 17582                           ; BSR set to: 0
 17583                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 17584  01192C  C07C  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 17585                           
 17586                           ; BSR set to: 0
 17587                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 17588  011930  0E00               	movlw	0
 17589  011932  010F               	movlb	15	; () banked
 17590  011934  6F22               	movwf	34,b	;volatile
 17591                           
 17592                           ; BSR set to: 15
 17593                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 17594  011936  010F               	movlb	15	; () banked
 17595  011938  8722               	bsf	34,3,b	;volatile
 17596                           
 17597                           ; BSR set to: 15
 17598                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 17599  01193A  0100               	movlb	0	; () banked
 17600  01193C  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17601  01193E  D002               	goto	l408
 17602                           
 17603                           ; BSR set to: 0
 17604                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 17605  011940  010F               	movlb	15	; () banked
 17606  011942  8122               	bsf	34,0,b	;volatile
 17607  011944                     l408:
 17608                           
 17609                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 17610  011944  0100               	movlb	0	; () banked
 17611  011946  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17612  011948  D002               	goto	l409
 17613                           
 17614                           ; BSR set to: 0
 17615                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 17616  01194A  010F               	movlb	15	; () banked
 17617  01194C  8322               	bsf	34,1,b	;volatile
 17618  01194E                     l409:
 17619                           
 17620                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 17621  01194E  0100               	movlb	0	; () banked
 17622  011950  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17623  011952  D002               	goto	l410
 17624                           
 17625                           ; BSR set to: 0
 17626                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 17627  011954  010F               	movlb	15	; () banked
 17628  011956  8B22               	bsf	34,5,b	;volatile
 17629  011958                     l410:
 17630                           
 17631                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 17632  011958  0100               	movlb	0	; () banked
 17633  01195A  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17634  01195C  D002               	goto	l411
 17635                           
 17636                           ; BSR set to: 0
 17637                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 17638  01195E  010F               	movlb	15	; () banked
 17639  011960  8D22               	bsf	34,6,b	;volatile
 17640  011962                     l411:
 17641                           
 17642                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 17643  011962  0100               	movlb	0	; () banked
 17644  011964  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17645  011966  D002               	goto	l6202
 17646                           
 17647                           ; BSR set to: 0
 17648                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 17649  011968  010F               	movlb	15	; () banked
 17650  01196A  8F22               	bsf	34,7,b	;volatile
 17651  01196C                     l6202:
 17652                           
 17653                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 17654  01196C  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17655  011970  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17656  011974  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17657  011978  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17658  01197C  0E16               	movlw	22
 17659  01197E  D006               	goto	u7710
 17660  011980                     u7715:
 17661  011980  0100               	movlb	0	; () banked
 17662  011982  90D8               	bcf	status,0,c
 17663  011984  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17664  011986  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17665  011988  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17666  01198A  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17667  01198C                     u7710:
 17668  01198C  2EE8               	decfsz	wreg,f,c
 17669  01198E  D7F8               	goto	u7715
 17670  011990  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17671  011994  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17672  011998  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17673  01199C  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17674                           
 17675                           ; BSR set to: 0
 17676                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 17677  0119A0  0100               	movlb	0	; () banked
 17678  0119A2  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17679  0119A4  0100               	movlb	0	; () banked
 17680  0119A6  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17681  0119A8  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17682  0119AA  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17683  0119AC  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17684                           
 17685                           ; BSR set to: 0
 17686                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 17687  0119AE  C07C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 17688                           
 17689                           ;inc\CANlib.h: 483: }
 17690  0119B2  D059               	goto	l6222
 17691  0119B4                     l407:
 17692                           
 17693                           ; BSR set to: 0
 17694                           ;inc\CANlib.h: 485: else
 17695                           ;inc\CANlib.h: 487: {
 17696                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 17697  0119B4  010F               	movlb	15	; () banked
 17698  0119B6  9722               	bcf	34,3,b	;volatile
 17699                           
 17700                           ; BSR set to: 15
 17701                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 17702  0119B8  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17703  0119BC  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17704  0119C0  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17705  0119C4  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17706  0119C8  0E04               	movlw	4
 17707  0119CA  D006               	goto	u7720
 17708  0119CC                     u7725:
 17709  0119CC  0100               	movlb	0	; () banked
 17710  0119CE  90D8               	bcf	status,0,c
 17711  0119D0  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17712  0119D2  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17713  0119D4  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17714  0119D6  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17715  0119D8                     u7720:
 17716  0119D8  2EE8               	decfsz	wreg,f,c
 17717  0119DA  D7F8               	goto	u7725
 17718  0119DC  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17719  0119E0  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17720  0119E4  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17721  0119E8  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17722                           
 17723                           ; BSR set to: 0
 17724                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 17725  0119EC  0100               	movlb	0	; () banked
 17726  0119EE  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17727  0119F0  0100               	movlb	0	; () banked
 17728  0119F2  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17729  0119F4  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17730  0119F6  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17731  0119F8  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17732                           
 17733                           ; BSR set to: 0
 17734                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 17735  0119FA  C07C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 17736                           
 17737                           ; BSR set to: 0
 17738                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 17739  0119FE  0E07               	movlw	7
 17740  011A00  0100               	movlb	0	; () banked
 17741  011A02  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17742  011A04  0100               	movlb	0	; () banked
 17743  011A06  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17744  011A08  0E00               	movlw	0
 17745  011A0A  0100               	movlb	0	; () banked
 17746  011A0C  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17747  011A0E  0100               	movlb	0	; () banked
 17748  011A10  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17749  011A12  0E00               	movlw	0
 17750  011A14  0100               	movlb	0	; () banked
 17751  011A16  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17752  011A18  0100               	movlb	0	; () banked
 17753  011A1A  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17754  011A1C  0E00               	movlw	0
 17755  011A1E  0100               	movlb	0	; () banked
 17756  011A20  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17757  011A22  0100               	movlb	0	; () banked
 17758  011A24  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17759                           
 17760                           ; BSR set to: 0
 17761                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 17762  011A26  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17763  011A2A  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17764  011A2E  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17765  011A32  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17766  011A36  0E05               	movlw	5
 17767  011A38                     u7735:
 17768  011A38  90D8               	bcf	status,0,c
 17769  011A3A  0100               	movlb	0	; () banked
 17770  011A3C  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 17771  011A3E  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17772  011A40  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17773  011A42  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17774  011A44  2EE8               	decfsz	wreg,f,c
 17775  011A46  D7F8               	goto	u7735
 17776  011A48  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17777  011A4C  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17778  011A50  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17779  011A54  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17780                           
 17781                           ; BSR set to: 0
 17782                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 17783  011A58  010F               	movlb	15	; () banked
 17784  011A5A  5122               	movf	34,w,b	;volatile
 17785  011A5C  0B1F               	andlw	31
 17786  011A5E  010F               	movlb	15	; () banked
 17787  011A60  6F22               	movwf	34,b	;volatile
 17788                           
 17789                           ; BSR set to: 15
 17790                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 17791  011A62  C07C  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 17792  011A66                     l6222:
 17793                           
 17794                           ;inc\CANlib.h: 498: }
 17795                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 17796  011A66  0100               	movlb	0	; () banked
 17797  011A68  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 17798  011A6A  D003               	goto	l414
 17799                           
 17800                           ; BSR set to: 0
 17801                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 17802  011A6C  010F               	movlb	15	; () banked
 17803  011A6E  8120               	bsf	32,0,b	;volatile
 17804  011A70  D002               	goto	l415
 17805  011A72                     l414:
 17806                           
 17807                           ; BSR set to: 0
 17808                           ;inc\CANlib.h: 502: else
 17809                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 17810  011A72  010F               	movlb	15	; () banked
 17811  011A74  9120               	bcf	32,0,b	;volatile
 17812  011A76                     l415:
 17813                           
 17814                           ; BSR set to: 15
 17815                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 17816  011A76  0100               	movlb	0	; () banked
 17817  011A78  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 17818  011A7A  D003               	goto	l416
 17819                           
 17820                           ; BSR set to: 0
 17821                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 17822  011A7C  010F               	movlb	15	; () banked
 17823  011A7E  8320               	bsf	32,1,b	;volatile
 17824  011A80  D002               	goto	l6228
 17825  011A82                     l416:
 17826                           
 17827                           ; BSR set to: 0
 17828                           ;inc\CANlib.h: 506: else
 17829                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 17830  011A82  010F               	movlb	15	; () banked
 17831  011A84  9320               	bcf	32,1,b	;volatile
 17832  011A86                     l6228:
 17833                           
 17834                           ; BSR set to: 15
 17835                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 17836  011A86  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 17837  011A8A  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17838  011A8E  50DF               	movf	indf2,w,c
 17839  011A90  010F               	movlb	15	; () banked
 17840  011A92  6F26               	movwf	38,b	;volatile
 17841                           
 17842                           ; BSR set to: 15
 17843                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 17844  011A94  0100               	movlb	0	; () banked
 17845  011A96  EE20 F001          	lfsr	2,1
 17846  011A9A  5174               	movf	CANsendMessage@data& (0+255),w,b
 17847  011A9C  26D9               	addwf	fsr2l,f,c
 17848  011A9E  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17849  011AA0  22DA               	addwfc	fsr2h,f,c
 17850  011AA2  50DF               	movf	indf2,w,c
 17851  011AA4  010F               	movlb	15	; () banked
 17852  011AA6  6F27               	movwf	39,b	;volatile
 17853                           
 17854                           ; BSR set to: 15
 17855                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 17856  011AA8  0100               	movlb	0	; () banked
 17857  011AAA  EE20 F002          	lfsr	2,2
 17858  011AAE  5174               	movf	CANsendMessage@data& (0+255),w,b
 17859  011AB0  26D9               	addwf	fsr2l,f,c
 17860  011AB2  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17861  011AB4  22DA               	addwfc	fsr2h,f,c
 17862  011AB6  50DF               	movf	indf2,w,c
 17863  011AB8  010F               	movlb	15	; () banked
 17864  011ABA  6F28               	movwf	40,b	;volatile
 17865                           
 17866                           ; BSR set to: 15
 17867                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 17868  011ABC  0100               	movlb	0	; () banked
 17869  011ABE  EE20 F003          	lfsr	2,3
 17870  011AC2  5174               	movf	CANsendMessage@data& (0+255),w,b
 17871  011AC4  26D9               	addwf	fsr2l,f,c
 17872  011AC6  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17873  011AC8  22DA               	addwfc	fsr2h,f,c
 17874  011ACA  50DF               	movf	indf2,w,c
 17875  011ACC  010F               	movlb	15	; () banked
 17876  011ACE  6F29               	movwf	41,b	;volatile
 17877                           
 17878                           ; BSR set to: 15
 17879                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 17880  011AD0  0100               	movlb	0	; () banked
 17881  011AD2  EE20 F004          	lfsr	2,4
 17882  011AD6  5174               	movf	CANsendMessage@data& (0+255),w,b
 17883  011AD8  26D9               	addwf	fsr2l,f,c
 17884  011ADA  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17885  011ADC  22DA               	addwfc	fsr2h,f,c
 17886  011ADE  50DF               	movf	indf2,w,c
 17887  011AE0  010F               	movlb	15	; () banked
 17888  011AE2  6F2A               	movwf	42,b	;volatile
 17889                           
 17890                           ; BSR set to: 15
 17891                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 17892  011AE4  0100               	movlb	0	; () banked
 17893  011AE6  EE20 F005          	lfsr	2,5
 17894  011AEA  5174               	movf	CANsendMessage@data& (0+255),w,b
 17895  011AEC  26D9               	addwf	fsr2l,f,c
 17896  011AEE  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17897  011AF0  22DA               	addwfc	fsr2h,f,c
 17898  011AF2  50DF               	movf	indf2,w,c
 17899  011AF4  010F               	movlb	15	; () banked
 17900  011AF6  6F2B               	movwf	43,b	;volatile
 17901                           
 17902                           ; BSR set to: 15
 17903                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 17904  011AF8  0100               	movlb	0	; () banked
 17905  011AFA  EE20 F006          	lfsr	2,6
 17906  011AFE  5174               	movf	CANsendMessage@data& (0+255),w,b
 17907  011B00  26D9               	addwf	fsr2l,f,c
 17908  011B02  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17909  011B04  22DA               	addwfc	fsr2h,f,c
 17910  011B06  50DF               	movf	indf2,w,c
 17911  011B08  010F               	movlb	15	; () banked
 17912  011B0A  6F2C               	movwf	44,b	;volatile
 17913                           
 17914                           ; BSR set to: 15
 17915                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 17916  011B0C  0100               	movlb	0	; () banked
 17917  011B0E  EE20 F007          	lfsr	2,7
 17918  011B12  5174               	movf	CANsendMessage@data& (0+255),w,b
 17919  011B14  26D9               	addwf	fsr2l,f,c
 17920  011B16  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17921  011B18  22DA               	addwfc	fsr2h,f,c
 17922  011B1A  50DF               	movf	indf2,w,c
 17923  011B1C  010F               	movlb	15	; () banked
 17924  011B1E  6F2D               	movwf	45,b	;volatile
 17925                           
 17926                           ; BSR set to: 15
 17927                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 17928  011B20  010F               	movlb	15	; () banked
 17929  011B22  8720               	bsf	32,3,b	;volatile
 17930                           
 17931                           ; BSR set to: 15
 17932                           ;inc\CANlib.h: 520: return;
 17933  011B24  0012               	return	
 17934  011B26                     __end_of_CANsendMessage:
 17935                           	opt stack 0
 17936                           tblptru	equ	0xFF8
 17937                           tblptrh	equ	0xFF7
 17938                           tblptrl	equ	0xFF6
 17939                           tablat	equ	0xFF5
 17940                           prodh	equ	0xFF4
 17941                           prodl	equ	0xFF3
 17942                           intcon	equ	0xFF2
 17943                           postinc0	equ	0xFEE
 17944                           wreg	equ	0xFE8
 17945                           indf1	equ	0xFE7
 17946                           plusw1	equ	0xFE3
 17947                           fsr1h	equ	0xFE2
 17948                           fsr1l	equ	0xFE1
 17949                           indf2	equ	0xFDF
 17950                           postinc2	equ	0xFDE
 17951                           plusw2	equ	0xFDB
 17952                           fsr2h	equ	0xFDA
 17953                           fsr2l	equ	0xFD9
 17954                           status	equ	0xFD8
 17955                           
 17956 ;; *************** function _CANisTxReady *****************
 17957 ;; Defined at:
 17958 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 17959 ;; Parameters:    Size  Location     Type
 17960 ;;		None
 17961 ;; Auto vars:     Size  Location     Type
 17962 ;;		None
 17963 ;; Return value:  Size  Location     Type
 17964 ;;                  1    wreg      unsigned char 
 17965 ;; Registers used:
 17966 ;;		wreg, status,2
 17967 ;; Tracked objects:
 17968 ;;		On entry : 0/0
 17969 ;;		On exit  : 0/0
 17970 ;;		Unchanged: 0/0
 17971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17973 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17975 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17976 ;;Total ram usage:        1 bytes
 17977 ;; Hardware stack levels used:    1
 17978 ;; Hardware stack levels required when called:    3
 17979 ;; This function calls:
 17980 ;;		Nothing
 17981 ;; This function is called by:
 17982 ;;		_main
 17983 ;;		_CAN_Send
 17984 ;;		_LCD_Handler
 17985 ;; This function uses a non-reentrant model
 17986 ;;
 17987                           
 17988                           	psect	text51
 17989  01608E                     __ptext51:
 17990                           	opt stack 0
 17991  01608E                     _CANisTxReady:
 17992                           	opt stack 26
 17993                           
 17994                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 17995                           
 17996                           ; BSR set to: 15
 17997                           ;incstack = 0
 17998  01608E  0E01               	movlw	1
 17999  016090  0100               	movlb	0	; () banked
 18000  016092  6F70               	movwf	_CANisTxReady$3235& (0+255),b
 18001                           
 18002                           ; BSR set to: 0
 18003  016094  010F               	movlb	15	; () banked
 18004  016096  A740               	btfss	64,3,b	;volatile
 18005  016098  D009               	goto	l568
 18006                           
 18007                           ; BSR set to: 15
 18008  01609A  010F               	movlb	15	; () banked
 18009  01609C  A730               	btfss	48,3,b	;volatile
 18010  01609E  D006               	goto	l568
 18011                           
 18012                           ; BSR set to: 15
 18013  0160A0  010F               	movlb	15	; () banked
 18014  0160A2  A720               	btfss	32,3,b	;volatile
 18015  0160A4  D003               	goto	l568
 18016                           
 18017                           ; BSR set to: 15
 18018  0160A6  0E00               	movlw	0
 18019  0160A8  0100               	movlb	0	; () banked
 18020  0160AA  6F70               	movwf	_CANisTxReady$3235& (0+255),b
 18021  0160AC                     l568:
 18022  0160AC  0100               	movlb	0	; () banked
 18023  0160AE  5170               	movf	_CANisTxReady$3235& (0+255),w,b
 18024  0160B0  0012               	return	
 18025  0160B2                     __end_of_CANisTxReady:
 18026                           	opt stack 0
 18027                           tblptru	equ	0xFF8
 18028                           tblptrh	equ	0xFF7
 18029                           tblptrl	equ	0xFF6
 18030                           tablat	equ	0xFF5
 18031                           prodh	equ	0xFF4
 18032                           prodl	equ	0xFF3
 18033                           intcon	equ	0xFF2
 18034                           postinc0	equ	0xFEE
 18035                           wreg	equ	0xFE8
 18036                           indf1	equ	0xFE7
 18037                           plusw1	equ	0xFE3
 18038                           fsr1h	equ	0xFE2
 18039                           fsr1l	equ	0xFE1
 18040                           indf2	equ	0xFDF
 18041                           postinc2	equ	0xFDE
 18042                           plusw2	equ	0xFDB
 18043                           fsr2h	equ	0xFDA
 18044                           fsr2l	equ	0xFD9
 18045                           status	equ	0xFD8
 18046                           
 18047 ;; *************** function _ISR_bassa *****************
 18048 ;; Defined at:
 18049 ;;		line 153 in file "RemoteCan.c"
 18050 ;; Parameters:    Size  Location     Type
 18051 ;;		None
 18052 ;; Auto vars:     Size  Location     Type
 18053 ;;		None
 18054 ;; Return value:  Size  Location     Type
 18055 ;;		None               void
 18056 ;; Registers used:
 18057 ;;		wreg, status,2, status,0
 18058 ;; Tracked objects:
 18059 ;;		On entry : 0/0
 18060 ;;		On exit  : 0/0
 18061 ;;		Unchanged: 0/0
 18062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18065 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18066 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18067 ;;Total ram usage:       17 bytes
 18068 ;; Hardware stack levels used:    1
 18069 ;; Hardware stack levels required when called:    2
 18070 ;; This function calls:
 18071 ;;		Nothing
 18072 ;; This function is called by:
 18073 ;;		Interrupt level 1
 18074 ;; This function uses a non-reentrant model
 18075 ;;
 18076                           
 18077                           	psect	intcodelo
 18078  000018                     __pintcodelo:
 18079                           	opt stack 0
 18080  000018                     _ISR_bassa:
 18081                           	opt stack 20
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;incstack = 0
 18085  000018  804D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 18086  00001A  CFD8 F029          	movff	status,??_ISR_bassa
 18087  00001E  CFE8 F02A          	movff	wreg,??_ISR_bassa+1
 18088  000022  CFE0 F02B          	movff	bsr,??_ISR_bassa+2
 18089  000026  CFFA F02C          	movff	pclath,??_ISR_bassa+3
 18090  00002A  CFFB F02D          	movff	pclatu,??_ISR_bassa+4
 18091  00002E  CFE9 F02E          	movff	fsr0l,??_ISR_bassa+5
 18092  000032  CFEA F02F          	movff	fsr0h,??_ISR_bassa+6
 18093  000036  CFE1 F030          	movff	fsr1l,??_ISR_bassa+7
 18094  00003A  CFE2 F031          	movff	fsr1h,??_ISR_bassa+8
 18095  00003E  CFD9 F032          	movff	fsr2l,??_ISR_bassa+9
 18096  000042  CFDA F033          	movff	fsr2h,??_ISR_bassa+10
 18097  000046  CFF3 F034          	movff	prodl,??_ISR_bassa+11
 18098  00004A  CFF4 F035          	movff	prodh,??_ISR_bassa+12
 18099  00004E  CFF6 F036          	movff	tblptrl,??_ISR_bassa+13
 18100  000052  CFF7 F037          	movff	tblptrh,??_ISR_bassa+14
 18101  000056  CFF8 F038          	movff	tblptru,??_ISR_bassa+15
 18102  00005A  CFF5 F039          	movff	tablat,??_ISR_bassa+16
 18103                           
 18104                           ;RemoteCan.c: 154: if (PIR2bits.TMR3IF == 1) {
 18105  00005E  A2A1               	btfss	4001,1,c	;volatile
 18106  000060  D00B               	goto	i1l776
 18107                           
 18108                           ;RemoteCan.c: 155: time_counter++;
 18109  000062  0E01               	movlw	1
 18110  000064  261C               	addwf	_time_counter,f,c	;volatile
 18111  000066  0E00               	movlw	0
 18112  000068  221D               	addwfc	_time_counter+1,f,c	;volatile
 18113  00006A  221E               	addwfc	_time_counter+2,f,c	;volatile
 18114  00006C  221F               	addwfc	_time_counter+3,f,c	;volatile
 18115                           
 18116                           ;RemoteCan.c: 156: TMR3H = 0x63;
 18117  00006E  0E63               	movlw	99
 18118  000070  6EB3               	movwf	4019,c	;volatile
 18119                           
 18120                           ;RemoteCan.c: 157: TMR3L = 0xC0;
 18121  000072  0EC0               	movlw	192
 18122  000074  6EB2               	movwf	4018,c	;volatile
 18123                           
 18124                           ;RemoteCan.c: 158: PIR2bits.TMR3IF = 0;
 18125  000076  92A1               	bcf	4001,1,c	;volatile
 18126  000078                     i1l776:
 18127  000078  C039  FFF5         	movff	??_ISR_bassa+16,tablat
 18128  00007C  C038  FFF8         	movff	??_ISR_bassa+15,tblptru
 18129  000080  C037  FFF7         	movff	??_ISR_bassa+14,tblptrh
 18130  000084  C036  FFF6         	movff	??_ISR_bassa+13,tblptrl
 18131  000088  C035  FFF4         	movff	??_ISR_bassa+12,prodh
 18132  00008C  C034  FFF3         	movff	??_ISR_bassa+11,prodl
 18133  000090  C033  FFDA         	movff	??_ISR_bassa+10,fsr2h
 18134  000094  C032  FFD9         	movff	??_ISR_bassa+9,fsr2l
 18135  000098  C031  FFE2         	movff	??_ISR_bassa+8,fsr1h
 18136  00009C  C030  FFE1         	movff	??_ISR_bassa+7,fsr1l
 18137  0000A0  C02F  FFEA         	movff	??_ISR_bassa+6,fsr0h
 18138  0000A4  C02E  FFE9         	movff	??_ISR_bassa+5,fsr0l
 18139  0000A8  C02D  FFFB         	movff	??_ISR_bassa+4,pclatu
 18140  0000AC  C02C  FFFA         	movff	??_ISR_bassa+3,pclath
 18141  0000B0  C02B  FFE0         	movff	??_ISR_bassa+2,bsr
 18142  0000B4  C02A  FFE8         	movff	??_ISR_bassa+1,wreg
 18143  0000B8  C029  FFD8         	movff	??_ISR_bassa,status
 18144  0000BC  904D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 18145  0000BE  0010               	retfie	
 18146  0000C0                     __end_of_ISR_bassa:
 18147                           	opt stack 0
 18148                           pclatu	equ	0xFFB
 18149                           pclath	equ	0xFFA
 18150                           tblptru	equ	0xFF8
 18151                           tblptrh	equ	0xFF7
 18152                           tblptrl	equ	0xFF6
 18153                           tablat	equ	0xFF5
 18154                           prodh	equ	0xFF4
 18155                           prodl	equ	0xFF3
 18156                           intcon	equ	0xFF2
 18157                           postinc0	equ	0xFEE
 18158                           fsr0h	equ	0xFEA
 18159                           fsr0l	equ	0xFE9
 18160                           wreg	equ	0xFE8
 18161                           indf1	equ	0xFE7
 18162                           plusw1	equ	0xFE3
 18163                           fsr1h	equ	0xFE2
 18164                           fsr1l	equ	0xFE1
 18165                           bsr	equ	0xFE0
 18166                           indf2	equ	0xFDF
 18167                           postinc2	equ	0xFDE
 18168                           plusw2	equ	0xFDB
 18169                           fsr2h	equ	0xFDA
 18170                           fsr2l	equ	0xFD9
 18171                           status	equ	0xFD8
 18172                           
 18173 ;; *************** function _ISR_alta *****************
 18174 ;; Defined at:
 18175 ;;		line 107 in file "RemoteCan.c"
 18176 ;; Parameters:    Size  Location     Type
 18177 ;;		None
 18178 ;; Auto vars:     Size  Location     Type
 18179 ;;  i               1   33[COMRAM] unsigned char 
 18180 ;; Return value:  Size  Location     Type
 18181 ;;		None               void
 18182 ;; Registers used:
 18183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18184 ;; Tracked objects:
 18185 ;;		On entry : 0/0
 18186 ;;		On exit  : 0/0
 18187 ;;		Unchanged: 0/0
 18188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18191 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18192 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18193 ;;Total ram usage:       17 bytes
 18194 ;; Hardware stack levels used:    1
 18195 ;; Hardware stack levels required when called:    1
 18196 ;; This function calls:
 18197 ;;		_CANisRxReady
 18198 ;;		_CANreceiveMessage
 18199 ;;		i2_CANisTxReady
 18200 ;;		i2_CANsendMessage
 18201 ;; This function is called by:
 18202 ;;		Interrupt level 2
 18203 ;; This function uses a non-reentrant model
 18204 ;;
 18205                           
 18206                           	psect	intcode
 18207  000008                     __pintcode:
 18208                           	opt stack 0
 18209  000008                     _ISR_alta:
 18210                           	opt stack 20
 18211                           
 18212                           ;incstack = 0
 18213  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18214  00000A  CFFA F062          	movff	pclath,??_ISR_alta+2
 18215  00000E  CFFB F063          	movff	pclatu,??_ISR_alta+3
 18216  000012  EFBC  F0A8         	goto	int_func
 18217                           pclatu	equ	0xFFB
 18218                           pclath	equ	0xFFA
 18219                           tblptru	equ	0xFF8
 18220                           tblptrh	equ	0xFF7
 18221                           tblptrl	equ	0xFF6
 18222                           tablat	equ	0xFF5
 18223                           prodh	equ	0xFF4
 18224                           prodl	equ	0xFF3
 18225                           intcon	equ	0xFF2
 18226                           postinc0	equ	0xFEE
 18227                           fsr0h	equ	0xFEA
 18228                           fsr0l	equ	0xFE9
 18229                           wreg	equ	0xFE8
 18230                           indf1	equ	0xFE7
 18231                           plusw1	equ	0xFE3
 18232                           fsr1h	equ	0xFE2
 18233                           fsr1l	equ	0xFE1
 18234                           bsr	equ	0xFE0
 18235                           indf2	equ	0xFDF
 18236                           postinc2	equ	0xFDE
 18237                           plusw2	equ	0xFDB
 18238                           fsr2h	equ	0xFDA
 18239                           fsr2l	equ	0xFD9
 18240                           status	equ	0xFD8
 18241                           
 18242                           	psect	intcode_body
 18243  015178                     __pintcode_body:
 18244                           	opt stack 20
 18245  015178                     int_func:
 18246                           	opt stack 20
 18247  015178  CFE9 F064          	movff	fsr0l,??_ISR_alta+4
 18248  01517C  CFEA F065          	movff	fsr0h,??_ISR_alta+5
 18249  015180  CFE1 F066          	movff	fsr1l,??_ISR_alta+6
 18250  015184  CFE2 F067          	movff	fsr1h,??_ISR_alta+7
 18251  015188  CFD9 F068          	movff	fsr2l,??_ISR_alta+8
 18252  01518C  CFDA F069          	movff	fsr2h,??_ISR_alta+9
 18253  015190  CFF3 F06A          	movff	prodl,??_ISR_alta+10
 18254  015194  CFF4 F06B          	movff	prodh,??_ISR_alta+11
 18255  015198  CFF6 F06C          	movff	tblptrl,??_ISR_alta+12
 18256  01519C  CFF7 F06D          	movff	tblptrh,??_ISR_alta+13
 18257  0151A0  CFF8 F06E          	movff	tblptru,??_ISR_alta+14
 18258  0151A4  CFF5 F06F          	movff	tablat,??_ISR_alta+15
 18259                           
 18260                           ;RemoteCan.c: 108: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 18261  0151A8  A2A4               	btfss	4004,1,c	;volatile
 18262  0151AA  B0A4               	btfsc	4004,0,c	;volatile
 18263  0151AC  D001               	goto	i2l8848
 18264  0151AE  D089               	goto	i2l772
 18265  0151B0                     i2l8848:
 18266                           
 18267                           ;RemoteCan.c: 109: if (CANisRxReady()) {
 18268  0151B0  ECBC  F0B0         	call	_CANisRxReady	;wreg free
 18269  0151B4  0900               	iorlw	0
 18270  0151B6  B4D8               	btfsc	status,2,c
 18271  0151B8  D080               	goto	i2l8898
 18272                           
 18273                           ;RemoteCan.c: 110: CANreceiveMessage(&msg);
 18274  0151BA  0E06               	movlw	low _msg
 18275  0151BC  6E3A               	movwf	CANreceiveMessage@msg,c
 18276  0151BE  0E01               	movlw	high _msg
 18277  0151C0  6E3B               	movwf	CANreceiveMessage@msg+1,c
 18278  0151C2  EC89  F096         	call	_CANreceiveMessage	;wreg free
 18279                           
 18280                           ;RemoteCan.c: 111: RTR_Flag = msg.RTR;
 18281  0151C6  0101               	movlb	1	; () banked
 18282  0151C8  A114               	btfss	(_msg+14)& (0+255),0,b
 18283  0151CA  D002               	goto	i2u1170_40
 18284  0151CC  884B               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18285  0151CE  D001               	goto	i2l8854
 18286  0151D0                     i2u1170_40:
 18287  0151D0  984B               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18288  0151D2                     i2l8854:
 18289                           
 18290                           ;RemoteCan.c: 112: id = msg.identifier;
 18291  0151D2  C106  F00C         	movff	_msg,_id	;volatile
 18292  0151D6  C107  F00D         	movff	_msg+1,_id+1	;volatile
 18293  0151DA  C108  F00E         	movff	_msg+2,_id+2	;volatile
 18294  0151DE  C109  F00F         	movff	_msg+3,_id+3	;volatile
 18295                           
 18296                           ;RemoteCan.c: 113: newMessageCan = 1;
 18297  0151E2  8E4B               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 18298                           
 18299                           ;RemoteCan.c: 114: if (id == 0b00000000110) {
 18300  0151E4  0E06               	movlw	6
 18301  0151E6  180C               	xorwf	_id,w,c	;volatile
 18302  0151E8  100D               	iorwf	_id+1,w,c	;volatile
 18303  0151EA  100E               	iorwf	_id+2,w,c	;volatile
 18304  0151EC  100F               	iorwf	_id+3,w,c	;volatile
 18305  0151EE  A4D8               	btfss	status,2,c
 18306  0151F0  D01A               	goto	i2l8872
 18307                           
 18308                           ;RemoteCan.c: 115: for (unsigned char i = 0; i < 8; i++) {
 18309  0151F2  0E00               	movlw	0
 18310  0151F4  6E4A               	movwf	ISR_alta@i,c
 18311  0151F6                     i2l8862:
 18312  0151F6  0E07               	movlw	7
 18313  0151F8  644A               	cpfsgt	ISR_alta@i,c
 18314  0151FA  D001               	goto	i2l8866
 18315  0151FC  D014               	goto	i2l8872
 18316  0151FE                     i2l8866:
 18317                           
 18318                           ;RemoteCan.c: 116: data_speed_rx[i] = msg.data[i];
 18319  0151FE  504A               	movf	ISR_alta@i,w,c
 18320  015200  0D01               	mullw	1
 18321  015202  0E0A               	movlw	low (_msg+4)
 18322  015204  24F3               	addwf	prodl,w,c
 18323  015206  6ED9               	movwf	fsr2l,c
 18324  015208  0E01               	movlw	high (_msg+4)
 18325  01520A  20F4               	addwfc	prodh,w,c
 18326  01520C  6EDA               	movwf	fsr2h,c
 18327  01520E  504A               	movf	ISR_alta@i,w,c
 18328  015210  0D01               	mullw	1
 18329  015212  0E01               	movlw	low _data_speed_rx
 18330  015214  24F3               	addwf	prodl,w,c
 18331  015216  6EE1               	movwf	fsr1l,c
 18332  015218  0E00               	movlw	high _data_speed_rx
 18333  01521A  20F4               	addwfc	prodh,w,c
 18334  01521C  6EE2               	movwf	fsr1h,c
 18335  01521E  CFDF FFE7          	movff	indf2,indf1
 18336  015222  2A4A               	incf	ISR_alta@i,f,c
 18337  015224  D7E8               	goto	i2l8862
 18338  015226                     i2l8872:
 18339                           
 18340                           ;RemoteCan.c: 117: }
 18341                           ;RemoteCan.c: 118: }
 18342                           ;RemoteCan.c: 120: if (id == 0b00000001011) {
 18343  015226  0E0B               	movlw	11
 18344  015228  180C               	xorwf	_id,w,c	;volatile
 18345  01522A  100D               	iorwf	_id+1,w,c	;volatile
 18346  01522C  100E               	iorwf	_id+2,w,c	;volatile
 18347  01522E  100F               	iorwf	_id+3,w,c	;volatile
 18348  015230  A4D8               	btfss	status,2,c
 18349  015232  D004               	goto	i2l8878
 18350                           
 18351                           ;RemoteCan.c: 121: if (msg.data[0] == 1) {
 18352  015234  0101               	movlb	1	; () banked
 18353  015236  050A               	decf	(_msg+4)& (0+255),w,b
 18354  015238  B4D8               	btfsc	status,2,c
 18355                           
 18356                           ; BSR set to: 1
 18357                           ;RemoteCan.c: 122: space_available = 1;
 18358  01523A  824C               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 18359  01523C                     i2l8878:
 18360                           
 18361                           ;RemoteCan.c: 123: }
 18362                           ;RemoteCan.c: 124: }
 18363                           ;RemoteCan.c: 126: if (id == 0xAA) {
 18364  01523C  0EAA               	movlw	170
 18365  01523E  180C               	xorwf	_id,w,c	;volatile
 18366  015240  100D               	iorwf	_id+1,w,c	;volatile
 18367  015242  100E               	iorwf	_id+2,w,c	;volatile
 18368  015244  100F               	iorwf	_id+3,w,c	;volatile
 18369  015246  A4D8               	btfss	status,2,c
 18370  015248  D00B               	goto	i2l8884
 18371                           
 18372                           ;RemoteCan.c: 127: user_data = msg.data[1];
 18373  01524A  C10B  F024         	movff	_msg+5,_user_data
 18374  01524E  6A25               	clrf	_user_data+1,c
 18375                           
 18376                           ;RemoteCan.c: 128: user_data = ((user_data<<8)|msg.data[0]);
 18377  015250  5024               	movf	_user_data,w,c
 18378  015252  0100               	movlb	0	; () banked
 18379  015254  6F60               	movwf	??_ISR_alta& (0+255),b
 18380  015256  0101               	movlb	1	; () banked
 18381  015258  510A               	movf	(_msg+4)& (0+255),w,b
 18382  01525A  6E24               	movwf	_user_data,c
 18383  01525C  C060  F025         	movff	??_ISR_alta,_user_data+1
 18384  015260                     i2l8884:
 18385                           
 18386                           ;RemoteCan.c: 129: }
 18387                           ;RemoteCan.c: 131: if (id == 0b00000000010) {
 18388  015260  0E02               	movlw	2
 18389  015262  180C               	xorwf	_id,w,c	;volatile
 18390  015264  100D               	iorwf	_id+1,w,c	;volatile
 18391  015266  100E               	iorwf	_id+2,w,c	;volatile
 18392  015268  100F               	iorwf	_id+3,w,c	;volatile
 18393  01526A  B4D8               	btfsc	status,2,c
 18394                           
 18395                           ;RemoteCan.c: 132: if (RTR_Flag == 1) {
 18396  01526C  A84B               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18397  01526E  D025               	goto	i2l8898
 18398                           
 18399                           ;RemoteCan.c: 133: pr_time_4 = time_counter;
 18400  015270  C01C  F014         	movff	_time_counter,_pr_time_4	;volatile
 18401  015274  C01D  F015         	movff	_time_counter+1,_pr_time_4+1	;volatile
 18402  015278  C01E  F016         	movff	_time_counter+2,_pr_time_4+2	;volatile
 18403  01527C  C01F  F017         	movff	_time_counter+3,_pr_time_4+3	;volatile
 18404                           
 18405                           ;RemoteCan.c: 134: data[0] = 0x03;
 18406  015280  0E03               	movlw	3
 18407  015282  6E28               	movwf	_data,c
 18408                           
 18409                           ;RemoteCan.c: 135: _delay((unsigned long)((10)*(16000000/4000000.0)));
 18410  015284  0E0D               	movlw	13
 18411  015286                     i2u1207_47:
 18412  015286  2EE8               	decfsz	wreg,f,c
 18413  015288  D7FE               	goto	i2u1207_47
 18414  01528A  F000               	nop	
 18415  01528C                     i2l8894:
 18416  01528C  EC6A  F0B0         	call	i2_CANisTxReady	;wreg free
 18417  015290  06E8               	decf	wreg,f,c
 18418  015292  A4D8               	btfss	status,2,c
 18419  015294  D7FB               	goto	i2l8894
 18420                           
 18421                           ;RemoteCan.c: 137: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 18422  015296  0E02               	movlw	2
 18423  015298  6E3A               	movwf	i2CANsendMessage@identifier,c
 18424  01529A  0E00               	movlw	0
 18425  01529C  6E3B               	movwf	i2CANsendMessage@identifier+1,c
 18426  01529E  0E00               	movlw	0
 18427  0152A0  6E3C               	movwf	i2CANsendMessage@identifier+2,c
 18428  0152A2  0E00               	movlw	0
 18429  0152A4  6E3D               	movwf	i2CANsendMessage@identifier+3,c
 18430  0152A6  0E28               	movlw	low _data
 18431  0152A8  6E3E               	movwf	i2CANsendMessage@data,c
 18432  0152AA  0E00               	movlw	high _data
 18433  0152AC  6E3F               	movwf	i2CANsendMessage@data+1,c
 18434  0152AE  0E08               	movlw	8
 18435  0152B0  6E40               	movwf	i2CANsendMessage@dataLength,c
 18436  0152B2  0EBC               	movlw	188
 18437  0152B4  6E41               	movwf	i2CANsendMessage@flags,c
 18438  0152B6  EC93  F08D         	call	i2_CANsendMessage	;wreg free
 18439  0152BA                     i2l8898:
 18440                           
 18441                           ;RemoteCan.c: 143: }
 18442                           ;RemoteCan.c: 144: }
 18443                           ;RemoteCan.c: 145: }
 18444                           ;RemoteCan.c: 146: LATDbits.LATD2 = 1;
 18445  0152BA  848C               	bsf	3980,2,c	;volatile
 18446                           
 18447                           ;RemoteCan.c: 147: LATDbits.LATD3 = 1;
 18448  0152BC  868C               	bsf	3980,3,c	;volatile
 18449                           
 18450                           ;RemoteCan.c: 148: PIR3bits.RXB1IF = 0;
 18451  0152BE  92A4               	bcf	4004,1,c	;volatile
 18452                           
 18453                           ;RemoteCan.c: 149: PIR3bits.RXB0IF = 0;
 18454  0152C0  90A4               	bcf	4004,0,c	;volatile
 18455  0152C2                     i2l772:
 18456  0152C2  C06F  FFF5         	movff	??_ISR_alta+15,tablat
 18457  0152C6  C06E  FFF8         	movff	??_ISR_alta+14,tblptru
 18458  0152CA  C06D  FFF7         	movff	??_ISR_alta+13,tblptrh
 18459  0152CE  C06C  FFF6         	movff	??_ISR_alta+12,tblptrl
 18460  0152D2  C06B  FFF4         	movff	??_ISR_alta+11,prodh
 18461  0152D6  C06A  FFF3         	movff	??_ISR_alta+10,prodl
 18462  0152DA  C069  FFDA         	movff	??_ISR_alta+9,fsr2h
 18463  0152DE  C068  FFD9         	movff	??_ISR_alta+8,fsr2l
 18464  0152E2  C067  FFE2         	movff	??_ISR_alta+7,fsr1h
 18465  0152E6  C066  FFE1         	movff	??_ISR_alta+6,fsr1l
 18466  0152EA  C065  FFEA         	movff	??_ISR_alta+5,fsr0h
 18467  0152EE  C064  FFE9         	movff	??_ISR_alta+4,fsr0l
 18468  0152F2  C063  FFFB         	movff	??_ISR_alta+3,pclatu
 18469  0152F6  C062  FFFA         	movff	??_ISR_alta+2,pclath
 18470  0152FA  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18471  0152FC  0011               	retfie		f
 18472  0152FE                     __end_of_ISR_alta:
 18473                           	opt stack 0
 18474                           pclatu	equ	0xFFB
 18475                           pclath	equ	0xFFA
 18476                           tblptru	equ	0xFF8
 18477                           tblptrh	equ	0xFF7
 18478                           tblptrl	equ	0xFF6
 18479                           tablat	equ	0xFF5
 18480                           prodh	equ	0xFF4
 18481                           prodl	equ	0xFF3
 18482                           intcon	equ	0xFF2
 18483                           postinc0	equ	0xFEE
 18484                           fsr0h	equ	0xFEA
 18485                           fsr0l	equ	0xFE9
 18486                           wreg	equ	0xFE8
 18487                           indf1	equ	0xFE7
 18488                           plusw1	equ	0xFE3
 18489                           fsr1h	equ	0xFE2
 18490                           fsr1l	equ	0xFE1
 18491                           bsr	equ	0xFE0
 18492                           indf2	equ	0xFDF
 18493                           postinc2	equ	0xFDE
 18494                           plusw2	equ	0xFDB
 18495                           fsr2h	equ	0xFDA
 18496                           fsr2l	equ	0xFD9
 18497                           status	equ	0xFD8
 18498                           
 18499 ;; *************** function i2_CANsendMessage *****************
 18500 ;; Defined at:
 18501 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 18502 ;; Parameters:    Size  Location     Type
 18503 ;;  identifier      4   17[COMRAM] unsigned long 
 18504 ;;  data            2   21[COMRAM] PTR unsigned char 
 18505 ;;		 -> data_speed(1), park_assist_state(8), data_brake(1), data_steering(1), 
 18506 ;;		 -> data(1), 
 18507 ;;  dataLength      1   23[COMRAM] unsigned char 
 18508 ;;  flags           1   24[COMRAM] enum E16909
 18509 ;; Auto vars:     Size  Location     Type
 18510 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 18511 ;; Return value:  Size  Location     Type
 18512 ;;		None               void
 18513 ;; Registers used:
 18514 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18515 ;; Tracked objects:
 18516 ;;		On entry : 0/0
 18517 ;;		On exit  : 0/0
 18518 ;;		Unchanged: 0/0
 18519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18520 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18521 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18522 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18523 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18524 ;;Total ram usage:       16 bytes
 18525 ;; Hardware stack levels used:    1
 18526 ;; This function calls:
 18527 ;;		Nothing
 18528 ;; This function is called by:
 18529 ;;		_ISR_alta
 18530 ;; This function uses a non-reentrant model
 18531 ;;
 18532                           
 18533                           	psect	text54
 18534  011B26                     __ptext54:
 18535                           	opt stack 0
 18536  011B26                     i2_CANsendMessage:
 18537                           	opt stack 20
 18538                           
 18539                           ;inc\CANlib.h: 296: unsigned long tamp;
 18540                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 18541                           
 18542                           ;incstack = 0
 18543  011B26  010F               	movlb	15	; () banked
 18544  011B28  B740               	btfsc	64,3,b	;volatile
 18545  011B2A  D115               	goto	i2l375
 18546                           
 18547                           ; BSR set to: 15
 18548                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 18549  011B2C  C040  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 18550                           
 18551                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 18552  011B30  AC41               	btfss	i2CANsendMessage@flags,6,c
 18553  011B32  D003               	goto	i2l376
 18554                           
 18555                           ; BSR set to: 15
 18556                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 18557  011B34  010F               	movlb	15	; () banked
 18558  011B36  8D45               	bsf	69,6,b	;volatile
 18559  011B38  D002               	goto	i2l377
 18560  011B3A                     i2l376:
 18561                           
 18562                           ; BSR set to: 15
 18563                           ;inc\CANlib.h: 302: else
 18564                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 18565  011B3A  010F               	movlb	15	; () banked
 18566  011B3C  9D45               	bcf	69,6,b	;volatile
 18567  011B3E                     i2l377:
 18568                           
 18569                           ; BSR set to: 15
 18570                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 18571  011B3E  A641               	btfss	i2CANsendMessage@flags,3,c
 18572  011B40  D066               	goto	i2l378
 18573                           
 18574                           ; BSR set to: 15
 18575                           ;inc\CANlib.h: 306: {
 18576                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 18577  011B42  503A               	movf	i2CANsendMessage@identifier,w,c
 18578  011B44  6E46               	movwf	i2CANsendMessage@tamp,c
 18579  011B46  6A47               	clrf	i2CANsendMessage@tamp+1,c
 18580  011B48  6A48               	clrf	i2CANsendMessage@tamp+2,c
 18581  011B4A  6A49               	clrf	i2CANsendMessage@tamp+3,c
 18582                           
 18583                           ; BSR set to: 15
 18584                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 18585  011B4C  C046  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 18586                           
 18587                           ; BSR set to: 15
 18588                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 18589  011B50  0E00               	movlw	0
 18590  011B52  143A               	andwf	i2CANsendMessage@identifier,w,c
 18591  011B54  6E46               	movwf	i2CANsendMessage@tamp,c
 18592  011B56  0EFF               	movlw	255
 18593  011B58  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 18594  011B5A  6E47               	movwf	i2CANsendMessage@tamp+1,c
 18595  011B5C  0E00               	movlw	0
 18596  011B5E  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 18597  011B60  6E48               	movwf	i2CANsendMessage@tamp+2,c
 18598  011B62  0E00               	movlw	0
 18599  011B64  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 18600  011B66  6E49               	movwf	i2CANsendMessage@tamp+3,c
 18601                           
 18602                           ; BSR set to: 15
 18603                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 18604  011B68  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18605  011B6C  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18606  011B70  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18607  011B74  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18608  011B78  C043  F042         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 18609  011B7C  C044  F043         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 18610  011B80  C045  F044         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 18611  011B84  6A45               	clrf	??i2_CANsendMessage+3,c
 18612  011B86  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18613  011B8A  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18614  011B8E  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18615  011B92  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18616                           
 18617                           ; BSR set to: 15
 18618                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 18619  011B96  C046  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 18620                           
 18621                           ; BSR set to: 15
 18622                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 18623  011B9A  0E00               	movlw	0
 18624  011B9C  010F               	movlb	15	; () banked
 18625  011B9E  6F42               	movwf	66,b	;volatile
 18626                           
 18627                           ; BSR set to: 15
 18628                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 18629  011BA0  010F               	movlb	15	; () banked
 18630  011BA2  8742               	bsf	66,3,b	;volatile
 18631                           
 18632                           ; BSR set to: 15
 18633                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 18634  011BA4  A03C               	btfss	i2CANsendMessage@identifier+2,0,c
 18635  011BA6  D002               	goto	i2l379
 18636                           
 18637                           ; BSR set to: 15
 18638                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 18639  011BA8  010F               	movlb	15	; () banked
 18640  011BAA  8142               	bsf	66,0,b	;volatile
 18641  011BAC                     i2l379:
 18642                           
 18643                           ; BSR set to: 15
 18644                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 18645  011BAC  A23C               	btfss	i2CANsendMessage@identifier+2,1,c
 18646  011BAE  D002               	goto	i2l380
 18647                           
 18648                           ; BSR set to: 15
 18649                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 18650  011BB0  010F               	movlb	15	; () banked
 18651  011BB2  8342               	bsf	66,1,b	;volatile
 18652  011BB4                     i2l380:
 18653                           
 18654                           ; BSR set to: 15
 18655                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 18656  011BB4  A43C               	btfss	i2CANsendMessage@identifier+2,2,c
 18657  011BB6  D002               	goto	i2l381
 18658                           
 18659                           ; BSR set to: 15
 18660                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 18661  011BB8  010F               	movlb	15	; () banked
 18662  011BBA  8B42               	bsf	66,5,b	;volatile
 18663  011BBC                     i2l381:
 18664                           
 18665                           ; BSR set to: 15
 18666                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 18667  011BBC  A63C               	btfss	i2CANsendMessage@identifier+2,3,c
 18668  011BBE  D002               	goto	i2l382
 18669                           
 18670                           ; BSR set to: 15
 18671                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 18672  011BC0  010F               	movlb	15	; () banked
 18673  011BC2  8D42               	bsf	66,6,b	;volatile
 18674  011BC4                     i2l382:
 18675                           
 18676                           ; BSR set to: 15
 18677                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 18678  011BC4  A83C               	btfss	i2CANsendMessage@identifier+2,4,c
 18679  011BC6  D002               	goto	i2l7084
 18680                           
 18681                           ; BSR set to: 15
 18682                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 18683  011BC8  010F               	movlb	15	; () banked
 18684  011BCA  8F42               	bsf	66,7,b	;volatile
 18685  011BCC                     i2l7084:
 18686                           
 18687                           ; BSR set to: 15
 18688                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 18689  011BCC  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18690  011BD0  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18691  011BD4  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18692  011BD8  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18693  011BDC  0E16               	movlw	22
 18694  011BDE  D005               	goto	i2u912_40
 18695  011BE0                     i2u912_45:
 18696  011BE0  90D8               	bcf	status,0,c
 18697  011BE2  3245               	rrcf	??i2_CANsendMessage+3,f,c
 18698  011BE4  3244               	rrcf	??i2_CANsendMessage+2,f,c
 18699  011BE6  3243               	rrcf	??i2_CANsendMessage+1,f,c
 18700  011BE8  3242               	rrcf	??i2_CANsendMessage,f,c
 18701  011BEA                     i2u912_40:
 18702  011BEA  2EE8               	decfsz	wreg,f,c
 18703  011BEC  D7F9               	goto	i2u912_45
 18704  011BEE  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18705  011BF2  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18706  011BF6  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18707  011BFA  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18708                           
 18709                           ; BSR set to: 15
 18710                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 18711  011BFE  5046               	movf	i2CANsendMessage@tamp,w,c
 18712  011C00  6E46               	movwf	i2CANsendMessage@tamp,c
 18713  011C02  6A47               	clrf	i2CANsendMessage@tamp+1,c
 18714  011C04  6A48               	clrf	i2CANsendMessage@tamp+2,c
 18715  011C06  6A49               	clrf	i2CANsendMessage@tamp+3,c
 18716                           
 18717                           ; BSR set to: 15
 18718                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 18719  011C08  C046  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 18720                           
 18721                           ;inc\CANlib.h: 332: }
 18722  011C0C  D04D               	goto	i2l7104
 18723  011C0E                     i2l378:
 18724                           
 18725                           ; BSR set to: 15
 18726                           ;inc\CANlib.h: 334: else
 18727                           ;inc\CANlib.h: 336: {
 18728                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 18729  011C0E  010F               	movlb	15	; () banked
 18730  011C10  9742               	bcf	66,3,b	;volatile
 18731                           
 18732                           ; BSR set to: 15
 18733                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 18734  011C12  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18735  011C16  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18736  011C1A  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18737  011C1E  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18738  011C22  0E04               	movlw	4
 18739  011C24  D005               	goto	i2u913_40
 18740  011C26                     i2u913_45:
 18741  011C26  90D8               	bcf	status,0,c
 18742  011C28  3245               	rrcf	??i2_CANsendMessage+3,f,c
 18743  011C2A  3244               	rrcf	??i2_CANsendMessage+2,f,c
 18744  011C2C  3243               	rrcf	??i2_CANsendMessage+1,f,c
 18745  011C2E  3242               	rrcf	??i2_CANsendMessage,f,c
 18746  011C30                     i2u913_40:
 18747  011C30  2EE8               	decfsz	wreg,f,c
 18748  011C32  D7F9               	goto	i2u913_45
 18749  011C34  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18750  011C38  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18751  011C3C  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18752  011C40  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18753                           
 18754                           ; BSR set to: 15
 18755                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 18756  011C44  5046               	movf	i2CANsendMessage@tamp,w,c
 18757  011C46  6E46               	movwf	i2CANsendMessage@tamp,c
 18758  011C48  6A47               	clrf	i2CANsendMessage@tamp+1,c
 18759  011C4A  6A48               	clrf	i2CANsendMessage@tamp+2,c
 18760  011C4C  6A49               	clrf	i2CANsendMessage@tamp+3,c
 18761                           
 18762                           ; BSR set to: 15
 18763                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 18764  011C4E  C046  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 18765                           
 18766                           ; BSR set to: 15
 18767                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 18768  011C52  0E07               	movlw	7
 18769  011C54  143A               	andwf	i2CANsendMessage@identifier,w,c
 18770  011C56  6E46               	movwf	i2CANsendMessage@tamp,c
 18771  011C58  0E00               	movlw	0
 18772  011C5A  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 18773  011C5C  6E47               	movwf	i2CANsendMessage@tamp+1,c
 18774  011C5E  0E00               	movlw	0
 18775  011C60  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 18776  011C62  6E48               	movwf	i2CANsendMessage@tamp+2,c
 18777  011C64  0E00               	movlw	0
 18778  011C66  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 18779  011C68  6E49               	movwf	i2CANsendMessage@tamp+3,c
 18780                           
 18781                           ; BSR set to: 15
 18782                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 18783  011C6A  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18784  011C6E  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18785  011C72  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18786  011C76  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18787  011C7A  0E05               	movlw	5
 18788  011C7C                     i2u914_45:
 18789  011C7C  90D8               	bcf	status,0,c
 18790  011C7E  3642               	rlcf	??i2_CANsendMessage,f,c
 18791  011C80  3643               	rlcf	??i2_CANsendMessage+1,f,c
 18792  011C82  3644               	rlcf	??i2_CANsendMessage+2,f,c
 18793  011C84  3645               	rlcf	??i2_CANsendMessage+3,f,c
 18794  011C86  2EE8               	decfsz	wreg,f,c
 18795  011C88  D7F9               	goto	i2u914_45
 18796  011C8A  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18797  011C8E  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18798  011C92  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18799  011C96  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18800                           
 18801                           ; BSR set to: 15
 18802                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 18803  011C9A  010F               	movlb	15	; () banked
 18804  011C9C  5142               	movf	66,w,b	;volatile
 18805  011C9E  0B1F               	andlw	31
 18806  011CA0  010F               	movlb	15	; () banked
 18807  011CA2  6F42               	movwf	66,b	;volatile
 18808                           
 18809                           ; BSR set to: 15
 18810                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 18811  011CA4  C046  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 18812  011CA8                     i2l7104:
 18813                           
 18814                           ; BSR set to: 15
 18815                           ;inc\CANlib.h: 347: }
 18816                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 18817  011CA8  A041               	btfss	i2CANsendMessage@flags,0,c
 18818  011CAA  D003               	goto	i2l385
 18819                           
 18820                           ; BSR set to: 15
 18821                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 18822  011CAC  010F               	movlb	15	; () banked
 18823  011CAE  8140               	bsf	64,0,b	;volatile
 18824  011CB0  D002               	goto	i2l386
 18825  011CB2                     i2l385:
 18826                           
 18827                           ; BSR set to: 15
 18828                           ;inc\CANlib.h: 351: else
 18829                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 18830  011CB2  010F               	movlb	15	; () banked
 18831  011CB4  9140               	bcf	64,0,b	;volatile
 18832  011CB6                     i2l386:
 18833                           
 18834                           ; BSR set to: 15
 18835                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 18836  011CB6  A241               	btfss	i2CANsendMessage@flags,1,c
 18837  011CB8  D003               	goto	i2l387
 18838                           
 18839                           ; BSR set to: 15
 18840                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 18841  011CBA  010F               	movlb	15	; () banked
 18842  011CBC  8340               	bsf	64,1,b	;volatile
 18843  011CBE  D002               	goto	i2l7110
 18844  011CC0                     i2l387:
 18845                           
 18846                           ; BSR set to: 15
 18847                           ;inc\CANlib.h: 355: else
 18848                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 18849  011CC0  010F               	movlb	15	; () banked
 18850  011CC2  9340               	bcf	64,1,b	;volatile
 18851  011CC4                     i2l7110:
 18852                           
 18853                           ; BSR set to: 15
 18854                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 18855  011CC4  C03E  FFD9         	movff	i2CANsendMessage@data,fsr2l
 18856  011CC8  C03F  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 18857  011CCC  50DF               	movf	indf2,w,c
 18858  011CCE  010F               	movlb	15	; () banked
 18859  011CD0  6F46               	movwf	70,b	;volatile
 18860                           
 18861                           ; BSR set to: 15
 18862                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 18863  011CD2  EE20 F001          	lfsr	2,1
 18864  011CD6  503E               	movf	i2CANsendMessage@data,w,c
 18865  011CD8  26D9               	addwf	fsr2l,f,c
 18866  011CDA  503F               	movf	i2CANsendMessage@data+1,w,c
 18867  011CDC  22DA               	addwfc	fsr2h,f,c
 18868  011CDE  50DF               	movf	indf2,w,c
 18869  011CE0  010F               	movlb	15	; () banked
 18870  011CE2  6F47               	movwf	71,b	;volatile
 18871                           
 18872                           ; BSR set to: 15
 18873                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 18874  011CE4  EE20 F002          	lfsr	2,2
 18875  011CE8  503E               	movf	i2CANsendMessage@data,w,c
 18876  011CEA  26D9               	addwf	fsr2l,f,c
 18877  011CEC  503F               	movf	i2CANsendMessage@data+1,w,c
 18878  011CEE  22DA               	addwfc	fsr2h,f,c
 18879  011CF0  50DF               	movf	indf2,w,c
 18880  011CF2  010F               	movlb	15	; () banked
 18881  011CF4  6F48               	movwf	72,b	;volatile
 18882                           
 18883                           ; BSR set to: 15
 18884                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 18885  011CF6  EE20 F003          	lfsr	2,3
 18886  011CFA  503E               	movf	i2CANsendMessage@data,w,c
 18887  011CFC  26D9               	addwf	fsr2l,f,c
 18888  011CFE  503F               	movf	i2CANsendMessage@data+1,w,c
 18889  011D00  22DA               	addwfc	fsr2h,f,c
 18890  011D02  50DF               	movf	indf2,w,c
 18891  011D04  010F               	movlb	15	; () banked
 18892  011D06  6F49               	movwf	73,b	;volatile
 18893                           
 18894                           ; BSR set to: 15
 18895                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 18896  011D08  EE20 F004          	lfsr	2,4
 18897  011D0C  503E               	movf	i2CANsendMessage@data,w,c
 18898  011D0E  26D9               	addwf	fsr2l,f,c
 18899  011D10  503F               	movf	i2CANsendMessage@data+1,w,c
 18900  011D12  22DA               	addwfc	fsr2h,f,c
 18901  011D14  50DF               	movf	indf2,w,c
 18902  011D16  010F               	movlb	15	; () banked
 18903  011D18  6F4A               	movwf	74,b	;volatile
 18904                           
 18905                           ; BSR set to: 15
 18906                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 18907  011D1A  EE20 F005          	lfsr	2,5
 18908  011D1E  503E               	movf	i2CANsendMessage@data,w,c
 18909  011D20  26D9               	addwf	fsr2l,f,c
 18910  011D22  503F               	movf	i2CANsendMessage@data+1,w,c
 18911  011D24  22DA               	addwfc	fsr2h,f,c
 18912  011D26  50DF               	movf	indf2,w,c
 18913  011D28  010F               	movlb	15	; () banked
 18914  011D2A  6F4B               	movwf	75,b	;volatile
 18915                           
 18916                           ; BSR set to: 15
 18917                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 18918  011D2C  EE20 F006          	lfsr	2,6
 18919  011D30  503E               	movf	i2CANsendMessage@data,w,c
 18920  011D32  26D9               	addwf	fsr2l,f,c
 18921  011D34  503F               	movf	i2CANsendMessage@data+1,w,c
 18922  011D36  22DA               	addwfc	fsr2h,f,c
 18923  011D38  50DF               	movf	indf2,w,c
 18924  011D3A  010F               	movlb	15	; () banked
 18925  011D3C  6F4C               	movwf	76,b	;volatile
 18926                           
 18927                           ; BSR set to: 15
 18928                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 18929  011D3E  EE20 F007          	lfsr	2,7
 18930  011D42  503E               	movf	i2CANsendMessage@data,w,c
 18931  011D44  26D9               	addwf	fsr2l,f,c
 18932  011D46  503F               	movf	i2CANsendMessage@data+1,w,c
 18933  011D48  22DA               	addwfc	fsr2h,f,c
 18934  011D4A  50DF               	movf	indf2,w,c
 18935  011D4C  010F               	movlb	15	; () banked
 18936  011D4E  6F4D               	movwf	77,b	;volatile
 18937                           
 18938                           ; BSR set to: 15
 18939                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 18940  011D50  010F               	movlb	15	; () banked
 18941  011D52  8740               	bsf	64,3,b	;volatile
 18942                           
 18943                           ; BSR set to: 15
 18944                           ;inc\CANlib.h: 368: return;
 18945  011D54  0012               	return	
 18946  011D56                     i2l375:
 18947                           
 18948                           ; BSR set to: 15
 18949                           ;inc\CANlib.h: 369: }
 18950                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 18951  011D56  010F               	movlb	15	; () banked
 18952  011D58  B730               	btfsc	48,3,b	;volatile
 18953  011D5A  D115               	goto	i2l390
 18954                           
 18955                           ; BSR set to: 15
 18956                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 18957  011D5C  C040  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 18958                           
 18959                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 18960  011D60  AC41               	btfss	i2CANsendMessage@flags,6,c
 18961  011D62  D003               	goto	i2l391
 18962                           
 18963                           ; BSR set to: 15
 18964                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 18965  011D64  010F               	movlb	15	; () banked
 18966  011D66  8D35               	bsf	53,6,b	;volatile
 18967  011D68  D002               	goto	i2l392
 18968  011D6A                     i2l391:
 18969                           
 18970                           ; BSR set to: 15
 18971                           ;inc\CANlib.h: 378: else
 18972                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 18973  011D6A  010F               	movlb	15	; () banked
 18974  011D6C  9D35               	bcf	53,6,b	;volatile
 18975  011D6E                     i2l392:
 18976                           
 18977                           ; BSR set to: 15
 18978                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 18979  011D6E  A641               	btfss	i2CANsendMessage@flags,3,c
 18980  011D70  D066               	goto	i2l393
 18981                           
 18982                           ; BSR set to: 15
 18983                           ;inc\CANlib.h: 382: {
 18984                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 18985  011D72  503A               	movf	i2CANsendMessage@identifier,w,c
 18986  011D74  6E46               	movwf	i2CANsendMessage@tamp,c
 18987  011D76  6A47               	clrf	i2CANsendMessage@tamp+1,c
 18988  011D78  6A48               	clrf	i2CANsendMessage@tamp+2,c
 18989  011D7A  6A49               	clrf	i2CANsendMessage@tamp+3,c
 18990                           
 18991                           ; BSR set to: 15
 18992                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 18993  011D7C  C046  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 18994                           
 18995                           ; BSR set to: 15
 18996                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 18997  011D80  0E00               	movlw	0
 18998  011D82  143A               	andwf	i2CANsendMessage@identifier,w,c
 18999  011D84  6E46               	movwf	i2CANsendMessage@tamp,c
 19000  011D86  0EFF               	movlw	255
 19001  011D88  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 19002  011D8A  6E47               	movwf	i2CANsendMessage@tamp+1,c
 19003  011D8C  0E00               	movlw	0
 19004  011D8E  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 19005  011D90  6E48               	movwf	i2CANsendMessage@tamp+2,c
 19006  011D92  0E00               	movlw	0
 19007  011D94  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 19008  011D96  6E49               	movwf	i2CANsendMessage@tamp+3,c
 19009                           
 19010                           ; BSR set to: 15
 19011                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 19012  011D98  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19013  011D9C  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19014  011DA0  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19015  011DA4  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19016  011DA8  C043  F042         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19017  011DAC  C044  F043         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19018  011DB0  C045  F044         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19019  011DB4  6A45               	clrf	??i2_CANsendMessage+3,c
 19020  011DB6  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19021  011DBA  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19022  011DBE  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19023  011DC2  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19024                           
 19025                           ; BSR set to: 15
 19026                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 19027  011DC6  C046  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 19028                           
 19029                           ; BSR set to: 15
 19030                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 19031  011DCA  0E00               	movlw	0
 19032  011DCC  010F               	movlb	15	; () banked
 19033  011DCE  6F32               	movwf	50,b	;volatile
 19034                           
 19035                           ; BSR set to: 15
 19036                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 19037  011DD0  010F               	movlb	15	; () banked
 19038  011DD2  8732               	bsf	50,3,b	;volatile
 19039                           
 19040                           ; BSR set to: 15
 19041                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 19042  011DD4  A03C               	btfss	i2CANsendMessage@identifier+2,0,c
 19043  011DD6  D002               	goto	i2l394
 19044                           
 19045                           ; BSR set to: 15
 19046                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 19047  011DD8  010F               	movlb	15	; () banked
 19048  011DDA  8132               	bsf	50,0,b	;volatile
 19049  011DDC                     i2l394:
 19050                           
 19051                           ; BSR set to: 15
 19052                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 19053  011DDC  A23C               	btfss	i2CANsendMessage@identifier+2,1,c
 19054  011DDE  D002               	goto	i2l395
 19055                           
 19056                           ; BSR set to: 15
 19057                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 19058  011DE0  010F               	movlb	15	; () banked
 19059  011DE2  8332               	bsf	50,1,b	;volatile
 19060  011DE4                     i2l395:
 19061                           
 19062                           ; BSR set to: 15
 19063                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 19064  011DE4  A43C               	btfss	i2CANsendMessage@identifier+2,2,c
 19065  011DE6  D002               	goto	i2l396
 19066                           
 19067                           ; BSR set to: 15
 19068                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 19069  011DE8  010F               	movlb	15	; () banked
 19070  011DEA  8B32               	bsf	50,5,b	;volatile
 19071  011DEC                     i2l396:
 19072                           
 19073                           ; BSR set to: 15
 19074                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 19075  011DEC  A63C               	btfss	i2CANsendMessage@identifier+2,3,c
 19076  011DEE  D002               	goto	i2l397
 19077                           
 19078                           ; BSR set to: 15
 19079                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 19080  011DF0  010F               	movlb	15	; () banked
 19081  011DF2  8D32               	bsf	50,6,b	;volatile
 19082  011DF4                     i2l397:
 19083                           
 19084                           ; BSR set to: 15
 19085                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 19086  011DF4  A83C               	btfss	i2CANsendMessage@identifier+2,4,c
 19087  011DF6  D002               	goto	i2l7160
 19088                           
 19089                           ; BSR set to: 15
 19090                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 19091  011DF8  010F               	movlb	15	; () banked
 19092  011DFA  8F32               	bsf	50,7,b	;volatile
 19093  011DFC                     i2l7160:
 19094                           
 19095                           ; BSR set to: 15
 19096                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 19097  011DFC  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19098  011E00  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19099  011E04  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19100  011E08  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19101  011E0C  0E16               	movlw	22
 19102  011E0E  D005               	goto	i2u925_40
 19103  011E10                     i2u925_45:
 19104  011E10  90D8               	bcf	status,0,c
 19105  011E12  3245               	rrcf	??i2_CANsendMessage+3,f,c
 19106  011E14  3244               	rrcf	??i2_CANsendMessage+2,f,c
 19107  011E16  3243               	rrcf	??i2_CANsendMessage+1,f,c
 19108  011E18  3242               	rrcf	??i2_CANsendMessage,f,c
 19109  011E1A                     i2u925_40:
 19110  011E1A  2EE8               	decfsz	wreg,f,c
 19111  011E1C  D7F9               	goto	i2u925_45
 19112  011E1E  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19113  011E22  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19114  011E26  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19115  011E2A  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19116                           
 19117                           ; BSR set to: 15
 19118                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 19119  011E2E  5046               	movf	i2CANsendMessage@tamp,w,c
 19120  011E30  6E46               	movwf	i2CANsendMessage@tamp,c
 19121  011E32  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19122  011E34  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19123  011E36  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19124                           
 19125                           ; BSR set to: 15
 19126                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 19127  011E38  C046  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 19128                           
 19129                           ;inc\CANlib.h: 407: }
 19130  011E3C  D04D               	goto	i2l7180
 19131  011E3E                     i2l393:
 19132                           
 19133                           ; BSR set to: 15
 19134                           ;inc\CANlib.h: 409: else
 19135                           ;inc\CANlib.h: 411: {
 19136                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 19137  011E3E  010F               	movlb	15	; () banked
 19138  011E40  9732               	bcf	50,3,b	;volatile
 19139                           
 19140                           ; BSR set to: 15
 19141                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 19142  011E42  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19143  011E46  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19144  011E4A  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19145  011E4E  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19146  011E52  0E04               	movlw	4
 19147  011E54  D005               	goto	i2u926_40
 19148  011E56                     i2u926_45:
 19149  011E56  90D8               	bcf	status,0,c
 19150  011E58  3245               	rrcf	??i2_CANsendMessage+3,f,c
 19151  011E5A  3244               	rrcf	??i2_CANsendMessage+2,f,c
 19152  011E5C  3243               	rrcf	??i2_CANsendMessage+1,f,c
 19153  011E5E  3242               	rrcf	??i2_CANsendMessage,f,c
 19154  011E60                     i2u926_40:
 19155  011E60  2EE8               	decfsz	wreg,f,c
 19156  011E62  D7F9               	goto	i2u926_45
 19157  011E64  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19158  011E68  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19159  011E6C  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19160  011E70  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19161                           
 19162                           ; BSR set to: 15
 19163                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 19164  011E74  5046               	movf	i2CANsendMessage@tamp,w,c
 19165  011E76  6E46               	movwf	i2CANsendMessage@tamp,c
 19166  011E78  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19167  011E7A  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19168  011E7C  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19169                           
 19170                           ; BSR set to: 15
 19171                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 19172  011E7E  C046  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 19173                           
 19174                           ; BSR set to: 15
 19175                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 19176  011E82  0E07               	movlw	7
 19177  011E84  143A               	andwf	i2CANsendMessage@identifier,w,c
 19178  011E86  6E46               	movwf	i2CANsendMessage@tamp,c
 19179  011E88  0E00               	movlw	0
 19180  011E8A  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 19181  011E8C  6E47               	movwf	i2CANsendMessage@tamp+1,c
 19182  011E8E  0E00               	movlw	0
 19183  011E90  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 19184  011E92  6E48               	movwf	i2CANsendMessage@tamp+2,c
 19185  011E94  0E00               	movlw	0
 19186  011E96  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 19187  011E98  6E49               	movwf	i2CANsendMessage@tamp+3,c
 19188                           
 19189                           ; BSR set to: 15
 19190                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 19191  011E9A  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19192  011E9E  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19193  011EA2  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19194  011EA6  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19195  011EAA  0E05               	movlw	5
 19196  011EAC                     i2u927_45:
 19197  011EAC  90D8               	bcf	status,0,c
 19198  011EAE  3642               	rlcf	??i2_CANsendMessage,f,c
 19199  011EB0  3643               	rlcf	??i2_CANsendMessage+1,f,c
 19200  011EB2  3644               	rlcf	??i2_CANsendMessage+2,f,c
 19201  011EB4  3645               	rlcf	??i2_CANsendMessage+3,f,c
 19202  011EB6  2EE8               	decfsz	wreg,f,c
 19203  011EB8  D7F9               	goto	i2u927_45
 19204  011EBA  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19205  011EBE  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19206  011EC2  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19207  011EC6  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19208                           
 19209                           ; BSR set to: 15
 19210                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 19211  011ECA  010F               	movlb	15	; () banked
 19212  011ECC  5132               	movf	50,w,b	;volatile
 19213  011ECE  0B1F               	andlw	31
 19214  011ED0  010F               	movlb	15	; () banked
 19215  011ED2  6F32               	movwf	50,b	;volatile
 19216                           
 19217                           ; BSR set to: 15
 19218                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 19219  011ED4  C046  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 19220  011ED8                     i2l7180:
 19221                           
 19222                           ; BSR set to: 15
 19223                           ;inc\CANlib.h: 422: }
 19224                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 19225  011ED8  A041               	btfss	i2CANsendMessage@flags,0,c
 19226  011EDA  D003               	goto	i2l400
 19227                           
 19228                           ; BSR set to: 15
 19229                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 19230  011EDC  010F               	movlb	15	; () banked
 19231  011EDE  8130               	bsf	48,0,b	;volatile
 19232  011EE0  D002               	goto	i2l401
 19233  011EE2                     i2l400:
 19234                           
 19235                           ; BSR set to: 15
 19236                           ;inc\CANlib.h: 426: else
 19237                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 19238  011EE2  010F               	movlb	15	; () banked
 19239  011EE4  9130               	bcf	48,0,b	;volatile
 19240  011EE6                     i2l401:
 19241                           
 19242                           ; BSR set to: 15
 19243                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 19244  011EE6  A241               	btfss	i2CANsendMessage@flags,1,c
 19245  011EE8  D003               	goto	i2l402
 19246                           
 19247                           ; BSR set to: 15
 19248                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 19249  011EEA  010F               	movlb	15	; () banked
 19250  011EEC  8330               	bsf	48,1,b	;volatile
 19251  011EEE  D002               	goto	i2l7186
 19252  011EF0                     i2l402:
 19253                           
 19254                           ; BSR set to: 15
 19255                           ;inc\CANlib.h: 430: else
 19256                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 19257  011EF0  010F               	movlb	15	; () banked
 19258  011EF2  9330               	bcf	48,1,b	;volatile
 19259  011EF4                     i2l7186:
 19260                           
 19261                           ; BSR set to: 15
 19262                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 19263  011EF4  C03E  FFD9         	movff	i2CANsendMessage@data,fsr2l
 19264  011EF8  C03F  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 19265  011EFC  50DF               	movf	indf2,w,c
 19266  011EFE  010F               	movlb	15	; () banked
 19267  011F00  6F36               	movwf	54,b	;volatile
 19268                           
 19269                           ; BSR set to: 15
 19270                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 19271  011F02  EE20 F001          	lfsr	2,1
 19272  011F06  503E               	movf	i2CANsendMessage@data,w,c
 19273  011F08  26D9               	addwf	fsr2l,f,c
 19274  011F0A  503F               	movf	i2CANsendMessage@data+1,w,c
 19275  011F0C  22DA               	addwfc	fsr2h,f,c
 19276  011F0E  50DF               	movf	indf2,w,c
 19277  011F10  010F               	movlb	15	; () banked
 19278  011F12  6F37               	movwf	55,b	;volatile
 19279                           
 19280                           ; BSR set to: 15
 19281                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 19282  011F14  EE20 F002          	lfsr	2,2
 19283  011F18  503E               	movf	i2CANsendMessage@data,w,c
 19284  011F1A  26D9               	addwf	fsr2l,f,c
 19285  011F1C  503F               	movf	i2CANsendMessage@data+1,w,c
 19286  011F1E  22DA               	addwfc	fsr2h,f,c
 19287  011F20  50DF               	movf	indf2,w,c
 19288  011F22  010F               	movlb	15	; () banked
 19289  011F24  6F38               	movwf	56,b	;volatile
 19290                           
 19291                           ; BSR set to: 15
 19292                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 19293  011F26  EE20 F003          	lfsr	2,3
 19294  011F2A  503E               	movf	i2CANsendMessage@data,w,c
 19295  011F2C  26D9               	addwf	fsr2l,f,c
 19296  011F2E  503F               	movf	i2CANsendMessage@data+1,w,c
 19297  011F30  22DA               	addwfc	fsr2h,f,c
 19298  011F32  50DF               	movf	indf2,w,c
 19299  011F34  010F               	movlb	15	; () banked
 19300  011F36  6F39               	movwf	57,b	;volatile
 19301                           
 19302                           ; BSR set to: 15
 19303                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 19304  011F38  EE20 F004          	lfsr	2,4
 19305  011F3C  503E               	movf	i2CANsendMessage@data,w,c
 19306  011F3E  26D9               	addwf	fsr2l,f,c
 19307  011F40  503F               	movf	i2CANsendMessage@data+1,w,c
 19308  011F42  22DA               	addwfc	fsr2h,f,c
 19309  011F44  50DF               	movf	indf2,w,c
 19310  011F46  010F               	movlb	15	; () banked
 19311  011F48  6F3A               	movwf	58,b	;volatile
 19312                           
 19313                           ; BSR set to: 15
 19314                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 19315  011F4A  EE20 F005          	lfsr	2,5
 19316  011F4E  503E               	movf	i2CANsendMessage@data,w,c
 19317  011F50  26D9               	addwf	fsr2l,f,c
 19318  011F52  503F               	movf	i2CANsendMessage@data+1,w,c
 19319  011F54  22DA               	addwfc	fsr2h,f,c
 19320  011F56  50DF               	movf	indf2,w,c
 19321  011F58  010F               	movlb	15	; () banked
 19322  011F5A  6F3B               	movwf	59,b	;volatile
 19323                           
 19324                           ; BSR set to: 15
 19325                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 19326  011F5C  EE20 F006          	lfsr	2,6
 19327  011F60  503E               	movf	i2CANsendMessage@data,w,c
 19328  011F62  26D9               	addwf	fsr2l,f,c
 19329  011F64  503F               	movf	i2CANsendMessage@data+1,w,c
 19330  011F66  22DA               	addwfc	fsr2h,f,c
 19331  011F68  50DF               	movf	indf2,w,c
 19332  011F6A  010F               	movlb	15	; () banked
 19333  011F6C  6F3C               	movwf	60,b	;volatile
 19334                           
 19335                           ; BSR set to: 15
 19336                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 19337  011F6E  EE20 F007          	lfsr	2,7
 19338  011F72  503E               	movf	i2CANsendMessage@data,w,c
 19339  011F74  26D9               	addwf	fsr2l,f,c
 19340  011F76  503F               	movf	i2CANsendMessage@data+1,w,c
 19341  011F78  22DA               	addwfc	fsr2h,f,c
 19342  011F7A  50DF               	movf	indf2,w,c
 19343  011F7C  010F               	movlb	15	; () banked
 19344  011F7E  6F3D               	movwf	61,b	;volatile
 19345                           
 19346                           ; BSR set to: 15
 19347                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 19348  011F80  010F               	movlb	15	; () banked
 19349  011F82  8730               	bsf	48,3,b	;volatile
 19350                           
 19351                           ; BSR set to: 15
 19352                           ;inc\CANlib.h: 444: return;
 19353  011F84  0012               	return	
 19354  011F86                     i2l390:
 19355                           
 19356                           ; BSR set to: 15
 19357                           ;inc\CANlib.h: 445: }
 19358                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 19359  011F86  010F               	movlb	15	; () banked
 19360  011F88  B720               	btfsc	32,3,b	;volatile
 19361  011F8A  0012               	return	
 19362                           
 19363                           ; BSR set to: 15
 19364                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 19365  011F8C  C040  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 19366                           
 19367                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 19368  011F90  AC41               	btfss	i2CANsendMessage@flags,6,c
 19369  011F92  D003               	goto	i2l405
 19370                           
 19371                           ; BSR set to: 15
 19372                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 19373  011F94  010F               	movlb	15	; () banked
 19374  011F96  8D25               	bsf	37,6,b	;volatile
 19375  011F98  D002               	goto	i2l406
 19376  011F9A                     i2l405:
 19377                           
 19378                           ; BSR set to: 15
 19379                           ;inc\CANlib.h: 454: else
 19380                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 19381  011F9A  010F               	movlb	15	; () banked
 19382  011F9C  9D25               	bcf	37,6,b	;volatile
 19383  011F9E                     i2l406:
 19384                           
 19385                           ; BSR set to: 15
 19386                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 19387  011F9E  A641               	btfss	i2CANsendMessage@flags,3,c
 19388  011FA0  D066               	goto	i2l407
 19389                           
 19390                           ; BSR set to: 15
 19391                           ;inc\CANlib.h: 458: {
 19392                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 19393  011FA2  503A               	movf	i2CANsendMessage@identifier,w,c
 19394  011FA4  6E46               	movwf	i2CANsendMessage@tamp,c
 19395  011FA6  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19396  011FA8  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19397  011FAA  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19398                           
 19399                           ; BSR set to: 15
 19400                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 19401  011FAC  C046  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 19402                           
 19403                           ; BSR set to: 15
 19404                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 19405  011FB0  0E00               	movlw	0
 19406  011FB2  143A               	andwf	i2CANsendMessage@identifier,w,c
 19407  011FB4  6E46               	movwf	i2CANsendMessage@tamp,c
 19408  011FB6  0EFF               	movlw	255
 19409  011FB8  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 19410  011FBA  6E47               	movwf	i2CANsendMessage@tamp+1,c
 19411  011FBC  0E00               	movlw	0
 19412  011FBE  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 19413  011FC0  6E48               	movwf	i2CANsendMessage@tamp+2,c
 19414  011FC2  0E00               	movlw	0
 19415  011FC4  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 19416  011FC6  6E49               	movwf	i2CANsendMessage@tamp+3,c
 19417                           
 19418                           ; BSR set to: 15
 19419                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 19420  011FC8  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19421  011FCC  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19422  011FD0  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19423  011FD4  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19424  011FD8  C043  F042         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19425  011FDC  C044  F043         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19426  011FE0  C045  F044         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19427  011FE4  6A45               	clrf	??i2_CANsendMessage+3,c
 19428  011FE6  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19429  011FEA  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19430  011FEE  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19431  011FF2  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19432                           
 19433                           ; BSR set to: 15
 19434                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 19435  011FF6  C046  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 19436                           
 19437                           ; BSR set to: 15
 19438                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 19439  011FFA  0E00               	movlw	0
 19440  011FFC  010F               	movlb	15	; () banked
 19441  011FFE  6F22               	movwf	34,b	;volatile
 19442                           
 19443                           ; BSR set to: 15
 19444                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 19445  012000  010F               	movlb	15	; () banked
 19446  012002  8722               	bsf	34,3,b	;volatile
 19447                           
 19448                           ; BSR set to: 15
 19449                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 19450  012004  A03C               	btfss	i2CANsendMessage@identifier+2,0,c
 19451  012006  D002               	goto	i2l408
 19452                           
 19453                           ; BSR set to: 15
 19454                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 19455  012008  010F               	movlb	15	; () banked
 19456  01200A  8122               	bsf	34,0,b	;volatile
 19457  01200C                     i2l408:
 19458                           
 19459                           ; BSR set to: 15
 19460                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 19461  01200C  A23C               	btfss	i2CANsendMessage@identifier+2,1,c
 19462  01200E  D002               	goto	i2l409
 19463                           
 19464                           ; BSR set to: 15
 19465                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 19466  012010  010F               	movlb	15	; () banked
 19467  012012  8322               	bsf	34,1,b	;volatile
 19468  012014                     i2l409:
 19469                           
 19470                           ; BSR set to: 15
 19471                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 19472  012014  A43C               	btfss	i2CANsendMessage@identifier+2,2,c
 19473  012016  D002               	goto	i2l410
 19474                           
 19475                           ; BSR set to: 15
 19476                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 19477  012018  010F               	movlb	15	; () banked
 19478  01201A  8B22               	bsf	34,5,b	;volatile
 19479  01201C                     i2l410:
 19480                           
 19481                           ; BSR set to: 15
 19482                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 19483  01201C  A63C               	btfss	i2CANsendMessage@identifier+2,3,c
 19484  01201E  D002               	goto	i2l411
 19485                           
 19486                           ; BSR set to: 15
 19487                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 19488  012020  010F               	movlb	15	; () banked
 19489  012022  8D22               	bsf	34,6,b	;volatile
 19490  012024                     i2l411:
 19491                           
 19492                           ; BSR set to: 15
 19493                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 19494  012024  A83C               	btfss	i2CANsendMessage@identifier+2,4,c
 19495  012026  D002               	goto	i2l7236
 19496                           
 19497                           ; BSR set to: 15
 19498                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 19499  012028  010F               	movlb	15	; () banked
 19500  01202A  8F22               	bsf	34,7,b	;volatile
 19501  01202C                     i2l7236:
 19502                           
 19503                           ; BSR set to: 15
 19504                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 19505  01202C  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19506  012030  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19507  012034  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19508  012038  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19509  01203C  0E16               	movlw	22
 19510  01203E  D005               	goto	i2u938_40
 19511  012040                     i2u938_45:
 19512  012040  90D8               	bcf	status,0,c
 19513  012042  3245               	rrcf	??i2_CANsendMessage+3,f,c
 19514  012044  3244               	rrcf	??i2_CANsendMessage+2,f,c
 19515  012046  3243               	rrcf	??i2_CANsendMessage+1,f,c
 19516  012048  3242               	rrcf	??i2_CANsendMessage,f,c
 19517  01204A                     i2u938_40:
 19518  01204A  2EE8               	decfsz	wreg,f,c
 19519  01204C  D7F9               	goto	i2u938_45
 19520  01204E  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19521  012052  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19522  012056  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19523  01205A  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19524                           
 19525                           ; BSR set to: 15
 19526                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 19527  01205E  5046               	movf	i2CANsendMessage@tamp,w,c
 19528  012060  6E46               	movwf	i2CANsendMessage@tamp,c
 19529  012062  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19530  012064  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19531  012066  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19532                           
 19533                           ; BSR set to: 15
 19534                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 19535  012068  C046  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 19536                           
 19537                           ;inc\CANlib.h: 483: }
 19538  01206C  D04D               	goto	i2l7256
 19539  01206E                     i2l407:
 19540                           
 19541                           ; BSR set to: 15
 19542                           ;inc\CANlib.h: 485: else
 19543                           ;inc\CANlib.h: 487: {
 19544                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 19545  01206E  010F               	movlb	15	; () banked
 19546  012070  9722               	bcf	34,3,b	;volatile
 19547                           
 19548                           ; BSR set to: 15
 19549                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 19550  012072  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19551  012076  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19552  01207A  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19553  01207E  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19554  012082  0E04               	movlw	4
 19555  012084  D005               	goto	i2u939_40
 19556  012086                     i2u939_45:
 19557  012086  90D8               	bcf	status,0,c
 19558  012088  3245               	rrcf	??i2_CANsendMessage+3,f,c
 19559  01208A  3244               	rrcf	??i2_CANsendMessage+2,f,c
 19560  01208C  3243               	rrcf	??i2_CANsendMessage+1,f,c
 19561  01208E  3242               	rrcf	??i2_CANsendMessage,f,c
 19562  012090                     i2u939_40:
 19563  012090  2EE8               	decfsz	wreg,f,c
 19564  012092  D7F9               	goto	i2u939_45
 19565  012094  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19566  012098  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19567  01209C  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19568  0120A0  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19569                           
 19570                           ; BSR set to: 15
 19571                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 19572  0120A4  5046               	movf	i2CANsendMessage@tamp,w,c
 19573  0120A6  6E46               	movwf	i2CANsendMessage@tamp,c
 19574  0120A8  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19575  0120AA  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19576  0120AC  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19577                           
 19578                           ; BSR set to: 15
 19579                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 19580  0120AE  C046  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 19581                           
 19582                           ; BSR set to: 15
 19583                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 19584  0120B2  0E07               	movlw	7
 19585  0120B4  143A               	andwf	i2CANsendMessage@identifier,w,c
 19586  0120B6  6E46               	movwf	i2CANsendMessage@tamp,c
 19587  0120B8  0E00               	movlw	0
 19588  0120BA  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 19589  0120BC  6E47               	movwf	i2CANsendMessage@tamp+1,c
 19590  0120BE  0E00               	movlw	0
 19591  0120C0  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 19592  0120C2  6E48               	movwf	i2CANsendMessage@tamp+2,c
 19593  0120C4  0E00               	movlw	0
 19594  0120C6  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 19595  0120C8  6E49               	movwf	i2CANsendMessage@tamp+3,c
 19596                           
 19597                           ; BSR set to: 15
 19598                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 19599  0120CA  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19600  0120CE  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19601  0120D2  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19602  0120D6  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19603  0120DA  0E05               	movlw	5
 19604  0120DC                     i2u940_45:
 19605  0120DC  90D8               	bcf	status,0,c
 19606  0120DE  3642               	rlcf	??i2_CANsendMessage,f,c
 19607  0120E0  3643               	rlcf	??i2_CANsendMessage+1,f,c
 19608  0120E2  3644               	rlcf	??i2_CANsendMessage+2,f,c
 19609  0120E4  3645               	rlcf	??i2_CANsendMessage+3,f,c
 19610  0120E6  2EE8               	decfsz	wreg,f,c
 19611  0120E8  D7F9               	goto	i2u940_45
 19612  0120EA  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19613  0120EE  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19614  0120F2  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19615  0120F6  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19616                           
 19617                           ; BSR set to: 15
 19618                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 19619  0120FA  010F               	movlb	15	; () banked
 19620  0120FC  5122               	movf	34,w,b	;volatile
 19621  0120FE  0B1F               	andlw	31
 19622  012100  010F               	movlb	15	; () banked
 19623  012102  6F22               	movwf	34,b	;volatile
 19624                           
 19625                           ; BSR set to: 15
 19626                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 19627  012104  C046  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 19628  012108                     i2l7256:
 19629                           
 19630                           ; BSR set to: 15
 19631                           ;inc\CANlib.h: 498: }
 19632                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 19633  012108  A041               	btfss	i2CANsendMessage@flags,0,c
 19634  01210A  D003               	goto	i2l414
 19635                           
 19636                           ; BSR set to: 15
 19637                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 19638  01210C  010F               	movlb	15	; () banked
 19639  01210E  8120               	bsf	32,0,b	;volatile
 19640  012110  D002               	goto	i2l415
 19641  012112                     i2l414:
 19642                           
 19643                           ; BSR set to: 15
 19644                           ;inc\CANlib.h: 502: else
 19645                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 19646  012112  010F               	movlb	15	; () banked
 19647  012114  9120               	bcf	32,0,b	;volatile
 19648  012116                     i2l415:
 19649                           
 19650                           ; BSR set to: 15
 19651                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 19652  012116  A241               	btfss	i2CANsendMessage@flags,1,c
 19653  012118  D003               	goto	i2l416
 19654                           
 19655                           ; BSR set to: 15
 19656                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 19657  01211A  010F               	movlb	15	; () banked
 19658  01211C  8320               	bsf	32,1,b	;volatile
 19659  01211E  D002               	goto	i2l7262
 19660  012120                     i2l416:
 19661                           
 19662                           ; BSR set to: 15
 19663                           ;inc\CANlib.h: 506: else
 19664                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 19665  012120  010F               	movlb	15	; () banked
 19666  012122  9320               	bcf	32,1,b	;volatile
 19667  012124                     i2l7262:
 19668                           
 19669                           ; BSR set to: 15
 19670                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 19671  012124  C03E  FFD9         	movff	i2CANsendMessage@data,fsr2l
 19672  012128  C03F  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 19673  01212C  50DF               	movf	indf2,w,c
 19674  01212E  010F               	movlb	15	; () banked
 19675  012130  6F26               	movwf	38,b	;volatile
 19676                           
 19677                           ; BSR set to: 15
 19678                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 19679  012132  EE20 F001          	lfsr	2,1
 19680  012136  503E               	movf	i2CANsendMessage@data,w,c
 19681  012138  26D9               	addwf	fsr2l,f,c
 19682  01213A  503F               	movf	i2CANsendMessage@data+1,w,c
 19683  01213C  22DA               	addwfc	fsr2h,f,c
 19684  01213E  50DF               	movf	indf2,w,c
 19685  012140  010F               	movlb	15	; () banked
 19686  012142  6F27               	movwf	39,b	;volatile
 19687                           
 19688                           ; BSR set to: 15
 19689                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 19690  012144  EE20 F002          	lfsr	2,2
 19691  012148  503E               	movf	i2CANsendMessage@data,w,c
 19692  01214A  26D9               	addwf	fsr2l,f,c
 19693  01214C  503F               	movf	i2CANsendMessage@data+1,w,c
 19694  01214E  22DA               	addwfc	fsr2h,f,c
 19695  012150  50DF               	movf	indf2,w,c
 19696  012152  010F               	movlb	15	; () banked
 19697  012154  6F28               	movwf	40,b	;volatile
 19698                           
 19699                           ; BSR set to: 15
 19700                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 19701  012156  EE20 F003          	lfsr	2,3
 19702  01215A  503E               	movf	i2CANsendMessage@data,w,c
 19703  01215C  26D9               	addwf	fsr2l,f,c
 19704  01215E  503F               	movf	i2CANsendMessage@data+1,w,c
 19705  012160  22DA               	addwfc	fsr2h,f,c
 19706  012162  50DF               	movf	indf2,w,c
 19707  012164  010F               	movlb	15	; () banked
 19708  012166  6F29               	movwf	41,b	;volatile
 19709                           
 19710                           ; BSR set to: 15
 19711                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 19712  012168  EE20 F004          	lfsr	2,4
 19713  01216C  503E               	movf	i2CANsendMessage@data,w,c
 19714  01216E  26D9               	addwf	fsr2l,f,c
 19715  012170  503F               	movf	i2CANsendMessage@data+1,w,c
 19716  012172  22DA               	addwfc	fsr2h,f,c
 19717  012174  50DF               	movf	indf2,w,c
 19718  012176  010F               	movlb	15	; () banked
 19719  012178  6F2A               	movwf	42,b	;volatile
 19720                           
 19721                           ; BSR set to: 15
 19722                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 19723  01217A  EE20 F005          	lfsr	2,5
 19724  01217E  503E               	movf	i2CANsendMessage@data,w,c
 19725  012180  26D9               	addwf	fsr2l,f,c
 19726  012182  503F               	movf	i2CANsendMessage@data+1,w,c
 19727  012184  22DA               	addwfc	fsr2h,f,c
 19728  012186  50DF               	movf	indf2,w,c
 19729  012188  010F               	movlb	15	; () banked
 19730  01218A  6F2B               	movwf	43,b	;volatile
 19731                           
 19732                           ; BSR set to: 15
 19733                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 19734  01218C  EE20 F006          	lfsr	2,6
 19735  012190  503E               	movf	i2CANsendMessage@data,w,c
 19736  012192  26D9               	addwf	fsr2l,f,c
 19737  012194  503F               	movf	i2CANsendMessage@data+1,w,c
 19738  012196  22DA               	addwfc	fsr2h,f,c
 19739  012198  50DF               	movf	indf2,w,c
 19740  01219A  010F               	movlb	15	; () banked
 19741  01219C  6F2C               	movwf	44,b	;volatile
 19742                           
 19743                           ; BSR set to: 15
 19744                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 19745  01219E  EE20 F007          	lfsr	2,7
 19746  0121A2  503E               	movf	i2CANsendMessage@data,w,c
 19747  0121A4  26D9               	addwf	fsr2l,f,c
 19748  0121A6  503F               	movf	i2CANsendMessage@data+1,w,c
 19749  0121A8  22DA               	addwfc	fsr2h,f,c
 19750  0121AA  50DF               	movf	indf2,w,c
 19751  0121AC  010F               	movlb	15	; () banked
 19752  0121AE  6F2D               	movwf	45,b	;volatile
 19753                           
 19754                           ; BSR set to: 15
 19755                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 19756  0121B0  010F               	movlb	15	; () banked
 19757  0121B2  8720               	bsf	32,3,b	;volatile
 19758                           
 19759                           ; BSR set to: 15
 19760                           ;inc\CANlib.h: 520: return;
 19761  0121B4  0012               	return	
 19762  0121B6                     __end_ofi2_CANsendMessage:
 19763                           	opt stack 0
 19764                           pclatu	equ	0xFFB
 19765                           pclath	equ	0xFFA
 19766                           tblptru	equ	0xFF8
 19767                           tblptrh	equ	0xFF7
 19768                           tblptrl	equ	0xFF6
 19769                           tablat	equ	0xFF5
 19770                           prodh	equ	0xFF4
 19771                           prodl	equ	0xFF3
 19772                           intcon	equ	0xFF2
 19773                           postinc0	equ	0xFEE
 19774                           fsr0h	equ	0xFEA
 19775                           fsr0l	equ	0xFE9
 19776                           wreg	equ	0xFE8
 19777                           indf1	equ	0xFE7
 19778                           plusw1	equ	0xFE3
 19779                           fsr1h	equ	0xFE2
 19780                           fsr1l	equ	0xFE1
 19781                           bsr	equ	0xFE0
 19782                           indf2	equ	0xFDF
 19783                           postinc2	equ	0xFDE
 19784                           plusw2	equ	0xFDB
 19785                           fsr2h	equ	0xFDA
 19786                           fsr2l	equ	0xFD9
 19787                           status	equ	0xFD8
 19788                           
 19789 ;; *************** function i2_CANisTxReady *****************
 19790 ;; Defined at:
 19791 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 19792 ;; Parameters:    Size  Location     Type
 19793 ;;		None
 19794 ;; Auto vars:     Size  Location     Type
 19795 ;;		None
 19796 ;; Return value:  Size  Location     Type
 19797 ;;                  1    wreg      unsigned char 
 19798 ;; Registers used:
 19799 ;;		wreg, status,2
 19800 ;; Tracked objects:
 19801 ;;		On entry : 0/0
 19802 ;;		On exit  : 0/0
 19803 ;;		Unchanged: 0/0
 19804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19808 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19809 ;;Total ram usage:        1 bytes
 19810 ;; Hardware stack levels used:    1
 19811 ;; This function calls:
 19812 ;;		Nothing
 19813 ;; This function is called by:
 19814 ;;		_ISR_alta
 19815 ;; This function uses a non-reentrant model
 19816 ;;
 19817                           
 19818                           	psect	text55
 19819  0160D4                     __ptext55:
 19820                           	opt stack 0
 19821  0160D4                     i2_CANisTxReady:
 19822                           	opt stack 20
 19823                           
 19824                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 19825                           
 19826                           ; BSR set to: 15
 19827                           ;incstack = 0
 19828  0160D4  0E01               	movlw	1
 19829  0160D6  6E3A               	movwf	i2_CANisTxReady$3235,c
 19830  0160D8  010F               	movlb	15	; () banked
 19831  0160DA  A740               	btfss	64,3,b	;volatile
 19832  0160DC  D008               	goto	i2l568
 19833                           
 19834                           ; BSR set to: 15
 19835  0160DE  010F               	movlb	15	; () banked
 19836  0160E0  A730               	btfss	48,3,b	;volatile
 19837  0160E2  D005               	goto	i2l568
 19838                           
 19839                           ; BSR set to: 15
 19840  0160E4  010F               	movlb	15	; () banked
 19841  0160E6  A720               	btfss	32,3,b	;volatile
 19842  0160E8  D002               	goto	i2l568
 19843                           
 19844                           ; BSR set to: 15
 19845  0160EA  0E00               	movlw	0
 19846  0160EC  6E3A               	movwf	i2_CANisTxReady$3235,c
 19847  0160EE                     i2l568:
 19848                           
 19849                           ; BSR set to: 15
 19850  0160EE  503A               	movf	i2_CANisTxReady$3235,w,c
 19851  0160F0  0012               	return	
 19852  0160F2                     __end_ofi2_CANisTxReady:
 19853                           	opt stack 0
 19854                           pclatu	equ	0xFFB
 19855                           pclath	equ	0xFFA
 19856                           tblptru	equ	0xFF8
 19857                           tblptrh	equ	0xFF7
 19858                           tblptrl	equ	0xFF6
 19859                           tablat	equ	0xFF5
 19860                           prodh	equ	0xFF4
 19861                           prodl	equ	0xFF3
 19862                           intcon	equ	0xFF2
 19863                           postinc0	equ	0xFEE
 19864                           fsr0h	equ	0xFEA
 19865                           fsr0l	equ	0xFE9
 19866                           wreg	equ	0xFE8
 19867                           indf1	equ	0xFE7
 19868                           plusw1	equ	0xFE3
 19869                           fsr1h	equ	0xFE2
 19870                           fsr1l	equ	0xFE1
 19871                           bsr	equ	0xFE0
 19872                           indf2	equ	0xFDF
 19873                           postinc2	equ	0xFDE
 19874                           plusw2	equ	0xFDB
 19875                           fsr2h	equ	0xFDA
 19876                           fsr2l	equ	0xFD9
 19877                           status	equ	0xFD8
 19878                           
 19879 ;; *************** function _CANreceiveMessage *****************
 19880 ;; Defined at:
 19881 ;;		line 528 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 19882 ;; Parameters:    Size  Location     Type
 19883 ;;  msg             2   17[COMRAM] PTR struct .
 19884 ;;		 -> msg(15), 
 19885 ;; Auto vars:     Size  Location     Type
 19886 ;;  tamp            1   28[COMRAM] unsigned char 
 19887 ;;  error           1   27[COMRAM] unsigned char 
 19888 ;; Return value:  Size  Location     Type
 19889 ;;                  1    wreg      unsigned char 
 19890 ;; Registers used:
 19891 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19892 ;; Tracked objects:
 19893 ;;		On entry : 0/0
 19894 ;;		On exit  : 0/0
 19895 ;;		Unchanged: 0/0
 19896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19899 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19900 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19901 ;;Total ram usage:       12 bytes
 19902 ;; Hardware stack levels used:    1
 19903 ;; This function calls:
 19904 ;;		Nothing
 19905 ;; This function is called by:
 19906 ;;		_ISR_alta
 19907 ;; This function uses a non-reentrant model
 19908 ;;
 19909                           
 19910                           	psect	text56
 19911  012D12                     __ptext56:
 19912                           	opt stack 0
 19913  012D12                     _CANreceiveMessage:
 19914                           	opt stack 20
 19915                           
 19916                           ;inc\CANlib.h: 530: BYTE tamp;
 19917                           ;inc\CANlib.h: 531: BYTE error = 0;
 19918                           
 19919                           ; BSR set to: 15
 19920                           ;incstack = 0
 19921  012D12  0E00               	movlw	0
 19922  012D14  6E44               	movwf	CANreceiveMessage@error,c
 19923                           
 19924                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 19925  012D16  BE74               	btfsc	3956,7,c	;volatile
 19926                           
 19927                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 19928  012D18  8044               	bsf	CANreceiveMessage@error,0,c
 19929                           
 19930                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 19931  012D1A  BC74               	btfsc	3956,6,c	;volatile
 19932                           
 19933                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 19934  012D1C  8244               	bsf	CANreceiveMessage@error,1,c
 19935                           
 19936                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 19937  012D1E  010F               	movlb	15	; () banked
 19938  012D20  AF50               	btfss	80,7,b	;volatile
 19939  012D22  D143               	goto	i2l422
 19940                           
 19941                           ; BSR set to: 15
 19942                           ;inc\CANlib.h: 541: {
 19943                           ;inc\CANlib.h: 542: msg->identifier = 0;
 19944  012D24  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19945  012D28  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19946  012D2C  6ADE               	clrf	postinc2,c
 19947  012D2E  6ADE               	clrf	postinc2,c
 19948  012D30  6ADE               	clrf	postinc2,c
 19949  012D32  6ADD               	clrf	postdec2,c
 19950                           
 19951                           ; BSR set to: 15
 19952                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 19953  012D34  EE20 F004          	lfsr	2,4
 19954  012D38  503A               	movf	CANreceiveMessage@msg,w,c
 19955  012D3A  26D9               	addwf	fsr2l,f,c
 19956  012D3C  503B               	movf	CANreceiveMessage@msg+1,w,c
 19957  012D3E  22DA               	addwfc	fsr2h,f,c
 19958  012D40  CF56 FFDF          	movff	3926,indf2	;volatile
 19959                           
 19960                           ; BSR set to: 15
 19961                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 19962  012D44  EE20 F005          	lfsr	2,5
 19963  012D48  503A               	movf	CANreceiveMessage@msg,w,c
 19964  012D4A  26D9               	addwf	fsr2l,f,c
 19965  012D4C  503B               	movf	CANreceiveMessage@msg+1,w,c
 19966  012D4E  22DA               	addwfc	fsr2h,f,c
 19967  012D50  CF57 FFDF          	movff	3927,indf2	;volatile
 19968                           
 19969                           ; BSR set to: 15
 19970                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 19971  012D54  EE20 F006          	lfsr	2,6
 19972  012D58  503A               	movf	CANreceiveMessage@msg,w,c
 19973  012D5A  26D9               	addwf	fsr2l,f,c
 19974  012D5C  503B               	movf	CANreceiveMessage@msg+1,w,c
 19975  012D5E  22DA               	addwfc	fsr2h,f,c
 19976  012D60  CF58 FFDF          	movff	3928,indf2	;volatile
 19977                           
 19978                           ; BSR set to: 15
 19979                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 19980  012D64  EE20 F007          	lfsr	2,7
 19981  012D68  503A               	movf	CANreceiveMessage@msg,w,c
 19982  012D6A  26D9               	addwf	fsr2l,f,c
 19983  012D6C  503B               	movf	CANreceiveMessage@msg+1,w,c
 19984  012D6E  22DA               	addwfc	fsr2h,f,c
 19985  012D70  CF59 FFDF          	movff	3929,indf2	;volatile
 19986                           
 19987                           ; BSR set to: 15
 19988                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 19989  012D74  EE20 F008          	lfsr	2,8
 19990  012D78  503A               	movf	CANreceiveMessage@msg,w,c
 19991  012D7A  26D9               	addwf	fsr2l,f,c
 19992  012D7C  503B               	movf	CANreceiveMessage@msg+1,w,c
 19993  012D7E  22DA               	addwfc	fsr2h,f,c
 19994  012D80  CF5A FFDF          	movff	3930,indf2	;volatile
 19995                           
 19996                           ; BSR set to: 15
 19997                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 19998  012D84  EE20 F009          	lfsr	2,9
 19999  012D88  503A               	movf	CANreceiveMessage@msg,w,c
 20000  012D8A  26D9               	addwf	fsr2l,f,c
 20001  012D8C  503B               	movf	CANreceiveMessage@msg+1,w,c
 20002  012D8E  22DA               	addwfc	fsr2h,f,c
 20003  012D90  CF5B FFDF          	movff	3931,indf2	;volatile
 20004                           
 20005                           ; BSR set to: 15
 20006                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 20007  012D94  EE20 F00A          	lfsr	2,10
 20008  012D98  503A               	movf	CANreceiveMessage@msg,w,c
 20009  012D9A  26D9               	addwf	fsr2l,f,c
 20010  012D9C  503B               	movf	CANreceiveMessage@msg+1,w,c
 20011  012D9E  22DA               	addwfc	fsr2h,f,c
 20012  012DA0  CF5C FFDF          	movff	3932,indf2	;volatile
 20013                           
 20014                           ; BSR set to: 15
 20015                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 20016  012DA4  EE20 F00B          	lfsr	2,11
 20017  012DA8  503A               	movf	CANreceiveMessage@msg,w,c
 20018  012DAA  26D9               	addwf	fsr2l,f,c
 20019  012DAC  503B               	movf	CANreceiveMessage@msg+1,w,c
 20020  012DAE  22DA               	addwfc	fsr2h,f,c
 20021  012DB0  CF5D FFDF          	movff	3933,indf2	;volatile
 20022                           
 20023                           ; BSR set to: 15
 20024                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 20025  012DB4  EE20 F00E          	lfsr	2,14
 20026  012DB8  503A               	movf	CANreceiveMessage@msg,w,c
 20027  012DBA  26D9               	addwf	fsr2l,f,c
 20028  012DBC  503B               	movf	CANreceiveMessage@msg+1,w,c
 20029  012DBE  22DA               	addwfc	fsr2h,f,c
 20030  012DC0  010F               	movlb	15	; () banked
 20031  012DC2  AD55               	btfss	85,6,b	;volatile
 20032  012DC4  D002               	goto	i2u845_40
 20033  012DC6  0E01               	movlw	1
 20034  012DC8  D001               	goto	i2u845_46
 20035  012DCA                     i2u845_40:
 20036  012DCA  0E00               	movlw	0
 20037  012DCC                     i2u845_46:
 20038  012DCC  6EDF               	movwf	indf2,c
 20039                           
 20040                           ; BSR set to: 15
 20041                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 20042  012DCE  EE20 F00D          	lfsr	2,13
 20043  012DD2  503A               	movf	CANreceiveMessage@msg,w,c
 20044  012DD4  26D9               	addwf	fsr2l,f,c
 20045  012DD6  503B               	movf	CANreceiveMessage@msg+1,w,c
 20046  012DD8  22DA               	addwfc	fsr2h,f,c
 20047  012DDA  010F               	movlb	15	; () banked
 20048  012DDC  5155               	movf	85,w,b	;volatile
 20049  012DDE  0B0F               	andlw	15
 20050  012DE0  6EDF               	movwf	indf2,c
 20051                           
 20052                           ; BSR set to: 15
 20053                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 20054  012DE2  EE20 F00C          	lfsr	2,12
 20055  012DE6  503A               	movf	CANreceiveMessage@msg,w,c
 20056  012DE8  26D9               	addwf	fsr2l,f,c
 20057  012DEA  503B               	movf	CANreceiveMessage@msg+1,w,c
 20058  012DEC  22DA               	addwfc	fsr2h,f,c
 20059  012DEE  010F               	movlb	15	; () banked
 20060  012DF0  A752               	btfss	82,3,b	;volatile
 20061  012DF2  D002               	goto	i2u846_40
 20062  012DF4  0E01               	movlw	1
 20063  012DF6  D001               	goto	i2u846_46
 20064  012DF8                     i2u846_40:
 20065  012DF8  0E00               	movlw	0
 20066  012DFA                     i2u846_46:
 20067  012DFA  6EDF               	movwf	indf2,c
 20068                           
 20069                           ; BSR set to: 15
 20070                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 20071  012DFC  010F               	movlb	15	; () banked
 20072  012DFE  B752               	btfsc	82,3,b	;volatile
 20073  012E00  D044               	goto	i2l6730
 20074                           
 20075                           ; BSR set to: 15
 20076                           ;inc\CANlib.h: 559: {
 20077                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 20078  012E02  CF51 F03C          	movff	3921,??_CANreceiveMessage	;volatile
 20079  012E06  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20080  012E08  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20081  012E0A  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20082  012E0C  0E03               	movlw	3
 20083  012E0E                     i2u848_45:
 20084  012E0E  90D8               	bcf	status,0,c
 20085  012E10  363C               	rlcf	??_CANreceiveMessage,f,c
 20086  012E12  363D               	rlcf	??_CANreceiveMessage+1,f,c
 20087  012E14  363E               	rlcf	??_CANreceiveMessage+2,f,c
 20088  012E16  363F               	rlcf	??_CANreceiveMessage+3,f,c
 20089  012E18  2EE8               	decfsz	wreg,f,c
 20090  012E1A  D7F9               	goto	i2u848_45
 20091  012E1C  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20092  012E20  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20093  012E24  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 20094  012E28  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20095  012E2C  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20096  012E30  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20097                           
 20098                           ; BSR set to: 15
 20099                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 20100  012E34  010F               	movlb	15	; () banked
 20101  012E36  3952               	swapf	82,w,b	;volatile
 20102  012E38  42E8               	rrncf	wreg,f,c
 20103  012E3A  0B07               	andlw	7
 20104  012E3C  0B07               	andlw	7
 20105  012E3E  6E45               	movwf	CANreceiveMessage@tamp,c
 20106                           
 20107                           ; BSR set to: 15
 20108                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 20109  012E40  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20110  012E44  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20111  012E48  CFDE F03C          	movff	postinc2,??_CANreceiveMessage
 20112  012E4C  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+1
 20113  012E50  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+2
 20114  012E54  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+3
 20115  012E58  5045               	movf	CANreceiveMessage@tamp,w,c
 20116  012E5A  243C               	addwf	??_CANreceiveMessage,w,c
 20117  012E5C  6E40               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 20118  012E5E  0E00               	movlw	0
 20119  012E60  203D               	addwfc	??_CANreceiveMessage+1,w,c
 20120  012E62  6E41               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 20121  012E64  0E00               	movlw	0
 20122  012E66  203E               	addwfc	??_CANreceiveMessage+2,w,c
 20123  012E68  6E42               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 20124  012E6A  0E00               	movlw	0
 20125  012E6C  203F               	addwfc	??_CANreceiveMessage+3,w,c
 20126  012E6E  6E43               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 20127  012E70  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20128  012E74  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20129  012E78  C040  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 20130  012E7C  C041  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 20131  012E80  C042  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 20132  012E84  C043  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 20133                           
 20134                           ;inc\CANlib.h: 563: }
 20135  012E88  D08D               	goto	i2l6756
 20136  012E8A                     i2l6730:
 20137                           
 20138                           ; BSR set to: 15
 20139                           ;inc\CANlib.h: 564: else
 20140                           ;inc\CANlib.h: 565: {
 20141                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 20142  012E8A  CF54 F03C          	movff	3924,??_CANreceiveMessage	;volatile
 20143  012E8E  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20144  012E90  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20145  012E92  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20146  012E94  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20147  012E98  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20148  012E9C  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 20149  012EA0  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20150  012EA4  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20151  012EA8  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20152                           
 20153                           ; BSR set to: 15
 20154                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 20155  012EAC  CF53 F03C          	movff	3923,??_CANreceiveMessage	;volatile
 20156  012EB0  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20157  012EB2  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20158  012EB4  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20159  012EB6  C03E  F03F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 20160  012EBA  C03D  F03E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 20161  012EBE  C03C  F03D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 20162  012EC2  6A3C               	clrf	??_CANreceiveMessage,c
 20163  012EC4  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20164  012EC8  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20165  012ECC  503C               	movf	??_CANreceiveMessage,w,c
 20166  012ECE  26DE               	addwf	postinc2,f,c
 20167  012ED0  503D               	movf	??_CANreceiveMessage+1,w,c
 20168  012ED2  22DE               	addwfc	postinc2,f,c
 20169  012ED4  503E               	movf	??_CANreceiveMessage+2,w,c
 20170  012ED6  22DE               	addwfc	postinc2,f,c
 20171  012ED8  503F               	movf	??_CANreceiveMessage+3,w,c
 20172  012EDA  22DE               	addwfc	postinc2,f,c
 20173                           
 20174                           ; BSR set to: 15
 20175                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 20176  012EDC  010F               	movlb	15	; () banked
 20177  012EDE  A152               	btfss	82,0,b	;volatile
 20178  012EE0  D00C               	goto	i2l6738
 20179                           
 20180                           ; BSR set to: 15
 20181                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 20182  012EE2  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20183  012EE6  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20184  012EEA  0E00               	movlw	0
 20185  012EEC  12DE               	iorwf	postinc2,f,c
 20186  012EEE  0E00               	movlw	0
 20187  012EF0  12DE               	iorwf	postinc2,f,c
 20188  012EF2  0E01               	movlw	1
 20189  012EF4  12DE               	iorwf	postinc2,f,c
 20190  012EF6  0E00               	movlw	0
 20191  012EF8  12DE               	iorwf	postinc2,f,c
 20192  012EFA                     i2l6738:
 20193                           
 20194                           ; BSR set to: 15
 20195                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 20196  012EFA  010F               	movlb	15	; () banked
 20197  012EFC  A352               	btfss	82,1,b	;volatile
 20198  012EFE  D00C               	goto	i2l6742
 20199                           
 20200                           ; BSR set to: 15
 20201                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 20202  012F00  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20203  012F04  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20204  012F08  0E00               	movlw	0
 20205  012F0A  12DE               	iorwf	postinc2,f,c
 20206  012F0C  0E00               	movlw	0
 20207  012F0E  12DE               	iorwf	postinc2,f,c
 20208  012F10  0E02               	movlw	2
 20209  012F12  12DE               	iorwf	postinc2,f,c
 20210  012F14  0E00               	movlw	0
 20211  012F16  12DE               	iorwf	postinc2,f,c
 20212  012F18                     i2l6742:
 20213                           
 20214                           ; BSR set to: 15
 20215                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 20216  012F18  010F               	movlb	15	; () banked
 20217  012F1A  AB52               	btfss	82,5,b	;volatile
 20218  012F1C  D00C               	goto	i2l6746
 20219                           
 20220                           ; BSR set to: 15
 20221                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 20222  012F1E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20223  012F22  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20224  012F26  0E00               	movlw	0
 20225  012F28  12DE               	iorwf	postinc2,f,c
 20226  012F2A  0E00               	movlw	0
 20227  012F2C  12DE               	iorwf	postinc2,f,c
 20228  012F2E  0E04               	movlw	4
 20229  012F30  12DE               	iorwf	postinc2,f,c
 20230  012F32  0E00               	movlw	0
 20231  012F34  12DE               	iorwf	postinc2,f,c
 20232  012F36                     i2l6746:
 20233                           
 20234                           ; BSR set to: 15
 20235                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 20236  012F36  010F               	movlb	15	; () banked
 20237  012F38  AD52               	btfss	82,6,b	;volatile
 20238  012F3A  D00C               	goto	i2l6750
 20239                           
 20240                           ; BSR set to: 15
 20241                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 20242  012F3C  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20243  012F40  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20244  012F44  0E00               	movlw	0
 20245  012F46  12DE               	iorwf	postinc2,f,c
 20246  012F48  0E00               	movlw	0
 20247  012F4A  12DE               	iorwf	postinc2,f,c
 20248  012F4C  0E08               	movlw	8
 20249  012F4E  12DE               	iorwf	postinc2,f,c
 20250  012F50  0E00               	movlw	0
 20251  012F52  12DE               	iorwf	postinc2,f,c
 20252  012F54                     i2l6750:
 20253                           
 20254                           ; BSR set to: 15
 20255                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 20256  012F54  010F               	movlb	15	; () banked
 20257  012F56  AF52               	btfss	82,7,b	;volatile
 20258  012F58  D00C               	goto	i2l6754
 20259                           
 20260                           ; BSR set to: 15
 20261                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 20262  012F5A  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20263  012F5E  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20264  012F62  0E00               	movlw	0
 20265  012F64  12DE               	iorwf	postinc2,f,c
 20266  012F66  0E00               	movlw	0
 20267  012F68  12DE               	iorwf	postinc2,f,c
 20268  012F6A  0E10               	movlw	16
 20269  012F6C  12DE               	iorwf	postinc2,f,c
 20270  012F6E  0E00               	movlw	0
 20271  012F70  12DE               	iorwf	postinc2,f,c
 20272  012F72                     i2l6754:
 20273                           
 20274                           ; BSR set to: 15
 20275                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 20276  012F72  CF51 F03C          	movff	3921,??_CANreceiveMessage	;volatile
 20277  012F76  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20278  012F78  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20279  012F7A  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20280  012F7C  0E15               	movlw	21
 20281  012F7E                     i2u854_45:
 20282  012F7E  90D8               	bcf	status,0,c
 20283  012F80  363C               	rlcf	??_CANreceiveMessage,f,c
 20284  012F82  363D               	rlcf	??_CANreceiveMessage+1,f,c
 20285  012F84  363E               	rlcf	??_CANreceiveMessage+2,f,c
 20286  012F86  363F               	rlcf	??_CANreceiveMessage+3,f,c
 20287  012F88  2EE8               	decfsz	wreg,f,c
 20288  012F8A  D7F9               	goto	i2u854_45
 20289  012F8C  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20290  012F90  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20291  012F94  503C               	movf	??_CANreceiveMessage,w,c
 20292  012F96  12DE               	iorwf	postinc2,f,c
 20293  012F98  503D               	movf	??_CANreceiveMessage+1,w,c
 20294  012F9A  12DE               	iorwf	postinc2,f,c
 20295  012F9C  503E               	movf	??_CANreceiveMessage+2,w,c
 20296  012F9E  12DE               	iorwf	postinc2,f,c
 20297  012FA0  503F               	movf	??_CANreceiveMessage+3,w,c
 20298  012FA2  12DE               	iorwf	postinc2,f,c
 20299  012FA4                     i2l6756:
 20300                           
 20301                           ; BSR set to: 15
 20302                           ;inc\CANlib.h: 581: }
 20303                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 20304  012FA4  010F               	movlb	15	; () banked
 20305  012FA6  9F50               	bcf	80,7,b	;volatile
 20306                           
 20307                           ; BSR set to: 15
 20308                           ;inc\CANlib.h: 584: return (error);
 20309                           ;	Return value of _CANreceiveMessage is never used
 20310  012FA8  0012               	return	
 20311  012FAA                     i2l422:
 20312                           
 20313                           ; BSR set to: 15
 20314                           ;inc\CANlib.h: 585: }
 20315                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 20316  012FAA  AE60               	btfss	3936,7,c	;volatile
 20317  012FAC  0012               	return	
 20318                           
 20319                           ; BSR set to: 15
 20320                           ;inc\CANlib.h: 588: {
 20321                           ;inc\CANlib.h: 589: msg->identifier = 0;
 20322  012FAE  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20323  012FB2  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20324  012FB6  6ADE               	clrf	postinc2,c
 20325  012FB8  6ADE               	clrf	postinc2,c
 20326  012FBA  6ADE               	clrf	postinc2,c
 20327  012FBC  6ADD               	clrf	postdec2,c
 20328                           
 20329                           ; BSR set to: 15
 20330                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 20331  012FBE  EE20 F004          	lfsr	2,4
 20332  012FC2  503A               	movf	CANreceiveMessage@msg,w,c
 20333  012FC4  26D9               	addwf	fsr2l,f,c
 20334  012FC6  503B               	movf	CANreceiveMessage@msg+1,w,c
 20335  012FC8  22DA               	addwfc	fsr2h,f,c
 20336  012FCA  CF66 FFDF          	movff	3942,indf2	;volatile
 20337                           
 20338                           ; BSR set to: 15
 20339                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 20340  012FCE  EE20 F005          	lfsr	2,5
 20341  012FD2  503A               	movf	CANreceiveMessage@msg,w,c
 20342  012FD4  26D9               	addwf	fsr2l,f,c
 20343  012FD6  503B               	movf	CANreceiveMessage@msg+1,w,c
 20344  012FD8  22DA               	addwfc	fsr2h,f,c
 20345  012FDA  CF67 FFDF          	movff	3943,indf2	;volatile
 20346                           
 20347                           ; BSR set to: 15
 20348                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 20349  012FDE  EE20 F006          	lfsr	2,6
 20350  012FE2  503A               	movf	CANreceiveMessage@msg,w,c
 20351  012FE4  26D9               	addwf	fsr2l,f,c
 20352  012FE6  503B               	movf	CANreceiveMessage@msg+1,w,c
 20353  012FE8  22DA               	addwfc	fsr2h,f,c
 20354  012FEA  CF68 FFDF          	movff	3944,indf2	;volatile
 20355                           
 20356                           ; BSR set to: 15
 20357                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 20358  012FEE  EE20 F007          	lfsr	2,7
 20359  012FF2  503A               	movf	CANreceiveMessage@msg,w,c
 20360  012FF4  26D9               	addwf	fsr2l,f,c
 20361  012FF6  503B               	movf	CANreceiveMessage@msg+1,w,c
 20362  012FF8  22DA               	addwfc	fsr2h,f,c
 20363  012FFA  CF69 FFDF          	movff	3945,indf2	;volatile
 20364                           
 20365                           ; BSR set to: 15
 20366                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 20367  012FFE  EE20 F008          	lfsr	2,8
 20368  013002  503A               	movf	CANreceiveMessage@msg,w,c
 20369  013004  26D9               	addwf	fsr2l,f,c
 20370  013006  503B               	movf	CANreceiveMessage@msg+1,w,c
 20371  013008  22DA               	addwfc	fsr2h,f,c
 20372  01300A  CF6A FFDF          	movff	3946,indf2	;volatile
 20373                           
 20374                           ; BSR set to: 15
 20375                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 20376  01300E  EE20 F009          	lfsr	2,9
 20377  013012  503A               	movf	CANreceiveMessage@msg,w,c
 20378  013014  26D9               	addwf	fsr2l,f,c
 20379  013016  503B               	movf	CANreceiveMessage@msg+1,w,c
 20380  013018  22DA               	addwfc	fsr2h,f,c
 20381  01301A  CF6B FFDF          	movff	3947,indf2	;volatile
 20382                           
 20383                           ; BSR set to: 15
 20384                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 20385  01301E  EE20 F00A          	lfsr	2,10
 20386  013022  503A               	movf	CANreceiveMessage@msg,w,c
 20387  013024  26D9               	addwf	fsr2l,f,c
 20388  013026  503B               	movf	CANreceiveMessage@msg+1,w,c
 20389  013028  22DA               	addwfc	fsr2h,f,c
 20390  01302A  CF6C FFDF          	movff	3948,indf2	;volatile
 20391                           
 20392                           ; BSR set to: 15
 20393                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 20394  01302E  EE20 F00B          	lfsr	2,11
 20395  013032  503A               	movf	CANreceiveMessage@msg,w,c
 20396  013034  26D9               	addwf	fsr2l,f,c
 20397  013036  503B               	movf	CANreceiveMessage@msg+1,w,c
 20398  013038  22DA               	addwfc	fsr2h,f,c
 20399  01303A  CF6D FFDF          	movff	3949,indf2	;volatile
 20400                           
 20401                           ; BSR set to: 15
 20402                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 20403  01303E  EE20 F00E          	lfsr	2,14
 20404  013042  503A               	movf	CANreceiveMessage@msg,w,c
 20405  013044  26D9               	addwf	fsr2l,f,c
 20406  013046  503B               	movf	CANreceiveMessage@msg+1,w,c
 20407  013048  22DA               	addwfc	fsr2h,f,c
 20408  01304A  AC65               	btfss	3941,6,c	;volatile
 20409  01304C  D002               	goto	i2u856_40
 20410  01304E  0E01               	movlw	1
 20411  013050  D001               	goto	i2u856_46
 20412  013052                     i2u856_40:
 20413  013052  0E00               	movlw	0
 20414  013054                     i2u856_46:
 20415  013054  6EDF               	movwf	indf2,c
 20416                           
 20417                           ; BSR set to: 15
 20418                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 20419  013056  EE20 F00D          	lfsr	2,13
 20420  01305A  503A               	movf	CANreceiveMessage@msg,w,c
 20421  01305C  26D9               	addwf	fsr2l,f,c
 20422  01305E  503B               	movf	CANreceiveMessage@msg+1,w,c
 20423  013060  22DA               	addwfc	fsr2h,f,c
 20424  013062  5065               	movf	3941,w,c	;volatile
 20425  013064  0B0F               	andlw	15
 20426  013066  6EDF               	movwf	indf2,c
 20427                           
 20428                           ; BSR set to: 15
 20429                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 20430  013068  EE20 F00C          	lfsr	2,12
 20431  01306C  503A               	movf	CANreceiveMessage@msg,w,c
 20432  01306E  26D9               	addwf	fsr2l,f,c
 20433  013070  503B               	movf	CANreceiveMessage@msg+1,w,c
 20434  013072  22DA               	addwfc	fsr2h,f,c
 20435  013074  A662               	btfss	3938,3,c	;volatile
 20436  013076  D002               	goto	i2u857_40
 20437  013078  0E01               	movlw	1
 20438  01307A  D001               	goto	i2u857_46
 20439  01307C                     i2u857_40:
 20440  01307C  0E00               	movlw	0
 20441  01307E                     i2u857_46:
 20442  01307E  6EDF               	movwf	indf2,c
 20443                           
 20444                           ; BSR set to: 15
 20445                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 20446  013080  B662               	btfsc	3938,3,c	;volatile
 20447  013082  D043               	goto	i2l6792
 20448                           
 20449                           ; BSR set to: 15
 20450                           ;inc\CANlib.h: 606: {
 20451                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 20452  013084  CF61 F03C          	movff	3937,??_CANreceiveMessage	;volatile
 20453  013088  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20454  01308A  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20455  01308C  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20456  01308E  0E03               	movlw	3
 20457  013090                     i2u859_45:
 20458  013090  90D8               	bcf	status,0,c
 20459  013092  363C               	rlcf	??_CANreceiveMessage,f,c
 20460  013094  363D               	rlcf	??_CANreceiveMessage+1,f,c
 20461  013096  363E               	rlcf	??_CANreceiveMessage+2,f,c
 20462  013098  363F               	rlcf	??_CANreceiveMessage+3,f,c
 20463  01309A  2EE8               	decfsz	wreg,f,c
 20464  01309C  D7F9               	goto	i2u859_45
 20465  01309E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20466  0130A2  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20467  0130A6  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 20468  0130AA  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20469  0130AE  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20470  0130B2  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20471                           
 20472                           ; BSR set to: 15
 20473                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 20474  0130B6  3862               	swapf	3938,w,c	;volatile
 20475  0130B8  42E8               	rrncf	wreg,f,c
 20476  0130BA  0B07               	andlw	7
 20477  0130BC  0B07               	andlw	7
 20478  0130BE  6E45               	movwf	CANreceiveMessage@tamp,c
 20479                           
 20480                           ; BSR set to: 15
 20481                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 20482  0130C0  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20483  0130C4  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20484  0130C8  CFDE F03C          	movff	postinc2,??_CANreceiveMessage
 20485  0130CC  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+1
 20486  0130D0  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+2
 20487  0130D4  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+3
 20488  0130D8  5045               	movf	CANreceiveMessage@tamp,w,c
 20489  0130DA  243C               	addwf	??_CANreceiveMessage,w,c
 20490  0130DC  6E40               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 20491  0130DE  0E00               	movlw	0
 20492  0130E0  203D               	addwfc	??_CANreceiveMessage+1,w,c
 20493  0130E2  6E41               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 20494  0130E4  0E00               	movlw	0
 20495  0130E6  203E               	addwfc	??_CANreceiveMessage+2,w,c
 20496  0130E8  6E42               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 20497  0130EA  0E00               	movlw	0
 20498  0130EC  203F               	addwfc	??_CANreceiveMessage+3,w,c
 20499  0130EE  6E43               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 20500  0130F0  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20501  0130F4  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20502  0130F8  C040  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 20503  0130FC  C041  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 20504  013100  C042  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 20505  013104  C043  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 20506                           
 20507                           ;inc\CANlib.h: 610: }
 20508  013108  D088               	goto	i2l6818
 20509  01310A                     i2l6792:
 20510                           
 20511                           ; BSR set to: 15
 20512                           ;inc\CANlib.h: 611: else
 20513                           ;inc\CANlib.h: 612: {
 20514                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 20515  01310A  CF64 F03C          	movff	3940,??_CANreceiveMessage	;volatile
 20516  01310E  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20517  013110  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20518  013112  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20519  013114  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20520  013118  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20521  01311C  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 20522  013120  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20523  013124  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20524  013128  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20525                           
 20526                           ; BSR set to: 15
 20527                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 20528  01312C  CF63 F03C          	movff	3939,??_CANreceiveMessage	;volatile
 20529  013130  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20530  013132  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20531  013134  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20532  013136  C03E  F03F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 20533  01313A  C03D  F03E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 20534  01313E  C03C  F03D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 20535  013142  6A3C               	clrf	??_CANreceiveMessage,c
 20536  013144  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20537  013148  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20538  01314C  503C               	movf	??_CANreceiveMessage,w,c
 20539  01314E  26DE               	addwf	postinc2,f,c
 20540  013150  503D               	movf	??_CANreceiveMessage+1,w,c
 20541  013152  22DE               	addwfc	postinc2,f,c
 20542  013154  503E               	movf	??_CANreceiveMessage+2,w,c
 20543  013156  22DE               	addwfc	postinc2,f,c
 20544  013158  503F               	movf	??_CANreceiveMessage+3,w,c
 20545  01315A  22DE               	addwfc	postinc2,f,c
 20546                           
 20547                           ; BSR set to: 15
 20548                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 20549  01315C  A062               	btfss	3938,0,c	;volatile
 20550  01315E  D00C               	goto	i2l6800
 20551                           
 20552                           ; BSR set to: 15
 20553                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 20554  013160  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20555  013164  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20556  013168  0E00               	movlw	0
 20557  01316A  12DE               	iorwf	postinc2,f,c
 20558  01316C  0E00               	movlw	0
 20559  01316E  12DE               	iorwf	postinc2,f,c
 20560  013170  0E01               	movlw	1
 20561  013172  12DE               	iorwf	postinc2,f,c
 20562  013174  0E00               	movlw	0
 20563  013176  12DE               	iorwf	postinc2,f,c
 20564  013178                     i2l6800:
 20565                           
 20566                           ; BSR set to: 15
 20567                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 20568  013178  A262               	btfss	3938,1,c	;volatile
 20569  01317A  D00C               	goto	i2l6804
 20570                           
 20571                           ; BSR set to: 15
 20572                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 20573  01317C  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20574  013180  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20575  013184  0E00               	movlw	0
 20576  013186  12DE               	iorwf	postinc2,f,c
 20577  013188  0E00               	movlw	0
 20578  01318A  12DE               	iorwf	postinc2,f,c
 20579  01318C  0E02               	movlw	2
 20580  01318E  12DE               	iorwf	postinc2,f,c
 20581  013190  0E00               	movlw	0
 20582  013192  12DE               	iorwf	postinc2,f,c
 20583  013194                     i2l6804:
 20584                           
 20585                           ; BSR set to: 15
 20586                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 20587  013194  AA62               	btfss	3938,5,c	;volatile
 20588  013196  D00C               	goto	i2l6808
 20589                           
 20590                           ; BSR set to: 15
 20591                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 20592  013198  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20593  01319C  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20594  0131A0  0E00               	movlw	0
 20595  0131A2  12DE               	iorwf	postinc2,f,c
 20596  0131A4  0E00               	movlw	0
 20597  0131A6  12DE               	iorwf	postinc2,f,c
 20598  0131A8  0E04               	movlw	4
 20599  0131AA  12DE               	iorwf	postinc2,f,c
 20600  0131AC  0E00               	movlw	0
 20601  0131AE  12DE               	iorwf	postinc2,f,c
 20602  0131B0                     i2l6808:
 20603                           
 20604                           ; BSR set to: 15
 20605                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 20606  0131B0  AC62               	btfss	3938,6,c	;volatile
 20607  0131B2  D00C               	goto	i2l6812
 20608                           
 20609                           ; BSR set to: 15
 20610                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 20611  0131B4  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20612  0131B8  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20613  0131BC  0E00               	movlw	0
 20614  0131BE  12DE               	iorwf	postinc2,f,c
 20615  0131C0  0E00               	movlw	0
 20616  0131C2  12DE               	iorwf	postinc2,f,c
 20617  0131C4  0E08               	movlw	8
 20618  0131C6  12DE               	iorwf	postinc2,f,c
 20619  0131C8  0E00               	movlw	0
 20620  0131CA  12DE               	iorwf	postinc2,f,c
 20621  0131CC                     i2l6812:
 20622                           
 20623                           ; BSR set to: 15
 20624                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 20625  0131CC  AE62               	btfss	3938,7,c	;volatile
 20626  0131CE  D00C               	goto	i2l6816
 20627                           
 20628                           ; BSR set to: 15
 20629                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 20630  0131D0  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20631  0131D4  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20632  0131D8  0E00               	movlw	0
 20633  0131DA  12DE               	iorwf	postinc2,f,c
 20634  0131DC  0E00               	movlw	0
 20635  0131DE  12DE               	iorwf	postinc2,f,c
 20636  0131E0  0E10               	movlw	16
 20637  0131E2  12DE               	iorwf	postinc2,f,c
 20638  0131E4  0E00               	movlw	0
 20639  0131E6  12DE               	iorwf	postinc2,f,c
 20640  0131E8                     i2l6816:
 20641                           
 20642                           ; BSR set to: 15
 20643                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 20644  0131E8  CF61 F03C          	movff	3937,??_CANreceiveMessage	;volatile
 20645  0131EC  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20646  0131EE  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20647  0131F0  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20648  0131F2  0E15               	movlw	21
 20649  0131F4                     i2u865_45:
 20650  0131F4  90D8               	bcf	status,0,c
 20651  0131F6  363C               	rlcf	??_CANreceiveMessage,f,c
 20652  0131F8  363D               	rlcf	??_CANreceiveMessage+1,f,c
 20653  0131FA  363E               	rlcf	??_CANreceiveMessage+2,f,c
 20654  0131FC  363F               	rlcf	??_CANreceiveMessage+3,f,c
 20655  0131FE  2EE8               	decfsz	wreg,f,c
 20656  013200  D7F9               	goto	i2u865_45
 20657  013202  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20658  013206  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20659  01320A  503C               	movf	??_CANreceiveMessage,w,c
 20660  01320C  12DE               	iorwf	postinc2,f,c
 20661  01320E  503D               	movf	??_CANreceiveMessage+1,w,c
 20662  013210  12DE               	iorwf	postinc2,f,c
 20663  013212  503E               	movf	??_CANreceiveMessage+2,w,c
 20664  013214  12DE               	iorwf	postinc2,f,c
 20665  013216  503F               	movf	??_CANreceiveMessage+3,w,c
 20666  013218  12DE               	iorwf	postinc2,f,c
 20667  01321A                     i2l6818:
 20668                           
 20669                           ; BSR set to: 15
 20670                           ;inc\CANlib.h: 629: }
 20671                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 20672  01321A  9E60               	bcf	3936,7,c	;volatile
 20673                           
 20674                           ; BSR set to: 15
 20675                           ;inc\CANlib.h: 632: return (error);
 20676                           ;	Return value of _CANreceiveMessage is never used
 20677  01321C  0012               	return	
 20678  01321E                     __end_of_CANreceiveMessage:
 20679                           	opt stack 0
 20680                           pclatu	equ	0xFFB
 20681                           pclath	equ	0xFFA
 20682                           tblptru	equ	0xFF8
 20683                           tblptrh	equ	0xFF7
 20684                           tblptrl	equ	0xFF6
 20685                           tablat	equ	0xFF5
 20686                           prodh	equ	0xFF4
 20687                           prodl	equ	0xFF3
 20688                           intcon	equ	0xFF2
 20689                           postinc0	equ	0xFEE
 20690                           fsr0h	equ	0xFEA
 20691                           fsr0l	equ	0xFE9
 20692                           wreg	equ	0xFE8
 20693                           indf1	equ	0xFE7
 20694                           plusw1	equ	0xFE3
 20695                           fsr1h	equ	0xFE2
 20696                           fsr1l	equ	0xFE1
 20697                           bsr	equ	0xFE0
 20698                           indf2	equ	0xFDF
 20699                           postinc2	equ	0xFDE
 20700                           postdec2	equ	0xFDD
 20701                           plusw2	equ	0xFDB
 20702                           fsr2h	equ	0xFDA
 20703                           fsr2l	equ	0xFD9
 20704                           status	equ	0xFD8
 20705                           
 20706 ;; *************** function _CANisRxReady *****************
 20707 ;; Defined at:
 20708 ;;		line 1163 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 20709 ;; Parameters:    Size  Location     Type
 20710 ;;		None
 20711 ;; Auto vars:     Size  Location     Type
 20712 ;;		None
 20713 ;; Return value:  Size  Location     Type
 20714 ;;                  1    wreg      unsigned char 
 20715 ;; Registers used:
 20716 ;;		wreg, status,2
 20717 ;; Tracked objects:
 20718 ;;		On entry : 0/0
 20719 ;;		On exit  : 0/0
 20720 ;;		Unchanged: 0/0
 20721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20726 ;;Total ram usage:        1 bytes
 20727 ;; Hardware stack levels used:    1
 20728 ;; This function calls:
 20729 ;;		Nothing
 20730 ;; This function is called by:
 20731 ;;		_ISR_alta
 20732 ;; This function uses a non-reentrant model
 20733 ;;
 20734                           
 20735                           	psect	text57
 20736  016178                     __ptext57:
 20737                           	opt stack 0
 20738  016178                     _CANisRxReady:
 20739                           	opt stack 20
 20740                           
 20741                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 20742                           
 20743                           ; BSR set to: 15
 20744                           ;incstack = 0
 20745  016178  0E01               	movlw	1
 20746  01617A  6E3A               	movwf	_CANisRxReady$3237,c
 20747  01617C  BE60               	btfsc	3936,7,c	;volatile
 20748  01617E  D005               	goto	i2l573
 20749  016180  010F               	movlb	15	; () banked
 20750  016182  BF50               	btfsc	80,7,b	;volatile
 20751  016184  D002               	goto	i2l573
 20752                           
 20753                           ; BSR set to: 15
 20754  016186  0E00               	movlw	0
 20755  016188  6E3A               	movwf	_CANisRxReady$3237,c
 20756  01618A                     i2l573:
 20757  01618A  503A               	movf	_CANisRxReady$3237,w,c
 20758  01618C  0012               	return	
 20759  01618E                     __end_of_CANisRxReady:
 20760                           	opt stack 0
 20761                           pclatu	equ	0xFFB
 20762                           pclath	equ	0xFFA
 20763                           tblptru	equ	0xFF8
 20764                           tblptrh	equ	0xFF7
 20765                           tblptrl	equ	0xFF6
 20766                           tablat	equ	0xFF5
 20767                           prodh	equ	0xFF4
 20768                           prodl	equ	0xFF3
 20769                           intcon	equ	0xFF2
 20770                           postinc0	equ	0xFEE
 20771                           fsr0h	equ	0xFEA
 20772                           fsr0l	equ	0xFE9
 20773                           wreg	equ	0xFE8
 20774                           indf1	equ	0xFE7
 20775                           plusw1	equ	0xFE3
 20776                           fsr1h	equ	0xFE2
 20777                           fsr1l	equ	0xFE1
 20778                           bsr	equ	0xFE0
 20779                           indf2	equ	0xFDF
 20780                           postinc2	equ	0xFDE
 20781                           postdec2	equ	0xFDD
 20782                           plusw2	equ	0xFDB
 20783                           fsr2h	equ	0xFDA
 20784                           fsr2l	equ	0xFD9
 20785                           status	equ	0xFD8
 20786                           pclatu	equ	0xFFB
 20787                           pclath	equ	0xFFA
 20788                           tblptru	equ	0xFF8
 20789                           tblptrh	equ	0xFF7
 20790                           tblptrl	equ	0xFF6
 20791                           tablat	equ	0xFF5
 20792                           prodh	equ	0xFF4
 20793                           prodl	equ	0xFF3
 20794                           intcon	equ	0xFF2
 20795                           postinc0	equ	0xFEE
 20796                           fsr0h	equ	0xFEA
 20797                           fsr0l	equ	0xFE9
 20798                           wreg	equ	0xFE8
 20799                           indf1	equ	0xFE7
 20800                           plusw1	equ	0xFE3
 20801                           fsr1h	equ	0xFE2
 20802                           fsr1l	equ	0xFE1
 20803                           bsr	equ	0xFE0
 20804                           indf2	equ	0xFDF
 20805                           postinc2	equ	0xFDE
 20806                           postdec2	equ	0xFDD
 20807                           plusw2	equ	0xFDB
 20808                           fsr2h	equ	0xFDA
 20809                           fsr2l	equ	0xFD9
 20810                           status	equ	0xFD8
 20811                           
 20812                           	psect	rparam
 20813  0000                     pclatu	equ	0xFFB
 20814                           pclath	equ	0xFFA
 20815                           tblptru	equ	0xFF8
 20816                           tblptrh	equ	0xFF7
 20817                           tblptrl	equ	0xFF6
 20818                           tablat	equ	0xFF5
 20819                           prodh	equ	0xFF4
 20820                           prodl	equ	0xFF3
 20821                           intcon	equ	0xFF2
 20822                           postinc0	equ	0xFEE
 20823                           fsr0h	equ	0xFEA
 20824                           fsr0l	equ	0xFE9
 20825                           wreg	equ	0xFE8
 20826                           indf1	equ	0xFE7
 20827                           plusw1	equ	0xFE3
 20828                           fsr1h	equ	0xFE2
 20829                           fsr1l	equ	0xFE1
 20830                           bsr	equ	0xFE0
 20831                           indf2	equ	0xFDF
 20832                           postinc2	equ	0xFDE
 20833                           postdec2	equ	0xFDD
 20834                           plusw2	equ	0xFDB
 20835                           fsr2h	equ	0xFDA
 20836                           fsr2l	equ	0xFD9
 20837                           status	equ	0xFD8
 20838                           
 20839                           	psect	temp
 20840  00004D                     btemp:
 20841                           	opt stack 0
 20842  00004D                     	ds	1
 20843  0000                     int$flags	set	btemp
 20844                           pclatu	equ	0xFFB
 20845                           pclath	equ	0xFFA
 20846                           tblptru	equ	0xFF8
 20847                           tblptrh	equ	0xFF7
 20848                           tblptrl	equ	0xFF6
 20849                           tablat	equ	0xFF5
 20850                           prodh	equ	0xFF4
 20851                           prodl	equ	0xFF3
 20852                           intcon	equ	0xFF2
 20853                           postinc0	equ	0xFEE
 20854                           fsr0h	equ	0xFEA
 20855                           fsr0l	equ	0xFE9
 20856                           wreg	equ	0xFE8
 20857                           indf1	equ	0xFE7
 20858                           plusw1	equ	0xFE3
 20859                           fsr1h	equ	0xFE2
 20860                           fsr1l	equ	0xFE1
 20861                           bsr	equ	0xFE0
 20862                           indf2	equ	0xFDF
 20863                           postinc2	equ	0xFDE
 20864                           postdec2	equ	0xFDD
 20865                           plusw2	equ	0xFDB
 20866                           fsr2h	equ	0xFDA
 20867                           fsr2l	equ	0xFD9
 20868                           status	equ	0xFD8


Data Sizes:
    Strings     186
    Constant    144
    Data        1
    BSS         113
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      76
    BANK0           160    108     141
    BANK1           256     33      74
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_17(CODE[8]), STR_16(CODE[8]), STR_15(CODE[8]), STR_14(CODE[8]), 
		 -> STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[7]), 
		 -> STR_9(CODE[14]), STR_8(CODE[17]), STR_7(CODE[12]), STR_6(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK0[1]), park_assist_state(BANK1[8]), data_brake(BANK0[1]), data_steering(BANK0[1]), 
		 -> data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_message->_LCD_write_char
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Send->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  261982
                                             25 BANK1      8     8      0
                           _CAN_Send
                    _CAN_interpreter
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                        _LCD_Handler
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             30 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             16 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             16 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  143589
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41624
                                             98 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             55 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             16 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             55 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             30 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             22 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             16 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             16 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                             16 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             16 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             16 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             88 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             88 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             68 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             55 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             16 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             30 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   10597
                                             33 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12052
                                             40 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             32 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             23 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             16 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             16 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             33 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             28 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             30 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             28 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18137
                                             31 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             28 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             28 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             24 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             22 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_interpreter                                      4     4      0       0
                                             16 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Send                                             0     0      0    4107
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4083
                                             16 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           17    17      0    3558
                                             33 COMRAM     1     1      0
                                              0 BANK0     16    16      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    2243
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Send
     _CANisTxReady
     _CANsendMessage
   _CAN_interpreter
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      4A       7       28.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6C      8D       5       88.1%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     22      4C       1       80.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     123      20        0.0%
DATA                 0      0     123       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Apr 16 21:22:48 2016

                     ___fldiv@aexp 0096                       ___fldiv@bexp 0095  
                                _x 00E7                                  _y 0265  
                                _z 00E8          __size_of_delay_set_quartz 000A  
             __end_of_CANSetFilter 0B06                       ?_LCD_Handler 0029  
                     ___fldiv@sign 008A                       ___awdiv@sign 007B  
                               _id 000C                                 bsr 000FE0  
              ___wmul@multiplicand 0072                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                       __CFG_CP4$OFF 000000  
                     __CFG_CP5$OFF 000000                                l400 17EE  
                              l401 17F2                                l410 1958  
                              l402 17FE                                l411 1962  
                              l500 073A                                l405 18B8  
                              l501 0746                                l414 1A72  
                              l406 18BC                                l510 0852  
                              l502 074A                                l415 1A76  
                              l407 19B4                                l511 0856  
                              l503 0756                                l416 1A82  
                              l408 1944                                l520 0962  
                              l512 0862                                l504 075A  
                              l409 194E                                l521 096E  
                              l513 0866                                l505 0766  
                              l530 0A7A                                l522 0972  
                              l514 0872                                l450 4156  
                              l370 484A                                l531 0A7E  
                              l523 097E                                l515 0876  
                              l451 415A                                l371 4854  
                              l380 1446                                l532 0A8A  
                              l524 0982                                l516 0882  
                              l508 0842                                l460 4262  
                              l452 4166                                l444 4126  
                              l381 1450                                l533 0A8E  
                              l525 098E                                l509 0846  
                              l461 426E                                l445 412A  
                              l390 18A2                                l382 145A  
                              l534 0A9A                                l526 0992  
                              l462 4272                                l446 4136  
                              l391 1634                                l375 161E  
                              l535 0A9E                                l527 099E  
                              l519 095E                                l463 427E  
                              l455 423E                                l447 413A  
                              l392 1638                                l376 13B0  
                              l536 0AAA                                l480 0514  
                              l456 4242                                l448 4146  
                              l393 1730                                l385 156A  
                              l377 13B4                                l537 0AAE  
                              l481 0520                                l457 424E  
                              l449 414A                                l394 16C0  
                              l386 156E                                l378 14AC  
                              l538 0ABA                                l490 062A  
                              l482 0524                                l458 4252  
                              l395 16CA                                l387 157A  
                              l379 143C                                l491 062E  
                              l483 0530                                l475 04F0  
                              l459 425E                                l396 16D4  
                              l492 063A                                l476 04F4  
                              l397 16DE                                l581 5F2A  
                              l493 063E                                l477 0500  
                              l494 064A                                l486 060A  
                              l478 0504                                l487 060E  
                              l479 0510                                l568 60AC  
                              l488 061A                                l497 0726  
                              l489 061E                                l498 072A  
                              l499 0736                                l872 614E  
                              l865 60FA                                l785 233A  
                              l970 10FA                                l795 2460  
                              l884 5D60                                l886 5D62  
                              l879 6132               ??_PWR_Button_Polling 0070  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                      ?_LCD_cursor 007C                                _dir 00E4  
                              _msg 0106                                _str 0115  
                     ___awmod@sign 0075                                prod 000FF3  
                              wreg 000FE8                       ___flmul@aexp 008B  
                     ___flmul@bexp 0090                       ___flmul@sign 008A  
                     ___flmul@temp 0095                       ___flmul@prod 0091  
                     __CFG_LVP$OFF 000000             __size_of_LCD_goto_line 00EC  
                     ___fltol@exp1 00C1                       __CFG_WDT$OFF 000000  
                             l1205 4FA0                               l1441 5CE4  
                             l1362 57B2                               l1451 5D46  
                             l1195 5166                               l1508 3606  
                             l1604 4712                               l1292 4D8A  
                             l1541 3D42                               l1605 472A  
                             l1293 4DCE                               l1538 3D9A  
                             l1482 33FE                               l1547 3DD2  
                             l1483 33F2                               l1299 4E4E  
                             l1484 33BE                               l1388 588A  
                             l1549 3E40                               l1398 5BCE  
                             l1590 460A                               l1575 3A16  
                             l1568 377A                               l1585 3B28  
                             l1577 3A84                               l6010 4860  
                             l1499 3572                               l5132 572A  
                             l6012 48A4                               l6004 4842  
                             l1597 46B6                               l5142 576C  
                             l5222 416A                               l6006 4858  
                             l6202 196C                               l6050 1464  
                             l5162 616A                               l5402 057A  
                             l5314 0230                               l5332 02EA  
                             l5228 41B0                               l5180 3FE4  
                             l6222 1A66                               l6126 16E8  
                             l6070 155E                               l5430 064E  
                             l5350 03A4                               l5254 4282  
                             l6152 1802                               l8000 5AE4  
                             l5504 08CC                               l6146 17E2  
                             l5610 5E62                               l8002 5AF0  
                             l6228 1A86                               l6076 157E  
                             l8004 5AF6                               l8012 5B28  
                             l5532 09A2                               l5436 0694  
                             l5196 409A                               l8030 557E  
                             l8022 5DB0                               l4670 5CA0  
                             l8102 2C0E                               l5470 07B0  
                             l5278 00BE                               l8032 55B0  
                             l4680 5CD6                               l4672 5CA6  
                             l8016 5B3C                               l8008 5B1A  
                             l8120 605E                               l5464 076A  
                             l5368 045E                               l5296 0176  
                             l9000 2484                               l8034 55E2  
                             l8026 5DE2                               l8042 606A  
                             l4690 5D0E                               l8130 4CFC  
                             l5538 09E8                               l8036 5614  
                             l4668 5C94                               l4692 5D14  
                             l8108 2CE0                               l5396 0534  
                             l8038 5646                               l8046 607E  
                             l6630 3D96                               l6606 3C98  
                             l8310 5540                               l8302 5514  
                             l8230 5130                               l8214 50E4  
                             l8206 5090                               l8070 4568  
                             l8062 4470                               l5566 0ABE  
                             l9030 2512                               l4696 5D38  
                             l4688 5D02                               l6624 3D4E  
                             l6616 3D16                               l8312 554A  
                             l8136 4D36                               l9008 2498  
                             l9016 24DC                               l6642 3DE6  
                             l6562 3BAE                               l8250 4EAE  
                             l8330 5824                               l8226 511C  
                             l8170 4E18                               l8090 2A5A  
                             l5498 0886                               l9042 2556  
                             l9018 24E4                               l8420 49B2  
                             l8404 5FA8                               l6652 3E3A  
                             l6636 3DBC                               l6556 3B8A  
                             l7700 33D8                               l7620 3260  
                             l8316 5566                               l8308 5530  
                             l8236 514C                               l8084 2988  
                             l8500 0B66                               l9052 2678  
                             l8430 4A4A                               l6670 3EF4  
                             l6662 3E90                               l6582 3C0C  
                             l6566 3BB8                               l8254 4EFC  
                             l7614 323C                               l8326 580E  
                             l8350 5B78                               l8238 515C  
                             l8166 4E04                               l8094 2A8C  
                             l8510 0BDA                               l9062 2706  
                             l9038 2552                               l8440 4B02  
                             l8408 5FC2                               l6576 3BE8  
                             l8264 4FEC                               l8272 5F5E  
                             l7800 36A0                               l7704 33E2  
                             l7632 3296                               l7624 326A  
                             l8328 581E                               l8192 503C  
                             l8176 4E34                               l8504 0BB0  
                             l9056 26FC                               l6922 589C  
                             l8418 49AA                               l6666 3EBE  
                             l6586 3C16                               l8258 4F4E  
                             l7722 3460                               l7714 3422  
                             l8282 5492                               l8338 5878  
                             l8354 5BBC                               l8346 5B62  
                             l8370 4642                               l8186 5016  
                             l8178 4E44                               l8610 1004  
                             l8522 0C24                               l8514 0BE0  
                             l8506 0BCA                               l6932 58E4  
                             l8436 4A8A                               l6676 3F04  
                             l6668 3ED2                               l7724 3466  
                             l7732 3482                               l7644 32CE  
                             l8348 5B72                               l8372 464A  
                             l8364 461A                               l8620 10AE  
                             l8604 0FD0                               l8532 0C76  
                             l8516 0C0A                               l9068 277E  
                             l6942 5D56                               l7574 5F1C  
                             l6678 3F08                               l6598 3C6A  
                             l7806 36B4                               l7750 35A4  
                             l7742 3552                               l7638 32AA  
                             l8382 46F4                               l8374 465A  
                             l7822 3708                               l6936 591C  
                             l6960 5980                               l7760 35C6  
                             l7728 3470                               l7656 3302  
                             l7648 32D8                               l8384 4704  
                             l8376 4698                               l7840 3762  
                             l7824 370E                               l7816 36E4  
                             l8640 112E                               l8632 10FE  
                             l8608 0FFC                               l8560 0DB0  
                             l8800 4C70                               l6970 598E  
                             l8298 5500                               l7922 3AFA  
                             l7850 37A2                               l7842 3768  
                             l7834 373E                               l7826 3720  
                             l8626 10C8                               l8618 10A0  
                             l8562 0DC6                               l8802 4C80  
                             l7756 35BA                               l8396 477C  
                             l7932 3B48                               l7924 3B0E  
                             l7908 3A7E                               l8644 1190  
                             l8628 10DC                               l8572 0E6A  
                             l8564 0E02                               l8556 0D7E  
                             l8548 0CFA                               l8492 0B30  
                             l6982 59EC                               l7790 366E  
                             l7766 35DA                               l7686 333E  
                             l7934 3B52                               l7918 3AD4  
                             l7846 378E                               l8670 12E0  
                             l8662 12AC                               l8654 1284  
                             l8590 0F7E                               l8566 0E18  
                             l8486 0B16                               l7776 3600  
                             l7768 35E0                               l7960 56B4  
                             l8656 1292                               l8592 0F84  
                             l8576 0E9C                               l8664 12BA  
                             l7794 3690                               l7786 365C  
                             l7698 33D2                               l7962 56C0  
                             l7954 5696                               l8682 1364  
                             l8674 1308                               l8586 0F06  
                             l8762 4B14                               l8914 21E0  
                             l7980 5718                               l7972 56F6  
                             l7964 56C6                               l7948 5680  
                             l7892 3A00                               l8684 136A  
                             l7798 369C                               l8678 1338  
                             l8686 138C                               l8790 4C30  
                             l7976 5704                               l7992 5AC0  
                             l8960 232A                               l7898 3A2A  
                             l8970 2354                               l8954 2310  
                             l7996 5AD0                               l8948 227A  
                             l8798 4C5E                               l8982 237E  
                             l8990 23C0                               l8958 2322  
                             STR_1 FF84                               l8968 2348  
                             STR_2 FF5A                               STR_3 FF45  
                             STR_4 FF84                               STR_5 FFFA  
                             STR_6 FF6F                               STR_7 FFB8  
                             STR_8 FF99                               STR_9 FFAA  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                               u6100 00F2  
                             u6030 42A2                               u6105 00E6  
                             u6115 0152                               u6035 4296  
                             u6220 0320                               u6140 01AC  
                             u6060 003A                               u6225 0314  
                             u6145 01A0                               u6065 002E  
                             u6235 0380                               u6155 020C  
                             u6075 009A                               u6260 03DA  
                             u6180 0266                               u6510 078A  
                             u6430 066E                               u6350 0554  
                             u6265 03CE                               u6185 025A  
                             u6515 077E                               u6435 0662  
                             u6355 0548                               u6275 043A  
                             u6195 02C6                               u5820 3F60  
                _F2_Button_Polling 612A                               u5825 3F54  
                             u7450 1484                               u5835 3FC0  
                             u7460 14D0                               u5860 4016  
                             u7605 17B4                               u7710 198C  
                             u6750 0ADE                               u6670 09C2  
                             u6590 08A6                               u5950 418A  
                             u7455 1478                               u7720 19D8  
                             u7465 14C4                               u5865 400A  
                             u7715 1980                               u7475 1530  
                             u6755 0AD2                               u6675 09B6  
                             u6595 089A                               u5955 417E  
                             u5875 4076                               u7580 1708  
                             u7725 19CC                               u7590 1754  
                             u8390 3EA4                               u8710 6108  
                             u7735 1A38                               u7585 16FC  
                             u8810 6140                               u7595 1748  
                             u8725 610A                               u8760 615C  
                             u8825 6142                               u8775 615E  
                             u8880 5D84                               u9905 5EEA  
                             u9906 5EEC                               u9915 5EF6  
                             u9916 5EF8                               u8886 5D86  
                             u9885 5ED2                               u9886 5ED4  
                             u9895 5EDE                               u9896 5EE0  
              __size_of_CANSetMask 039E                       ?_LCD_goto_xy 007F  
                             _data 0028                               _main 21B6  
                             _itoa 5E38                 ?_F2_Button_Polling 0029  
        __size_of_LCD_send_command 003A                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               btemp 004D  
                             _utoa 5722                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 00C0                      __CFG_IESO$OFF 000000  
                  ___fldiv@new_exp 008F                 __size_of_LCD_clear 0032  
                 __end_of_CAN_Send 5956                       _sprintf$4220 0129  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
              ??_F2_Button_Polling 0070           __end_of_LCD_enable_pulse 60D4  
                 _CANOperationMode 6162                    _space_available 0261  
          __size_of_LCD_initialize 016E         __size_of_CANreceiveMessage 050C  
                    ___fltol@sign1 00C0                    __end_of___fladd 36C6  
                            ?_main 0029                    __end_of___fldiv 3F2C  
                            ?_itoa 0080                    __end_of___awdiv 5722  
                  __end_of___flneg 5F70                              STR_10 FFE4  
                            STR_11 FFF0                              STR_12 FFF5  
                            STR_13 FFEB                              STR_14 FFC4  
                            STR_15 FFD4                              STR_16 FFCC  
                            STR_17 FFDC                    __end_of___awmod 5B46  
                  __end_of___flmul 3B6C                    __end_of___flsub 5E38  
                  __end_of___fltol 5578                              u10010 3388  
                  __end_of___lldiv 589C                              u10020 33A0  
                            u10030 33A2                              ?_utoa 0077  
                            u12040 276A                              u12050 27E2  
                  ___awdiv@divisor 0078                              u10470 3AE8  
                            u10390 39A2                              u11191 495E  
                  __end_of___llmod 5BE0                              u12067 5F1E  
                            u10731 4CD8                              u10395 3996  
                            u10751 4D12                              u11480 10F2  
                            u11820 22DE                              u11910 2424  
                            u11830 22F6                              u10960 54B2  
                            _T3CON 000FB1                              u11930 2440  
                            u11940 246A                              u11836 22F8  
                            u10965 54A6                              u11936 2442  
                            u11946 246C                    __end_of___lwdiv 5CEE  
                  __end_of___lwmod 5D50                              i2l400 1EE2  
                            i2l401 1EE6                              i2l410 201C  
                            i2l402 1EF0                              i2l411 2024  
                            i2l405 1F9A                              i2l422 2FAA  
                            i2l414 2112                              i2l406 1F9E  
                            i2l415 2116                              i2l407 206E  
                            i2l416 2120                              i2l408 200C  
                            i2l409 2014                              i2l380 1BB4  
                            i2l381 1BBC                              i2l390 1F86  
                            i2l382 1BC4                              i2l391 1D6A  
                            i2l375 1D56                              i2l392 1D6E  
                            i2l376 1B3A                              i1l776 0078  
                            i2l393 1E3E                              i2l385 1CB2  
                            i2l377 1B3E                              i2l394 1DDC  
                            i2l386 1CB6                              i2l378 1C0E  
                            i2l395 1DE4                              i2l387 1CC0  
                            i2l379 1BAC                              i2l396 1DEC  
                            i2l573 618A                              i2l397 1DF4  
                            i2l568 60EE                              i2l772 52C2  
                  ___awdiv@counter 007A                              _TMR3H 000FB3  
                            _TMR3L 000FB2                  _CANisRxReady$3237 003A  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                    __CFG_WRT4$OFF 000000                 __size_of_ISR_bassa 00A8  
                    __CFG_WRT5$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
               CANInitialize@flags 0082                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                     __CFG_EBTR4$OFF 000000  
                 __end_of_ISR_alta 52FE                     __CFG_EBTR5$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
        __end_of_F2_Button_Polling 6146                    __end_of_dpowers FF45  
                            _scale 27F8                    __end_of_isdigit 6068  
        __size_of_LCD_shift_cursor 004C                     __pbitbssCOMRAM 0258  
             __end_of_CANisRxReady 618E                              tablat 000FF5  
             __end_of_CANisTxReady 60B2                              plusw1 000FE3  
                            plusw2 000FDB                              utoa@c 007F  
                            utoa@v 007D                              status 000FD8  
                  __end_of_sprintf 139A                __size_of_LCD_cursor 0032  
                  __initialization 5E80                       __end_of_main 27F8  
                     __end_of_itoa 5E80      __size_of_board_initialization 00A4  
                    _LCD_goto_line 5578                       __end_of_utoa 57E0  
                ?_Joystick_Polling 0029                 ??_Joystick_Polling 0070  
                ?_LCD_write_string 0081                             ??_main 0142  
                           ??_itoa 0086                             ??_utoa 007D  
        __size_ofi2_CANsendMessage 0690                      __activetblptr 000003  
                   _JoystickValues 00DC                 ??_LCD_write_string 0083  
             __size_of__tdiv_to_l_ 019E                  _CANisTxReady$3235 0070  
         __size_of_CAN_interpreter 00AA                  __end_of_LCD_clear 603E  
            i2CANsendMessage@flags 0041             LCD_write_string@buffer 0081  
                           _ADCON1 000FC1                             _CANCON 000F6F  
                 ___llmod@dividend 0070                             ?_scale 0097  
                           _ADRESH 000FC4                   ___awdiv@dividend 0076  
                  __CFG_BBSIZ$1024 000000                             i2l7110 1CC4  
                           i2l7104 1CA8                             i2l7160 1DFC  
                           i2l7236 202C                             i2l7180 1ED8  
                           i2l7084 1BCC                             i2l7262 2124  
                           i2l6800 3178                             i2l7256 2108  
                           i2l6730 2E8A                             i2l7186 1EF4  
                           i2l6812 31CC                             i2l6804 3194  
                           i2l6750 2F54                             i2l6742 2F18  
                           i2l6816 31E8                             i2l6808 31B0  
                           i2l6818 321A                             i2l6754 2F72  
                           i2l6746 2F36                             i2l6738 2EFA  
                           i2l6756 2FA4                             i2l6792 310A  
                           i2l8862 51F6                             i2l8854 51D2  
                           i2l8872 5226                             i2l8848 51B0  
                           i2l8866 51FE                             i2l8884 5260  
                           i2l8894 528C                             i2l8878 523C  
                           i2l8898 52BA                             _RXB0D0 000F66  
                           _RXB0D1 000F67                             _RXB0D2 000F68  
                           _RXB0D3 000F69                             _RXB0D4 000F6A  
                           _RXB1D0 000F56                             _RXB0D5 000F6B  
                           _RXB1D1 000F57                             _RXB0D6 000F6C  
                           _RXB1D2 000F58                             _RXB0D7 000F6D  
                           _RXB1D3 000F59                             _RXB1D4 000F5A  
                           _RXB1D5 000F5B                             _RXB1D6 000F5C  
                           _RXB1D7 000F5D                             _TXB0D0 000F46  
                           _TXB0D1 000F47                             _TXB0D2 000F48  
                           _TXB0D3 000F49                             _TXB1D0 000F36  
                           _TXB0D4 000F4A                             _TXB1D1 000F37  
                           _TXB0D5 000F4B                             _TXB1D2 000F38  
                           _TXB0D6 000F4C                             _TXB1D3 000F39  
                           _TXB0D7 000F4D                             _TXB2D0 000F26  
                           _TXB1D4 000F3A                             _TXB2D1 000F27  
                           _TXB1D5 000F3B                             _TXB2D2 000F28  
                           _TXB1D6 000F3C                             _TXB2D3 000F29  
                           _TXB1D7 000F3D                             _TXB2D4 000F2A  
                           _TXB2D5 000F2B                             _TXB2D6 000F2C  
                           _TXB2D7 000F2D                 CANsendMessage@data 0074  
               CANsendMessage@tamp 007C                   __end_of___xxtofl 478E  
                  _switch_position 00E6                   __end_of_delay_ms 5F38  
            __size_of_CANSetFilter 0B06                     __CFG_XINST$OFF 000000  
                __end_of_ISR_bassa 00C0                   __end_of__powers_ FF1D  
                       _MotoreFlag 025B                     ?_LCD_goto_line 0029  
                           ___flge 4E60                          ??___fladd 00AC  
                 _delay_set_quartz 618E                             ___wmul 5F70  
                        ??___fldiv 0086                          ??___awdiv 007A  
                        ??___flneg 009B                     __CFG_STVREN$ON 000000  
                        ??___awmod 0074                          ??___flmul 0086  
                        ??___flsub 00C0                          ??___fltol 00BC  
                        ??___lldiv 0078                          ??___llmod 0078  
                        ??___lwdiv 0074                       ??_CANSetMask 0075  
                        ??___lwmod 0074            __size_of_LCD_write_char 0096  
                           _fround 42CA     LCD_initialize@quartz_frequency 007E  
                           clear_0 5E86                             clear_1 5E92  
                           clear_2 5EA2                   ___awdiv@quotient 007C  
                  ___awmod@divisor 0072               __size_of_LCD_Handler 01AE  
                  ___awmod@counter 0074                    __CFG_BOREN$BOHW 000000  
                _JoystickConstants 00CC                             itoa@cp 0086  
                        ??_isdigit 0070                       __mediumconst FEB4  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                          ?_CAN_Send 0029  
       __size_of_F2_Button_Polling 001C                          ??_sprintf 00CA  
                     _CANSetFilter 0000                         ___flge@ff1 0070  
                       ___flge@ff2 0074                       ___xxtofl@arg 007A  
                     ___xxtofl@exp 0079                       ___xxtofl@val 0070  
                       __accesstop 0060            __end_of__initialization 5EBA  
               __end_of_CANSetMask 42CA                    __CFG_PBADEN$OFF 000000  
                       _SterzoFlag 025D                         ___flneg@f1 0097  
                 _LCD_send_command 5EC4                      ___rparam_used 000001  
LCD_write_integer@number_of_digits 008A                         ___fltol@f1 00B8  
             __size_of_LCD_goto_xy 001C                     __pcstackCOMRAM 0029  
                     __pidataBANK0 6198                          ?_ISR_alta 0029  
                     LCD_goto_xy@x 0080                       LCD_goto_xy@y 007F  
                    __end_of_scale 2D12                     _LCD_initialize 52FE  
                _LCD_write_integer 4954                  _LCD_write_message 5FA6  
            CANSetFilter@numBuffer 0079                 ?_LCD_write_integer 0088  
           LCD_write_integer@index 0097                 ?_LCD_write_message 0081  
                       __div_to_l_ 4FF0                       ??_LCD_cursor 007D  
           LCD_write_integer@value 0088      LCD_write_integer@convertedInt 0091  
                    _newMessageCan 025F                       _actual_speed 00DE  
            __size_of_CANisRxReady 0016              __size_of_CANisTxReady 0024  
                       ??_CAN_Send 0080                ??_LCD_write_integer 008C  
                  __div_to_l_@exp1 007D                ??_LCD_write_message 0083  
                  __div_to_l_@cntr 007C                            ??_scale 009B  
                 _LCD_shift_cursor 5DA4                    __div_to_l_@quot 0078  
         __end_of_CANOperationMode 6178                         __pbssBANK0 00CC  
                       __pbssBANK1 0100                  ??_CAN_interpreter 0070  
                       _data_brake 00E9            __size_of_CANsendMessage 078C  
                       _data_speed 00EA                      __div_to_l_@f1 0070  
                    __div_to_l_@f2 0074                    ??_LCD_goto_line 007C  
               __end_of_LCD_cursor 600C             __end_of_LCD_initialize 546C  
                          ?___flge 0070                            ?___wmul 0070  
                       ??_ISR_alta 0060          __end_of_LCD_write_integer 4B14  
        __end_of_LCD_write_message 5FDA                  ?_LCD_enable_pulse 0029  
                          ?_fround 0097                       _CANisRxReady 6178  
                          _CANSTAT 000F6E                 ??_LCD_enable_pulse 0078  
                     _CANisTxReady 608E                          ISR_alta@i 004A  
                          _BRGCON1 000F70                            _BRGCON2 000F71  
                          _BRGCON3 000F72                   i2_CANsendMessage 1B26  
      __size_of_PWR_Button_Polling 001C                          ?___xxtofl 0070  
          __size_ofi2_CANisTxReady 001E             __size_of_CANInitialize 01C6  
                 LCD_cursor@active 007D                          ?_delay_ms 0076  
                          _RXB0DLC 000F65                            _RXB1DLC 000F55  
                          _RXB0CON 000F60                            _RXB1CON 000F50  
                          _TXB0DLC 000F45                            _TXB1DLC 000F35  
                          _TXB2DLC 000F25                CANsendMessage@flags 0077  
                          _AbsFlag 0258                  __end_of__npowers_ FEE9  
                          __Hparam 0000                         _left_speed 0020  
                       _scale$4219 009B                            __Lparam 0000  
                 delay_ms@value_ms 0076                    ?_LCD_initialize 0029  
                  __size_of___flge 0190                            ___fladd 321E  
                          ___fldiv 3B6C                            ___awdiv 5664  
                          ___flneg 5F38                            ___awmod 5AA4  
                          ___flmul 36C6                            ___flsub 5DF0  
                          ___fltol 546C                            ___lldiv 57E0  
                  __size_of___wmul 0036                     _LCD_write_char 5BE0  
                          ___llmod 5B46                            ___lwdiv 5C76  
                          ___lwmod 5CEE               CANInitialize@propSeg 0087  
                          __pcinit 5E80                            _battery 0026  
                  __size_of_fround 02F6                            __ramtop 0D00  
              LCD_write_char@value 0080                            __ptext0 21B6  
                          __ptext1 5A00                            __ptext2 478E  
                          __ptext3 3F2C                            __ptext4 0000  
                          __ptext5 6162                            __ptext6 60F2  
                          __ptext7 4B14                            __ptext8 0B06  
                          __ptext9 27F8                        ?__div_to_l_ 0070  
                 LCD_write_char@D0 007F                   LCD_write_char@D1 007E  
                 LCD_write_char@D2 007D                   LCD_write_char@D3 007C  
                        _F1_switch 0259                            _dpowers FF1D  
                        _F2_switch 025A                            _isdigit 603E  
                       ??___xxtofl 0074                   ___awmod@dividend 0070  
                       ??_delay_ms 0078             CANreceiveMessage@error 0044  
     __end_of_board_initialization 5AA4          __size_of_Joystick_Polling 0054  
         __end_of_delay_set_quartz 6198                            _sprintf 0B06  
                   __pintcode_body 5178                          _LCD_clear 600C  
             end_of_initialization 5EBA          __size_of_LCD_write_string 0026  
                          itoa@buf 0080                            itoa@val 0082  
                          int_func 5178                          i2u1207_47 5286  
                        i2u1170_40 51D0                      _CANInitialize 478E  
                  ___lldiv@divisor 0074                 LCD_cursor@blinking 007C  
                    _parking_state 00E5                    ___lldiv@counter 007C  
           __end_of_LCD_write_char 5C76                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
       __size_of_LCD_write_integer 01C0         __size_of_LCD_write_message 0034  
                          utoa@buf 0077                     __tdiv_to_l_@f1 0070  
                   __tdiv_to_l_@f2 0074                            utoa@val 0079  
                       _wait_low_1 0262                         _wait_low_2 0263  
                       _wait_low_3 0264                          _ISR_bassa 0018  
                    ??__tdiv_to_l_ 0078                          _PORTAbits 000F80  
                        _PORTBbits 000F81                     CANSetMask@mask 0070  
                        _PORTDbits 000F83                     CANSetMask@tamp 007A  
         __end_of_LCD_send_command 5EFE                     CANSetMask@type 0074  
                      ___fladd@grs 00B7                      ___xxtofl@sign 0078  
                      ___fldiv@grs 0091                        ___fldiv@rem 008B  
                _F1_Button_Polling 6146                         ?_LCD_clear 0029  
               ?_F1_Button_Polling 0029                  __size_of_CAN_Send 00BA  
          _clock_counter_reference 00E0                        ___flmul@grs 008C  
                   _CANsendMessage 139A                   CANInitialize@BRP 0081  
                 CANInitialize@SJW 0080                     ?_CANInitialize 007E  
              ??_F1_Button_Polling 0070                __size_of__div_to_l_ 0188  
          LCD_write_integer@F17272 0100                    ?_LCD_write_char 0029  
                    ??_LCD_Handler 00CC           __end_of_LCD_shift_cursor 5DF0  
                   __end_of___flge 4FF0                         ?_ISR_bassa 0029  
                   __end_of___wmul 5FA6                  __size_of_ISR_alta 52F6  
                LCD_shift_cursor@i 007E                     __end_of_fround 45C0  
                  _CAN_interpreter 5956                     i2_CANisTxReady 60D4  
        __end_of_F1_Button_Polling 6162                start_initialization 5E80  
              __end_of__tdiv_to_l_ 4E60                CANSetMask@numBuffer 0079  
                    _data_speed_rx 0001             __end_of_CANsendMessage 1B26  
                ?_CANOperationMode 0029                      _data_steering 00EB  
                    ??_LCD_goto_xy 0080         i2CANsendMessage@dataLength 0040  
             i2CANsendMessage@data 003E                 ??_CANOperationMode 0070  
             i2CANsendMessage@tamp 0046                    ___llmod@divisor 0074  
         __end_ofi2_CANsendMessage 21B6         CANInitialize@FilterConfig1 0088  
       CANInitialize@FilterConfig2 0089                    ___llmod@counter 0078  
                         ??___flge 0078               _board_initialization 5A00  
                         ??___wmul 0074                        __pdataBANK0 00EC  
                 __CFG_LPT1OSC$OFF 000000                           ??_fround 009B  
           __end_ofi2_CANisTxReady 60F2                      sprintf@tmpval 0137  
                        ___fladd@a 00A8                          ___fladd@b 00A4  
           CANInitialize@phaseSeg1 007E             CANInitialize@phaseSeg2 007F  
                       fround@prec 00A3                __end_of_LCD_Handler 4CC2  
                        ___fldiv@a 0082                          ___fldiv@b 007E  
                        ___flmul@a 0082                          ___flmul@b 007E  
                      __pbssCOMRAM 0001                          ___flsub@a 00BC  
                        ___flsub@b 00B8                      __pcstackBANK0 0060  
                    __pcstackBANK1 0129                        _BRGCON2bits 000F71  
                      _BRGCON3bits 000F72                   _Joystick_Polling 5D50  
                __size_of___xxtofl 01CE          __size_of_LCD_enable_pulse 0022  
                     _isdigit$3800 0071         i2CANsendMessage@identifier 003A  
                _park_assist_state 0121                  __size_of_delay_ms 003A  
                      ??_LCD_clear 007C                    ?_CANsendMessage 0070  
          LCD_write_message@buffer 0081                   _LCD_write_string 6068  
                  ??_CANInitialize 0083                        sprintf@flag 012F  
                      sprintf@fval 013D                        sprintf@prec 013B  
                 ??_LCD_initialize 007E                 CANSetFilter@filter 0070  
        delay_set_quartz@frequency 0070                   ___lwdiv@dividend 0070  
               LCD_send_command@D0 007A                 LCD_send_command@D1 0079  
               LCD_send_command@D2 0078                 LCD_send_command@D3 007B  
              __end_of_LCD_goto_xy 612A              __end_of_LCD_goto_line 5664  
            ?_board_initialization 0029                          __pintcode 0008  
                    __pmediumconst FEB4                           ?___fladd 00A4  
                         ?___fldiv 007E                           ?___awdiv 0076  
                         ?___flneg 0097                           ?___awmod 0070  
                         ?___flmul 007E            __end_of_CAN_interpreter 5A00  
                         ?___flsub 00B8                           ?___fltol 00B8  
                         ?___lldiv 0070                           ?___llmod 0070  
                        __npowers_ FEB5                           ?___lwdiv 0070  
                         ?___lwmod 0070                        ??_ISR_bassa 0029  
                      __pintcodelo 0018         __end_of_PWR_Button_Polling 610E  
                  ?i2_CANisTxReady 0029                        __tdiv_to_l_ 4CC2  
                     ??__div_to_l_ 0078                        _COMSTATbits 000F74  
                         ?_isdigit 0029         __size_of_F1_Button_Polling 001C  
                         _CAN_Send 589C                   ___lwdiv@quotient 0074  
                         ?_sprintf 00C2                     __size_of_scale 051A  
                ?_delay_set_quartz 0029              CANreceiveMessage@tamp 0045  
               ??_delay_set_quartz 0070                     ___wmul@product 0074  
                         _LATCbits 000F8B                           _LATDbits 000F8C  
                         _LATEbits 000F8D                           _IPR2bits 000FA2  
     _delay_quartz_frequency_value 00EC                           _IPR3bits 000FA5  
                         _PIE2bits 000FA0                           _PIE3bits 000FA3  
               __end_of__div_to_l_ 5178                           _PIR2bits 000FA1  
                         _PIR3bits 000FA4                           i2u912_40 1BEA  
                         i2u912_45 1BE0                           i2u913_40 1C30  
                         i2u913_45 1C26                           i2u914_45 1C7C  
                         i2u940_45 20DC                           i2u845_40 2DCA  
                         i2u925_40 1E1A                           i2u925_45 1E10  
                         i2u845_46 2DCC                           i2u846_40 2DF8  
                         i2u926_40 1E60                           i2u854_45 2F7E  
                         i2u926_45 1E56                           i2u846_46 2DFA  
                         i2u927_45 1EAC                           i2u856_40 3052  
                         i2u848_45 2E0E                           i2u856_46 3054  
                         i2u857_40 307C                           _RXB0EIDH 000F63  
                         _RXB0EIDL 000F64                           i2u865_45 31F4  
                         i2u857_46 307E                           i2u938_40 204A  
                         i2u938_45 2040                           i2u939_40 2090  
                         _RXB1EIDH 000F53                          _pr_time_1 00D4  
                        _pr_time_2 00D8                           _RXB1EIDL 000F54  
                        _pr_time_3 0010                           i2u859_45 3090  
                         i2u939_45 2086                          _pr_time_4 0014  
                        _pr_time_5 0018                          _set_speed 00E2  
                         _RCONbits 000FD0                   __CFG_WDTPS$32768 000000  
                         _RXB0SIDH 000F61                           _RXB0SIDL 000F62  
                         _RXF0EIDH 000F02                           _RXB1SIDH 000F51  
                         _RXF0EIDL 000F03                           _RXB1SIDL 000F52  
                         _RXF1EIDH 000F06                           _RXF1EIDL 000F07  
                         _RXF2EIDH 000F0A                           _RXF2EIDL 000F0B  
                         _RXF3EIDH 000F0E                           _RXF3EIDL 000F0F  
                         _RXF4EIDH 000F12                           _RXF4EIDL 000F13  
                         _RXF5EIDH 000F16                           _RXF5EIDL 000F17  
                         _RXF0SIDH 000F00                           _RXF0SIDL 000F01  
                         _TXB0EIDH 000F43                           _RXF1SIDH 000F04  
                         _TXB0EIDL 000F44                           _RXF1SIDL 000F05  
                         _TXB1EIDH 000F33                           _RXF2SIDH 000F08  
                         _TXB1EIDL 000F34                           _RXF2SIDL 000F09  
                         _ISR_alta 0008                           _TXB2EIDH 000F23  
                         _RXF3SIDH 000F0C                           _TXB2EIDL 000F24  
                         _RXF3SIDL 000F0D                           _RXF4SIDH 000F10  
                         _RXF4SIDL 000F11                           _RXF5SIDH 000F14  
                         _RXF5SIDL 000F15                           _RXM0EIDH 000F1A  
                         _RXM0EIDL 000F1B                           _TXB0SIDH 000F41  
                         _RXM1EIDH 000F1E                           _TXB0SIDL 000F42  
                         _RXM1EIDL 000F1F                           _TXB1SIDH 000F31  
                         _TXB1SIDL 000F32                           _TXB2SIDH 000F21  
                         _TXB2SIDL 000F22                        _LCD_Handler 4B14  
                         _RXM0SIDH 000F18                           _RXM0SIDL 000F19  
                         _RXM1SIDH 000F1C                           _RXM1SIDL 000F1D  
                         _RXERRCNT 000F75     LCD_write_integer@zero_cleaning 008B  
                         _TXERRCNT 000F76                         _ADCON0bits 000FC2  
                       _ADCON2bits 000FC0                  ___wmul@multiplier 0070  
                         _RTR_Flag 025C                  ?_LCD_send_command 0078  
                 _actual_speed_kmh 0008                          _user_data 0024  
               ??_LCD_send_command 007B                      ?_CANSetFilter 0070  
                       _CANCONbits 000F6F                        _LCD_goto_xy 610E  
                 ??_LCD_write_char 007C                  LCD_goto_line@line 007C  
                         __Hrparam 0000                       _RXB0SIDLbits 000F62  
           ??_board_initialization 008A                           __Lrparam 0000  
                     _RXB1SIDLbits 000F52                   ?_CAN_interpreter 0029  
                 __size_of___fladd 04A8                         _CANSetMask 3F2C  
                 __size_of___fldiv 03C0                   __size_of___awdiv 00BE  
                 __size_of___flneg 0038                   __size_of___awmod 00A2  
                 __size_of___flmul 04A6                  ?_LCD_shift_cursor 007C  
                 __size_of___flsub 0048                   __size_of___fltol 010C  
                 __size_of___lldiv 00BC                   __size_of___llmod 009A  
                 __size_of___lwdiv 0078                   __size_of___lwmod 0062  
                      _fround$4217 009F                        _fround$4218 009B  
               ??_LCD_shift_cursor 007D                         sprintf@exp 0135  
                       sprintf@val 0131                           ___xxtofl 45C0  
                     _RXF0SIDLbits 000F01                   __size_of_isdigit 002A  
                         _delay_ms 5EFE                    ___lwdiv@divisor 0072  
                     _RXF1SIDLbits 000F05                    ___lwdiv@counter 0076  
                   ??_CANSetFilter 0075                   _LCD_enable_pulse 60B2  
                         __ptext10 603E                           __ptext11 42CA  
                         __ptext20 546C                           __ptext12 36C6  
                         __ptext21 5DF0                           __ptext13 5AA4  
                         __ptext30 5CEE                           __ptext22 321E  
                         __ptext14 5664                           __ptext31 5C76  
                         __ptext23 5F38                           __ptext15 4CC2  
                         __ptext40 5578                           __ptext32 6068  
                         __ptext24 4E60                           __ptext16 4FF0  
                         __ptext41 5EC4                           __ptext33 5BE0  
                         __ptext25 3B6C                           __ptext17 45C0  
                         __ptext50 139A                           __ptext42 60B2  
                         __ptext34 52FE                           __ptext26 5FA6  
                         __ptext18 5B46                           __ptext51 608E  
                         __ptext43 5EFE                           __ptext35 618E  
                         __ptext27 4954                           __ptext19 57E0  
                         __ptext44 5F70                           __ptext36 5FDA  
                         __ptext28 5E38                           __ptext45 5D50  
                         __ptext37 600C                           __ptext29 5722  
                         __ptext54 1B26                           __ptext46 612A  
                         __ptext38 610E                           __ptext55 60D4  
                         __ptext47 6146                           __ptext39 5DA4  
                         __ptext56 2D12                           __ptext48 5956  
                         __ptext57 6178                           __ptext49 589C  
                     _RXF2SIDLbits 000F09                           __powers_ FEE9  
                     _RXF3SIDLbits 000F0D                   __size_of_sprintf 0894  
                     _RXF4SIDLbits 000F11                       _RXF5SIDLbits 000F15  
         CANsendMessage@dataLength 0076                      __size_of_main 0642  
                    __size_of_itoa 0048                      __size_of_utoa 00BE  
                ?i2_CANsendMessage 003A               CANreceiveMessage@msg 003A  
            LCD_shift_cursor@shift 007D                i2_CANisTxReady$3235 003A  
                     _TXB0SIDLbits 000F42                  Joystick_Polling@i 0071  
               ??i2_CANsendMessage 0042                       _TXB1SIDLbits 000F32  
         __end_of_Joystick_Polling 5DA4                       _TXB2SIDLbits 000F22  
                         int$flags 004D          __size_of_CANOperationMode 0016  
                    ?_CANisRxReady 0029                      ?_CANisTxReady 0029  
         __end_of_LCD_write_string 608E                        _RXB0DLCbits 000F65  
                      _RXB1DLCbits 000F55                       _RXM0SIDLbits 000F19  
                      _RXB0CONbits 000F60                         _LCD_cursor 5FDA  
                      _RXB1CONbits 000F50                  _CANreceiveMessage 2D12  
                     _RXM1SIDLbits 000F1D                         _INTCONbits 000FF2  
                     _set_steering 0027                   ??_CANsendMessage 0078  
               ?_CANreceiveMessage 003A                           itoa@base 0084  
                         isdigit@c 0072                           scale@scl 009F  
         CANsendMessage@identifier 0070                       _time_counter 001C  
                         intlevel1 0000                           intlevel2 0000  
                        sprintf@ap 012D                   __tdiv_to_l_@exp1 0080  
                        sprintf@sp 00C2                   __tdiv_to_l_@cntr 007F  
                 CANSetFilter@tamp 007A                   __tdiv_to_l_@quot 007B  
                 CANSetFilter@type 0074                ??_CANreceiveMessage 003C  
                 ___lwmod@dividend 0070                   ___lldiv@dividend 0070  
                      _TXB0DLCbits 000F45                        _right_speed 0022  
                      _TXB1DLCbits 000F35                        _TXB0CONbits 000F40  
                      _TXB2DLCbits 000F25                        _TXB1CONbits 000F30  
                      _TXB2CONbits 000F20                    _display_refresh 025E  
                 ??i2_CANisTxReady 003A               CANOperationMode@mode 0070  
                   ??_CANisRxReady 003A                        ?_CANSetMask 0070  
                   ??_CANisTxReady 0070                       ?__tdiv_to_l_ 0070  
        __end_of_CANreceiveMessage 321E                           utoa@base 007B  
                         sprintf@c 0141                           sprintf@f 00C4  
                 ___lldiv@quotient 0078                    ___lwmod@divisor 0072  
  LCD_shift_cursor@number_of_shift 007C                    ___lwmod@counter 0074  
                    ___fladd@signs 00B4                 _PWR_Button_Polling 60F2  
                     ___fladd@aexp 00B5                       ___fladd@bexp 00B6  
            __end_of_CANInitialize 4954                ?_PWR_Button_Polling 0029  
                     _power_switch 0260  
