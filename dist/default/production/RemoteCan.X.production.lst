

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Jun 09 19:08:14 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    84                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    85  0000                     
    86                           	psect	idataBANK0
    87  016064                     __pidataBANK0:
    88                           	opt stack 0
    89                           
    90                           ;initializer for _delay_quartz_frequency_value
    91  016064  10                 	db	16
    92                           
    93                           	psect	mediumconst
    94  00FD4A                     __pmediumconst:
    95                           	opt stack 0
    96  00FD4A  00                 	db	0
    97  00FD4B                     __npowers_:
    98                           	opt stack 0
    99  00FD4B  0000               	dw	0
   100  00FD4D  3F80               	dw	16256
   101  00FD4F  CCCD               	dw	52429
   102  00FD51  3DCC               	dw	15820
   103  00FD53  D70A               	dw	55050
   104  00FD55  3C23               	dw	15395
   105  00FD57  126F               	dw	4719
   106  00FD59  3A83               	dw	14979
   107  00FD5B  B717               	dw	46871
   108  00FD5D  38D1               	dw	14545
   109  00FD5F  C5AC               	dw	50604
   110  00FD61  3727               	dw	14119
   111  00FD63  37BD               	dw	14269
   112  00FD65  3586               	dw	13702
   113  00FD67  BF95               	dw	49045
   114  00FD69  33D6               	dw	13270
   115  00FD6B  CC77               	dw	52343
   116  00FD6D  322B               	dw	12843
   117  00FD6F  705F               	dw	28767
   118  00FD71  3089               	dw	12425
   119  00FD73  E6FF               	dw	59135
   120  00FD75  2EDB               	dw	11995
   121  00FD77  E508               	dw	58632
   122  00FD79  1E3C               	dw	7740
   123  00FD7B  4260               	dw	16992
   124  00FD7D  0DA2               	dw	3490
   125  00FD7F                     __end_of__npowers_:
   126                           	opt stack 0
   127  00FD7F                     __powers_:
   128                           	opt stack 0
   129  00FD7F  0000               	dw	0
   130  00FD81  3F80               	dw	16256
   131  00FD83  0000               	dw	0
   132  00FD85  4120               	dw	16672
   133  00FD87  0000               	dw	0
   134  00FD89  42C8               	dw	17096
   135  00FD8B  0000               	dw	0
   136  00FD8D  447A               	dw	17530
   137  00FD8F  4000               	dw	16384
   138  00FD91  461C               	dw	17948
   139  00FD93  5000               	dw	20480
   140  00FD95  47C3               	dw	18371
   141  00FD97  2400               	dw	9216
   142  00FD99  4974               	dw	18804
   143  00FD9B  9680               	dw	38528
   144  00FD9D  4B18               	dw	19224
   145  00FD9F  BC20               	dw	48160
   146  00FDA1  4CBE               	dw	19646
   147  00FDA3  6B28               	dw	27432
   148  00FDA5  4E6E               	dw	20078
   149  00FDA7  02F9               	dw	761
   150  00FDA9  5015               	dw	20501
   151  00FDAB  78EC               	dw	30956
   152  00FDAD  60AD               	dw	24749
   153  00FDAF  F2CA               	dw	62154
   154  00FDB1  7149               	dw	29001
   155  00FDB3                     __end_of__powers_:
   156                           	opt stack 0
   157  00FDB3                     _dpowers:
   158                           	opt stack 0
   159  00FDB3  0001               	dw	1
   160  00FDB5  0000               	dw	0
   161  00FDB7  000A               	dw	10
   162  00FDB9  0000               	dw	0
   163  00FDBB  0064               	dw	100
   164  00FDBD  0000               	dw	0
   165  00FDBF  03E8               	dw	1000
   166  00FDC1  0000               	dw	0
   167  00FDC3  2710               	dw	10000
   168  00FDC5  0000               	dw	0
   169  00FDC7  86A0               	dw	34464
   170  00FDC9  0001               	dw	1
   171  00FDCB  4240               	dw	16960
   172  00FDCD  000F               	dw	15
   173  00FDCF  9680               	dw	38528
   174  00FDD1  0098               	dw	152
   175  00FDD3  E100               	dw	57600
   176  00FDD5  05F5               	dw	1525
   177  00FDD7  CA00               	dw	51712
   178  00FDD9  3B9A               	dw	15258
   179  00FDDB                     __end_of_dpowers:
   180                           	opt stack 0
   181  0000                     _RXB1CON	set	3920
   182  0000                     _RXB1CONbits	set	3920
   183  0000                     _RXB1D0	set	3926
   184  0000                     _RXB1D1	set	3927
   185  0000                     _RXB1D2	set	3928
   186  0000                     _RXB1D3	set	3929
   187  0000                     _RXB1D4	set	3930
   188  0000                     _RXB1D5	set	3931
   189  0000                     _RXB1D6	set	3932
   190  0000                     _RXB1D7	set	3933
   191  0000                     _RXB1DLC	set	3925
   192  0000                     _RXB1DLCbits	set	3925
   193  0000                     _RXB1EIDH	set	3923
   194  0000                     _RXB1EIDL	set	3924
   195  0000                     _RXB1SIDH	set	3921
   196  0000                     _RXB1SIDL	set	3922
   197  0000                     _RXB1SIDLbits	set	3922
   198  0000                     _RXF0EIDH	set	3842
   199  0000                     _RXF0EIDL	set	3843
   200  0000                     _RXF0SIDH	set	3840
   201  0000                     _RXF0SIDL	set	3841
   202  0000                     _RXF0SIDLbits	set	3841
   203  0000                     _RXF1EIDH	set	3846
   204  0000                     _RXF1EIDL	set	3847
   205  0000                     _RXF1SIDH	set	3844
   206  0000                     _RXF1SIDL	set	3845
   207  0000                     _RXF1SIDLbits	set	3845
   208  0000                     _RXF2EIDH	set	3850
   209  0000                     _RXF2EIDL	set	3851
   210  0000                     _RXF2SIDH	set	3848
   211  0000                     _RXF2SIDL	set	3849
   212  0000                     _RXF2SIDLbits	set	3849
   213  0000                     _RXF3EIDH	set	3854
   214  0000                     _RXF3EIDL	set	3855
   215  0000                     _RXF3SIDH	set	3852
   216  0000                     _RXF3SIDL	set	3853
   217  0000                     _RXF3SIDLbits	set	3853
   218  0000                     _RXF4EIDH	set	3858
   219  0000                     _RXF4EIDL	set	3859
   220  0000                     _RXF4SIDH	set	3856
   221  0000                     _RXF4SIDL	set	3857
   222  0000                     _RXF4SIDLbits	set	3857
   223  0000                     _RXF5EIDH	set	3862
   224  0000                     _RXF5EIDL	set	3863
   225  0000                     _RXF5SIDH	set	3860
   226  0000                     _RXF5SIDL	set	3861
   227  0000                     _RXF5SIDLbits	set	3861
   228  0000                     _RXM0EIDH	set	3866
   229  0000                     _RXM0EIDL	set	3867
   230  0000                     _RXM0SIDH	set	3864
   231  0000                     _RXM0SIDL	set	3865
   232  0000                     _RXM0SIDLbits	set	3865
   233  0000                     _RXM1EIDH	set	3870
   234  0000                     _RXM1EIDL	set	3871
   235  0000                     _RXM1SIDH	set	3868
   236  0000                     _RXM1SIDL	set	3869
   237  0000                     _RXM1SIDLbits	set	3869
   238  0000                     _TXB0CONbits	set	3904
   239  0000                     _TXB0D0	set	3910
   240  0000                     _TXB0D1	set	3911
   241  0000                     _TXB0D2	set	3912
   242  0000                     _TXB0D3	set	3913
   243  0000                     _TXB0D4	set	3914
   244  0000                     _TXB0D5	set	3915
   245  0000                     _TXB0D6	set	3916
   246  0000                     _TXB0D7	set	3917
   247  0000                     _TXB0DLC	set	3909
   248  0000                     _TXB0DLCbits	set	3909
   249  0000                     _TXB0EIDH	set	3907
   250  0000                     _TXB0EIDL	set	3908
   251  0000                     _TXB0SIDH	set	3905
   252  0000                     _TXB0SIDL	set	3906
   253  0000                     _TXB0SIDLbits	set	3906
   254  0000                     _TXB1CONbits	set	3888
   255  0000                     _TXB1D0	set	3894
   256  0000                     _TXB1D1	set	3895
   257  0000                     _TXB1D2	set	3896
   258  0000                     _TXB1D3	set	3897
   259  0000                     _TXB1D4	set	3898
   260  0000                     _TXB1D5	set	3899
   261  0000                     _TXB1D6	set	3900
   262  0000                     _TXB1D7	set	3901
   263  0000                     _TXB1DLC	set	3893
   264  0000                     _TXB1DLCbits	set	3893
   265  0000                     _TXB1EIDH	set	3891
   266  0000                     _TXB1EIDL	set	3892
   267  0000                     _TXB1SIDH	set	3889
   268  0000                     _TXB1SIDL	set	3890
   269  0000                     _TXB1SIDLbits	set	3890
   270  0000                     _TXB2CONbits	set	3872
   271  0000                     _TXB2D0	set	3878
   272  0000                     _TXB2D1	set	3879
   273  0000                     _TXB2D2	set	3880
   274  0000                     _TXB2D3	set	3881
   275  0000                     _TXB2D4	set	3882
   276  0000                     _TXB2D5	set	3883
   277  0000                     _TXB2D6	set	3884
   278  0000                     _TXB2D7	set	3885
   279  0000                     _TXB2DLC	set	3877
   280  0000                     _TXB2DLCbits	set	3877
   281  0000                     _TXB2EIDH	set	3875
   282  0000                     _TXB2EIDL	set	3876
   283  0000                     _TXB2SIDH	set	3873
   284  0000                     _TXB2SIDL	set	3874
   285  0000                     _TXB2SIDLbits	set	3874
   286  0000                     _ADCON0bits	set	4034
   287  0000                     _ADCON1	set	4033
   288  0000                     _ADCON2bits	set	4032
   289  0000                     _ADRESH	set	4036
   290  0000                     _BRGCON1	set	3952
   291  0000                     _BRGCON2	set	3953
   292  0000                     _BRGCON2bits	set	3953
   293  0000                     _BRGCON3	set	3954
   294  0000                     _BRGCON3bits	set	3954
   295  0000                     _CANCON	set	3951
   296  0000                     _CANCONbits	set	3951
   297  0000                     _CANSTAT	set	3950
   298  0000                     _COMSTATbits	set	3956
   299  0000                     _INTCONbits	set	4082
   300  0000                     _IPR2bits	set	4002
   301  0000                     _IPR3bits	set	4005
   302  0000                     _LATA	set	3977
   303  0000                     _LATB	set	3978
   304  0000                     _LATC	set	3979
   305  0000                     _LATCbits	set	3979
   306  0000                     _LATD	set	3980
   307  0000                     _LATDbits	set	3980
   308  0000                     _LATE	set	3981
   309  0000                     _LATEbits	set	3981
   310  0000                     _PIE2bits	set	4000
   311  0000                     _PIE3bits	set	4003
   312  0000                     _PIR2bits	set	4001
   313  0000                     _PIR3bits	set	4004
   314  0000                     _PORTAbits	set	3968
   315  0000                     _PORTBbits	set	3969
   316  0000                     _PORTDbits	set	3971
   317  0000                     _RCONbits	set	4048
   318  0000                     _RXB0CON	set	3936
   319  0000                     _RXB0CONbits	set	3936
   320  0000                     _RXB0D0	set	3942
   321  0000                     _RXB0D1	set	3943
   322  0000                     _RXB0D2	set	3944
   323  0000                     _RXB0D3	set	3945
   324  0000                     _RXB0D4	set	3946
   325  0000                     _RXB0D5	set	3947
   326  0000                     _RXB0D6	set	3948
   327  0000                     _RXB0D7	set	3949
   328  0000                     _RXB0DLC	set	3941
   329  0000                     _RXB0DLCbits	set	3941
   330  0000                     _RXB0EIDH	set	3939
   331  0000                     _RXB0EIDL	set	3940
   332  0000                     _RXB0SIDH	set	3937
   333  0000                     _RXB0SIDL	set	3938
   334  0000                     _RXB0SIDLbits	set	3938
   335  0000                     _RXERRCNT	set	3957
   336  0000                     _T3CON	set	4017
   337  0000                     _TMR3H	set	4019
   338  0000                     _TMR3L	set	4018
   339  0000                     _TRISA	set	3986
   340  0000                     _TRISB	set	3987
   341  0000                     _TRISC	set	3988
   342  0000                     _TRISD	set	3989
   343  0000                     _TRISE	set	3990
   344  0000                     _TXERRCNT	set	3958
   345  00FDDB                     STR_11:
   346  00FDDB  44                 	db	68	;'D'
   347  00FDDC  69                 	db	105	;'i'
   348  00FDDD  72                 	db	114	;'r'
   349  00FDDE  65                 	db	101	;'e'
   350  00FDDF  63                 	db	99	;'c'
   351  00FDE0  74                 	db	116	;'t'
   352  00FDE1  69                 	db	105	;'i'
   353  00FDE2  6F                 	db	111	;'o'
   354  00FDE3  6E                 	db	110	;'n'
   355  00FDE4  3A                 	db	58	;':'
   356  00FDE5  20                 	db	32
   357  00FDE6  20                 	db	32
   358  00FDE7  20                 	db	32
   359  00FDE8  20                 	db	32
   360  00FDE9  20                 	db	32
   361  00FDEA  20                 	db	32
   362  00FDEB  20                 	db	32
   363  00FDEC  20                 	db	32
   364  00FDED  20                 	db	32
   365  00FDEE  20                 	db	32
   366  00FDEF  00                 	db	0
   367  00FDF0                     STR_38:
   368  00FDF0  20                 	db	32
   369  00FDF1  20                 	db	32
   370  00FDF2  20                 	db	32
   371  00FDF3  20                 	db	32
   372  00FDF4  20                 	db	32
   373  00FDF5  20                 	db	32
   374  00FDF6  20                 	db	32
   375  00FDF7  46                 	db	70	;'F'
   376  00FDF8  41                 	db	65	;'A'
   377  00FDF9  49                 	db	73	;'I'
   378  00FDFA  4C                 	db	76	;'L'
   379  00FDFB  45                 	db	69	;'E'
   380  00FDFC  44                 	db	68	;'D'
   381  00FDFD  21                 	db	33
   382  00FDFE  20                 	db	32
   383  00FDFF  20                 	db	32
   384  00FE00  20                 	db	32
   385  00FE01  20                 	db	32
   386  00FE02  20                 	db	32
   387  00FE03  20                 	db	32
   388  00FE04  00                 	db	0
   389  00FE05                     STR_35:
   390  00FE05  20                 	db	32
   391  00FE06  20                 	db	32
   392  00FE07  20                 	db	32
   393  00FE08  20                 	db	32
   394  00FE09  20                 	db	32
   395  00FE0A  43                 	db	67	;'C'
   396  00FE0B  4F                 	db	79	;'O'
   397  00FE0C  4D                 	db	77	;'M'
   398  00FE0D  50                 	db	80	;'P'
   399  00FE0E  4C                 	db	76	;'L'
   400  00FE0F  45                 	db	69	;'E'
   401  00FE10  54                 	db	84	;'T'
   402  00FE11  45                 	db	69	;'E'
   403  00FE12  44                 	db	68	;'D'
   404  00FE13  21                 	db	33
   405  00FE14  20                 	db	32
   406  00FE15  20                 	db	32
   407  00FE16  20                 	db	32
   408  00FE17  20                 	db	32
   409  00FE18  20                 	db	32
   410  00FE19  00                 	db	0
   411  00FE1A                     STR_34:
   412  00FE1A  20                 	db	32
   413  00FE1B  20                 	db	32
   414  00FE1C  20                 	db	32
   415  00FE1D  20                 	db	32
   416  00FE1E  53                 	db	83	;'S'
   417  00FE1F  55                 	db	85	;'U'
   418  00FE20  43                 	db	67	;'C'
   419  00FE21  43                 	db	67	;'C'
   420  00FE22  45                 	db	69	;'E'
   421  00FE23  53                 	db	83	;'S'
   422  00FE24  53                 	db	83	;'S'
   423  00FE25  46                 	db	70	;'F'
   424  00FE26  55                 	db	85	;'U'
   425  00FE27  4C                 	db	76	;'L'
   426  00FE28  4C                 	db	76	;'L'
   427  00FE29  59                 	db	89	;'Y'
   428  00FE2A  20                 	db	32
   429  00FE2B  20                 	db	32
   430  00FE2C  20                 	db	32
   431  00FE2D  20                 	db	32
   432  00FE2E  00                 	db	0
   433  00FE2F                     STR_27:
   434  00FE2F  20                 	db	32
   435  00FE30  20                 	db	32
   436  00FE31  20                 	db	32
   437  00FE32  73                 	db	115	;'s'
   438  00FE33  74                 	db	116	;'t'
   439  00FE34  61                 	db	97	;'a'
   440  00FE35  72                 	db	114	;'r'
   441  00FE36  74                 	db	116	;'t'
   442  00FE37  20                 	db	32
   443  00FE38  70                 	db	112	;'p'
   444  00FE39  61                 	db	97	;'a'
   445  00FE3A  72                 	db	114	;'r'
   446  00FE3B  6B                 	db	107	;'k'
   447  00FE3C  69                 	db	105	;'i'
   448  00FE3D  6E                 	db	110	;'n'
   449  00FE3E  67                 	db	103	;'g'
   450  00FE3F  20                 	db	32
   451  00FE40  20                 	db	32
   452  00FE41  20                 	db	32
   453  00FE42  20                 	db	32
   454  00FE43  00                 	db	0
   455  00FE44                     STR_3:
   456  00FE44  20                 	db	32
   457  00FE45  20                 	db	32
   458  00FE46  50                 	db	80	;'P'
   459  00FE47  72                 	db	114	;'r'
   460  00FE48  65                 	db	101	;'e'
   461  00FE49  73                 	db	115	;'s'
   462  00FE4A  73                 	db	115	;'s'
   463  00FE4B  20                 	db	32
   464  00FE4C  74                 	db	116	;'t'
   465  00FE4D  68                 	db	104	;'h'
   466  00FE4E  65                 	db	101	;'e'
   467  00FE4F  20                 	db	32
   468  00FE50  62                 	db	98	;'b'
   469  00FE51  75                 	db	117	;'u'
   470  00FE52  74                 	db	116	;'t'
   471  00FE53  74                 	db	116	;'t'
   472  00FE54  6F                 	db	111	;'o'
   473  00FE55  6E                 	db	110	;'n'
   474  00FE56  20                 	db	32
   475  00FE57  20                 	db	32
   476  00FE58  00                 	db	0
   477  00FE59                     STR_39:
   478  00FE59  20                 	db	32
   479  00FE5A  20                 	db	32
   480  00FE5B  20                 	db	32
   481  00FE5C  64                 	db	100	;'d'
   482  00FE5D  75                 	db	117	;'u'
   483  00FE5E  65                 	db	101	;'e'
   484  00FE5F  20                 	db	32
   485  00FE60  74                 	db	116	;'t'
   486  00FE61  6F                 	db	111	;'o'
   487  00FE62  20                 	db	32
   488  00FE63  61                 	db	97	;'a'
   489  00FE64  6E                 	db	110	;'n'
   490  00FE65  20                 	db	32
   491  00FE66  65                 	db	101	;'e'
   492  00FE67  72                 	db	114	;'r'
   493  00FE68  72                 	db	114	;'r'
   494  00FE69  6F                 	db	111	;'o'
   495  00FE6A  72                 	db	114	;'r'
   496  00FE6B  20                 	db	32
   497  00FE6C  20                 	db	32
   498  00FE6D  00                 	db	0
   499  00FE6E                     STR_18:
   500  00FE6E  42                 	db	66	;'B'
   501  00FE6F  61                 	db	97	;'a'
   502  00FE70  74                 	db	116	;'t'
   503  00FE71  74                 	db	116	;'t'
   504  00FE72  65                 	db	101	;'e'
   505  00FE73  72                 	db	114	;'r'
   506  00FE74  79                 	db	121	;'y'
   507  00FE75  20                 	db	32
   508  00FE76  63                 	db	99	;'c'
   509  00FE77  68                 	db	104	;'h'
   510  00FE78  61                 	db	97	;'a'
   511  00FE79  72                 	db	114	;'r'
   512  00FE7A  67                 	db	103	;'g'
   513  00FE7B  69                 	db	105	;'i'
   514  00FE7C  6E                 	db	110	;'n'
   515  00FE7D  67                 	db	103	;'g'
   516  00FE7E  2E                 	db	46
   517  00FE7F  2E                 	db	46
   518  00FE80  2E                 	db	46
   519  00FE81  20                 	db	32
   520  00FE82  00                 	db	0
   521  00FE83                     STR_23:
   522  00FE83  20                 	db	32
   523  00FE84  75                 	db	117	;'u'
   524  00FE85  6E                 	db	110	;'n'
   525  00FE86  74                 	db	116	;'t'
   526  00FE87  69                 	db	105	;'i'
   527  00FE88  6C                 	db	108	;'l'
   528  00FE89  20                 	db	32
   529  00FE8A  6E                 	db	110	;'n'
   530  00FE8B  65                 	db	101	;'e'
   531  00FE8C  78                 	db	120	;'x'
   532  00FE8D  74                 	db	116	;'t'
   533  00FE8E  20                 	db	32
   534  00FE8F  6D                 	db	109	;'m'
   535  00FE90  65                 	db	101	;'e'
   536  00FE91  73                 	db	115	;'s'
   537  00FE92  73                 	db	115	;'s'
   538  00FE93  61                 	db	97	;'a'
   539  00FE94  67                 	db	103	;'g'
   540  00FE95  65                 	db	101	;'e'
   541  00FE96  20                 	db	32
   542  00FE97  00                 	db	0
   543  00FE98                     STR_26:
   544  00FE98  50                 	db	80	;'P'
   545  00FE99  72                 	db	114	;'r'
   546  00FE9A  65                 	db	101	;'e'
   547  00FE9B  73                 	db	115	;'s'
   548  00FE9C  73                 	db	115	;'s'
   549  00FE9D  20                 	db	32
   550  00FE9E  74                 	db	116	;'t'
   551  00FE9F  68                 	db	104	;'h'
   552  00FEA0  65                 	db	101	;'e'
   553  00FEA1  20                 	db	32
   554  00FEA2  42                 	db	66	;'B'
   555  00FEA3  55                 	db	85	;'U'
   556  00FEA4  54                 	db	84	;'T'
   557  00FEA5  54                 	db	84	;'T'
   558  00FEA6  4F                 	db	79	;'O'
   559  00FEA7  4E                 	db	78	;'N'
   560  00FEA8  20                 	db	32
   561  00FEA9  74                 	db	116	;'t'
   562  00FEAA  6F                 	db	111	;'o'
   563  00FEAB  20                 	db	32
   564  00FEAC  00                 	db	0
   565  00FEAD                     STR_33:
   566  00FEAD  20                 	db	32
   567  00FEAE  50                 	db	80	;'P'
   568  00FEAF  61                 	db	97	;'a'
   569  00FEB0  72                 	db	114	;'r'
   570  00FEB1  6B                 	db	107	;'k'
   571  00FEB2  69                 	db	105	;'i'
   572  00FEB3  6E                 	db	110	;'n'
   573  00FEB4  67                 	db	103	;'g'
   574  00FEB5  20                 	db	32
   575  00FEB6  70                 	db	112	;'p'
   576  00FEB7  72                 	db	114	;'r'
   577  00FEB8  6F                 	db	111	;'o'
   578  00FEB9  63                 	db	99	;'c'
   579  00FEBA  65                 	db	101	;'e'
   580  00FEBB  64                 	db	100	;'d'
   581  00FEBC  75                 	db	117	;'u'
   582  00FEBD  72                 	db	114	;'r'
   583  00FEBE  65                 	db	101	;'e'
   584  00FEBF  73                 	db	115	;'s'
   585  00FEC0  20                 	db	32
   586  00FEC1  00                 	db	0
   587  00FEC2                     STR_25:
   588  00FEC2  2D                 	db	45
   589  00FEC3  20                 	db	32
   590  00FEC4  44                 	db	68	;'D'
   591  00FEC5  69                 	db	105	;'i'
   592  00FEC6  73                 	db	115	;'s'
   593  00FEC7  74                 	db	116	;'t'
   594  00FEC8  61                 	db	97	;'a'
   595  00FEC9  6E                 	db	110	;'n'
   596  00FECA  63                 	db	99	;'c'
   597  00FECB  65                 	db	101	;'e'
   598  00FECC  20                 	db	32
   599  00FECD  52                 	db	82	;'R'
   600  00FECE  45                 	db	69	;'E'
   601  00FECF  41                 	db	65	;'A'
   602  00FED0  43                 	db	67	;'C'
   603  00FED1  48                 	db	72	;'H'
   604  00FED2  45                 	db	69	;'E'
   605  00FED3  44                 	db	68	;'D'
   606  00FED4  20                 	db	32
   607  00FED5  2D                 	db	45
   608  00FED6  00                 	db	0
   609  00FED7                     STR_22:
   610  00FED7  2D                 	db	45
   611  00FED8  3E                 	db	62	;'>'
   612  00FED9  20                 	db	32
   613  00FEDA  20                 	db	32
   614  00FEDB  4B                 	db	75	;'K'
   615  00FEDC  45                 	db	69	;'E'
   616  00FEDD  45                 	db	69	;'E'
   617  00FEDE  50                 	db	80	;'P'
   618  00FEDF  20                 	db	32
   619  00FEE0  4D                 	db	77	;'M'
   620  00FEE1  4F                 	db	79	;'O'
   621  00FEE2  56                 	db	86	;'V'
   622  00FEE3  49                 	db	73	;'I'
   623  00FEE4  4E                 	db	78	;'N'
   624  00FEE5  47                 	db	71	;'G'
   625  00FEE6  20                 	db	32
   626  00FEE7  20                 	db	32
   627  00FEE8  20                 	db	32
   628  00FEE9  3C                 	db	60	;'<'
   629  00FEEA  2D                 	db	45
   630  00FEEB  00                 	db	0
   631  00FEEC                     STR_15:
   632  00FEEC  2D                 	db	45
   633  00FEED  3E                 	db	62	;'>'
   634  00FEEE  20                 	db	32
   635  00FEEF  53                 	db	83	;'S'
   636  00FEF0  61                 	db	97	;'a'
   637  00FEF1  66                 	db	102	;'f'
   638  00FEF2  65                 	db	101	;'e'
   639  00FEF3  74                 	db	116	;'t'
   640  00FEF4  79                 	db	121	;'y'
   641  00FEF5  20                 	db	32
   642  00FEF6  62                 	db	98	;'b'
   643  00FEF7  72                 	db	114	;'r'
   644  00FEF8  61                 	db	97	;'a'
   645  00FEF9  6B                 	db	107	;'k'
   646  00FEFA  65                 	db	101	;'e'
   647  00FEFB  20                 	db	32
   648  00FEFC  4F                 	db	79	;'O'
   649  00FEFD  4E                 	db	78	;'N'
   650  00FEFE  3C                 	db	60	;'<'
   651  00FEFF  2D                 	db	45
   652  00FF00  00                 	db	0
   653  00FF01                     STR_29:
   654  00FF01  3D                 	db	61	;'='
   655  00FF02  20                 	db	32
   656  00FF03  20                 	db	32
   657  00FF04  20                 	db	32
   658  00FF05  20                 	db	32
   659  00FF06  50                 	db	80	;'P'
   660  00FF07  61                 	db	97	;'a'
   661  00FF08  72                 	db	114	;'r'
   662  00FF09  6B                 	db	107	;'k'
   663  00FF0A  69                 	db	105	;'i'
   664  00FF0B  6E                 	db	110	;'n'
   665  00FF0C  67                 	db	103	;'g'
   666  00FF0D  20                 	db	32
   667  00FF0E  69                 	db	105	;'i'
   668  00FF0F  6E                 	db	110	;'n'
   669  00FF10  20                 	db	32
   670  00FF11  20                 	db	32
   671  00FF12  20                 	db	32
   672  00FF13  20                 	db	32
   673  00FF14  3D                 	db	61	;'='
   674  00FF15  00                 	db	0
   675  00FF16                     STR_30:
   676  00FF16  3D                 	db	61	;'='
   677  00FF17  20                 	db	32
   678  00FF18  20                 	db	32
   679  00FF19  20                 	db	32
   680  00FF1A  20                 	db	32
   681  00FF1B  70                 	db	112	;'p'
   682  00FF1C  72                 	db	114	;'r'
   683  00FF1D  6F                 	db	111	;'o'
   684  00FF1E  67                 	db	103	;'g'
   685  00FF1F  72                 	db	114	;'r'
   686  00FF20  65                 	db	101	;'e'
   687  00FF21  73                 	db	115	;'s'
   688  00FF22  73                 	db	115	;'s'
   689  00FF23  2E                 	db	46
   690  00FF24  2E                 	db	46
   691  00FF25  2E                 	db	46
   692  00FF26  20                 	db	32
   693  00FF27  20                 	db	32
   694  00FF28  20                 	db	32
   695  00FF29  3D                 	db	61	;'='
   696  00FF2A  00                 	db	0
   697  00FF2B                     STR_20:
   698  00FF2B  3D                 	db	61	;'='
   699  00FF2C  20                 	db	32
   700  00FF2D  50                 	db	80	;'P'
   701  00FF2E  41                 	db	65	;'A'
   702  00FF2F  52                 	db	82	;'R'
   703  00FF30  4B                 	db	75	;'K'
   704  00FF31  49                 	db	73	;'I'
   705  00FF32  4E                 	db	78	;'N'
   706  00FF33  47                 	db	71	;'G'
   707  00FF34  20                 	db	32
   708  00FF35  4D                 	db	77	;'M'
   709  00FF36  45                 	db	69	;'E'
   710  00FF37  53                 	db	83	;'S'
   711  00FF38  53                 	db	83	;'S'
   712  00FF39  41                 	db	65	;'A'
   713  00FF3A  47                 	db	71	;'G'
   714  00FF3B  45                 	db	69	;'E'
   715  00FF3C  53                 	db	83	;'S'
   716  00FF3D  20                 	db	32
   717  00FF3E  3D                 	db	61	;'='
   718  00FF3F  00                 	db	0
   719  00FF40                     STR_2:
   720  00FF40  3D                 	db	61	;'='
   721  00FF41  3D                 	db	61	;'='
   722  00FF42  3E                 	db	62	;'>'
   723  00FF43  20                 	db	32
   724  00FF44  56                 	db	86	;'V'
   725  00FF45  45                 	db	69	;'E'
   726  00FF46  48                 	db	72	;'H'
   727  00FF47  49                 	db	73	;'I'
   728  00FF48  43                 	db	67	;'C'
   729  00FF49  4C                 	db	76	;'L'
   730  00FF4A  45                 	db	69	;'E'
   731  00FF4B  20                 	db	32
   732  00FF4C  20                 	db	32
   733  00FF4D  4F                 	db	79	;'O'
   734  00FF4E  46                 	db	70	;'F'
   735  00FF4F  46                 	db	70	;'F'
   736  00FF50  20                 	db	32
   737  00FF51  3C                 	db	60	;'<'
   738  00FF52  3D                 	db	61	;'='
   739  00FF53  3D                 	db	61	;'='
   740  00FF54  00                 	db	0
   741  00FF55                     STR_6:
   742  00FF55  3D                 	db	61	;'='
   743  00FF56  3D                 	db	61	;'='
   744  00FF57  3D                 	db	61	;'='
   745  00FF58  20                 	db	32
   746  00FF59  56                 	db	86	;'V'
   747  00FF5A  45                 	db	69	;'E'
   748  00FF5B  48                 	db	72	;'H'
   749  00FF5C  49                 	db	73	;'I'
   750  00FF5D  43                 	db	67	;'C'
   751  00FF5E  4C                 	db	76	;'L'
   752  00FF5F  45                 	db	69	;'E'
   753  00FF60  20                 	db	32
   754  00FF61  44                 	db	68	;'D'
   755  00FF62  41                 	db	65	;'A'
   756  00FF63  54                 	db	84	;'T'
   757  00FF64  41                 	db	65	;'A'
   758  00FF65  20                 	db	32
   759  00FF66  3D                 	db	61	;'='
   760  00FF67  3D                 	db	61	;'='
   761  00FF68  3D                 	db	61	;'='
   762  00FF69  00                 	db	0
   763  00FF6A                     STR_1:
   764  00FF6A  3D                 	db	61	;'='
   765  00FF6B  3D                 	db	61	;'='
   766  00FF6C  3D                 	db	61	;'='
   767  00FF6D  3D                 	db	61	;'='
   768  00FF6E  3D                 	db	61	;'='
   769  00FF6F  3D                 	db	61	;'='
   770  00FF70  3D                 	db	61	;'='
   771  00FF71  3D                 	db	61	;'='
   772  00FF72  3D                 	db	61	;'='
   773  00FF73  3D                 	db	61	;'='
   774  00FF74  3D                 	db	61	;'='
   775  00FF75  3D                 	db	61	;'='
   776  00FF76  3D                 	db	61	;'='
   777  00FF77  3D                 	db	61	;'='
   778  00FF78  3D                 	db	61	;'='
   779  00FF79  3D                 	db	61	;'='
   780  00FF7A  3D                 	db	61	;'='
   781  00FF7B  3D                 	db	61	;'='
   782  00FF7C  3D                 	db	61	;'='
   783  00FF7D  3D                 	db	61	;'='
   784  00FF7E  00                 	db	0
   785  00FF7F                     STR_21:
   786  00FF7F  20                 	db	32
   787  00FF80  50                 	db	80	;'P'
   788  00FF81  61                 	db	97	;'a'
   789  00FF82  72                 	db	114	;'r'
   790  00FF83  6B                 	db	107	;'k'
   791  00FF84  69                 	db	105	;'i'
   792  00FF85  6E                 	db	110	;'n'
   793  00FF86  67                 	db	103	;'g'
   794  00FF87  20                 	db	32
   795  00FF88  73                 	db	115	;'s'
   796  00FF89  70                 	db	112	;'p'
   797  00FF8A  61                 	db	97	;'a'
   798  00FF8B  63                 	db	99	;'c'
   799  00FF8C  65                 	db	101	;'e'
   800  00FF8D  20                 	db	32
   801  00FF8E  46                 	db	70	;'F'
   802  00FF8F  4F                 	db	79	;'O'
   803  00FF90  55                 	db	85	;'U'
   804  00FF91  4E                 	db	78	;'N'
   805  00FF92  44                 	db	68	;'D'
   806  00FF93  00                 	db	0
   807  00FF94                     STR_19:
   808  00FF94  5B                 	db	91	;'['
   809  00FF95  21                 	db	33
   810  00FF96  5D                 	db	93	;']'
   811  00FF97  20                 	db	32
   812  00FF98  20                 	db	32
   813  00FF99  4C                 	db	76	;'L'
   814  00FF9A  6F                 	db	111	;'o'
   815  00FF9B  77                 	db	119	;'w'
   816  00FF9C  20                 	db	32
   817  00FF9D  62                 	db	98	;'b'
   818  00FF9E  61                 	db	97	;'a'
   819  00FF9F  74                 	db	116	;'t'
   820  00FFA0  74                 	db	116	;'t'
   821  00FFA1  65                 	db	101	;'e'
   822  00FFA2  72                 	db	114	;'r'
   823  00FFA3  79                 	db	121	;'y'
   824  00FFA4  20                 	db	32
   825  00FFA5  5B                 	db	91	;'['
   826  00FFA6  21                 	db	33
   827  00FFA7  5D                 	db	93	;']'
   828  00FFA8  00                 	db	0
   829  00FFA9                     STR_8:
   830  00FFA9  53                 	db	83	;'S'
   831  00FFAA  70                 	db	112	;'p'
   832  00FFAB  65                 	db	101	;'e'
   833  00FFAC  65                 	db	101	;'e'
   834  00FFAD  64                 	db	100	;'d'
   835  00FFAE  3A                 	db	58	;':'
   836  00FFAF  20                 	db	32
   837  00FFB0  30                 	db	48	;'0'
   838  00FFB1  2E                 	db	46
   839  00FFB2  30                 	db	48	;'0'
   840  00FFB3  30                 	db	48	;'0'
   841  00FFB4  20                 	db	32
   842  00FFB5  4B                 	db	75	;'K'
   843  00FFB6  6D                 	db	109	;'m'
   844  00FFB7  2F                 	db	47
   845  00FFB8  68                 	db	104	;'h'
   846  00FFB9  00                 	db	0
   847  00FFBA                     STR_9:
   848  00FFBA  50                 	db	80	;'P'
   849  00FFBB  61                 	db	97	;'a'
   850  00FFBC  72                 	db	114	;'r'
   851  00FFBD  6B                 	db	107	;'k'
   852  00FFBE  20                 	db	32
   853  00FFBF  61                 	db	97	;'a'
   854  00FFC0  73                 	db	115	;'s'
   855  00FFC1  73                 	db	115	;'s'
   856  00FFC2  69                 	db	105	;'i'
   857  00FFC3  73                 	db	115	;'s'
   858  00FFC4  74                 	db	116	;'t'
   859  00FFC5  3A                 	db	58	;':'
   860  00FFC6  20                 	db	32
   861  00FFC7  00                 	db	0
   862  00FFC8                     STR_7:
   863  00FFC8  44                 	db	68	;'D'
   864  00FFC9  69                 	db	105	;'i'
   865  00FFCA  72                 	db	114	;'r'
   866  00FFCB  65                 	db	101	;'e'
   867  00FFCC  63                 	db	99	;'c'
   868  00FFCD  74                 	db	116	;'t'
   869  00FFCE  69                 	db	105	;'i'
   870  00FFCF  6F                 	db	111	;'o'
   871  00FFD0  6E                 	db	110	;'n'
   872  00FFD1  3A                 	db	58	;':'
   873  00FFD2  20                 	db	32
   874  00FFD3  00                 	db	0
   875  00FFD4                     STR_16:
   876  00FFD4  4F                 	db	79	;'O'
   877  00FFD5  46                 	db	70	;'F'
   878  00FFD6  46                 	db	70	;'F'
   879  00FFD7  20                 	db	32
   880  00FFD8  20                 	db	32
   881  00FFD9  20                 	db	32
   882  00FFDA  20                 	db	32
   883  00FFDB  00                 	db	0
   884  00FFDC                     STR_17:
   885  00FFDC  53                 	db	83	;'S'
   886  00FFDD  45                 	db	69	;'E'
   887  00FFDE  41                 	db	65	;'A'
   888  00FFDF  52                 	db	82	;'R'
   889  00FFE0  43                 	db	67	;'C'
   890  00FFE1  48                 	db	72	;'H'
   891  00FFE2  20                 	db	32
   892  00FFE3  00                 	db	0
   893  00FFE4                     STR_10:
   894  00FFE4  44                 	db	68	;'D'
   895  00FFE5  61                 	db	97	;'a'
   896  00FFE6  74                 	db	116	;'t'
   897  00FFE7  61                 	db	97	;'a'
   898  00FFE8  3A                 	db	58	;':'
   899  00FFE9  20                 	db	32
   900  00FFEA  00                 	db	0
   901  00FFEB                     STR_14:
   902  00FFEB  50                 	db	80	;'P'
   903  00FFEC  20                 	db	32
   904  00FFED  20                 	db	32
   905  00FFEE  20                 	db	32
   906  00FFEF  00                 	db	0
   907  00FFF0                     STR_12:
   908  00FFF0  46                 	db	70	;'F'
   909  00FFF1  57                 	db	87	;'W'
   910  00FFF2  44                 	db	68	;'D'
   911  00FFF3  20                 	db	32
   912  00FFF4  00                 	db	0
   913  00FFF5                     STR_13:
   914  00FFF5  42                 	db	66	;'B'
   915  00FFF6  4B                 	db	75	;'K'
   916  00FFF7  57                 	db	87	;'W'
   917  00FFF8  44                 	db	68	;'D'
   918  00FFF9  00                 	db	0
   919  00FFFA                     STR_5:
   920  00FFFA  25                 	db	37
   921  00FFFB  2E                 	db	46
   922  00FFFC  32                 	db	50	;'2'
   923  00FFFD  66                 	db	102	;'f'
   924  00FFFE  00                 	db	0
   925  0000                     
   926                           ; #config settings
   927  00FFFF  00                 	db	0	; dummy byte at the end
   928  0000                     
   929                           	psect	cinit
   930  015C6C                     __pcinit:
   931                           	opt stack 0
   932  015C6C                     start_initialization:
   933                           	opt stack 0
   934  015C6C                     __initialization:
   935                           	opt stack 0
   936                           
   937                           ; Clear objects allocated to BANK1 (54 bytes)
   938  015C6C  EE01  F000         	lfsr	0,__pbssBANK1
   939  015C70  0E36               	movlw	54
   940  015C72                     clear_0:
   941  015C72  6AEE               	clrf	postinc0,c
   942  015C74  06E8               	decf	wreg,f,c
   943  015C76  E1FD               	bnz	clear_0
   944                           
   945                           ; Clear objects allocated to BANK0 (50 bytes)
   946  015C78  EE00  F0BB         	lfsr	0,__pbssBANK0
   947  015C7C  0E32               	movlw	50
   948  015C7E                     clear_1:
   949  015C7E  6AEE               	clrf	postinc0,c
   950  015C80  06E8               	decf	wreg,f,c
   951  015C82  E1FD               	bnz	clear_1
   952                           
   953                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   954  015C84  6A4C               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   955  015C86  6A4B               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   956  015C88  6A4A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   957                           
   958                           ; Clear objects allocated to COMRAM (40 bytes)
   959  015C8A  EE00  F001         	lfsr	0,__pbssCOMRAM
   960  015C8E  0E28               	movlw	40
   961  015C90                     clear_2:
   962  015C90  6AEE               	clrf	postinc0,c
   963  015C92  06E8               	decf	wreg,f,c
   964  015C94  E1FD               	bnz	clear_2
   965                           
   966                           ; Initialize objects allocated to BANK0 (1 bytes)
   967                           ; load TBLPTR registers with __pidataBANK0
   968  015C96  0E64               	movlw	low __pidataBANK0
   969  015C98  6EF6               	movwf	tblptrl,c
   970  015C9A  0E60               	movlw	high __pidataBANK0
   971  015C9C  6EF7               	movwf	tblptrh,c
   972  015C9E  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   973  015CA0  6EF8               	movwf	tblptru,c
   974  015CA2  0009               	tblrd		*+	;fetch initializer
   975  015CA4  CFF5 F0ED          	movff	tablat,__pdataBANK0
   976  015CA8                     end_of_initialization:
   977                           	opt stack 0
   978  015CA8                     __end_of__initialization:
   979                           	opt stack 0
   980  015CA8  0100               	movlb	0
   981  015CAA  EF1B  F08A         	goto	_main	;jump to C main() function
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           postinc0	equ	0xFEE
   987                           wreg	equ	0xFE8
   988                           
   989                           	psect	bitbssCOMRAM
   990  000250                     __pbitbssCOMRAM:
   991                           	opt stack 0
   992  000250                     _Can_Tx_Force:
   993                           	opt stack 0
   994  000250                     	ds	1
   995  000251                     _F1_switch:
   996                           	opt stack 0
   997  000251                     	ds	1
   998  000252                     _F2_switch:
   999                           	opt stack 0
  1000  000252                     	ds	1
  1001  000253                     _LCD_4TH_ROW_MODE:
  1002                           	opt stack 0
  1003  000253                     	ds	1
  1004  000254                     _RTR_Flag:
  1005                           	opt stack 0
  1006  000254                     	ds	1
  1007  000255                     _battery_charging:
  1008                           	opt stack 0
  1009  000255                     	ds	1
  1010  000256                     _collision_msg:
  1011                           	opt stack 0
  1012  000256                     	ds	1
  1013  000257                     _display_refresh:
  1014                           	opt stack 0
  1015  000257                     	ds	1
  1016  000258                     _low_battery:
  1017                           	opt stack 0
  1018  000258                     	ds	1
  1019  000259                     _parking_error:
  1020                           	opt stack 0
  1021  000259                     	ds	1
  1022  00025A                     _parking_message_E:
  1023                           	opt stack 0
  1024  00025A                     	ds	1
  1025  00025B                     _power_switch:
  1026                           	opt stack 0
  1027  00025B                     	ds	1
  1028  00025C                     _row_refresh:
  1029                           	opt stack 0
  1030  00025C                     	ds	1
  1031  00025D                     _space_available:
  1032                           	opt stack 0
  1033  00025D                     	ds	1
  1034  00025E                     _space_gap_reached:
  1035                           	opt stack 0
  1036  00025E                     	ds	1
  1037  00025F                     _steering_correction_dir:
  1038                           	opt stack 0
  1039  00025F                     	ds	1
  1040  000260                     _wait_low_1:
  1041                           	opt stack 0
  1042  000260                     	ds	1
  1043  000261                     _wait_low_2:
  1044                           	opt stack 0
  1045  000261                     	ds	1
  1046  000262                     _wait_low_3:
  1047                           	opt stack 0
  1048  000262                     	ds	1
  1049  000263                     _x:
  1050                           	opt stack 0
  1051  000263                     	ds	1
  1052  000264                     _y:
  1053                           	opt stack 0
  1054  000264                     	ds	1
  1055  000265                     _z:
  1056                           	opt stack 0
  1057  000265                     	ds	1
  1058                           tblptru	equ	0xFF8
  1059                           tblptrh	equ	0xFF7
  1060                           tblptrl	equ	0xFF6
  1061                           tablat	equ	0xFF5
  1062                           postinc0	equ	0xFEE
  1063                           wreg	equ	0xFE8
  1064                           
  1065                           	psect	bssCOMRAM
  1066  000001                     __pbssCOMRAM:
  1067                           	opt stack 0
  1068  000001                     _id:
  1069                           	opt stack 0
  1070  000001                     	ds	4
  1071  000005                     _time_counter:
  1072                           	opt stack 0
  1073  000005                     	ds	4
  1074  000009                     _collision_sensor_distance:
  1075                           	opt stack 0
  1076  000009                     	ds	2
  1077  00000B                     _left_speed:
  1078                           	opt stack 0
  1079  00000B                     	ds	2
  1080  00000D                     _right_speed:
  1081                           	opt stack 0
  1082  00000D                     	ds	2
  1083  00000F                     _user_data:
  1084                           	opt stack 0
  1085  00000F                     	ds	2
  1086  000011                     _set_steering:
  1087                           	opt stack 0
  1088  000011                     	ds	1
  1089  000012                     _msg:
  1090                           	opt stack 0
  1091  000012                     	ds	15
  1092  000021                     _data_brake:
  1093                           	opt stack 0
  1094  000021                     	ds	8
  1095                           tblptru	equ	0xFF8
  1096                           tblptrh	equ	0xFF7
  1097                           tblptrl	equ	0xFF6
  1098                           tablat	equ	0xFF5
  1099                           postinc0	equ	0xFEE
  1100                           wreg	equ	0xFE8
  1101                           
  1102                           	psect	bssBANK0
  1103  0000BB                     __pbssBANK0:
  1104                           	opt stack 0
  1105  0000BB                     _JoystickConstants:
  1106                           	opt stack 0
  1107  0000BB                     	ds	8
  1108  0000C3                     _actual_speed_kmh:
  1109                           	opt stack 0
  1110  0000C3                     	ds	4
  1111  0000C7                     _check:
  1112                           	opt stack 0
  1113  0000C7                     	ds	4
  1114  0000CB                     _pr_time_1:
  1115                           	opt stack 0
  1116  0000CB                     	ds	4
  1117  0000CF                     _pr_time_2:
  1118                           	opt stack 0
  1119  0000CF                     	ds	4
  1120  0000D3                     _pr_time_3:
  1121                           	opt stack 0
  1122  0000D3                     	ds	4
  1123  0000D7                     _pr_time_5:
  1124                           	opt stack 0
  1125  0000D7                     	ds	4
  1126  0000DB                     _pr_time_6:
  1127                           	opt stack 0
  1128  0000DB                     	ds	4
  1129  0000DF                     _JoystickValues:
  1130                           	opt stack 0
  1131  0000DF                     	ds	2
  1132  0000E1                     _actual_speed:
  1133                           	opt stack 0
  1134  0000E1                     	ds	2
  1135  0000E3                     _clock_counter_reference:
  1136                           	opt stack 0
  1137  0000E3                     	ds	2
  1138  0000E5                     _set_speed:
  1139                           	opt stack 0
  1140  0000E5                     	ds	2
  1141  0000E7                     _collision_risk_value:
  1142                           	opt stack 0
  1143  0000E7                     	ds	1
  1144  0000E8                     _dir:
  1145                           	opt stack 0
  1146  0000E8                     	ds	1
  1147  0000E9                     _parking_message_ID:
  1148                           	opt stack 0
  1149  0000E9                     	ds	1
  1150  0000EA                     _parking_state:
  1151                           	opt stack 0
  1152  0000EA                     	ds	1
  1153  0000EB                     _steering_correction:
  1154                           	opt stack 0
  1155  0000EB                     	ds	1
  1156  0000EC                     _switch_position:
  1157                           	opt stack 0
  1158  0000EC                     	ds	1
  1159                           tblptru	equ	0xFF8
  1160                           tblptrh	equ	0xFF7
  1161                           tblptrl	equ	0xFF6
  1162                           tablat	equ	0xFF5
  1163                           postinc0	equ	0xFEE
  1164                           wreg	equ	0xFE8
  1165                           
  1166                           	psect	dataBANK0
  1167  0000ED                     __pdataBANK0:
  1168                           	opt stack 0
  1169  0000ED                     _delay_quartz_frequency_value:
  1170                           	opt stack 0
  1171  0000ED                     	ds	1
  1172                           tblptru	equ	0xFF8
  1173                           tblptrh	equ	0xFF7
  1174                           tblptrl	equ	0xFF6
  1175                           tablat	equ	0xFF5
  1176                           postinc0	equ	0xFEE
  1177                           wreg	equ	0xFE8
  1178                           
  1179                           	psect	bssBANK1
  1180  000100                     __pbssBANK1:
  1181                           	opt stack 0
  1182  000100                     LCD_write_integer@F17326:
  1183                           	opt stack 0
  1184  000100                     	ds	6
  1185  000106                     _pr_time_4:
  1186                           	opt stack 0
  1187  000106                     	ds	4
  1188  00010A                     _str:
  1189                           	opt stack 0
  1190  00010A                     	ds	12
  1191  000116                     _data:
  1192                           	opt stack 0
  1193  000116                     	ds	8
  1194  00011E                     _data_speed:
  1195                           	opt stack 0
  1196  00011E                     	ds	8
  1197  000126                     _data_steering:
  1198                           	opt stack 0
  1199  000126                     	ds	8
  1200  00012E                     _park_assist_state:
  1201                           	opt stack 0
  1202  00012E                     	ds	8
  1203                           tblptru	equ	0xFF8
  1204                           tblptrh	equ	0xFF7
  1205                           tblptrl	equ	0xFF6
  1206                           tablat	equ	0xFF5
  1207                           postinc0	equ	0xFEE
  1208                           wreg	equ	0xFE8
  1209                           
  1210                           	psect	cstackBANK1
  1211  000136                     __pcstackBANK1:
  1212                           	opt stack 0
  1213  000136                     ??_sprintf:
  1214                           
  1215                           ; 0 bytes @ 0x0
  1216  000136                     	ds	2
  1217  000138                     _sprintf$4233:
  1218                           	opt stack 0
  1219                           
  1220                           ; 4 bytes @ 0x2
  1221  000138                     	ds	4
  1222  00013C                     sprintf@ap:
  1223                           	opt stack 0
  1224                           
  1225                           ; 2 bytes @ 0x6
  1226  00013C                     	ds	2
  1227  00013E                     sprintf@flag:
  1228                           	opt stack 0
  1229                           
  1230                           ; 2 bytes @ 0x8
  1231  00013E                     	ds	2
  1232  000140                     sprintf@val:
  1233                           	opt stack 0
  1234                           
  1235                           ; 4 bytes @ 0xA
  1236  000140                     	ds	4
  1237  000144                     sprintf@exp:
  1238                           	opt stack 0
  1239                           
  1240                           ; 2 bytes @ 0xE
  1241  000144                     	ds	2
  1242  000146                     sprintf@tmpval:
  1243                           	opt stack 0
  1244                           
  1245                           ; 4 bytes @ 0x10
  1246  000146                     	ds	4
  1247  00014A                     sprintf@prec:
  1248                           	opt stack 0
  1249                           
  1250                           ; 2 bytes @ 0x14
  1251  00014A                     	ds	2
  1252  00014C                     sprintf@fval:
  1253                           	opt stack 0
  1254                           
  1255                           ; 4 bytes @ 0x16
  1256  00014C                     	ds	4
  1257  000150                     sprintf@c:
  1258                           	opt stack 0
  1259                           
  1260                           ; 1 bytes @ 0x1A
  1261  000150                     	ds	1
  1262  000151                     ??_main:
  1263                           
  1264                           ; 0 bytes @ 0x1B
  1265  000151                     	ds	8
  1266                           tblptru	equ	0xFF8
  1267                           tblptrh	equ	0xFF7
  1268                           tblptrl	equ	0xFF6
  1269                           tablat	equ	0xFF5
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           
  1273                           	psect	cstackBANK0
  1274  000060                     __pcstackBANK0:
  1275                           	opt stack 0
  1276  000060                     ??_ISR_alta:
  1277                           
  1278                           ; 0 bytes @ 0x0
  1279  000060                     	ds	18
  1280  000072                     ??_isdigit:
  1281  000072                     ?___wmul:
  1282                           	opt stack 0
  1283  000072                     ?___awmod:
  1284                           	opt stack 0
  1285  000072                     ?___lwdiv:
  1286                           	opt stack 0
  1287  000072                     ?___lwmod:
  1288                           	opt stack 0
  1289  000072                     ?__tdiv_to_l_:
  1290                           	opt stack 0
  1291  000072                     ?__div_to_l_:
  1292                           	opt stack 0
  1293  000072                     ?___flpack:
  1294                           	opt stack 0
  1295  000072                     ?___lldiv:
  1296                           	opt stack 0
  1297  000072                     ?___llmod:
  1298                           	opt stack 0
  1299  000072                     CANOperationMode@mode:
  1300                           	opt stack 0
  1301  000072                     _CANisTxReady$3251:
  1302                           	opt stack 0
  1303  000072                     delay_set_quartz@frequency:
  1304                           	opt stack 0
  1305  000072                     Joystick_Polling@i:
  1306                           	opt stack 0
  1307  000072                     ___wmul@multiplier:
  1308                           	opt stack 0
  1309  000072                     ___awmod@dividend:
  1310                           	opt stack 0
  1311  000072                     ___lwdiv@dividend:
  1312                           	opt stack 0
  1313  000072                     ___lwmod@dividend:
  1314                           	opt stack 0
  1315  000072                     CANsendMessage@identifier:
  1316                           	opt stack 0
  1317  000072                     CANSetMask@mask:
  1318                           	opt stack 0
  1319  000072                     CANSetFilter@filter:
  1320                           	opt stack 0
  1321  000072                     ___flpack@arg:
  1322                           	opt stack 0
  1323  000072                     __div_to_l_@f1:
  1324                           	opt stack 0
  1325  000072                     ___flge@ff1:
  1326                           	opt stack 0
  1327  000072                     __tdiv_to_l_@f1:
  1328                           	opt stack 0
  1329  000072                     ___lldiv@dividend:
  1330                           	opt stack 0
  1331  000072                     ___llmod@dividend:
  1332                           	opt stack 0
  1333                           
  1334                           ; 4 bytes @ 0x12
  1335  000072                     	ds	1
  1336  000073                     _isdigit$3906:
  1337                           	opt stack 0
  1338                           
  1339                           ; 1 bytes @ 0x13
  1340  000073                     	ds	1
  1341  000074                     isdigit@c:
  1342                           	opt stack 0
  1343  000074                     ___wmul@multiplicand:
  1344                           	opt stack 0
  1345  000074                     ___awmod@divisor:
  1346                           	opt stack 0
  1347  000074                     ___lwdiv@divisor:
  1348                           	opt stack 0
  1349  000074                     ___lwmod@divisor:
  1350                           	opt stack 0
  1351                           
  1352                           ; 2 bytes @ 0x14
  1353  000074                     	ds	2
  1354  000076                     CANSetMask@type:
  1355                           	opt stack 0
  1356  000076                     CANSetFilter@type:
  1357                           	opt stack 0
  1358  000076                     ___awmod@counter:
  1359                           	opt stack 0
  1360  000076                     ___flpack@exp:
  1361                           	opt stack 0
  1362  000076                     ___lwmod@counter:
  1363                           	opt stack 0
  1364  000076                     CANsendMessage@data:
  1365                           	opt stack 0
  1366  000076                     ___wmul@product:
  1367                           	opt stack 0
  1368  000076                     ___lwdiv@quotient:
  1369                           	opt stack 0
  1370  000076                     __div_to_l_@f2:
  1371                           	opt stack 0
  1372  000076                     ___flge@ff2:
  1373                           	opt stack 0
  1374  000076                     __tdiv_to_l_@f2:
  1375                           	opt stack 0
  1376  000076                     ___lldiv@divisor:
  1377                           	opt stack 0
  1378  000076                     ___llmod@divisor:
  1379                           	opt stack 0
  1380                           
  1381                           ; 4 bytes @ 0x16
  1382  000076                     	ds	1
  1383  000077                     ??_CANSetMask:
  1384  000077                     ??_CANSetFilter:
  1385  000077                     ___awmod@sign:
  1386                           	opt stack 0
  1387  000077                     ___flpack@sign:
  1388                           	opt stack 0
  1389                           
  1390                           ; 1 bytes @ 0x17
  1391  000077                     	ds	1
  1392  000078                     ??___flpack:
  1393  000078                     ?___awdiv:
  1394                           	opt stack 0
  1395  000078                     CANsendMessage@dataLength:
  1396                           	opt stack 0
  1397  000078                     ___lwdiv@counter:
  1398                           	opt stack 0
  1399  000078                     delay_ms@value_ms:
  1400                           	opt stack 0
  1401  000078                     ___awdiv@dividend:
  1402                           	opt stack 0
  1403                           
  1404                           ; 2 bytes @ 0x18
  1405  000078                     	ds	1
  1406  000079                     CANsendMessage@flags:
  1407                           	opt stack 0
  1408  000079                     utoa@buf:
  1409                           	opt stack 0
  1410                           
  1411                           ; 2 bytes @ 0x19
  1412  000079                     	ds	1
  1413  00007A                     ??__tdiv_to_l_:
  1414  00007A                     ??_CANsendMessage:
  1415  00007A                     ??___flge:
  1416  00007A                     LCD_send_command@D2:
  1417                           	opt stack 0
  1418  00007A                     ___llmod@counter:
  1419                           	opt stack 0
  1420  00007A                     ___awdiv@divisor:
  1421                           	opt stack 0
  1422  00007A                     __div_to_l_@quot:
  1423                           	opt stack 0
  1424  00007A                     ___lldiv@quotient:
  1425                           	opt stack 0
  1426                           
  1427                           ; 4 bytes @ 0x1A
  1428  00007A                     	ds	1
  1429  00007B                     CANSetMask@numBuffer:
  1430                           	opt stack 0
  1431  00007B                     CANSetFilter@numBuffer:
  1432                           	opt stack 0
  1433  00007B                     LCD_send_command@D1:
  1434                           	opt stack 0
  1435  00007B                     utoa@val:
  1436                           	opt stack 0
  1437                           
  1438                           ; 2 bytes @ 0x1B
  1439  00007B                     	ds	1
  1440  00007C                     ?___awtofl:
  1441                           	opt stack 0
  1442  00007C                     ?___lbtofl:
  1443                           	opt stack 0
  1444  00007C                     ?___lltofl:
  1445                           	opt stack 0
  1446  00007C                     ?___lwtofl:
  1447                           	opt stack 0
  1448  00007C                     LCD_send_command@D0:
  1449                           	opt stack 0
  1450  00007C                     ___awdiv@counter:
  1451                           	opt stack 0
  1452  00007C                     ___awtofl@c:
  1453                           	opt stack 0
  1454  00007C                     ___lwtofl@c:
  1455                           	opt stack 0
  1456  00007C                     CANSetMask@tamp:
  1457                           	opt stack 0
  1458  00007C                     CANSetFilter@tamp:
  1459                           	opt stack 0
  1460  00007C                     ___lltofl@c:
  1461                           	opt stack 0
  1462                           
  1463                           ; 4 bytes @ 0x1C
  1464  00007C                     	ds	1
  1465  00007D                     LCD_send_command@D3:
  1466                           	opt stack 0
  1467  00007D                     ___awdiv@sign:
  1468                           	opt stack 0
  1469  00007D                     utoa@base:
  1470                           	opt stack 0
  1471  00007D                     __tdiv_to_l_@quot:
  1472                           	opt stack 0
  1473                           
  1474                           ; 4 bytes @ 0x1D
  1475  00007D                     	ds	1
  1476  00007E                     LCD_shift_cursor@number_of_shift:
  1477                           	opt stack 0
  1478  00007E                     LCD_goto_line@line:
  1479                           	opt stack 0
  1480  00007E                     LCD_write_char@D3:
  1481                           	opt stack 0
  1482  00007E                     LCD_cursor@blinking:
  1483                           	opt stack 0
  1484  00007E                     __div_to_l_@cntr:
  1485                           	opt stack 0
  1486  00007E                     ___lldiv@counter:
  1487                           	opt stack 0
  1488  00007E                     ___awdiv@quotient:
  1489                           	opt stack 0
  1490  00007E                     CANsendMessage@tamp:
  1491                           	opt stack 0
  1492                           
  1493                           ; 4 bytes @ 0x1E
  1494  00007E                     	ds	1
  1495  00007F                     LCD_shift_cursor@shift:
  1496                           	opt stack 0
  1497  00007F                     LCD_write_char@D2:
  1498                           	opt stack 0
  1499  00007F                     LCD_cursor@active:
  1500                           	opt stack 0
  1501  00007F                     __div_to_l_@exp1:
  1502                           	opt stack 0
  1503  00007F                     utoa@v:
  1504                           	opt stack 0
  1505                           
  1506                           ; 2 bytes @ 0x1F
  1507  00007F                     	ds	1
  1508  000080                     ?___fldiv:
  1509                           	opt stack 0
  1510  000080                     CANInitialize@phaseSeg1:
  1511                           	opt stack 0
  1512  000080                     LCD_shift_cursor@i:
  1513                           	opt stack 0
  1514  000080                     LCD_write_char@D1:
  1515                           	opt stack 0
  1516  000080                     LCD_initialize@quartz_frequency:
  1517                           	opt stack 0
  1518  000080                     ___awtofl@sign:
  1519                           	opt stack 0
  1520  000080                     ___lbtofl@c:
  1521                           	opt stack 0
  1522  000080                     ___fldiv@f1:
  1523                           	opt stack 0
  1524                           
  1525                           ; 4 bytes @ 0x20
  1526  000080                     	ds	1
  1527  000081                     ?___flmul:
  1528                           	opt stack 0
  1529  000081                     CANInitialize@phaseSeg2:
  1530                           	opt stack 0
  1531  000081                     LCD_goto_xy@y:
  1532                           	opt stack 0
  1533  000081                     LCD_write_char@D0:
  1534                           	opt stack 0
  1535  000081                     __tdiv_to_l_@cntr:
  1536                           	opt stack 0
  1537  000081                     utoa@c:
  1538                           	opt stack 0
  1539  000081                     ___flmul@f1:
  1540                           	opt stack 0
  1541                           
  1542                           ; 4 bytes @ 0x21
  1543  000081                     	ds	1
  1544  000082                     CANInitialize@SJW:
  1545                           	opt stack 0
  1546  000082                     LCD_goto_xy@x:
  1547                           	opt stack 0
  1548  000082                     LCD_write_char@value:
  1549                           	opt stack 0
  1550  000082                     __tdiv_to_l_@exp1:
  1551                           	opt stack 0
  1552  000082                     itoa@buf:
  1553                           	opt stack 0
  1554                           
  1555                           ; 2 bytes @ 0x22
  1556  000082                     	ds	1
  1557  000083                     CANInitialize@BRP:
  1558                           	opt stack 0
  1559  000083                     LCD_write_message@buffer:
  1560                           	opt stack 0
  1561  000083                     LCD_write_string@buffer:
  1562                           	opt stack 0
  1563                           
  1564                           ; 2 bytes @ 0x23
  1565  000083                     	ds	1
  1566  000084                     CANInitialize@flags:
  1567                           	opt stack 0
  1568  000084                     itoa@val:
  1569                           	opt stack 0
  1570  000084                     ___fldiv@f2:
  1571                           	opt stack 0
  1572                           
  1573                           ; 4 bytes @ 0x24
  1574  000084                     	ds	1
  1575  000085                     ??_CANInitialize:
  1576  000085                     ___flmul@f2:
  1577                           	opt stack 0
  1578                           
  1579                           ; 4 bytes @ 0x25
  1580  000085                     	ds	1
  1581  000086                     itoa@base:
  1582                           	opt stack 0
  1583                           
  1584                           ; 2 bytes @ 0x26
  1585  000086                     	ds	2
  1586  000088                     itoa@cp:
  1587                           	opt stack 0
  1588  000088                     ___fldiv@f3:
  1589                           	opt stack 0
  1590                           
  1591                           ; 4 bytes @ 0x28
  1592  000088                     	ds	1
  1593  000089                     CANInitialize@propSeg:
  1594                           	opt stack 0
  1595  000089                     ___flmul@exp:
  1596                           	opt stack 0
  1597                           
  1598                           ; 1 bytes @ 0x29
  1599  000089                     	ds	1
  1600  00008A                     CANInitialize@FilterConfig1:
  1601                           	opt stack 0
  1602  00008A                     LCD_write_integer@value:
  1603                           	opt stack 0
  1604  00008A                     ___flmul@f3_as_product:
  1605                           	opt stack 0
  1606                           
  1607                           ; 4 bytes @ 0x2A
  1608  00008A                     	ds	1
  1609  00008B                     CANInitialize@FilterConfig2:
  1610                           	opt stack 0
  1611                           
  1612                           ; 1 bytes @ 0x2B
  1613  00008B                     	ds	1
  1614  00008C                     LCD_write_integer@number_of_digits:
  1615                           	opt stack 0
  1616  00008C                     ___fldiv@cntr:
  1617                           	opt stack 0
  1618                           
  1619                           ; 1 bytes @ 0x2C
  1620  00008C                     	ds	1
  1621  00008D                     LCD_write_integer@zero_cleaning:
  1622                           	opt stack 0
  1623  00008D                     ___fldiv@exp:
  1624                           	opt stack 0
  1625                           
  1626                           ; 1 bytes @ 0x2D
  1627  00008D                     	ds	1
  1628  00008E                     ??_LCD_write_integer:
  1629  00008E                     ___fldiv@sign:
  1630                           	opt stack 0
  1631  00008E                     ___flmul@cntr:
  1632                           	opt stack 0
  1633                           
  1634                           ; 1 bytes @ 0x2E
  1635  00008E                     	ds	1
  1636  00008F                     ___flmul@sign:
  1637                           	opt stack 0
  1638                           
  1639                           ; 1 bytes @ 0x2F
  1640  00008F                     	ds	1
  1641  000090                     ?_fround:
  1642                           	opt stack 0
  1643  000090                     ?_scale:
  1644                           	opt stack 0
  1645  000090                     ?___flneg:
  1646                           	opt stack 0
  1647  000090                     ___flneg@f1:
  1648                           	opt stack 0
  1649                           
  1650                           ; 4 bytes @ 0x30
  1651  000090                     	ds	3
  1652  000093                     LCD_write_integer@convertedInt:
  1653                           	opt stack 0
  1654                           
  1655                           ; 6 bytes @ 0x33
  1656  000093                     	ds	1
  1657  000094                     _fround$4231:
  1658                           	opt stack 0
  1659  000094                     _scale$4232:
  1660                           	opt stack 0
  1661                           
  1662                           ; 4 bytes @ 0x34
  1663  000094                     	ds	4
  1664  000098                     scale@scl:
  1665                           	opt stack 0
  1666  000098                     _fround$4230:
  1667                           	opt stack 0
  1668                           
  1669                           ; 4 bytes @ 0x38
  1670  000098                     	ds	1
  1671  000099                     LCD_write_integer@index:
  1672                           	opt stack 0
  1673                           
  1674                           ; 1 bytes @ 0x39
  1675  000099                     	ds	3
  1676  00009C                     fround@prec:
  1677                           	opt stack 0
  1678                           
  1679                           ; 1 bytes @ 0x3C
  1680  00009C                     	ds	1
  1681  00009D                     ?___fladd:
  1682                           	opt stack 0
  1683  00009D                     ___fladd@f1:
  1684                           	opt stack 0
  1685                           
  1686                           ; 4 bytes @ 0x3D
  1687  00009D                     	ds	4
  1688  0000A1                     ___fladd@f2:
  1689                           	opt stack 0
  1690                           
  1691                           ; 4 bytes @ 0x41
  1692  0000A1                     	ds	4
  1693  0000A5                     ??___fladd:
  1694                           
  1695                           ; 0 bytes @ 0x45
  1696  0000A5                     	ds	1
  1697  0000A6                     ___fladd@sign:
  1698                           	opt stack 0
  1699                           
  1700                           ; 1 bytes @ 0x46
  1701  0000A6                     	ds	1
  1702  0000A7                     ___fladd@exp2:
  1703                           	opt stack 0
  1704                           
  1705                           ; 1 bytes @ 0x47
  1706  0000A7                     	ds	1
  1707  0000A8                     ___fladd@exp1:
  1708                           	opt stack 0
  1709                           
  1710                           ; 1 bytes @ 0x48
  1711  0000A8                     	ds	1
  1712  0000A9                     ?___flsub:
  1713                           	opt stack 0
  1714  0000A9                     ?___fltol:
  1715                           	opt stack 0
  1716  0000A9                     ___flsub@f1:
  1717                           	opt stack 0
  1718  0000A9                     ___fltol@f1:
  1719                           	opt stack 0
  1720                           
  1721                           ; 4 bytes @ 0x49
  1722  0000A9                     	ds	4
  1723  0000AD                     ??___fltol:
  1724  0000AD                     ___flsub@f2:
  1725                           	opt stack 0
  1726                           
  1727                           ; 4 bytes @ 0x4D
  1728  0000AD                     	ds	4
  1729  0000B1                     ___fltol@sign1:
  1730                           	opt stack 0
  1731                           
  1732                           ; 1 bytes @ 0x51
  1733  0000B1                     	ds	1
  1734  0000B2                     ___fltol@exp1:
  1735                           	opt stack 0
  1736                           
  1737                           ; 1 bytes @ 0x52
  1738  0000B2                     	ds	1
  1739  0000B3                     ?_sprintf:
  1740                           	opt stack 0
  1741  0000B3                     sprintf@sp:
  1742                           	opt stack 0
  1743                           
  1744                           ; 2 bytes @ 0x53
  1745  0000B3                     	ds	2
  1746  0000B5                     sprintf@f:
  1747                           	opt stack 0
  1748                           
  1749                           ; 2 bytes @ 0x55
  1750  0000B5                     	ds	6
  1751  0000BB                     tblptru	equ	0xFF8
  1752                           tblptrh	equ	0xFF7
  1753                           tblptrl	equ	0xFF6
  1754                           tablat	equ	0xFF5
  1755                           postinc0	equ	0xFEE
  1756                           wreg	equ	0xFE8
  1757                           
  1758                           ; 0 bytes @ 0x5B
  1759                           
  1760                           	psect	cstackCOMRAM
  1761  000029                     __pcstackCOMRAM:
  1762                           	opt stack 0
  1763  000029                     ??_ISR_bassa:
  1764  000029                     
  1765                           ; 1 bytes @ 0x0
  1766  000029                     	ds	17
  1767  00003A                     _CANisRxReady$3253:
  1768                           	opt stack 0
  1769  00003A                     i2_CANisTxReady$3251:
  1770                           	opt stack 0
  1771  00003A                     CANreceiveMessage@msg:
  1772                           	opt stack 0
  1773  00003A                     i2CANsendMessage@identifier:
  1774                           	opt stack 0
  1775                           
  1776                           ; 4 bytes @ 0x11
  1777  00003A                     	ds	2
  1778  00003C                     ??_CANreceiveMessage:
  1779                           
  1780                           ; 0 bytes @ 0x13
  1781  00003C                     	ds	2
  1782  00003E                     i2CANsendMessage@data:
  1783                           	opt stack 0
  1784                           
  1785                           ; 2 bytes @ 0x15
  1786  00003E                     	ds	2
  1787  000040                     i2CANsendMessage@dataLength:
  1788                           	opt stack 0
  1789                           
  1790                           ; 1 bytes @ 0x17
  1791  000040                     	ds	1
  1792  000041                     i2CANsendMessage@flags:
  1793                           	opt stack 0
  1794                           
  1795                           ; 1 bytes @ 0x18
  1796  000041                     	ds	1
  1797  000042                     ??i2_CANsendMessage:
  1798                           
  1799                           ; 0 bytes @ 0x19
  1800  000042                     	ds	2
  1801  000044                     CANreceiveMessage@error:
  1802                           	opt stack 0
  1803                           
  1804                           ; 1 bytes @ 0x1B
  1805  000044                     	ds	1
  1806  000045                     CANreceiveMessage@tamp:
  1807                           	opt stack 0
  1808                           
  1809                           ; 1 bytes @ 0x1C
  1810  000045                     	ds	1
  1811  000046                     i2CANsendMessage@tamp:
  1812                           	opt stack 0
  1813                           
  1814                           ; 4 bytes @ 0x1D
  1815  000046                     	ds	4
  1816                           tblptru	equ	0xFF8
  1817                           tblptrh	equ	0xFF7
  1818                           tblptrl	equ	0xFF6
  1819                           tablat	equ	0xFF5
  1820                           postinc0	equ	0xFEE
  1821                           wreg	equ	0xFE8
  1822                           
  1823 ;;
  1824 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1825 ;;
  1826 ;; *************** function _main *****************
  1827 ;; Defined at:
  1828 ;;		line 214 in file "RemoteCan.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;		None               void
  1835 ;; Registers used:
  1836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1844 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1845 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1846 ;;Total ram usage:        8 bytes
  1847 ;; Hardware stack levels required when called:   11
  1848 ;; This function calls:
  1849 ;;		_CAN_Tx
  1850 ;;		_CANisTxReady
  1851 ;;		_CANsendMessage
  1852 ;;		_F1_Button_Polling
  1853 ;;		_F2_Button_Polling
  1854 ;;		_Joystick_Polling
  1855 ;;		_LCD_End
  1856 ;;		_LCD_Error
  1857 ;;		_LCD_Gap
  1858 ;;		_LCD_Handler
  1859 ;;		_LCD_Park
  1860 ;;		_LCD_Parking
  1861 ;;		_LCD_goto_line
  1862 ;;		_LCD_initialize
  1863 ;;		_LCD_write_message
  1864 ;;		_PWR_Button_Polling
  1865 ;;		___awdiv
  1866 ;;		___awtofl
  1867 ;;		___fladd
  1868 ;;		___flmul
  1869 ;;		___flneg
  1870 ;;		___fltol
  1871 ;;		___lbtofl
  1872 ;;		_board_initialization
  1873 ;;		_delay_ms
  1874 ;; This function is called by:
  1875 ;;		Startup code after reset
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text0
  1880  011436                     __ptext0:
  1881                           	opt stack 0
  1882  011436                     _main:
  1883                           	opt stack 20
  1884                           
  1885                           ;RemoteCan.c: 215: board_initialization();
  1886                           
  1887                           ;incstack = 0
  1888  011436  EC33  F0AB         	call	_board_initialization	;wreg free
  1889                           
  1890                           ;RemoteCan.c: 217: JoystickConstants[0] = 0.703;
  1891  01143A  0ECF               	movlw	207
  1892  01143C  0100               	movlb	0	; () banked
  1893  01143E  6FBB               	movwf	_JoystickConstants& (0+255),b	;volatile
  1894  011440  0EF7               	movlw	247
  1895  011442  6FBC               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1896  011444  0E33               	movlw	51
  1897  011446  6FBD               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1898  011448  0E3F               	movlw	63
  1899  01144A  6FBE               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;RemoteCan.c: 218: JoystickConstants[1] = 20;
  1903  01144C  0E00               	movlw	0
  1904  01144E  0100               	movlb	0	; () banked
  1905  011450  6FBF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1906  011452  0E00               	movlw	0
  1907  011454  6FC0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1908  011456  0EA0               	movlw	160
  1909  011458  6FC1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1910  01145A  0E41               	movlw	65
  1911  01145C  6FC2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;RemoteCan.c: 220: data_brake [1] = 0;
  1915  01145E  0E00               	movlw	0
  1916  011460  6E22               	movwf	_data_brake+1,c
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;RemoteCan.c: 222: if (PORTBbits.RB1 == 1) {
  1920  011462  A281               	btfss	3969,1,c	;volatile
  1921  011464  D002               	goto	l8660
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;RemoteCan.c: 223: LCD_4TH_ROW_MODE = 1;
  1925  011466  864A               	bsf	_LCD_4TH_ROW_MODE/(0+8),_LCD_4TH_ROW_MODE& (0+7),c	;volatile
  1926                           
  1927                           ; BSR set to: 0
  1928  011468  D000               	goto	l8660
  1929  01146A                     l8660:
  1930                           
  1931                           ;RemoteCan.c: 229: PWR_Button_Polling();
  1932  01146A  EC0C  F0B0         	call	_PWR_Button_Polling	;wreg free
  1933                           
  1934                           ;RemoteCan.c: 230: F1_Button_Polling();
  1935  01146E  EC22  F0B0         	call	_F1_Button_Polling	;wreg free
  1936                           
  1937                           ;RemoteCan.c: 231: F2_Button_Polling();
  1938  011472  EC17  F0B0         	call	_F2_Button_Polling	;wreg free
  1939                           
  1940                           ;RemoteCan.c: 234: if (power_switch == 0) {
  1941  011476  B64B               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1942  011478  D08B               	goto	l814
  1943                           
  1944                           ;RemoteCan.c: 235: dir = 1;
  1945  01147A  0E01               	movlw	1
  1946  01147C  0100               	movlb	0	; () banked
  1947  01147E  6FE8               	movwf	_dir& (0+255),b	;volatile
  1948                           
  1949                           ;RemoteCan.c: 236: set_speed = 0;
  1950  011480  0E00               	movlw	0
  1951  011482  0100               	movlb	0	; () banked
  1952  011484  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1953  011486  0E00               	movlw	0
  1954  011488  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  1955                           
  1956                           ;RemoteCan.c: 237: data_steering [0] = 90;
  1957  01148A  0E5A               	movlw	90
  1958  01148C  0101               	movlb	1	; () banked
  1959  01148E  6F26               	movwf	_data_steering& (0+255),b
  1960                           
  1961                           ;RemoteCan.c: 238: data_brake [0] = 0b00000000;
  1962  011490  0E00               	movlw	0
  1963  011492  6E21               	movwf	_data_brake,c
  1964                           
  1965                           ; BSR set to: 1
  1966                           ;RemoteCan.c: 239: CAN_Tx();
  1967  011494  EC79  F0AA         	call	_CAN_Tx	;wreg free
  1968                           
  1969                           ;RemoteCan.c: 240: PORTDbits.RD6 = 0;
  1970  011498  9C83               	bcf	3971,6,c	;volatile
  1971                           
  1972                           ;RemoteCan.c: 241: PORTDbits.RD5 = 0;
  1973  01149A  9A83               	bcf	3971,5,c	;volatile
  1974                           
  1975                           ;RemoteCan.c: 242: LCD_initialize(16);
  1976  01149C  0E10               	movlw	16
  1977  01149E  ECC8  F0A5         	call	_LCD_initialize
  1978                           
  1979                           ;RemoteCan.c: 243: LCD_goto_line(1);
  1980  0114A2  0E01               	movlw	1
  1981  0114A4  ECD5  F0A8         	call	_LCD_goto_line
  1982                           
  1983                           ;RemoteCan.c: 244: LCD_write_message("====================");
  1984  0114A8  0E6A               	movlw	low STR_1
  1985  0114AA  0100               	movlb	0	; () banked
  1986  0114AC  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1987  0114AE  0EFF               	movlw	high STR_1
  1988  0114B0  0100               	movlb	0	; () banked
  1989  0114B2  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1990  0114B4  EC07  F0AF         	call	_LCD_write_message	;wreg free
  1991                           
  1992                           ;RemoteCan.c: 245: LCD_goto_line(2);
  1993  0114B8  0E02               	movlw	2
  1994  0114BA  ECD5  F0A8         	call	_LCD_goto_line
  1995                           
  1996                           ;RemoteCan.c: 246: LCD_write_message("==> VEHICLE  OFF <==");
  1997  0114BE  0E40               	movlw	low STR_2
  1998  0114C0  0100               	movlb	0	; () banked
  1999  0114C2  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  2000  0114C4  0EFF               	movlw	high STR_2
  2001  0114C6  0100               	movlb	0	; () banked
  2002  0114C8  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2003  0114CA  EC07  F0AF         	call	_LCD_write_message	;wreg free
  2004                           
  2005                           ;RemoteCan.c: 247: LCD_goto_line(3);
  2006  0114CE  0E03               	movlw	3
  2007  0114D0  ECD5  F0A8         	call	_LCD_goto_line
  2008                           
  2009                           ;RemoteCan.c: 248: LCD_write_message("  Press the button  ");
  2010  0114D4  0E44               	movlw	low STR_3
  2011  0114D6  0100               	movlb	0	; () banked
  2012  0114D8  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  2013  0114DA  0EFE               	movlw	high STR_3
  2014  0114DC  0100               	movlb	0	; () banked
  2015  0114DE  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2016  0114E0  EC07  F0AF         	call	_LCD_write_message	;wreg free
  2017                           
  2018                           ;RemoteCan.c: 249: LCD_goto_line(4);
  2019  0114E4  0E04               	movlw	4
  2020  0114E6  ECD5  F0A8         	call	_LCD_goto_line
  2021                           
  2022                           ;RemoteCan.c: 250: LCD_write_message("====================");
  2023  0114EA  0E6A               	movlw	low STR_1
  2024  0114EC  0100               	movlb	0	; () banked
  2025  0114EE  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  2026  0114F0  0EFF               	movlw	high STR_1
  2027  0114F2  0100               	movlb	0	; () banked
  2028  0114F4  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2029  0114F6  EC07  F0AF         	call	_LCD_write_message	;wreg free
  2030                           
  2031                           ;RemoteCan.c: 251: while (power_switch == 0) {
  2032  0114FA  D046               	goto	l8698
  2033  0114FC                     l8690:
  2034                           
  2035                           ;RemoteCan.c: 252: if ((time_counter - pr_time_1) >= 30) {
  2036  0114FC  C0CB  F151         	movff	_pr_time_1,??_main	;volatile
  2037  011500  C0CC  F152         	movff	_pr_time_1+1,??_main+1	;volatile
  2038  011504  C0CD  F153         	movff	_pr_time_1+2,??_main+2	;volatile
  2039  011508  C0CE  F154         	movff	_pr_time_1+3,??_main+3	;volatile
  2040  01150C  0101               	movlb	1	; () banked
  2041  01150E  1F51               	comf	??_main& (0+255),f,b
  2042  011510  1F52               	comf	(??_main+1)& (0+255),f,b
  2043  011512  1F53               	comf	(??_main+2)& (0+255),f,b
  2044  011514  1F54               	comf	(??_main+3)& (0+255),f,b
  2045  011516  2B51               	incf	??_main& (0+255),f,b
  2046  011518  0E00               	movlw	0
  2047  01151A  2352               	addwfc	(??_main+1)& (0+255),f,b
  2048  01151C  2353               	addwfc	(??_main+2)& (0+255),f,b
  2049  01151E  2354               	addwfc	(??_main+3)& (0+255),f,b
  2050  011520  5005               	movf	_time_counter,w,c	;volatile
  2051  011522  0101               	movlb	1	; () banked
  2052  011524  2551               	addwf	??_main& (0+255),w,b
  2053  011526  0101               	movlb	1	; () banked
  2054  011528  6F55               	movwf	(??_main+4)& (0+255),b
  2055  01152A  5006               	movf	_time_counter+1,w,c	;volatile
  2056  01152C  0101               	movlb	1	; () banked
  2057  01152E  2152               	addwfc	(??_main+1)& (0+255),w,b
  2058  011530  0101               	movlb	1	; () banked
  2059  011532  6F56               	movwf	(??_main+5)& (0+255),b
  2060  011534  5007               	movf	_time_counter+2,w,c	;volatile
  2061  011536  0101               	movlb	1	; () banked
  2062  011538  2153               	addwfc	(??_main+2)& (0+255),w,b
  2063  01153A  0101               	movlb	1	; () banked
  2064  01153C  6F57               	movwf	(??_main+6)& (0+255),b
  2065  01153E  5008               	movf	_time_counter+3,w,c	;volatile
  2066  011540  0101               	movlb	1	; () banked
  2067  011542  2154               	addwfc	(??_main+3)& (0+255),w,b
  2068  011544  0101               	movlb	1	; () banked
  2069  011546  6F58               	movwf	(??_main+7)& (0+255),b
  2070  011548  0101               	movlb	1	; () banked
  2071  01154A  5158               	movf	(??_main+7)& (0+255),w,b
  2072  01154C  0101               	movlb	1	; () banked
  2073  01154E  1157               	iorwf	(??_main+6)& (0+255),w,b
  2074  011550  0101               	movlb	1	; () banked
  2075  011552  1156               	iorwf	(??_main+5)& (0+255),w,b
  2076  011554  E105               	bnz	u10950
  2077  011556  0E1E               	movlw	30
  2078  011558  0101               	movlb	1	; () banked
  2079  01155A  5D55               	subwf	(??_main+4)& (0+255),w,b
  2080  01155C  A0D8               	btfss	status,0,c
  2081  01155E  D00A               	goto	l8694
  2082  011560                     u10950:
  2083                           
  2084                           ; BSR set to: 1
  2085                           ;RemoteCan.c: 253: pr_time_1 = time_counter;
  2086  011560  C005  F0CB         	movff	_time_counter,_pr_time_1	;volatile
  2087  011564  C006  F0CC         	movff	_time_counter+1,_pr_time_1+1	;volatile
  2088  011568  C007  F0CD         	movff	_time_counter+2,_pr_time_1+2	;volatile
  2089  01156C  C008  F0CE         	movff	_time_counter+3,_pr_time_1+3	;volatile
  2090                           
  2091                           ;RemoteCan.c: 254: PORTDbits.RD7 = ~PORTDbits.RD7;
  2092  011570  7E83               	btg	3971,7,c	;volatile
  2093  011572  D000               	goto	l8694
  2094  011574                     l8694:
  2095                           
  2096                           ; BSR set to: 1
  2097                           ;RemoteCan.c: 255: }
  2098                           ;RemoteCan.c: 256: PWR_Button_Polling();
  2099  011574  EC0C  F0B0         	call	_PWR_Button_Polling	;wreg free
  2100                           
  2101                           ;RemoteCan.c: 257: delay_ms(10);
  2102  011578  0E00               	movlw	0
  2103  01157A  0100               	movlb	0	; () banked
  2104  01157C  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2105  01157E  0E0A               	movlw	10
  2106  011580  6F78               	movwf	delay_ms@value_ms& (0+255),b
  2107  011582  ECB3  F0AE         	call	_delay_ms	;wreg free
  2108  011586  D000               	goto	l8698
  2109  011588                     l8698:
  2110  011588  A64B               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  2111  01158A  D7B8               	goto	l8690
  2112                           
  2113                           ;RemoteCan.c: 258: }
  2114                           ;RemoteCan.c: 259: PORTDbits.RD7 = 0;
  2115  01158C  9E83               	bcf	3971,7,c	;volatile
  2116                           
  2117                           ;RemoteCan.c: 260: display_refresh = 1;
  2118  01158E  8E4A               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  2119  011590                     l814:
  2120                           
  2121                           ;RemoteCan.c: 261: }
  2122                           ;RemoteCan.c: 264: if (PORTAbits.RA2 == 1) {
  2123  011590  A480               	btfss	3968,2,c	;volatile
  2124  011592  D004               	goto	l819
  2125                           
  2126                           ;RemoteCan.c: 265: switch_position = 0;
  2127  011594  0E00               	movlw	0
  2128  011596  0100               	movlb	0	; () banked
  2129  011598  6FEC               	movwf	_switch_position& (0+255),b	;volatile
  2130                           
  2131                           ;RemoteCan.c: 266: } else {
  2132  01159A  D00E               	goto	l8706
  2133  01159C                     l819:
  2134                           
  2135                           ;RemoteCan.c: 267: if (PORTAbits.RA3 == 0) {
  2136  01159C  B680               	btfsc	3968,3,c	;volatile
  2137  01159E  D005               	goto	l8704
  2138                           
  2139                           ;RemoteCan.c: 268: switch_position = 1;
  2140  0115A0  0E01               	movlw	1
  2141  0115A2  0100               	movlb	0	; () banked
  2142  0115A4  6FEC               	movwf	_switch_position& (0+255),b	;volatile
  2143                           
  2144                           ;RemoteCan.c: 269: dir = 1;
  2145  0115A6  0E01               	movlw	1
  2146  0115A8  D004               	goto	L1
  2147  0115AA                     l8704:
  2148                           
  2149                           ;RemoteCan.c: 271: switch_position = 2;
  2150  0115AA  0E02               	movlw	2
  2151  0115AC  0100               	movlb	0	; () banked
  2152  0115AE  6FEC               	movwf	_switch_position& (0+255),b	;volatile
  2153                           
  2154                           ;RemoteCan.c: 272: dir = 0;
  2155  0115B0  0E00               	movlw	0
  2156  0115B2                     L1:
  2157  0115B2  0100               	movlb	0	; () banked
  2158  0115B4  6FE8               	movwf	_dir& (0+255),b	;volatile
  2159                           
  2160                           ; BSR set to: 0
  2161  0115B6  D000               	goto	l8706
  2162  0115B8                     l8706:
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;RemoteCan.c: 273: }
  2166                           ;RemoteCan.c: 274: }
  2167                           ;RemoteCan.c: 277: if (F1_switch == 1) {
  2168  0115B8  A24A               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  2169  0115BA  D0A9               	goto	l823
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;RemoteCan.c: 278: y = 0;
  2173  0115BC  984C               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  2174                           
  2175                           ;RemoteCan.c: 279: if ((x == 0)&&(F2_switch == 0)) {
  2176  0115BE  A64C               	btfss	_x/(0+8),_x& (0+7),c	;volatile
  2177                           
  2178                           ; BSR set to: 0
  2179  0115C0  B44A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2180  0115C2  D02F               	goto	l8724
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;RemoteCan.c: 280: space_available = 0;
  2184  0115C4  9A4B               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;RemoteCan.c: 281: parking_state = 1;
  2188  0115C6  0E01               	movlw	1
  2189  0115C8  0100               	movlb	0	; () banked
  2190  0115CA  6FEA               	movwf	_parking_state& (0+255),b	;volatile
  2191                           
  2192                           ;RemoteCan.c: 282: JoystickConstants[1] = 5;
  2193  0115CC  0E00               	movlw	0
  2194  0115CE  0100               	movlb	0	; () banked
  2195  0115D0  6FBF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2196  0115D2  0E00               	movlw	0
  2197  0115D4  6FC0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2198  0115D6  0EA0               	movlw	160
  2199  0115D8  6FC1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2200  0115DA  0E40               	movlw	64
  2201  0115DC  6FC2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2202                           
  2203                           ; BSR set to: 0
  2204                           
  2205                           ;RemoteCan.c: 283: while (!CANisTxReady());
  2206  0115DE  D000               	goto	l8716
  2207  0115E0                     l8716:
  2208  0115E0  ECB2  F0AF         	call	_CANisTxReady	;wreg free
  2209  0115E4  0900               	iorlw	0
  2210  0115E6  B4D8               	btfsc	status,2,c
  2211  0115E8  D7FB               	goto	l8716
  2212                           
  2213                           ;RemoteCan.c: 284: park_assist_state[0] = 0b00000001;
  2214  0115EA  0E01               	movlw	1
  2215  0115EC  0101               	movlb	1	; () banked
  2216  0115EE  6F2E               	movwf	_park_assist_state& (0+255),b
  2217                           
  2218                           ; BSR set to: 1
  2219                           ;RemoteCan.c: 285: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2220  0115F0  0E0C               	movlw	12
  2221  0115F2  0100               	movlb	0	; () banked
  2222  0115F4  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  2223  0115F6  0E00               	movlw	0
  2224  0115F8  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2225  0115FA  0E00               	movlw	0
  2226  0115FC  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2227  0115FE  0E00               	movlw	0
  2228  011600  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2229  011602  0E2E               	movlw	low _park_assist_state
  2230  011604  0100               	movlb	0	; () banked
  2231  011606  6F76               	movwf	CANsendMessage@data& (0+255),b
  2232  011608  0E01               	movlw	high _park_assist_state
  2233  01160A  0100               	movlb	0	; () banked
  2234  01160C  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  2235  01160E  0E08               	movlw	8
  2236  011610  0100               	movlb	0	; () banked
  2237  011612  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  2238  011614  0EBC               	movlw	188
  2239  011616  0100               	movlb	0	; () banked
  2240  011618  6F79               	movwf	CANsendMessage@flags& (0+255),b
  2241  01161A  EC48  F08E         	call	_CANsendMessage	;wreg free
  2242                           
  2243                           ;RemoteCan.c: 286: x = 1;
  2244  01161E  864C               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  2245  011620  D000               	goto	l8724
  2246  011622                     l8724:
  2247                           
  2248                           ;RemoteCan.c: 287: }
  2249                           ;RemoteCan.c: 289: if ((F2_switch == 1)&&(space_available == 1)&&(space_gap_reached == 1
      +                          )) {
  2250  011622  B44A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2251  011624  AA4B               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2252  011626  D02A               	goto	l828
  2253  011628  AC4B               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2254  01162A  D028               	goto	l828
  2255                           
  2256                           ;RemoteCan.c: 290: if (z == 0) {
  2257  01162C  BA4C               	btfsc	_z/(0+8),_z& (0+7),c	;volatile
  2258  01162E  D028               	goto	l8742
  2259                           
  2260                           ;RemoteCan.c: 291: parking_message_ID = 4;
  2261  011630  0E04               	movlw	4
  2262  011632  0100               	movlb	0	; () banked
  2263  011634  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
  2264                           
  2265                           ;RemoteCan.c: 292: parking_state = 2;
  2266  011636  0E02               	movlw	2
  2267  011638  0100               	movlb	0	; () banked
  2268  01163A  6FEA               	movwf	_parking_state& (0+255),b	;volatile
  2269                           
  2270                           ; BSR set to: 0
  2271                           
  2272                           ;RemoteCan.c: 293: while (!CANisTxReady());
  2273  01163C  D000               	goto	l8734
  2274  01163E                     l8734:
  2275  01163E  ECB2  F0AF         	call	_CANisTxReady	;wreg free
  2276  011642  0900               	iorlw	0
  2277  011644  B4D8               	btfsc	status,2,c
  2278  011646  D7FB               	goto	l8734
  2279                           
  2280                           ;RemoteCan.c: 294: CANsendMessage(0b00000001110, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  2281  011648  0E0E               	movlw	14
  2282  01164A  0100               	movlb	0	; () banked
  2283  01164C  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  2284  01164E  0E00               	movlw	0
  2285  011650  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2286  011652  0E00               	movlw	0
  2287  011654  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2288  011656  0E00               	movlw	0
  2289  011658  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2290  01165A  0E16               	movlw	low _data
  2291  01165C  0100               	movlb	0	; () banked
  2292  01165E  6F76               	movwf	CANsendMessage@data& (0+255),b
  2293  011660  0E01               	movlw	high _data
  2294  011662  0100               	movlb	0	; () banked
  2295  011664  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  2296  011666  0E08               	movlw	8
  2297  011668  0100               	movlb	0	; () banked
  2298  01166A  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  2299  01166C  0EBC               	movlw	188
  2300  01166E  0100               	movlb	0	; () banked
  2301  011670  6F79               	movwf	CANsendMessage@flags& (0+255),b
  2302  011672  EC48  F08E         	call	_CANsendMessage	;wreg free
  2303                           
  2304                           ;RemoteCan.c: 295: x = 0;
  2305  011676  964C               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2306                           
  2307                           ;RemoteCan.c: 296: z = 1;
  2308  011678  8A4C               	bsf	_z/(0+8),_z& (0+7),c	;volatile
  2309                           
  2310                           ;RemoteCan.c: 297: }
  2311                           ;RemoteCan.c: 298: } else {
  2312  01167A  D002               	goto	l8742
  2313  01167C                     l828:
  2314                           
  2315                           ;RemoteCan.c: 299: z = 0;
  2316  01167C  9A4C               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2317  01167E  D000               	goto	l8742
  2318  011680                     l8742:
  2319                           
  2320                           ;RemoteCan.c: 300: }
  2321                           ;RemoteCan.c: 302: if ((time_counter - pr_time_5) >= 30) {
  2322  011680  C0D7  F151         	movff	_pr_time_5,??_main	;volatile
  2323  011684  C0D8  F152         	movff	_pr_time_5+1,??_main+1	;volatile
  2324  011688  C0D9  F153         	movff	_pr_time_5+2,??_main+2	;volatile
  2325  01168C  C0DA  F154         	movff	_pr_time_5+3,??_main+3	;volatile
  2326  011690  0101               	movlb	1	; () banked
  2327  011692  1F51               	comf	??_main& (0+255),f,b
  2328  011694  1F52               	comf	(??_main+1)& (0+255),f,b
  2329  011696  1F53               	comf	(??_main+2)& (0+255),f,b
  2330  011698  1F54               	comf	(??_main+3)& (0+255),f,b
  2331  01169A  2B51               	incf	??_main& (0+255),f,b
  2332  01169C  0E00               	movlw	0
  2333  01169E  2352               	addwfc	(??_main+1)& (0+255),f,b
  2334  0116A0  2353               	addwfc	(??_main+2)& (0+255),f,b
  2335  0116A2  2354               	addwfc	(??_main+3)& (0+255),f,b
  2336  0116A4  5005               	movf	_time_counter,w,c	;volatile
  2337  0116A6  0101               	movlb	1	; () banked
  2338  0116A8  2551               	addwf	??_main& (0+255),w,b
  2339  0116AA  0101               	movlb	1	; () banked
  2340  0116AC  6F55               	movwf	(??_main+4)& (0+255),b
  2341  0116AE  5006               	movf	_time_counter+1,w,c	;volatile
  2342  0116B0  0101               	movlb	1	; () banked
  2343  0116B2  2152               	addwfc	(??_main+1)& (0+255),w,b
  2344  0116B4  0101               	movlb	1	; () banked
  2345  0116B6  6F56               	movwf	(??_main+5)& (0+255),b
  2346  0116B8  5007               	movf	_time_counter+2,w,c	;volatile
  2347  0116BA  0101               	movlb	1	; () banked
  2348  0116BC  2153               	addwfc	(??_main+2)& (0+255),w,b
  2349  0116BE  0101               	movlb	1	; () banked
  2350  0116C0  6F57               	movwf	(??_main+6)& (0+255),b
  2351  0116C2  5008               	movf	_time_counter+3,w,c	;volatile
  2352  0116C4  0101               	movlb	1	; () banked
  2353  0116C6  2154               	addwfc	(??_main+3)& (0+255),w,b
  2354  0116C8  0101               	movlb	1	; () banked
  2355  0116CA  6F58               	movwf	(??_main+7)& (0+255),b
  2356  0116CC  0101               	movlb	1	; () banked
  2357  0116CE  5158               	movf	(??_main+7)& (0+255),w,b
  2358  0116D0  0101               	movlb	1	; () banked
  2359  0116D2  1157               	iorwf	(??_main+6)& (0+255),w,b
  2360  0116D4  0101               	movlb	1	; () banked
  2361  0116D6  1156               	iorwf	(??_main+5)& (0+255),w,b
  2362  0116D8  E105               	bnz	u11080
  2363  0116DA  0E1E               	movlw	30
  2364  0116DC  0101               	movlb	1	; () banked
  2365  0116DE  5D55               	subwf	(??_main+4)& (0+255),w,b
  2366  0116E0  A0D8               	btfss	status,0,c
  2367  0116E2  D050               	goto	l8766
  2368  0116E4                     u11080:
  2369                           
  2370                           ; BSR set to: 1
  2371                           ;RemoteCan.c: 303: pr_time_5 = time_counter;
  2372  0116E4  C005  F0D7         	movff	_time_counter,_pr_time_5	;volatile
  2373  0116E8  C006  F0D8         	movff	_time_counter+1,_pr_time_5+1	;volatile
  2374  0116EC  C007  F0D9         	movff	_time_counter+2,_pr_time_5+2	;volatile
  2375  0116F0  C008  F0DA         	movff	_time_counter+3,_pr_time_5+3	;volatile
  2376                           
  2377                           ;RemoteCan.c: 304: if ((space_available == 1)&&(space_gap_reached == 1)) {
  2378  0116F4  BA4B               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2379                           
  2380                           ; BSR set to: 1
  2381  0116F6  AC4B               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2382  0116F8  D007               	goto	l835
  2383                           
  2384                           ; BSR set to: 1
  2385                           ;RemoteCan.c: 305: PORTDbits.RD6 = 1;
  2386  0116FA  8C83               	bsf	3971,6,c	;volatile
  2387                           
  2388                           ;RemoteCan.c: 306: if (F2_switch == 0) {
  2389  0116FC  B44A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2390  0116FE  D002               	goto	l836
  2391                           
  2392                           ; BSR set to: 1
  2393                           ;RemoteCan.c: 307: PORTDbits.RD5 = ~PORTDbits.RD5;
  2394  011700  7A83               	btg	3971,5,c	;volatile
  2395                           
  2396                           ;RemoteCan.c: 308: } else {
  2397  011702  D040               	goto	l8766
  2398  011704                     l836:
  2399                           
  2400                           ; BSR set to: 1
  2401                           ;RemoteCan.c: 309: PORTDbits.RD5 = 1;
  2402  011704  8A83               	bsf	3971,5,c	;volatile
  2403                           
  2404                           ; BSR set to: 1
  2405                           ;RemoteCan.c: 310: }
  2406                           ;RemoteCan.c: 311: } else {
  2407  011706  D03E               	goto	l8766
  2408  011708                     l835:
  2409                           
  2410                           ; BSR set to: 1
  2411                           ;RemoteCan.c: 312: PORTDbits.RD6 = ~PORTDbits.RD6;
  2412  011708  7C83               	btg	3971,6,c	;volatile
  2413  01170A  D03A               	goto	l8764
  2414                           
  2415                           ; BSR set to: 1
  2416                           ;RemoteCan.c: 314: }
  2417                           ;RemoteCan.c: 315: }
  2418                           ;RemoteCan.c: 316: } else {
  2419                           
  2420                           ; BSR set to: 1
  2421                           
  2422                           ;RemoteCan.c: 313: PORTDbits.RD5 = 0;
  2423  01170C  D03B               	goto	l8766
  2424  01170E                     l823:
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;RemoteCan.c: 317: x = 0;
  2428  01170E  964C               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2429                           
  2430                           ;RemoteCan.c: 318: z = 0;
  2431  011710  9A4C               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2432                           
  2433                           ;RemoteCan.c: 319: parking_message_E = 0;
  2434  011712  944B               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  2435                           
  2436                           ;RemoteCan.c: 320: F2_switch = 0;
  2437  011714  944A               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2438                           
  2439                           ;RemoteCan.c: 321: space_available = 0;
  2440  011716  9A4B               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2441                           
  2442                           ;RemoteCan.c: 322: space_gap_reached = 0;
  2443  011718  9C4B               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2444                           
  2445                           ;RemoteCan.c: 323: PORTDbits.RD5 = 0;
  2446  01171A  9A83               	bcf	3971,5,c	;volatile
  2447                           
  2448                           ;RemoteCan.c: 324: PORTDbits.RD6 = 0;
  2449  01171C  9C83               	bcf	3971,6,c	;volatile
  2450                           
  2451                           ;RemoteCan.c: 325: if (y == 0) {
  2452  01171E  B84C               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2453  011720  D02E               	goto	l8762
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;RemoteCan.c: 326: parking_state = 0;
  2457  011722  0E00               	movlw	0
  2458  011724  0100               	movlb	0	; () banked
  2459  011726  6FEA               	movwf	_parking_state& (0+255),b	;volatile
  2460                           
  2461                           ;RemoteCan.c: 327: JoystickConstants[1] = 20;
  2462  011728  0E00               	movlw	0
  2463  01172A  0100               	movlb	0	; () banked
  2464  01172C  6FBF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2465  01172E  0E00               	movlw	0
  2466  011730  6FC0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2467  011732  0EA0               	movlw	160
  2468  011734  6FC1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2469  011736  0E41               	movlw	65
  2470  011738  6FC2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2471                           
  2472                           ; BSR set to: 0
  2473                           
  2474                           ;RemoteCan.c: 328: while (!CANisTxReady());
  2475  01173A  D000               	goto	l8754
  2476  01173C                     l8754:
  2477  01173C  ECB2  F0AF         	call	_CANisTxReady	;wreg free
  2478  011740  0900               	iorlw	0
  2479  011742  B4D8               	btfsc	status,2,c
  2480  011744  D7FB               	goto	l8754
  2481                           
  2482                           ;RemoteCan.c: 329: park_assist_state[0] = 0b00000000;
  2483  011746  0E00               	movlw	0
  2484  011748  0101               	movlb	1	; () banked
  2485  01174A  6F2E               	movwf	_park_assist_state& (0+255),b
  2486                           
  2487                           ; BSR set to: 1
  2488                           ;RemoteCan.c: 330: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2489  01174C  0E0C               	movlw	12
  2490  01174E  0100               	movlb	0	; () banked
  2491  011750  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  2492  011752  0E00               	movlw	0
  2493  011754  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2494  011756  0E00               	movlw	0
  2495  011758  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2496  01175A  0E00               	movlw	0
  2497  01175C  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2498  01175E  0E2E               	movlw	low _park_assist_state
  2499  011760  0100               	movlb	0	; () banked
  2500  011762  6F76               	movwf	CANsendMessage@data& (0+255),b
  2501  011764  0E01               	movlw	high _park_assist_state
  2502  011766  0100               	movlb	0	; () banked
  2503  011768  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  2504  01176A  0E08               	movlw	8
  2505  01176C  0100               	movlb	0	; () banked
  2506  01176E  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  2507  011770  0EBC               	movlw	188
  2508  011772  0100               	movlb	0	; () banked
  2509  011774  6F79               	movwf	CANsendMessage@flags& (0+255),b
  2510  011776  EC48  F08E         	call	_CANsendMessage	;wreg free
  2511                           
  2512                           ;RemoteCan.c: 331: y = 1;
  2513  01177A  884C               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2514  01177C  D000               	goto	l8762
  2515  01177E                     l8762:
  2516                           
  2517                           ;RemoteCan.c: 332: }
  2518                           ;RemoteCan.c: 333: PORTDbits.RD6 = 0;
  2519  01177E  9C83               	bcf	3971,6,c	;volatile
  2520  011780                     l8764:
  2521                           
  2522                           ;RemoteCan.c: 334: PORTDbits.RD5 = 0;
  2523  011780  9A83               	bcf	3971,5,c	;volatile
  2524  011782  D000               	goto	l8766
  2525  011784                     l8766:
  2526                           
  2527                           ;RemoteCan.c: 335: }
  2528                           ;RemoteCan.c: 337: Joystick_Polling();
  2529  011784  EC57  F0AE         	call	_Joystick_Polling	;wreg free
  2530                           
  2531                           ;RemoteCan.c: 339: if ((JoystickValues[1] < 10)&&(parking_state == 2)) {
  2532  011788  0E0A               	movlw	10
  2533  01178A  0100               	movlb	0	; () banked
  2534  01178C  61E0               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2535  01178E  D02E               	goto	l8782
  2536                           
  2537                           ; BSR set to: 0
  2538  011790  0E02               	movlw	2
  2539  011792  0100               	movlb	0	; () banked
  2540  011794  19EA               	xorwf	_parking_state& (0+255),w,b	;volatile
  2541  011796  A4D8               	btfss	status,2,c
  2542  011798  D029               	goto	l8782
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;RemoteCan.c: 340: F1_switch = 0;
  2546  01179A  924A               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;RemoteCan.c: 341: parking_state = 0;
  2550  01179C  0E00               	movlw	0
  2551  01179E  0100               	movlb	0	; () banked
  2552  0117A0  6FEA               	movwf	_parking_state& (0+255),b	;volatile
  2553                           
  2554                           ;RemoteCan.c: 342: parking_message_ID = 0;
  2555  0117A2  0E00               	movlw	0
  2556  0117A4  0100               	movlb	0	; () banked
  2557  0117A6  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
  2558                           
  2559                           ;RemoteCan.c: 343: park_assist_state[0] = 0b00000000;
  2560  0117A8  0E00               	movlw	0
  2561  0117AA  0101               	movlb	1	; () banked
  2562  0117AC  6F2E               	movwf	_park_assist_state& (0+255),b
  2563                           
  2564                           ; BSR set to: 1
  2565                           
  2566                           ;RemoteCan.c: 344: while (!CANisTxReady());
  2567  0117AE  D000               	goto	l8776
  2568  0117B0                     l8776:
  2569  0117B0  ECB2  F0AF         	call	_CANisTxReady	;wreg free
  2570  0117B4  0900               	iorlw	0
  2571  0117B6  B4D8               	btfsc	status,2,c
  2572  0117B8  D7FB               	goto	l8776
  2573                           
  2574                           ;RemoteCan.c: 345: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2575  0117BA  0E0C               	movlw	12
  2576  0117BC  0100               	movlb	0	; () banked
  2577  0117BE  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  2578  0117C0  0E00               	movlw	0
  2579  0117C2  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2580  0117C4  0E00               	movlw	0
  2581  0117C6  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2582  0117C8  0E00               	movlw	0
  2583  0117CA  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2584  0117CC  0E2E               	movlw	low _park_assist_state
  2585  0117CE  0100               	movlb	0	; () banked
  2586  0117D0  6F76               	movwf	CANsendMessage@data& (0+255),b
  2587  0117D2  0E01               	movlw	high _park_assist_state
  2588  0117D4  0100               	movlb	0	; () banked
  2589  0117D6  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  2590  0117D8  0E08               	movlw	8
  2591  0117DA  0100               	movlb	0	; () banked
  2592  0117DC  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  2593  0117DE  0EBC               	movlw	188
  2594  0117E0  0100               	movlb	0	; () banked
  2595  0117E2  6F79               	movwf	CANsendMessage@flags& (0+255),b
  2596  0117E4  EC48  F08E         	call	_CANsendMessage	;wreg free
  2597                           
  2598                           ;RemoteCan.c: 346: Can_Tx_Force = 1;
  2599  0117E8  804A               	bsf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2600  0117EA  D000               	goto	l8782
  2601  0117EC                     l8782:
  2602                           
  2603                           ;RemoteCan.c: 347: }
  2604                           ;RemoteCan.c: 350: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2605  0117EC  0E00               	movlw	0
  2606  0117EE  0100               	movlb	0	; () banked
  2607  0117F0  6FA1               	movwf	___fladd@f2& (0+255),b
  2608  0117F2  0E00               	movlw	0
  2609  0117F4  6FA2               	movwf	(___fladd@f2+1)& (0+255),b
  2610  0117F6  0E34               	movlw	52
  2611  0117F8  6FA3               	movwf	(___fladd@f2+2)& (0+255),b
  2612  0117FA  0E43               	movlw	67
  2613  0117FC  6FA4               	movwf	(___fladd@f2+3)& (0+255),b
  2614  0117FE  C0BB  F085         	movff	_JoystickConstants,___flmul@f2	;volatile
  2615  011802  C0BC  F086         	movff	_JoystickConstants+1,___flmul@f2+1	;volatile
  2616  011806  C0BD  F087         	movff	_JoystickConstants+2,___flmul@f2+2	;volatile
  2617  01180A  C0BE  F088         	movff	_JoystickConstants+3,___flmul@f2+3	;volatile
  2618  01180E  0100               	movlb	0	; () banked
  2619  011810  51DF               	movf	_JoystickValues& (0+255),w,b	;volatile
  2620  011812  ECEC  F0AE         	call	___lbtofl
  2621  011816  C07C  F081         	movff	?___lbtofl,___flmul@f1
  2622  01181A  C07D  F082         	movff	?___lbtofl+1,___flmul@f1+1
  2623  01181E  C07E  F083         	movff	?___lbtofl+2,___flmul@f1+2
  2624  011822  C07F  F084         	movff	?___lbtofl+3,___flmul@f1+3
  2625  011826  EC7F  F0A6         	call	___flmul	;wreg free
  2626  01182A  C081  F090         	movff	?___flmul,___flneg@f1
  2627  01182E  C082  F091         	movff	?___flmul+1,___flneg@f1+1
  2628  011832  C083  F092         	movff	?___flmul+2,___flneg@f1+2
  2629  011836  C084  F093         	movff	?___flmul+3,___flneg@f1+3
  2630  01183A  EC78  F0AE         	call	___flneg	;wreg free
  2631  01183E  C090  F09D         	movff	?___flneg,___fladd@f1
  2632  011842  C091  F09E         	movff	?___flneg+1,___fladd@f1+1
  2633  011846  C092  F09F         	movff	?___flneg+2,___fladd@f1+2
  2634  01184A  C093  F0A0         	movff	?___flneg+3,___fladd@f1+3
  2635  01184E  EC69  F0A0         	call	___fladd	;wreg free
  2636  011852  C09D  F0A9         	movff	?___fladd,___fltol@f1
  2637  011856  C09E  F0AA         	movff	?___fladd+1,___fltol@f1+1
  2638  01185A  C09F  F0AB         	movff	?___fladd+2,___fltol@f1+2
  2639  01185E  C0A0  F0AC         	movff	?___fladd+3,___fltol@f1+3
  2640  011862  ECCC  F0A7         	call	___fltol	;wreg free
  2641  011866  0100               	movlb	0	; () banked
  2642  011868  51A9               	movf	?___fltol& (0+255),w,b
  2643  01186A  0101               	movlb	1	; () banked
  2644  01186C  6F26               	movwf	_data_steering& (0+255),b
  2645                           
  2646                           ; BSR set to: 1
  2647                           ;RemoteCan.c: 351: if (parking_state == 1) {
  2648  01186E  0100               	movlb	0	; () banked
  2649  011870  05EA               	decf	_parking_state& (0+255),w,b	;volatile
  2650  011872  A4D8               	btfss	status,2,c
  2651  011874  D05C               	goto	l848
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;RemoteCan.c: 352: if (steering_correction_dir == 1) {
  2655  011876  AE4B               	btfss	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2656  011878  D00F               	goto	l8790
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;RemoteCan.c: 353: check = data_steering[0] + steering_correction;
  2660  01187A  0100               	movlb	0	; () banked
  2661  01187C  51EB               	movf	_steering_correction& (0+255),w,b	;volatile
  2662  01187E  C126  F151         	movff	_data_steering,??_main
  2663  011882  0101               	movlb	1	; () banked
  2664  011884  6B52               	clrf	(??_main+1)& (0+255),b
  2665  011886  0101               	movlb	1	; () banked
  2666  011888  2751               	addwf	??_main& (0+255),f,b
  2667  01188A  0E00               	movlw	0
  2668  01188C  2352               	addwfc	(??_main+1)& (0+255),f,b
  2669  01188E  C151  F0C7         	movff	??_main,_check	;volatile
  2670  011892  C152  F0C8         	movff	??_main+1,_check+1	;volatile
  2671  011896  D01B               	goto	L2
  2672  011898                     l8790:
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;RemoteCan.c: 355: check = data_steering[0] - steering_correction;
  2676  011898  0100               	movlb	0	; () banked
  2677  01189A  51EB               	movf	_steering_correction& (0+255),w,b	;volatile
  2678  01189C  0101               	movlb	1	; () banked
  2679  01189E  6F51               	movwf	??_main& (0+255),b
  2680  0118A0  6B52               	clrf	(??_main+1)& (0+255),b
  2681  0118A2  0101               	movlb	1	; () banked
  2682  0118A4  1F51               	comf	??_main& (0+255),f,b
  2683  0118A6  1F52               	comf	(??_main+1)& (0+255),f,b
  2684  0118A8  4B51               	infsnz	??_main& (0+255),f,b
  2685  0118AA  2B52               	incf	(??_main+1)& (0+255),f,b
  2686  0118AC  0101               	movlb	1	; () banked
  2687  0118AE  5126               	movf	_data_steering& (0+255),w,b
  2688  0118B0  0101               	movlb	1	; () banked
  2689  0118B2  6F53               	movwf	(??_main+2)& (0+255),b
  2690  0118B4  6B54               	clrf	(??_main+3)& (0+255),b
  2691  0118B6  0101               	movlb	1	; () banked
  2692  0118B8  5151               	movf	??_main& (0+255),w,b
  2693  0118BA  0101               	movlb	1	; () banked
  2694  0118BC  2753               	addwf	(??_main+2)& (0+255),f,b
  2695  0118BE  0101               	movlb	1	; () banked
  2696  0118C0  5152               	movf	(??_main+1)& (0+255),w,b
  2697  0118C2  0101               	movlb	1	; () banked
  2698  0118C4  2354               	addwfc	(??_main+3)& (0+255),f,b
  2699  0118C6  C153  F0C7         	movff	??_main+2,_check	;volatile
  2700  0118CA  C154  F0C8         	movff	??_main+3,_check+1	;volatile
  2701  0118CE                     L2:
  2702  0118CE  0100               	movlb	0	; () banked
  2703  0118D0  0E00               	movlw	0
  2704  0118D2  BFC8               	btfsc	(_check+1)& (0+255),7,b	;volatile
  2705  0118D4  0EFF               	movlw	-1
  2706  0118D6  6FC9               	movwf	(_check+2)& (0+255),b	;volatile
  2707  0118D8  6FCA               	movwf	(_check+3)& (0+255),b	;volatile
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;RemoteCan.c: 356: }
  2711                           ;RemoteCan.c: 357: if ((check >= 0)&&(check <= 180)) {
  2712  0118DA  0100               	movlb	0	; () banked
  2713  0118DC  BFCA               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2714  0118DE  D012               	goto	l8796
  2715                           
  2716                           ; BSR set to: 0
  2717  0118E0  0100               	movlb	0	; () banked
  2718  0118E2  BFCA               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2719  0118E4  D00C               	goto	l8794
  2720  0118E6  0100               	movlb	0	; () banked
  2721  0118E8  51CA               	movf	(_check+3)& (0+255),w,b	;volatile
  2722  0118EA  0100               	movlb	0	; () banked
  2723  0118EC  11C9               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2724  0118EE  0100               	movlb	0	; () banked
  2725  0118F0  11C8               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2726  0118F2  E108               	bnz	l8796
  2727  0118F4  0EB5               	movlw	181
  2728  0118F6  0100               	movlb	0	; () banked
  2729  0118F8  5DC7               	subwf	_check& (0+255),w,b	;volatile
  2730  0118FA  B0D8               	btfsc	status,0,c
  2731  0118FC  D003               	goto	l8796
  2732  0118FE                     l8794:
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;RemoteCan.c: 358: data_steering[0] = check;
  2736  0118FE  C0C7  F126         	movff	_check,_data_steering	;volatile
  2737                           
  2738                           ;RemoteCan.c: 359: } else {
  2739  011902  D019               	goto	l855
  2740  011904                     l8796:
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;RemoteCan.c: 360: if (check > 180) {
  2744  011904  0100               	movlb	0	; () banked
  2745  011906  BFCA               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2746  011908  D00E               	goto	l8800
  2747  01190A  0100               	movlb	0	; () banked
  2748  01190C  51CA               	movf	(_check+3)& (0+255),w,b	;volatile
  2749  01190E  0100               	movlb	0	; () banked
  2750  011910  11C9               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2751  011912  0100               	movlb	0	; () banked
  2752  011914  11C8               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2753  011916  E105               	bnz	u11210
  2754  011918  0EB5               	movlw	181
  2755  01191A  0100               	movlb	0	; () banked
  2756  01191C  5DC7               	subwf	_check& (0+255),w,b	;volatile
  2757  01191E  A0D8               	btfss	status,0,c
  2758  011920  D002               	goto	l8800
  2759  011922                     u11210:
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;RemoteCan.c: 361: data_steering[0] = 180;
  2763  011922  0EB4               	movlw	180
  2764  011924  D001               	goto	L3
  2765  011926                     l8800:
  2766                           
  2767                           ;RemoteCan.c: 363: data_steering[0] = 0;
  2768  011926  0E00               	movlw	0
  2769  011928                     L3:
  2770  011928  0101               	movlb	1	; () banked
  2771  01192A  6F26               	movwf	_data_steering& (0+255),b
  2772                           
  2773                           ; BSR set to: 1
  2774                           ;RemoteCan.c: 364: }
  2775                           ;RemoteCan.c: 365: }
  2776                           ;RemoteCan.c: 366: } else {
  2777                           
  2778                           ; BSR set to: 1
  2779  01192C  D004               	goto	l855
  2780  01192E                     l848:
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;RemoteCan.c: 367: steering_correction_dir = 0;
  2784  01192E  9E4B               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;RemoteCan.c: 368: steering_correction = 0;
  2788  011930  0E00               	movlw	0
  2789  011932  0100               	movlb	0	; () banked
  2790  011934  6FEB               	movwf	_steering_correction& (0+255),b	;volatile
  2791  011936                     l855:
  2792                           
  2793                           ;RemoteCan.c: 369: }
  2794                           ;RemoteCan.c: 373: if (switch_position != 0) {
  2795  011936  0100               	movlb	0	; () banked
  2796  011938  51EC               	movf	_switch_position& (0+255),w,b	;volatile
  2797  01193A  B4D8               	btfsc	status,2,c
  2798  01193C  D089               	goto	l8838
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;RemoteCan.c: 374: if (JoystickValues[1] > 132) {
  2802  01193E  0E84               	movlw	132
  2803  011940  0100               	movlb	0	; () banked
  2804  011942  65E0               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2805  011944  D030               	goto	l8812
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;RemoteCan.c: 375: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2809  011946  C0BF  F085         	movff	_JoystickConstants+4,___flmul@f2	;volatile
  2810  01194A  C0C0  F086         	movff	_JoystickConstants+5,___flmul@f2+1	;volatile
  2811  01194E  C0C1  F087         	movff	_JoystickConstants+6,___flmul@f2+2	;volatile
  2812  011952  C0C2  F088         	movff	_JoystickConstants+7,___flmul@f2+3	;volatile
  2813  011956  0E7E               	movlw	126
  2814  011958  0100               	movlb	0	; () banked
  2815  01195A  25E0               	addwf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2816  01195C  0100               	movlb	0	; () banked
  2817  01195E  6F7C               	movwf	___awtofl@c& (0+255),b
  2818  011960  0100               	movlb	0	; () banked
  2819  011962  6B7D               	clrf	(___awtofl@c+1)& (0+255),b
  2820  011964  0EFF               	movlw	255
  2821  011966  237D               	addwfc	(___awtofl@c+1)& (0+255),f,b
  2822  011968  ECEA  F0AD         	call	___awtofl	;wreg free
  2823  01196C  C07C  F081         	movff	?___awtofl,___flmul@f1
  2824  011970  C07D  F082         	movff	?___awtofl+1,___flmul@f1+1
  2825  011974  C07E  F083         	movff	?___awtofl+2,___flmul@f1+2
  2826  011978  C07F  F084         	movff	?___awtofl+3,___flmul@f1+3
  2827  01197C  EC7F  F0A6         	call	___flmul	;wreg free
  2828  011980  C081  F0A9         	movff	?___flmul,___fltol@f1
  2829  011984  C082  F0AA         	movff	?___flmul+1,___fltol@f1+1
  2830  011988  C083  F0AB         	movff	?___flmul+2,___fltol@f1+2
  2831  01198C  C084  F0AC         	movff	?___flmul+3,___fltol@f1+3
  2832  011990  ECCC  F0A7         	call	___fltol	;wreg free
  2833  011994  C0A9  F0E5         	movff	?___fltol,_set_speed	;volatile
  2834  011998  C0AA  F0E6         	movff	?___fltol+1,_set_speed+1	;volatile
  2835                           
  2836                           ;RemoteCan.c: 376: data_brake [0] = 3;
  2837  01199C  0E03               	movlw	3
  2838  01199E  D01F               	goto	L4
  2839  0119A0                     l8810:
  2840                           
  2841                           ;RemoteCan.c: 377: data_brake [1] = 0;
  2842  0119A0  0E00               	movlw	0
  2843  0119A2  6E22               	movwf	_data_brake+1,c
  2844                           
  2845                           ;RemoteCan.c: 378: } else {
  2846  0119A4  D01F               	goto	l8826
  2847  0119A6                     l8812:
  2848                           
  2849                           ;RemoteCan.c: 379: set_speed = 0;
  2850  0119A6  0E00               	movlw	0
  2851  0119A8  0100               	movlb	0	; () banked
  2852  0119AA  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2853  0119AC  0E00               	movlw	0
  2854  0119AE  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;RemoteCan.c: 380: if (JoystickValues[1] <= 65) {
  2858  0119B0  0E42               	movlw	66
  2859  0119B2  0100               	movlb	0	; () banked
  2860  0119B4  61E0               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2861  0119B6  D005               	goto	l8818
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;RemoteCan.c: 381: data_brake [0] = 0b00000010;
  2865  0119B8  0E02               	movlw	2
  2866  0119BA  6E21               	movwf	_data_brake,c
  2867                           
  2868                           ;RemoteCan.c: 382: data_brake [1] = 0;
  2869  0119BC  0E00               	movlw	0
  2870  0119BE  6E22               	movwf	_data_brake+1,c
  2871  0119C0  D000               	goto	l8818
  2872  0119C2                     l8818:
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;RemoteCan.c: 383: }
  2876                           ;RemoteCan.c: 384: if (JoystickValues[1] <= 20) {
  2877  0119C2  0E15               	movlw	21
  2878  0119C4  0100               	movlb	0	; () banked
  2879  0119C6  61E0               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2880  0119C8  D005               	goto	l8822
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;RemoteCan.c: 385: data_brake [0] = 0b00000001;
  2884  0119CA  0E01               	movlw	1
  2885  0119CC  6E21               	movwf	_data_brake,c
  2886                           
  2887                           ;RemoteCan.c: 386: data_brake [1] = 0;
  2888  0119CE  0E00               	movlw	0
  2889  0119D0  6E22               	movwf	_data_brake+1,c
  2890  0119D2  D000               	goto	l8822
  2891  0119D4                     l8822:
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;RemoteCan.c: 387: }
  2895                           ;RemoteCan.c: 388: if (JoystickValues[1] <= 5) {
  2896  0119D4  0E06               	movlw	6
  2897  0119D6  0100               	movlb	0	; () banked
  2898  0119D8  61E0               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2899  0119DA  D004               	goto	l8826
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;RemoteCan.c: 389: data_brake [0] = 0b00000000;
  2903  0119DC  0E00               	movlw	0
  2904  0119DE                     L4:
  2905  0119DE  6E21               	movwf	_data_brake,c
  2906  0119E0  D7DF               	goto	l8810
  2907                           
  2908                           ; BSR set to: 0
  2909                           
  2910                           ;RemoteCan.c: 390: data_brake [1] = 0;
  2911  0119E2  D000               	goto	l8826
  2912  0119E4                     l8826:
  2913                           
  2914                           ;RemoteCan.c: 391: }
  2915                           ;RemoteCan.c: 392: }
  2916                           ;RemoteCan.c: 394: if ((JoystickValues[1] > 130)&&(parking_state == 0)) {
  2917  0119E4  0E82               	movlw	130
  2918  0119E6  0100               	movlb	0	; () banked
  2919  0119E8  65E0               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2920  0119EA  D030               	goto	l862
  2921                           
  2922                           ; BSR set to: 0
  2923  0119EC  0100               	movlb	0	; () banked
  2924  0119EE  51EA               	movf	_parking_state& (0+255),w,b	;volatile
  2925  0119F0  A4D8               	btfss	status,2,c
  2926  0119F2  D02C               	goto	l862
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;RemoteCan.c: 396: collision_risk_value = ((JoystickValues[1] - 130) / 3) + 4;
  2930  0119F4  0E7E               	movlw	126
  2931  0119F6  0100               	movlb	0	; () banked
  2932  0119F8  25E0               	addwf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2933  0119FA  0100               	movlb	0	; () banked
  2934  0119FC  6F78               	movwf	___awdiv@dividend& (0+255),b
  2935  0119FE  0100               	movlb	0	; () banked
  2936  011A00  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  2937  011A02  0EFF               	movlw	255
  2938  011A04  2379               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
  2939  011A06  0E00               	movlw	0
  2940  011A08  0100               	movlb	0	; () banked
  2941  011A0A  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  2942  011A0C  0E03               	movlw	3
  2943  011A0E  6F7A               	movwf	___awdiv@divisor& (0+255),b
  2944  011A10  EC4C  F0A9         	call	___awdiv	;wreg free
  2945  011A14  0100               	movlb	0	; () banked
  2946  011A16  5178               	movf	?___awdiv& (0+255),w,b
  2947  011A18  0F04               	addlw	4
  2948  011A1A  0100               	movlb	0	; () banked
  2949  011A1C  6FE7               	movwf	_collision_risk_value& (0+255),b	;volatile
  2950                           
  2951                           ; BSR set to: 0
  2952                           ;RemoteCan.c: 397: if (collision_sensor_distance[dir] < collision_risk_value) {
  2953  011A1E  0100               	movlb	0	; () banked
  2954  011A20  51E8               	movf	_dir& (0+255),w,b	;volatile
  2955  011A22  0D01               	mullw	1
  2956  011A24  0E09               	movlw	low _collision_sensor_distance
  2957  011A26  24F3               	addwf	prodl,w,c
  2958  011A28  6ED9               	movwf	fsr2l,c
  2959  011A2A  0E00               	movlw	high _collision_sensor_distance
  2960  011A2C  20F4               	addwfc	prodh,w,c
  2961  011A2E  6EDA               	movwf	fsr2h,c
  2962  011A30  0100               	movlb	0	; () banked
  2963  011A32  51E7               	movf	_collision_risk_value& (0+255),w,b	;volatile
  2964  011A34  5CDE               	subwf	postinc2,w,c
  2965  011A36  B0D8               	btfsc	status,0,c
  2966  011A38  D037               	goto	l8846
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;RemoteCan.c: 398: set_speed = 0;
  2970  011A3A  0E00               	movlw	0
  2971  011A3C  0100               	movlb	0	; () banked
  2972  011A3E  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2973  011A40  0E00               	movlw	0
  2974  011A42  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  2975                           
  2976                           ;RemoteCan.c: 399: data_brake [0] = 0b00000000;
  2977  011A44  0E00               	movlw	0
  2978  011A46  6E21               	movwf	_data_brake,c
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;RemoteCan.c: 400: collision_msg = 1;
  2982  011A48  8C4A               	bsf	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;RemoteCan.c: 401: }
  2986                           ;RemoteCan.c: 402: } else {
  2987  011A4A  D02E               	goto	l8846
  2988  011A4C                     l862:
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;RemoteCan.c: 403: collision_msg = 0;
  2992  011A4C  9C4A               	bcf	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;RemoteCan.c: 404: }
  2996                           ;RemoteCan.c: 405: } else {
  2997  011A4E  D02C               	goto	l8846
  2998  011A50                     l8838:
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;RemoteCan.c: 406: set_speed = 0;
  3002  011A50  0E00               	movlw	0
  3003  011A52  0100               	movlb	0	; () banked
  3004  011A54  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  3005  011A56  0E00               	movlw	0
  3006  011A58  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  3007                           
  3008                           ;RemoteCan.c: 407: data_brake [0] = 0b00000000;
  3009  011A5A  0E00               	movlw	0
  3010  011A5C  6E21               	movwf	_data_brake,c
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;RemoteCan.c: 408: collision_risk_value = ((JoystickValues[1] - 130) / 3) + 4;
  3014  011A5E  0E7E               	movlw	126
  3015  011A60  0100               	movlb	0	; () banked
  3016  011A62  25E0               	addwf	(_JoystickValues+1)& (0+255),w,b	;volatile
  3017  011A64  0100               	movlb	0	; () banked
  3018  011A66  6F78               	movwf	___awdiv@dividend& (0+255),b
  3019  011A68  0100               	movlb	0	; () banked
  3020  011A6A  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  3021  011A6C  0EFF               	movlw	255
  3022  011A6E  2379               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
  3023  011A70  0E00               	movlw	0
  3024  011A72  0100               	movlb	0	; () banked
  3025  011A74  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  3026  011A76  0E03               	movlw	3
  3027  011A78  6F7A               	movwf	___awdiv@divisor& (0+255),b
  3028  011A7A  EC4C  F0A9         	call	___awdiv	;wreg free
  3029  011A7E  0100               	movlb	0	; () banked
  3030  011A80  5178               	movf	?___awdiv& (0+255),w,b
  3031  011A82  0F04               	addlw	4
  3032  011A84  0100               	movlb	0	; () banked
  3033  011A86  6FE7               	movwf	_collision_risk_value& (0+255),b	;volatile
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;RemoteCan.c: 409: if (collision_sensor_distance[dir] > collision_risk_value) {
  3037  011A88  0100               	movlb	0	; () banked
  3038  011A8A  51E8               	movf	_dir& (0+255),w,b	;volatile
  3039  011A8C  0D01               	mullw	1
  3040  011A8E  0E09               	movlw	low _collision_sensor_distance
  3041  011A90  24F3               	addwf	prodl,w,c
  3042  011A92  6ED9               	movwf	fsr2l,c
  3043  011A94  0E00               	movlw	high _collision_sensor_distance
  3044  011A96  20F4               	addwfc	prodh,w,c
  3045  011A98  6EDA               	movwf	fsr2h,c
  3046  011A9A  50DE               	movf	postinc2,w,c
  3047  011A9C  0100               	movlb	0	; () banked
  3048  011A9E  5DE7               	subwf	_collision_risk_value& (0+255),w,b	;volatile
  3049  011AA0  B0D8               	btfsc	status,0,c
  3050  011AA2  D002               	goto	l8846
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;RemoteCan.c: 410: collision_msg = 0;
  3054  011AA4  9C4A               	bcf	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  3055                           
  3056                           ; BSR set to: 0
  3057  011AA6  D000               	goto	l8846
  3058  011AA8                     l8846:
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;RemoteCan.c: 411: }
  3062                           ;RemoteCan.c: 412: }
  3063                           ;RemoteCan.c: 414: if ((((time_counter - pr_time_2) >= 2) && (parking_message_ID < 2)) |
      +                          | (Can_Tx_Force == 1)) {
  3064  011AA8  C0CF  F151         	movff	_pr_time_2,??_main	;volatile
  3065  011AAC  C0D0  F152         	movff	_pr_time_2+1,??_main+1	;volatile
  3066  011AB0  C0D1  F153         	movff	_pr_time_2+2,??_main+2	;volatile
  3067  011AB4  C0D2  F154         	movff	_pr_time_2+3,??_main+3	;volatile
  3068  011AB8  0101               	movlb	1	; () banked
  3069  011ABA  1F51               	comf	??_main& (0+255),f,b
  3070  011ABC  1F52               	comf	(??_main+1)& (0+255),f,b
  3071  011ABE  1F53               	comf	(??_main+2)& (0+255),f,b
  3072  011AC0  1F54               	comf	(??_main+3)& (0+255),f,b
  3073  011AC2  2B51               	incf	??_main& (0+255),f,b
  3074  011AC4  0E00               	movlw	0
  3075  011AC6  2352               	addwfc	(??_main+1)& (0+255),f,b
  3076  011AC8  2353               	addwfc	(??_main+2)& (0+255),f,b
  3077  011ACA  2354               	addwfc	(??_main+3)& (0+255),f,b
  3078  011ACC  5005               	movf	_time_counter,w,c	;volatile
  3079  011ACE  0101               	movlb	1	; () banked
  3080  011AD0  2551               	addwf	??_main& (0+255),w,b
  3081  011AD2  0101               	movlb	1	; () banked
  3082  011AD4  6F55               	movwf	(??_main+4)& (0+255),b
  3083  011AD6  5006               	movf	_time_counter+1,w,c	;volatile
  3084  011AD8  0101               	movlb	1	; () banked
  3085  011ADA  2152               	addwfc	(??_main+1)& (0+255),w,b
  3086  011ADC  0101               	movlb	1	; () banked
  3087  011ADE  6F56               	movwf	(??_main+5)& (0+255),b
  3088  011AE0  5007               	movf	_time_counter+2,w,c	;volatile
  3089  011AE2  0101               	movlb	1	; () banked
  3090  011AE4  2153               	addwfc	(??_main+2)& (0+255),w,b
  3091  011AE6  0101               	movlb	1	; () banked
  3092  011AE8  6F57               	movwf	(??_main+6)& (0+255),b
  3093  011AEA  5008               	movf	_time_counter+3,w,c	;volatile
  3094  011AEC  0101               	movlb	1	; () banked
  3095  011AEE  2154               	addwfc	(??_main+3)& (0+255),w,b
  3096  011AF0  0101               	movlb	1	; () banked
  3097  011AF2  6F58               	movwf	(??_main+7)& (0+255),b
  3098  011AF4  0101               	movlb	1	; () banked
  3099  011AF6  5158               	movf	(??_main+7)& (0+255),w,b
  3100  011AF8  0101               	movlb	1	; () banked
  3101  011AFA  1157               	iorwf	(??_main+6)& (0+255),w,b
  3102  011AFC  0101               	movlb	1	; () banked
  3103  011AFE  1156               	iorwf	(??_main+5)& (0+255),w,b
  3104  011B00  E105               	bnz	u11310
  3105  011B02  0E02               	movlw	2
  3106  011B04  0101               	movlb	1	; () banked
  3107  011B06  5D55               	subwf	(??_main+4)& (0+255),w,b
  3108  011B08  A0D8               	btfss	status,0,c
  3109  011B0A  D004               	goto	l871
  3110  011B0C                     u11310:
  3111                           
  3112                           ; BSR set to: 1
  3113  011B0C  0E01               	movlw	1
  3114  011B0E  0100               	movlb	0	; () banked
  3115  011B10  65E9               	cpfsgt	_parking_message_ID& (0+255),b	;volatile
  3116  011B12  D002               	goto	l869
  3117  011B14                     l871:
  3118  011B14  A04A               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  3119  011B16  D01C               	goto	l8858
  3120  011B18                     l869:
  3121                           
  3122                           ;RemoteCan.c: 415: if (Can_Tx_Force == 1) {
  3123  011B18  A04A               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  3124  011B1A  D00F               	goto	l8854
  3125                           
  3126                           ;RemoteCan.c: 416: dir = 1;
  3127  011B1C  0E01               	movlw	1
  3128  011B1E  0100               	movlb	0	; () banked
  3129  011B20  6FE8               	movwf	_dir& (0+255),b	;volatile
  3130                           
  3131                           ;RemoteCan.c: 417: set_speed = 0;
  3132  011B22  0E00               	movlw	0
  3133  011B24  0100               	movlb	0	; () banked
  3134  011B26  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  3135  011B28  0E00               	movlw	0
  3136  011B2A  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  3137                           
  3138                           ;RemoteCan.c: 418: data_steering [0] = 90;
  3139  011B2C  0E5A               	movlw	90
  3140  011B2E  0101               	movlb	1	; () banked
  3141  011B30  6F26               	movwf	_data_steering& (0+255),b
  3142                           
  3143                           ;RemoteCan.c: 419: data_brake [0] = 0b00000000;
  3144  011B32  0E00               	movlw	0
  3145  011B34  6E21               	movwf	_data_brake,c
  3146                           
  3147                           ; BSR set to: 1
  3148                           ;RemoteCan.c: 420: Can_Tx_Force = 0;
  3149  011B36  904A               	bcf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  3150  011B38  D000               	goto	l8854
  3151  011B3A                     l8854:
  3152                           
  3153                           ;RemoteCan.c: 421: }
  3154                           ;RemoteCan.c: 422: pr_time_2 = time_counter;
  3155  011B3A  C005  F0CF         	movff	_time_counter,_pr_time_2	;volatile
  3156  011B3E  C006  F0D0         	movff	_time_counter+1,_pr_time_2+1	;volatile
  3157  011B42  C007  F0D1         	movff	_time_counter+2,_pr_time_2+2	;volatile
  3158  011B46  C008  F0D2         	movff	_time_counter+3,_pr_time_2+3	;volatile
  3159                           
  3160                           ;RemoteCan.c: 423: CAN_Tx();
  3161  011B4A  EC79  F0AA         	call	_CAN_Tx	;wreg free
  3162  011B4E  D000               	goto	l8858
  3163  011B50                     l8858:
  3164                           
  3165                           ;RemoteCan.c: 424: }
  3166                           ;RemoteCan.c: 427: if (time_counter >= pr_time_6) {
  3167  011B50  0100               	movlb	0	; () banked
  3168  011B52  51DB               	movf	_pr_time_6& (0+255),w,b	;volatile
  3169  011B54  5C05               	subwf	_time_counter,w,c	;volatile
  3170  011B56  0100               	movlb	0	; () banked
  3171  011B58  51DC               	movf	(_pr_time_6+1)& (0+255),w,b	;volatile
  3172  011B5A  5806               	subwfb	_time_counter+1,w,c	;volatile
  3173  011B5C  0100               	movlb	0	; () banked
  3174  011B5E  51DD               	movf	(_pr_time_6+2)& (0+255),w,b	;volatile
  3175  011B60  5807               	subwfb	_time_counter+2,w,c	;volatile
  3176  011B62  0100               	movlb	0	; () banked
  3177  011B64  51DE               	movf	(_pr_time_6+3)& (0+255),w,b	;volatile
  3178  011B66  5808               	subwfb	_time_counter+3,w,c	;volatile
  3179  011B68  A0D8               	btfss	status,0,c
  3180  011B6A  D05D               	goto	l8886
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;RemoteCan.c: 428: if ((time_counter - pr_time_3) >= (100 / 10)) {
  3184  011B6C  C0D3  F151         	movff	_pr_time_3,??_main	;volatile
  3185  011B70  C0D4  F152         	movff	_pr_time_3+1,??_main+1	;volatile
  3186  011B74  C0D5  F153         	movff	_pr_time_3+2,??_main+2	;volatile
  3187  011B78  C0D6  F154         	movff	_pr_time_3+3,??_main+3	;volatile
  3188  011B7C  0101               	movlb	1	; () banked
  3189  011B7E  1F51               	comf	??_main& (0+255),f,b
  3190  011B80  1F52               	comf	(??_main+1)& (0+255),f,b
  3191  011B82  1F53               	comf	(??_main+2)& (0+255),f,b
  3192  011B84  1F54               	comf	(??_main+3)& (0+255),f,b
  3193  011B86  2B51               	incf	??_main& (0+255),f,b
  3194  011B88  0E00               	movlw	0
  3195  011B8A  2352               	addwfc	(??_main+1)& (0+255),f,b
  3196  011B8C  2353               	addwfc	(??_main+2)& (0+255),f,b
  3197  011B8E  2354               	addwfc	(??_main+3)& (0+255),f,b
  3198  011B90  5005               	movf	_time_counter,w,c	;volatile
  3199  011B92  0101               	movlb	1	; () banked
  3200  011B94  2551               	addwf	??_main& (0+255),w,b
  3201  011B96  0101               	movlb	1	; () banked
  3202  011B98  6F55               	movwf	(??_main+4)& (0+255),b
  3203  011B9A  5006               	movf	_time_counter+1,w,c	;volatile
  3204  011B9C  0101               	movlb	1	; () banked
  3205  011B9E  2152               	addwfc	(??_main+1)& (0+255),w,b
  3206  011BA0  0101               	movlb	1	; () banked
  3207  011BA2  6F56               	movwf	(??_main+5)& (0+255),b
  3208  011BA4  5007               	movf	_time_counter+2,w,c	;volatile
  3209  011BA6  0101               	movlb	1	; () banked
  3210  011BA8  2153               	addwfc	(??_main+2)& (0+255),w,b
  3211  011BAA  0101               	movlb	1	; () banked
  3212  011BAC  6F57               	movwf	(??_main+6)& (0+255),b
  3213  011BAE  5008               	movf	_time_counter+3,w,c	;volatile
  3214  011BB0  0101               	movlb	1	; () banked
  3215  011BB2  2154               	addwfc	(??_main+3)& (0+255),w,b
  3216  011BB4  0101               	movlb	1	; () banked
  3217  011BB6  6F58               	movwf	(??_main+7)& (0+255),b
  3218  011BB8  0101               	movlb	1	; () banked
  3219  011BBA  5158               	movf	(??_main+7)& (0+255),w,b
  3220  011BBC  0101               	movlb	1	; () banked
  3221  011BBE  1157               	iorwf	(??_main+6)& (0+255),w,b
  3222  011BC0  0101               	movlb	1	; () banked
  3223  011BC2  1156               	iorwf	(??_main+5)& (0+255),w,b
  3224  011BC4  E105               	bnz	u11360
  3225  011BC6  0E0A               	movlw	10
  3226  011BC8  0101               	movlb	1	; () banked
  3227  011BCA  5D55               	subwf	(??_main+4)& (0+255),w,b
  3228  011BCC  A0D8               	btfss	status,0,c
  3229  011BCE  D44D               	goto	l8660
  3230  011BD0                     u11360:
  3231                           
  3232                           ; BSR set to: 1
  3233                           ;RemoteCan.c: 429: pr_time_3 = time_counter;
  3234  011BD0  C005  F0D3         	movff	_time_counter,_pr_time_3	;volatile
  3235  011BD4  C006  F0D4         	movff	_time_counter+1,_pr_time_3+1	;volatile
  3236  011BD8  C007  F0D5         	movff	_time_counter+2,_pr_time_3+2	;volatile
  3237  011BDC  C008  F0D6         	movff	_time_counter+3,_pr_time_3+3	;volatile
  3238                           
  3239                           ;RemoteCan.c: 430: if (parking_message_E == 1) {
  3240  011BE0  A44B               	btfss	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3241  011BE2  D01E               	goto	l8884
  3242                           
  3243                           ; BSR set to: 1
  3244                           ;RemoteCan.c: 431: display_refresh = 1;
  3245  011BE4  8E4A               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  3246                           
  3247                           ; BSR set to: 1
  3248                           ;RemoteCan.c: 432: if (parking_message_ID == 0) {
  3249  011BE6  0100               	movlb	0	; () banked
  3250  011BE8  51E9               	movf	_parking_message_ID& (0+255),w,b	;volatile
  3251  011BEA  A4D8               	btfss	status,2,c
  3252  011BEC  D005               	goto	l8872
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;RemoteCan.c: 433: LCD_Gap();
  3256  011BEE  ECFD  F0AC         	call	_LCD_Gap	;wreg free
  3257                           
  3258                           ;RemoteCan.c: 434: parking_message_ID++;
  3259  011BF2  0100               	movlb	0	; () banked
  3260  011BF4  2BE9               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3261  011BF6  D000               	goto	l8872
  3262  011BF8                     l8872:
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;RemoteCan.c: 435: }
  3266                           ;RemoteCan.c: 436: if (parking_message_ID == 2) {
  3267  011BF8  0E02               	movlw	2
  3268  011BFA  0100               	movlb	0	; () banked
  3269  011BFC  19E9               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3270  011BFE  A4D8               	btfss	status,2,c
  3271  011C00  D005               	goto	l8878
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;RemoteCan.c: 437: LCD_Park();
  3275  011C02  ECCB  F0AC         	call	_LCD_Park	;wreg free
  3276                           
  3277                           ;RemoteCan.c: 438: parking_message_ID++;
  3278  011C06  0100               	movlb	0	; () banked
  3279  011C08  2BE9               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3280  011C0A  D000               	goto	l8878
  3281  011C0C                     l8878:
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;RemoteCan.c: 439: }
  3285                           ;RemoteCan.c: 440: if (parking_message_ID == 4) {
  3286  011C0C  0E04               	movlw	4
  3287  011C0E  0100               	movlb	0	; () banked
  3288  011C10  19E9               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3289  011C12  A4D8               	btfss	status,2,c
  3290  011C14  D42A               	goto	l8660
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;RemoteCan.c: 441: LCD_Parking();
  3294  011C16  EC99  F0AC         	call	_LCD_Parking	;wreg free
  3295                           
  3296                           ;RemoteCan.c: 442: parking_message_ID++;
  3297  011C1A  0100               	movlb	0	; () banked
  3298  011C1C  2BE9               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;RemoteCan.c: 443: }
  3302                           ;RemoteCan.c: 444: } else {
  3303  011C1E  D425               	goto	l8660
  3304  011C20                     l8884:
  3305                           
  3306                           ;RemoteCan.c: 445: LCD_Handler();
  3307  011C20  EC2F  F09F         	call	_LCD_Handler	;wreg free
  3308                           
  3309                           ;RemoteCan.c: 446: }
  3310                           ;RemoteCan.c: 447: }
  3311                           ;RemoteCan.c: 448: } else {
  3312  011C24  D422               	goto	l8660
  3313  011C26                     l8886:
  3314                           
  3315                           ;RemoteCan.c: 449: if (parking_message_ID == 6) {
  3316  011C26  0E06               	movlw	6
  3317  011C28  0100               	movlb	0	; () banked
  3318  011C2A  19E9               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3319  011C2C  A4D8               	btfss	status,2,c
  3320  011C2E  D41D               	goto	l8660
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;RemoteCan.c: 450: if (parking_error == 1) {
  3324  011C30  A24B               	btfss	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3325  011C32  D023               	goto	l8900
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;RemoteCan.c: 451: parking_error = 0;
  3329  011C34  924B               	bcf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;RemoteCan.c: 452: LCD_Error();
  3333  011C36  EC2F  F0AD         	call	_LCD_Error	;wreg free
  3334                           
  3335                           ;RemoteCan.c: 453: while (CANisTxReady() != 1);
  3336  011C3A  D000               	goto	l8894
  3337  011C3C                     l8894:
  3338  011C3C  ECB2  F0AF         	call	_CANisTxReady	;wreg free
  3339  011C40  06E8               	decf	wreg,f,c
  3340  011C42  A4D8               	btfss	status,2,c
  3341  011C44  D7FB               	goto	l8894
  3342                           
  3343                           ;RemoteCan.c: 454: data_brake [0] = 0b00000000;
  3344  011C46  0E00               	movlw	0
  3345  011C48  6E21               	movwf	_data_brake,c
  3346                           
  3347                           ;RemoteCan.c: 455: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3348  011C4A  0E06               	movlw	6
  3349  011C4C  0100               	movlb	0	; () banked
  3350  011C4E  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  3351  011C50  0E00               	movlw	0
  3352  011C52  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3353  011C54  0E00               	movlw	0
  3354  011C56  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3355  011C58  0E00               	movlw	0
  3356  011C5A  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3357  011C5C  0E21               	movlw	low _data_brake
  3358  011C5E  0100               	movlb	0	; () banked
  3359  011C60  6F76               	movwf	CANsendMessage@data& (0+255),b
  3360  011C62  0E00               	movlw	high _data_brake
  3361  011C64  0100               	movlb	0	; () banked
  3362  011C66  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  3363  011C68  0E08               	movlw	8
  3364  011C6A  0100               	movlb	0	; () banked
  3365  011C6C  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  3366  011C6E  0EBC               	movlw	188
  3367  011C70  0100               	movlb	0	; () banked
  3368  011C72  6F79               	movwf	CANsendMessage@flags& (0+255),b
  3369  011C74  EC48  F08E         	call	_CANsendMessage	;wreg free
  3370                           
  3371                           ;RemoteCan.c: 456: } else {
  3372  011C78  D003               	goto	l8902
  3373  011C7A                     l8900:
  3374                           
  3375                           ;RemoteCan.c: 457: LCD_End();
  3376  011C7A  EC61  F0AD         	call	_LCD_End	;wreg free
  3377  011C7E  D000               	goto	l8902
  3378  011C80                     l8902:
  3379                           
  3380                           ;RemoteCan.c: 458: }
  3381                           ;RemoteCan.c: 459: parking_message_ID = 0;
  3382  011C80  0E00               	movlw	0
  3383  011C82  0100               	movlb	0	; () banked
  3384  011C84  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;RemoteCan.c: 460: parking_message_E = 0;
  3388  011C86  944B               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3389                           
  3390                           ; BSR set to: 0
  3391                           
  3392                           ; BSR set to: 0
  3393                           
  3394                           ; BSR set to: 0
  3395  011C88  EF35  F08A         	goto	l8660
  3396                           
  3397                           ; BSR set to: 0
  3398                           
  3399                           ; BSR set to: 0
  3400  011C8C  EF5F  F000         	goto	start
  3401  011C90                     __end_of_main:
  3402                           	opt stack 0
  3403                           tblptru	equ	0xFF8
  3404                           tblptrh	equ	0xFF7
  3405                           tblptrl	equ	0xFF6
  3406                           tablat	equ	0xFF5
  3407                           prodh	equ	0xFF4
  3408                           prodl	equ	0xFF3
  3409                           postinc0	equ	0xFEE
  3410                           wreg	equ	0xFE8
  3411                           postinc2	equ	0xFDE
  3412                           fsr2h	equ	0xFDA
  3413                           fsr2l	equ	0xFD9
  3414                           status	equ	0xFD8
  3415                           
  3416 ;; *************** function _board_initialization *****************
  3417 ;; Defined at:
  3418 ;;		line 666 in file "RemoteCan.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;		None               void
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3436 ;;Total ram usage:        0 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    9
  3439 ;; This function calls:
  3440 ;;		_CANInitialize
  3441 ;;		_LCD_clear
  3442 ;;		_LCD_goto_line
  3443 ;;		_LCD_initialize
  3444 ;; This function is called by:
  3445 ;;		_main
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text1
  3450  015666                     __ptext1:
  3451                           	opt stack 0
  3452  015666                     _board_initialization:
  3453                           	opt stack 21
  3454                           
  3455                           ;RemoteCan.c: 668: LATA = 0x00;
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;incstack = 0
  3459  015666  0E00               	movlw	0
  3460  015668  6E89               	movwf	3977,c	;volatile
  3461                           
  3462                           ;RemoteCan.c: 669: TRISA = 0b00011111;
  3463  01566A  0E1F               	movlw	31
  3464  01566C  6E92               	movwf	3986,c	;volatile
  3465                           
  3466                           ;RemoteCan.c: 670: LATB = 0x00;
  3467  01566E  0E00               	movlw	0
  3468  015670  6E8A               	movwf	3978,c	;volatile
  3469                           
  3470                           ;RemoteCan.c: 671: TRISB = 0b11111011;
  3471  015672  0EFB               	movlw	251
  3472  015674  6E93               	movwf	3987,c	;volatile
  3473                           
  3474                           ;RemoteCan.c: 672: LATC = 0x00;
  3475  015676  0E00               	movlw	0
  3476  015678  6E8B               	movwf	3979,c	;volatile
  3477                           
  3478                           ;RemoteCan.c: 673: TRISC = 0b11110000;
  3479  01567A  0EF0               	movlw	240
  3480  01567C  6E94               	movwf	3988,c	;volatile
  3481                           
  3482                           ;RemoteCan.c: 674: LATD = 0x00;
  3483  01567E  0E00               	movlw	0
  3484  015680  6E8C               	movwf	3980,c	;volatile
  3485                           
  3486                           ;RemoteCan.c: 675: TRISD = 0x00;
  3487  015682  0E00               	movlw	0
  3488  015684  6E95               	movwf	3989,c	;volatile
  3489                           
  3490                           ;RemoteCan.c: 676: LATE = 0x00;
  3491  015686  0E00               	movlw	0
  3492  015688  6E8D               	movwf	3981,c	;volatile
  3493                           
  3494                           ;RemoteCan.c: 677: TRISE = 0x00;
  3495  01568A  0E00               	movlw	0
  3496  01568C  6E96               	movwf	3990,c	;volatile
  3497                           
  3498                           ;RemoteCan.c: 679: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3499  01568E  0E06               	movlw	6
  3500  015690  0100               	movlb	0	; () banked
  3501  015692  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3502  015694  0E05               	movlw	5
  3503  015696  0100               	movlb	0	; () banked
  3504  015698  6F81               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3505  01569A  0E01               	movlw	1
  3506  01569C  0100               	movlb	0	; () banked
  3507  01569E  6F82               	movwf	CANInitialize@SJW& (0+255),b
  3508  0156A0  0E03               	movlw	3
  3509  0156A2  0100               	movlb	0	; () banked
  3510  0156A4  6F83               	movwf	CANInitialize@BRP& (0+255),b
  3511  0156A6  0E9D               	movlw	157
  3512  0156A8  0100               	movlb	0	; () banked
  3513  0156AA  6F84               	movwf	CANInitialize@flags& (0+255),b
  3514  0156AC  0E04               	movlw	4
  3515  0156AE  EC9F  F0A1         	call	_CANInitialize
  3516                           
  3517                           ;RemoteCan.c: 683: PIR2bits.TMR3IF = 0;
  3518  0156B2  92A1               	bcf	4001,1,c	;volatile
  3519                           
  3520                           ;RemoteCan.c: 684: PIR3bits.RXB1IF = 0;
  3521  0156B4  92A4               	bcf	4004,1,c	;volatile
  3522                           
  3523                           ;RemoteCan.c: 685: PIR3bits.RXB0IF = 0;
  3524  0156B6  90A4               	bcf	4004,0,c	;volatile
  3525                           
  3526                           ;RemoteCan.c: 688: RCONbits.IPEN = 1;
  3527  0156B8  8ED0               	bsf	4048,7,c	;volatile
  3528                           
  3529                           ;RemoteCan.c: 689: IPR3bits.RXB1IP = 1;
  3530  0156BA  82A5               	bsf	4005,1,c	;volatile
  3531                           
  3532                           ;RemoteCan.c: 690: IPR3bits.RXB0IP = 1;
  3533  0156BC  80A5               	bsf	4005,0,c	;volatile
  3534                           
  3535                           ;RemoteCan.c: 691: IPR2bits.TMR3IP = 0;
  3536  0156BE  92A2               	bcf	4002,1,c	;volatile
  3537                           
  3538                           ;RemoteCan.c: 694: ADCON1 = 0b00001101;
  3539  0156C0  0E0D               	movlw	13
  3540  0156C2  6EC1               	movwf	4033,c	;volatile
  3541                           
  3542                           ;RemoteCan.c: 695: ADCON0bits.CHS2 = 0;
  3543  0156C4  98C2               	bcf	4034,4,c	;volatile
  3544                           
  3545                           ;RemoteCan.c: 696: ADCON0bits.CHS1 = 0;
  3546  0156C6  96C2               	bcf	4034,3,c	;volatile
  3547                           
  3548                           ;RemoteCan.c: 697: ADCON0bits.CHS0 = 0;
  3549  0156C8  94C2               	bcf	4034,2,c	;volatile
  3550                           
  3551                           ;RemoteCan.c: 698: ADCON2bits.ACQT2 = 1;
  3552  0156CA  8AC0               	bsf	4032,5,c	;volatile
  3553                           
  3554                           ;RemoteCan.c: 699: ADCON2bits.ACQT1 = 1;
  3555  0156CC  88C0               	bsf	4032,4,c	;volatile
  3556                           
  3557                           ;RemoteCan.c: 700: ADCON2bits.ACQT0 = 0;
  3558  0156CE  96C0               	bcf	4032,3,c	;volatile
  3559                           
  3560                           ;RemoteCan.c: 701: ADCON2bits.ADCS2 = 1;
  3561  0156D0  84C0               	bsf	4032,2,c	;volatile
  3562                           
  3563                           ;RemoteCan.c: 702: ADCON2bits.ADCS1 = 0;
  3564  0156D2  92C0               	bcf	4032,1,c	;volatile
  3565                           
  3566                           ;RemoteCan.c: 703: ADCON2bits.ADCS0 = 1;
  3567  0156D4  80C0               	bsf	4032,0,c	;volatile
  3568                           
  3569                           ;RemoteCan.c: 704: ADCON2bits.ADFM = 0;
  3570  0156D6  9EC0               	bcf	4032,7,c	;volatile
  3571                           
  3572                           ;RemoteCan.c: 705: ADCON0bits.ADON = 1;
  3573  0156D8  80C2               	bsf	4034,0,c	;volatile
  3574                           
  3575                           ;RemoteCan.c: 708: LCD_initialize(16);
  3576  0156DA  0E10               	movlw	16
  3577  0156DC  ECC8  F0A5         	call	_LCD_initialize
  3578                           
  3579                           ;RemoteCan.c: 710: LCD_clear();
  3580  0156E0  EC6E  F0AF         	call	_LCD_clear	;wreg free
  3581                           
  3582                           ;RemoteCan.c: 711: LCD_goto_line(1);
  3583  0156E4  0E01               	movlw	1
  3584  0156E6  ECD5  F0A8         	call	_LCD_goto_line
  3585                           
  3586                           ;RemoteCan.c: 715: PORTDbits.RD2 = 0;
  3587  0156EA  9483               	bcf	3971,2,c	;volatile
  3588                           
  3589                           ;RemoteCan.c: 716: PORTDbits.RD3 = 0;
  3590  0156EC  9683               	bcf	3971,3,c	;volatile
  3591                           
  3592                           ;RemoteCan.c: 719: TMR3H = 0x63;
  3593  0156EE  0E63               	movlw	99
  3594  0156F0  6EB3               	movwf	4019,c	;volatile
  3595                           
  3596                           ;RemoteCan.c: 720: TMR3L = 0xC0;
  3597  0156F2  0EC0               	movlw	192
  3598  0156F4  6EB2               	movwf	4018,c	;volatile
  3599                           
  3600                           ;RemoteCan.c: 723: PIE3bits.RXB1IE = 1;
  3601  0156F6  82A3               	bsf	4003,1,c	;volatile
  3602                           
  3603                           ;RemoteCan.c: 724: PIE3bits.RXB0IE = 1;
  3604  0156F8  80A3               	bsf	4003,0,c	;volatile
  3605                           
  3606                           ;RemoteCan.c: 725: PIE2bits.TMR3IE = 1;
  3607  0156FA  82A0               	bsf	4000,1,c	;volatile
  3608                           
  3609                           ;RemoteCan.c: 728: T3CON = 0x01;
  3610  0156FC  0E01               	movlw	1
  3611  0156FE  6EB1               	movwf	4017,c	;volatile
  3612                           
  3613                           ;RemoteCan.c: 729: LCD_clear();
  3614  015700  EC6E  F0AF         	call	_LCD_clear	;wreg free
  3615                           
  3616                           ;RemoteCan.c: 730: INTCONbits.GIEH = 1;
  3617  015704  8EF2               	bsf	intcon,7,c	;volatile
  3618                           
  3619                           ;RemoteCan.c: 731: INTCONbits.GIEL = 1;
  3620  015706  8CF2               	bsf	intcon,6,c	;volatile
  3621  015708  0012               	return		;funcret
  3622  01570A                     __end_of_board_initialization:
  3623                           	opt stack 0
  3624                           tblptru	equ	0xFF8
  3625                           tblptrh	equ	0xFF7
  3626                           tblptrl	equ	0xFF6
  3627                           tablat	equ	0xFF5
  3628                           prodh	equ	0xFF4
  3629                           prodl	equ	0xFF3
  3630                           intcon	equ	0xFF2
  3631                           postinc0	equ	0xFEE
  3632                           wreg	equ	0xFE8
  3633                           postinc2	equ	0xFDE
  3634                           fsr2h	equ	0xFDA
  3635                           fsr2l	equ	0xFD9
  3636                           status	equ	0xFD8
  3637                           
  3638 ;; *************** function _CANInitialize *****************
  3639 ;; Defined at:
  3640 ;;		line 218 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  propSeg         1    wreg     unsigned char 
  3643 ;;  phaseSeg1       1   32[BANK0 ] unsigned char 
  3644 ;;  phaseSeg2       1   33[BANK0 ] unsigned char 
  3645 ;;  SJW             1   34[BANK0 ] unsigned char 
  3646 ;;  BRP             1   35[BANK0 ] unsigned char 
  3647 ;;  flags           1   36[BANK0 ] enum E16928
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  propSeg         1   41[BANK0 ] unsigned char 
  3650 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  3651 ;;  FilterConfig    1   42[BANK0 ] unsigned char 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;		None               void
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3661 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3662 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3663 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3664 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3665 ;;Total ram usage:       12 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    4
  3668 ;; This function calls:
  3669 ;;		_CANOperationMode
  3670 ;;		_CANSetFilter
  3671 ;;		_CANSetMask
  3672 ;; This function is called by:
  3673 ;;		_board_initialization
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text2
  3678  01433E                     __ptext2:
  3679                           	opt stack 0
  3680  01433E                     _CANInitialize:
  3681                           	opt stack 25
  3682                           
  3683                           ;incstack = 0
  3684                           ;CANInitialize@propSeg stored from wreg
  3685  01433E  0100               	movlb	0	; () banked
  3686  014340  6F89               	movwf	CANInitialize@propSeg& (0+255),b
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3690                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3691                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3692  014342  0E80               	movlw	128
  3693  014344  ECF4  F0AF         	call	_CANOperationMode
  3694                           
  3695                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3696  014348  0E00               	movlw	0
  3697  01434A  6E70               	movwf	3952,c	;volatile
  3698                           
  3699                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3700  01434C  0E00               	movlw	0
  3701  01434E  6E71               	movwf	3953,c	;volatile
  3702                           
  3703                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3704  014350  0E00               	movlw	0
  3705  014352  6E72               	movwf	3954,c	;volatile
  3706                           
  3707                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3708  014354  0100               	movlb	0	; () banked
  3709  014356  4182               	rrncf	CANInitialize@SJW& (0+255),w,b
  3710  014358  42E8               	rrncf	wreg,f,c
  3711  01435A  0BC0               	andlw	192
  3712  01435C  0100               	movlb	0	; () banked
  3713  01435E  6F82               	movwf	CANInitialize@SJW& (0+255),b
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3717  014360  0100               	movlb	0	; () banked
  3718  014362  5182               	movf	CANInitialize@SJW& (0+255),w,b
  3719  014364  1270               	iorwf	3952,f,c	;volatile
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3723  014366  0100               	movlb	0	; () banked
  3724  014368  5183               	movf	CANInitialize@BRP& (0+255),w,b
  3725  01436A  1270               	iorwf	3952,f,c	;volatile
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3729  01436C  0100               	movlb	0	; () banked
  3730  01436E  5189               	movf	CANInitialize@propSeg& (0+255),w,b
  3731  014370  1271               	iorwf	3953,f,c	;volatile
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3735  014372  0100               	movlb	0	; () banked
  3736  014374  3980               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3737  014376  42E8               	rrncf	wreg,f,c
  3738  014378  0BF8               	andlw	248
  3739  01437A  0100               	movlb	0	; () banked
  3740  01437C  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3744  01437E  0100               	movlb	0	; () banked
  3745  014380  5180               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3746  014382  1271               	iorwf	3953,f,c	;volatile
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3750  014384  0100               	movlb	0	; () banked
  3751  014386  A584               	btfss	CANInitialize@flags& (0+255),2,b
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3755  014388  8C71               	bsf	3953,6,c	;volatile
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3759  01438A  0100               	movlb	0	; () banked
  3760  01438C  A184               	btfss	CANInitialize@flags& (0+255),0,b
  3761  01438E  D002               	goto	l5700
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3765  014390  8E71               	bsf	3953,7,c	;volatile
  3766  014392  D000               	goto	l5700
  3767  014394                     l5700:
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3771  014394  0100               	movlb	0	; () banked
  3772  014396  5181               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3773  014398  1272               	iorwf	3954,f,c	;volatile
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3777  01439A  0100               	movlb	0	; () banked
  3778  01439C  A384               	btfss	CANInitialize@flags& (0+255),1,b
  3779  01439E  D002               	goto	l5706
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3783  0143A0  8C72               	bsf	3954,6,c	;volatile
  3784  0143A2  D000               	goto	l5706
  3785  0143A4                     l5706:
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3789  0143A4  0100               	movlb	0	; () banked
  3790  0143A6  5184               	movf	CANInitialize@flags& (0+255),w,b
  3791  0143A8  0B60               	andlw	96
  3792  0143AA  6E60               	movwf	3936,c	;volatile
  3793                           
  3794                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3795  0143AC  0100               	movlb	0	; () banked
  3796  0143AE  5184               	movf	CANInitialize@flags& (0+255),w,b
  3797  0143B0  0B10               	andlw	16
  3798  0143B2  0AFF               	xorlw	255
  3799  0143B4  B4D8               	btfsc	status,2,c
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3803  0143B6  8460               	bsf	3936,2,c	;volatile
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3807  0143B8  CF60 FF50          	movff	3936,3920	;volatile
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3811  0143BC  0E00               	movlw	0
  3812  0143BE  0100               	movlb	0	; () banked
  3813  0143C0  6F72               	movwf	CANSetMask@mask& (0+255),b
  3814  0143C2  0E00               	movlw	0
  3815  0143C4  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  3816  0143C6  0E00               	movlw	0
  3817  0143C8  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  3818  0143CA  0E00               	movlw	0
  3819  0143CC  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  3820  0143CE  0EF7               	movlw	247
  3821  0143D0  0100               	movlb	0	; () banked
  3822  0143D2  6F76               	movwf	CANSetMask@type& (0+255),b
  3823  0143D4  0E01               	movlw	1
  3824  0143D6  EC95  F09A         	call	_CANSetMask
  3825                           
  3826                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3827  0143DA  0E00               	movlw	0
  3828  0143DC  0100               	movlb	0	; () banked
  3829  0143DE  6F72               	movwf	CANSetMask@mask& (0+255),b
  3830  0143E0  0E00               	movlw	0
  3831  0143E2  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  3832  0143E4  0E00               	movlw	0
  3833  0143E6  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  3834  0143E8  0E00               	movlw	0
  3835  0143EA  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  3836  0143EC  0EF7               	movlw	247
  3837  0143EE  0100               	movlb	0	; () banked
  3838  0143F0  6F76               	movwf	CANSetMask@type& (0+255),b
  3839  0143F2  0E02               	movlw	2
  3840  0143F4  EC95  F09A         	call	_CANSetMask
  3841                           
  3842                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3843  0143F8  D00F               	goto	l5718
  3844  0143FA                     l5712:
  3845                           
  3846                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3847  0143FA  0EF7               	movlw	247
  3848  0143FC  0100               	movlb	0	; () banked
  3849  0143FE  6F8A               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3850  014400  D007               	goto	l5714
  3851  014402                     l378:
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3855  014402  0100               	movlb	0	; () banked
  3856  014404  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  3857                           
  3858                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3859  014406  0100               	movlb	0	; () banked
  3860  014408  698B               	setf	CANInitialize@FilterConfig2& (0+255),b
  3861                           
  3862                           ;inc\CANlib.h: 273: break;
  3863  01440A  D028               	goto	l5720
  3864  01440C                     l379:
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3868  01440C  0100               	movlb	0	; () banked
  3869  01440E  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  3870  014410                     l5714:
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3874  014410  0EF7               	movlw	247
  3875  014412  0100               	movlb	0	; () banked
  3876  014414  6F8B               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;inc\CANlib.h: 278: }
  3880                           
  3881                           ;inc\CANlib.h: 277: break;
  3882  014416  D022               	goto	l5720
  3883  014418                     l5718:
  3884  014418  0E9F               	movlw	159
  3885  01441A  0100               	movlb	0	; () banked
  3886  01441C  6F85               	movwf	??_CANInitialize& (0+255),b
  3887  01441E  0EFF               	movlw	255
  3888  014420  0100               	movlb	0	; () banked
  3889  014422  6F86               	movwf	(??_CANInitialize+1)& (0+255),b
  3890  014424  0100               	movlb	0	; () banked
  3891  014426  5184               	movf	CANInitialize@flags& (0+255),w,b
  3892  014428  0B60               	andlw	96
  3893  01442A  0100               	movlb	0	; () banked
  3894  01442C  6F87               	movwf	(??_CANInitialize+2)& (0+255),b
  3895  01442E  6B88               	clrf	(??_CANInitialize+3)& (0+255),b
  3896  014430  0100               	movlb	0	; () banked
  3897  014432  5185               	movf	??_CANInitialize& (0+255),w,b
  3898  014434  0100               	movlb	0	; () banked
  3899  014436  1387               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3900  014438  0100               	movlb	0	; () banked
  3901  01443A  5186               	movf	(??_CANInitialize+1)& (0+255),w,b
  3902  01443C  0100               	movlb	0	; () banked
  3903  01443E  1388               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3904                           
  3905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3906                           ; Switch size 1, requested type "space"
  3907                           ; Number of cases is 1, Range of values is 0 to 0
  3908                           ; switch strategies available:
  3909                           ; Name         Instructions Cycles
  3910                           ; simple_byte            4     3 (average)
  3911                           ;	Chosen strategy is simple_byte
  3912  014440  0100               	movlb	0	; () banked
  3913  014442  5188               	movf	(??_CANInitialize+3)& (0+255),w,b
  3914  014444  0A00               	xorlw	0	; case 0
  3915  014446  A4D8               	btfss	status,2,c
  3916  014448  D7E1               	goto	l379
  3917                           
  3918                           ; BSR set to: 0
  3919                           ; Switch size 1, requested type "space"
  3920                           ; Number of cases is 2, Range of values is 191 to 223
  3921                           ; switch strategies available:
  3922                           ; Name         Instructions Cycles
  3923                           ; simple_byte            7     4 (average)
  3924                           ;	Chosen strategy is simple_byte
  3925  01444A  0100               	movlb	0	; () banked
  3926  01444C  5187               	movf	(??_CANInitialize+2)& (0+255),w,b
  3927  01444E  0ABF               	xorlw	191	; case 191
  3928  014450  B4D8               	btfsc	status,2,c
  3929  014452  D7D7               	goto	l378
  3930  014454  0A60               	xorlw	96	; case 223
  3931  014456  B4D8               	btfsc	status,2,c
  3932  014458  D7D0               	goto	l5712
  3933  01445A  D7D8               	goto	l379
  3934  01445C                     l5720:
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3938  01445C  0E00               	movlw	0
  3939  01445E  0100               	movlb	0	; () banked
  3940  014460  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3941  014462  0E00               	movlw	0
  3942  014464  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3943  014466  0E00               	movlw	0
  3944  014468  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3945  01446A  0E00               	movlw	0
  3946  01446C  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3947  01446E  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3948  014472  0E00               	movlw	0
  3949  014474  EC00  F080         	call	_CANSetFilter
  3950                           
  3951                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3952  014478  0E00               	movlw	0
  3953  01447A  0100               	movlb	0	; () banked
  3954  01447C  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3955  01447E  0E00               	movlw	0
  3956  014480  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3957  014482  0E00               	movlw	0
  3958  014484  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3959  014486  0E00               	movlw	0
  3960  014488  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3961  01448A  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3962  01448E  0E01               	movlw	1
  3963  014490  EC00  F080         	call	_CANSetFilter
  3964                           
  3965                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3966  014494  0E00               	movlw	0
  3967  014496  0100               	movlb	0	; () banked
  3968  014498  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3969  01449A  0E00               	movlw	0
  3970  01449C  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3971  01449E  0E00               	movlw	0
  3972  0144A0  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3973  0144A2  0E00               	movlw	0
  3974  0144A4  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3975  0144A6  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3976  0144AA  0E02               	movlw	2
  3977  0144AC  EC00  F080         	call	_CANSetFilter
  3978                           
  3979                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3980  0144B0  0E00               	movlw	0
  3981  0144B2  0100               	movlb	0	; () banked
  3982  0144B4  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3983  0144B6  0E00               	movlw	0
  3984  0144B8  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3985  0144BA  0E00               	movlw	0
  3986  0144BC  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3987  0144BE  0E00               	movlw	0
  3988  0144C0  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3989  0144C2  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3990  0144C6  0E03               	movlw	3
  3991  0144C8  EC00  F080         	call	_CANSetFilter
  3992                           
  3993                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3994  0144CC  0E00               	movlw	0
  3995  0144CE  0100               	movlb	0	; () banked
  3996  0144D0  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3997  0144D2  0E00               	movlw	0
  3998  0144D4  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3999  0144D6  0E00               	movlw	0
  4000  0144D8  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4001  0144DA  0E00               	movlw	0
  4002  0144DC  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4003  0144DE  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4004  0144E2  0E04               	movlw	4
  4005  0144E4  EC00  F080         	call	_CANSetFilter
  4006                           
  4007                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  4008  0144E8  0E00               	movlw	0
  4009  0144EA  0100               	movlb	0	; () banked
  4010  0144EC  6F72               	movwf	CANSetFilter@filter& (0+255),b
  4011  0144EE  0E00               	movlw	0
  4012  0144F0  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4013  0144F2  0E00               	movlw	0
  4014  0144F4  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4015  0144F6  0E00               	movlw	0
  4016  0144F8  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4017  0144FA  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4018  0144FE  0E05               	movlw	5
  4019  014500  EC00  F080         	call	_CANSetFilter
  4020                           
  4021                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  4022  014504  0E00               	movlw	0
  4023  014506  ECF4  F0AF         	call	_CANOperationMode
  4024  01450A  0012               	return		;funcret
  4025  01450C                     __end_of_CANInitialize:
  4026                           	opt stack 0
  4027                           tblptru	equ	0xFF8
  4028                           tblptrh	equ	0xFF7
  4029                           tblptrl	equ	0xFF6
  4030                           tablat	equ	0xFF5
  4031                           prodh	equ	0xFF4
  4032                           prodl	equ	0xFF3
  4033                           intcon	equ	0xFF2
  4034                           postinc0	equ	0xFEE
  4035                           wreg	equ	0xFE8
  4036                           postinc2	equ	0xFDE
  4037                           fsr2h	equ	0xFDA
  4038                           fsr2l	equ	0xFD9
  4039                           status	equ	0xFD8
  4040                           
  4041 ;; *************** function _CANSetMask *****************
  4042 ;; Defined at:
  4043 ;;		line 640 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;  numBuffer       1    wreg     enum E16962
  4046 ;;  mask            4   18[BANK0 ] unsigned long 
  4047 ;;  type            1   22[BANK0 ] enum E16928
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  numBuffer       1   27[BANK0 ] enum E16962
  4050 ;;  tamp            4   28[BANK0 ] unsigned long 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;		None               void
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4060 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4061 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4062 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4063 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4064 ;;Total ram usage:       14 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; Hardware stack levels required when called:    3
  4067 ;; This function calls:
  4068 ;;		Nothing
  4069 ;; This function is called by:
  4070 ;;		_CANInitialize
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text3
  4075  01352A                     __ptext3:
  4076                           	opt stack 0
  4077  01352A                     _CANSetMask:
  4078                           	opt stack 25
  4079                           
  4080                           ;incstack = 0
  4081                           ;CANSetMask@numBuffer stored from wreg
  4082  01352A  0100               	movlb	0	; () banked
  4083  01352C  6F7B               	movwf	CANSetMask@numBuffer& (0+255),b
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  4087  01352E  0100               	movlb	0	; () banked
  4088  013530  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  4089  013532  A4D8               	btfss	status,2,c
  4090  013534  D057               	goto	l4932
  4091                           
  4092                           ; BSR set to: 0
  4093  013536  0100               	movlb	0	; () banked
  4094  013538  2976               	incf	CANSetMask@type& (0+255),w,b
  4095  01353A  A4D8               	btfss	status,2,c
  4096  01353C  D053               	goto	l4932
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;inc\CANlib.h: 644: {
  4100                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  4101  01353E  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  4102  013542  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4103  013546  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4104  01354A  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4105  01354E  0E04               	movlw	4
  4106  013550  D006               	goto	u5220
  4107  013552                     u5225:
  4108  013552  0100               	movlb	0	; () banked
  4109  013554  90D8               	bcf	status,0,c
  4110  013556  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4111  013558  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4112  01355A  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4113  01355C  3377               	rrcf	??_CANSetMask& (0+255),f,b
  4114  01355E                     u5220:
  4115  01355E  2EE8               	decfsz	wreg,f,c
  4116  013560  D7F8               	goto	u5225
  4117  013562  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4118  013566  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4119  01356A  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4120  01356E  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  4124  013572  0100               	movlb	0	; () banked
  4125  013574  517C               	movf	CANSetMask@tamp& (0+255),w,b
  4126  013576  0100               	movlb	0	; () banked
  4127  013578  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4128  01357A  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4129  01357C  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4130  01357E  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  4134  013580  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  4138  013584  0E07               	movlw	7
  4139  013586  0100               	movlb	0	; () banked
  4140  013588  1572               	andwf	CANSetMask@mask& (0+255),w,b
  4141  01358A  0100               	movlb	0	; () banked
  4142  01358C  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4143  01358E  0E00               	movlw	0
  4144  013590  0100               	movlb	0	; () banked
  4145  013592  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4146  013594  0100               	movlb	0	; () banked
  4147  013596  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4148  013598  0E00               	movlw	0
  4149  01359A  0100               	movlb	0	; () banked
  4150  01359C  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4151  01359E  0100               	movlb	0	; () banked
  4152  0135A0  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4153  0135A2  0E00               	movlw	0
  4154  0135A4  0100               	movlb	0	; () banked
  4155  0135A6  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4156  0135A8  0100               	movlb	0	; () banked
  4157  0135AA  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  4161  0135AC  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  4162  0135B0  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4163  0135B4  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4164  0135B8  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4165  0135BC  0E05               	movlw	5
  4166  0135BE                     u5235:
  4167  0135BE  90D8               	bcf	status,0,c
  4168  0135C0  0100               	movlb	0	; () banked
  4169  0135C2  3777               	rlcf	??_CANSetMask& (0+255),f,b
  4170  0135C4  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4171  0135C6  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4172  0135C8  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4173  0135CA  2EE8               	decfsz	wreg,f,c
  4174  0135CC  D7F8               	goto	u5235
  4175  0135CE  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4176  0135D2  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4177  0135D6  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4178  0135DA  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  4182  0135DE  C07C  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4183  0135E2  D000               	goto	l4932
  4184  0135E4                     l4932:
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;inc\CANlib.h: 652: }
  4188                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4189  0135E4  0E02               	movlw	2
  4190  0135E6  0100               	movlb	0	; () banked
  4191  0135E8  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4192  0135EA  A4D8               	btfss	status,2,c
  4193  0135EC  D057               	goto	l4948
  4194                           
  4195                           ; BSR set to: 0
  4196  0135EE  0100               	movlb	0	; () banked
  4197  0135F0  2976               	incf	CANSetMask@type& (0+255),w,b
  4198  0135F2  A4D8               	btfss	status,2,c
  4199  0135F4  D053               	goto	l4948
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;inc\CANlib.h: 655: {
  4203                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  4204  0135F6  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  4205  0135FA  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4206  0135FE  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4207  013602  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4208  013606  0E04               	movlw	4
  4209  013608  D006               	goto	u5260
  4210  01360A                     u5265:
  4211  01360A  0100               	movlb	0	; () banked
  4212  01360C  90D8               	bcf	status,0,c
  4213  01360E  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4214  013610  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4215  013612  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4216  013614  3377               	rrcf	??_CANSetMask& (0+255),f,b
  4217  013616                     u5260:
  4218  013616  2EE8               	decfsz	wreg,f,c
  4219  013618  D7F8               	goto	u5265
  4220  01361A  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4221  01361E  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4222  013622  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4223  013626  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  4227  01362A  0100               	movlb	0	; () banked
  4228  01362C  517C               	movf	CANSetMask@tamp& (0+255),w,b
  4229  01362E  0100               	movlb	0	; () banked
  4230  013630  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4231  013632  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4232  013634  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4233  013636  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4237  013638  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  4241  01363C  0E07               	movlw	7
  4242  01363E  0100               	movlb	0	; () banked
  4243  013640  1572               	andwf	CANSetMask@mask& (0+255),w,b
  4244  013642  0100               	movlb	0	; () banked
  4245  013644  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4246  013646  0E00               	movlw	0
  4247  013648  0100               	movlb	0	; () banked
  4248  01364A  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4249  01364C  0100               	movlb	0	; () banked
  4250  01364E  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4251  013650  0E00               	movlw	0
  4252  013652  0100               	movlb	0	; () banked
  4253  013654  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4254  013656  0100               	movlb	0	; () banked
  4255  013658  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4256  01365A  0E00               	movlw	0
  4257  01365C  0100               	movlb	0	; () banked
  4258  01365E  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4259  013660  0100               	movlb	0	; () banked
  4260  013662  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4264  013664  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  4265  013668  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4266  01366C  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4267  013670  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4268  013674  0E05               	movlw	5
  4269  013676                     u5275:
  4270  013676  90D8               	bcf	status,0,c
  4271  013678  0100               	movlb	0	; () banked
  4272  01367A  3777               	rlcf	??_CANSetMask& (0+255),f,b
  4273  01367C  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4274  01367E  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4275  013680  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4276  013682  2EE8               	decfsz	wreg,f,c
  4277  013684  D7F8               	goto	u5275
  4278  013686  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4279  01368A  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4280  01368E  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4281  013692  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4285  013696  C07C  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4286  01369A  D000               	goto	l4948
  4287  01369C                     l4948:
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;inc\CANlib.h: 663: }
  4291                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4292  01369C  0100               	movlb	0	; () banked
  4293  01369E  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  4294  0136A0  A4D8               	btfss	status,2,c
  4295  0136A2  D089               	goto	l4980
  4296                           
  4297                           ; BSR set to: 0
  4298  0136A4  0EF7               	movlw	247
  4299  0136A6  0100               	movlb	0	; () banked
  4300  0136A8  1976               	xorwf	CANSetMask@type& (0+255),w,b
  4301  0136AA  A4D8               	btfss	status,2,c
  4302  0136AC  D084               	goto	l4980
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;inc\CANlib.h: 666: {
  4306                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4307  0136AE  0100               	movlb	0	; () banked
  4308  0136B0  5172               	movf	CANSetMask@mask& (0+255),w,b
  4309  0136B2  0100               	movlb	0	; () banked
  4310  0136B4  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4311  0136B6  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4312  0136B8  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4313  0136BA  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4317  0136BC  C07C  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4321  0136C0  0E00               	movlw	0
  4322  0136C2  0100               	movlb	0	; () banked
  4323  0136C4  1572               	andwf	CANSetMask@mask& (0+255),w,b
  4324  0136C6  0100               	movlb	0	; () banked
  4325  0136C8  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4326  0136CA  0EFF               	movlw	255
  4327  0136CC  0100               	movlb	0	; () banked
  4328  0136CE  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4329  0136D0  0100               	movlb	0	; () banked
  4330  0136D2  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4331  0136D4  0E00               	movlw	0
  4332  0136D6  0100               	movlb	0	; () banked
  4333  0136D8  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4334  0136DA  0100               	movlb	0	; () banked
  4335  0136DC  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4336  0136DE  0E00               	movlw	0
  4337  0136E0  0100               	movlb	0	; () banked
  4338  0136E2  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4339  0136E4  0100               	movlb	0	; () banked
  4340  0136E6  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4344  0136E8  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  4345  0136EC  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4346  0136F0  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4347  0136F4  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4348  0136F8  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  4349  0136FC  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  4350  013700  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  4351  013704  0100               	movlb	0	; () banked
  4352  013706  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  4353  013708  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4354  01370C  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4355  013710  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4356  013714  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4360  013718  C07C  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4364  01371C  0100               	movlb	0	; () banked
  4365  01371E  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4366  013720  D003               	goto	l452
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4370  013722  010F               	movlb	15	; () banked
  4371  013724  8119               	bsf	25,0,b	;volatile
  4372  013726  D002               	goto	l453
  4373  013728                     l452:
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;inc\CANlib.h: 676: else
  4377                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4378  013728  010F               	movlb	15	; () banked
  4379  01372A  9119               	bcf	25,0,b	;volatile
  4380  01372C                     l453:
  4381                           
  4382                           ; BSR set to: 15
  4383                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4384  01372C  0100               	movlb	0	; () banked
  4385  01372E  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4386  013730  D003               	goto	l454
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4390  013732  010F               	movlb	15	; () banked
  4391  013734  8319               	bsf	25,1,b	;volatile
  4392  013736  D002               	goto	l455
  4393  013738                     l454:
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;inc\CANlib.h: 681: else
  4397                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4398  013738  010F               	movlb	15	; () banked
  4399  01373A  9319               	bcf	25,1,b	;volatile
  4400  01373C                     l455:
  4401                           
  4402                           ; BSR set to: 15
  4403                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4404  01373C  0100               	movlb	0	; () banked
  4405  01373E  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4406  013740  D003               	goto	l456
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4410  013742  010F               	movlb	15	; () banked
  4411  013744  8B19               	bsf	25,5,b	;volatile
  4412  013746  D002               	goto	l457
  4413  013748                     l456:
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;inc\CANlib.h: 686: else
  4417                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4418  013748  010F               	movlb	15	; () banked
  4419  01374A  9B19               	bcf	25,5,b	;volatile
  4420  01374C                     l457:
  4421                           
  4422                           ; BSR set to: 15
  4423                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4424  01374C  0100               	movlb	0	; () banked
  4425  01374E  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4426  013750  D003               	goto	l458
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4430  013752  010F               	movlb	15	; () banked
  4431  013754  8D19               	bsf	25,6,b	;volatile
  4432  013756  D002               	goto	l459
  4433  013758                     l458:
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;inc\CANlib.h: 691: else
  4437                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4438  013758  010F               	movlb	15	; () banked
  4439  01375A  9D19               	bcf	25,6,b	;volatile
  4440  01375C                     l459:
  4441                           
  4442                           ; BSR set to: 15
  4443                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4444  01375C  0100               	movlb	0	; () banked
  4445  01375E  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4446  013760  D003               	goto	l460
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4450  013762  010F               	movlb	15	; () banked
  4451  013764  8F19               	bsf	25,7,b	;volatile
  4452  013766  D003               	goto	l4974
  4453  013768                     l460:
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;inc\CANlib.h: 696: else
  4457                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4458  013768  010F               	movlb	15	; () banked
  4459  01376A  9F19               	bcf	25,7,b	;volatile
  4460  01376C  D000               	goto	l4974
  4461  01376E                     l4974:
  4462                           
  4463                           ; BSR set to: 15
  4464                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4465  01376E  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  4466  013772  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4467  013776  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4468  01377A  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4469  01377E  0E16               	movlw	22
  4470  013780  D006               	goto	u5350
  4471  013782                     u5355:
  4472  013782  0100               	movlb	0	; () banked
  4473  013784  90D8               	bcf	status,0,c
  4474  013786  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4475  013788  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4476  01378A  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4477  01378C  3377               	rrcf	??_CANSetMask& (0+255),f,b
  4478  01378E                     u5350:
  4479  01378E  2EE8               	decfsz	wreg,f,c
  4480  013790  D7F8               	goto	u5355
  4481  013792  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4482  013796  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4483  01379A  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4484  01379E  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4488  0137A2  0100               	movlb	0	; () banked
  4489  0137A4  517C               	movf	CANSetMask@tamp& (0+255),w,b
  4490  0137A6  0100               	movlb	0	; () banked
  4491  0137A8  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4492  0137AA  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4493  0137AC  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4494  0137AE  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4498  0137B0  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4499  0137B4  D000               	goto	l4980
  4500  0137B6                     l4980:
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;inc\CANlib.h: 702: }
  4504                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4505  0137B6  0E02               	movlw	2
  4506  0137B8  0100               	movlb	0	; () banked
  4507  0137BA  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4508  0137BC  A4D8               	btfss	status,2,c
  4509  0137BE  0012               	return	
  4510                           
  4511                           ; BSR set to: 0
  4512  0137C0  0EF7               	movlw	247
  4513  0137C2  0100               	movlb	0	; () banked
  4514  0137C4  1976               	xorwf	CANSetMask@type& (0+255),w,b
  4515  0137C6  A4D8               	btfss	status,2,c
  4516  0137C8  0012               	return	
  4517                           
  4518                           ; BSR set to: 0
  4519                           ;inc\CANlib.h: 705: {
  4520                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4521  0137CA  0100               	movlb	0	; () banked
  4522  0137CC  5172               	movf	CANSetMask@mask& (0+255),w,b
  4523  0137CE  0100               	movlb	0	; () banked
  4524  0137D0  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4525  0137D2  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4526  0137D4  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4527  0137D6  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4531  0137D8  C07C  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4535  0137DC  0E00               	movlw	0
  4536  0137DE  0100               	movlb	0	; () banked
  4537  0137E0  1572               	andwf	CANSetMask@mask& (0+255),w,b
  4538  0137E2  0100               	movlb	0	; () banked
  4539  0137E4  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4540  0137E6  0EFF               	movlw	255
  4541  0137E8  0100               	movlb	0	; () banked
  4542  0137EA  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4543  0137EC  0100               	movlb	0	; () banked
  4544  0137EE  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4545  0137F0  0E00               	movlw	0
  4546  0137F2  0100               	movlb	0	; () banked
  4547  0137F4  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4548  0137F6  0100               	movlb	0	; () banked
  4549  0137F8  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4550  0137FA  0E00               	movlw	0
  4551  0137FC  0100               	movlb	0	; () banked
  4552  0137FE  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4553  013800  0100               	movlb	0	; () banked
  4554  013802  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4558  013804  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  4559  013808  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4560  01380C  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4561  013810  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4562  013814  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  4563  013818  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  4564  01381C  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  4565  013820  0100               	movlb	0	; () banked
  4566  013822  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  4567  013824  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4568  013828  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4569  01382C  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4570  013830  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4574  013834  C07C  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4578  013838  0100               	movlb	0	; () banked
  4579  01383A  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4580  01383C  D003               	goto	l463
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4584  01383E  010F               	movlb	15	; () banked
  4585  013840  811D               	bsf	29,0,b	;volatile
  4586  013842  D002               	goto	l464
  4587  013844                     l463:
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;inc\CANlib.h: 715: else
  4591                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4592  013844  010F               	movlb	15	; () banked
  4593  013846  911D               	bcf	29,0,b	;volatile
  4594  013848                     l464:
  4595                           
  4596                           ; BSR set to: 15
  4597                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4598  013848  0100               	movlb	0	; () banked
  4599  01384A  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4600  01384C  D003               	goto	l465
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4604  01384E  010F               	movlb	15	; () banked
  4605  013850  831D               	bsf	29,1,b	;volatile
  4606  013852  D002               	goto	l466
  4607  013854                     l465:
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;inc\CANlib.h: 720: else
  4611                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4612  013854  010F               	movlb	15	; () banked
  4613  013856  931D               	bcf	29,1,b	;volatile
  4614  013858                     l466:
  4615                           
  4616                           ; BSR set to: 15
  4617                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4618  013858  0100               	movlb	0	; () banked
  4619  01385A  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4620  01385C  D003               	goto	l467
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4624  01385E  010F               	movlb	15	; () banked
  4625  013860  8B1D               	bsf	29,5,b	;volatile
  4626  013862  D002               	goto	l468
  4627  013864                     l467:
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;inc\CANlib.h: 725: else
  4631                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4632  013864  010F               	movlb	15	; () banked
  4633  013866  9B1D               	bcf	29,5,b	;volatile
  4634  013868                     l468:
  4635                           
  4636                           ; BSR set to: 15
  4637                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4638  013868  0100               	movlb	0	; () banked
  4639  01386A  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4640  01386C  D003               	goto	l469
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4644  01386E  010F               	movlb	15	; () banked
  4645  013870  8D1D               	bsf	29,6,b	;volatile
  4646  013872  D002               	goto	l470
  4647  013874                     l469:
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;inc\CANlib.h: 730: else
  4651                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4652  013874  010F               	movlb	15	; () banked
  4653  013876  9D1D               	bcf	29,6,b	;volatile
  4654  013878                     l470:
  4655                           
  4656                           ; BSR set to: 15
  4657                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4658  013878  0100               	movlb	0	; () banked
  4659  01387A  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4660  01387C  D003               	goto	l471
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4664  01387E  010F               	movlb	15	; () banked
  4665  013880  8F1D               	bsf	29,7,b	;volatile
  4666  013882  D003               	goto	l5006
  4667  013884                     l471:
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;inc\CANlib.h: 735: else
  4671                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4672  013884  010F               	movlb	15	; () banked
  4673  013886  9F1D               	bcf	29,7,b	;volatile
  4674  013888  D000               	goto	l5006
  4675  01388A                     l5006:
  4676                           
  4677                           ; BSR set to: 15
  4678                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4679  01388A  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  4680  01388E  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4681  013892  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4682  013896  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4683  01389A  0E16               	movlw	22
  4684  01389C  D006               	goto	u5430
  4685  01389E                     u5435:
  4686  01389E  0100               	movlb	0	; () banked
  4687  0138A0  90D8               	bcf	status,0,c
  4688  0138A2  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4689  0138A4  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4690  0138A6  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4691  0138A8  3377               	rrcf	??_CANSetMask& (0+255),f,b
  4692  0138AA                     u5430:
  4693  0138AA  2EE8               	decfsz	wreg,f,c
  4694  0138AC  D7F8               	goto	u5435
  4695  0138AE  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4696  0138B2  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4697  0138B6  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4698  0138BA  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4702  0138BE  0100               	movlb	0	; () banked
  4703  0138C0  517C               	movf	CANSetMask@tamp& (0+255),w,b
  4704  0138C2  0100               	movlb	0	; () banked
  4705  0138C4  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4706  0138C6  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4707  0138C8  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4708  0138CA  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4712  0138CC  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4713  0138D0  0012               	return	
  4714                           
  4715                           ; BSR set to: 0
  4716                           
  4717                           ; BSR set to: 0
  4718  0138D2  0012               	return		;funcret
  4719  0138D4                     __end_of_CANSetMask:
  4720                           	opt stack 0
  4721                           tblptru	equ	0xFF8
  4722                           tblptrh	equ	0xFF7
  4723                           tblptrl	equ	0xFF6
  4724                           tablat	equ	0xFF5
  4725                           prodh	equ	0xFF4
  4726                           prodl	equ	0xFF3
  4727                           intcon	equ	0xFF2
  4728                           postinc0	equ	0xFEE
  4729                           wreg	equ	0xFE8
  4730                           postinc2	equ	0xFDE
  4731                           fsr2h	equ	0xFDA
  4732                           fsr2l	equ	0xFD9
  4733                           status	equ	0xFD8
  4734                           
  4735 ;; *************** function _CANSetFilter *****************
  4736 ;; Defined at:
  4737 ;;		line 748 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;  numBuffer       1    wreg     enum E16965
  4740 ;;  filter          4   18[BANK0 ] unsigned long 
  4741 ;;  type            1   22[BANK0 ] enum E16928
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;  numBuffer       1   27[BANK0 ] enum E16965
  4744 ;;  tamp            4   28[BANK0 ] unsigned long 
  4745 ;; Return value:  Size  Location     Type
  4746 ;;		None               void
  4747 ;; Registers used:
  4748 ;;		wreg, status,2, status,0
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4754 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4757 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4758 ;;Total ram usage:       14 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; Hardware stack levels required when called:    3
  4761 ;; This function calls:
  4762 ;;		Nothing
  4763 ;; This function is called by:
  4764 ;;		_CANInitialize
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text4
  4769  010000                     __ptext4:
  4770                           	opt stack 0
  4771  010000                     _CANSetFilter:
  4772                           	opt stack 25
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;incstack = 0
  4776                           ;CANSetFilter@numBuffer stored from wreg
  4777  010000  0100               	movlb	0	; () banked
  4778  010002  6F7B               	movwf	CANSetFilter@numBuffer& (0+255),b
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;inc\CANlib.h: 750: unsigned long tamp;
  4782                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4783  010004  0100               	movlb	0	; () banked
  4784  010006  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4785  010008  0100               	movlb	0	; () banked
  4786  01000A  A4D8               	btfss	status,2,c
  4787  01000C  D059               	goto	l5030
  4788                           
  4789                           ; BSR set to: 0
  4790  01000E  0100               	movlb	0	; () banked
  4791  010010  2976               	incf	CANSetFilter@type& (0+255),w,b
  4792  010012  A4D8               	btfss	status,2,c
  4793  010014  D055               	goto	l5030
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;inc\CANlib.h: 753: {
  4797                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4798  010016  010F               	movlb	15	; () banked
  4799  010018  9701               	bcf	1,3,b	;volatile
  4800                           
  4801                           ; BSR set to: 15
  4802                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4803  01001A  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4804  01001E  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4805  010022  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4806  010026  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4807  01002A  0E04               	movlw	4
  4808  01002C  D006               	goto	u5460
  4809  01002E                     u5465:
  4810  01002E  0100               	movlb	0	; () banked
  4811  010030  90D8               	bcf	status,0,c
  4812  010032  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4813  010034  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4814  010036  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4815  010038  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4816  01003A                     u5460:
  4817  01003A  2EE8               	decfsz	wreg,f,c
  4818  01003C  D7F8               	goto	u5465
  4819  01003E  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4820  010042  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4821  010046  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4822  01004A  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4826  01004E  0100               	movlb	0	; () banked
  4827  010050  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4828  010052  0100               	movlb	0	; () banked
  4829  010054  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4830  010056  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4831  010058  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4832  01005A  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4836  01005C  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4840  010060  0E07               	movlw	7
  4841  010062  0100               	movlb	0	; () banked
  4842  010064  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4843  010066  0100               	movlb	0	; () banked
  4844  010068  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4845  01006A  0E00               	movlw	0
  4846  01006C  0100               	movlb	0	; () banked
  4847  01006E  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4848  010070  0100               	movlb	0	; () banked
  4849  010072  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4850  010074  0E00               	movlw	0
  4851  010076  0100               	movlb	0	; () banked
  4852  010078  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4853  01007A  0100               	movlb	0	; () banked
  4854  01007C  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4855  01007E  0E00               	movlw	0
  4856  010080  0100               	movlb	0	; () banked
  4857  010082  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4858  010084  0100               	movlb	0	; () banked
  4859  010086  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4860                           
  4861                           ; BSR set to: 0
  4862                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4863  010088  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4864  01008C  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4865  010090  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4866  010094  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4867  010098  0E05               	movlw	5
  4868  01009A                     u5475:
  4869  01009A  90D8               	bcf	status,0,c
  4870  01009C  0100               	movlb	0	; () banked
  4871  01009E  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4872  0100A0  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4873  0100A2  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4874  0100A4  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4875  0100A6  2EE8               	decfsz	wreg,f,c
  4876  0100A8  D7F8               	goto	u5475
  4877  0100AA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4878  0100AE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4879  0100B2  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4880  0100B6  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4884  0100BA  C07C  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4885  0100BE  D000               	goto	l5030
  4886  0100C0                     l5030:
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;inc\CANlib.h: 763: }
  4890                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4891  0100C0  0100               	movlb	0	; () banked
  4892  0100C2  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4893  0100C4  A4D8               	btfss	status,2,c
  4894  0100C6  D059               	goto	l5048
  4895                           
  4896                           ; BSR set to: 0
  4897  0100C8  0100               	movlb	0	; () banked
  4898  0100CA  2976               	incf	CANSetFilter@type& (0+255),w,b
  4899  0100CC  A4D8               	btfss	status,2,c
  4900  0100CE  D055               	goto	l5048
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;inc\CANlib.h: 766: {
  4904                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4905  0100D0  010F               	movlb	15	; () banked
  4906  0100D2  9705               	bcf	5,3,b	;volatile
  4907                           
  4908                           ; BSR set to: 15
  4909                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4910  0100D4  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4911  0100D8  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4912  0100DC  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4913  0100E0  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4914  0100E4  0E04               	movlw	4
  4915  0100E6  D006               	goto	u5500
  4916  0100E8                     u5505:
  4917  0100E8  0100               	movlb	0	; () banked
  4918  0100EA  90D8               	bcf	status,0,c
  4919  0100EC  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4920  0100EE  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4921  0100F0  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4922  0100F2  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4923  0100F4                     u5500:
  4924  0100F4  2EE8               	decfsz	wreg,f,c
  4925  0100F6  D7F8               	goto	u5505
  4926  0100F8  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4927  0100FC  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4928  010100  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4929  010104  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4933  010108  0100               	movlb	0	; () banked
  4934  01010A  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4935  01010C  0100               	movlb	0	; () banked
  4936  01010E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4937  010110  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4938  010112  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4939  010114  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4943  010116  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4947  01011A  0E07               	movlw	7
  4948  01011C  0100               	movlb	0	; () banked
  4949  01011E  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4950  010120  0100               	movlb	0	; () banked
  4951  010122  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4952  010124  0E00               	movlw	0
  4953  010126  0100               	movlb	0	; () banked
  4954  010128  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4955  01012A  0100               	movlb	0	; () banked
  4956  01012C  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4957  01012E  0E00               	movlw	0
  4958  010130  0100               	movlb	0	; () banked
  4959  010132  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4960  010134  0100               	movlb	0	; () banked
  4961  010136  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4962  010138  0E00               	movlw	0
  4963  01013A  0100               	movlb	0	; () banked
  4964  01013C  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4965  01013E  0100               	movlb	0	; () banked
  4966  010140  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4970  010142  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4971  010146  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4972  01014A  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4973  01014E  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4974  010152  0E05               	movlw	5
  4975  010154                     u5515:
  4976  010154  90D8               	bcf	status,0,c
  4977  010156  0100               	movlb	0	; () banked
  4978  010158  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4979  01015A  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4980  01015C  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4981  01015E  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4982  010160  2EE8               	decfsz	wreg,f,c
  4983  010162  D7F8               	goto	u5515
  4984  010164  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4985  010168  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4986  01016C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4987  010170  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4991  010174  C07C  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4992  010178  D000               	goto	l5048
  4993  01017A                     l5048:
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;inc\CANlib.h: 776: }
  4997                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4998  01017A  0E02               	movlw	2
  4999  01017C  0100               	movlb	0	; () banked
  5000  01017E  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5001  010180  A4D8               	btfss	status,2,c
  5002  010182  D059               	goto	l5066
  5003                           
  5004                           ; BSR set to: 0
  5005  010184  0100               	movlb	0	; () banked
  5006  010186  2976               	incf	CANSetFilter@type& (0+255),w,b
  5007  010188  A4D8               	btfss	status,2,c
  5008  01018A  D055               	goto	l5066
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;inc\CANlib.h: 779: {
  5012                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  5013  01018C  010F               	movlb	15	; () banked
  5014  01018E  9709               	bcf	9,3,b	;volatile
  5015                           
  5016                           ; BSR set to: 15
  5017                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  5018  010190  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5019  010194  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5020  010198  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5021  01019C  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5022  0101A0  0E04               	movlw	4
  5023  0101A2  D006               	goto	u5540
  5024  0101A4                     u5545:
  5025  0101A4  0100               	movlb	0	; () banked
  5026  0101A6  90D8               	bcf	status,0,c
  5027  0101A8  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5028  0101AA  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5029  0101AC  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5030  0101AE  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5031  0101B0                     u5540:
  5032  0101B0  2EE8               	decfsz	wreg,f,c
  5033  0101B2  D7F8               	goto	u5545
  5034  0101B4  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5035  0101B8  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5036  0101BC  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5037  0101C0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  5041  0101C4  0100               	movlb	0	; () banked
  5042  0101C6  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5043  0101C8  0100               	movlb	0	; () banked
  5044  0101CA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5045  0101CC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5046  0101CE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5047  0101D0  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  5051  0101D2  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  5055  0101D6  0E07               	movlw	7
  5056  0101D8  0100               	movlb	0	; () banked
  5057  0101DA  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5058  0101DC  0100               	movlb	0	; () banked
  5059  0101DE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5060  0101E0  0E00               	movlw	0
  5061  0101E2  0100               	movlb	0	; () banked
  5062  0101E4  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5063  0101E6  0100               	movlb	0	; () banked
  5064  0101E8  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5065  0101EA  0E00               	movlw	0
  5066  0101EC  0100               	movlb	0	; () banked
  5067  0101EE  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5068  0101F0  0100               	movlb	0	; () banked
  5069  0101F2  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5070  0101F4  0E00               	movlw	0
  5071  0101F6  0100               	movlb	0	; () banked
  5072  0101F8  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5073  0101FA  0100               	movlb	0	; () banked
  5074  0101FC  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  5078  0101FE  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5079  010202  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5080  010206  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5081  01020A  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5082  01020E  0E05               	movlw	5
  5083  010210                     u5555:
  5084  010210  90D8               	bcf	status,0,c
  5085  010212  0100               	movlb	0	; () banked
  5086  010214  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  5087  010216  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5088  010218  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5089  01021A  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5090  01021C  2EE8               	decfsz	wreg,f,c
  5091  01021E  D7F8               	goto	u5555
  5092  010220  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5093  010224  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5094  010228  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5095  01022C  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  5099  010230  C07C  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  5100  010234  D000               	goto	l5066
  5101  010236                     l5066:
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;inc\CANlib.h: 789: }
  5105                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  5106  010236  0E03               	movlw	3
  5107  010238  0100               	movlb	0	; () banked
  5108  01023A  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5109  01023C  A4D8               	btfss	status,2,c
  5110  01023E  D059               	goto	l5084
  5111                           
  5112                           ; BSR set to: 0
  5113  010240  0100               	movlb	0	; () banked
  5114  010242  2976               	incf	CANSetFilter@type& (0+255),w,b
  5115  010244  A4D8               	btfss	status,2,c
  5116  010246  D055               	goto	l5084
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;inc\CANlib.h: 792: {
  5120                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  5121  010248  010F               	movlb	15	; () banked
  5122  01024A  970D               	bcf	13,3,b	;volatile
  5123                           
  5124                           ; BSR set to: 15
  5125                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  5126  01024C  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5127  010250  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5128  010254  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5129  010258  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5130  01025C  0E04               	movlw	4
  5131  01025E  D006               	goto	u5580
  5132  010260                     u5585:
  5133  010260  0100               	movlb	0	; () banked
  5134  010262  90D8               	bcf	status,0,c
  5135  010264  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5136  010266  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5137  010268  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5138  01026A  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5139  01026C                     u5580:
  5140  01026C  2EE8               	decfsz	wreg,f,c
  5141  01026E  D7F8               	goto	u5585
  5142  010270  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5143  010274  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5144  010278  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5145  01027C  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  5149  010280  0100               	movlb	0	; () banked
  5150  010282  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5151  010284  0100               	movlb	0	; () banked
  5152  010286  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5153  010288  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5154  01028A  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5155  01028C  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  5159  01028E  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  5163  010292  0E07               	movlw	7
  5164  010294  0100               	movlb	0	; () banked
  5165  010296  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5166  010298  0100               	movlb	0	; () banked
  5167  01029A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5168  01029C  0E00               	movlw	0
  5169  01029E  0100               	movlb	0	; () banked
  5170  0102A0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5171  0102A2  0100               	movlb	0	; () banked
  5172  0102A4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5173  0102A6  0E00               	movlw	0
  5174  0102A8  0100               	movlb	0	; () banked
  5175  0102AA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5176  0102AC  0100               	movlb	0	; () banked
  5177  0102AE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5178  0102B0  0E00               	movlw	0
  5179  0102B2  0100               	movlb	0	; () banked
  5180  0102B4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5181  0102B6  0100               	movlb	0	; () banked
  5182  0102B8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  5186  0102BA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5187  0102BE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5188  0102C2  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5189  0102C6  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5190  0102CA  0E05               	movlw	5
  5191  0102CC                     u5595:
  5192  0102CC  90D8               	bcf	status,0,c
  5193  0102CE  0100               	movlb	0	; () banked
  5194  0102D0  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  5195  0102D2  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5196  0102D4  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5197  0102D6  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5198  0102D8  2EE8               	decfsz	wreg,f,c
  5199  0102DA  D7F8               	goto	u5595
  5200  0102DC  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5201  0102E0  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5202  0102E4  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5203  0102E8  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5207  0102EC  C07C  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5208  0102F0  D000               	goto	l5084
  5209  0102F2                     l5084:
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;inc\CANlib.h: 802: }
  5213                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5214  0102F2  0E04               	movlw	4
  5215  0102F4  0100               	movlb	0	; () banked
  5216  0102F6  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5217  0102F8  A4D8               	btfss	status,2,c
  5218  0102FA  D059               	goto	l5102
  5219                           
  5220                           ; BSR set to: 0
  5221  0102FC  0100               	movlb	0	; () banked
  5222  0102FE  2976               	incf	CANSetFilter@type& (0+255),w,b
  5223  010300  A4D8               	btfss	status,2,c
  5224  010302  D055               	goto	l5102
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;inc\CANlib.h: 805: {
  5228                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5229  010304  010F               	movlb	15	; () banked
  5230  010306  9711               	bcf	17,3,b	;volatile
  5231                           
  5232                           ; BSR set to: 15
  5233                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  5234  010308  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5235  01030C  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5236  010310  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5237  010314  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5238  010318  0E04               	movlw	4
  5239  01031A  D006               	goto	u5620
  5240  01031C                     u5625:
  5241  01031C  0100               	movlb	0	; () banked
  5242  01031E  90D8               	bcf	status,0,c
  5243  010320  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5244  010322  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5245  010324  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5246  010326  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5247  010328                     u5620:
  5248  010328  2EE8               	decfsz	wreg,f,c
  5249  01032A  D7F8               	goto	u5625
  5250  01032C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5251  010330  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5252  010334  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5253  010338  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5257  01033C  0100               	movlb	0	; () banked
  5258  01033E  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5259  010340  0100               	movlb	0	; () banked
  5260  010342  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5261  010344  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5262  010346  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5263  010348  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5267  01034A  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5271  01034E  0E07               	movlw	7
  5272  010350  0100               	movlb	0	; () banked
  5273  010352  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5274  010354  0100               	movlb	0	; () banked
  5275  010356  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5276  010358  0E00               	movlw	0
  5277  01035A  0100               	movlb	0	; () banked
  5278  01035C  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5279  01035E  0100               	movlb	0	; () banked
  5280  010360  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5281  010362  0E00               	movlw	0
  5282  010364  0100               	movlb	0	; () banked
  5283  010366  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5284  010368  0100               	movlb	0	; () banked
  5285  01036A  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5286  01036C  0E00               	movlw	0
  5287  01036E  0100               	movlb	0	; () banked
  5288  010370  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5289  010372  0100               	movlb	0	; () banked
  5290  010374  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5294  010376  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5295  01037A  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5296  01037E  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5297  010382  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5298  010386  0E05               	movlw	5
  5299  010388                     u5635:
  5300  010388  90D8               	bcf	status,0,c
  5301  01038A  0100               	movlb	0	; () banked
  5302  01038C  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  5303  01038E  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5304  010390  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5305  010392  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5306  010394  2EE8               	decfsz	wreg,f,c
  5307  010396  D7F8               	goto	u5635
  5308  010398  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5309  01039C  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5310  0103A0  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5311  0103A4  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5315  0103A8  C07C  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5316  0103AC  D000               	goto	l5102
  5317  0103AE                     l5102:
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;inc\CANlib.h: 815: }
  5321                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5322  0103AE  0E05               	movlw	5
  5323  0103B0  0100               	movlb	0	; () banked
  5324  0103B2  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5325  0103B4  A4D8               	btfss	status,2,c
  5326  0103B6  D059               	goto	l5120
  5327                           
  5328                           ; BSR set to: 0
  5329  0103B8  0100               	movlb	0	; () banked
  5330  0103BA  2976               	incf	CANSetFilter@type& (0+255),w,b
  5331  0103BC  A4D8               	btfss	status,2,c
  5332  0103BE  D055               	goto	l5120
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;inc\CANlib.h: 818: {
  5336                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5337  0103C0  010F               	movlb	15	; () banked
  5338  0103C2  9715               	bcf	21,3,b	;volatile
  5339                           
  5340                           ; BSR set to: 15
  5341                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5342  0103C4  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5343  0103C8  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5344  0103CC  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5345  0103D0  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5346  0103D4  0E04               	movlw	4
  5347  0103D6  D006               	goto	u5660
  5348  0103D8                     u5665:
  5349  0103D8  0100               	movlb	0	; () banked
  5350  0103DA  90D8               	bcf	status,0,c
  5351  0103DC  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5352  0103DE  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5353  0103E0  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5354  0103E2  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5355  0103E4                     u5660:
  5356  0103E4  2EE8               	decfsz	wreg,f,c
  5357  0103E6  D7F8               	goto	u5665
  5358  0103E8  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5359  0103EC  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5360  0103F0  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5361  0103F4  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5365  0103F8  0100               	movlb	0	; () banked
  5366  0103FA  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5367  0103FC  0100               	movlb	0	; () banked
  5368  0103FE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5369  010400  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5370  010402  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5371  010404  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5375  010406  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5376                           
  5377                           ; BSR set to: 0
  5378                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5379  01040A  0E07               	movlw	7
  5380  01040C  0100               	movlb	0	; () banked
  5381  01040E  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5382  010410  0100               	movlb	0	; () banked
  5383  010412  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5384  010414  0E00               	movlw	0
  5385  010416  0100               	movlb	0	; () banked
  5386  010418  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5387  01041A  0100               	movlb	0	; () banked
  5388  01041C  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5389  01041E  0E00               	movlw	0
  5390  010420  0100               	movlb	0	; () banked
  5391  010422  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5392  010424  0100               	movlb	0	; () banked
  5393  010426  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5394  010428  0E00               	movlw	0
  5395  01042A  0100               	movlb	0	; () banked
  5396  01042C  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5397  01042E  0100               	movlb	0	; () banked
  5398  010430  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5402  010432  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5403  010436  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5404  01043A  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5405  01043E  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5406  010442  0E05               	movlw	5
  5407  010444                     u5675:
  5408  010444  90D8               	bcf	status,0,c
  5409  010446  0100               	movlb	0	; () banked
  5410  010448  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  5411  01044A  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5412  01044C  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5413  01044E  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5414  010450  2EE8               	decfsz	wreg,f,c
  5415  010452  D7F8               	goto	u5675
  5416  010454  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5417  010458  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5418  01045C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5419  010460  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5420                           
  5421                           ; BSR set to: 0
  5422                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5423  010464  C07C  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5424  010468  D000               	goto	l5120
  5425  01046A                     l5120:
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;inc\CANlib.h: 828: }
  5429                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5430  01046A  0100               	movlb	0	; () banked
  5431  01046C  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5432  01046E  0100               	movlb	0	; () banked
  5433  010470  A4D8               	btfss	status,2,c
  5434  010472  D08B               	goto	l5154
  5435                           
  5436                           ; BSR set to: 0
  5437  010474  0EF7               	movlw	247
  5438  010476  0100               	movlb	0	; () banked
  5439  010478  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5440  01047A  A4D8               	btfss	status,2,c
  5441  01047C  D086               	goto	l5154
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;inc\CANlib.h: 832: {
  5445                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5446  01047E  010F               	movlb	15	; () banked
  5447  010480  8701               	bsf	1,3,b	;volatile
  5448                           
  5449                           ; BSR set to: 15
  5450                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5451  010482  0100               	movlb	0	; () banked
  5452  010484  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5453  010486  0100               	movlb	0	; () banked
  5454  010488  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5455  01048A  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5456  01048C  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5457  01048E  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5461  010490  C07C  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5465  010494  0E00               	movlw	0
  5466  010496  0100               	movlb	0	; () banked
  5467  010498  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5468  01049A  0100               	movlb	0	; () banked
  5469  01049C  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5470  01049E  0EFF               	movlw	255
  5471  0104A0  0100               	movlb	0	; () banked
  5472  0104A2  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5473  0104A4  0100               	movlb	0	; () banked
  5474  0104A6  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5475  0104A8  0E00               	movlw	0
  5476  0104AA  0100               	movlb	0	; () banked
  5477  0104AC  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5478  0104AE  0100               	movlb	0	; () banked
  5479  0104B0  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5480  0104B2  0E00               	movlw	0
  5481  0104B4  0100               	movlb	0	; () banked
  5482  0104B6  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5483  0104B8  0100               	movlb	0	; () banked
  5484  0104BA  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5488  0104BC  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5489  0104C0  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5490  0104C4  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5491  0104C8  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5492  0104CC  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5493  0104D0  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5494  0104D4  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5495  0104D8  0100               	movlb	0	; () banked
  5496  0104DA  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5497  0104DC  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5498  0104E0  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5499  0104E4  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5500  0104E8  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5504  0104EC  C07C  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5505                           
  5506                           ; BSR set to: 0
  5507                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5508  0104F0  0100               	movlb	0	; () banked
  5509  0104F2  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5510  0104F4  D003               	goto	l483
  5511                           
  5512                           ; BSR set to: 0
  5513                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5514  0104F6  010F               	movlb	15	; () banked
  5515  0104F8  8101               	bsf	1,0,b	;volatile
  5516  0104FA  D002               	goto	l484
  5517  0104FC                     l483:
  5518                           
  5519                           ; BSR set to: 0
  5520                           ;inc\CANlib.h: 844: else
  5521                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5522  0104FC  010F               	movlb	15	; () banked
  5523  0104FE  9101               	bcf	1,0,b	;volatile
  5524  010500                     l484:
  5525                           
  5526                           ; BSR set to: 15
  5527                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5528  010500  0100               	movlb	0	; () banked
  5529  010502  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5530  010504  D003               	goto	l485
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5534  010506  010F               	movlb	15	; () banked
  5535  010508  8301               	bsf	1,1,b	;volatile
  5536  01050A  D002               	goto	l486
  5537  01050C                     l485:
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;inc\CANlib.h: 849: else
  5541                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5542  01050C  010F               	movlb	15	; () banked
  5543  01050E  9301               	bcf	1,1,b	;volatile
  5544  010510                     l486:
  5545                           
  5546                           ; BSR set to: 15
  5547                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5548  010510  0100               	movlb	0	; () banked
  5549  010512  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5550  010514  D003               	goto	l487
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5554  010516  010F               	movlb	15	; () banked
  5555  010518  8B01               	bsf	1,5,b	;volatile
  5556  01051A  D002               	goto	l488
  5557  01051C                     l487:
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;inc\CANlib.h: 854: else
  5561                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5562  01051C  010F               	movlb	15	; () banked
  5563  01051E  9B01               	bcf	1,5,b	;volatile
  5564  010520                     l488:
  5565                           
  5566                           ; BSR set to: 15
  5567                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5568  010520  0100               	movlb	0	; () banked
  5569  010522  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5570  010524  D003               	goto	l489
  5571                           
  5572                           ; BSR set to: 0
  5573                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5574  010526  010F               	movlb	15	; () banked
  5575  010528  8D01               	bsf	1,6,b	;volatile
  5576  01052A  D002               	goto	l490
  5577  01052C                     l489:
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;inc\CANlib.h: 859: else
  5581                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5582  01052C  010F               	movlb	15	; () banked
  5583  01052E  9D01               	bcf	1,6,b	;volatile
  5584  010530                     l490:
  5585                           
  5586                           ; BSR set to: 15
  5587                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5588  010530  0100               	movlb	0	; () banked
  5589  010532  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5590  010534  D003               	goto	l491
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5594  010536  010F               	movlb	15	; () banked
  5595  010538  8F01               	bsf	1,7,b	;volatile
  5596  01053A  D003               	goto	l5148
  5597  01053C                     l491:
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;inc\CANlib.h: 864: else
  5601                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5602  01053C  010F               	movlb	15	; () banked
  5603  01053E  9F01               	bcf	1,7,b	;volatile
  5604  010540  D000               	goto	l5148
  5605  010542                     l5148:
  5606                           
  5607                           ; BSR set to: 15
  5608                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5609  010542  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5610  010546  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5611  01054A  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5612  01054E  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5613  010552  0E16               	movlw	22
  5614  010554  D006               	goto	u5750
  5615  010556                     u5755:
  5616  010556  0100               	movlb	0	; () banked
  5617  010558  90D8               	bcf	status,0,c
  5618  01055A  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5619  01055C  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5620  01055E  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5621  010560  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5622  010562                     u5750:
  5623  010562  2EE8               	decfsz	wreg,f,c
  5624  010564  D7F8               	goto	u5755
  5625  010566  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5626  01056A  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5627  01056E  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5628  010572  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5632  010576  0100               	movlb	0	; () banked
  5633  010578  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5634  01057A  0100               	movlb	0	; () banked
  5635  01057C  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5636  01057E  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5637  010580  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5638  010582  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5642  010584  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5643  010588  D000               	goto	l5154
  5644  01058A                     l5154:
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;inc\CANlib.h: 870: }
  5648                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5649  01058A  0100               	movlb	0	; () banked
  5650  01058C  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5651  01058E  A4D8               	btfss	status,2,c
  5652  010590  D08B               	goto	l5188
  5653                           
  5654                           ; BSR set to: 0
  5655  010592  0EF7               	movlw	247
  5656  010594  0100               	movlb	0	; () banked
  5657  010596  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5658  010598  A4D8               	btfss	status,2,c
  5659  01059A  D086               	goto	l5188
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;inc\CANlib.h: 873: {
  5663                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5664  01059C  010F               	movlb	15	; () banked
  5665  01059E  8705               	bsf	5,3,b	;volatile
  5666                           
  5667                           ; BSR set to: 15
  5668                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5669  0105A0  0100               	movlb	0	; () banked
  5670  0105A2  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5671  0105A4  0100               	movlb	0	; () banked
  5672  0105A6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5673  0105A8  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5674  0105AA  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5675  0105AC  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5679  0105AE  C07C  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5683  0105B2  0E00               	movlw	0
  5684  0105B4  0100               	movlb	0	; () banked
  5685  0105B6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5686  0105B8  0100               	movlb	0	; () banked
  5687  0105BA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5688  0105BC  0EFF               	movlw	255
  5689  0105BE  0100               	movlb	0	; () banked
  5690  0105C0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5691  0105C2  0100               	movlb	0	; () banked
  5692  0105C4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5693  0105C6  0E00               	movlw	0
  5694  0105C8  0100               	movlb	0	; () banked
  5695  0105CA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5696  0105CC  0100               	movlb	0	; () banked
  5697  0105CE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5698  0105D0  0E00               	movlw	0
  5699  0105D2  0100               	movlb	0	; () banked
  5700  0105D4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5701  0105D6  0100               	movlb	0	; () banked
  5702  0105D8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5706  0105DA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5707  0105DE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5708  0105E2  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5709  0105E6  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5710  0105EA  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5711  0105EE  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5712  0105F2  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5713  0105F6  0100               	movlb	0	; () banked
  5714  0105F8  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5715  0105FA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5716  0105FE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5717  010602  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5718  010606  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5719                           
  5720                           ; BSR set to: 0
  5721                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5722  01060A  C07C  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5726  01060E  0100               	movlb	0	; () banked
  5727  010610  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5728  010612  D003               	goto	l494
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5732  010614  010F               	movlb	15	; () banked
  5733  010616  8105               	bsf	5,0,b	;volatile
  5734  010618  D002               	goto	l495
  5735  01061A                     l494:
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;inc\CANlib.h: 885: else
  5739                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5740  01061A  010F               	movlb	15	; () banked
  5741  01061C  9105               	bcf	5,0,b	;volatile
  5742  01061E                     l495:
  5743                           
  5744                           ; BSR set to: 15
  5745                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5746  01061E  0100               	movlb	0	; () banked
  5747  010620  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5748  010622  D003               	goto	l496
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5752  010624  010F               	movlb	15	; () banked
  5753  010626  8305               	bsf	5,1,b	;volatile
  5754  010628  D002               	goto	l497
  5755  01062A                     l496:
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;inc\CANlib.h: 890: else
  5759                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5760  01062A  010F               	movlb	15	; () banked
  5761  01062C  9305               	bcf	5,1,b	;volatile
  5762  01062E                     l497:
  5763                           
  5764                           ; BSR set to: 15
  5765                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5766  01062E  0100               	movlb	0	; () banked
  5767  010630  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5768  010632  D003               	goto	l498
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5772  010634  010F               	movlb	15	; () banked
  5773  010636  8B05               	bsf	5,5,b	;volatile
  5774  010638  D002               	goto	l499
  5775  01063A                     l498:
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;inc\CANlib.h: 895: else
  5779                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5780  01063A  010F               	movlb	15	; () banked
  5781  01063C  9B05               	bcf	5,5,b	;volatile
  5782  01063E                     l499:
  5783                           
  5784                           ; BSR set to: 15
  5785                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5786  01063E  0100               	movlb	0	; () banked
  5787  010640  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5788  010642  D003               	goto	l500
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5792  010644  010F               	movlb	15	; () banked
  5793  010646  8D05               	bsf	5,6,b	;volatile
  5794  010648  D002               	goto	l501
  5795  01064A                     l500:
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;inc\CANlib.h: 900: else
  5799                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5800  01064A  010F               	movlb	15	; () banked
  5801  01064C  9D05               	bcf	5,6,b	;volatile
  5802  01064E                     l501:
  5803                           
  5804                           ; BSR set to: 15
  5805                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5806  01064E  0100               	movlb	0	; () banked
  5807  010650  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5808  010652  D003               	goto	l502
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5812  010654  010F               	movlb	15	; () banked
  5813  010656  8F05               	bsf	5,7,b	;volatile
  5814  010658  D003               	goto	l5182
  5815  01065A                     l502:
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;inc\CANlib.h: 905: else
  5819                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5820  01065A  010F               	movlb	15	; () banked
  5821  01065C  9F05               	bcf	5,7,b	;volatile
  5822  01065E  D000               	goto	l5182
  5823  010660                     l5182:
  5824                           
  5825                           ; BSR set to: 15
  5826                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5827  010660  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5828  010664  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5829  010668  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5830  01066C  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5831  010670  0E16               	movlw	22
  5832  010672  D006               	goto	u5830
  5833  010674                     u5835:
  5834  010674  0100               	movlb	0	; () banked
  5835  010676  90D8               	bcf	status,0,c
  5836  010678  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5837  01067A  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5838  01067C  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5839  01067E  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5840  010680                     u5830:
  5841  010680  2EE8               	decfsz	wreg,f,c
  5842  010682  D7F8               	goto	u5835
  5843  010684  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5844  010688  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5845  01068C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5846  010690  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5850  010694  0100               	movlb	0	; () banked
  5851  010696  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5852  010698  0100               	movlb	0	; () banked
  5853  01069A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5854  01069C  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5855  01069E  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5856  0106A0  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5860  0106A2  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5861  0106A6  D000               	goto	l5188
  5862  0106A8                     l5188:
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;inc\CANlib.h: 911: }
  5866                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5867  0106A8  0E02               	movlw	2
  5868  0106AA  0100               	movlb	0	; () banked
  5869  0106AC  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5870  0106AE  A4D8               	btfss	status,2,c
  5871  0106B0  D08B               	goto	l5222
  5872                           
  5873                           ; BSR set to: 0
  5874  0106B2  0EF7               	movlw	247
  5875  0106B4  0100               	movlb	0	; () banked
  5876  0106B6  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5877  0106B8  A4D8               	btfss	status,2,c
  5878  0106BA  D086               	goto	l5222
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;inc\CANlib.h: 915: {
  5882                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5883  0106BC  010F               	movlb	15	; () banked
  5884  0106BE  8709               	bsf	9,3,b	;volatile
  5885                           
  5886                           ; BSR set to: 15
  5887                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5888  0106C0  0100               	movlb	0	; () banked
  5889  0106C2  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5890  0106C4  0100               	movlb	0	; () banked
  5891  0106C6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5892  0106C8  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5893  0106CA  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5894  0106CC  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5898  0106CE  C07C  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5899                           
  5900                           ; BSR set to: 0
  5901                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5902  0106D2  0E00               	movlw	0
  5903  0106D4  0100               	movlb	0	; () banked
  5904  0106D6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5905  0106D8  0100               	movlb	0	; () banked
  5906  0106DA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5907  0106DC  0EFF               	movlw	255
  5908  0106DE  0100               	movlb	0	; () banked
  5909  0106E0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5910  0106E2  0100               	movlb	0	; () banked
  5911  0106E4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5912  0106E6  0E00               	movlw	0
  5913  0106E8  0100               	movlb	0	; () banked
  5914  0106EA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5915  0106EC  0100               	movlb	0	; () banked
  5916  0106EE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5917  0106F0  0E00               	movlw	0
  5918  0106F2  0100               	movlb	0	; () banked
  5919  0106F4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5920  0106F6  0100               	movlb	0	; () banked
  5921  0106F8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5925  0106FA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5926  0106FE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5927  010702  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5928  010706  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5929  01070A  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5930  01070E  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5931  010712  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5932  010716  0100               	movlb	0	; () banked
  5933  010718  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5934  01071A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5935  01071E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5936  010722  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5937  010726  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5938                           
  5939                           ; BSR set to: 0
  5940                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5941  01072A  C07C  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5942                           
  5943                           ; BSR set to: 0
  5944                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5945  01072E  0100               	movlb	0	; () banked
  5946  010730  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5947  010732  D003               	goto	l505
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5951  010734  010F               	movlb	15	; () banked
  5952  010736  8109               	bsf	9,0,b	;volatile
  5953  010738  D002               	goto	l506
  5954  01073A                     l505:
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;inc\CANlib.h: 927: else
  5958                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5959  01073A  010F               	movlb	15	; () banked
  5960  01073C  9109               	bcf	9,0,b	;volatile
  5961  01073E                     l506:
  5962                           
  5963                           ; BSR set to: 15
  5964                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5965  01073E  0100               	movlb	0	; () banked
  5966  010740  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5967  010742  D003               	goto	l507
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5971  010744  010F               	movlb	15	; () banked
  5972  010746  8309               	bsf	9,1,b	;volatile
  5973  010748  D002               	goto	l508
  5974  01074A                     l507:
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;inc\CANlib.h: 932: else
  5978                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5979  01074A  010F               	movlb	15	; () banked
  5980  01074C  9309               	bcf	9,1,b	;volatile
  5981  01074E                     l508:
  5982                           
  5983                           ; BSR set to: 15
  5984                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5985  01074E  0100               	movlb	0	; () banked
  5986  010750  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5987  010752  D003               	goto	l509
  5988                           
  5989                           ; BSR set to: 0
  5990                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5991  010754  010F               	movlb	15	; () banked
  5992  010756  8B09               	bsf	9,5,b	;volatile
  5993  010758  D002               	goto	l510
  5994  01075A                     l509:
  5995                           
  5996                           ; BSR set to: 0
  5997                           ;inc\CANlib.h: 937: else
  5998                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5999  01075A  010F               	movlb	15	; () banked
  6000  01075C  9B09               	bcf	9,5,b	;volatile
  6001  01075E                     l510:
  6002                           
  6003                           ; BSR set to: 15
  6004                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  6005  01075E  0100               	movlb	0	; () banked
  6006  010760  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6007  010762  D003               	goto	l511
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  6011  010764  010F               	movlb	15	; () banked
  6012  010766  8D09               	bsf	9,6,b	;volatile
  6013  010768  D002               	goto	l512
  6014  01076A                     l511:
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;inc\CANlib.h: 942: else
  6018                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  6019  01076A  010F               	movlb	15	; () banked
  6020  01076C  9D09               	bcf	9,6,b	;volatile
  6021  01076E                     l512:
  6022                           
  6023                           ; BSR set to: 15
  6024                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  6025  01076E  0100               	movlb	0	; () banked
  6026  010770  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6027  010772  D003               	goto	l513
  6028                           
  6029                           ; BSR set to: 0
  6030                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  6031  010774  010F               	movlb	15	; () banked
  6032  010776  8F09               	bsf	9,7,b	;volatile
  6033  010778  D003               	goto	l5216
  6034  01077A                     l513:
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;inc\CANlib.h: 947: else
  6038                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  6039  01077A  010F               	movlb	15	; () banked
  6040  01077C  9F09               	bcf	9,7,b	;volatile
  6041  01077E  D000               	goto	l5216
  6042  010780                     l5216:
  6043                           
  6044                           ; BSR set to: 15
  6045                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  6046  010780  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  6047  010784  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6048  010788  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6049  01078C  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6050  010790  0E16               	movlw	22
  6051  010792  D006               	goto	u5910
  6052  010794                     u5915:
  6053  010794  0100               	movlb	0	; () banked
  6054  010796  90D8               	bcf	status,0,c
  6055  010798  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6056  01079A  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6057  01079C  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6058  01079E  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  6059  0107A0                     u5910:
  6060  0107A0  2EE8               	decfsz	wreg,f,c
  6061  0107A2  D7F8               	goto	u5915
  6062  0107A4  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6063  0107A8  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6064  0107AC  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6065  0107B0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  6069  0107B4  0100               	movlb	0	; () banked
  6070  0107B6  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  6071  0107B8  0100               	movlb	0	; () banked
  6072  0107BA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6073  0107BC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6074  0107BE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6075  0107C0  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  6079  0107C2  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  6080  0107C6  D000               	goto	l5222
  6081  0107C8                     l5222:
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;inc\CANlib.h: 953: }
  6085                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  6086  0107C8  0E03               	movlw	3
  6087  0107CA  0100               	movlb	0	; () banked
  6088  0107CC  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6089  0107CE  A4D8               	btfss	status,2,c
  6090  0107D0  D08B               	goto	l5256
  6091                           
  6092                           ; BSR set to: 0
  6093  0107D2  0EF7               	movlw	247
  6094  0107D4  0100               	movlb	0	; () banked
  6095  0107D6  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  6096  0107D8  A4D8               	btfss	status,2,c
  6097  0107DA  D086               	goto	l5256
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;inc\CANlib.h: 956: {
  6101                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  6102  0107DC  010F               	movlb	15	; () banked
  6103  0107DE  870D               	bsf	13,3,b	;volatile
  6104                           
  6105                           ; BSR set to: 15
  6106                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  6107  0107E0  0100               	movlb	0	; () banked
  6108  0107E2  5172               	movf	CANSetFilter@filter& (0+255),w,b
  6109  0107E4  0100               	movlb	0	; () banked
  6110  0107E6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6111  0107E8  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6112  0107EA  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6113  0107EC  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  6117  0107EE  C07C  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  6118                           
  6119                           ; BSR set to: 0
  6120                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  6121  0107F2  0E00               	movlw	0
  6122  0107F4  0100               	movlb	0	; () banked
  6123  0107F6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  6124  0107F8  0100               	movlb	0	; () banked
  6125  0107FA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6126  0107FC  0EFF               	movlw	255
  6127  0107FE  0100               	movlb	0	; () banked
  6128  010800  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6129  010802  0100               	movlb	0	; () banked
  6130  010804  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6131  010806  0E00               	movlw	0
  6132  010808  0100               	movlb	0	; () banked
  6133  01080A  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6134  01080C  0100               	movlb	0	; () banked
  6135  01080E  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6136  010810  0E00               	movlw	0
  6137  010812  0100               	movlb	0	; () banked
  6138  010814  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6139  010816  0100               	movlb	0	; () banked
  6140  010818  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  6144  01081A  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  6145  01081E  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6146  010822  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6147  010826  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6148  01082A  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  6149  01082E  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6150  010832  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6151  010836  0100               	movlb	0	; () banked
  6152  010838  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  6153  01083A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6154  01083E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6155  010842  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6156  010846  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6157                           
  6158                           ; BSR set to: 0
  6159                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  6160  01084A  C07C  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  6164  01084E  0100               	movlb	0	; () banked
  6165  010850  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6166  010852  D003               	goto	l516
  6167                           
  6168                           ; BSR set to: 0
  6169                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  6170  010854  010F               	movlb	15	; () banked
  6171  010856  810D               	bsf	13,0,b	;volatile
  6172  010858  D002               	goto	l517
  6173  01085A                     l516:
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;inc\CANlib.h: 968: else
  6177                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  6178  01085A  010F               	movlb	15	; () banked
  6179  01085C  910D               	bcf	13,0,b	;volatile
  6180  01085E                     l517:
  6181                           
  6182                           ; BSR set to: 15
  6183                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  6184  01085E  0100               	movlb	0	; () banked
  6185  010860  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6186  010862  D003               	goto	l518
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  6190  010864  010F               	movlb	15	; () banked
  6191  010866  830D               	bsf	13,1,b	;volatile
  6192  010868  D002               	goto	l519
  6193  01086A                     l518:
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;inc\CANlib.h: 973: else
  6197                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  6198  01086A  010F               	movlb	15	; () banked
  6199  01086C  930D               	bcf	13,1,b	;volatile
  6200  01086E                     l519:
  6201                           
  6202                           ; BSR set to: 15
  6203                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  6204  01086E  0100               	movlb	0	; () banked
  6205  010870  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6206  010872  D003               	goto	l520
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6210  010874  010F               	movlb	15	; () banked
  6211  010876  8B0D               	bsf	13,5,b	;volatile
  6212  010878  D002               	goto	l521
  6213  01087A                     l520:
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;inc\CANlib.h: 978: else
  6217                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6218  01087A  010F               	movlb	15	; () banked
  6219  01087C  9B0D               	bcf	13,5,b	;volatile
  6220  01087E                     l521:
  6221                           
  6222                           ; BSR set to: 15
  6223                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  6224  01087E  0100               	movlb	0	; () banked
  6225  010880  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6226  010882  D003               	goto	l522
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6230  010884  010F               	movlb	15	; () banked
  6231  010886  8D0D               	bsf	13,6,b	;volatile
  6232  010888  D002               	goto	l523
  6233  01088A                     l522:
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;inc\CANlib.h: 983: else
  6237                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6238  01088A  010F               	movlb	15	; () banked
  6239  01088C  9D0D               	bcf	13,6,b	;volatile
  6240  01088E                     l523:
  6241                           
  6242                           ; BSR set to: 15
  6243                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  6244  01088E  0100               	movlb	0	; () banked
  6245  010890  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6246  010892  D003               	goto	l524
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6250  010894  010F               	movlb	15	; () banked
  6251  010896  8F0D               	bsf	13,7,b	;volatile
  6252  010898  D003               	goto	l5250
  6253  01089A                     l524:
  6254                           
  6255                           ; BSR set to: 0
  6256                           ;inc\CANlib.h: 988: else
  6257                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6258  01089A  010F               	movlb	15	; () banked
  6259  01089C  9F0D               	bcf	13,7,b	;volatile
  6260  01089E  D000               	goto	l5250
  6261  0108A0                     l5250:
  6262                           
  6263                           ; BSR set to: 15
  6264                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6265  0108A0  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  6266  0108A4  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6267  0108A8  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6268  0108AC  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6269  0108B0  0E16               	movlw	22
  6270  0108B2  D006               	goto	u5990
  6271  0108B4                     u5995:
  6272  0108B4  0100               	movlb	0	; () banked
  6273  0108B6  90D8               	bcf	status,0,c
  6274  0108B8  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6275  0108BA  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6276  0108BC  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6277  0108BE  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  6278  0108C0                     u5990:
  6279  0108C0  2EE8               	decfsz	wreg,f,c
  6280  0108C2  D7F8               	goto	u5995
  6281  0108C4  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6282  0108C8  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6283  0108CC  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6284  0108D0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6288  0108D4  0100               	movlb	0	; () banked
  6289  0108D6  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  6290  0108D8  0100               	movlb	0	; () banked
  6291  0108DA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6292  0108DC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6293  0108DE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6294  0108E0  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6295                           
  6296                           ; BSR set to: 0
  6297                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6298  0108E2  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6299  0108E6  D000               	goto	l5256
  6300  0108E8                     l5256:
  6301                           
  6302                           ; BSR set to: 0
  6303                           ;inc\CANlib.h: 994: }
  6304                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6305  0108E8  0E04               	movlw	4
  6306  0108EA  0100               	movlb	0	; () banked
  6307  0108EC  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6308  0108EE  A4D8               	btfss	status,2,c
  6309  0108F0  D08B               	goto	l5290
  6310                           
  6311                           ; BSR set to: 0
  6312  0108F2  0EF7               	movlw	247
  6313  0108F4  0100               	movlb	0	; () banked
  6314  0108F6  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  6315  0108F8  A4D8               	btfss	status,2,c
  6316  0108FA  D086               	goto	l5290
  6317                           
  6318                           ; BSR set to: 0
  6319                           ;inc\CANlib.h: 997: {
  6320                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6321  0108FC  010F               	movlb	15	; () banked
  6322  0108FE  8711               	bsf	17,3,b	;volatile
  6323                           
  6324                           ; BSR set to: 15
  6325                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6326  010900  0100               	movlb	0	; () banked
  6327  010902  5172               	movf	CANSetFilter@filter& (0+255),w,b
  6328  010904  0100               	movlb	0	; () banked
  6329  010906  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6330  010908  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6331  01090A  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6332  01090C  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6336  01090E  C07C  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6337                           
  6338                           ; BSR set to: 0
  6339                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6340  010912  0E00               	movlw	0
  6341  010914  0100               	movlb	0	; () banked
  6342  010916  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  6343  010918  0100               	movlb	0	; () banked
  6344  01091A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6345  01091C  0EFF               	movlw	255
  6346  01091E  0100               	movlb	0	; () banked
  6347  010920  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6348  010922  0100               	movlb	0	; () banked
  6349  010924  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6350  010926  0E00               	movlw	0
  6351  010928  0100               	movlb	0	; () banked
  6352  01092A  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6353  01092C  0100               	movlb	0	; () banked
  6354  01092E  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6355  010930  0E00               	movlw	0
  6356  010932  0100               	movlb	0	; () banked
  6357  010934  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6358  010936  0100               	movlb	0	; () banked
  6359  010938  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6360                           
  6361                           ; BSR set to: 0
  6362                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6363  01093A  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  6364  01093E  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6365  010942  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6366  010946  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6367  01094A  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  6368  01094E  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6369  010952  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6370  010956  0100               	movlb	0	; () banked
  6371  010958  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  6372  01095A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6373  01095E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6374  010962  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6375  010966  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6379  01096A  C07C  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6383  01096E  0100               	movlb	0	; () banked
  6384  010970  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6385  010972  D003               	goto	l527
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6389  010974  010F               	movlb	15	; () banked
  6390  010976  8111               	bsf	17,0,b	;volatile
  6391  010978  D002               	goto	l528
  6392  01097A                     l527:
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;inc\CANlib.h: 1009: else
  6396                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6397  01097A  010F               	movlb	15	; () banked
  6398  01097C  9111               	bcf	17,0,b	;volatile
  6399  01097E                     l528:
  6400                           
  6401                           ; BSR set to: 15
  6402                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6403  01097E  0100               	movlb	0	; () banked
  6404  010980  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6405  010982  D003               	goto	l529
  6406                           
  6407                           ; BSR set to: 0
  6408                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6409  010984  010F               	movlb	15	; () banked
  6410  010986  8311               	bsf	17,1,b	;volatile
  6411  010988  D002               	goto	l530
  6412  01098A                     l529:
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;inc\CANlib.h: 1014: else
  6416                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6417  01098A  010F               	movlb	15	; () banked
  6418  01098C  9311               	bcf	17,1,b	;volatile
  6419  01098E                     l530:
  6420                           
  6421                           ; BSR set to: 15
  6422                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6423  01098E  0100               	movlb	0	; () banked
  6424  010990  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6425  010992  D003               	goto	l531
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6429  010994  010F               	movlb	15	; () banked
  6430  010996  8B11               	bsf	17,5,b	;volatile
  6431  010998  D002               	goto	l532
  6432  01099A                     l531:
  6433                           
  6434                           ; BSR set to: 0
  6435                           ;inc\CANlib.h: 1019: else
  6436                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6437  01099A  010F               	movlb	15	; () banked
  6438  01099C  9B11               	bcf	17,5,b	;volatile
  6439  01099E                     l532:
  6440                           
  6441                           ; BSR set to: 15
  6442                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6443  01099E  0100               	movlb	0	; () banked
  6444  0109A0  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6445  0109A2  D003               	goto	l533
  6446                           
  6447                           ; BSR set to: 0
  6448                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6449  0109A4  010F               	movlb	15	; () banked
  6450  0109A6  8D11               	bsf	17,6,b	;volatile
  6451  0109A8  D002               	goto	l534
  6452  0109AA                     l533:
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;inc\CANlib.h: 1024: else
  6456                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6457  0109AA  010F               	movlb	15	; () banked
  6458  0109AC  9D11               	bcf	17,6,b	;volatile
  6459  0109AE                     l534:
  6460                           
  6461                           ; BSR set to: 15
  6462                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6463  0109AE  0100               	movlb	0	; () banked
  6464  0109B0  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6465  0109B2  D003               	goto	l535
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6469  0109B4  010F               	movlb	15	; () banked
  6470  0109B6  8F11               	bsf	17,7,b	;volatile
  6471  0109B8  D003               	goto	l5284
  6472  0109BA                     l535:
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;inc\CANlib.h: 1029: else
  6476                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6477  0109BA  010F               	movlb	15	; () banked
  6478  0109BC  9F11               	bcf	17,7,b	;volatile
  6479  0109BE  D000               	goto	l5284
  6480  0109C0                     l5284:
  6481                           
  6482                           ; BSR set to: 15
  6483                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6484  0109C0  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  6485  0109C4  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6486  0109C8  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6487  0109CC  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6488  0109D0  0E16               	movlw	22
  6489  0109D2  D006               	goto	u6070
  6490  0109D4                     u6075:
  6491  0109D4  0100               	movlb	0	; () banked
  6492  0109D6  90D8               	bcf	status,0,c
  6493  0109D8  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6494  0109DA  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6495  0109DC  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6496  0109DE  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  6497  0109E0                     u6070:
  6498  0109E0  2EE8               	decfsz	wreg,f,c
  6499  0109E2  D7F8               	goto	u6075
  6500  0109E4  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6501  0109E8  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6502  0109EC  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6503  0109F0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6507  0109F4  0100               	movlb	0	; () banked
  6508  0109F6  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  6509  0109F8  0100               	movlb	0	; () banked
  6510  0109FA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6511  0109FC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6512  0109FE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6513  010A00  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6514                           
  6515                           ; BSR set to: 0
  6516                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6517  010A02  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6518  010A06  D000               	goto	l5290
  6519  010A08                     l5290:
  6520                           
  6521                           ; BSR set to: 0
  6522                           ;inc\CANlib.h: 1035: }
  6523                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6524  010A08  0E05               	movlw	5
  6525  010A0A  0100               	movlb	0	; () banked
  6526  010A0C  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6527  010A0E  A4D8               	btfss	status,2,c
  6528  010A10  0012               	return	
  6529                           
  6530                           ; BSR set to: 0
  6531  010A12  0EF7               	movlw	247
  6532  010A14  0100               	movlb	0	; () banked
  6533  010A16  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  6534  010A18  A4D8               	btfss	status,2,c
  6535  010A1A  0012               	return	
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;inc\CANlib.h: 1038: {
  6539                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6540  010A1C  010F               	movlb	15	; () banked
  6541  010A1E  8715               	bsf	21,3,b	;volatile
  6542                           
  6543                           ; BSR set to: 15
  6544                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6545  010A20  0100               	movlb	0	; () banked
  6546  010A22  5172               	movf	CANSetFilter@filter& (0+255),w,b
  6547  010A24  0100               	movlb	0	; () banked
  6548  010A26  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6549  010A28  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6550  010A2A  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6551  010A2C  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6555  010A2E  C07C  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6556                           
  6557                           ; BSR set to: 0
  6558                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6559  010A32  0E00               	movlw	0
  6560  010A34  0100               	movlb	0	; () banked
  6561  010A36  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  6562  010A38  0100               	movlb	0	; () banked
  6563  010A3A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6564  010A3C  0EFF               	movlw	255
  6565  010A3E  0100               	movlb	0	; () banked
  6566  010A40  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6567  010A42  0100               	movlb	0	; () banked
  6568  010A44  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6569  010A46  0E00               	movlw	0
  6570  010A48  0100               	movlb	0	; () banked
  6571  010A4A  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6572  010A4C  0100               	movlb	0	; () banked
  6573  010A4E  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6574  010A50  0E00               	movlw	0
  6575  010A52  0100               	movlb	0	; () banked
  6576  010A54  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6577  010A56  0100               	movlb	0	; () banked
  6578  010A58  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6582  010A5A  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  6583  010A5E  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6584  010A62  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6585  010A66  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6586  010A6A  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  6587  010A6E  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6588  010A72  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6589  010A76  0100               	movlb	0	; () banked
  6590  010A78  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  6591  010A7A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6592  010A7E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6593  010A82  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6594  010A86  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6595                           
  6596                           ; BSR set to: 0
  6597                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6598  010A8A  C07C  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6602  010A8E  0100               	movlb	0	; () banked
  6603  010A90  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6604  010A92  D003               	goto	l538
  6605                           
  6606                           ; BSR set to: 0
  6607                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6608  010A94  010F               	movlb	15	; () banked
  6609  010A96  8115               	bsf	21,0,b	;volatile
  6610  010A98  D002               	goto	l539
  6611  010A9A                     l538:
  6612                           
  6613                           ; BSR set to: 0
  6614                           ;inc\CANlib.h: 1050: else
  6615                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6616  010A9A  010F               	movlb	15	; () banked
  6617  010A9C  9115               	bcf	21,0,b	;volatile
  6618  010A9E                     l539:
  6619                           
  6620                           ; BSR set to: 15
  6621                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6622  010A9E  0100               	movlb	0	; () banked
  6623  010AA0  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6624  010AA2  D003               	goto	l540
  6625                           
  6626                           ; BSR set to: 0
  6627                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6628  010AA4  010F               	movlb	15	; () banked
  6629  010AA6  8315               	bsf	21,1,b	;volatile
  6630  010AA8  D002               	goto	l541
  6631  010AAA                     l540:
  6632                           
  6633                           ; BSR set to: 0
  6634                           ;inc\CANlib.h: 1055: else
  6635                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6636  010AAA  010F               	movlb	15	; () banked
  6637  010AAC  9315               	bcf	21,1,b	;volatile
  6638  010AAE                     l541:
  6639                           
  6640                           ; BSR set to: 15
  6641                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6642  010AAE  0100               	movlb	0	; () banked
  6643  010AB0  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6644  010AB2  D003               	goto	l542
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6648  010AB4  010F               	movlb	15	; () banked
  6649  010AB6  8B15               	bsf	21,5,b	;volatile
  6650  010AB8  D002               	goto	l543
  6651  010ABA                     l542:
  6652                           
  6653                           ; BSR set to: 0
  6654                           ;inc\CANlib.h: 1060: else
  6655                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6656  010ABA  010F               	movlb	15	; () banked
  6657  010ABC  9B15               	bcf	21,5,b	;volatile
  6658  010ABE                     l543:
  6659                           
  6660                           ; BSR set to: 15
  6661                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6662  010ABE  0100               	movlb	0	; () banked
  6663  010AC0  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6664  010AC2  D003               	goto	l544
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6668  010AC4  010F               	movlb	15	; () banked
  6669  010AC6  8D15               	bsf	21,6,b	;volatile
  6670  010AC8  D002               	goto	l545
  6671  010ACA                     l544:
  6672                           
  6673                           ; BSR set to: 0
  6674                           ;inc\CANlib.h: 1065: else
  6675                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6676  010ACA  010F               	movlb	15	; () banked
  6677  010ACC  9D15               	bcf	21,6,b	;volatile
  6678  010ACE                     l545:
  6679                           
  6680                           ; BSR set to: 15
  6681                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6682  010ACE  0100               	movlb	0	; () banked
  6683  010AD0  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6684  010AD2  D003               	goto	l546
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6688  010AD4  010F               	movlb	15	; () banked
  6689  010AD6  8F15               	bsf	21,7,b	;volatile
  6690  010AD8  D003               	goto	l5318
  6691  010ADA                     l546:
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;inc\CANlib.h: 1070: else
  6695                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6696  010ADA  010F               	movlb	15	; () banked
  6697  010ADC  9F15               	bcf	21,7,b	;volatile
  6698  010ADE  D000               	goto	l5318
  6699  010AE0                     l5318:
  6700                           
  6701                           ; BSR set to: 15
  6702                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6703  010AE0  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  6704  010AE4  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6705  010AE8  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6706  010AEC  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6707  010AF0  0E16               	movlw	22
  6708  010AF2  D006               	goto	u6150
  6709  010AF4                     u6155:
  6710  010AF4  0100               	movlb	0	; () banked
  6711  010AF6  90D8               	bcf	status,0,c
  6712  010AF8  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6713  010AFA  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6714  010AFC  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6715  010AFE  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  6716  010B00                     u6150:
  6717  010B00  2EE8               	decfsz	wreg,f,c
  6718  010B02  D7F8               	goto	u6155
  6719  010B04  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6720  010B08  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6721  010B0C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6722  010B10  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6726  010B14  0100               	movlb	0	; () banked
  6727  010B16  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  6728  010B18  0100               	movlb	0	; () banked
  6729  010B1A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6730  010B1C  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6731  010B1E  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6732  010B20  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6733                           
  6734                           ; BSR set to: 0
  6735                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6736  010B22  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6737  010B26  0012               	return	
  6738                           
  6739                           ; BSR set to: 0
  6740                           
  6741                           ; BSR set to: 0
  6742  010B28  0012               	return		;funcret
  6743  010B2A                     __end_of_CANSetFilter:
  6744                           	opt stack 0
  6745                           tblptru	equ	0xFF8
  6746                           tblptrh	equ	0xFF7
  6747                           tblptrl	equ	0xFF6
  6748                           tablat	equ	0xFF5
  6749                           prodh	equ	0xFF4
  6750                           prodl	equ	0xFF3
  6751                           intcon	equ	0xFF2
  6752                           postinc0	equ	0xFEE
  6753                           wreg	equ	0xFE8
  6754                           postinc2	equ	0xFDE
  6755                           fsr2h	equ	0xFDA
  6756                           fsr2l	equ	0xFD9
  6757                           status	equ	0xFD8
  6758                           
  6759 ;; *************** function _CANOperationMode *****************
  6760 ;; Defined at:
  6761 ;;		line 206 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;  mode            1    wreg     enum E16922
  6764 ;; Auto vars:     Size  Location     Type
  6765 ;;  mode            1   18[BANK0 ] enum E16922
  6766 ;; Return value:  Size  Location     Type
  6767 ;;		None               void
  6768 ;; Registers used:
  6769 ;;		wreg, status,2, status,0
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 0/0
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6778 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6779 ;;Total ram usage:        1 bytes
  6780 ;; Hardware stack levels used:    1
  6781 ;; Hardware stack levels required when called:    3
  6782 ;; This function calls:
  6783 ;;		Nothing
  6784 ;; This function is called by:
  6785 ;;		_CANInitialize
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           	psect	text5
  6790  015FE8                     __ptext5:
  6791                           	opt stack 0
  6792  015FE8                     _CANOperationMode:
  6793                           	opt stack 25
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;incstack = 0
  6797                           ;CANOperationMode@mode stored from wreg
  6798  015FE8  0100               	movlb	0	; () banked
  6799  015FEA  6F72               	movwf	CANOperationMode@mode& (0+255),b
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;inc\CANlib.h: 208: CANCON = mode;
  6803  015FEC  C072  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6804                           
  6805                           ; BSR set to: 0
  6806                           
  6807                           ;inc\CANlib.h: 210: while((CANSTAT & 0b11100000) != mode );
  6808  015FF0  D000               	goto	l4914
  6809  015FF2                     l4914:
  6810                           
  6811                           ; BSR set to: 0
  6812  015FF2  506E               	movf	3950,w,c	;volatile
  6813  015FF4  0BE0               	andlw	224
  6814  015FF6  0100               	movlb	0	; () banked
  6815  015FF8  1972               	xorwf	CANOperationMode@mode& (0+255),w,b
  6816  015FFA  A4D8               	btfss	status,2,c
  6817  015FFC  D7FA               	goto	l4914
  6818                           
  6819                           ; BSR set to: 0
  6820                           
  6821                           ; BSR set to: 0
  6822  015FFE  0012               	return		;funcret
  6823  016000                     __end_of_CANOperationMode:
  6824                           	opt stack 0
  6825                           tblptru	equ	0xFF8
  6826                           tblptrh	equ	0xFF7
  6827                           tblptrl	equ	0xFF6
  6828                           tablat	equ	0xFF5
  6829                           prodh	equ	0xFF4
  6830                           prodl	equ	0xFF3
  6831                           intcon	equ	0xFF2
  6832                           postinc0	equ	0xFEE
  6833                           wreg	equ	0xFE8
  6834                           postinc2	equ	0xFDE
  6835                           fsr2h	equ	0xFDA
  6836                           fsr2l	equ	0xFD9
  6837                           status	equ	0xFD8
  6838                           
  6839 ;; *************** function ___lbtofl *****************
  6840 ;; Defined at:
  6841 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtofl.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  c               1    wreg     unsigned char 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;  c               1   32[BANK0 ] unsigned char 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  4   28[BANK0 ] unsigned char 
  6848 ;; Registers used:
  6849 ;;		wreg, status,2, status,0, cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6855 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6856 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6858 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6859 ;;Total ram usage:        5 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:    4
  6862 ;; This function calls:
  6863 ;;		___flpack
  6864 ;; This function is called by:
  6865 ;;		_main
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text6
  6870  015DD8                     __ptext6:
  6871                           	opt stack 0
  6872  015DD8                     ___lbtofl:
  6873                           	opt stack 26
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;incstack = 0
  6877                           ;___lbtofl@c stored from wreg
  6878  015DD8  0100               	movlb	0	; () banked
  6879  015DDA  6F80               	movwf	___lbtofl@c& (0+255),b
  6880                           
  6881                           ; BSR set to: 0
  6882  015DDC  0100               	movlb	0	; () banked
  6883  015DDE  5180               	movf	___lbtofl@c& (0+255),w,b
  6884  015DE0  0100               	movlb	0	; () banked
  6885  015DE2  6F72               	movwf	___flpack@arg& (0+255),b
  6886  015DE4  6B73               	clrf	(___flpack@arg+1)& (0+255),b
  6887  015DE6  6B74               	clrf	(___flpack@arg+2)& (0+255),b
  6888  015DE8  6B75               	clrf	(___flpack@arg+3)& (0+255),b
  6889  015DEA  0E96               	movlw	150
  6890  015DEC  0100               	movlb	0	; () banked
  6891  015DEE  6F76               	movwf	___flpack@exp& (0+255),b
  6892  015DF0  0E00               	movlw	0
  6893  015DF2  0100               	movlb	0	; () banked
  6894  015DF4  6F77               	movwf	___flpack@sign& (0+255),b
  6895  015DF6  EC08  F0A5         	call	___flpack	;wreg free
  6896  015DFA  C072  F07C         	movff	?___flpack,?___lbtofl
  6897  015DFE  C073  F07D         	movff	?___flpack+1,?___lbtofl+1
  6898  015E02  C074  F07E         	movff	?___flpack+2,?___lbtofl+2
  6899  015E06  C075  F07F         	movff	?___flpack+3,?___lbtofl+3
  6900  015E0A  0012               	return	
  6901  015E0C  0012               	return		;funcret
  6902  015E0E                     __end_of___lbtofl:
  6903                           	opt stack 0
  6904                           tblptru	equ	0xFF8
  6905                           tblptrh	equ	0xFF7
  6906                           tblptrl	equ	0xFF6
  6907                           tablat	equ	0xFF5
  6908                           prodh	equ	0xFF4
  6909                           prodl	equ	0xFF3
  6910                           intcon	equ	0xFF2
  6911                           postinc0	equ	0xFEE
  6912                           wreg	equ	0xFE8
  6913                           postinc2	equ	0xFDE
  6914                           fsr2h	equ	0xFDA
  6915                           fsr2l	equ	0xFD9
  6916                           status	equ	0xFD8
  6917                           
  6918 ;; *************** function ___awtofl *****************
  6919 ;; Defined at:
  6920 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtofl.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;  c               2   28[BANK0 ] int 
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;  f1              4    0        int 
  6925 ;;  sign            1   32[BANK0 ] unsigned char 
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  4   28[BANK0 ] unsigned char 
  6928 ;; Registers used:
  6929 ;;		wreg, status,2, status,0, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6935 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6936 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;Total ram usage:        5 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:    4
  6942 ;; This function calls:
  6943 ;;		___flpack
  6944 ;; This function is called by:
  6945 ;;		_main
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text7
  6950  015BD4                     __ptext7:
  6951                           	opt stack 0
  6952  015BD4                     ___awtofl:
  6953                           	opt stack 26
  6954                           
  6955                           ;incstack = 0
  6956  015BD4  0E00               	movlw	0
  6957  015BD6  0100               	movlb	0	; () banked
  6958  015BD8  6F80               	movwf	___awtofl@sign& (0+255),b
  6959                           
  6960                           ; BSR set to: 0
  6961  015BDA  0100               	movlb	0	; () banked
  6962  015BDC  AF7D               	btfss	(___awtofl@c+1)& (0+255),7,b
  6963  015BDE  D008               	goto	l8530
  6964                           
  6965                           ; BSR set to: 0
  6966  015BE0  0100               	movlb	0	; () banked
  6967  015BE2  6D7C               	negf	___awtofl@c& (0+255),b
  6968  015BE4  1F7D               	comf	(___awtofl@c+1)& (0+255),f,b
  6969  015BE6  B0D8               	btfsc	status,0,c
  6970  015BE8  2B7D               	incf	(___awtofl@c+1)& (0+255),f,b
  6971  015BEA  0100               	movlb	0	; () banked
  6972  015BEC  2B80               	incf	___awtofl@sign& (0+255),f,b
  6973  015BEE  D000               	goto	l8530
  6974  015BF0                     l8530:
  6975                           
  6976                           ; BSR set to: 0
  6977  015BF0  C07C  F072         	movff	___awtofl@c,___flpack@arg
  6978  015BF4  C07D  F073         	movff	___awtofl@c+1,___flpack@arg+1
  6979  015BF8  0100               	movlb	0	; () banked
  6980  015BFA  6B74               	clrf	(___flpack@arg+2)& (0+255),b
  6981  015BFC  6B75               	clrf	(___flpack@arg+3)& (0+255),b
  6982  015BFE  0E96               	movlw	150
  6983  015C00  0100               	movlb	0	; () banked
  6984  015C02  6F76               	movwf	___flpack@exp& (0+255),b
  6985  015C04  C080  F077         	movff	___awtofl@sign,___flpack@sign
  6986  015C08  EC08  F0A5         	call	___flpack	;wreg free
  6987  015C0C  C072  F07C         	movff	?___flpack,?___awtofl
  6988  015C10  C073  F07D         	movff	?___flpack+1,?___awtofl+1
  6989  015C14  C074  F07E         	movff	?___flpack+2,?___awtofl+2
  6990  015C18  C075  F07F         	movff	?___flpack+3,?___awtofl+3
  6991  015C1C  0012               	return	
  6992  015C1E  0012               	return		;funcret
  6993  015C20                     __end_of___awtofl:
  6994                           	opt stack 0
  6995                           tblptru	equ	0xFF8
  6996                           tblptrh	equ	0xFF7
  6997                           tblptrl	equ	0xFF6
  6998                           tablat	equ	0xFF5
  6999                           prodh	equ	0xFF4
  7000                           prodl	equ	0xFF3
  7001                           intcon	equ	0xFF2
  7002                           postinc0	equ	0xFEE
  7003                           wreg	equ	0xFE8
  7004                           postinc2	equ	0xFDE
  7005                           fsr2h	equ	0xFDA
  7006                           fsr2l	equ	0xFD9
  7007                           status	equ	0xFD8
  7008                           
  7009 ;; *************** function _PWR_Button_Polling *****************
  7010 ;; Defined at:
  7011 ;;		line 609 in file "RemoteCan.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;		None
  7014 ;; Auto vars:     Size  Location     Type
  7015 ;;		None
  7016 ;; Return value:  Size  Location     Type
  7017 ;;		None               void
  7018 ;; Registers used:
  7019 ;;		None
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7029 ;;Total ram usage:        0 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:    3
  7032 ;; This function calls:
  7033 ;;		Nothing
  7034 ;; This function is called by:
  7035 ;;		_main
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           	psect	text8
  7040  016018                     __ptext8:
  7041                           	opt stack 0
  7042  016018                     _PWR_Button_Polling:
  7043                           	opt stack 27
  7044                           
  7045                           ;RemoteCan.c: 610: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  7046                           
  7047                           ;incstack = 0
  7048  016018  AA81               	btfss	3969,5,c	;volatile
  7049  01601A  D002               	goto	l935
  7050  01601C  B04C               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  7051  01601E  0012               	return	
  7052  016020                     l935:
  7053                           
  7054                           ;RemoteCan.c: 611: wait_low_1 = 0;
  7055  016020  904C               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  7056                           
  7057                           ;RemoteCan.c: 612: if (PORTBbits.RB5 == 1) {
  7058  016022  AA81               	btfss	3969,5,c	;volatile
  7059  016024  0012               	return	
  7060                           
  7061                           ;RemoteCan.c: 613: power_switch = ~power_switch;
  7062  016026  764B               	btg	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  7063                           
  7064                           ;RemoteCan.c: 614: wait_low_1 = 1;
  7065  016028  804C               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  7066  01602A  0012               	return	
  7067  01602C  0012               	return		;funcret
  7068  01602E                     __end_of_PWR_Button_Polling:
  7069                           	opt stack 0
  7070                           tblptru	equ	0xFF8
  7071                           tblptrh	equ	0xFF7
  7072                           tblptrl	equ	0xFF6
  7073                           tablat	equ	0xFF5
  7074                           prodh	equ	0xFF4
  7075                           prodl	equ	0xFF3
  7076                           intcon	equ	0xFF2
  7077                           postinc0	equ	0xFEE
  7078                           wreg	equ	0xFE8
  7079                           postinc2	equ	0xFDE
  7080                           fsr2h	equ	0xFDA
  7081                           fsr2l	equ	0xFD9
  7082                           status	equ	0xFD8
  7083                           
  7084 ;; *************** function _LCD_Parking *****************
  7085 ;; Defined at:
  7086 ;;		line 570 in file "RemoteCan.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;		None
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;		None
  7091 ;; Return value:  Size  Location     Type
  7092 ;;		None               void
  7093 ;; Registers used:
  7094 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7095 ;; Tracked objects:
  7096 ;;		On entry : 0/0
  7097 ;;		On exit  : 0/0
  7098 ;;		Unchanged: 0/0
  7099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7104 ;;Total ram usage:        0 bytes
  7105 ;; Hardware stack levels used:    1
  7106 ;; Hardware stack levels required when called:    9
  7107 ;; This function calls:
  7108 ;;		_LCD_clear
  7109 ;;		_LCD_goto_line
  7110 ;;		_LCD_initialize
  7111 ;;		_LCD_write_message
  7112 ;; This function is called by:
  7113 ;;		_main
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           	psect	text9
  7118  015932                     __ptext9:
  7119                           	opt stack 0
  7120  015932                     _LCD_Parking:
  7121                           	opt stack 21
  7122                           
  7123                           ;RemoteCan.c: 571: LCD_initialize(16);
  7124                           
  7125                           ;incstack = 0
  7126  015932  0E10               	movlw	16
  7127  015934  ECC8  F0A5         	call	_LCD_initialize
  7128                           
  7129                           ;RemoteCan.c: 572: LCD_clear();
  7130  015938  EC6E  F0AF         	call	_LCD_clear	;wreg free
  7131                           
  7132                           ;RemoteCan.c: 573: LCD_goto_line(1);
  7133  01593C  0E01               	movlw	1
  7134  01593E  ECD5  F0A8         	call	_LCD_goto_line
  7135                           
  7136                           ;RemoteCan.c: 574: LCD_write_message("= PARKING MESSAGES =");
  7137  015942  0E2B               	movlw	low STR_20
  7138  015944  0100               	movlb	0	; () banked
  7139  015946  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7140  015948  0EFF               	movlw	high STR_20
  7141  01594A  0100               	movlb	0	; () banked
  7142  01594C  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7143  01594E  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7144                           
  7145                           ;RemoteCan.c: 575: LCD_goto_line(2);
  7146  015952  0E02               	movlw	2
  7147  015954  ECD5  F0A8         	call	_LCD_goto_line
  7148                           
  7149                           ;RemoteCan.c: 576: LCD_write_message("=    Parking in    =");
  7150  015958  0E01               	movlw	low STR_29
  7151  01595A  0100               	movlb	0	; () banked
  7152  01595C  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7153  01595E  0EFF               	movlw	high STR_29
  7154  015960  0100               	movlb	0	; () banked
  7155  015962  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7156  015964  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7157                           
  7158                           ;RemoteCan.c: 577: LCD_goto_line(3);
  7159  015968  0E03               	movlw	3
  7160  01596A  ECD5  F0A8         	call	_LCD_goto_line
  7161                           
  7162                           ;RemoteCan.c: 578: LCD_write_message("=    progress...   =");
  7163  01596E  0E16               	movlw	low STR_30
  7164  015970  0100               	movlb	0	; () banked
  7165  015972  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7166  015974  0EFF               	movlw	high STR_30
  7167  015976  0100               	movlb	0	; () banked
  7168  015978  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7169  01597A  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7170                           
  7171                           ;RemoteCan.c: 579: LCD_goto_line(4);
  7172  01597E  0E04               	movlw	4
  7173  015980  ECD5  F0A8         	call	_LCD_goto_line
  7174                           
  7175                           ;RemoteCan.c: 580: LCD_write_message("====================");
  7176  015984  0E6A               	movlw	low STR_1
  7177  015986  0100               	movlb	0	; () banked
  7178  015988  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7179  01598A  0EFF               	movlw	high STR_1
  7180  01598C  0100               	movlb	0	; () banked
  7181  01598E  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7182  015990  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7183  015994  0012               	return		;funcret
  7184  015996                     __end_of_LCD_Parking:
  7185                           	opt stack 0
  7186                           tblptru	equ	0xFF8
  7187                           tblptrh	equ	0xFF7
  7188                           tblptrl	equ	0xFF6
  7189                           tablat	equ	0xFF5
  7190                           prodh	equ	0xFF4
  7191                           prodl	equ	0xFF3
  7192                           intcon	equ	0xFF2
  7193                           postinc0	equ	0xFEE
  7194                           wreg	equ	0xFE8
  7195                           postinc2	equ	0xFDE
  7196                           fsr2h	equ	0xFDA
  7197                           fsr2l	equ	0xFD9
  7198                           status	equ	0xFD8
  7199                           
  7200 ;; *************** function _LCD_Park *****************
  7201 ;; Defined at:
  7202 ;;		line 557 in file "RemoteCan.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;		None
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;		None
  7207 ;; Return value:  Size  Location     Type
  7208 ;;		None               void
  7209 ;; Registers used:
  7210 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7220 ;;Total ram usage:        0 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; Hardware stack levels required when called:    9
  7223 ;; This function calls:
  7224 ;;		_LCD_clear
  7225 ;;		_LCD_goto_line
  7226 ;;		_LCD_initialize
  7227 ;;		_LCD_write_message
  7228 ;; This function is called by:
  7229 ;;		_main
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text10
  7234  015996                     __ptext10:
  7235                           	opt stack 0
  7236  015996                     _LCD_Park:
  7237                           	opt stack 21
  7238                           
  7239                           ;RemoteCan.c: 558: LCD_initialize(16);
  7240                           
  7241                           ;incstack = 0
  7242  015996  0E10               	movlw	16
  7243  015998  ECC8  F0A5         	call	_LCD_initialize
  7244                           
  7245                           ;RemoteCan.c: 559: LCD_clear();
  7246  01599C  EC6E  F0AF         	call	_LCD_clear	;wreg free
  7247                           
  7248                           ;RemoteCan.c: 560: LCD_goto_line(1);
  7249  0159A0  0E01               	movlw	1
  7250  0159A2  ECD5  F0A8         	call	_LCD_goto_line
  7251                           
  7252                           ;RemoteCan.c: 561: LCD_write_message("= PARKING MESSAGES =");
  7253  0159A6  0E2B               	movlw	low STR_20
  7254  0159A8  0100               	movlb	0	; () banked
  7255  0159AA  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7256  0159AC  0EFF               	movlw	high STR_20
  7257  0159AE  0100               	movlb	0	; () banked
  7258  0159B0  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7259  0159B2  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7260                           
  7261                           ;RemoteCan.c: 562: LCD_goto_line(2);
  7262  0159B6  0E02               	movlw	2
  7263  0159B8  ECD5  F0A8         	call	_LCD_goto_line
  7264                           
  7265                           ;RemoteCan.c: 563: LCD_write_message("- Distance REACHED -");
  7266  0159BC  0EC2               	movlw	low STR_25
  7267  0159BE  0100               	movlb	0	; () banked
  7268  0159C0  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7269  0159C2  0EFE               	movlw	high STR_25
  7270  0159C4  0100               	movlb	0	; () banked
  7271  0159C6  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7272  0159C8  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7273                           
  7274                           ;RemoteCan.c: 564: LCD_goto_line(3);
  7275  0159CC  0E03               	movlw	3
  7276  0159CE  ECD5  F0A8         	call	_LCD_goto_line
  7277                           
  7278                           ;RemoteCan.c: 565: LCD_write_message("Press the BUTTON to ");
  7279  0159D2  0E98               	movlw	low STR_26
  7280  0159D4  0100               	movlb	0	; () banked
  7281  0159D6  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7282  0159D8  0EFE               	movlw	high STR_26
  7283  0159DA  0100               	movlb	0	; () banked
  7284  0159DC  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7285  0159DE  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7286                           
  7287                           ;RemoteCan.c: 566: LCD_goto_line(4);
  7288  0159E2  0E04               	movlw	4
  7289  0159E4  ECD5  F0A8         	call	_LCD_goto_line
  7290                           
  7291                           ;RemoteCan.c: 567: LCD_write_message("   start parking    ");
  7292  0159E8  0E2F               	movlw	low STR_27
  7293  0159EA  0100               	movlb	0	; () banked
  7294  0159EC  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7295  0159EE  0EFE               	movlw	high STR_27
  7296  0159F0  0100               	movlb	0	; () banked
  7297  0159F2  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7298  0159F4  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7299  0159F8  0012               	return		;funcret
  7300  0159FA                     __end_of_LCD_Park:
  7301                           	opt stack 0
  7302                           tblptru	equ	0xFF8
  7303                           tblptrh	equ	0xFF7
  7304                           tblptrl	equ	0xFF6
  7305                           tablat	equ	0xFF5
  7306                           prodh	equ	0xFF4
  7307                           prodl	equ	0xFF3
  7308                           intcon	equ	0xFF2
  7309                           postinc0	equ	0xFEE
  7310                           wreg	equ	0xFE8
  7311                           postinc2	equ	0xFDE
  7312                           fsr2h	equ	0xFDA
  7313                           fsr2l	equ	0xFD9
  7314                           status	equ	0xFD8
  7315                           
  7316 ;; *************** function _LCD_Handler *****************
  7317 ;; Defined at:
  7318 ;;		line 466 in file "RemoteCan.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;		None
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;		None
  7323 ;; Return value:  Size  Location     Type
  7324 ;;		None               void
  7325 ;; Registers used:
  7326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7336 ;;Total ram usage:        0 bytes
  7337 ;; Hardware stack levels used:    1
  7338 ;; Hardware stack levels required when called:   10
  7339 ;; This function calls:
  7340 ;;		_CANisTxReady
  7341 ;;		_CANsendMessage
  7342 ;;		_LCD_clear
  7343 ;;		_LCD_goto_line
  7344 ;;		_LCD_goto_xy
  7345 ;;		_LCD_initialize
  7346 ;;		_LCD_write_integer
  7347 ;;		_LCD_write_message
  7348 ;;		_LCD_write_string
  7349 ;;		___fldiv
  7350 ;;		___lwtofl
  7351 ;;		_sprintf
  7352 ;; This function is called by:
  7353 ;;		_main
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           	psect	text11
  7358  013E5E                     __ptext11:
  7359                           	opt stack 0
  7360  013E5E                     _LCD_Handler:
  7361                           	opt stack 20
  7362                           
  7363                           ;RemoteCan.c: 468: while (CANisTxReady() != 1);
  7364                           
  7365                           ;incstack = 0
  7366  013E5E  D000               	goto	l8416
  7367  013E60                     l8416:
  7368  013E60  ECB2  F0AF         	call	_CANisTxReady	;wreg free
  7369  013E64  06E8               	decf	wreg,f,c
  7370  013E66  A4D8               	btfss	status,2,c
  7371  013E68  D7FB               	goto	l8416
  7372                           
  7373                           ;RemoteCan.c: 469: CANsendMessage(0b00000001000, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  7374  013E6A  0E08               	movlw	8
  7375  013E6C  0100               	movlb	0	; () banked
  7376  013E6E  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  7377  013E70  0E00               	movlw	0
  7378  013E72  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  7379  013E74  0E00               	movlw	0
  7380  013E76  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  7381  013E78  0E00               	movlw	0
  7382  013E7A  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  7383  013E7C  0E1E               	movlw	low _data_speed
  7384  013E7E  0100               	movlb	0	; () banked
  7385  013E80  6F76               	movwf	CANsendMessage@data& (0+255),b
  7386  013E82  0E01               	movlw	high _data_speed
  7387  013E84  0100               	movlb	0	; () banked
  7388  013E86  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  7389  013E88  0E08               	movlw	8
  7390  013E8A  0100               	movlb	0	; () banked
  7391  013E8C  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  7392  013E8E  0EFC               	movlw	252
  7393  013E90  0100               	movlb	0	; () banked
  7394  013E92  6F79               	movwf	CANsendMessage@flags& (0+255),b
  7395  013E94  EC48  F08E         	call	_CANsendMessage	;wreg free
  7396                           
  7397                           ;RemoteCan.c: 471: actual_speed_kmh = ((actual_speed) / 278.0);
  7398  013E98  C0E1  F07C         	movff	_actual_speed,___lwtofl@c	;volatile
  7399  013E9C  C0E2  F07D         	movff	_actual_speed+1,___lwtofl@c+1	;volatile
  7400  013EA0  EC3C  F0AF         	call	___lwtofl	;wreg free
  7401  013EA4  C07C  F080         	movff	?___lwtofl,___fldiv@f1
  7402  013EA8  C07D  F081         	movff	?___lwtofl+1,___fldiv@f1+1
  7403  013EAC  C07E  F082         	movff	?___lwtofl+2,___fldiv@f1+2
  7404  013EB0  C07F  F083         	movff	?___lwtofl+3,___fldiv@f1+3
  7405  013EB4  0E00               	movlw	0
  7406  013EB6  0100               	movlb	0	; () banked
  7407  013EB8  6F84               	movwf	___fldiv@f2& (0+255),b
  7408  013EBA  0E00               	movlw	0
  7409  013EBC  6F85               	movwf	(___fldiv@f2+1)& (0+255),b
  7410  013EBE  0E8B               	movlw	139
  7411  013EC0  6F86               	movwf	(___fldiv@f2+2)& (0+255),b
  7412  013EC2  0E43               	movlw	67
  7413  013EC4  6F87               	movwf	(___fldiv@f2+3)& (0+255),b
  7414  013EC6  EC31  F0A7         	call	___fldiv	;wreg free
  7415  013ECA  C080  F0C3         	movff	?___fldiv,_actual_speed_kmh	;volatile
  7416  013ECE  C081  F0C4         	movff	?___fldiv+1,_actual_speed_kmh+1	;volatile
  7417  013ED2  C082  F0C5         	movff	?___fldiv+2,_actual_speed_kmh+2	;volatile
  7418  013ED6  C083  F0C6         	movff	?___fldiv+3,_actual_speed_kmh+3	;volatile
  7419                           
  7420                           ;RemoteCan.c: 472: sprintf(str, "%.2f", actual_speed_kmh);
  7421  013EDA  0E0A               	movlw	low _str
  7422  013EDC  0100               	movlb	0	; () banked
  7423  013EDE  6FB3               	movwf	sprintf@sp& (0+255),b
  7424  013EE0  0E01               	movlw	high _str
  7425  013EE2  0100               	movlb	0	; () banked
  7426  013EE4  6FB4               	movwf	(sprintf@sp+1)& (0+255),b
  7427  013EE6  0EFA               	movlw	low STR_5
  7428  013EE8  0100               	movlb	0	; () banked
  7429  013EEA  6FB5               	movwf	sprintf@f& (0+255),b
  7430  013EEC  0EFF               	movlw	high STR_5
  7431  013EEE  0100               	movlb	0	; () banked
  7432  013EF0  6FB6               	movwf	(sprintf@f+1)& (0+255),b
  7433  013EF2  C0C3  F0B7         	movff	_actual_speed_kmh,?_sprintf+4	;volatile
  7434  013EF6  C0C4  F0B8         	movff	_actual_speed_kmh+1,?_sprintf+5	;volatile
  7435  013EFA  C0C5  F0B9         	movff	_actual_speed_kmh+2,?_sprintf+6	;volatile
  7436  013EFE  C0C6  F0BA         	movff	_actual_speed_kmh+3,?_sprintf+7	;volatile
  7437  013F02  EC95  F085         	call	_sprintf	;wreg free
  7438                           
  7439                           ;RemoteCan.c: 473: str[11] = '\0';
  7440  013F06  0E00               	movlw	0
  7441  013F08  0101               	movlb	1	; () banked
  7442  013F0A  6F15               	movwf	(_str+11)& (0+255),b	;volatile
  7443                           
  7444                           ; BSR set to: 1
  7445                           ;RemoteCan.c: 475: if (display_refresh == 1) {
  7446  013F0C  AE4A               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  7447  013F0E  D03F               	goto	l8446
  7448                           
  7449                           ; BSR set to: 1
  7450                           ;RemoteCan.c: 476: LCD_initialize(16);
  7451  013F10  0E10               	movlw	16
  7452  013F12  ECC8  F0A5         	call	_LCD_initialize
  7453                           
  7454                           ;RemoteCan.c: 477: LCD_clear();
  7455  013F16  EC6E  F0AF         	call	_LCD_clear	;wreg free
  7456                           
  7457                           ;RemoteCan.c: 478: LCD_goto_line(1);
  7458  013F1A  0E01               	movlw	1
  7459  013F1C  ECD5  F0A8         	call	_LCD_goto_line
  7460                           
  7461                           ;RemoteCan.c: 479: LCD_write_message("=== VEHICLE DATA ===");
  7462  013F20  0E55               	movlw	low STR_6
  7463  013F22  0100               	movlb	0	; () banked
  7464  013F24  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7465  013F26  0EFF               	movlw	high STR_6
  7466  013F28  0100               	movlb	0	; () banked
  7467  013F2A  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7468  013F2C  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7469                           
  7470                           ;RemoteCan.c: 480: LCD_goto_line(2);
  7471  013F30  0E02               	movlw	2
  7472  013F32  ECD5  F0A8         	call	_LCD_goto_line
  7473                           
  7474                           ;RemoteCan.c: 481: LCD_write_message("Direction: ");
  7475  013F36  0EC8               	movlw	low STR_7
  7476  013F38  0100               	movlb	0	; () banked
  7477  013F3A  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7478  013F3C  0EFF               	movlw	high STR_7
  7479  013F3E  0100               	movlb	0	; () banked
  7480  013F40  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7481  013F42  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7482                           
  7483                           ;RemoteCan.c: 482: LCD_goto_line(3);
  7484  013F46  0E03               	movlw	3
  7485  013F48  ECD5  F0A8         	call	_LCD_goto_line
  7486                           
  7487                           ;RemoteCan.c: 483: LCD_write_message("Speed: 0.00 Km/h");
  7488  013F4C  0EA9               	movlw	low STR_8
  7489  013F4E  0100               	movlb	0	; () banked
  7490  013F50  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7491  013F52  0EFF               	movlw	high STR_8
  7492  013F54  0100               	movlb	0	; () banked
  7493  013F56  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7494  013F58  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7495                           
  7496                           ;RemoteCan.c: 484: LCD_goto_line(4);
  7497  013F5C  0E04               	movlw	4
  7498  013F5E  ECD5  F0A8         	call	_LCD_goto_line
  7499                           
  7500                           ;RemoteCan.c: 485: if (LCD_4TH_ROW_MODE == 0) {
  7501  013F62  B64A               	btfsc	_LCD_4TH_ROW_MODE/(0+8),_LCD_4TH_ROW_MODE& (0+7),c	;volatile
  7502  013F64  D009               	goto	l8442
  7503                           
  7504                           ;RemoteCan.c: 486: LCD_write_message("Park assist: ");
  7505  013F66  0EBA               	movlw	low STR_9
  7506  013F68  0100               	movlb	0	; () banked
  7507  013F6A  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7508  013F6C  0EFF               	movlw	high STR_9
  7509  013F6E  0100               	movlb	0	; () banked
  7510  013F70  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7511  013F72  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7512                           
  7513                           ;RemoteCan.c: 487: } else {
  7514  013F76  D009               	goto	l8444
  7515  013F78                     l8442:
  7516                           
  7517                           ;RemoteCan.c: 488: LCD_write_message("Data: ");
  7518  013F78  0EE4               	movlw	low STR_10
  7519  013F7A  0100               	movlb	0	; () banked
  7520  013F7C  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7521  013F7E  0EFF               	movlw	high STR_10
  7522  013F80  0100               	movlb	0	; () banked
  7523  013F82  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7524  013F84  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7525  013F88  D000               	goto	l8444
  7526  013F8A                     l8444:
  7527                           
  7528                           ;RemoteCan.c: 489: }
  7529                           ;RemoteCan.c: 490: display_refresh = 0;
  7530  013F8A  9E4A               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  7531  013F8C  D000               	goto	l8446
  7532  013F8E                     l8446:
  7533                           
  7534                           ;RemoteCan.c: 491: }
  7535                           ;RemoteCan.c: 493: if (collision_msg == 0) {
  7536  013F8E  BC4A               	btfsc	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  7537  013F90  D038               	goto	l898
  7538                           
  7539                           ;RemoteCan.c: 494: if (row_refresh == 1) {
  7540  013F92  A84B               	btfss	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7541  013F94  D00D               	goto	l8456
  7542                           
  7543                           ;RemoteCan.c: 495: LCD_goto_line(2);
  7544  013F96  0E02               	movlw	2
  7545  013F98  ECD5  F0A8         	call	_LCD_goto_line
  7546                           
  7547                           ;RemoteCan.c: 496: LCD_write_message("Direction:          ");
  7548  013F9C  0EDB               	movlw	low STR_11
  7549  013F9E  0100               	movlb	0	; () banked
  7550  013FA0  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7551  013FA2  0EFD               	movlw	high STR_11
  7552  013FA4  0100               	movlb	0	; () banked
  7553  013FA6  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7554  013FA8  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7555                           
  7556                           ;RemoteCan.c: 497: row_refresh = 0;
  7557  013FAC  984B               	bcf	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7558  013FAE  D000               	goto	l8456
  7559  013FB0                     l8456:
  7560                           
  7561                           ;RemoteCan.c: 498: }
  7562                           ;RemoteCan.c: 500: LCD_goto_xy(12, 2);
  7563  013FB0  0E02               	movlw	2
  7564  013FB2  0100               	movlb	0	; () banked
  7565  013FB4  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  7566  013FB6  0E0C               	movlw	12
  7567  013FB8  ECE6  F0AF         	call	_LCD_goto_xy
  7568                           
  7569                           ;RemoteCan.c: 501: if (switch_position != 0) {
  7570  013FBC  0100               	movlb	0	; () banked
  7571  013FBE  51EC               	movf	_switch_position& (0+255),w,b	;volatile
  7572  013FC0  B4D8               	btfsc	status,2,c
  7573  013FC2  D016               	goto	l8466
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;RemoteCan.c: 502: if (dir == 1) {
  7577  013FC4  0100               	movlb	0	; () banked
  7578  013FC6  05E8               	decf	_dir& (0+255),w,b	;volatile
  7579  013FC8  A4D8               	btfss	status,2,c
  7580  013FCA  D009               	goto	l8464
  7581                           
  7582                           ; BSR set to: 0
  7583                           ;RemoteCan.c: 503: LCD_write_message("FWD ");
  7584  013FCC  0EF0               	movlw	low STR_12
  7585  013FCE  0100               	movlb	0	; () banked
  7586  013FD0  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7587  013FD2  0EFF               	movlw	high STR_12
  7588  013FD4  0100               	movlb	0	; () banked
  7589  013FD6  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7590  013FD8  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7591                           
  7592                           ;RemoteCan.c: 504: } else {
  7593  013FDC  D01F               	goto	l8472
  7594  013FDE                     l8464:
  7595                           
  7596                           ;RemoteCan.c: 505: LCD_write_message("BKWD");
  7597  013FDE  0EF5               	movlw	low STR_13
  7598  013FE0  0100               	movlb	0	; () banked
  7599  013FE2  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7600  013FE4  0EFF               	movlw	high STR_13
  7601  013FE6  0100               	movlb	0	; () banked
  7602  013FE8  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7603  013FEA  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7604                           
  7605                           ;RemoteCan.c: 506: }
  7606                           ;RemoteCan.c: 507: } else {
  7607  013FEE  D016               	goto	l8472
  7608  013FF0                     l8466:
  7609                           
  7610                           ;RemoteCan.c: 508: LCD_write_message("P   ");
  7611  013FF0  0EEB               	movlw	low STR_14
  7612  013FF2  0100               	movlb	0	; () banked
  7613  013FF4  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7614  013FF6  0EFF               	movlw	high STR_14
  7615  013FF8  0100               	movlb	0	; () banked
  7616  013FFA  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7617  013FFC  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7618                           
  7619                           ;RemoteCan.c: 509: }
  7620                           ;RemoteCan.c: 510: } else {
  7621  014000  D00D               	goto	l8472
  7622  014002                     l898:
  7623                           
  7624                           ;RemoteCan.c: 511: row_refresh = 1;
  7625  014002  884B               	bsf	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7626                           
  7627                           ;RemoteCan.c: 512: LCD_goto_line(2);
  7628  014004  0E02               	movlw	2
  7629  014006  ECD5  F0A8         	call	_LCD_goto_line
  7630                           
  7631                           ;RemoteCan.c: 513: LCD_write_message("-> Safety brake ON<-");
  7632  01400A  0EEC               	movlw	low STR_15
  7633  01400C  0100               	movlb	0	; () banked
  7634  01400E  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7635  014010  0EFE               	movlw	high STR_15
  7636  014012  0100               	movlb	0	; () banked
  7637  014014  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7638  014016  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7639  01401A  D000               	goto	l8472
  7640  01401C                     l8472:
  7641                           
  7642                           ;RemoteCan.c: 514: }
  7643                           ;RemoteCan.c: 517: LCD_goto_xy(8, 3);
  7644  01401C  0E03               	movlw	3
  7645  01401E  0100               	movlb	0	; () banked
  7646  014020  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  7647  014022  0E08               	movlw	8
  7648  014024  ECE6  F0AF         	call	_LCD_goto_xy
  7649                           
  7650                           ;RemoteCan.c: 518: LCD_write_string(str);
  7651  014028  0E0A               	movlw	low _str
  7652  01402A  0100               	movlb	0	; () banked
  7653  01402C  6F83               	movwf	LCD_write_string@buffer& (0+255),b
  7654  01402E  0E01               	movlw	high _str
  7655  014030  0100               	movlb	0	; () banked
  7656  014032  6F84               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  7657  014034  EC9E  F0AF         	call	_LCD_write_string	;wreg free
  7658                           
  7659                           ;RemoteCan.c: 520: if ((low_battery == 0) || (battery_charging == 0)) {
  7660  014038  A04B               	btfss	_low_battery/(0+8),_low_battery& (0+7),c	;volatile
  7661  01403A  D002               	goto	l907
  7662  01403C  BA4A               	btfsc	_battery_charging/(0+8),_battery_charging& (0+7),c	;volatile
  7663  01403E  D031               	goto	l8492
  7664  014040                     l907:
  7665                           
  7666                           ;RemoteCan.c: 521: if (LCD_4TH_ROW_MODE == 0) {
  7667  014040  B64A               	btfsc	_LCD_4TH_ROW_MODE/(0+8),_LCD_4TH_ROW_MODE& (0+7),c	;volatile
  7668  014042  D01C               	goto	l8488
  7669                           
  7670                           ;RemoteCan.c: 523: LCD_goto_xy(14, 4);
  7671  014044  0E04               	movlw	4
  7672  014046  0100               	movlb	0	; () banked
  7673  014048  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  7674  01404A  0E0E               	movlw	14
  7675  01404C  ECE6  F0AF         	call	_LCD_goto_xy
  7676                           
  7677                           ;RemoteCan.c: 524: if (parking_state == 0) {
  7678  014050  0100               	movlb	0	; () banked
  7679  014052  51EA               	movf	_parking_state& (0+255),w,b	;volatile
  7680  014054  A4D8               	btfss	status,2,c
  7681  014056  D009               	goto	l8486
  7682                           
  7683                           ; BSR set to: 0
  7684                           ;RemoteCan.c: 525: LCD_write_message("OFF    ");
  7685  014058  0ED4               	movlw	low STR_16
  7686  01405A  0100               	movlb	0	; () banked
  7687  01405C  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7688  01405E  0EFF               	movlw	high STR_16
  7689  014060  0100               	movlb	0	; () banked
  7690  014062  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7691  014064  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7692                           
  7693                           ;RemoteCan.c: 526: } else {
  7694  014068  0012               	return	
  7695  01406A                     l8486:
  7696                           
  7697                           ;RemoteCan.c: 527: LCD_write_message("SEARCH ");
  7698  01406A  0EDC               	movlw	low STR_17
  7699  01406C  0100               	movlb	0	; () banked
  7700  01406E  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7701  014070  0EFF               	movlw	high STR_17
  7702  014072  0100               	movlb	0	; () banked
  7703  014074  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7704  014076  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7705                           
  7706                           ;RemoteCan.c: 528: }
  7707                           ;RemoteCan.c: 529: } else {
  7708  01407A  0012               	return	
  7709  01407C                     l8488:
  7710                           
  7711                           ;RemoteCan.c: 531: LCD_goto_xy(7, 4);
  7712  01407C  0E04               	movlw	4
  7713  01407E  0100               	movlb	0	; () banked
  7714  014080  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  7715  014082  0E07               	movlw	7
  7716  014084  ECE6  F0AF         	call	_LCD_goto_xy
  7717                           
  7718                           ;RemoteCan.c: 532: LCD_write_integer(user_data, 0, 0x01);
  7719  014088  C00F  F08A         	movff	_user_data,LCD_write_integer@value	;volatile
  7720  01408C  C010  F08B         	movff	_user_data+1,LCD_write_integer@value+1	;volatile
  7721  014090  0E00               	movlw	0
  7722  014092  0100               	movlb	0	; () banked
  7723  014094  6F8C               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  7724  014096  0E01               	movlw	1
  7725  014098  0100               	movlb	0	; () banked
  7726  01409A  6F8D               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  7727  01409C  EC86  F0A2         	call	_LCD_write_integer	;wreg free
  7728                           
  7729                           ;RemoteCan.c: 533: }
  7730                           ;RemoteCan.c: 534: } else {
  7731  0140A0  0012               	return	
  7732  0140A2                     l8492:
  7733                           
  7734                           ;RemoteCan.c: 535: LCD_goto_line(4);
  7735  0140A2  0E04               	movlw	4
  7736  0140A4  ECD5  F0A8         	call	_LCD_goto_line
  7737                           
  7738                           ;RemoteCan.c: 536: if (battery_charging == 1) {
  7739  0140A8  AA4A               	btfss	_battery_charging/(0+8),_battery_charging& (0+7),c	;volatile
  7740  0140AA  D009               	goto	l8498
  7741                           
  7742                           ;RemoteCan.c: 537: LCD_write_message("Battery charging... ");
  7743  0140AC  0E6E               	movlw	low STR_18
  7744  0140AE  0100               	movlb	0	; () banked
  7745  0140B0  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7746  0140B2  0EFE               	movlw	high STR_18
  7747  0140B4  0100               	movlb	0	; () banked
  7748  0140B6  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7749  0140B8  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7750                           
  7751                           ;RemoteCan.c: 538: } else {
  7752  0140BC  0012               	return	
  7753  0140BE                     l8498:
  7754                           
  7755                           ;RemoteCan.c: 539: LCD_write_message("[!]  Low battery [!]");
  7756  0140BE  0E94               	movlw	low STR_19
  7757  0140C0  0100               	movlb	0	; () banked
  7758  0140C2  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7759  0140C4  0EFF               	movlw	high STR_19
  7760  0140C6  0100               	movlb	0	; () banked
  7761  0140C8  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7762  0140CA  EC07  F0AF         	call	_LCD_write_message	;wreg free
  7763  0140CE  0012               	return	
  7764  0140D0  0012               	return		;funcret
  7765  0140D2                     __end_of_LCD_Handler:
  7766                           	opt stack 0
  7767                           tblptru	equ	0xFF8
  7768                           tblptrh	equ	0xFF7
  7769                           tblptrl	equ	0xFF6
  7770                           tablat	equ	0xFF5
  7771                           prodh	equ	0xFF4
  7772                           prodl	equ	0xFF3
  7773                           intcon	equ	0xFF2
  7774                           postinc0	equ	0xFEE
  7775                           wreg	equ	0xFE8
  7776                           postinc2	equ	0xFDE
  7777                           fsr2h	equ	0xFDA
  7778                           fsr2l	equ	0xFD9
  7779                           status	equ	0xFD8
  7780                           
  7781 ;; *************** function _sprintf *****************
  7782 ;; Defined at:
  7783 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;  sp              2   83[BANK0 ] PTR unsigned char 
  7786 ;;		 -> str(12), 
  7787 ;;  f               2   85[BANK0 ] PTR const unsigned char 
  7788 ;;		 -> STR_5(5), 
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;  fval            4   22[BANK1 ] PTR const unsigned char 
  7791 ;;  tmpval          4   16[BANK1 ] struct .
  7792 ;;  val             4   10[BANK1 ] unsigned long 
  7793 ;;  cp              3    0        PTR const unsigned char 
  7794 ;;  prec            2   20[BANK1 ] int 
  7795 ;;  exp             2   14[BANK1 ] int 
  7796 ;;  flag            2    8[BANK1 ] unsigned short 
  7797 ;;  ap              2    6[BANK1 ] PTR void [1]
  7798 ;;		 -> ?_sprintf(2), 
  7799 ;;  len             2    0        unsigned int 
  7800 ;;  width           2    0        int 
  7801 ;;  c               1   26[BANK1 ] char 
  7802 ;;  d               1    0        unsigned char 
  7803 ;; Return value:  Size  Location     Type
  7804 ;;                  2   83[BANK0 ] int 
  7805 ;; Registers used:
  7806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7812 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7813 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;      Totals:         0       8      27       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;Total ram usage:       35 bytes
  7817 ;; Hardware stack levels used:    1
  7818 ;; Hardware stack levels required when called:    6
  7819 ;; This function calls:
  7820 ;;		___awdiv
  7821 ;;		___fladd
  7822 ;;		___flge
  7823 ;;		___flmul
  7824 ;;		___flneg
  7825 ;;		___flsub
  7826 ;;		___fltol
  7827 ;;		___lldiv
  7828 ;;		___llmod
  7829 ;;		___lltofl
  7830 ;;		___wmul
  7831 ;;		__div_to_l_
  7832 ;;		__tdiv_to_l_
  7833 ;;		_fround
  7834 ;;		_isdigit
  7835 ;;		_scale
  7836 ;; This function is called by:
  7837 ;;		_LCD_Handler
  7838 ;; This function uses a non-reentrant model
  7839 ;;
  7840                           
  7841                           	psect	text12
  7842  010B2A                     __ptext12:
  7843                           	opt stack 0
  7844  010B2A                     _sprintf:
  7845                           	opt stack 23
  7846                           
  7847                           ;doprnt.c: 494: va_list ap;
  7848                           ;doprnt.c: 499: signed char c;
  7849                           ;doprnt.c: 501: int width;
  7850                           ;doprnt.c: 504: int prec;
  7851                           ;doprnt.c: 508: unsigned short flag;
  7852                           ;doprnt.c: 515: char d;
  7853                           ;doprnt.c: 516: double fval;
  7854                           ;doprnt.c: 517: int exp;
  7855                           ;doprnt.c: 523: union {
  7856                           ;doprnt.c: 524: unsigned long vd;
  7857                           ;doprnt.c: 525: double integ;
  7858                           ;doprnt.c: 526: } tmpval;
  7859                           ;doprnt.c: 528: unsigned long val;
  7860                           ;doprnt.c: 529: unsigned len;
  7861                           ;doprnt.c: 530: const char * cp;
  7862                           ;doprnt.c: 533: *ap = __va_start();
  7863                           
  7864                           ;incstack = 0
  7865  010B2A  0EB7               	movlw	low (?_sprintf+4)
  7866  010B2C  0101               	movlb	1	; () banked
  7867  010B2E  6F3C               	movwf	sprintf@ap& (0+255),b
  7868  010B30  0E00               	movlw	high (?_sprintf+4)
  7869  010B32  0101               	movlb	1	; () banked
  7870  010B34  6F3D               	movwf	(sprintf@ap+1)& (0+255),b
  7871                           
  7872                           ;doprnt.c: 536: while(c = *f++) {
  7873  010B36  EF00  F08A         	goto	l8258
  7874  010B3A                     l8060:
  7875                           
  7876                           ; BSR set to: 1
  7877                           ;doprnt.c: 538: if(c != '%')
  7878  010B3A  0E25               	movlw	37
  7879  010B3C  0101               	movlb	1	; () banked
  7880  010B3E  1950               	xorwf	sprintf@c& (0+255),w,b
  7881  010B40  B4D8               	btfsc	status,2,c
  7882  010B42  D008               	goto	l8066
  7883                           
  7884                           ; BSR set to: 1
  7885                           ;doprnt.c: 540: {
  7886                           ;doprnt.c: 541: ((*sp++ = (c)));
  7887  010B44  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  7888  010B48  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  7889  010B4C  C150  FFDF         	movff	sprintf@c,indf2
  7890  010B50  EFFC  F089         	goto	l8256
  7891  010B54                     l8066:
  7892                           
  7893                           ;doprnt.c: 543: }
  7894                           ;doprnt.c: 548: flag = 0;
  7895  010B54  0E00               	movlw	0
  7896  010B56  0101               	movlb	1	; () banked
  7897  010B58  6F3F               	movwf	(sprintf@flag+1)& (0+255),b
  7898  010B5A  0E00               	movlw	0
  7899  010B5C  6F3E               	movwf	sprintf@flag& (0+255),b
  7900                           
  7901                           ; BSR set to: 1
  7902                           ;doprnt.c: 611: if(*f == '.') {
  7903  010B5E  C0B5  FFF6         	movff	sprintf@f,tblptrl
  7904  010B62  C0B6  FFF7         	movff	sprintf@f+1,tblptrh
  7905  010B66                     	if	0	;tblptru may be non-zero
  7906  010B66                     	endif
  7907  010B66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7908  010B66  0E00               	movlw	low (__mediumconst shr (0+16))
  7909  010B68  6EF8               	movwf	tblptru,c
  7910  010B6A                     	endif
  7911  010B6A  0008               	tblrd		*
  7912  010B6C  50F5               	movf	tablat,w,c
  7913  010B6E  0A2E               	xorlw	46
  7914  010B70  A4D8               	btfss	status,2,c
  7915  010B72  D03F               	goto	l8080
  7916                           
  7917                           ; BSR set to: 1
  7918                           ;doprnt.c: 612: flag |= 0x4000;
  7919  010B74  0101               	movlb	1	; () banked
  7920  010B76  8D3F               	bsf	(sprintf@flag+1)& (0+255),6,b
  7921                           
  7922                           ;doprnt.c: 613: f++;
  7923  010B78  0100               	movlb	0	; () banked
  7924  010B7A  4BB5               	infsnz	sprintf@f& (0+255),f,b
  7925  010B7C  2BB6               	incf	(sprintf@f+1)& (0+255),f,b
  7926                           
  7927                           ; BSR set to: 0
  7928                           ;doprnt.c: 620: {
  7929                           ;doprnt.c: 621: prec = 0;
  7930  010B7E  0E00               	movlw	0
  7931  010B80  0101               	movlb	1	; () banked
  7932  010B82  6F4B               	movwf	(sprintf@prec+1)& (0+255),b
  7933  010B84  0E00               	movlw	0
  7934  010B86  6F4A               	movwf	sprintf@prec& (0+255),b
  7935                           
  7936                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  7937  010B88  D026               	goto	l8078
  7938  010B8A                     l8074:
  7939                           
  7940                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  7941  010B8A  C14A  F072         	movff	sprintf@prec,___wmul@multiplier
  7942  010B8E  C14B  F073         	movff	sprintf@prec+1,___wmul@multiplier+1
  7943  010B92  0E00               	movlw	0
  7944  010B94  0100               	movlb	0	; () banked
  7945  010B96  6F75               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7946  010B98  0E0A               	movlw	10
  7947  010B9A  6F74               	movwf	___wmul@multiplicand& (0+255),b
  7948  010B9C  ECD0  F0AE         	call	___wmul	;wreg free
  7949  010BA0  C0B5  FFF6         	movff	sprintf@f,tblptrl
  7950  010BA4  C0B6  FFF7         	movff	sprintf@f+1,tblptrh
  7951  010BA8                     	if	0	;tblptru may be non-zero
  7952  010BA8                     	endif
  7953  010BA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7954  010BA8  0E00               	movlw	low (__mediumconst shr (0+16))
  7955  010BAA  6EF8               	movwf	tblptru,c
  7956  010BAC                     	endif
  7957  010BAC  0008               	tblrd		*
  7958  010BAE  50F5               	movf	tablat,w,c
  7959  010BB0  0100               	movlb	0	; () banked
  7960  010BB2  2772               	addwf	?___wmul& (0+255),f,b
  7961  010BB4  0E00               	movlw	0
  7962  010BB6  0100               	movlb	0	; () banked
  7963  010BB8  2373               	addwfc	(?___wmul+1)& (0+255),f,b
  7964  010BBA  0ED0               	movlw	208
  7965  010BBC  0100               	movlb	0	; () banked
  7966  010BBE  2572               	addwf	?___wmul& (0+255),w,b
  7967  010BC0  0101               	movlb	1	; () banked
  7968  010BC2  6F4A               	movwf	sprintf@prec& (0+255),b
  7969  010BC4  0EFF               	movlw	255
  7970  010BC6  0100               	movlb	0	; () banked
  7971  010BC8  2173               	addwfc	(?___wmul+1)& (0+255),w,b
  7972  010BCA  0101               	movlb	1	; () banked
  7973  010BCC  6F4B               	movwf	(sprintf@prec+1)& (0+255),b
  7974                           
  7975                           ; BSR set to: 1
  7976  010BCE  0100               	movlb	0	; () banked
  7977  010BD0  4BB5               	infsnz	sprintf@f& (0+255),f,b
  7978  010BD2  2BB6               	incf	(sprintf@f+1)& (0+255),f,b
  7979  010BD4  D000               	goto	l8078
  7980  010BD6                     l8078:
  7981  010BD6  C0B5  FFF6         	movff	sprintf@f,tblptrl
  7982  010BDA  C0B6  FFF7         	movff	sprintf@f+1,tblptrh
  7983  010BDE                     	if	0	;tblptru may be non-zero
  7984  010BDE                     	endif
  7985  010BDE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7986  010BDE  0E00               	movlw	low (__mediumconst shr (0+16))
  7987  010BE0  6EF8               	movwf	tblptru,c
  7988  010BE2                     	endif
  7989  010BE2  0008               	tblrd		*
  7990  010BE4  50F5               	movf	tablat,w,c
  7991  010BE6  EC87  F0AF         	call	_isdigit
  7992  010BEA  A0D8               	btfss	status,0,c
  7993  010BEC  D011               	goto	l8088
  7994  010BEE  D7CD               	goto	l8074
  7995                           
  7996                           ;doprnt.c: 624: }
  7997                           ;doprnt.c: 625: } else {
  7998  010BF0  D00F               	goto	l8088
  7999  010BF2                     l8080:
  8000                           
  8001                           ;doprnt.c: 626: prec = 0;
  8002  010BF2  0E00               	movlw	0
  8003  010BF4  0101               	movlb	1	; () banked
  8004  010BF6  6F4B               	movwf	(sprintf@prec+1)& (0+255),b
  8005  010BF8  0E00               	movlw	0
  8006  010BFA  6F4A               	movwf	sprintf@prec& (0+255),b
  8007                           
  8008                           ; BSR set to: 1
  8009                           ;doprnt.c: 628: flag |= 0x1000;
  8010  010BFC  0101               	movlb	1	; () banked
  8011  010BFE  893F               	bsf	(sprintf@flag+1)& (0+255),4,b
  8012                           
  8013                           ; BSR set to: 1
  8014                           ;doprnt.c: 630: }
  8015                           ;doprnt.c: 635: switch(c = *f++) {
  8016  010C00  D007               	goto	l8088
  8017                           
  8018                           ; BSR set to: 1
  8019                           ;doprnt.c: 638: goto alldone;
  8020                           
  8021                           ;doprnt.c: 637: case 0:
  8022  010C02  EF13  F08A         	goto	l8260
  8023  010C06                     l8084:
  8024                           
  8025                           ; BSR set to: 1
  8026                           ;doprnt.c: 663: flag |= 0x400;
  8027  010C06  0101               	movlb	1	; () banked
  8028  010C08  853F               	bsf	(sprintf@flag+1)& (0+255),2,b
  8029                           
  8030                           ;doprnt.c: 664: break;
  8031  010C0A  D017               	goto	l8090
  8032                           
  8033                           ; BSR set to: 1
  8034                           ;doprnt.c: 813: continue;
  8035                           
  8036                           ;doprnt.c: 802: default:
  8037  010C0C  D3F9               	goto	l8258
  8038                           
  8039                           ; BSR set to: 1
  8040                           ;doprnt.c: 822: }
  8041  010C0E  D015               	goto	l8090
  8042  010C10                     l8088:
  8043  010C10  C0B5  FFF6         	movff	sprintf@f,tblptrl
  8044  010C14  C0B6  FFF7         	movff	sprintf@f+1,tblptrh
  8045  010C18  0100               	movlb	0	; () banked
  8046  010C1A  4BB5               	infsnz	sprintf@f& (0+255),f,b
  8047  010C1C  2BB6               	incf	(sprintf@f+1)& (0+255),f,b
  8048  010C1E                     	if	0	;tblptru may be non-zero
  8049  010C1E                     	endif
  8050  010C1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8051  010C1E  0E00               	movlw	low (__mediumconst shr (0+16))
  8052  010C20  6EF8               	movwf	tblptru,c
  8053  010C22                     	endif
  8054  010C22  0008               	tblrd		*
  8055  010C24  CFF5 F150          	movff	tablat,sprintf@c
  8056  010C28  0101               	movlb	1	; () banked
  8057  010C2A  5150               	movf	sprintf@c& (0+255),w,b
  8058                           
  8059                           ; Switch size 1, requested type "space"
  8060                           ; Number of cases is 2, Range of values is 0 to 102
  8061                           ; switch strategies available:
  8062                           ; Name         Instructions Cycles
  8063                           ; simple_byte            7     4 (average)
  8064                           ;	Chosen strategy is simple_byte
  8065  010C2C  0A00               	xorlw	0	; case 0
  8066  010C2E  B4D8               	btfsc	status,2,c
  8067  010C30  D3FA               	goto	l8260
  8068  010C32  0A66               	xorlw	102	; case 102
  8069  010C34  B4D8               	btfsc	status,2,c
  8070  010C36  D7E7               	goto	l8084
  8071  010C38  D3E3               	goto	l8258
  8072  010C3A                     l8090:
  8073                           
  8074                           ; BSR set to: 1
  8075                           ;doprnt.c: 825: if(flag & (0x700)) {
  8076  010C3A  0E07               	movlw	7
  8077  010C3C  0101               	movlb	1	; () banked
  8078  010C3E  153F               	andwf	(sprintf@flag+1)& (0+255),w,b
  8079  010C40  B4D8               	btfsc	status,2,c
  8080  010C42  D383               	goto	l8238
  8081                           
  8082                           ; BSR set to: 1
  8083                           ;doprnt.c: 827: if(flag & 0x1000)
  8084  010C44  0101               	movlb	1	; () banked
  8085  010C46  A93F               	btfss	(sprintf@flag+1)& (0+255),4,b
  8086  010C48  D006               	goto	l8096
  8087                           
  8088                           ; BSR set to: 1
  8089                           ;doprnt.c: 829: prec = 6;
  8090  010C4A  0E00               	movlw	0
  8091  010C4C  0101               	movlb	1	; () banked
  8092  010C4E  6F4B               	movwf	(sprintf@prec+1)& (0+255),b
  8093  010C50  0E06               	movlw	6
  8094  010C52  6F4A               	movwf	sprintf@prec& (0+255),b
  8095  010C54  D000               	goto	l8096
  8096  010C56                     l8096:
  8097                           
  8098                           ; BSR set to: 1
  8099                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  8100  010C56  C13C  FFD9         	movff	sprintf@ap,fsr2l
  8101  010C5A  C13D  FFDA         	movff	sprintf@ap+1,fsr2h
  8102  010C5E  CFDE F14C          	movff	postinc2,sprintf@fval
  8103  010C62  CFDE F14D          	movff	postinc2,sprintf@fval+1
  8104  010C66  CFDE F14E          	movff	postinc2,sprintf@fval+2
  8105  010C6A  CFDE F14F          	movff	postinc2,sprintf@fval+3
  8106                           
  8107                           ; BSR set to: 1
  8108  010C6E  0E04               	movlw	4
  8109  010C70  0101               	movlb	1	; () banked
  8110  010C72  273C               	addwf	sprintf@ap& (0+255),f,b
  8111  010C74  0E00               	movlw	0
  8112  010C76  233D               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8113                           
  8114                           ; BSR set to: 1
  8115                           ;doprnt.c: 831: if(fval < 0.0) {
  8116  010C78  0101               	movlb	1	; () banked
  8117  010C7A  AF4F               	btfss	(sprintf@fval+3)& (0+255),7,b
  8118  010C7C  D016               	goto	l8106
  8119                           
  8120                           ; BSR set to: 1
  8121                           ;doprnt.c: 832: fval = -fval;
  8122  010C7E  C14C  F090         	movff	sprintf@fval,___flneg@f1
  8123  010C82  C14D  F091         	movff	sprintf@fval+1,___flneg@f1+1
  8124  010C86  C14E  F092         	movff	sprintf@fval+2,___flneg@f1+2
  8125  010C8A  C14F  F093         	movff	sprintf@fval+3,___flneg@f1+3
  8126  010C8E  EC78  F0AE         	call	___flneg	;wreg free
  8127  010C92  C090  F14C         	movff	?___flneg,sprintf@fval
  8128  010C96  C091  F14D         	movff	?___flneg+1,sprintf@fval+1
  8129  010C9A  C092  F14E         	movff	?___flneg+2,sprintf@fval+2
  8130  010C9E  C093  F14F         	movff	?___flneg+3,sprintf@fval+3
  8131                           
  8132                           ;doprnt.c: 833: flag |= 0x03;
  8133  010CA2  0E03               	movlw	3
  8134  010CA4  0101               	movlb	1	; () banked
  8135  010CA6  133E               	iorwf	sprintf@flag& (0+255),f,b
  8136  010CA8  D000               	goto	l8106
  8137  010CAA                     l8106:
  8138                           
  8139                           ; BSR set to: 1
  8140                           ;doprnt.c: 834: }
  8141                           ;doprnt.c: 835: exp = 0;
  8142  010CAA  0E00               	movlw	0
  8143  010CAC  0101               	movlb	1	; () banked
  8144  010CAE  6F45               	movwf	(sprintf@exp+1)& (0+255),b
  8145  010CB0  0E00               	movlw	0
  8146  010CB2  6F44               	movwf	sprintf@exp& (0+255),b
  8147                           
  8148                           ; BSR set to: 1
  8149                           ;doprnt.c: 836: if( fval!=0) {
  8150  010CB4  0101               	movlb	1	; () banked
  8151  010CB6  514C               	movf	sprintf@fval& (0+255),w,b
  8152  010CB8  0101               	movlb	1	; () banked
  8153  010CBA  114D               	iorwf	(sprintf@fval+1)& (0+255),w,b
  8154  010CBC  0101               	movlb	1	; () banked
  8155  010CBE  114E               	iorwf	(sprintf@fval+2)& (0+255),w,b
  8156  010CC0  0101               	movlb	1	; () banked
  8157  010CC2  114F               	iorwf	(sprintf@fval+3)& (0+255),w,b
  8158  010CC4  B4D8               	btfsc	status,2,c
  8159  010CC6  D090               	goto	l8134
  8160                           
  8161                           ; BSR set to: 1
  8162                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  8163  010CC8  0101               	movlb	1	; () banked
  8164  010CCA  354E               	rlcf	(sprintf@fval+2)& (0+255),w,b
  8165  010CCC  354F               	rlcf	(sprintf@fval+3)& (0+255),w,b
  8166  010CCE  0F82               	addlw	130
  8167  010CD0  0101               	movlb	1	; () banked
  8168  010CD2  6F44               	movwf	sprintf@exp& (0+255),b
  8169  010CD4  0101               	movlb	1	; () banked
  8170  010CD6  6B45               	clrf	(sprintf@exp+1)& (0+255),b
  8171  010CD8  0EFF               	movlw	255
  8172  010CDA  2345               	addwfc	(sprintf@exp+1)& (0+255),f,b
  8173                           
  8174                           ; BSR set to: 1
  8175                           ;doprnt.c: 838: exp--;
  8176  010CDC  0101               	movlb	1	; () banked
  8177  010CDE  0744               	decf	sprintf@exp& (0+255),f,b
  8178  010CE0  A0D8               	btfss	status,0,c
  8179  010CE2  0745               	decf	(sprintf@exp+1)& (0+255),f,b
  8180                           
  8181                           ; BSR set to: 1
  8182                           ;doprnt.c: 839: exp *= 3;
  8183  010CE4  C144  F072         	movff	sprintf@exp,___wmul@multiplier
  8184  010CE8  C145  F073         	movff	sprintf@exp+1,___wmul@multiplier+1
  8185  010CEC  0E00               	movlw	0
  8186  010CEE  0100               	movlb	0	; () banked
  8187  010CF0  6F75               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8188  010CF2  0E03               	movlw	3
  8189  010CF4  6F74               	movwf	___wmul@multiplicand& (0+255),b
  8190  010CF6  ECD0  F0AE         	call	___wmul	;wreg free
  8191  010CFA  C072  F144         	movff	?___wmul,sprintf@exp
  8192  010CFE  C073  F145         	movff	?___wmul+1,sprintf@exp+1
  8193                           
  8194                           ;doprnt.c: 840: exp /= 10;
  8195  010D02  C144  F078         	movff	sprintf@exp,___awdiv@dividend
  8196  010D06  C145  F079         	movff	sprintf@exp+1,___awdiv@dividend+1
  8197  010D0A  0E00               	movlw	0
  8198  010D0C  0100               	movlb	0	; () banked
  8199  010D0E  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8200  010D10  0E0A               	movlw	10
  8201  010D12  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8202  010D14  EC4C  F0A9         	call	___awdiv	;wreg free
  8203  010D18  C078  F144         	movff	?___awdiv,sprintf@exp
  8204  010D1C  C079  F145         	movff	?___awdiv+1,sprintf@exp+1
  8205                           
  8206                           ;doprnt.c: 841: if(exp < 0)
  8207  010D20  0101               	movlb	1	; () banked
  8208  010D22  AF45               	btfss	(sprintf@exp+1)& (0+255),7,b
  8209  010D24  D005               	goto	l8122
  8210                           
  8211                           ; BSR set to: 1
  8212                           ;doprnt.c: 842: exp--;
  8213  010D26  0101               	movlb	1	; () banked
  8214  010D28  0744               	decf	sprintf@exp& (0+255),f,b
  8215  010D2A  A0D8               	btfss	status,0,c
  8216  010D2C  0745               	decf	(sprintf@exp+1)& (0+255),f,b
  8217  010D2E  D000               	goto	l8122
  8218  010D30                     l8122:
  8219                           
  8220                           ; BSR set to: 1
  8221                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  8222  010D30  0101               	movlb	1	; () banked
  8223  010D32  5144               	movf	sprintf@exp& (0+255),w,b
  8224  010D34  0800               	sublw	0
  8225  010D36  EC01  F098         	call	_scale
  8226  010D3A  C090  F146         	movff	?_scale,sprintf@tmpval
  8227  010D3E  C091  F147         	movff	?_scale+1,sprintf@tmpval+1
  8228  010D42  C092  F148         	movff	?_scale+2,sprintf@tmpval+2
  8229  010D46  C093  F149         	movff	?_scale+3,sprintf@tmpval+3
  8230                           
  8231                           ;doprnt.c: 847: tmpval.integ *= fval;
  8232  010D4A  C146  F081         	movff	sprintf@tmpval,___flmul@f1
  8233  010D4E  C147  F082         	movff	sprintf@tmpval+1,___flmul@f1+1
  8234  010D52  C148  F083         	movff	sprintf@tmpval+2,___flmul@f1+2
  8235  010D56  C149  F084         	movff	sprintf@tmpval+3,___flmul@f1+3
  8236  010D5A  C14C  F085         	movff	sprintf@fval,___flmul@f2
  8237  010D5E  C14D  F086         	movff	sprintf@fval+1,___flmul@f2+1
  8238  010D62  C14E  F087         	movff	sprintf@fval+2,___flmul@f2+2
  8239  010D66  C14F  F088         	movff	sprintf@fval+3,___flmul@f2+3
  8240  010D6A  EC7F  F0A6         	call	___flmul	;wreg free
  8241  010D6E  C081  F146         	movff	?___flmul,sprintf@tmpval
  8242  010D72  C082  F147         	movff	?___flmul+1,sprintf@tmpval+1
  8243  010D76  C083  F148         	movff	?___flmul+2,sprintf@tmpval+2
  8244  010D7A  C084  F149         	movff	?___flmul+3,sprintf@tmpval+3
  8245                           
  8246                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  8247  010D7E  C146  F072         	movff	sprintf@tmpval,___flge@ff1
  8248  010D82  C147  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  8249  010D86  C148  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  8250  010D8A  C149  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  8251  010D8E  0E00               	movlw	0
  8252  010D90  0100               	movlb	0	; () banked
  8253  010D92  6F76               	movwf	___flge@ff2& (0+255),b
  8254  010D94  0E00               	movlw	0
  8255  010D96  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  8256  010D98  0E80               	movlw	128
  8257  010D9A  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  8258  010D9C  0E3F               	movlw	63
  8259  010D9E  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  8260  010DA0  EC59  F0A8         	call	___flge	;wreg free
  8261  010DA4  0100               	movlb	0	; () banked
  8262  010DA6  B0D8               	btfsc	status,0,c
  8263  010DA8  D005               	goto	l8130
  8264                           
  8265                           ; BSR set to: 0
  8266                           ;doprnt.c: 849: exp--;
  8267  010DAA  0101               	movlb	1	; () banked
  8268  010DAC  0744               	decf	sprintf@exp& (0+255),f,b
  8269  010DAE  A0D8               	btfss	status,0,c
  8270  010DB0  0745               	decf	(sprintf@exp+1)& (0+255),f,b
  8271  010DB2  D01A               	goto	l8134
  8272  010DB4                     l8130:
  8273                           
  8274                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  8275  010DB4  C146  F072         	movff	sprintf@tmpval,___flge@ff1
  8276  010DB8  C147  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  8277  010DBC  C148  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  8278  010DC0  C149  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  8279  010DC4  0E00               	movlw	0
  8280  010DC6  0100               	movlb	0	; () banked
  8281  010DC8  6F76               	movwf	___flge@ff2& (0+255),b
  8282  010DCA  0E00               	movlw	0
  8283  010DCC  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  8284  010DCE  0E20               	movlw	32
  8285  010DD0  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  8286  010DD2  0E41               	movlw	65
  8287  010DD4  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  8288  010DD6  EC59  F0A8         	call	___flge	;wreg free
  8289  010DDA  0100               	movlb	0	; () banked
  8290  010DDC  A0D8               	btfss	status,0,c
  8291  010DDE  D004               	goto	l8134
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;doprnt.c: 851: exp++;
  8295  010DE0  0101               	movlb	1	; () banked
  8296  010DE2  4B44               	infsnz	sprintf@exp& (0+255),f,b
  8297  010DE4  2B45               	incf	(sprintf@exp+1)& (0+255),f,b
  8298                           
  8299                           ; BSR set to: 1
  8300                           
  8301                           ; BSR set to: 1
  8302  010DE6  D000               	goto	l8134
  8303  010DE8                     l8134:
  8304                           
  8305                           ;doprnt.c: 852: }
  8306                           ;doprnt.c: 1112: if(prec <= 12)
  8307  010DE8  0101               	movlb	1	; () banked
  8308  010DEA  BF4B               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8309  010DEC  D008               	goto	l8136
  8310  010DEE  0101               	movlb	1	; () banked
  8311  010DF0  514B               	movf	(sprintf@prec+1)& (0+255),w,b
  8312  010DF2  E124               	bnz	l8138
  8313  010DF4  0E0D               	movlw	13
  8314  010DF6  0101               	movlb	1	; () banked
  8315  010DF8  5D4A               	subwf	sprintf@prec& (0+255),w,b
  8316  010DFA  B0D8               	btfsc	status,0,c
  8317  010DFC  D01F               	goto	l8138
  8318  010DFE                     l8136:
  8319                           
  8320                           ; BSR set to: 1
  8321                           ;doprnt.c: 1113: fval += fround(prec);
  8322  010DFE  C14C  F09D         	movff	sprintf@fval,___fladd@f1
  8323  010E02  C14D  F09E         	movff	sprintf@fval+1,___fladd@f1+1
  8324  010E06  C14E  F09F         	movff	sprintf@fval+2,___fladd@f1+2
  8325  010E0A  C14F  F0A0         	movff	sprintf@fval+3,___fladd@f1+3
  8326  010E0E  0101               	movlb	1	; () banked
  8327  010E10  514A               	movf	sprintf@prec& (0+255),w,b
  8328  010E12  EC6A  F09C         	call	_fround
  8329  010E16  C090  F0A1         	movff	?_fround,___fladd@f2
  8330  010E1A  C091  F0A2         	movff	?_fround+1,___fladd@f2+1
  8331  010E1E  C092  F0A3         	movff	?_fround+2,___fladd@f2+2
  8332  010E22  C093  F0A4         	movff	?_fround+3,___fladd@f2+3
  8333  010E26  EC69  F0A0         	call	___fladd	;wreg free
  8334  010E2A  C09D  F14C         	movff	?___fladd,sprintf@fval
  8335  010E2E  C09E  F14D         	movff	?___fladd+1,sprintf@fval+1
  8336  010E32  C09F  F14E         	movff	?___fladd+2,sprintf@fval+2
  8337  010E36  C0A0  F14F         	movff	?___fladd+3,sprintf@fval+3
  8338  010E3A  D000               	goto	l8138
  8339  010E3C                     l8138:
  8340                           
  8341                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  8342  010E3C  0101               	movlb	1	; () banked
  8343  010E3E  BF45               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8344  010E40  D008               	goto	l8140
  8345  010E42  0101               	movlb	1	; () banked
  8346  010E44  5145               	movf	(sprintf@exp+1)& (0+255),w,b
  8347  010E46  E130               	bnz	l8146
  8348  010E48  0E0A               	movlw	10
  8349  010E4A  0101               	movlb	1	; () banked
  8350  010E4C  5D44               	subwf	sprintf@exp& (0+255),w,b
  8351  010E4E  B0D8               	btfsc	status,0,c
  8352  010E50  D02B               	goto	l8146
  8353  010E52                     l8140:
  8354                           
  8355                           ; BSR set to: 1
  8356  010E52  0101               	movlb	1	; () banked
  8357  010E54  514C               	movf	sprintf@fval& (0+255),w,b
  8358  010E56  0101               	movlb	1	; () banked
  8359  010E58  114D               	iorwf	(sprintf@fval+1)& (0+255),w,b
  8360  010E5A  0101               	movlb	1	; () banked
  8361  010E5C  114E               	iorwf	(sprintf@fval+2)& (0+255),w,b
  8362  010E5E  0101               	movlb	1	; () banked
  8363  010E60  114F               	iorwf	(sprintf@fval+3)& (0+255),w,b
  8364  010E62  B4D8               	btfsc	status,2,c
  8365  010E64  D08C               	goto	l8160
  8366                           
  8367                           ; BSR set to: 1
  8368  010E66  C14C  F0A9         	movff	sprintf@fval,___fltol@f1
  8369  010E6A  C14D  F0AA         	movff	sprintf@fval+1,___fltol@f1+1
  8370  010E6E  C14E  F0AB         	movff	sprintf@fval+2,___fltol@f1+2
  8371  010E72  C14F  F0AC         	movff	sprintf@fval+3,___fltol@f1+3
  8372  010E76  ECCC  F0A7         	call	___fltol	;wreg free
  8373  010E7A  0100               	movlb	0	; () banked
  8374  010E7C  51A9               	movf	?___fltol& (0+255),w,b
  8375  010E7E  0100               	movlb	0	; () banked
  8376  010E80  11AA               	iorwf	(?___fltol+1)& (0+255),w,b
  8377  010E82  0100               	movlb	0	; () banked
  8378  010E84  11AB               	iorwf	(?___fltol+2)& (0+255),w,b
  8379  010E86  0100               	movlb	0	; () banked
  8380  010E88  11AC               	iorwf	(?___fltol+3)& (0+255),w,b
  8381  010E8A  A4D8               	btfss	status,2,c
  8382  010E8C  D078               	goto	l8160
  8383                           
  8384                           ; BSR set to: 0
  8385  010E8E  0101               	movlb	1	; () banked
  8386  010E90  BF45               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8387  010E92  D075               	goto	l8160
  8388  010E94  0101               	movlb	1	; () banked
  8389  010E96  5145               	movf	(sprintf@exp+1)& (0+255),w,b
  8390  010E98  E107               	bnz	l8146
  8391  010E9A  0E02               	movlw	2
  8392  010E9C  0101               	movlb	1	; () banked
  8393  010E9E  5D44               	subwf	sprintf@exp& (0+255),w,b
  8394  010EA0  B0D8               	btfsc	status,0,c
  8395  010EA2  D002               	goto	l8146
  8396  010EA4  D06C               	goto	l8160
  8397  010EA6  D000               	goto	l8146
  8398  010EA8                     l8146:
  8399                           
  8400                           ; BSR set to: 1
  8401                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  8402  010EA8  C146  F072         	movff	sprintf@tmpval,___flge@ff1
  8403  010EAC  C147  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  8404  010EB0  C148  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  8405  010EB4  C149  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  8406  010EB8  0E5F               	movlw	95
  8407  010EBA  0100               	movlb	0	; () banked
  8408  010EBC  6F76               	movwf	___flge@ff2& (0+255),b
  8409  010EBE  0E70               	movlw	112
  8410  010EC0  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  8411  010EC2  0E89               	movlw	137
  8412  010EC4  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  8413  010EC6  0E40               	movlw	64
  8414  010EC8  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  8415  010ECA  EC59  F0A8         	call	___flge	;wreg free
  8416  010ECE  0100               	movlb	0	; () banked
  8417  010ED0  B0D8               	btfsc	status,0,c
  8418  010ED2  D003               	goto	l8150
  8419                           
  8420                           ; BSR set to: 0
  8421                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  8422  010ED4  0101               	movlb	1	; () banked
  8423  010ED6  0EF7               	movlw	247
  8424  010ED8  D002               	goto	L5
  8425  010EDA                     l8150:
  8426                           
  8427                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  8428  010EDA  0101               	movlb	1	; () banked
  8429  010EDC  0EF8               	movlw	248
  8430  010EDE                     L5:
  8431  010EDE  2744               	addwf	sprintf@exp& (0+255),f,b
  8432  010EE0  0EFF               	movlw	255
  8433  010EE2  2345               	addwfc	(sprintf@exp+1)& (0+255),f,b
  8434  010EE4  D000               	goto	l8152
  8435  010EE6                     l8152:
  8436                           
  8437                           ; BSR set to: 1
  8438                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  8439  010EE6  0101               	movlb	1	; () banked
  8440  010EE8  5144               	movf	sprintf@exp& (0+255),w,b
  8441  010EEA  EC01  F098         	call	_scale
  8442  010EEE  C090  F146         	movff	?_scale,sprintf@tmpval
  8443  010EF2  C091  F147         	movff	?_scale+1,sprintf@tmpval+1
  8444  010EF6  C092  F148         	movff	?_scale+2,sprintf@tmpval+2
  8445  010EFA  C093  F149         	movff	?_scale+3,sprintf@tmpval+3
  8446  010EFE  C14C  F072         	movff	sprintf@fval,__div_to_l_@f1
  8447  010F02  C14D  F073         	movff	sprintf@fval+1,__div_to_l_@f1+1
  8448  010F06  C14E  F074         	movff	sprintf@fval+2,__div_to_l_@f1+2
  8449  010F0A  C14F  F075         	movff	sprintf@fval+3,__div_to_l_@f1+3
  8450  010F0E  C146  F076         	movff	sprintf@tmpval,__div_to_l_@f2
  8451  010F12  C147  F077         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  8452  010F16  C148  F078         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  8453  010F1A  C149  F079         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  8454  010F1E  EC3E  F0A4         	call	__div_to_l_	;wreg free
  8455  010F22  C072  F140         	movff	?__div_to_l_,sprintf@val
  8456  010F26  C073  F141         	movff	?__div_to_l_+1,sprintf@val+1
  8457  010F2A  C074  F142         	movff	?__div_to_l_+2,sprintf@val+2
  8458  010F2E  C075  F143         	movff	?__div_to_l_+3,sprintf@val+3
  8459  010F32  D01B               	goto	l8158
  8460  010F34  C14C  F072         	movff	sprintf@fval,__tdiv_to_l_@f1
  8461  010F38  C14D  F073         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  8462  010F3C  C14E  F074         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  8463  010F40  C14F  F075         	movff	sprintf@fval+3,__tdiv_to_l_@f1+3
  8464  010F44  C146  F076         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  8465  010F48  C147  F077         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  8466  010F4C  C148  F078         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  8467  010F50  C149  F079         	movff	sprintf@tmpval+3,__tdiv_to_l_@f2+3
  8468  010F54  EC6B  F0A3         	call	__tdiv_to_l_	;wreg free
  8469  010F58  C072  F140         	movff	?__tdiv_to_l_,sprintf@val
  8470  010F5C  C073  F141         	movff	?__tdiv_to_l_+1,sprintf@val+1
  8471  010F60  C074  F142         	movff	?__tdiv_to_l_+2,sprintf@val+2
  8472  010F64  C075  F143         	movff	?__tdiv_to_l_+3,sprintf@val+3
  8473  010F68  D000               	goto	l8158
  8474  010F6A                     l8158:
  8475                           
  8476                           ;doprnt.c: 1129: fval = 0.0;
  8477  010F6A  0E00               	movlw	0
  8478  010F6C  0101               	movlb	1	; () banked
  8479  010F6E  6F4C               	movwf	sprintf@fval& (0+255),b
  8480  010F70  0E00               	movlw	0
  8481  010F72  6F4D               	movwf	(sprintf@fval+1)& (0+255),b
  8482  010F74  0E00               	movlw	0
  8483  010F76  6F4E               	movwf	(sprintf@fval+2)& (0+255),b
  8484  010F78  0E00               	movlw	0
  8485  010F7A  6F4F               	movwf	(sprintf@fval+3)& (0+255),b
  8486                           
  8487                           ;doprnt.c: 1130: } else {
  8488  010F7C  D03C               	goto	l8164
  8489  010F7E                     l8160:
  8490                           
  8491                           ;doprnt.c: 1131: val = (unsigned long)fval;
  8492  010F7E  C14C  F0A9         	movff	sprintf@fval,___fltol@f1
  8493  010F82  C14D  F0AA         	movff	sprintf@fval+1,___fltol@f1+1
  8494  010F86  C14E  F0AB         	movff	sprintf@fval+2,___fltol@f1+2
  8495  010F8A  C14F  F0AC         	movff	sprintf@fval+3,___fltol@f1+3
  8496  010F8E  ECCC  F0A7         	call	___fltol	;wreg free
  8497  010F92  C0A9  F140         	movff	?___fltol,sprintf@val
  8498  010F96  C0AA  F141         	movff	?___fltol+1,sprintf@val+1
  8499  010F9A  C0AB  F142         	movff	?___fltol+2,sprintf@val+2
  8500  010F9E  C0AC  F143         	movff	?___fltol+3,sprintf@val+3
  8501                           
  8502                           ;doprnt.c: 1132: fval -= (double)val;
  8503  010FA2  C14C  F0A9         	movff	sprintf@fval,___flsub@f1
  8504  010FA6  C14D  F0AA         	movff	sprintf@fval+1,___flsub@f1+1
  8505  010FAA  C14E  F0AB         	movff	sprintf@fval+2,___flsub@f1+2
  8506  010FAE  C14F  F0AC         	movff	sprintf@fval+3,___flsub@f1+3
  8507  010FB2  C140  F07C         	movff	sprintf@val,___lltofl@c
  8508  010FB6  C141  F07D         	movff	sprintf@val+1,___lltofl@c+1
  8509  010FBA  C142  F07E         	movff	sprintf@val+2,___lltofl@c+2
  8510  010FBE  C143  F07F         	movff	sprintf@val+3,___lltofl@c+3
  8511  010FC2  EC22  F0AF         	call	___lltofl	;wreg free
  8512  010FC6  C07C  F0AD         	movff	?___lltofl,___flsub@f2
  8513  010FCA  C07D  F0AE         	movff	?___lltofl+1,___flsub@f2+1
  8514  010FCE  C07E  F0AF         	movff	?___lltofl+2,___flsub@f2+2
  8515  010FD2  C07F  F0B0         	movff	?___lltofl+3,___flsub@f2+3
  8516  010FD6  EC93  F0AD         	call	___flsub	;wreg free
  8517  010FDA  C0A9  F14C         	movff	?___flsub,sprintf@fval
  8518  010FDE  C0AA  F14D         	movff	?___flsub+1,sprintf@fval+1
  8519  010FE2  C0AB  F14E         	movff	?___flsub+2,sprintf@fval+2
  8520  010FE6  C0AC  F14F         	movff	?___flsub+3,sprintf@fval+3
  8521                           
  8522                           ;doprnt.c: 1133: exp = 0;
  8523  010FEA  0E00               	movlw	0
  8524  010FEC  0101               	movlb	1	; () banked
  8525  010FEE  6F45               	movwf	(sprintf@exp+1)& (0+255),b
  8526  010FF0  0E00               	movlw	0
  8527  010FF2  6F44               	movwf	sprintf@exp& (0+255),b
  8528  010FF4  D000               	goto	l8164
  8529  010FF6                     l8164:
  8530                           
  8531                           ; BSR set to: 1
  8532                           ;doprnt.c: 1134: }
  8533                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8534  010FF6  0E01               	movlw	1
  8535  010FF8  0101               	movlb	1	; () banked
  8536  010FFA  6F50               	movwf	sprintf@c& (0+255),b
  8537  010FFC                     l8166:
  8538                           
  8539                           ; BSR set to: 1
  8540  010FFC  0E0A               	movlw	10
  8541  010FFE  0101               	movlb	1	; () banked
  8542  011000  1950               	xorwf	sprintf@c& (0+255),w,b
  8543  011002  B4D8               	btfsc	status,2,c
  8544  011004  D025               	goto	l8178
  8545  011006  D001               	goto	l8170
  8546                           
  8547                           ; BSR set to: 1
  8548  011008  D023               	goto	l8178
  8549  01100A                     l8170:
  8550                           
  8551                           ; BSR set to: 1
  8552                           ;doprnt.c: 1137: if(val < dpowers[c])
  8553  01100A  0101               	movlb	1	; () banked
  8554  01100C  5150               	movf	sprintf@c& (0+255),w,b
  8555  01100E  0D04               	mullw	4
  8556  011010  0EB3               	movlw	low _dpowers
  8557  011012  24F3               	addwf	prodl,w,c
  8558  011014  6EF6               	movwf	tblptrl,c
  8559  011016  0EFD               	movlw	high _dpowers
  8560  011018  20F4               	addwfc	prodh,w,c
  8561  01101A  6EF7               	movwf	tblptrh,c
  8562  01101C                     	if	1	;There are 3 active tblptr bytes
  8563  01101C  6AF8               	clrf	tblptru,c
  8564  01101E  0E00               	movlw	low (__mediumconst shr (0+16))
  8565  011020  22F8               	addwfc	tblptru,f,c
  8566  011022                     	endif
  8567  011022  0009               	tblrd		*+
  8568  011024  50F5               	movf	tablat,w,c
  8569  011026  0101               	movlb	1	; () banked
  8570  011028  5D40               	subwf	sprintf@val& (0+255),w,b
  8571  01102A  0009               	tblrd		*+
  8572  01102C  50F5               	movf	tablat,w,c
  8573  01102E  0101               	movlb	1	; () banked
  8574  011030  5941               	subwfb	(sprintf@val+1)& (0+255),w,b
  8575  011032  0009               	tblrd		*+
  8576  011034  50F5               	movf	tablat,w,c
  8577  011036  0101               	movlb	1	; () banked
  8578  011038  5942               	subwfb	(sprintf@val+2)& (0+255),w,b
  8579  01103A  0009               	tblrd		*+
  8580  01103C  50F5               	movf	tablat,w,c
  8581  01103E  0101               	movlb	1	; () banked
  8582  011040  5943               	subwfb	(sprintf@val+3)& (0+255),w,b
  8583  011042  A0D8               	btfss	status,0,c
  8584  011044  D005               	goto	l8178
  8585  011046  D001               	goto	l8174
  8586                           
  8587                           ; BSR set to: 1
  8588                           ;doprnt.c: 1138: break;
  8589  011048  D003               	goto	l8178
  8590  01104A                     l8174:
  8591                           
  8592                           ; BSR set to: 1
  8593  01104A  0101               	movlb	1	; () banked
  8594  01104C  2B50               	incf	sprintf@c& (0+255),f,b
  8595  01104E  D7D6               	goto	l8166
  8596  011050                     l8178:
  8597                           
  8598                           ; BSR set to: 1
  8599                           ;doprnt.c: 1175: {
  8600                           ;doprnt.c: 1188: if(flag & 0x03)
  8601  011050  0E03               	movlw	3
  8602  011052  0101               	movlb	1	; () banked
  8603  011054  153E               	andwf	sprintf@flag& (0+255),w,b
  8604  011056  0101               	movlb	1	; () banked
  8605  011058  6F36               	movwf	??_sprintf& (0+255),b
  8606  01105A  0E00               	movlw	0
  8607  01105C  0101               	movlb	1	; () banked
  8608  01105E  153F               	andwf	(sprintf@flag+1)& (0+255),w,b
  8609  011060  0101               	movlb	1	; () banked
  8610  011062  6F37               	movwf	(??_sprintf+1)& (0+255),b
  8611  011064  0101               	movlb	1	; () banked
  8612  011066  5136               	movf	??_sprintf& (0+255),w,b
  8613  011068  0101               	movlb	1	; () banked
  8614  01106A  1137               	iorwf	(??_sprintf+1)& (0+255),w,b
  8615  01106C  B4D8               	btfsc	status,2,c
  8616  01106E  D058               	goto	l8192
  8617                           
  8618                           ; BSR set to: 1
  8619                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  8620  011070  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  8621  011074  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  8622  011078  0E2D               	movlw	45
  8623  01107A  D050               	goto	L6
  8624  01107C                     l8182:
  8625                           
  8626                           ; BSR set to: 1
  8627  01107C  0100               	movlb	0	; () banked
  8628  01107E  4BB3               	infsnz	sprintf@sp& (0+255),f,b
  8629  011080  2BB4               	incf	(sprintf@sp+1)& (0+255),f,b
  8630                           
  8631                           ; BSR set to: 0
  8632                           ;doprnt.c: 1195: }
  8633                           ;doprnt.c: 1196: while(c--) {
  8634  011082  D04E               	goto	l8192
  8635  011084                     l8184:
  8636                           
  8637                           ;doprnt.c: 1200: {
  8638                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  8639  011084  C140  F072         	movff	sprintf@val,___lldiv@dividend
  8640  011088  C141  F073         	movff	sprintf@val+1,___lldiv@dividend+1
  8641  01108C  C142  F074         	movff	sprintf@val+2,___lldiv@dividend+2
  8642  011090  C143  F075         	movff	sprintf@val+3,___lldiv@dividend+3
  8643  011094  0101               	movlb	1	; () banked
  8644  011096  5150               	movf	sprintf@c& (0+255),w,b
  8645  011098  0D04               	mullw	4
  8646  01109A  0EB3               	movlw	low _dpowers
  8647  01109C  24F3               	addwf	prodl,w,c
  8648  01109E  6EF6               	movwf	tblptrl,c
  8649  0110A0  0EFD               	movlw	high _dpowers
  8650  0110A2  20F4               	addwfc	prodh,w,c
  8651  0110A4  6EF7               	movwf	tblptrh,c
  8652  0110A6                     	if	1	;There are 3 active tblptr bytes
  8653  0110A6  6AF8               	clrf	tblptru,c
  8654  0110A8  0E00               	movlw	low (__mediumconst shr (0+16))
  8655  0110AA  22F8               	addwfc	tblptru,f,c
  8656  0110AC                     	endif
  8657  0110AC  0009               	tblrd		*+
  8658  0110AE  CFF5 F076          	movff	tablat,___lldiv@divisor
  8659  0110B2  0009               	tblrd		*+
  8660  0110B4  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  8661  0110B8  0009               	tblrd		*+
  8662  0110BA  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  8663  0110BE  000A               	tblrd		*-
  8664  0110C0  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  8665  0110C4  ECB4  F0A9         	call	___lldiv	;wreg free
  8666  0110C8  C072  F146         	movff	?___lldiv,sprintf@tmpval
  8667  0110CC  C073  F147         	movff	?___lldiv+1,sprintf@tmpval+1
  8668  0110D0  C074  F148         	movff	?___lldiv+2,sprintf@tmpval+2
  8669  0110D4  C075  F149         	movff	?___lldiv+3,sprintf@tmpval+3
  8670                           
  8671                           ;doprnt.c: 1202: tmpval.vd %= 10;
  8672  0110D8  C146  F072         	movff	sprintf@tmpval,___llmod@dividend
  8673  0110DC  C147  F073         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8674  0110E0  C148  F074         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8675  0110E4  C149  F075         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8676  0110E8  0E0A               	movlw	10
  8677  0110EA  0100               	movlb	0	; () banked
  8678  0110EC  6F76               	movwf	___llmod@divisor& (0+255),b
  8679  0110EE  0E00               	movlw	0
  8680  0110F0  6F77               	movwf	(___llmod@divisor+1)& (0+255),b
  8681  0110F2  0E00               	movlw	0
  8682  0110F4  6F78               	movwf	(___llmod@divisor+2)& (0+255),b
  8683  0110F6  0E00               	movlw	0
  8684  0110F8  6F79               	movwf	(___llmod@divisor+3)& (0+255),b
  8685  0110FA  EC85  F0AB         	call	___llmod	;wreg free
  8686  0110FE  C072  F146         	movff	?___llmod,sprintf@tmpval
  8687  011102  C073  F147         	movff	?___llmod+1,sprintf@tmpval+1
  8688  011106  C074  F148         	movff	?___llmod+2,sprintf@tmpval+2
  8689  01110A  C075  F149         	movff	?___llmod+3,sprintf@tmpval+3
  8690                           
  8691                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  8692  01110E  0101               	movlb	1	; () banked
  8693  011110  5146               	movf	sprintf@tmpval& (0+255),w,b
  8694  011112  0F30               	addlw	48
  8695  011114  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  8696  011118  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  8697  01111C                     L6:
  8698  01111C  6EDF               	movwf	indf2,c
  8699  01111E  D7AE               	goto	l8182
  8700  011120                     l8192:
  8701  011120  0101               	movlb	1	; () banked
  8702  011122  0750               	decf	sprintf@c& (0+255),f,b
  8703  011124  0101               	movlb	1	; () banked
  8704  011126  2950               	incf	sprintf@c& (0+255),w,b
  8705  011128  B4D8               	btfsc	status,2,c
  8706  01112A  D010               	goto	l8200
  8707  01112C  D7AB               	goto	l8184
  8708                           
  8709                           ; BSR set to: 1
  8710                           ;doprnt.c: 1204: }
  8711                           ;doprnt.c: 1206: }
  8712                           ;doprnt.c: 1207: while(exp > 0) {
  8713  01112E  D00E               	goto	l8200
  8714  011130                     l8194:
  8715                           
  8716                           ; BSR set to: 1
  8717                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  8718  011130  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  8719  011134  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  8720  011138  0E30               	movlw	48
  8721  01113A  6EDF               	movwf	indf2,c
  8722                           
  8723                           ; BSR set to: 1
  8724  01113C  0100               	movlb	0	; () banked
  8725  01113E  4BB3               	infsnz	sprintf@sp& (0+255),f,b
  8726  011140  2BB4               	incf	(sprintf@sp+1)& (0+255),f,b
  8727                           
  8728                           ; BSR set to: 0
  8729                           ;doprnt.c: 1209: exp--;
  8730  011142  0101               	movlb	1	; () banked
  8731  011144  0744               	decf	sprintf@exp& (0+255),f,b
  8732  011146  A0D8               	btfss	status,0,c
  8733  011148  0745               	decf	(sprintf@exp+1)& (0+255),f,b
  8734  01114A  D000               	goto	l8200
  8735  01114C                     l8200:
  8736                           
  8737                           ; BSR set to: 1
  8738  01114C  0101               	movlb	1	; () banked
  8739  01114E  BF45               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8740  011150  D007               	goto	l8202
  8741  011152  0101               	movlb	1	; () banked
  8742  011154  5145               	movf	(sprintf@exp+1)& (0+255),w,b
  8743  011156  E1EC               	bnz	l8194
  8744  011158  0101               	movlb	1	; () banked
  8745  01115A  0544               	decf	sprintf@exp& (0+255),w,b
  8746  01115C  B0D8               	btfsc	status,0,c
  8747  01115E  D7E8               	goto	l8194
  8748  011160                     l8202:
  8749                           
  8750                           ; BSR set to: 1
  8751                           ;doprnt.c: 1210: }
  8752                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  8753  011160  0101               	movlb	1	; () banked
  8754  011162  BF4B               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8755  011164  D00C               	goto	l1052
  8756  011166  0101               	movlb	1	; () banked
  8757  011168  514B               	movf	(sprintf@prec+1)& (0+255),w,b
  8758  01116A  E105               	bnz	u10440
  8759  01116C  0E09               	movlw	9
  8760  01116E  0101               	movlb	1	; () banked
  8761  011170  5D4A               	subwf	sprintf@prec& (0+255),w,b
  8762  011172  A0D8               	btfss	status,0,c
  8763  011174  D004               	goto	l1052
  8764  011176                     u10440:
  8765                           
  8766                           ; BSR set to: 1
  8767                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  8768  011176  0E08               	movlw	8
  8769  011178  0101               	movlb	1	; () banked
  8770  01117A  6F50               	movwf	sprintf@c& (0+255),b
  8771  01117C  D003               	goto	l8206
  8772  01117E                     l1052:
  8773                           
  8774                           ; BSR set to: 1
  8775                           ;doprnt.c: 1213: else
  8776                           ;doprnt.c: 1214: c = prec;
  8777  01117E  C14A  F150         	movff	sprintf@prec,sprintf@c
  8778  011182  D000               	goto	l8206
  8779  011184                     l8206:
  8780                           
  8781                           ; BSR set to: 1
  8782                           ;doprnt.c: 1215: prec -= c;
  8783  011184  0101               	movlb	1	; () banked
  8784  011186  5150               	movf	sprintf@c& (0+255),w,b
  8785  011188  0101               	movlb	1	; () banked
  8786  01118A  5F4A               	subwf	sprintf@prec& (0+255),f,b
  8787  01118C  0E00               	movlw	0
  8788  01118E  0101               	movlb	1	; () banked
  8789  011190  BF50               	btfsc	sprintf@c& (0+255),7,b
  8790  011192  0EFF               	movlw	255
  8791  011194  0101               	movlb	1	; () banked
  8792  011196  5B4B               	subwfb	(sprintf@prec+1)& (0+255),f,b
  8793                           
  8794                           ; BSR set to: 1
  8795                           ;doprnt.c: 1219: if(c)
  8796  011198  0101               	movlb	1	; () banked
  8797  01119A  5150               	movf	sprintf@c& (0+255),w,b
  8798  01119C  0101               	movlb	1	; () banked
  8799  01119E  B4D8               	btfsc	status,2,c
  8800  0111A0  D00A               	goto	l8214
  8801                           
  8802                           ; BSR set to: 1
  8803                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  8804  0111A2  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  8805  0111A6  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  8806  0111AA  0E2E               	movlw	46
  8807  0111AC  6EDF               	movwf	indf2,c
  8808                           
  8809                           ; BSR set to: 1
  8810  0111AE  0100               	movlb	0	; () banked
  8811  0111B0  4BB3               	infsnz	sprintf@sp& (0+255),f,b
  8812  0111B2  2BB4               	incf	(sprintf@sp+1)& (0+255),f,b
  8813  0111B4  D000               	goto	l8214
  8814  0111B6                     l8214:
  8815                           
  8816                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8817  0111B6  0101               	movlb	1	; () banked
  8818  0111B8  5150               	movf	sprintf@c& (0+255),w,b
  8819  0111BA  EC01  F098         	call	_scale
  8820  0111BE  C090  F138         	movff	?_scale,_sprintf$4233
  8821  0111C2  C091  F139         	movff	?_scale+1,_sprintf$4233+1
  8822  0111C6  C092  F13A         	movff	?_scale+2,_sprintf$4233+2
  8823  0111CA  C093  F13B         	movff	?_scale+3,_sprintf$4233+3
  8824                           
  8825                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8826  0111CE  C14C  F085         	movff	sprintf@fval,___flmul@f2
  8827  0111D2  C14D  F086         	movff	sprintf@fval+1,___flmul@f2+1
  8828  0111D6  C14E  F087         	movff	sprintf@fval+2,___flmul@f2+2
  8829  0111DA  C14F  F088         	movff	sprintf@fval+3,___flmul@f2+3
  8830  0111DE  C138  F081         	movff	_sprintf$4233,___flmul@f1
  8831  0111E2  C139  F082         	movff	_sprintf$4233+1,___flmul@f1+1
  8832  0111E6  C13A  F083         	movff	_sprintf$4233+2,___flmul@f1+2
  8833  0111EA  C13B  F084         	movff	_sprintf$4233+3,___flmul@f1+3
  8834  0111EE  EC7F  F0A6         	call	___flmul	;wreg free
  8835  0111F2  C081  F0A9         	movff	?___flmul,___fltol@f1
  8836  0111F6  C082  F0AA         	movff	?___flmul+1,___fltol@f1+1
  8837  0111FA  C083  F0AB         	movff	?___flmul+2,___fltol@f1+2
  8838  0111FE  C084  F0AC         	movff	?___flmul+3,___fltol@f1+3
  8839  011202  ECCC  F0A7         	call	___fltol	;wreg free
  8840  011206  C0A9  F140         	movff	?___fltol,sprintf@val
  8841  01120A  C0AA  F141         	movff	?___fltol+1,sprintf@val+1
  8842  01120E  C0AB  F142         	movff	?___fltol+2,sprintf@val+2
  8843  011212  C0AC  F143         	movff	?___fltol+3,sprintf@val+3
  8844                           
  8845                           ;doprnt.c: 1228: while(c--) {
  8846  011216  D07B               	goto	l8228
  8847  011218                     l8218:
  8848                           
  8849                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  8850  011218  C140  F072         	movff	sprintf@val,___lldiv@dividend
  8851  01121C  C141  F073         	movff	sprintf@val+1,___lldiv@dividend+1
  8852  011220  C142  F074         	movff	sprintf@val+2,___lldiv@dividend+2
  8853  011224  C143  F075         	movff	sprintf@val+3,___lldiv@dividend+3
  8854  011228  0101               	movlb	1	; () banked
  8855  01122A  5150               	movf	sprintf@c& (0+255),w,b
  8856  01122C  0D04               	mullw	4
  8857  01122E  0EB3               	movlw	low _dpowers
  8858  011230  24F3               	addwf	prodl,w,c
  8859  011232  6EF6               	movwf	tblptrl,c
  8860  011234  0EFD               	movlw	high _dpowers
  8861  011236  20F4               	addwfc	prodh,w,c
  8862  011238  6EF7               	movwf	tblptrh,c
  8863  01123A                     	if	1	;There are 3 active tblptr bytes
  8864  01123A  6AF8               	clrf	tblptru,c
  8865  01123C  0E00               	movlw	low (__mediumconst shr (0+16))
  8866  01123E  22F8               	addwfc	tblptru,f,c
  8867  011240                     	endif
  8868  011240  0009               	tblrd		*+
  8869  011242  CFF5 F076          	movff	tablat,___lldiv@divisor
  8870  011246  0009               	tblrd		*+
  8871  011248  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  8872  01124C  0009               	tblrd		*+
  8873  01124E  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  8874  011252  000A               	tblrd		*-
  8875  011254  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  8876  011258  ECB4  F0A9         	call	___lldiv	;wreg free
  8877  01125C  C072  F146         	movff	?___lldiv,sprintf@tmpval
  8878  011260  C073  F147         	movff	?___lldiv+1,sprintf@tmpval+1
  8879  011264  C074  F148         	movff	?___lldiv+2,sprintf@tmpval+2
  8880  011268  C075  F149         	movff	?___lldiv+3,sprintf@tmpval+3
  8881                           
  8882                           ;doprnt.c: 1230: tmpval.vd %= 10;
  8883  01126C  C146  F072         	movff	sprintf@tmpval,___llmod@dividend
  8884  011270  C147  F073         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8885  011274  C148  F074         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8886  011278  C149  F075         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8887  01127C  0E0A               	movlw	10
  8888  01127E  0100               	movlb	0	; () banked
  8889  011280  6F76               	movwf	___llmod@divisor& (0+255),b
  8890  011282  0E00               	movlw	0
  8891  011284  6F77               	movwf	(___llmod@divisor+1)& (0+255),b
  8892  011286  0E00               	movlw	0
  8893  011288  6F78               	movwf	(___llmod@divisor+2)& (0+255),b
  8894  01128A  0E00               	movlw	0
  8895  01128C  6F79               	movwf	(___llmod@divisor+3)& (0+255),b
  8896  01128E  EC85  F0AB         	call	___llmod	;wreg free
  8897  011292  C072  F146         	movff	?___llmod,sprintf@tmpval
  8898  011296  C073  F147         	movff	?___llmod+1,sprintf@tmpval+1
  8899  01129A  C074  F148         	movff	?___llmod+2,sprintf@tmpval+2
  8900  01129E  C075  F149         	movff	?___llmod+3,sprintf@tmpval+3
  8901                           
  8902                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  8903  0112A2  0101               	movlb	1	; () banked
  8904  0112A4  5146               	movf	sprintf@tmpval& (0+255),w,b
  8905  0112A6  0F30               	addlw	48
  8906  0112A8  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  8907  0112AC  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  8908  0112B0  6EDF               	movwf	indf2,c
  8909                           
  8910                           ; BSR set to: 1
  8911  0112B2  0100               	movlb	0	; () banked
  8912  0112B4  4BB3               	infsnz	sprintf@sp& (0+255),f,b
  8913  0112B6  2BB4               	incf	(sprintf@sp+1)& (0+255),f,b
  8914                           
  8915                           ; BSR set to: 0
  8916                           ;doprnt.c: 1232: val %= dpowers[c];
  8917  0112B8  C140  F072         	movff	sprintf@val,___llmod@dividend
  8918  0112BC  C141  F073         	movff	sprintf@val+1,___llmod@dividend+1
  8919  0112C0  C142  F074         	movff	sprintf@val+2,___llmod@dividend+2
  8920  0112C4  C143  F075         	movff	sprintf@val+3,___llmod@dividend+3
  8921  0112C8  0101               	movlb	1	; () banked
  8922  0112CA  5150               	movf	sprintf@c& (0+255),w,b
  8923  0112CC  0D04               	mullw	4
  8924  0112CE  0EB3               	movlw	low _dpowers
  8925  0112D0  24F3               	addwf	prodl,w,c
  8926  0112D2  6EF6               	movwf	tblptrl,c
  8927  0112D4  0EFD               	movlw	high _dpowers
  8928  0112D6  20F4               	addwfc	prodh,w,c
  8929  0112D8  6EF7               	movwf	tblptrh,c
  8930  0112DA                     	if	1	;There are 3 active tblptr bytes
  8931  0112DA  6AF8               	clrf	tblptru,c
  8932  0112DC  0E00               	movlw	low (__mediumconst shr (0+16))
  8933  0112DE  22F8               	addwfc	tblptru,f,c
  8934  0112E0                     	endif
  8935  0112E0  0009               	tblrd		*+
  8936  0112E2  CFF5 F076          	movff	tablat,___llmod@divisor
  8937  0112E6  0009               	tblrd		*+
  8938  0112E8  CFF5 F077          	movff	tablat,___llmod@divisor+1
  8939  0112EC  0009               	tblrd		*+
  8940  0112EE  CFF5 F078          	movff	tablat,___llmod@divisor+2
  8941  0112F2  000A               	tblrd		*-
  8942  0112F4  CFF5 F079          	movff	tablat,___llmod@divisor+3
  8943  0112F8  EC85  F0AB         	call	___llmod	;wreg free
  8944  0112FC  C072  F140         	movff	?___llmod,sprintf@val
  8945  011300  C073  F141         	movff	?___llmod+1,sprintf@val+1
  8946  011304  C074  F142         	movff	?___llmod+2,sprintf@val+2
  8947  011308  C075  F143         	movff	?___llmod+3,sprintf@val+3
  8948  01130C  D000               	goto	l8228
  8949  01130E                     l8228:
  8950  01130E  0101               	movlb	1	; () banked
  8951  011310  0750               	decf	sprintf@c& (0+255),f,b
  8952  011312  0101               	movlb	1	; () banked
  8953  011314  2950               	incf	sprintf@c& (0+255),w,b
  8954  011316  B4D8               	btfsc	status,2,c
  8955  011318  D010               	goto	l8236
  8956  01131A  D77E               	goto	l8218
  8957                           
  8958                           ; BSR set to: 1
  8959                           ;doprnt.c: 1233: }
  8960                           ;doprnt.c: 1235: while(prec) {
  8961  01131C  D00E               	goto	l8236
  8962  01131E                     l8230:
  8963                           
  8964                           ; BSR set to: 1
  8965                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  8966  01131E  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  8967  011322  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  8968  011326  0E30               	movlw	48
  8969  011328  6EDF               	movwf	indf2,c
  8970                           
  8971                           ; BSR set to: 1
  8972  01132A  0100               	movlb	0	; () banked
  8973  01132C  4BB3               	infsnz	sprintf@sp& (0+255),f,b
  8974  01132E  2BB4               	incf	(sprintf@sp+1)& (0+255),f,b
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;doprnt.c: 1237: prec--;
  8978  011330  0101               	movlb	1	; () banked
  8979  011332  074A               	decf	sprintf@prec& (0+255),f,b
  8980  011334  A0D8               	btfss	status,0,c
  8981  011336  074B               	decf	(sprintf@prec+1)& (0+255),f,b
  8982  011338  D000               	goto	l8236
  8983  01133A                     l8236:
  8984                           
  8985                           ; BSR set to: 1
  8986  01133A  0101               	movlb	1	; () banked
  8987  01133C  514A               	movf	sprintf@prec& (0+255),w,b
  8988  01133E  0101               	movlb	1	; () banked
  8989  011340  114B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8990  011342  B4D8               	btfsc	status,2,c
  8991  011344  D05D               	goto	l8258
  8992  011346  D7EB               	goto	l8230
  8993                           
  8994                           ; BSR set to: 1
  8995                           ;doprnt.c: 1238: }
  8996                           ;doprnt.c: 1245: continue;
  8997  011348  D05B               	goto	l8258
  8998  01134A                     l8238:
  8999                           
  9000                           ; BSR set to: 1
  9001                           ;doprnt.c: 1246: }
  9002                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  9003  01134A  0101               	movlb	1	; () banked
  9004  01134C  514A               	movf	sprintf@prec& (0+255),w,b
  9005  01134E  0101               	movlb	1	; () banked
  9006  011350  114B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  9007  011352  A4D8               	btfss	status,2,c
  9008  011354  D00E               	goto	l8244
  9009                           
  9010                           ; BSR set to: 1
  9011  011356  0101               	movlb	1	; () banked
  9012  011358  5140               	movf	sprintf@val& (0+255),w,b
  9013  01135A  0101               	movlb	1	; () banked
  9014  01135C  1141               	iorwf	(sprintf@val+1)& (0+255),w,b
  9015  01135E  0101               	movlb	1	; () banked
  9016  011360  1142               	iorwf	(sprintf@val+2)& (0+255),w,b
  9017  011362  0101               	movlb	1	; () banked
  9018  011364  1143               	iorwf	(sprintf@val+3)& (0+255),w,b
  9019  011366  A4D8               	btfss	status,2,c
  9020  011368  D004               	goto	l8244
  9021                           
  9022                           ; BSR set to: 1
  9023                           ;doprnt.c: 1291: prec++;
  9024  01136A  0101               	movlb	1	; () banked
  9025  01136C  4B4A               	infsnz	sprintf@prec& (0+255),f,b
  9026  01136E  2B4B               	incf	(sprintf@prec+1)& (0+255),f,b
  9027  011370  D000               	goto	l8244
  9028  011372                     l8244:
  9029                           
  9030                           ; BSR set to: 1
  9031                           ;doprnt.c: 1339: if(c < prec)
  9032  011372  0E80               	movlw	128
  9033  011374  0101               	movlb	1	; () banked
  9034  011376  BF50               	btfsc	sprintf@c& (0+255),7,b
  9035  011378  0E7F               	movlw	127
  9036  01137A  0101               	movlb	1	; () banked
  9037  01137C  6F36               	movwf	??_sprintf& (0+255),b
  9038  01137E  0101               	movlb	1	; () banked
  9039  011380  514A               	movf	sprintf@prec& (0+255),w,b
  9040  011382  0101               	movlb	1	; () banked
  9041  011384  5D50               	subwf	sprintf@c& (0+255),w,b
  9042  011386  0101               	movlb	1	; () banked
  9043  011388  514B               	movf	(sprintf@prec+1)& (0+255),w,b
  9044  01138A  0A80               	xorlw	128
  9045  01138C  0101               	movlb	1	; () banked
  9046  01138E  5936               	subwfb	??_sprintf& (0+255),w,b
  9047  011390  B0D8               	btfsc	status,0,c
  9048  011392  D003               	goto	l8248
  9049                           
  9050                           ; BSR set to: 1
  9051                           ;doprnt.c: 1340: c = prec;
  9052  011394  C14A  F150         	movff	sprintf@prec,sprintf@c
  9053  011398  D019               	goto	l8252
  9054  01139A                     l8248:
  9055                           
  9056                           ; BSR set to: 1
  9057                           ;doprnt.c: 1341: else if(prec < c)
  9058  01139A  0101               	movlb	1	; () banked
  9059  01139C  514B               	movf	(sprintf@prec+1)& (0+255),w,b
  9060  01139E  0A80               	xorlw	128
  9061  0113A0  0101               	movlb	1	; () banked
  9062  0113A2  6F36               	movwf	??_sprintf& (0+255),b
  9063  0113A4  0101               	movlb	1	; () banked
  9064  0113A6  5150               	movf	sprintf@c& (0+255),w,b
  9065  0113A8  0101               	movlb	1	; () banked
  9066  0113AA  5D4A               	subwf	sprintf@prec& (0+255),w,b
  9067  0113AC  0E80               	movlw	128
  9068  0113AE  0101               	movlb	1	; () banked
  9069  0113B0  BF50               	btfsc	sprintf@c& (0+255),7,b
  9070  0113B2  0E7F               	movlw	127
  9071  0113B4  0101               	movlb	1	; () banked
  9072  0113B6  5936               	subwfb	??_sprintf& (0+255),w,b
  9073  0113B8  B0D8               	btfsc	status,0,c
  9074  0113BA  D008               	goto	l8252
  9075                           
  9076                           ; BSR set to: 1
  9077                           ;doprnt.c: 1342: prec = c;
  9078  0113BC  0101               	movlb	1	; () banked
  9079  0113BE  5150               	movf	sprintf@c& (0+255),w,b
  9080  0113C0  0101               	movlb	1	; () banked
  9081  0113C2  6F4A               	movwf	sprintf@prec& (0+255),b
  9082  0113C4  6B4B               	clrf	(sprintf@prec+1)& (0+255),b
  9083  0113C6  BF4A               	btfsc	sprintf@prec& (0+255),7,b
  9084  0113C8  074B               	decf	(sprintf@prec+1)& (0+255),f,b
  9085                           
  9086                           ; BSR set to: 1
  9087  0113CA  D000               	goto	l8252
  9088  0113CC                     l8252:
  9089                           
  9090                           ; BSR set to: 1
  9091                           ;doprnt.c: 1422: {
  9092                           ;doprnt.c: 1438: if(flag & 0x03)
  9093  0113CC  0E03               	movlw	3
  9094  0113CE  0101               	movlb	1	; () banked
  9095  0113D0  153E               	andwf	sprintf@flag& (0+255),w,b
  9096  0113D2  0101               	movlb	1	; () banked
  9097  0113D4  6F36               	movwf	??_sprintf& (0+255),b
  9098  0113D6  0E00               	movlw	0
  9099  0113D8  0101               	movlb	1	; () banked
  9100  0113DA  153F               	andwf	(sprintf@flag+1)& (0+255),w,b
  9101  0113DC  0101               	movlb	1	; () banked
  9102  0113DE  6F37               	movwf	(??_sprintf+1)& (0+255),b
  9103  0113E0  0101               	movlb	1	; () banked
  9104  0113E2  5136               	movf	??_sprintf& (0+255),w,b
  9105  0113E4  0101               	movlb	1	; () banked
  9106  0113E6  1137               	iorwf	(??_sprintf+1)& (0+255),w,b
  9107  0113E8  B4D8               	btfsc	status,2,c
  9108  0113EA  D00A               	goto	l8258
  9109                           
  9110                           ; BSR set to: 1
  9111                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  9112  0113EC  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  9113  0113F0  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  9114  0113F4  0E2D               	movlw	45
  9115  0113F6  6EDF               	movwf	indf2,c
  9116  0113F8                     l8256:
  9117                           
  9118                           ; BSR set to: 1
  9119  0113F8  0100               	movlb	0	; () banked
  9120  0113FA  4BB3               	infsnz	sprintf@sp& (0+255),f,b
  9121  0113FC  2BB4               	incf	(sprintf@sp+1)& (0+255),f,b
  9122                           
  9123                           ; BSR set to: 0
  9124  0113FE  D000               	goto	l8258
  9125  011400                     l8258:
  9126  011400  C0B5  FFF6         	movff	sprintf@f,tblptrl
  9127  011404  C0B6  FFF7         	movff	sprintf@f+1,tblptrh
  9128  011408  0100               	movlb	0	; () banked
  9129  01140A  4BB5               	infsnz	sprintf@f& (0+255),f,b
  9130  01140C  2BB6               	incf	(sprintf@f+1)& (0+255),f,b
  9131  01140E                     	if	0	;tblptru may be non-zero
  9132  01140E                     	endif
  9133  01140E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9134  01140E  0E00               	movlw	low (__mediumconst shr (0+16))
  9135  011410  6EF8               	movwf	tblptru,c
  9136  011412                     	endif
  9137  011412  0008               	tblrd		*
  9138  011414  CFF5 F150          	movff	tablat,sprintf@c
  9139  011418  0101               	movlb	1	; () banked
  9140  01141A  5150               	movf	sprintf@c& (0+255),w,b
  9141  01141C  B4D8               	btfsc	status,2,c
  9142  01141E  D003               	goto	l8260
  9143  011420  EF9D  F085         	goto	l8060
  9144                           
  9145                           ; BSR set to: 1
  9146  011424  D000               	goto	l8260
  9147  011426                     l8260:
  9148                           
  9149                           ; BSR set to: 1
  9150                           ;doprnt.c: 1538: *sp = 0;
  9151  011426  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  9152  01142A  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  9153  01142E  0E00               	movlw	0
  9154  011430  6EDF               	movwf	indf2,c
  9155  011432  0012               	return	
  9156                           
  9157                           ; BSR set to: 1
  9158                           
  9159                           ; BSR set to: 1
  9160                           ;doprnt.c: 1540: return 0;
  9161                           ;	Return value of _sprintf is never used
  9162  011434  0012               	return		;funcret
  9163  011436                     __end_of_sprintf:
  9164                           	opt stack 0
  9165                           tblptru	equ	0xFF8
  9166                           tblptrh	equ	0xFF7
  9167                           tblptrl	equ	0xFF6
  9168                           tablat	equ	0xFF5
  9169                           prodh	equ	0xFF4
  9170                           prodl	equ	0xFF3
  9171                           intcon	equ	0xFF2
  9172                           postinc0	equ	0xFEE
  9173                           wreg	equ	0xFE8
  9174                           indf2	equ	0xFDF
  9175                           postinc2	equ	0xFDE
  9176                           fsr2h	equ	0xFDA
  9177                           fsr2l	equ	0xFD9
  9178                           status	equ	0xFD8
  9179                           
  9180 ;; *************** function _scale *****************
  9181 ;; Defined at:
  9182 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;  scl             1    wreg     char 
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;  scl             1   56[BANK0 ] char 
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  4   48[BANK0 ] char 
  9189 ;; Registers used:
  9190 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9196 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9197 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9199 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9200 ;;Total ram usage:        9 bytes
  9201 ;; Hardware stack levels used:    1
  9202 ;; Hardware stack levels required when called:    5
  9203 ;; This function calls:
  9204 ;;		___awdiv
  9205 ;;		___awmod
  9206 ;;		___flmul
  9207 ;; This function is called by:
  9208 ;;		_sprintf
  9209 ;; This function uses a non-reentrant model
  9210 ;;
  9211                           
  9212                           	psect	text13
  9213  013002                     __ptext13:
  9214                           	opt stack 0
  9215  013002                     _scale:
  9216                           	opt stack 23
  9217                           
  9218                           ; BSR set to: 1
  9219                           ;incstack = 0
  9220                           ;scale@scl stored from wreg
  9221  013002  0100               	movlb	0	; () banked
  9222  013004  6F98               	movwf	scale@scl& (0+255),b
  9223                           
  9224                           ; BSR set to: 0
  9225                           ;doprnt.c: 428: if(scl < 0) {
  9226  013006  0100               	movlb	0	; () banked
  9227  013008  AF98               	btfss	scale@scl& (0+255),7,b
  9228  01300A  D148               	goto	l7712
  9229                           
  9230                           ; BSR set to: 0
  9231                           ;doprnt.c: 429: scl = -scl;
  9232  01300C  0100               	movlb	0	; () banked
  9233  01300E  6D98               	negf	scale@scl& (0+255),b
  9234                           
  9235                           ;doprnt.c: 430: if(scl>=110)
  9236  013010  0100               	movlb	0	; () banked
  9237  013012  5198               	movf	scale@scl& (0+255),w,b
  9238  013014  0A80               	xorlw	128
  9239  013016  0F12               	addlw	-238
  9240  013018  A0D8               	btfss	status,0,c
  9241  01301A  D0BC               	goto	l7702
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9245  01301C  0E00               	movlw	0
  9246  01301E  0100               	movlb	0	; () banked
  9247  013020  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9248  013022  0E0A               	movlw	10
  9249  013024  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9250  013026  0E00               	movlw	0
  9251  013028  0100               	movlb	0	; () banked
  9252  01302A  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9253  01302C  0E64               	movlw	100
  9254  01302E  6F74               	movwf	___awmod@divisor& (0+255),b
  9255  013030  0100               	movlb	0	; () banked
  9256  013032  5198               	movf	scale@scl& (0+255),w,b
  9257  013034  0100               	movlb	0	; () banked
  9258  013036  6F72               	movwf	___awmod@dividend& (0+255),b
  9259  013038  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9260  01303A  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  9261  01303C  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  9262  01303E  ECD9  F0AA         	call	___awmod	;wreg free
  9263  013042  C072  F078         	movff	?___awmod,___awdiv@dividend
  9264  013046  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  9265  01304A  EC4C  F0A9         	call	___awdiv	;wreg free
  9266  01304E  0100               	movlb	0	; () banked
  9267  013050  90D8               	bcf	status,0,c
  9268  013052  3778               	rlcf	?___awdiv& (0+255),f,b
  9269  013054  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9270  013056  0100               	movlb	0	; () banked
  9271  013058  90D8               	bcf	status,0,c
  9272  01305A  3778               	rlcf	?___awdiv& (0+255),f,b
  9273  01305C  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9274  01305E  0E24               	movlw	36
  9275  013060  0100               	movlb	0	; () banked
  9276  013062  2778               	addwf	?___awdiv& (0+255),f,b
  9277  013064  0E00               	movlw	0
  9278  013066  0100               	movlb	0	; () banked
  9279  013068  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9280  01306A  0E4B               	movlw	low __npowers_
  9281  01306C  0100               	movlb	0	; () banked
  9282  01306E  2578               	addwf	?___awdiv& (0+255),w,b
  9283  013070  6EF6               	movwf	tblptrl,c
  9284  013072  0EFD               	movlw	high __npowers_
  9285  013074  0100               	movlb	0	; () banked
  9286  013076  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9287  013078  6EF7               	movwf	tblptrh,c
  9288  01307A                     	if	1	;There are 3 active tblptr bytes
  9289  01307A  6AF8               	clrf	tblptru,c
  9290  01307C  0E00               	movlw	low (__mediumconst shr (0+16))
  9291  01307E  22F8               	addwfc	tblptru,f,c
  9292  013080                     	endif
  9293  013080  0009               	tblrd		*+
  9294  013082  CFF5 F085          	movff	tablat,___flmul@f2
  9295  013086  0009               	tblrd		*+
  9296  013088  CFF5 F086          	movff	tablat,___flmul@f2+1
  9297  01308C  0009               	tblrd		*+
  9298  01308E  CFF5 F087          	movff	tablat,___flmul@f2+2
  9299  013092  000A               	tblrd		*-
  9300  013094  CFF5 F088          	movff	tablat,___flmul@f2+3
  9301  013098  0E00               	movlw	0
  9302  01309A  0100               	movlb	0	; () banked
  9303  01309C  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9304  01309E  0E64               	movlw	100
  9305  0130A0  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9306  0130A2  0100               	movlb	0	; () banked
  9307  0130A4  5198               	movf	scale@scl& (0+255),w,b
  9308  0130A6  0100               	movlb	0	; () banked
  9309  0130A8  6F78               	movwf	___awdiv@dividend& (0+255),b
  9310  0130AA  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  9311  0130AC  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  9312  0130AE  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9313  0130B0  EC4C  F0A9         	call	___awdiv	;wreg free
  9314  0130B4  0100               	movlb	0	; () banked
  9315  0130B6  90D8               	bcf	status,0,c
  9316  0130B8  3778               	rlcf	?___awdiv& (0+255),f,b
  9317  0130BA  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9318  0130BC  0100               	movlb	0	; () banked
  9319  0130BE  90D8               	bcf	status,0,c
  9320  0130C0  3778               	rlcf	?___awdiv& (0+255),f,b
  9321  0130C2  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9322  0130C4  0E48               	movlw	72
  9323  0130C6  0100               	movlb	0	; () banked
  9324  0130C8  2778               	addwf	?___awdiv& (0+255),f,b
  9325  0130CA  0E00               	movlw	0
  9326  0130CC  0100               	movlb	0	; () banked
  9327  0130CE  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9328  0130D0  0E4B               	movlw	low __npowers_
  9329  0130D2  0100               	movlb	0	; () banked
  9330  0130D4  2578               	addwf	?___awdiv& (0+255),w,b
  9331  0130D6  6EF6               	movwf	tblptrl,c
  9332  0130D8  0EFD               	movlw	high __npowers_
  9333  0130DA  0100               	movlb	0	; () banked
  9334  0130DC  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9335  0130DE  6EF7               	movwf	tblptrh,c
  9336  0130E0                     	if	1	;There are 3 active tblptr bytes
  9337  0130E0  6AF8               	clrf	tblptru,c
  9338  0130E2  0E00               	movlw	low (__mediumconst shr (0+16))
  9339  0130E4  22F8               	addwfc	tblptru,f,c
  9340  0130E6                     	endif
  9341  0130E6  0009               	tblrd		*+
  9342  0130E8  CFF5 F081          	movff	tablat,___flmul@f1
  9343  0130EC  0009               	tblrd		*+
  9344  0130EE  CFF5 F082          	movff	tablat,___flmul@f1+1
  9345  0130F2  0009               	tblrd		*+
  9346  0130F4  CFF5 F083          	movff	tablat,___flmul@f1+2
  9347  0130F8  000A               	tblrd		*-
  9348  0130FA  CFF5 F084          	movff	tablat,___flmul@f1+3
  9349  0130FE  EC7F  F0A6         	call	___flmul	;wreg free
  9350  013102  C081  F094         	movff	?___flmul,_scale$4232
  9351  013106  C082  F095         	movff	?___flmul+1,_scale$4232+1
  9352  01310A  C083  F096         	movff	?___flmul+2,_scale$4232+2
  9353  01310E  C084  F097         	movff	?___flmul+3,_scale$4232+3
  9354                           
  9355                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9356  013112  C094  F081         	movff	_scale$4232,___flmul@f1
  9357  013116  C095  F082         	movff	_scale$4232+1,___flmul@f1+1
  9358  01311A  C096  F083         	movff	_scale$4232+2,___flmul@f1+2
  9359  01311E  C097  F084         	movff	_scale$4232+3,___flmul@f1+3
  9360  013122  0E00               	movlw	0
  9361  013124  0100               	movlb	0	; () banked
  9362  013126  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9363  013128  0E0A               	movlw	10
  9364  01312A  6F74               	movwf	___awmod@divisor& (0+255),b
  9365  01312C  0100               	movlb	0	; () banked
  9366  01312E  5198               	movf	scale@scl& (0+255),w,b
  9367  013130  0100               	movlb	0	; () banked
  9368  013132  6F72               	movwf	___awmod@dividend& (0+255),b
  9369  013134  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9370  013136  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  9371  013138  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  9372  01313A  ECD9  F0AA         	call	___awmod	;wreg free
  9373  01313E  0100               	movlb	0	; () banked
  9374  013140  90D8               	bcf	status,0,c
  9375  013142  3772               	rlcf	?___awmod& (0+255),f,b
  9376  013144  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9377  013146  0100               	movlb	0	; () banked
  9378  013148  90D8               	bcf	status,0,c
  9379  01314A  3772               	rlcf	?___awmod& (0+255),f,b
  9380  01314C  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9381  01314E  0E4B               	movlw	low __npowers_
  9382  013150  0100               	movlb	0	; () banked
  9383  013152  2572               	addwf	?___awmod& (0+255),w,b
  9384  013154  6EF6               	movwf	tblptrl,c
  9385  013156  0EFD               	movlw	high __npowers_
  9386  013158  0100               	movlb	0	; () banked
  9387  01315A  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  9388  01315C  6EF7               	movwf	tblptrh,c
  9389  01315E                     	if	1	;There are 3 active tblptr bytes
  9390  01315E  6AF8               	clrf	tblptru,c
  9391  013160  0E00               	movlw	low (__mediumconst shr (0+16))
  9392  013162  22F8               	addwfc	tblptru,f,c
  9393  013164                     	endif
  9394  013164  0009               	tblrd		*+
  9395  013166  CFF5 F085          	movff	tablat,___flmul@f2
  9396  01316A  0009               	tblrd		*+
  9397  01316C  CFF5 F086          	movff	tablat,___flmul@f2+1
  9398  013170  0009               	tblrd		*+
  9399  013172  CFF5 F087          	movff	tablat,___flmul@f2+2
  9400  013176  000A               	tblrd		*-
  9401  013178  CFF5 F088          	movff	tablat,___flmul@f2+3
  9402  01317C  EC7F  F0A6         	call	___flmul	;wreg free
  9403  013180  C081  F090         	movff	?___flmul,?_scale
  9404  013184  C082  F091         	movff	?___flmul+1,?_scale+1
  9405  013188  C083  F092         	movff	?___flmul+2,?_scale+2
  9406  01318C  C084  F093         	movff	?___flmul+3,?_scale+3
  9407  013190  0012               	return	
  9408  013192  D06B               	goto	l7708
  9409  013194                     l7702:
  9410                           
  9411                           ;doprnt.c: 432: else if(scl > 10)
  9412  013194  0100               	movlb	0	; () banked
  9413  013196  5198               	movf	scale@scl& (0+255),w,b
  9414  013198  0A80               	xorlw	128
  9415  01319A  0F75               	addlw	-139
  9416  01319C  A0D8               	btfss	status,0,c
  9417  01319E  D065               	goto	l7708
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  9421  0131A0  0E00               	movlw	0
  9422  0131A2  0100               	movlb	0	; () banked
  9423  0131A4  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9424  0131A6  0E0A               	movlw	10
  9425  0131A8  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9426  0131AA  0100               	movlb	0	; () banked
  9427  0131AC  5198               	movf	scale@scl& (0+255),w,b
  9428  0131AE  0100               	movlb	0	; () banked
  9429  0131B0  6F78               	movwf	___awdiv@dividend& (0+255),b
  9430  0131B2  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  9431  0131B4  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  9432  0131B6  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9433  0131B8  EC4C  F0A9         	call	___awdiv	;wreg free
  9434  0131BC  0100               	movlb	0	; () banked
  9435  0131BE  90D8               	bcf	status,0,c
  9436  0131C0  3778               	rlcf	?___awdiv& (0+255),f,b
  9437  0131C2  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9438  0131C4  0100               	movlb	0	; () banked
  9439  0131C6  90D8               	bcf	status,0,c
  9440  0131C8  3778               	rlcf	?___awdiv& (0+255),f,b
  9441  0131CA  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9442  0131CC  0E24               	movlw	36
  9443  0131CE  0100               	movlb	0	; () banked
  9444  0131D0  2778               	addwf	?___awdiv& (0+255),f,b
  9445  0131D2  0E00               	movlw	0
  9446  0131D4  0100               	movlb	0	; () banked
  9447  0131D6  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9448  0131D8  0E4B               	movlw	low __npowers_
  9449  0131DA  0100               	movlb	0	; () banked
  9450  0131DC  2578               	addwf	?___awdiv& (0+255),w,b
  9451  0131DE  6EF6               	movwf	tblptrl,c
  9452  0131E0  0EFD               	movlw	high __npowers_
  9453  0131E2  0100               	movlb	0	; () banked
  9454  0131E4  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9455  0131E6  6EF7               	movwf	tblptrh,c
  9456  0131E8                     	if	1	;There are 3 active tblptr bytes
  9457  0131E8  6AF8               	clrf	tblptru,c
  9458  0131EA  0E00               	movlw	low (__mediumconst shr (0+16))
  9459  0131EC  22F8               	addwfc	tblptru,f,c
  9460  0131EE                     	endif
  9461  0131EE  0009               	tblrd		*+
  9462  0131F0  CFF5 F081          	movff	tablat,___flmul@f1
  9463  0131F4  0009               	tblrd		*+
  9464  0131F6  CFF5 F082          	movff	tablat,___flmul@f1+1
  9465  0131FA  0009               	tblrd		*+
  9466  0131FC  CFF5 F083          	movff	tablat,___flmul@f1+2
  9467  013200  000A               	tblrd		*-
  9468  013202  CFF5 F084          	movff	tablat,___flmul@f1+3
  9469  013206  0E00               	movlw	0
  9470  013208  0100               	movlb	0	; () banked
  9471  01320A  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9472  01320C  0E0A               	movlw	10
  9473  01320E  6F74               	movwf	___awmod@divisor& (0+255),b
  9474  013210  0100               	movlb	0	; () banked
  9475  013212  5198               	movf	scale@scl& (0+255),w,b
  9476  013214  0100               	movlb	0	; () banked
  9477  013216  6F72               	movwf	___awmod@dividend& (0+255),b
  9478  013218  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9479  01321A  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  9480  01321C  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  9481  01321E  ECD9  F0AA         	call	___awmod	;wreg free
  9482  013222  0100               	movlb	0	; () banked
  9483  013224  90D8               	bcf	status,0,c
  9484  013226  3772               	rlcf	?___awmod& (0+255),f,b
  9485  013228  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9486  01322A  0100               	movlb	0	; () banked
  9487  01322C  90D8               	bcf	status,0,c
  9488  01322E  3772               	rlcf	?___awmod& (0+255),f,b
  9489  013230  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9490  013232  0E4B               	movlw	low __npowers_
  9491  013234  0100               	movlb	0	; () banked
  9492  013236  2572               	addwf	?___awmod& (0+255),w,b
  9493  013238  6EF6               	movwf	tblptrl,c
  9494  01323A  0EFD               	movlw	high __npowers_
  9495  01323C  0100               	movlb	0	; () banked
  9496  01323E  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  9497  013240  6EF7               	movwf	tblptrh,c
  9498  013242                     	if	1	;There are 3 active tblptr bytes
  9499  013242  6AF8               	clrf	tblptru,c
  9500  013244  0E00               	movlw	low (__mediumconst shr (0+16))
  9501  013246  22F8               	addwfc	tblptru,f,c
  9502  013248                     	endif
  9503  013248  0009               	tblrd		*+
  9504  01324A  CFF5 F085          	movff	tablat,___flmul@f2
  9505  01324E  0009               	tblrd		*+
  9506  013250  CFF5 F086          	movff	tablat,___flmul@f2+1
  9507  013254  0009               	tblrd		*+
  9508  013256  CFF5 F087          	movff	tablat,___flmul@f2+2
  9509  01325A  000A               	tblrd		*-
  9510  01325C  CFF5 F088          	movff	tablat,___flmul@f2+3
  9511  013260  EC7F  F0A6         	call	___flmul	;wreg free
  9512  013264  D78D               	goto	L7
  9513  013266  0012               	return	
  9514  013268  D000               	goto	l7708
  9515  01326A                     l7708:
  9516                           
  9517                           ;doprnt.c: 434: return _npowers_[scl];
  9518  01326A  0100               	movlb	0	; () banked
  9519  01326C  5198               	movf	scale@scl& (0+255),w,b
  9520  01326E  0D04               	mullw	4
  9521  013270  0E4B               	movlw	low __npowers_
  9522  013272  24F3               	addwf	prodl,w,c
  9523  013274  6EF6               	movwf	tblptrl,c
  9524  013276  0EFD               	movlw	high __npowers_
  9525  013278  20F4               	addwfc	prodh,w,c
  9526  01327A  6EF7               	movwf	tblptrh,c
  9527  01327C                     	if	1	;There are 3 active tblptr bytes
  9528  01327C  6AF8               	clrf	tblptru,c
  9529  01327E  0E00               	movlw	low (__mediumconst shr (0+16))
  9530  013280  22F8               	addwfc	tblptru,f,c
  9531  013282                     	endif
  9532  013282  0009               	tblrd		*+
  9533  013284  CFF5 F090          	movff	tablat,?_scale
  9534  013288  0009               	tblrd		*+
  9535  01328A  CFF5 F091          	movff	tablat,?_scale+1
  9536  01328E  0009               	tblrd		*+
  9537  013290  CFF5 F092          	movff	tablat,?_scale+2
  9538  013294  000A               	tblrd		*-
  9539  013296  CFF5 F093          	movff	tablat,?_scale+3
  9540                           
  9541                           ; BSR set to: 0
  9542  01329A  0012               	return	
  9543  01329C                     l7712:
  9544                           
  9545                           ; BSR set to: 0
  9546                           ;doprnt.c: 435: }
  9547                           ;doprnt.c: 436: if(scl>=110)
  9548  01329C  0100               	movlb	0	; () banked
  9549  01329E  5198               	movf	scale@scl& (0+255),w,b
  9550  0132A0  0A80               	xorlw	128
  9551  0132A2  0F12               	addlw	-238
  9552  0132A4  A0D8               	btfss	status,0,c
  9553  0132A6  D0BC               	goto	l7720
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9557  0132A8  0E00               	movlw	0
  9558  0132AA  0100               	movlb	0	; () banked
  9559  0132AC  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9560  0132AE  0E0A               	movlw	10
  9561  0132B0  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9562  0132B2  0E00               	movlw	0
  9563  0132B4  0100               	movlb	0	; () banked
  9564  0132B6  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9565  0132B8  0E64               	movlw	100
  9566  0132BA  6F74               	movwf	___awmod@divisor& (0+255),b
  9567  0132BC  0100               	movlb	0	; () banked
  9568  0132BE  5198               	movf	scale@scl& (0+255),w,b
  9569  0132C0  0100               	movlb	0	; () banked
  9570  0132C2  6F72               	movwf	___awmod@dividend& (0+255),b
  9571  0132C4  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9572  0132C6  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  9573  0132C8  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  9574  0132CA  ECD9  F0AA         	call	___awmod	;wreg free
  9575  0132CE  C072  F078         	movff	?___awmod,___awdiv@dividend
  9576  0132D2  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  9577  0132D6  EC4C  F0A9         	call	___awdiv	;wreg free
  9578  0132DA  0100               	movlb	0	; () banked
  9579  0132DC  90D8               	bcf	status,0,c
  9580  0132DE  3778               	rlcf	?___awdiv& (0+255),f,b
  9581  0132E0  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9582  0132E2  0100               	movlb	0	; () banked
  9583  0132E4  90D8               	bcf	status,0,c
  9584  0132E6  3778               	rlcf	?___awdiv& (0+255),f,b
  9585  0132E8  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9586  0132EA  0E24               	movlw	36
  9587  0132EC  0100               	movlb	0	; () banked
  9588  0132EE  2778               	addwf	?___awdiv& (0+255),f,b
  9589  0132F0  0E00               	movlw	0
  9590  0132F2  0100               	movlb	0	; () banked
  9591  0132F4  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9592  0132F6  0E7F               	movlw	low __powers_
  9593  0132F8  0100               	movlb	0	; () banked
  9594  0132FA  2578               	addwf	?___awdiv& (0+255),w,b
  9595  0132FC  6EF6               	movwf	tblptrl,c
  9596  0132FE  0EFD               	movlw	high __powers_
  9597  013300  0100               	movlb	0	; () banked
  9598  013302  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9599  013304  6EF7               	movwf	tblptrh,c
  9600  013306                     	if	1	;There are 3 active tblptr bytes
  9601  013306  6AF8               	clrf	tblptru,c
  9602  013308  0E00               	movlw	low (__mediumconst shr (0+16))
  9603  01330A  22F8               	addwfc	tblptru,f,c
  9604  01330C                     	endif
  9605  01330C  0009               	tblrd		*+
  9606  01330E  CFF5 F085          	movff	tablat,___flmul@f2
  9607  013312  0009               	tblrd		*+
  9608  013314  CFF5 F086          	movff	tablat,___flmul@f2+1
  9609  013318  0009               	tblrd		*+
  9610  01331A  CFF5 F087          	movff	tablat,___flmul@f2+2
  9611  01331E  000A               	tblrd		*-
  9612  013320  CFF5 F088          	movff	tablat,___flmul@f2+3
  9613  013324  0E00               	movlw	0
  9614  013326  0100               	movlb	0	; () banked
  9615  013328  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9616  01332A  0E64               	movlw	100
  9617  01332C  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9618  01332E  0100               	movlb	0	; () banked
  9619  013330  5198               	movf	scale@scl& (0+255),w,b
  9620  013332  0100               	movlb	0	; () banked
  9621  013334  6F78               	movwf	___awdiv@dividend& (0+255),b
  9622  013336  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  9623  013338  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  9624  01333A  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9625  01333C  EC4C  F0A9         	call	___awdiv	;wreg free
  9626  013340  0100               	movlb	0	; () banked
  9627  013342  90D8               	bcf	status,0,c
  9628  013344  3778               	rlcf	?___awdiv& (0+255),f,b
  9629  013346  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9630  013348  0100               	movlb	0	; () banked
  9631  01334A  90D8               	bcf	status,0,c
  9632  01334C  3778               	rlcf	?___awdiv& (0+255),f,b
  9633  01334E  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9634  013350  0E48               	movlw	72
  9635  013352  0100               	movlb	0	; () banked
  9636  013354  2778               	addwf	?___awdiv& (0+255),f,b
  9637  013356  0E00               	movlw	0
  9638  013358  0100               	movlb	0	; () banked
  9639  01335A  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9640  01335C  0E7F               	movlw	low __powers_
  9641  01335E  0100               	movlb	0	; () banked
  9642  013360  2578               	addwf	?___awdiv& (0+255),w,b
  9643  013362  6EF6               	movwf	tblptrl,c
  9644  013364  0EFD               	movlw	high __powers_
  9645  013366  0100               	movlb	0	; () banked
  9646  013368  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9647  01336A  6EF7               	movwf	tblptrh,c
  9648  01336C                     	if	1	;There are 3 active tblptr bytes
  9649  01336C  6AF8               	clrf	tblptru,c
  9650  01336E  0E00               	movlw	low (__mediumconst shr (0+16))
  9651  013370  22F8               	addwfc	tblptru,f,c
  9652  013372                     	endif
  9653  013372  0009               	tblrd		*+
  9654  013374  CFF5 F081          	movff	tablat,___flmul@f1
  9655  013378  0009               	tblrd		*+
  9656  01337A  CFF5 F082          	movff	tablat,___flmul@f1+1
  9657  01337E  0009               	tblrd		*+
  9658  013380  CFF5 F083          	movff	tablat,___flmul@f1+2
  9659  013384  000A               	tblrd		*-
  9660  013386  CFF5 F084          	movff	tablat,___flmul@f1+3
  9661  01338A  EC7F  F0A6         	call	___flmul	;wreg free
  9662  01338E  C081  F094         	movff	?___flmul,_scale$4232
  9663  013392  C082  F095         	movff	?___flmul+1,_scale$4232+1
  9664  013396  C083  F096         	movff	?___flmul+2,_scale$4232+2
  9665  01339A  C084  F097         	movff	?___flmul+3,_scale$4232+3
  9666                           
  9667                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9668  01339E  C094  F081         	movff	_scale$4232,___flmul@f1
  9669  0133A2  C095  F082         	movff	_scale$4232+1,___flmul@f1+1
  9670  0133A6  C096  F083         	movff	_scale$4232+2,___flmul@f1+2
  9671  0133AA  C097  F084         	movff	_scale$4232+3,___flmul@f1+3
  9672  0133AE  0E00               	movlw	0
  9673  0133B0  0100               	movlb	0	; () banked
  9674  0133B2  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9675  0133B4  0E0A               	movlw	10
  9676  0133B6  6F74               	movwf	___awmod@divisor& (0+255),b
  9677  0133B8  0100               	movlb	0	; () banked
  9678  0133BA  5198               	movf	scale@scl& (0+255),w,b
  9679  0133BC  0100               	movlb	0	; () banked
  9680  0133BE  6F72               	movwf	___awmod@dividend& (0+255),b
  9681  0133C0  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9682  0133C2  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  9683  0133C4  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  9684  0133C6  ECD9  F0AA         	call	___awmod	;wreg free
  9685  0133CA  0100               	movlb	0	; () banked
  9686  0133CC  90D8               	bcf	status,0,c
  9687  0133CE  3772               	rlcf	?___awmod& (0+255),f,b
  9688  0133D0  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9689  0133D2  0100               	movlb	0	; () banked
  9690  0133D4  90D8               	bcf	status,0,c
  9691  0133D6  3772               	rlcf	?___awmod& (0+255),f,b
  9692  0133D8  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9693  0133DA  0E7F               	movlw	low __powers_
  9694  0133DC  0100               	movlb	0	; () banked
  9695  0133DE  2572               	addwf	?___awmod& (0+255),w,b
  9696  0133E0  6EF6               	movwf	tblptrl,c
  9697  0133E2  0EFD               	movlw	high __powers_
  9698  0133E4  0100               	movlb	0	; () banked
  9699  0133E6  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  9700  0133E8  6EF7               	movwf	tblptrh,c
  9701  0133EA                     	if	1	;There are 3 active tblptr bytes
  9702  0133EA  6AF8               	clrf	tblptru,c
  9703  0133EC  0E00               	movlw	low (__mediumconst shr (0+16))
  9704  0133EE  22F8               	addwfc	tblptru,f,c
  9705  0133F0                     	endif
  9706  0133F0  0009               	tblrd		*+
  9707  0133F2  CFF5 F085          	movff	tablat,___flmul@f2
  9708  0133F6  0009               	tblrd		*+
  9709  0133F8  CFF5 F086          	movff	tablat,___flmul@f2+1
  9710  0133FC  0009               	tblrd		*+
  9711  0133FE  CFF5 F087          	movff	tablat,___flmul@f2+2
  9712  013402  000A               	tblrd		*-
  9713  013404  CFF5 F088          	movff	tablat,___flmul@f2+3
  9714  013408  EC7F  F0A6         	call	___flmul	;wreg free
  9715  01340C  C081  F090         	movff	?___flmul,?_scale
  9716  013410  C082  F091         	movff	?___flmul+1,?_scale+1
  9717  013414  C083  F092         	movff	?___flmul+2,?_scale+2
  9718  013418  C084  F093         	movff	?___flmul+3,?_scale+3
  9719  01341C  0012               	return	
  9720  01341E  D06B               	goto	l7726
  9721  013420                     l7720:
  9722                           
  9723                           ;doprnt.c: 438: else if(scl > 10)
  9724  013420  0100               	movlb	0	; () banked
  9725  013422  5198               	movf	scale@scl& (0+255),w,b
  9726  013424  0A80               	xorlw	128
  9727  013426  0F75               	addlw	-139
  9728  013428  A0D8               	btfss	status,0,c
  9729  01342A  D065               	goto	l7726
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9733  01342C  0E00               	movlw	0
  9734  01342E  0100               	movlb	0	; () banked
  9735  013430  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9736  013432  0E0A               	movlw	10
  9737  013434  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9738  013436  0100               	movlb	0	; () banked
  9739  013438  5198               	movf	scale@scl& (0+255),w,b
  9740  01343A  0100               	movlb	0	; () banked
  9741  01343C  6F78               	movwf	___awdiv@dividend& (0+255),b
  9742  01343E  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  9743  013440  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  9744  013442  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9745  013444  EC4C  F0A9         	call	___awdiv	;wreg free
  9746  013448  0100               	movlb	0	; () banked
  9747  01344A  90D8               	bcf	status,0,c
  9748  01344C  3778               	rlcf	?___awdiv& (0+255),f,b
  9749  01344E  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9750  013450  0100               	movlb	0	; () banked
  9751  013452  90D8               	bcf	status,0,c
  9752  013454  3778               	rlcf	?___awdiv& (0+255),f,b
  9753  013456  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9754  013458  0E24               	movlw	36
  9755  01345A  0100               	movlb	0	; () banked
  9756  01345C  2778               	addwf	?___awdiv& (0+255),f,b
  9757  01345E  0E00               	movlw	0
  9758  013460  0100               	movlb	0	; () banked
  9759  013462  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9760  013464  0E7F               	movlw	low __powers_
  9761  013466  0100               	movlb	0	; () banked
  9762  013468  2578               	addwf	?___awdiv& (0+255),w,b
  9763  01346A  6EF6               	movwf	tblptrl,c
  9764  01346C  0EFD               	movlw	high __powers_
  9765  01346E  0100               	movlb	0	; () banked
  9766  013470  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9767  013472  6EF7               	movwf	tblptrh,c
  9768  013474                     	if	1	;There are 3 active tblptr bytes
  9769  013474  6AF8               	clrf	tblptru,c
  9770  013476  0E00               	movlw	low (__mediumconst shr (0+16))
  9771  013478  22F8               	addwfc	tblptru,f,c
  9772  01347A                     	endif
  9773  01347A  0009               	tblrd		*+
  9774  01347C  CFF5 F081          	movff	tablat,___flmul@f1
  9775  013480  0009               	tblrd		*+
  9776  013482  CFF5 F082          	movff	tablat,___flmul@f1+1
  9777  013486  0009               	tblrd		*+
  9778  013488  CFF5 F083          	movff	tablat,___flmul@f1+2
  9779  01348C  000A               	tblrd		*-
  9780  01348E  CFF5 F084          	movff	tablat,___flmul@f1+3
  9781  013492  0E00               	movlw	0
  9782  013494  0100               	movlb	0	; () banked
  9783  013496  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9784  013498  0E0A               	movlw	10
  9785  01349A  6F74               	movwf	___awmod@divisor& (0+255),b
  9786  01349C  0100               	movlb	0	; () banked
  9787  01349E  5198               	movf	scale@scl& (0+255),w,b
  9788  0134A0  0100               	movlb	0	; () banked
  9789  0134A2  6F72               	movwf	___awmod@dividend& (0+255),b
  9790  0134A4  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9791  0134A6  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  9792  0134A8  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  9793  0134AA  ECD9  F0AA         	call	___awmod	;wreg free
  9794  0134AE  0100               	movlb	0	; () banked
  9795  0134B0  90D8               	bcf	status,0,c
  9796  0134B2  3772               	rlcf	?___awmod& (0+255),f,b
  9797  0134B4  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9798  0134B6  0100               	movlb	0	; () banked
  9799  0134B8  90D8               	bcf	status,0,c
  9800  0134BA  3772               	rlcf	?___awmod& (0+255),f,b
  9801  0134BC  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9802  0134BE  0E7F               	movlw	low __powers_
  9803  0134C0  0100               	movlb	0	; () banked
  9804  0134C2  2572               	addwf	?___awmod& (0+255),w,b
  9805  0134C4  6EF6               	movwf	tblptrl,c
  9806  0134C6  0EFD               	movlw	high __powers_
  9807  0134C8  0100               	movlb	0	; () banked
  9808  0134CA  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  9809  0134CC  6EF7               	movwf	tblptrh,c
  9810  0134CE                     	if	1	;There are 3 active tblptr bytes
  9811  0134CE  6AF8               	clrf	tblptru,c
  9812  0134D0  0E00               	movlw	low (__mediumconst shr (0+16))
  9813  0134D2  22F8               	addwfc	tblptru,f,c
  9814  0134D4                     	endif
  9815  0134D4  0009               	tblrd		*+
  9816  0134D6  CFF5 F085          	movff	tablat,___flmul@f2
  9817  0134DA  0009               	tblrd		*+
  9818  0134DC  CFF5 F086          	movff	tablat,___flmul@f2+1
  9819  0134E0  0009               	tblrd		*+
  9820  0134E2  CFF5 F087          	movff	tablat,___flmul@f2+2
  9821  0134E6  000A               	tblrd		*-
  9822  0134E8  CFF5 F088          	movff	tablat,___flmul@f2+3
  9823  0134EC  EC7F  F0A6         	call	___flmul	;wreg free
  9824  0134F0  D78D               	goto	L8
  9825  0134F2  0012               	return	
  9826  0134F4  D000               	goto	l7726
  9827  0134F6                     l7726:
  9828                           
  9829                           ;doprnt.c: 440: return _powers_[scl];
  9830  0134F6  0100               	movlb	0	; () banked
  9831  0134F8  5198               	movf	scale@scl& (0+255),w,b
  9832  0134FA  0D04               	mullw	4
  9833  0134FC  0E7F               	movlw	low __powers_
  9834  0134FE  24F3               	addwf	prodl,w,c
  9835  013500  6EF6               	movwf	tblptrl,c
  9836  013502  0EFD               	movlw	high __powers_
  9837  013504  20F4               	addwfc	prodh,w,c
  9838  013506  6EF7               	movwf	tblptrh,c
  9839  013508                     	if	1	;There are 3 active tblptr bytes
  9840  013508  6AF8               	clrf	tblptru,c
  9841  01350A  0E00               	movlw	low (__mediumconst shr (0+16))
  9842  01350C  22F8               	addwfc	tblptru,f,c
  9843  01350E                     	endif
  9844  01350E  0009               	tblrd		*+
  9845  013510  CFF5 F090          	movff	tablat,?_scale
  9846  013514  0009               	tblrd		*+
  9847  013516  CFF5 F091          	movff	tablat,?_scale+1
  9848  01351A  0009               	tblrd		*+
  9849  01351C  CFF5 F092          	movff	tablat,?_scale+2
  9850  013520  000A               	tblrd		*-
  9851  013522  CFF5 F093          	movff	tablat,?_scale+3
  9852  013526  0012               	return	
  9853                           
  9854                           ; BSR set to: 0
  9855  013528  0012               	return		;funcret
  9856  01352A                     __end_of_scale:
  9857                           	opt stack 0
  9858                           tblptru	equ	0xFF8
  9859                           tblptrh	equ	0xFF7
  9860                           tblptrl	equ	0xFF6
  9861                           tablat	equ	0xFF5
  9862                           prodh	equ	0xFF4
  9863                           prodl	equ	0xFF3
  9864                           intcon	equ	0xFF2
  9865                           postinc0	equ	0xFEE
  9866                           wreg	equ	0xFE8
  9867                           indf2	equ	0xFDF
  9868                           postinc2	equ	0xFDE
  9869                           fsr2h	equ	0xFDA
  9870                           fsr2l	equ	0xFD9
  9871                           status	equ	0xFD8
  9872                           
  9873 ;; *************** function _isdigit *****************
  9874 ;; Defined at:
  9875 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;  c               1    wreg     unsigned char 
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;  c               1   20[BANK0 ] unsigned char 
  9880 ;; Return value:  Size  Location     Type
  9881 ;;		None               void
  9882 ;; Registers used:
  9883 ;;		wreg, status,2, status,0
  9884 ;; Tracked objects:
  9885 ;;		On entry : 0/0
  9886 ;;		On exit  : 0/0
  9887 ;;		Unchanged: 0/0
  9888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9890 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9891 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9892 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9893 ;;Total ram usage:        3 bytes
  9894 ;; Hardware stack levels used:    1
  9895 ;; Hardware stack levels required when called:    3
  9896 ;; This function calls:
  9897 ;;		Nothing
  9898 ;; This function is called by:
  9899 ;;		_sprintf
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           
  9903                           	psect	text14
  9904  015F0E                     __ptext14:
  9905                           	opt stack 0
  9906  015F0E                     _isdigit:
  9907                           	opt stack 25
  9908                           
  9909                           ;incstack = 0
  9910                           ;isdigit@c stored from wreg
  9911  015F0E  0100               	movlb	0	; () banked
  9912  015F10  6F74               	movwf	isdigit@c& (0+255),b
  9913                           
  9914                           ; BSR set to: 0
  9915  015F12  0E00               	movlw	0
  9916  015F14  0100               	movlb	0	; () banked
  9917  015F16  6F73               	movwf	_isdigit$3906& (0+255),b
  9918                           
  9919                           ; BSR set to: 0
  9920  015F18  0E3A               	movlw	58
  9921  015F1A  0100               	movlb	0	; () banked
  9922  015F1C  6174               	cpfslt	isdigit@c& (0+255),b
  9923  015F1E  D008               	goto	l7738
  9924                           
  9925                           ; BSR set to: 0
  9926  015F20  0E2F               	movlw	47
  9927  015F22  0100               	movlb	0	; () banked
  9928  015F24  6574               	cpfsgt	isdigit@c& (0+255),b
  9929  015F26  D004               	goto	l7738
  9930                           
  9931                           ; BSR set to: 0
  9932  015F28  0E01               	movlw	1
  9933  015F2A  0100               	movlb	0	; () banked
  9934  015F2C  6F73               	movwf	_isdigit$3906& (0+255),b
  9935  015F2E  D000               	goto	l7738
  9936  015F30                     l7738:
  9937                           
  9938                           ; BSR set to: 0
  9939  015F30  C073  F072         	movff	_isdigit$3906,??_isdigit
  9940  015F34  0100               	movlb	0	; () banked
  9941  015F36  3172               	rrcf	??_isdigit& (0+255),w,b
  9942  015F38  0012               	return	
  9943                           
  9944                           ; BSR set to: 0
  9945                           
  9946                           ; BSR set to: 0
  9947  015F3A  0012               	return		;funcret
  9948  015F3C                     __end_of_isdigit:
  9949                           	opt stack 0
  9950                           tblptru	equ	0xFF8
  9951                           tblptrh	equ	0xFF7
  9952                           tblptrl	equ	0xFF6
  9953                           tablat	equ	0xFF5
  9954                           prodh	equ	0xFF4
  9955                           prodl	equ	0xFF3
  9956                           intcon	equ	0xFF2
  9957                           postinc0	equ	0xFEE
  9958                           wreg	equ	0xFE8
  9959                           indf2	equ	0xFDF
  9960                           postinc2	equ	0xFDE
  9961                           fsr2h	equ	0xFDA
  9962                           fsr2l	equ	0xFD9
  9963                           status	equ	0xFD8
  9964                           
  9965 ;; *************** function _fround *****************
  9966 ;; Defined at:
  9967 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  9968 ;; Parameters:    Size  Location     Type
  9969 ;;  prec            1    wreg     unsigned char 
  9970 ;; Auto vars:     Size  Location     Type
  9971 ;;  prec            1   60[BANK0 ] unsigned char 
  9972 ;; Return value:  Size  Location     Type
  9973 ;;                  4   48[BANK0 ] unsigned char 
  9974 ;; Registers used:
  9975 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9976 ;; Tracked objects:
  9977 ;;		On entry : 0/0
  9978 ;;		On exit  : 0/0
  9979 ;;		Unchanged: 0/0
  9980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9981 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9982 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9984 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9985 ;;Total ram usage:       13 bytes
  9986 ;; Hardware stack levels used:    1
  9987 ;; Hardware stack levels required when called:    5
  9988 ;; This function calls:
  9989 ;;		___awdiv
  9990 ;;		___awmod
  9991 ;;		___flmul
  9992 ;; This function is called by:
  9993 ;;		_sprintf
  9994 ;; This function uses a non-reentrant model
  9995 ;;
  9996                           
  9997                           	psect	text15
  9998  0138D4                     __ptext15:
  9999                           	opt stack 0
 10000  0138D4                     _fround:
 10001                           	opt stack 23
 10002                           
 10003                           ; BSR set to: 0
 10004                           ;incstack = 0
 10005                           ;fround@prec stored from wreg
 10006  0138D4  0100               	movlb	0	; () banked
 10007  0138D6  6F9C               	movwf	fround@prec& (0+255),b
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;doprnt.c: 413: if(prec>=110)
 10011  0138D8  0E6D               	movlw	109
 10012  0138DA  0100               	movlb	0	; () banked
 10013  0138DC  659C               	cpfsgt	fround@prec& (0+255),b
 10014  0138DE  D0CE               	goto	l7680
 10015                           
 10016                           ; BSR set to: 0
 10017                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10018  0138E0  0E00               	movlw	0
 10019  0138E2  0100               	movlb	0	; () banked
 10020  0138E4  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
 10021  0138E6  0E0A               	movlw	10
 10022  0138E8  6F7A               	movwf	___awdiv@divisor& (0+255),b
 10023  0138EA  0E00               	movlw	0
 10024  0138EC  0100               	movlb	0	; () banked
 10025  0138EE  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
 10026  0138F0  0E64               	movlw	100
 10027  0138F2  6F74               	movwf	___awmod@divisor& (0+255),b
 10028  0138F4  C09C  F072         	movff	fround@prec,___awmod@dividend
 10029  0138F8  0100               	movlb	0	; () banked
 10030  0138FA  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
 10031  0138FC  ECD9  F0AA         	call	___awmod	;wreg free
 10032  013900  C072  F078         	movff	?___awmod,___awdiv@dividend
 10033  013904  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
 10034  013908  EC4C  F0A9         	call	___awdiv	;wreg free
 10035  01390C  0100               	movlb	0	; () banked
 10036  01390E  90D8               	bcf	status,0,c
 10037  013910  3778               	rlcf	?___awdiv& (0+255),f,b
 10038  013912  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
 10039  013914  0100               	movlb	0	; () banked
 10040  013916  90D8               	bcf	status,0,c
 10041  013918  3778               	rlcf	?___awdiv& (0+255),f,b
 10042  01391A  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
 10043  01391C  0E24               	movlw	36
 10044  01391E  0100               	movlb	0	; () banked
 10045  013920  2778               	addwf	?___awdiv& (0+255),f,b
 10046  013922  0E00               	movlw	0
 10047  013924  0100               	movlb	0	; () banked
 10048  013926  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
 10049  013928  0E4B               	movlw	low __npowers_
 10050  01392A  0100               	movlb	0	; () banked
 10051  01392C  2578               	addwf	?___awdiv& (0+255),w,b
 10052  01392E  6EF6               	movwf	tblptrl,c
 10053  013930  0EFD               	movlw	high __npowers_
 10054  013932  0100               	movlb	0	; () banked
 10055  013934  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
 10056  013936  6EF7               	movwf	tblptrh,c
 10057  013938                     	if	1	;There are 3 active tblptr bytes
 10058  013938  6AF8               	clrf	tblptru,c
 10059  01393A  0E00               	movlw	low (__mediumconst shr (0+16))
 10060  01393C  22F8               	addwfc	tblptru,f,c
 10061  01393E                     	endif
 10062  01393E  0009               	tblrd		*+
 10063  013940  CFF5 F085          	movff	tablat,___flmul@f2
 10064  013944  0009               	tblrd		*+
 10065  013946  CFF5 F086          	movff	tablat,___flmul@f2+1
 10066  01394A  0009               	tblrd		*+
 10067  01394C  CFF5 F087          	movff	tablat,___flmul@f2+2
 10068  013950  000A               	tblrd		*-
 10069  013952  CFF5 F088          	movff	tablat,___flmul@f2+3
 10070  013956  0E00               	movlw	0
 10071  013958  0100               	movlb	0	; () banked
 10072  01395A  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
 10073  01395C  0E64               	movlw	100
 10074  01395E  6F7A               	movwf	___awdiv@divisor& (0+255),b
 10075  013960  C09C  F078         	movff	fround@prec,___awdiv@dividend
 10076  013964  0100               	movlb	0	; () banked
 10077  013966  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
 10078  013968  EC4C  F0A9         	call	___awdiv	;wreg free
 10079  01396C  0100               	movlb	0	; () banked
 10080  01396E  90D8               	bcf	status,0,c
 10081  013970  3778               	rlcf	?___awdiv& (0+255),f,b
 10082  013972  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
 10083  013974  0100               	movlb	0	; () banked
 10084  013976  90D8               	bcf	status,0,c
 10085  013978  3778               	rlcf	?___awdiv& (0+255),f,b
 10086  01397A  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
 10087  01397C  0E48               	movlw	72
 10088  01397E  0100               	movlb	0	; () banked
 10089  013980  2778               	addwf	?___awdiv& (0+255),f,b
 10090  013982  0E00               	movlw	0
 10091  013984  0100               	movlb	0	; () banked
 10092  013986  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
 10093  013988  0E4B               	movlw	low __npowers_
 10094  01398A  0100               	movlb	0	; () banked
 10095  01398C  2578               	addwf	?___awdiv& (0+255),w,b
 10096  01398E  6EF6               	movwf	tblptrl,c
 10097  013990  0EFD               	movlw	high __npowers_
 10098  013992  0100               	movlb	0	; () banked
 10099  013994  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
 10100  013996  6EF7               	movwf	tblptrh,c
 10101  013998                     	if	1	;There are 3 active tblptr bytes
 10102  013998  6AF8               	clrf	tblptru,c
 10103  01399A  0E00               	movlw	low (__mediumconst shr (0+16))
 10104  01399C  22F8               	addwfc	tblptru,f,c
 10105  01399E                     	endif
 10106  01399E  0009               	tblrd		*+
 10107  0139A0  CFF5 F081          	movff	tablat,___flmul@f1
 10108  0139A4  0009               	tblrd		*+
 10109  0139A6  CFF5 F082          	movff	tablat,___flmul@f1+1
 10110  0139AA  0009               	tblrd		*+
 10111  0139AC  CFF5 F083          	movff	tablat,___flmul@f1+2
 10112  0139B0  000A               	tblrd		*-
 10113  0139B2  CFF5 F084          	movff	tablat,___flmul@f1+3
 10114  0139B6  EC7F  F0A6         	call	___flmul	;wreg free
 10115  0139BA  C081  F098         	movff	?___flmul,_fround$4230
 10116  0139BE  C082  F099         	movff	?___flmul+1,_fround$4230+1
 10117  0139C2  C083  F09A         	movff	?___flmul+2,_fround$4230+2
 10118  0139C6  C084  F09B         	movff	?___flmul+3,_fround$4230+3
 10119                           
 10120                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10121  0139CA  0E00               	movlw	0
 10122  0139CC  0100               	movlb	0	; () banked
 10123  0139CE  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
 10124  0139D0  0E0A               	movlw	10
 10125  0139D2  6F74               	movwf	___awmod@divisor& (0+255),b
 10126  0139D4  C09C  F072         	movff	fround@prec,___awmod@dividend
 10127  0139D8  0100               	movlb	0	; () banked
 10128  0139DA  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
 10129  0139DC  ECD9  F0AA         	call	___awmod	;wreg free
 10130  0139E0  0100               	movlb	0	; () banked
 10131  0139E2  90D8               	bcf	status,0,c
 10132  0139E4  3772               	rlcf	?___awmod& (0+255),f,b
 10133  0139E6  3773               	rlcf	(?___awmod+1)& (0+255),f,b
 10134  0139E8  0100               	movlb	0	; () banked
 10135  0139EA  90D8               	bcf	status,0,c
 10136  0139EC  3772               	rlcf	?___awmod& (0+255),f,b
 10137  0139EE  3773               	rlcf	(?___awmod+1)& (0+255),f,b
 10138  0139F0  0E4B               	movlw	low __npowers_
 10139  0139F2  0100               	movlb	0	; () banked
 10140  0139F4  2572               	addwf	?___awmod& (0+255),w,b
 10141  0139F6  6EF6               	movwf	tblptrl,c
 10142  0139F8  0EFD               	movlw	high __npowers_
 10143  0139FA  0100               	movlb	0	; () banked
 10144  0139FC  2173               	addwfc	(?___awmod+1)& (0+255),w,b
 10145  0139FE  6EF7               	movwf	tblptrh,c
 10146  013A00                     	if	1	;There are 3 active tblptr bytes
 10147  013A00  6AF8               	clrf	tblptru,c
 10148  013A02  0E00               	movlw	low (__mediumconst shr (0+16))
 10149  013A04  22F8               	addwfc	tblptru,f,c
 10150  013A06                     	endif
 10151  013A06  0009               	tblrd		*+
 10152  013A08  CFF5 F085          	movff	tablat,___flmul@f2
 10153  013A0C  0009               	tblrd		*+
 10154  013A0E  CFF5 F086          	movff	tablat,___flmul@f2+1
 10155  013A12  0009               	tblrd		*+
 10156  013A14  CFF5 F087          	movff	tablat,___flmul@f2+2
 10157  013A18  000A               	tblrd		*-
 10158  013A1A  CFF5 F088          	movff	tablat,___flmul@f2+3
 10159  013A1E  C098  F081         	movff	_fround$4230,___flmul@f1
 10160  013A22  C099  F082         	movff	_fround$4230+1,___flmul@f1+1
 10161  013A26  C09A  F083         	movff	_fround$4230+2,___flmul@f1+2
 10162  013A2A  C09B  F084         	movff	_fround$4230+3,___flmul@f1+3
 10163  013A2E  EC7F  F0A6         	call	___flmul	;wreg free
 10164  013A32  C081  F094         	movff	?___flmul,_fround$4231
 10165  013A36  C082  F095         	movff	?___flmul+1,_fround$4231+1
 10166  013A3A  C083  F096         	movff	?___flmul+2,_fround$4231+2
 10167  013A3E  C084  F097         	movff	?___flmul+3,_fround$4231+3
 10168                           
 10169                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10170  013A42  C094  F081         	movff	_fround$4231,___flmul@f1
 10171  013A46  C095  F082         	movff	_fround$4231+1,___flmul@f1+1
 10172  013A4A  C096  F083         	movff	_fround$4231+2,___flmul@f1+2
 10173  013A4E  C097  F084         	movff	_fround$4231+3,___flmul@f1+3
 10174  013A52  0E00               	movlw	0
 10175  013A54  0100               	movlb	0	; () banked
 10176  013A56  6F85               	movwf	___flmul@f2& (0+255),b
 10177  013A58  0E00               	movlw	0
 10178  013A5A  6F86               	movwf	(___flmul@f2+1)& (0+255),b
 10179  013A5C  0E00               	movlw	0
 10180  013A5E  6F87               	movwf	(___flmul@f2+2)& (0+255),b
 10181  013A60  0E3F               	movlw	63
 10182  013A62  6F88               	movwf	(___flmul@f2+3)& (0+255),b
 10183  013A64  EC7F  F0A6         	call	___flmul	;wreg free
 10184  013A68  C081  F090         	movff	?___flmul,?_fround
 10185  013A6C  C082  F091         	movff	?___flmul+1,?_fround+1
 10186  013A70  C083  F092         	movff	?___flmul+2,?_fround+2
 10187  013A74  C084  F093         	movff	?___flmul+3,?_fround+3
 10188  013A78  0012               	return	
 10189  013A7A  D07E               	goto	l7688
 10190  013A7C                     l7680:
 10191                           
 10192                           ;doprnt.c: 415: else if(prec > 10)
 10193  013A7C  0E0A               	movlw	10
 10194  013A7E  0100               	movlb	0	; () banked
 10195  013A80  659C               	cpfsgt	fround@prec& (0+255),b
 10196  013A82  D07A               	goto	l7688
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10200  013A84  0E00               	movlw	0
 10201  013A86  0100               	movlb	0	; () banked
 10202  013A88  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
 10203  013A8A  0E0A               	movlw	10
 10204  013A8C  6F74               	movwf	___awmod@divisor& (0+255),b
 10205  013A8E  C09C  F072         	movff	fround@prec,___awmod@dividend
 10206  013A92  0100               	movlb	0	; () banked
 10207  013A94  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
 10208  013A96  ECD9  F0AA         	call	___awmod	;wreg free
 10209  013A9A  0100               	movlb	0	; () banked
 10210  013A9C  90D8               	bcf	status,0,c
 10211  013A9E  3772               	rlcf	?___awmod& (0+255),f,b
 10212  013AA0  3773               	rlcf	(?___awmod+1)& (0+255),f,b
 10213  013AA2  0100               	movlb	0	; () banked
 10214  013AA4  90D8               	bcf	status,0,c
 10215  013AA6  3772               	rlcf	?___awmod& (0+255),f,b
 10216  013AA8  3773               	rlcf	(?___awmod+1)& (0+255),f,b
 10217  013AAA  0E4B               	movlw	low __npowers_
 10218  013AAC  0100               	movlb	0	; () banked
 10219  013AAE  2572               	addwf	?___awmod& (0+255),w,b
 10220  013AB0  6EF6               	movwf	tblptrl,c
 10221  013AB2  0EFD               	movlw	high __npowers_
 10222  013AB4  0100               	movlb	0	; () banked
 10223  013AB6  2173               	addwfc	(?___awmod+1)& (0+255),w,b
 10224  013AB8  6EF7               	movwf	tblptrh,c
 10225  013ABA                     	if	1	;There are 3 active tblptr bytes
 10226  013ABA  6AF8               	clrf	tblptru,c
 10227  013ABC  0E00               	movlw	low (__mediumconst shr (0+16))
 10228  013ABE  22F8               	addwfc	tblptru,f,c
 10229  013AC0                     	endif
 10230  013AC0  0009               	tblrd		*+
 10231  013AC2  CFF5 F085          	movff	tablat,___flmul@f2
 10232  013AC6  0009               	tblrd		*+
 10233  013AC8  CFF5 F086          	movff	tablat,___flmul@f2+1
 10234  013ACC  0009               	tblrd		*+
 10235  013ACE  CFF5 F087          	movff	tablat,___flmul@f2+2
 10236  013AD2  000A               	tblrd		*-
 10237  013AD4  CFF5 F088          	movff	tablat,___flmul@f2+3
 10238  013AD8  0E00               	movlw	0
 10239  013ADA  0100               	movlb	0	; () banked
 10240  013ADC  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
 10241  013ADE  0E0A               	movlw	10
 10242  013AE0  6F7A               	movwf	___awdiv@divisor& (0+255),b
 10243  013AE2  C09C  F078         	movff	fround@prec,___awdiv@dividend
 10244  013AE6  0100               	movlb	0	; () banked
 10245  013AE8  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
 10246  013AEA  EC4C  F0A9         	call	___awdiv	;wreg free
 10247  013AEE  0100               	movlb	0	; () banked
 10248  013AF0  90D8               	bcf	status,0,c
 10249  013AF2  3778               	rlcf	?___awdiv& (0+255),f,b
 10250  013AF4  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
 10251  013AF6  0100               	movlb	0	; () banked
 10252  013AF8  90D8               	bcf	status,0,c
 10253  013AFA  3778               	rlcf	?___awdiv& (0+255),f,b
 10254  013AFC  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
 10255  013AFE  0E24               	movlw	36
 10256  013B00  0100               	movlb	0	; () banked
 10257  013B02  2778               	addwf	?___awdiv& (0+255),f,b
 10258  013B04  0E00               	movlw	0
 10259  013B06  0100               	movlb	0	; () banked
 10260  013B08  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
 10261  013B0A  0E4B               	movlw	low __npowers_
 10262  013B0C  0100               	movlb	0	; () banked
 10263  013B0E  2578               	addwf	?___awdiv& (0+255),w,b
 10264  013B10  6EF6               	movwf	tblptrl,c
 10265  013B12  0EFD               	movlw	high __npowers_
 10266  013B14  0100               	movlb	0	; () banked
 10267  013B16  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
 10268  013B18  6EF7               	movwf	tblptrh,c
 10269  013B1A                     	if	1	;There are 3 active tblptr bytes
 10270  013B1A  6AF8               	clrf	tblptru,c
 10271  013B1C  0E00               	movlw	low (__mediumconst shr (0+16))
 10272  013B1E  22F8               	addwfc	tblptru,f,c
 10273  013B20                     	endif
 10274  013B20  0009               	tblrd		*+
 10275  013B22  CFF5 F081          	movff	tablat,___flmul@f1
 10276  013B26  0009               	tblrd		*+
 10277  013B28  CFF5 F082          	movff	tablat,___flmul@f1+1
 10278  013B2C  0009               	tblrd		*+
 10279  013B2E  CFF5 F083          	movff	tablat,___flmul@f1+2
 10280  013B32  000A               	tblrd		*-
 10281  013B34  CFF5 F084          	movff	tablat,___flmul@f1+3
 10282  013B38  EC7F  F0A6         	call	___flmul	;wreg free
 10283  013B3C  C081  F098         	movff	?___flmul,_fround$4230
 10284  013B40  C082  F099         	movff	?___flmul+1,_fround$4230+1
 10285  013B44  C083  F09A         	movff	?___flmul+2,_fround$4230+2
 10286  013B48  C084  F09B         	movff	?___flmul+3,_fround$4230+3
 10287                           
 10288                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10289  013B4C  C098  F081         	movff	_fround$4230,___flmul@f1
 10290  013B50  C099  F082         	movff	_fround$4230+1,___flmul@f1+1
 10291  013B54  C09A  F083         	movff	_fround$4230+2,___flmul@f1+2
 10292  013B58  C09B  F084         	movff	_fround$4230+3,___flmul@f1+3
 10293  013B5C  0E00               	movlw	0
 10294  013B5E  0100               	movlb	0	; () banked
 10295  013B60  6F85               	movwf	___flmul@f2& (0+255),b
 10296  013B62  0E00               	movlw	0
 10297  013B64  6F86               	movwf	(___flmul@f2+1)& (0+255),b
 10298  013B66  0E00               	movlw	0
 10299  013B68  6F87               	movwf	(___flmul@f2+2)& (0+255),b
 10300  013B6A  0E3F               	movlw	63
 10301  013B6C  6F88               	movwf	(___flmul@f2+3)& (0+255),b
 10302  013B6E  EC7F  F0A6         	call	___flmul	;wreg free
 10303  013B72  D77A               	goto	L9
 10304  013B74  0012               	return	
 10305  013B76  D000               	goto	l7688
 10306  013B78                     l7688:
 10307                           
 10308                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 10309  013B78  0100               	movlb	0	; () banked
 10310  013B7A  519C               	movf	fround@prec& (0+255),w,b
 10311  013B7C  0D04               	mullw	4
 10312  013B7E  0E4B               	movlw	low __npowers_
 10313  013B80  24F3               	addwf	prodl,w,c
 10314  013B82  6EF6               	movwf	tblptrl,c
 10315  013B84  0EFD               	movlw	high __npowers_
 10316  013B86  20F4               	addwfc	prodh,w,c
 10317  013B88  6EF7               	movwf	tblptrh,c
 10318  013B8A                     	if	1	;There are 3 active tblptr bytes
 10319  013B8A  6AF8               	clrf	tblptru,c
 10320  013B8C  0E00               	movlw	low (__mediumconst shr (0+16))
 10321  013B8E  22F8               	addwfc	tblptru,f,c
 10322  013B90                     	endif
 10323  013B90  0009               	tblrd		*+
 10324  013B92  CFF5 F081          	movff	tablat,___flmul@f1
 10325  013B96  0009               	tblrd		*+
 10326  013B98  CFF5 F082          	movff	tablat,___flmul@f1+1
 10327  013B9C  0009               	tblrd		*+
 10328  013B9E  CFF5 F083          	movff	tablat,___flmul@f1+2
 10329  013BA2  000A               	tblrd		*-
 10330  013BA4  CFF5 F084          	movff	tablat,___flmul@f1+3
 10331  013BA8  0E00               	movlw	0
 10332  013BAA  0100               	movlb	0	; () banked
 10333  013BAC  6F85               	movwf	___flmul@f2& (0+255),b
 10334  013BAE  0E00               	movlw	0
 10335  013BB0  6F86               	movwf	(___flmul@f2+1)& (0+255),b
 10336  013BB2  0E00               	movlw	0
 10337  013BB4  6F87               	movwf	(___flmul@f2+2)& (0+255),b
 10338  013BB6  0E3F               	movlw	63
 10339  013BB8  6F88               	movwf	(___flmul@f2+3)& (0+255),b
 10340  013BBA  EC7F  F0A6         	call	___flmul	;wreg free
 10341  013BBE  C081  F090         	movff	?___flmul,?_fround
 10342  013BC2  C082  F091         	movff	?___flmul+1,?_fround+1
 10343  013BC6  C083  F092         	movff	?___flmul+2,?_fround+2
 10344  013BCA  C084  F093         	movff	?___flmul+3,?_fround+3
 10345  013BCE  0012               	return	
 10346  013BD0  0012               	return		;funcret
 10347  013BD2                     __end_of_fround:
 10348                           	opt stack 0
 10349                           tblptru	equ	0xFF8
 10350                           tblptrh	equ	0xFF7
 10351                           tblptrl	equ	0xFF6
 10352                           tablat	equ	0xFF5
 10353                           prodh	equ	0xFF4
 10354                           prodl	equ	0xFF3
 10355                           intcon	equ	0xFF2
 10356                           postinc0	equ	0xFEE
 10357                           wreg	equ	0xFE8
 10358                           indf2	equ	0xFDF
 10359                           postinc2	equ	0xFDE
 10360                           fsr2h	equ	0xFDA
 10361                           fsr2l	equ	0xFD9
 10362                           status	equ	0xFD8
 10363                           
 10364 ;; *************** function ___flmul *****************
 10365 ;; Defined at:
 10366 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flmul.c"
 10367 ;; Parameters:    Size  Location     Type
 10368 ;;  f1              4   33[BANK0 ] unsigned char 
 10369 ;;  f2              4   37[BANK0 ] unsigned char 
 10370 ;; Auto vars:     Size  Location     Type
 10371 ;;  f3_as_produc    4   42[BANK0 ] unsigned long 
 10372 ;;  sign            1   47[BANK0 ] unsigned char 
 10373 ;;  cntr            1   46[BANK0 ] unsigned char 
 10374 ;;  exp             1   41[BANK0 ] unsigned char 
 10375 ;; Return value:  Size  Location     Type
 10376 ;;                  4   33[BANK0 ] unsigned char 
 10377 ;; Registers used:
 10378 ;;		wreg, status,2, status,0, cstack
 10379 ;; Tracked objects:
 10380 ;;		On entry : 0/0
 10381 ;;		On exit  : 0/0
 10382 ;;		Unchanged: 0/0
 10383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10384 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10385 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10387 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10388 ;;Total ram usage:       15 bytes
 10389 ;; Hardware stack levels used:    1
 10390 ;; Hardware stack levels required when called:    4
 10391 ;; This function calls:
 10392 ;;		___flpack
 10393 ;; This function is called by:
 10394 ;;		_main
 10395 ;;		_fround
 10396 ;;		_scale
 10397 ;;		_sprintf
 10398 ;; This function uses a non-reentrant model
 10399 ;;
 10400                           
 10401                           	psect	text16
 10402  014CFE                     __ptext16:
 10403                           	opt stack 0
 10404  014CFE                     ___flmul:
 10405                           	opt stack 26
 10406                           
 10407                           ;incstack = 0
 10408  014CFE  0100               	movlb	0	; () banked
 10409  014D00  3583               	rlcf	(___flmul@f1+2)& (0+255),w,b
 10410  014D02  3584               	rlcf	(___flmul@f1+3)& (0+255),w,b
 10411  014D04  0100               	movlb	0	; () banked
 10412  014D06  6F89               	movwf	___flmul@exp& (0+255),b
 10413  014D08  0100               	movlb	0	; () banked
 10414  014D0A  5189               	movf	___flmul@exp& (0+255),w,b
 10415  014D0C  A4D8               	btfss	status,2,c
 10416  014D0E  D00A               	goto	l7514
 10417                           
 10418                           ; BSR set to: 0
 10419  014D10  0E00               	movlw	0
 10420  014D12  0100               	movlb	0	; () banked
 10421  014D14  6F81               	movwf	?___flmul& (0+255),b
 10422  014D16  0E00               	movlw	0
 10423  014D18  6F82               	movwf	(?___flmul+1)& (0+255),b
 10424  014D1A  0E00               	movlw	0
 10425  014D1C  6F83               	movwf	(?___flmul+2)& (0+255),b
 10426  014D1E  0E00               	movlw	0
 10427  014D20  6F84               	movwf	(?___flmul+3)& (0+255),b
 10428                           
 10429                           ; BSR set to: 0
 10430  014D22  0012               	return	
 10431  014D24                     l7514:
 10432                           
 10433                           ; BSR set to: 0
 10434  014D24  0100               	movlb	0	; () banked
 10435  014D26  3587               	rlcf	(___flmul@f2+2)& (0+255),w,b
 10436  014D28  3588               	rlcf	(___flmul@f2+3)& (0+255),w,b
 10437  014D2A  0100               	movlb	0	; () banked
 10438  014D2C  6F8F               	movwf	___flmul@sign& (0+255),b
 10439  014D2E  0100               	movlb	0	; () banked
 10440  014D30  518F               	movf	___flmul@sign& (0+255),w,b
 10441  014D32  A4D8               	btfss	status,2,c
 10442  014D34  D00A               	goto	l7520
 10443                           
 10444                           ; BSR set to: 0
 10445  014D36  0E00               	movlw	0
 10446  014D38  0100               	movlb	0	; () banked
 10447  014D3A  6F81               	movwf	?___flmul& (0+255),b
 10448  014D3C  0E00               	movlw	0
 10449  014D3E  6F82               	movwf	(?___flmul+1)& (0+255),b
 10450  014D40  0E00               	movlw	0
 10451  014D42  6F83               	movwf	(?___flmul+2)& (0+255),b
 10452  014D44  0E00               	movlw	0
 10453  014D46  6F84               	movwf	(?___flmul+3)& (0+255),b
 10454                           
 10455                           ; BSR set to: 0
 10456  014D48  0012               	return	
 10457  014D4A                     l7520:
 10458                           
 10459                           ; BSR set to: 0
 10460  014D4A  0100               	movlb	0	; () banked
 10461  014D4C  518F               	movf	___flmul@sign& (0+255),w,b
 10462  014D4E  0F7B               	addlw	123
 10463  014D50  0100               	movlb	0	; () banked
 10464  014D52  2789               	addwf	___flmul@exp& (0+255),f,b
 10465                           
 10466                           ; BSR set to: 0
 10467  014D54  C084  F08F         	movff	___flmul@f1+3,___flmul@sign
 10468  014D58  0100               	movlb	0	; () banked
 10469  014D5A  5188               	movf	(___flmul@f2+3)& (0+255),w,b
 10470  014D5C  0100               	movlb	0	; () banked
 10471  014D5E  1B8F               	xorwf	___flmul@sign& (0+255),f,b
 10472  014D60  0E80               	movlw	128
 10473  014D62  0100               	movlb	0	; () banked
 10474  014D64  178F               	andwf	___flmul@sign& (0+255),f,b
 10475                           
 10476                           ; BSR set to: 0
 10477  014D66  0100               	movlb	0	; () banked
 10478  014D68  8F83               	bsf	(___flmul@f1+2)& (0+255),7,b
 10479                           
 10480                           ; BSR set to: 0
 10481  014D6A  0100               	movlb	0	; () banked
 10482  014D6C  8F87               	bsf	(___flmul@f2+2)& (0+255),7,b
 10483  014D6E  0EFF               	movlw	255
 10484  014D70  0100               	movlb	0	; () banked
 10485  014D72  1785               	andwf	___flmul@f2& (0+255),f,b
 10486  014D74  0EFF               	movlw	255
 10487  014D76  1786               	andwf	(___flmul@f2+1)& (0+255),f,b
 10488  014D78  0EFF               	movlw	255
 10489  014D7A  1787               	andwf	(___flmul@f2+2)& (0+255),f,b
 10490  014D7C  0E00               	movlw	0
 10491  014D7E  1788               	andwf	(___flmul@f2+3)& (0+255),f,b
 10492                           
 10493                           ; BSR set to: 0
 10494  014D80  0E00               	movlw	0
 10495  014D82  0100               	movlb	0	; () banked
 10496  014D84  6F8A               	movwf	___flmul@f3_as_product& (0+255),b
 10497  014D86  0E00               	movlw	0
 10498  014D88  6F8B               	movwf	(___flmul@f3_as_product+1)& (0+255),b
 10499  014D8A  0E00               	movlw	0
 10500  014D8C  6F8C               	movwf	(___flmul@f3_as_product+2)& (0+255),b
 10501  014D8E  0E00               	movlw	0
 10502  014D90  6F8D               	movwf	(___flmul@f3_as_product+3)& (0+255),b
 10503                           
 10504                           ; BSR set to: 0
 10505  014D92  0E07               	movlw	7
 10506  014D94  0100               	movlb	0	; () banked
 10507  014D96  6F8E               	movwf	___flmul@cntr& (0+255),b
 10508  014D98  D000               	goto	l7532
 10509  014D9A                     l7532:
 10510                           
 10511                           ; BSR set to: 0
 10512  014D9A  0100               	movlb	0	; () banked
 10513  014D9C  A181               	btfss	___flmul@f1& (0+255),0,b
 10514  014D9E  D011               	goto	l7536
 10515                           
 10516                           ; BSR set to: 0
 10517  014DA0  0100               	movlb	0	; () banked
 10518  014DA2  5185               	movf	___flmul@f2& (0+255),w,b
 10519  014DA4  0100               	movlb	0	; () banked
 10520  014DA6  278A               	addwf	___flmul@f3_as_product& (0+255),f,b
 10521  014DA8  0100               	movlb	0	; () banked
 10522  014DAA  5186               	movf	(___flmul@f2+1)& (0+255),w,b
 10523  014DAC  0100               	movlb	0	; () banked
 10524  014DAE  238B               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
 10525  014DB0  0100               	movlb	0	; () banked
 10526  014DB2  5187               	movf	(___flmul@f2+2)& (0+255),w,b
 10527  014DB4  0100               	movlb	0	; () banked
 10528  014DB6  238C               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
 10529  014DB8  0100               	movlb	0	; () banked
 10530  014DBA  5188               	movf	(___flmul@f2+3)& (0+255),w,b
 10531  014DBC  0100               	movlb	0	; () banked
 10532  014DBE  238D               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
 10533  014DC0  D000               	goto	l7536
 10534  014DC2                     l7536:
 10535                           
 10536                           ; BSR set to: 0
 10537  014DC2  0100               	movlb	0	; () banked
 10538  014DC4  90D8               	bcf	status,0,c
 10539  014DC6  3384               	rrcf	(___flmul@f1+3)& (0+255),f,b
 10540  014DC8  3383               	rrcf	(___flmul@f1+2)& (0+255),f,b
 10541  014DCA  3382               	rrcf	(___flmul@f1+1)& (0+255),f,b
 10542  014DCC  3381               	rrcf	___flmul@f1& (0+255),f,b
 10543                           
 10544                           ; BSR set to: 0
 10545  014DCE  0100               	movlb	0	; () banked
 10546  014DD0  90D8               	bcf	status,0,c
 10547  014DD2  3785               	rlcf	___flmul@f2& (0+255),f,b
 10548  014DD4  3786               	rlcf	(___flmul@f2+1)& (0+255),f,b
 10549  014DD6  3787               	rlcf	(___flmul@f2+2)& (0+255),f,b
 10550  014DD8  3788               	rlcf	(___flmul@f2+3)& (0+255),f,b
 10551                           
 10552                           ; BSR set to: 0
 10553  014DDA  0100               	movlb	0	; () banked
 10554  014DDC  2F8E               	decfsz	___flmul@cntr& (0+255),f,b
 10555  014DDE  D7DD               	goto	l7532
 10556  014DE0  D000               	goto	l7542
 10557  014DE2                     l7542:
 10558                           
 10559                           ; BSR set to: 0
 10560  014DE2  0E11               	movlw	17
 10561  014DE4  0100               	movlb	0	; () banked
 10562  014DE6  6F8E               	movwf	___flmul@cntr& (0+255),b
 10563  014DE8  D000               	goto	l7544
 10564  014DEA                     l7544:
 10565                           
 10566                           ; BSR set to: 0
 10567  014DEA  0100               	movlb	0	; () banked
 10568  014DEC  A181               	btfss	___flmul@f1& (0+255),0,b
 10569  014DEE  D011               	goto	l7548
 10570                           
 10571                           ; BSR set to: 0
 10572  014DF0  0100               	movlb	0	; () banked
 10573  014DF2  5185               	movf	___flmul@f2& (0+255),w,b
 10574  014DF4  0100               	movlb	0	; () banked
 10575  014DF6  278A               	addwf	___flmul@f3_as_product& (0+255),f,b
 10576  014DF8  0100               	movlb	0	; () banked
 10577  014DFA  5186               	movf	(___flmul@f2+1)& (0+255),w,b
 10578  014DFC  0100               	movlb	0	; () banked
 10579  014DFE  238B               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
 10580  014E00  0100               	movlb	0	; () banked
 10581  014E02  5187               	movf	(___flmul@f2+2)& (0+255),w,b
 10582  014E04  0100               	movlb	0	; () banked
 10583  014E06  238C               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
 10584  014E08  0100               	movlb	0	; () banked
 10585  014E0A  5188               	movf	(___flmul@f2+3)& (0+255),w,b
 10586  014E0C  0100               	movlb	0	; () banked
 10587  014E0E  238D               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
 10588  014E10  D000               	goto	l7548
 10589  014E12                     l7548:
 10590                           
 10591                           ; BSR set to: 0
 10592  014E12  0100               	movlb	0	; () banked
 10593  014E14  90D8               	bcf	status,0,c
 10594  014E16  3384               	rrcf	(___flmul@f1+3)& (0+255),f,b
 10595  014E18  3383               	rrcf	(___flmul@f1+2)& (0+255),f,b
 10596  014E1A  3382               	rrcf	(___flmul@f1+1)& (0+255),f,b
 10597  014E1C  3381               	rrcf	___flmul@f1& (0+255),f,b
 10598                           
 10599                           ; BSR set to: 0
 10600  014E1E  0100               	movlb	0	; () banked
 10601  014E20  90D8               	bcf	status,0,c
 10602  014E22  338D               	rrcf	(___flmul@f3_as_product+3)& (0+255),f,b
 10603  014E24  338C               	rrcf	(___flmul@f3_as_product+2)& (0+255),f,b
 10604  014E26  338B               	rrcf	(___flmul@f3_as_product+1)& (0+255),f,b
 10605  014E28  338A               	rrcf	___flmul@f3_as_product& (0+255),f,b
 10606                           
 10607                           ; BSR set to: 0
 10608  014E2A  0100               	movlb	0	; () banked
 10609  014E2C  2F8E               	decfsz	___flmul@cntr& (0+255),f,b
 10610  014E2E  D7DD               	goto	l7544
 10611  014E30  D000               	goto	l7554
 10612  014E32                     l7554:
 10613                           
 10614                           ; BSR set to: 0
 10615  014E32  C08A  F072         	movff	___flmul@f3_as_product,___flpack@arg
 10616  014E36  C08B  F073         	movff	___flmul@f3_as_product+1,___flpack@arg+1
 10617  014E3A  C08C  F074         	movff	___flmul@f3_as_product+2,___flpack@arg+2
 10618  014E3E  C08D  F075         	movff	___flmul@f3_as_product+3,___flpack@arg+3
 10619  014E42  C089  F076         	movff	___flmul@exp,___flpack@exp
 10620  014E46  C08F  F077         	movff	___flmul@sign,___flpack@sign
 10621  014E4A  EC08  F0A5         	call	___flpack	;wreg free
 10622  014E4E  C072  F081         	movff	?___flpack,?___flmul
 10623  014E52  C073  F082         	movff	?___flpack+1,?___flmul+1
 10624  014E56  C074  F083         	movff	?___flpack+2,?___flmul+2
 10625  014E5A  C075  F084         	movff	?___flpack+3,?___flmul+3
 10626  014E5E  0012               	return	
 10627  014E60  0012               	return		;funcret
 10628  014E62                     __end_of___flmul:
 10629                           	opt stack 0
 10630                           tblptru	equ	0xFF8
 10631                           tblptrh	equ	0xFF7
 10632                           tblptrl	equ	0xFF6
 10633                           tablat	equ	0xFF5
 10634                           prodh	equ	0xFF4
 10635                           prodl	equ	0xFF3
 10636                           intcon	equ	0xFF2
 10637                           postinc0	equ	0xFEE
 10638                           wreg	equ	0xFE8
 10639                           indf2	equ	0xFDF
 10640                           postinc2	equ	0xFDE
 10641                           fsr2h	equ	0xFDA
 10642                           fsr2l	equ	0xFD9
 10643                           status	equ	0xFD8
 10644                           
 10645 ;; *************** function ___awmod *****************
 10646 ;; Defined at:
 10647 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 10648 ;; Parameters:    Size  Location     Type
 10649 ;;  dividend        2   18[BANK0 ] int 
 10650 ;;  divisor         2   20[BANK0 ] int 
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;  sign            1   23[BANK0 ] unsigned char 
 10653 ;;  counter         1   22[BANK0 ] unsigned char 
 10654 ;; Return value:  Size  Location     Type
 10655 ;;                  2   18[BANK0 ] int 
 10656 ;; Registers used:
 10657 ;;		wreg, status,2, status,0
 10658 ;; Tracked objects:
 10659 ;;		On entry : 0/0
 10660 ;;		On exit  : 0/0
 10661 ;;		Unchanged: 0/0
 10662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10663 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10664 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10667 ;;Total ram usage:        6 bytes
 10668 ;; Hardware stack levels used:    1
 10669 ;; Hardware stack levels required when called:    3
 10670 ;; This function calls:
 10671 ;;		Nothing
 10672 ;; This function is called by:
 10673 ;;		_fround
 10674 ;;		_scale
 10675 ;; This function uses a non-reentrant model
 10676 ;;
 10677                           
 10678                           	psect	text17
 10679  0155B2                     __ptext17:
 10680                           	opt stack 0
 10681  0155B2                     ___awmod:
 10682                           	opt stack 24
 10683                           
 10684                           ;incstack = 0
 10685  0155B2  0E00               	movlw	0
 10686  0155B4  0100               	movlb	0	; () banked
 10687  0155B6  6F77               	movwf	___awmod@sign& (0+255),b
 10688                           
 10689                           ; BSR set to: 0
 10690  0155B8  0100               	movlb	0	; () banked
 10691  0155BA  AF73               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10692  0155BC  D009               	goto	l7610
 10693                           
 10694                           ; BSR set to: 0
 10695  0155BE  0100               	movlb	0	; () banked
 10696  0155C0  6D72               	negf	___awmod@dividend& (0+255),b
 10697  0155C2  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
 10698  0155C4  B0D8               	btfsc	status,0,c
 10699  0155C6  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
 10700                           
 10701                           ; BSR set to: 0
 10702  0155C8  0E01               	movlw	1
 10703  0155CA  0100               	movlb	0	; () banked
 10704  0155CC  6F77               	movwf	___awmod@sign& (0+255),b
 10705  0155CE  D000               	goto	l7610
 10706  0155D0                     l7610:
 10707                           
 10708                           ; BSR set to: 0
 10709  0155D0  0100               	movlb	0	; () banked
 10710  0155D2  AF75               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10711  0155D4  D006               	goto	l7614
 10712                           
 10713                           ; BSR set to: 0
 10714  0155D6  0100               	movlb	0	; () banked
 10715  0155D8  6D74               	negf	___awmod@divisor& (0+255),b
 10716  0155DA  1F75               	comf	(___awmod@divisor+1)& (0+255),f,b
 10717  0155DC  B0D8               	btfsc	status,0,c
 10718  0155DE  2B75               	incf	(___awmod@divisor+1)& (0+255),f,b
 10719  0155E0  D000               	goto	l7614
 10720  0155E2                     l7614:
 10721                           
 10722                           ; BSR set to: 0
 10723  0155E2  0100               	movlb	0	; () banked
 10724  0155E4  5174               	movf	___awmod@divisor& (0+255),w,b
 10725  0155E6  0100               	movlb	0	; () banked
 10726  0155E8  1175               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10727  0155EA  B4D8               	btfsc	status,2,c
 10728  0155EC  D02B               	goto	l7630
 10729                           
 10730                           ; BSR set to: 0
 10731  0155EE  0E01               	movlw	1
 10732  0155F0  0100               	movlb	0	; () banked
 10733  0155F2  6F76               	movwf	___awmod@counter& (0+255),b
 10734  0155F4  D007               	goto	l7620
 10735  0155F6                     l7618:
 10736                           
 10737                           ; BSR set to: 0
 10738  0155F6  0100               	movlb	0	; () banked
 10739  0155F8  90D8               	bcf	status,0,c
 10740  0155FA  3774               	rlcf	___awmod@divisor& (0+255),f,b
 10741  0155FC  3775               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10742  0155FE  0100               	movlb	0	; () banked
 10743  015600  2B76               	incf	___awmod@counter& (0+255),f,b
 10744  015602  D000               	goto	l7620
 10745  015604                     l7620:
 10746                           
 10747                           ; BSR set to: 0
 10748  015604  0100               	movlb	0	; () banked
 10749  015606  BF75               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 10750  015608  D002               	goto	l7622
 10751  01560A  D7F5               	goto	l7618
 10752                           
 10753                           ; BSR set to: 0
 10754  01560C  D000               	goto	l7622
 10755  01560E                     l7622:
 10756                           
 10757                           ; BSR set to: 0
 10758  01560E  0100               	movlb	0	; () banked
 10759  015610  5174               	movf	___awmod@divisor& (0+255),w,b
 10760  015612  0100               	movlb	0	; () banked
 10761  015614  5D72               	subwf	___awmod@dividend& (0+255),w,b
 10762  015616  0100               	movlb	0	; () banked
 10763  015618  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
 10764  01561A  0100               	movlb	0	; () banked
 10765  01561C  5973               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10766  01561E  A0D8               	btfss	status,0,c
 10767  015620  D009               	goto	l7626
 10768                           
 10769                           ; BSR set to: 0
 10770  015622  0100               	movlb	0	; () banked
 10771  015624  5174               	movf	___awmod@divisor& (0+255),w,b
 10772  015626  0100               	movlb	0	; () banked
 10773  015628  5F72               	subwf	___awmod@dividend& (0+255),f,b
 10774  01562A  0100               	movlb	0	; () banked
 10775  01562C  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
 10776  01562E  0100               	movlb	0	; () banked
 10777  015630  5B73               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10778  015632  D000               	goto	l7626
 10779  015634                     l7626:
 10780                           
 10781                           ; BSR set to: 0
 10782  015634  0100               	movlb	0	; () banked
 10783  015636  90D8               	bcf	status,0,c
 10784  015638  3375               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10785  01563A  3374               	rrcf	___awmod@divisor& (0+255),f,b
 10786                           
 10787                           ; BSR set to: 0
 10788  01563C  0100               	movlb	0	; () banked
 10789  01563E  2F76               	decfsz	___awmod@counter& (0+255),f,b
 10790  015640  D7E6               	goto	l7622
 10791                           
 10792                           ; BSR set to: 0
 10793  015642  D000               	goto	l7630
 10794  015644                     l7630:
 10795                           
 10796                           ; BSR set to: 0
 10797  015644  0100               	movlb	0	; () banked
 10798  015646  5177               	movf	___awmod@sign& (0+255),w,b
 10799  015648  0100               	movlb	0	; () banked
 10800  01564A  B4D8               	btfsc	status,2,c
 10801  01564C  D006               	goto	l7634
 10802                           
 10803                           ; BSR set to: 0
 10804  01564E  0100               	movlb	0	; () banked
 10805  015650  6D72               	negf	___awmod@dividend& (0+255),b
 10806  015652  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
 10807  015654  B0D8               	btfsc	status,0,c
 10808  015656  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
 10809  015658  D000               	goto	l7634
 10810  01565A                     l7634:
 10811                           
 10812                           ; BSR set to: 0
 10813  01565A  C072  F072         	movff	___awmod@dividend,?___awmod
 10814  01565E  C073  F073         	movff	___awmod@dividend+1,?___awmod+1
 10815  015662  0012               	return	
 10816                           
 10817                           ; BSR set to: 0
 10818                           
 10819                           ; BSR set to: 0
 10820  015664  0012               	return		;funcret
 10821  015666                     __end_of___awmod:
 10822                           	opt stack 0
 10823                           tblptru	equ	0xFF8
 10824                           tblptrh	equ	0xFF7
 10825                           tblptrl	equ	0xFF6
 10826                           tablat	equ	0xFF5
 10827                           prodh	equ	0xFF4
 10828                           prodl	equ	0xFF3
 10829                           intcon	equ	0xFF2
 10830                           postinc0	equ	0xFEE
 10831                           wreg	equ	0xFE8
 10832                           indf2	equ	0xFDF
 10833                           postinc2	equ	0xFDE
 10834                           fsr2h	equ	0xFDA
 10835                           fsr2l	equ	0xFD9
 10836                           status	equ	0xFD8
 10837                           
 10838 ;; *************** function ___awdiv *****************
 10839 ;; Defined at:
 10840 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 10841 ;; Parameters:    Size  Location     Type
 10842 ;;  dividend        2   24[BANK0 ] int 
 10843 ;;  divisor         2   26[BANK0 ] int 
 10844 ;; Auto vars:     Size  Location     Type
 10845 ;;  quotient        2   30[BANK0 ] int 
 10846 ;;  sign            1   29[BANK0 ] unsigned char 
 10847 ;;  counter         1   28[BANK0 ] unsigned char 
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  2   24[BANK0 ] int 
 10850 ;; Registers used:
 10851 ;;		wreg, status,2, status,0
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10857 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10858 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10860 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10861 ;;Total ram usage:        8 bytes
 10862 ;; Hardware stack levels used:    1
 10863 ;; Hardware stack levels required when called:    3
 10864 ;; This function calls:
 10865 ;;		Nothing
 10866 ;; This function is called by:
 10867 ;;		_main
 10868 ;;		_fround
 10869 ;;		_scale
 10870 ;;		_sprintf
 10871 ;; This function uses a non-reentrant model
 10872 ;;
 10873                           
 10874                           	psect	text18
 10875  015298                     __ptext18:
 10876                           	opt stack 0
 10877  015298                     ___awdiv:
 10878                           	opt stack 27
 10879                           
 10880                           ; BSR set to: 0
 10881                           ;incstack = 0
 10882  015298  0E00               	movlw	0
 10883  01529A  0100               	movlb	0	; () banked
 10884  01529C  6F7D               	movwf	___awdiv@sign& (0+255),b
 10885                           
 10886                           ; BSR set to: 0
 10887  01529E  0100               	movlb	0	; () banked
 10888  0152A0  AF7B               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10889  0152A2  D009               	goto	l7566
 10890                           
 10891                           ; BSR set to: 0
 10892  0152A4  0100               	movlb	0	; () banked
 10893  0152A6  6D7A               	negf	___awdiv@divisor& (0+255),b
 10894  0152A8  1F7B               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10895  0152AA  B0D8               	btfsc	status,0,c
 10896  0152AC  2B7B               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10897                           
 10898                           ; BSR set to: 0
 10899  0152AE  0E01               	movlw	1
 10900  0152B0  0100               	movlb	0	; () banked
 10901  0152B2  6F7D               	movwf	___awdiv@sign& (0+255),b
 10902  0152B4  D000               	goto	l7566
 10903  0152B6                     l7566:
 10904                           
 10905                           ; BSR set to: 0
 10906  0152B6  0100               	movlb	0	; () banked
 10907  0152B8  AF79               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10908  0152BA  D009               	goto	l7572
 10909                           
 10910                           ; BSR set to: 0
 10911  0152BC  0100               	movlb	0	; () banked
 10912  0152BE  6D78               	negf	___awdiv@dividend& (0+255),b
 10913  0152C0  1F79               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10914  0152C2  B0D8               	btfsc	status,0,c
 10915  0152C4  2B79               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10916                           
 10917                           ; BSR set to: 0
 10918  0152C6  0E01               	movlw	1
 10919  0152C8  0100               	movlb	0	; () banked
 10920  0152CA  1B7D               	xorwf	___awdiv@sign& (0+255),f,b
 10921  0152CC  D000               	goto	l7572
 10922  0152CE                     l7572:
 10923                           
 10924                           ; BSR set to: 0
 10925  0152CE  0E00               	movlw	0
 10926  0152D0  0100               	movlb	0	; () banked
 10927  0152D2  6F7F               	movwf	(___awdiv@quotient+1)& (0+255),b
 10928  0152D4  0E00               	movlw	0
 10929  0152D6  6F7E               	movwf	___awdiv@quotient& (0+255),b
 10930                           
 10931                           ; BSR set to: 0
 10932  0152D8  0100               	movlb	0	; () banked
 10933  0152DA  517A               	movf	___awdiv@divisor& (0+255),w,b
 10934  0152DC  0100               	movlb	0	; () banked
 10935  0152DE  117B               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10936  0152E0  B4D8               	btfsc	status,2,c
 10937  0152E2  D031               	goto	l7594
 10938                           
 10939                           ; BSR set to: 0
 10940  0152E4  0E01               	movlw	1
 10941  0152E6  0100               	movlb	0	; () banked
 10942  0152E8  6F7C               	movwf	___awdiv@counter& (0+255),b
 10943  0152EA  D007               	goto	l7580
 10944  0152EC                     l7578:
 10945                           
 10946                           ; BSR set to: 0
 10947  0152EC  0100               	movlb	0	; () banked
 10948  0152EE  90D8               	bcf	status,0,c
 10949  0152F0  377A               	rlcf	___awdiv@divisor& (0+255),f,b
 10950  0152F2  377B               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10951  0152F4  0100               	movlb	0	; () banked
 10952  0152F6  2B7C               	incf	___awdiv@counter& (0+255),f,b
 10953  0152F8  D000               	goto	l7580
 10954  0152FA                     l7580:
 10955                           
 10956                           ; BSR set to: 0
 10957  0152FA  0100               	movlb	0	; () banked
 10958  0152FC  BF7B               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 10959  0152FE  D002               	goto	l7582
 10960  015300  D7F5               	goto	l7578
 10961                           
 10962                           ; BSR set to: 0
 10963  015302  D000               	goto	l7582
 10964  015304                     l7582:
 10965                           
 10966                           ; BSR set to: 0
 10967  015304  0100               	movlb	0	; () banked
 10968  015306  90D8               	bcf	status,0,c
 10969  015308  377E               	rlcf	___awdiv@quotient& (0+255),f,b
 10970  01530A  377F               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10971                           
 10972                           ; BSR set to: 0
 10973  01530C  0100               	movlb	0	; () banked
 10974  01530E  517A               	movf	___awdiv@divisor& (0+255),w,b
 10975  015310  0100               	movlb	0	; () banked
 10976  015312  5D78               	subwf	___awdiv@dividend& (0+255),w,b
 10977  015314  0100               	movlb	0	; () banked
 10978  015316  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10979  015318  0100               	movlb	0	; () banked
 10980  01531A  5979               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10981  01531C  A0D8               	btfss	status,0,c
 10982  01531E  D00B               	goto	l7590
 10983                           
 10984                           ; BSR set to: 0
 10985  015320  0100               	movlb	0	; () banked
 10986  015322  517A               	movf	___awdiv@divisor& (0+255),w,b
 10987  015324  0100               	movlb	0	; () banked
 10988  015326  5F78               	subwf	___awdiv@dividend& (0+255),f,b
 10989  015328  0100               	movlb	0	; () banked
 10990  01532A  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10991  01532C  0100               	movlb	0	; () banked
 10992  01532E  5B79               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10993                           
 10994                           ; BSR set to: 0
 10995  015330  0100               	movlb	0	; () banked
 10996  015332  817E               	bsf	___awdiv@quotient& (0+255),0,b
 10997  015334  D000               	goto	l7590
 10998  015336                     l7590:
 10999                           
 11000                           ; BSR set to: 0
 11001  015336  0100               	movlb	0	; () banked
 11002  015338  90D8               	bcf	status,0,c
 11003  01533A  337B               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11004  01533C  337A               	rrcf	___awdiv@divisor& (0+255),f,b
 11005                           
 11006                           ; BSR set to: 0
 11007  01533E  0100               	movlb	0	; () banked
 11008  015340  2F7C               	decfsz	___awdiv@counter& (0+255),f,b
 11009  015342  D7E0               	goto	l7582
 11010                           
 11011                           ; BSR set to: 0
 11012  015344  D000               	goto	l7594
 11013  015346                     l7594:
 11014                           
 11015                           ; BSR set to: 0
 11016  015346  0100               	movlb	0	; () banked
 11017  015348  517D               	movf	___awdiv@sign& (0+255),w,b
 11018  01534A  0100               	movlb	0	; () banked
 11019  01534C  B4D8               	btfsc	status,2,c
 11020  01534E  D006               	goto	l7598
 11021                           
 11022                           ; BSR set to: 0
 11023  015350  0100               	movlb	0	; () banked
 11024  015352  6D7E               	negf	___awdiv@quotient& (0+255),b
 11025  015354  1F7F               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11026  015356  B0D8               	btfsc	status,0,c
 11027  015358  2B7F               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11028  01535A  D000               	goto	l7598
 11029  01535C                     l7598:
 11030                           
 11031                           ; BSR set to: 0
 11032  01535C  C07E  F078         	movff	___awdiv@quotient,?___awdiv
 11033  015360  C07F  F079         	movff	___awdiv@quotient+1,?___awdiv+1
 11034  015364  0012               	return	
 11035                           
 11036                           ; BSR set to: 0
 11037                           
 11038                           ; BSR set to: 0
 11039  015366  0012               	return		;funcret
 11040  015368                     __end_of___awdiv:
 11041                           	opt stack 0
 11042                           tblptru	equ	0xFF8
 11043                           tblptrh	equ	0xFF7
 11044                           tblptrl	equ	0xFF6
 11045                           tablat	equ	0xFF5
 11046                           prodh	equ	0xFF4
 11047                           prodl	equ	0xFF3
 11048                           intcon	equ	0xFF2
 11049                           postinc0	equ	0xFEE
 11050                           wreg	equ	0xFE8
 11051                           indf2	equ	0xFDF
 11052                           postinc2	equ	0xFDE
 11053                           fsr2h	equ	0xFDA
 11054                           fsr2l	equ	0xFD9
 11055                           status	equ	0xFD8
 11056                           
 11057 ;; *************** function __tdiv_to_l_ *****************
 11058 ;; Defined at:
 11059 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
 11060 ;; Parameters:    Size  Location     Type
 11061 ;;  f1              4   18[BANK0 ] float 
 11062 ;;  f2              4   22[BANK0 ] float 
 11063 ;; Auto vars:     Size  Location     Type
 11064 ;;  quot            4   29[BANK0 ] unsigned long 
 11065 ;;  exp1            1   34[BANK0 ] unsigned char 
 11066 ;;  cntr            1   33[BANK0 ] unsigned char 
 11067 ;; Return value:  Size  Location     Type
 11068 ;;                  4   18[BANK0 ] unsigned long 
 11069 ;; Registers used:
 11070 ;;		wreg, status,2, status,0
 11071 ;; Tracked objects:
 11072 ;;		On entry : 0/0
 11073 ;;		On exit  : 0/0
 11074 ;;		Unchanged: 0/0
 11075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11076 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11077 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11078 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11079 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11080 ;;Total ram usage:       17 bytes
 11081 ;; Hardware stack levels used:    1
 11082 ;; Hardware stack levels required when called:    3
 11083 ;; This function calls:
 11084 ;;		Nothing
 11085 ;; This function is called by:
 11086 ;;		_sprintf
 11087 ;; This function uses a non-reentrant model
 11088 ;;
 11089                           
 11090                           	psect	text19
 11091  0146D6                     __ptext19:
 11092                           	opt stack 0
 11093  0146D6                     __tdiv_to_l_:
 11094                           	opt stack 25
 11095                           
 11096                           ; BSR set to: 0
 11097                           ;incstack = 0
 11098  0146D6  C074  F07A         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 11099  0146DA  0100               	movlb	0	; () banked
 11100  0146DC  6B7B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 11101  0146DE  6B7C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 11102  0146E0  0100               	movlb	0	; () banked
 11103  0146E2  3573               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 11104  0146E4  0100               	movlb	0	; () banked
 11105  0146E6  377A               	rlcf	??__tdiv_to_l_& (0+255),f,b
 11106  0146E8  E301               	bnc	u9801
 11107  0146EA  817B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 11108  0146EC                     u9801:
 11109  0146EC  0100               	movlb	0	; () banked
 11110  0146EE  517A               	movf	??__tdiv_to_l_& (0+255),w,b
 11111  0146F0  0100               	movlb	0	; () banked
 11112  0146F2  6F82               	movwf	__tdiv_to_l_@exp1& (0+255),b
 11113  0146F4  0100               	movlb	0	; () banked
 11114  0146F6  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11115  0146F8  A4D8               	btfss	status,2,c
 11116  0146FA  D00A               	goto	l7748
 11117                           
 11118                           ; BSR set to: 0
 11119  0146FC  0E00               	movlw	0
 11120  0146FE  0100               	movlb	0	; () banked
 11121  014700  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 11122  014702  0E00               	movlw	0
 11123  014704  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11124  014706  0E00               	movlw	0
 11125  014708  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11126  01470A  0E00               	movlw	0
 11127  01470C  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11128                           
 11129                           ; BSR set to: 0
 11130  01470E  0012               	return	
 11131  014710                     l7748:
 11132                           
 11133                           ; BSR set to: 0
 11134  014710  C078  F07A         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 11135  014714  0100               	movlb	0	; () banked
 11136  014716  6B7B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 11137  014718  6B7C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 11138  01471A  0100               	movlb	0	; () banked
 11139  01471C  3577               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11140  01471E  0100               	movlb	0	; () banked
 11141  014720  377A               	rlcf	??__tdiv_to_l_& (0+255),f,b
 11142  014722  E301               	bnc	u9821
 11143  014724  817B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 11144  014726                     u9821:
 11145  014726  0100               	movlb	0	; () banked
 11146  014728  517A               	movf	??__tdiv_to_l_& (0+255),w,b
 11147  01472A  0100               	movlb	0	; () banked
 11148  01472C  6F81               	movwf	__tdiv_to_l_@cntr& (0+255),b
 11149  01472E  0100               	movlb	0	; () banked
 11150  014730  5181               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 11151  014732  A4D8               	btfss	status,2,c
 11152  014734  D00A               	goto	l7754
 11153                           
 11154                           ; BSR set to: 0
 11155  014736  0E00               	movlw	0
 11156  014738  0100               	movlb	0	; () banked
 11157  01473A  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 11158  01473C  0E00               	movlw	0
 11159  01473E  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11160  014740  0E00               	movlw	0
 11161  014742  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11162  014744  0E00               	movlw	0
 11163  014746  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11164                           
 11165                           ; BSR set to: 0
 11166  014748  0012               	return	
 11167  01474A                     l7754:
 11168                           
 11169                           ; BSR set to: 0
 11170  01474A  0100               	movlb	0	; () banked
 11171  01474C  8F73               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 11172                           
 11173                           ; BSR set to: 0
 11174  01474E  0EFF               	movlw	255
 11175  014750  0100               	movlb	0	; () banked
 11176  014752  1772               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 11177  014754  0EFF               	movlw	255
 11178  014756  0100               	movlb	0	; () banked
 11179  014758  1773               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11180  01475A  0E00               	movlw	0
 11181  01475C  0100               	movlb	0	; () banked
 11182  01475E  1774               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11183  014760  0100               	movlb	0	; () banked
 11184  014762  8F77               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 11185                           
 11186                           ; BSR set to: 0
 11187  014764  0EFF               	movlw	255
 11188  014766  0100               	movlb	0	; () banked
 11189  014768  1776               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 11190  01476A  0EFF               	movlw	255
 11191  01476C  0100               	movlb	0	; () banked
 11192  01476E  1777               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 11193  014770  0E00               	movlw	0
 11194  014772  0100               	movlb	0	; () banked
 11195  014774  1778               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 11196                           
 11197                           ; BSR set to: 0
 11198  014776  0E00               	movlw	0
 11199  014778  0100               	movlb	0	; () banked
 11200  01477A  6F7D               	movwf	__tdiv_to_l_@quot& (0+255),b
 11201  01477C  0E00               	movlw	0
 11202  01477E  6F7E               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 11203  014780  0E00               	movlw	0
 11204  014782  6F7F               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 11205  014784  0E00               	movlw	0
 11206  014786  6F80               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 11207                           
 11208                           ; BSR set to: 0
 11209  014788  0E7F               	movlw	127
 11210  01478A  0100               	movlb	0	; () banked
 11211  01478C  5F82               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 11212                           
 11213                           ; BSR set to: 0
 11214  01478E  0100               	movlb	0	; () banked
 11215  014790  5181               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 11216  014792  0F98               	addlw	152
 11217  014794  0100               	movlb	0	; () banked
 11218  014796  5F82               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 11219                           
 11220                           ; BSR set to: 0
 11221  014798  0E18               	movlw	24
 11222  01479A  0100               	movlb	0	; () banked
 11223  01479C  6F81               	movwf	__tdiv_to_l_@cntr& (0+255),b
 11224  01479E                     l1477:
 11225                           
 11226                           ; BSR set to: 0
 11227  01479E  0100               	movlb	0	; () banked
 11228  0147A0  90D8               	bcf	status,0,c
 11229  0147A2  377D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11230  0147A4  377E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11231  0147A6  377F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11232  0147A8  3780               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11233                           
 11234                           ; BSR set to: 0
 11235  0147AA  0100               	movlb	0	; () banked
 11236  0147AC  5176               	movf	__tdiv_to_l_@f2& (0+255),w,b
 11237  0147AE  0100               	movlb	0	; () banked
 11238  0147B0  5D72               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 11239  0147B2  0100               	movlb	0	; () banked
 11240  0147B4  5177               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11241  0147B6  0100               	movlb	0	; () banked
 11242  0147B8  5973               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 11243  0147BA  0100               	movlb	0	; () banked
 11244  0147BC  5178               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 11245  0147BE  0100               	movlb	0	; () banked
 11246  0147C0  5974               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 11247  0147C2  A0D8               	btfss	status,0,c
 11248  0147C4  D00E               	goto	l1478
 11249                           
 11250                           ; BSR set to: 0
 11251  0147C6  0100               	movlb	0	; () banked
 11252  0147C8  5176               	movf	__tdiv_to_l_@f2& (0+255),w,b
 11253  0147CA  0100               	movlb	0	; () banked
 11254  0147CC  5F72               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 11255  0147CE  0100               	movlb	0	; () banked
 11256  0147D0  5177               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11257  0147D2  0100               	movlb	0	; () banked
 11258  0147D4  5B73               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11259  0147D6  0100               	movlb	0	; () banked
 11260  0147D8  5178               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 11261  0147DA  0100               	movlb	0	; () banked
 11262  0147DC  5B74               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11263                           
 11264                           ; BSR set to: 0
 11265  0147DE  0100               	movlb	0	; () banked
 11266  0147E0  817D               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 11267  0147E2                     l1478:
 11268                           
 11269                           ; BSR set to: 0
 11270  0147E2  0100               	movlb	0	; () banked
 11271  0147E4  90D8               	bcf	status,0,c
 11272  0147E6  3772               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 11273  0147E8  3773               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11274  0147EA  3774               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11275                           
 11276                           ; BSR set to: 0
 11277  0147EC  0100               	movlb	0	; () banked
 11278  0147EE  2F81               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 11279  0147F0  D7D6               	goto	l1477
 11280  0147F2  D000               	goto	l7776
 11281  0147F4                     l7776:
 11282                           
 11283                           ; BSR set to: 0
 11284  0147F4  0100               	movlb	0	; () banked
 11285  0147F6  AF82               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 11286  0147F8  D01B               	goto	l7788
 11287                           
 11288                           ; BSR set to: 0
 11289  0147FA  0100               	movlb	0	; () banked
 11290  0147FC  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11291  0147FE  0A80               	xorlw	128
 11292  014800  0F97               	addlw	151
 11293  014802  B0D8               	btfsc	status,0,c
 11294  014804  D00B               	goto	l7784
 11295                           
 11296                           ; BSR set to: 0
 11297  014806  0E00               	movlw	0
 11298  014808  0100               	movlb	0	; () banked
 11299  01480A  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 11300  01480C  0E00               	movlw	0
 11301  01480E  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11302  014810  0E00               	movlw	0
 11303  014812  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11304  014814  0E00               	movlw	0
 11305  014816  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11306                           
 11307                           ; BSR set to: 0
 11308  014818  0012               	return	
 11309                           
 11310                           ; BSR set to: 0
 11311  01481A  D000               	goto	l7784
 11312  01481C                     l7784:
 11313                           
 11314                           ; BSR set to: 0
 11315  01481C  0100               	movlb	0	; () banked
 11316  01481E  90D8               	bcf	status,0,c
 11317  014820  3380               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11318  014822  337F               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11319  014824  337E               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11320  014826  337D               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 11321                           
 11322                           ; BSR set to: 0
 11323  014828  0100               	movlb	0	; () banked
 11324  01482A  3F82               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 11325  01482C  D7F7               	goto	l7784
 11326                           
 11327                           ; BSR set to: 0
 11328  01482E  D01D               	goto	l1484
 11329  014830                     l7788:
 11330                           
 11331                           ; BSR set to: 0
 11332  014830  0E17               	movlw	23
 11333  014832  0100               	movlb	0	; () banked
 11334  014834  6582               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 11335  014836  D014               	goto	l7796
 11336                           
 11337                           ; BSR set to: 0
 11338  014838  0E00               	movlw	0
 11339  01483A  0100               	movlb	0	; () banked
 11340  01483C  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 11341  01483E  0E00               	movlw	0
 11342  014840  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11343  014842  0E00               	movlw	0
 11344  014844  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11345  014846  0E00               	movlw	0
 11346  014848  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11347                           
 11348                           ; BSR set to: 0
 11349  01484A  0012               	return	
 11350                           
 11351                           ; BSR set to: 0
 11352  01484C  D009               	goto	l7796
 11353  01484E                     l7794:
 11354                           
 11355                           ; BSR set to: 0
 11356  01484E  0100               	movlb	0	; () banked
 11357  014850  90D8               	bcf	status,0,c
 11358  014852  377D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11359  014854  377E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11360  014856  377F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11361  014858  3780               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11362  01485A  0100               	movlb	0	; () banked
 11363  01485C  0782               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 11364  01485E  D000               	goto	l7796
 11365  014860                     l7796:
 11366                           
 11367                           ; BSR set to: 0
 11368  014860  0100               	movlb	0	; () banked
 11369  014862  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11370  014864  0100               	movlb	0	; () banked
 11371  014866  A4D8               	btfss	status,2,c
 11372  014868  D7F2               	goto	l7794
 11373  01486A                     l1484:
 11374                           
 11375                           ; BSR set to: 0
 11376  01486A  C07D  F072         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 11377  01486E  C07E  F073         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 11378  014872  C07F  F074         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 11379  014876  C080  F075         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 11380                           
 11381                           ; BSR set to: 0
 11382  01487A  0012               	return		;funcret
 11383  01487C                     __end_of__tdiv_to_l_:
 11384                           	opt stack 0
 11385                           tblptru	equ	0xFF8
 11386                           tblptrh	equ	0xFF7
 11387                           tblptrl	equ	0xFF6
 11388                           tablat	equ	0xFF5
 11389                           prodh	equ	0xFF4
 11390                           prodl	equ	0xFF3
 11391                           intcon	equ	0xFF2
 11392                           postinc0	equ	0xFEE
 11393                           wreg	equ	0xFE8
 11394                           indf2	equ	0xFDF
 11395                           postinc2	equ	0xFDE
 11396                           fsr2h	equ	0xFDA
 11397                           fsr2l	equ	0xFD9
 11398                           status	equ	0xFD8
 11399                           
 11400 ;; *************** function __div_to_l_ *****************
 11401 ;; Defined at:
 11402 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
 11403 ;; Parameters:    Size  Location     Type
 11404 ;;  f1              4   18[BANK0 ] unsigned long 
 11405 ;;  f2              4   22[BANK0 ] unsigned long 
 11406 ;; Auto vars:     Size  Location     Type
 11407 ;;  quot            4   26[BANK0 ] unsigned long 
 11408 ;;  exp1            1   31[BANK0 ] unsigned char 
 11409 ;;  cntr            1   30[BANK0 ] unsigned char 
 11410 ;; Return value:  Size  Location     Type
 11411 ;;                  4   18[BANK0 ] unsigned long 
 11412 ;; Registers used:
 11413 ;;		wreg, status,2, status,0
 11414 ;; Tracked objects:
 11415 ;;		On entry : 0/0
 11416 ;;		On exit  : 0/0
 11417 ;;		Unchanged: 0/0
 11418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11419 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11420 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11422 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11423 ;;Total ram usage:       14 bytes
 11424 ;; Hardware stack levels used:    1
 11425 ;; Hardware stack levels required when called:    3
 11426 ;; This function calls:
 11427 ;;		Nothing
 11428 ;; This function is called by:
 11429 ;;		_sprintf
 11430 ;; This function uses a non-reentrant model
 11431 ;;
 11432                           
 11433                           	psect	text20
 11434  01487C                     __ptext20:
 11435                           	opt stack 0
 11436  01487C                     __div_to_l_:
 11437                           	opt stack 25
 11438                           
 11439                           ; BSR set to: 0
 11440                           ;incstack = 0
 11441  01487C  0100               	movlb	0	; () banked
 11442  01487E  3574               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 11443  014880  3575               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 11444  014882  0100               	movlb	0	; () banked
 11445  014884  6F7F               	movwf	__div_to_l_@exp1& (0+255),b
 11446  014886  0100               	movlb	0	; () banked
 11447  014888  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 11448  01488A  A4D8               	btfss	status,2,c
 11449  01488C  D00A               	goto	l7804
 11450                           
 11451                           ; BSR set to: 0
 11452  01488E  0E00               	movlw	0
 11453  014890  0100               	movlb	0	; () banked
 11454  014892  6F72               	movwf	?__div_to_l_& (0+255),b
 11455  014894  0E00               	movlw	0
 11456  014896  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 11457  014898  0E00               	movlw	0
 11458  01489A  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 11459  01489C  0E00               	movlw	0
 11460  01489E  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 11461                           
 11462                           ; BSR set to: 0
 11463  0148A0  0012               	return	
 11464  0148A2                     l7804:
 11465                           
 11466                           ; BSR set to: 0
 11467  0148A2  0100               	movlb	0	; () banked
 11468  0148A4  3578               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 11469  0148A6  3579               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 11470  0148A8  0100               	movlb	0	; () banked
 11471  0148AA  6F7E               	movwf	__div_to_l_@cntr& (0+255),b
 11472  0148AC  0100               	movlb	0	; () banked
 11473  0148AE  517E               	movf	__div_to_l_@cntr& (0+255),w,b
 11474  0148B0  A4D8               	btfss	status,2,c
 11475  0148B2  D00A               	goto	l7810
 11476                           
 11477                           ; BSR set to: 0
 11478  0148B4  0E00               	movlw	0
 11479  0148B6  0100               	movlb	0	; () banked
 11480  0148B8  6F72               	movwf	?__div_to_l_& (0+255),b
 11481  0148BA  0E00               	movlw	0
 11482  0148BC  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 11483  0148BE  0E00               	movlw	0
 11484  0148C0  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 11485  0148C2  0E00               	movlw	0
 11486  0148C4  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 11487                           
 11488                           ; BSR set to: 0
 11489  0148C6  0012               	return	
 11490  0148C8                     l7810:
 11491                           
 11492                           ; BSR set to: 0
 11493  0148C8  0100               	movlb	0	; () banked
 11494  0148CA  8F74               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 11495                           
 11496                           ; BSR set to: 0
 11497  0148CC  0EFF               	movlw	255
 11498  0148CE  0100               	movlb	0	; () banked
 11499  0148D0  1772               	andwf	__div_to_l_@f1& (0+255),f,b
 11500  0148D2  0EFF               	movlw	255
 11501  0148D4  1773               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 11502  0148D6  0EFF               	movlw	255
 11503  0148D8  1774               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 11504  0148DA  0E00               	movlw	0
 11505  0148DC  1775               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 11506                           
 11507                           ; BSR set to: 0
 11508  0148DE  0100               	movlb	0	; () banked
 11509  0148E0  8F78               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 11510  0148E2  0EFF               	movlw	255
 11511  0148E4  0100               	movlb	0	; () banked
 11512  0148E6  1776               	andwf	__div_to_l_@f2& (0+255),f,b
 11513  0148E8  0EFF               	movlw	255
 11514  0148EA  1777               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 11515  0148EC  0EFF               	movlw	255
 11516  0148EE  1778               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 11517  0148F0  0E00               	movlw	0
 11518  0148F2  1779               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 11519                           
 11520                           ; BSR set to: 0
 11521  0148F4  0E00               	movlw	0
 11522  0148F6  0100               	movlb	0	; () banked
 11523  0148F8  6F7A               	movwf	__div_to_l_@quot& (0+255),b
 11524  0148FA  0E00               	movlw	0
 11525  0148FC  6F7B               	movwf	(__div_to_l_@quot+1)& (0+255),b
 11526  0148FE  0E00               	movlw	0
 11527  014900  6F7C               	movwf	(__div_to_l_@quot+2)& (0+255),b
 11528  014902  0E00               	movlw	0
 11529  014904  6F7D               	movwf	(__div_to_l_@quot+3)& (0+255),b
 11530                           
 11531                           ; BSR set to: 0
 11532  014906  0E7F               	movlw	127
 11533  014908  0100               	movlb	0	; () banked
 11534  01490A  5F7F               	subwf	__div_to_l_@exp1& (0+255),f,b
 11535                           
 11536                           ; BSR set to: 0
 11537  01490C  0100               	movlb	0	; () banked
 11538  01490E  517E               	movf	__div_to_l_@cntr& (0+255),w,b
 11539  014910  0FA0               	addlw	160
 11540  014912  0100               	movlb	0	; () banked
 11541  014914  5F7F               	subwf	__div_to_l_@exp1& (0+255),f,b
 11542                           
 11543                           ; BSR set to: 0
 11544  014916  0E20               	movlw	32
 11545  014918  0100               	movlb	0	; () banked
 11546  01491A  6F7E               	movwf	__div_to_l_@cntr& (0+255),b
 11547  01491C  D000               	goto	l7824
 11548  01491E                     l7824:
 11549                           
 11550                           ; BSR set to: 0
 11551  01491E  0100               	movlb	0	; () banked
 11552  014920  90D8               	bcf	status,0,c
 11553  014922  377A               	rlcf	__div_to_l_@quot& (0+255),f,b
 11554  014924  377B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11555  014926  377C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11556  014928  377D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11557                           
 11558                           ; BSR set to: 0
 11559  01492A  0100               	movlb	0	; () banked
 11560  01492C  5176               	movf	__div_to_l_@f2& (0+255),w,b
 11561  01492E  0100               	movlb	0	; () banked
 11562  014930  5D72               	subwf	__div_to_l_@f1& (0+255),w,b
 11563  014932  0100               	movlb	0	; () banked
 11564  014934  5177               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11565  014936  0100               	movlb	0	; () banked
 11566  014938  5973               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 11567  01493A  0100               	movlb	0	; () banked
 11568  01493C  5178               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11569  01493E  0100               	movlb	0	; () banked
 11570  014940  5974               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 11571  014942  0100               	movlb	0	; () banked
 11572  014944  5179               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11573  014946  0100               	movlb	0	; () banked
 11574  014948  5975               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 11575  01494A  A0D8               	btfss	status,0,c
 11576  01494C  D013               	goto	l7832
 11577                           
 11578                           ; BSR set to: 0
 11579  01494E  0100               	movlb	0	; () banked
 11580  014950  5176               	movf	__div_to_l_@f2& (0+255),w,b
 11581  014952  0100               	movlb	0	; () banked
 11582  014954  5F72               	subwf	__div_to_l_@f1& (0+255),f,b
 11583  014956  0100               	movlb	0	; () banked
 11584  014958  5177               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11585  01495A  0100               	movlb	0	; () banked
 11586  01495C  5B73               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 11587  01495E  0100               	movlb	0	; () banked
 11588  014960  5178               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11589  014962  0100               	movlb	0	; () banked
 11590  014964  5B74               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 11591  014966  0100               	movlb	0	; () banked
 11592  014968  5179               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11593  01496A  0100               	movlb	0	; () banked
 11594  01496C  5B75               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 11595                           
 11596                           ; BSR set to: 0
 11597  01496E  0100               	movlb	0	; () banked
 11598  014970  817A               	bsf	__div_to_l_@quot& (0+255),0,b
 11599  014972  D000               	goto	l7832
 11600  014974                     l7832:
 11601                           
 11602                           ; BSR set to: 0
 11603  014974  0100               	movlb	0	; () banked
 11604  014976  90D8               	bcf	status,0,c
 11605  014978  3772               	rlcf	__div_to_l_@f1& (0+255),f,b
 11606  01497A  3773               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 11607  01497C  3774               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 11608  01497E  3775               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 11609                           
 11610                           ; BSR set to: 0
 11611  014980  0100               	movlb	0	; () banked
 11612  014982  2F7E               	decfsz	__div_to_l_@cntr& (0+255),f,b
 11613  014984  D7CC               	goto	l7824
 11614  014986  D000               	goto	l7836
 11615  014988                     l7836:
 11616                           
 11617                           ; BSR set to: 0
 11618  014988  0100               	movlb	0	; () banked
 11619  01498A  AF7F               	btfss	__div_to_l_@exp1& (0+255),7,b
 11620  01498C  D01B               	goto	l7848
 11621                           
 11622                           ; BSR set to: 0
 11623  01498E  0100               	movlb	0	; () banked
 11624  014990  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 11625  014992  0A80               	xorlw	128
 11626  014994  0F9F               	addlw	159
 11627  014996  B0D8               	btfsc	status,0,c
 11628  014998  D00B               	goto	l7844
 11629                           
 11630                           ; BSR set to: 0
 11631  01499A  0E00               	movlw	0
 11632  01499C  0100               	movlb	0	; () banked
 11633  01499E  6F72               	movwf	?__div_to_l_& (0+255),b
 11634  0149A0  0E00               	movlw	0
 11635  0149A2  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 11636  0149A4  0E00               	movlw	0
 11637  0149A6  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 11638  0149A8  0E00               	movlw	0
 11639  0149AA  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 11640                           
 11641                           ; BSR set to: 0
 11642  0149AC  0012               	return	
 11643                           
 11644                           ; BSR set to: 0
 11645  0149AE  D000               	goto	l7844
 11646  0149B0                     l7844:
 11647                           
 11648                           ; BSR set to: 0
 11649  0149B0  0100               	movlb	0	; () banked
 11650  0149B2  90D8               	bcf	status,0,c
 11651  0149B4  337D               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 11652  0149B6  337C               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 11653  0149B8  337B               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 11654  0149BA  337A               	rrcf	__div_to_l_@quot& (0+255),f,b
 11655                           
 11656                           ; BSR set to: 0
 11657  0149BC  0100               	movlb	0	; () banked
 11658  0149BE  3F7F               	incfsz	__div_to_l_@exp1& (0+255),f,b
 11659  0149C0  D7F7               	goto	l7844
 11660                           
 11661                           ; BSR set to: 0
 11662  0149C2  D01D               	goto	l1363
 11663  0149C4                     l7848:
 11664                           
 11665                           ; BSR set to: 0
 11666  0149C4  0E1F               	movlw	31
 11667  0149C6  0100               	movlb	0	; () banked
 11668  0149C8  657F               	cpfsgt	__div_to_l_@exp1& (0+255),b
 11669  0149CA  D014               	goto	l7856
 11670                           
 11671                           ; BSR set to: 0
 11672  0149CC  0E00               	movlw	0
 11673  0149CE  0100               	movlb	0	; () banked
 11674  0149D0  6F72               	movwf	?__div_to_l_& (0+255),b
 11675  0149D2  0E00               	movlw	0
 11676  0149D4  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 11677  0149D6  0E00               	movlw	0
 11678  0149D8  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 11679  0149DA  0E00               	movlw	0
 11680  0149DC  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 11681                           
 11682                           ; BSR set to: 0
 11683  0149DE  0012               	return	
 11684                           
 11685                           ; BSR set to: 0
 11686  0149E0  D009               	goto	l7856
 11687  0149E2                     l7854:
 11688                           
 11689                           ; BSR set to: 0
 11690  0149E2  0100               	movlb	0	; () banked
 11691  0149E4  90D8               	bcf	status,0,c
 11692  0149E6  377A               	rlcf	__div_to_l_@quot& (0+255),f,b
 11693  0149E8  377B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11694  0149EA  377C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11695  0149EC  377D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11696  0149EE  0100               	movlb	0	; () banked
 11697  0149F0  077F               	decf	__div_to_l_@exp1& (0+255),f,b
 11698  0149F2  D000               	goto	l7856
 11699  0149F4                     l7856:
 11700                           
 11701                           ; BSR set to: 0
 11702  0149F4  0100               	movlb	0	; () banked
 11703  0149F6  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 11704  0149F8  0100               	movlb	0	; () banked
 11705  0149FA  A4D8               	btfss	status,2,c
 11706  0149FC  D7F2               	goto	l7854
 11707  0149FE                     l1363:
 11708                           
 11709                           ; BSR set to: 0
 11710  0149FE  C07A  F072         	movff	__div_to_l_@quot,?__div_to_l_
 11711  014A02  C07B  F073         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11712  014A06  C07C  F074         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11713  014A0A  C07D  F075         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11714                           
 11715                           ; BSR set to: 0
 11716  014A0E  0012               	return		;funcret
 11717  014A10                     __end_of__div_to_l_:
 11718                           	opt stack 0
 11719                           tblptru	equ	0xFF8
 11720                           tblptrh	equ	0xFF7
 11721                           tblptrl	equ	0xFF6
 11722                           tablat	equ	0xFF5
 11723                           prodh	equ	0xFF4
 11724                           prodl	equ	0xFF3
 11725                           intcon	equ	0xFF2
 11726                           postinc0	equ	0xFEE
 11727                           wreg	equ	0xFE8
 11728                           indf2	equ	0xFDF
 11729                           postinc2	equ	0xFDE
 11730                           fsr2h	equ	0xFDA
 11731                           fsr2l	equ	0xFD9
 11732                           status	equ	0xFD8
 11733                           
 11734 ;; *************** function ___lltofl *****************
 11735 ;; Defined at:
 11736 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltofl.c"
 11737 ;; Parameters:    Size  Location     Type
 11738 ;;  c               4   28[BANK0 ] unsigned long 
 11739 ;; Auto vars:     Size  Location     Type
 11740 ;;		None
 11741 ;; Return value:  Size  Location     Type
 11742 ;;                  4   28[BANK0 ] unsigned long 
 11743 ;; Registers used:
 11744 ;;		wreg, status,2, status,0, cstack
 11745 ;; Tracked objects:
 11746 ;;		On entry : 0/0
 11747 ;;		On exit  : 0/0
 11748 ;;		Unchanged: 0/0
 11749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11750 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11753 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11754 ;;Total ram usage:        4 bytes
 11755 ;; Hardware stack levels used:    1
 11756 ;; Hardware stack levels required when called:    4
 11757 ;; This function calls:
 11758 ;;		___flpack
 11759 ;; This function is called by:
 11760 ;;		_sprintf
 11761 ;; This function uses a non-reentrant model
 11762 ;;
 11763                           
 11764                           	psect	text21
 11765  015E44                     __ptext21:
 11766                           	opt stack 0
 11767  015E44                     ___lltofl:
 11768                           	opt stack 24
 11769                           
 11770                           ; BSR set to: 0
 11771                           ;incstack = 0
 11772  015E44  C07C  F072         	movff	___lltofl@c,___flpack@arg
 11773  015E48  C07D  F073         	movff	___lltofl@c+1,___flpack@arg+1
 11774  015E4C  C07E  F074         	movff	___lltofl@c+2,___flpack@arg+2
 11775  015E50  C07F  F075         	movff	___lltofl@c+3,___flpack@arg+3
 11776  015E54  0E96               	movlw	150
 11777  015E56  0100               	movlb	0	; () banked
 11778  015E58  6F76               	movwf	___flpack@exp& (0+255),b
 11779  015E5A  0E00               	movlw	0
 11780  015E5C  0100               	movlb	0	; () banked
 11781  015E5E  6F77               	movwf	___flpack@sign& (0+255),b
 11782  015E60  EC08  F0A5         	call	___flpack	;wreg free
 11783  015E64  C072  F07C         	movff	?___flpack,?___lltofl
 11784  015E68  C073  F07D         	movff	?___flpack+1,?___lltofl+1
 11785  015E6C  C074  F07E         	movff	?___flpack+2,?___lltofl+2
 11786  015E70  C075  F07F         	movff	?___flpack+3,?___lltofl+3
 11787  015E74  0012               	return	
 11788  015E76  0012               	return		;funcret
 11789  015E78                     __end_of___lltofl:
 11790                           	opt stack 0
 11791                           tblptru	equ	0xFF8
 11792                           tblptrh	equ	0xFF7
 11793                           tblptrl	equ	0xFF6
 11794                           tablat	equ	0xFF5
 11795                           prodh	equ	0xFF4
 11796                           prodl	equ	0xFF3
 11797                           intcon	equ	0xFF2
 11798                           postinc0	equ	0xFEE
 11799                           wreg	equ	0xFE8
 11800                           indf2	equ	0xFDF
 11801                           postinc2	equ	0xFDE
 11802                           fsr2h	equ	0xFDA
 11803                           fsr2l	equ	0xFD9
 11804                           status	equ	0xFD8
 11805                           
 11806 ;; *************** function ___llmod *****************
 11807 ;; Defined at:
 11808 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 11809 ;; Parameters:    Size  Location     Type
 11810 ;;  dividend        4   18[BANK0 ] unsigned long 
 11811 ;;  divisor         4   22[BANK0 ] unsigned long 
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;  counter         1   26[BANK0 ] unsigned char 
 11814 ;; Return value:  Size  Location     Type
 11815 ;;                  4   18[BANK0 ] unsigned long 
 11816 ;; Registers used:
 11817 ;;		wreg, status,2, status,0
 11818 ;; Tracked objects:
 11819 ;;		On entry : 0/0
 11820 ;;		On exit  : 0/0
 11821 ;;		Unchanged: 0/0
 11822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11823 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11824 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11826 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11827 ;;Total ram usage:        9 bytes
 11828 ;; Hardware stack levels used:    1
 11829 ;; Hardware stack levels required when called:    3
 11830 ;; This function calls:
 11831 ;;		Nothing
 11832 ;; This function is called by:
 11833 ;;		_sprintf
 11834 ;; This function uses a non-reentrant model
 11835 ;;
 11836                           
 11837                           	psect	text22
 11838  01570A                     __ptext22:
 11839                           	opt stack 0
 11840  01570A                     ___llmod:
 11841                           	opt stack 25
 11842                           
 11843                           ;incstack = 0
 11844  01570A  0100               	movlb	0	; () banked
 11845  01570C  5176               	movf	___llmod@divisor& (0+255),w,b
 11846  01570E  0100               	movlb	0	; () banked
 11847  015710  1177               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11848  015712  0100               	movlb	0	; () banked
 11849  015714  1178               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11850  015716  0100               	movlb	0	; () banked
 11851  015718  1179               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11852  01571A  B4D8               	btfsc	status,2,c
 11853  01571C  D03F               	goto	l1588
 11854                           
 11855                           ; BSR set to: 0
 11856  01571E  0E01               	movlw	1
 11857  015720  0100               	movlb	0	; () banked
 11858  015722  6F7A               	movwf	___llmod@counter& (0+255),b
 11859  015724  D009               	goto	l7960
 11860  015726                     l7958:
 11861                           
 11862                           ; BSR set to: 0
 11863  015726  0100               	movlb	0	; () banked
 11864  015728  90D8               	bcf	status,0,c
 11865  01572A  3776               	rlcf	___llmod@divisor& (0+255),f,b
 11866  01572C  3777               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11867  01572E  3778               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11868  015730  3779               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11869  015732  0100               	movlb	0	; () banked
 11870  015734  2B7A               	incf	___llmod@counter& (0+255),f,b
 11871  015736  D000               	goto	l7960
 11872  015738                     l7960:
 11873                           
 11874                           ; BSR set to: 0
 11875  015738  0100               	movlb	0	; () banked
 11876  01573A  BF79               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 11877  01573C  D002               	goto	l7962
 11878  01573E  D7F3               	goto	l7958
 11879                           
 11880                           ; BSR set to: 0
 11881  015740  D000               	goto	l7962
 11882  015742                     l7962:
 11883                           
 11884                           ; BSR set to: 0
 11885  015742  0100               	movlb	0	; () banked
 11886  015744  5176               	movf	___llmod@divisor& (0+255),w,b
 11887  015746  0100               	movlb	0	; () banked
 11888  015748  5D72               	subwf	___llmod@dividend& (0+255),w,b
 11889  01574A  0100               	movlb	0	; () banked
 11890  01574C  5177               	movf	(___llmod@divisor+1)& (0+255),w,b
 11891  01574E  0100               	movlb	0	; () banked
 11892  015750  5973               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11893  015752  0100               	movlb	0	; () banked
 11894  015754  5178               	movf	(___llmod@divisor+2)& (0+255),w,b
 11895  015756  0100               	movlb	0	; () banked
 11896  015758  5974               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11897  01575A  0100               	movlb	0	; () banked
 11898  01575C  5179               	movf	(___llmod@divisor+3)& (0+255),w,b
 11899  01575E  0100               	movlb	0	; () banked
 11900  015760  5975               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11901  015762  A0D8               	btfss	status,0,c
 11902  015764  D011               	goto	l7966
 11903                           
 11904                           ; BSR set to: 0
 11905  015766  0100               	movlb	0	; () banked
 11906  015768  5176               	movf	___llmod@divisor& (0+255),w,b
 11907  01576A  0100               	movlb	0	; () banked
 11908  01576C  5F72               	subwf	___llmod@dividend& (0+255),f,b
 11909  01576E  0100               	movlb	0	; () banked
 11910  015770  5177               	movf	(___llmod@divisor+1)& (0+255),w,b
 11911  015772  0100               	movlb	0	; () banked
 11912  015774  5B73               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11913  015776  0100               	movlb	0	; () banked
 11914  015778  5178               	movf	(___llmod@divisor+2)& (0+255),w,b
 11915  01577A  0100               	movlb	0	; () banked
 11916  01577C  5B74               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11917  01577E  0100               	movlb	0	; () banked
 11918  015780  5179               	movf	(___llmod@divisor+3)& (0+255),w,b
 11919  015782  0100               	movlb	0	; () banked
 11920  015784  5B75               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11921  015786  D000               	goto	l7966
 11922  015788                     l7966:
 11923                           
 11924                           ; BSR set to: 0
 11925  015788  0100               	movlb	0	; () banked
 11926  01578A  90D8               	bcf	status,0,c
 11927  01578C  3379               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11928  01578E  3378               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11929  015790  3377               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11930  015792  3376               	rrcf	___llmod@divisor& (0+255),f,b
 11931                           
 11932                           ; BSR set to: 0
 11933  015794  0100               	movlb	0	; () banked
 11934  015796  2F7A               	decfsz	___llmod@counter& (0+255),f,b
 11935  015798  D7D4               	goto	l7962
 11936  01579A  D000               	goto	l1588
 11937  01579C                     l1588:
 11938                           
 11939                           ; BSR set to: 0
 11940  01579C  C072  F072         	movff	___llmod@dividend,?___llmod
 11941  0157A0  C073  F073         	movff	___llmod@dividend+1,?___llmod+1
 11942  0157A4  C074  F074         	movff	___llmod@dividend+2,?___llmod+2
 11943  0157A8  C075  F075         	movff	___llmod@dividend+3,?___llmod+3
 11944                           
 11945                           ; BSR set to: 0
 11946  0157AC  0012               	return		;funcret
 11947  0157AE                     __end_of___llmod:
 11948                           	opt stack 0
 11949                           tblptru	equ	0xFF8
 11950                           tblptrh	equ	0xFF7
 11951                           tblptrl	equ	0xFF6
 11952                           tablat	equ	0xFF5
 11953                           prodh	equ	0xFF4
 11954                           prodl	equ	0xFF3
 11955                           intcon	equ	0xFF2
 11956                           postinc0	equ	0xFEE
 11957                           wreg	equ	0xFE8
 11958                           indf2	equ	0xFDF
 11959                           postinc2	equ	0xFDE
 11960                           fsr2h	equ	0xFDA
 11961                           fsr2l	equ	0xFD9
 11962                           status	equ	0xFD8
 11963                           
 11964 ;; *************** function ___lldiv *****************
 11965 ;; Defined at:
 11966 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 11967 ;; Parameters:    Size  Location     Type
 11968 ;;  dividend        4   18[BANK0 ] unsigned long 
 11969 ;;  divisor         4   22[BANK0 ] unsigned long 
 11970 ;; Auto vars:     Size  Location     Type
 11971 ;;  quotient        4   26[BANK0 ] unsigned long 
 11972 ;;  counter         1   30[BANK0 ] unsigned char 
 11973 ;; Return value:  Size  Location     Type
 11974 ;;                  4   18[BANK0 ] unsigned long 
 11975 ;; Registers used:
 11976 ;;		wreg, status,2, status,0
 11977 ;; Tracked objects:
 11978 ;;		On entry : 0/0
 11979 ;;		On exit  : 0/0
 11980 ;;		Unchanged: 0/0
 11981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11982 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11983 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11985 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11986 ;;Total ram usage:       13 bytes
 11987 ;; Hardware stack levels used:    1
 11988 ;; Hardware stack levels required when called:    3
 11989 ;; This function calls:
 11990 ;;		Nothing
 11991 ;; This function is called by:
 11992 ;;		_sprintf
 11993 ;; This function uses a non-reentrant model
 11994 ;;
 11995                           
 11996                           	psect	text23
 11997  015368                     __ptext23:
 11998                           	opt stack 0
 11999  015368                     ___lldiv:
 12000                           	opt stack 25
 12001                           
 12002                           ; BSR set to: 0
 12003                           ;incstack = 0
 12004  015368  0E00               	movlw	0
 12005  01536A  0100               	movlb	0	; () banked
 12006  01536C  6F7A               	movwf	___lldiv@quotient& (0+255),b
 12007  01536E  0E00               	movlw	0
 12008  015370  6F7B               	movwf	(___lldiv@quotient+1)& (0+255),b
 12009  015372  0E00               	movlw	0
 12010  015374  6F7C               	movwf	(___lldiv@quotient+2)& (0+255),b
 12011  015376  0E00               	movlw	0
 12012  015378  6F7D               	movwf	(___lldiv@quotient+3)& (0+255),b
 12013                           
 12014                           ; BSR set to: 0
 12015  01537A  0100               	movlb	0	; () banked
 12016  01537C  5176               	movf	___lldiv@divisor& (0+255),w,b
 12017  01537E  0100               	movlb	0	; () banked
 12018  015380  1177               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12019  015382  0100               	movlb	0	; () banked
 12020  015384  1178               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12021  015386  0100               	movlb	0	; () banked
 12022  015388  1179               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12023  01538A  B4D8               	btfsc	status,2,c
 12024  01538C  D047               	goto	l1578
 12025                           
 12026                           ; BSR set to: 0
 12027  01538E  0E01               	movlw	1
 12028  015390  0100               	movlb	0	; () banked
 12029  015392  6F7E               	movwf	___lldiv@counter& (0+255),b
 12030  015394  D009               	goto	l7940
 12031  015396                     l7938:
 12032                           
 12033                           ; BSR set to: 0
 12034  015396  0100               	movlb	0	; () banked
 12035  015398  90D8               	bcf	status,0,c
 12036  01539A  3776               	rlcf	___lldiv@divisor& (0+255),f,b
 12037  01539C  3777               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12038  01539E  3778               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12039  0153A0  3779               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12040  0153A2  0100               	movlb	0	; () banked
 12041  0153A4  2B7E               	incf	___lldiv@counter& (0+255),f,b
 12042  0153A6  D000               	goto	l7940
 12043  0153A8                     l7940:
 12044                           
 12045                           ; BSR set to: 0
 12046  0153A8  0100               	movlb	0	; () banked
 12047  0153AA  BF79               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 12048  0153AC  D002               	goto	l7942
 12049  0153AE  D7F3               	goto	l7938
 12050                           
 12051                           ; BSR set to: 0
 12052  0153B0  D000               	goto	l7942
 12053  0153B2                     l7942:
 12054                           
 12055                           ; BSR set to: 0
 12056  0153B2  0100               	movlb	0	; () banked
 12057  0153B4  90D8               	bcf	status,0,c
 12058  0153B6  377A               	rlcf	___lldiv@quotient& (0+255),f,b
 12059  0153B8  377B               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12060  0153BA  377C               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12061  0153BC  377D               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12062                           
 12063                           ; BSR set to: 0
 12064  0153BE  0100               	movlb	0	; () banked
 12065  0153C0  5176               	movf	___lldiv@divisor& (0+255),w,b
 12066  0153C2  0100               	movlb	0	; () banked
 12067  0153C4  5D72               	subwf	___lldiv@dividend& (0+255),w,b
 12068  0153C6  0100               	movlb	0	; () banked
 12069  0153C8  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12070  0153CA  0100               	movlb	0	; () banked
 12071  0153CC  5973               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12072  0153CE  0100               	movlb	0	; () banked
 12073  0153D0  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12074  0153D2  0100               	movlb	0	; () banked
 12075  0153D4  5974               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12076  0153D6  0100               	movlb	0	; () banked
 12077  0153D8  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12078  0153DA  0100               	movlb	0	; () banked
 12079  0153DC  5975               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12080  0153DE  A0D8               	btfss	status,0,c
 12081  0153E0  D013               	goto	l7950
 12082                           
 12083                           ; BSR set to: 0
 12084  0153E2  0100               	movlb	0	; () banked
 12085  0153E4  5176               	movf	___lldiv@divisor& (0+255),w,b
 12086  0153E6  0100               	movlb	0	; () banked
 12087  0153E8  5F72               	subwf	___lldiv@dividend& (0+255),f,b
 12088  0153EA  0100               	movlb	0	; () banked
 12089  0153EC  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12090  0153EE  0100               	movlb	0	; () banked
 12091  0153F0  5B73               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12092  0153F2  0100               	movlb	0	; () banked
 12093  0153F4  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12094  0153F6  0100               	movlb	0	; () banked
 12095  0153F8  5B74               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12096  0153FA  0100               	movlb	0	; () banked
 12097  0153FC  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12098  0153FE  0100               	movlb	0	; () banked
 12099  015400  5B75               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12100                           
 12101                           ; BSR set to: 0
 12102  015402  0100               	movlb	0	; () banked
 12103  015404  817A               	bsf	___lldiv@quotient& (0+255),0,b
 12104  015406  D000               	goto	l7950
 12105  015408                     l7950:
 12106                           
 12107                           ; BSR set to: 0
 12108  015408  0100               	movlb	0	; () banked
 12109  01540A  90D8               	bcf	status,0,c
 12110  01540C  3379               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12111  01540E  3378               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12112  015410  3377               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12113  015412  3376               	rrcf	___lldiv@divisor& (0+255),f,b
 12114                           
 12115                           ; BSR set to: 0
 12116  015414  0100               	movlb	0	; () banked
 12117  015416  2F7E               	decfsz	___lldiv@counter& (0+255),f,b
 12118  015418  D7CC               	goto	l7942
 12119  01541A  D000               	goto	l1578
 12120  01541C                     l1578:
 12121                           
 12122                           ; BSR set to: 0
 12123  01541C  C07A  F072         	movff	___lldiv@quotient,?___lldiv
 12124  015420  C07B  F073         	movff	___lldiv@quotient+1,?___lldiv+1
 12125  015424  C07C  F074         	movff	___lldiv@quotient+2,?___lldiv+2
 12126  015428  C07D  F075         	movff	___lldiv@quotient+3,?___lldiv+3
 12127                           
 12128                           ; BSR set to: 0
 12129  01542C  0012               	return		;funcret
 12130  01542E                     __end_of___lldiv:
 12131                           	opt stack 0
 12132                           tblptru	equ	0xFF8
 12133                           tblptrh	equ	0xFF7
 12134                           tblptrl	equ	0xFF6
 12135                           tablat	equ	0xFF5
 12136                           prodh	equ	0xFF4
 12137                           prodl	equ	0xFF3
 12138                           intcon	equ	0xFF2
 12139                           postinc0	equ	0xFEE
 12140                           wreg	equ	0xFE8
 12141                           indf2	equ	0xFDF
 12142                           postinc2	equ	0xFDE
 12143                           fsr2h	equ	0xFDA
 12144                           fsr2l	equ	0xFD9
 12145                           status	equ	0xFD8
 12146                           
 12147 ;; *************** function ___fltol *****************
 12148 ;; Defined at:
 12149 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fltol.c"
 12150 ;; Parameters:    Size  Location     Type
 12151 ;;  f1              4   73[BANK0 ] unsigned long 
 12152 ;; Auto vars:     Size  Location     Type
 12153 ;;  exp1            1   82[BANK0 ] unsigned char 
 12154 ;;  sign1           1   81[BANK0 ] unsigned char 
 12155 ;; Return value:  Size  Location     Type
 12156 ;;                  4   73[BANK0 ] long 
 12157 ;; Registers used:
 12158 ;;		wreg, status,2, status,0
 12159 ;; Tracked objects:
 12160 ;;		On entry : 0/0
 12161 ;;		On exit  : 0/0
 12162 ;;		Unchanged: 0/0
 12163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12164 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12165 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12166 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12167 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12168 ;;Total ram usage:       10 bytes
 12169 ;; Hardware stack levels used:    1
 12170 ;; Hardware stack levels required when called:    3
 12171 ;; This function calls:
 12172 ;;		Nothing
 12173 ;; This function is called by:
 12174 ;;		_main
 12175 ;;		_sprintf
 12176 ;; This function uses a non-reentrant model
 12177 ;;
 12178                           
 12179                           	psect	text24
 12180  014F98                     __ptext24:
 12181                           	opt stack 0
 12182  014F98                     ___fltol:
 12183                           	opt stack 27
 12184                           
 12185                           ; BSR set to: 0
 12186                           ;incstack = 0
 12187  014F98  0100               	movlb	0	; () banked
 12188  014F9A  35AB               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12189  014F9C  35AC               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12190  014F9E  0100               	movlb	0	; () banked
 12191  014FA0  6FB2               	movwf	___fltol@exp1& (0+255),b
 12192  014FA2  0100               	movlb	0	; () banked
 12193  014FA4  51B2               	movf	___fltol@exp1& (0+255),w,b
 12194  014FA6  A4D8               	btfss	status,2,c
 12195  014FA8  D00A               	goto	l7894
 12196                           
 12197                           ; BSR set to: 0
 12198  014FAA  0E00               	movlw	0
 12199  014FAC  0100               	movlb	0	; () banked
 12200  014FAE  6FA9               	movwf	?___fltol& (0+255),b
 12201  014FB0  0E00               	movlw	0
 12202  014FB2  6FAA               	movwf	(?___fltol+1)& (0+255),b
 12203  014FB4  0E00               	movlw	0
 12204  014FB6  6FAB               	movwf	(?___fltol+2)& (0+255),b
 12205  014FB8  0E00               	movlw	0
 12206  014FBA  6FAC               	movwf	(?___fltol+3)& (0+255),b
 12207                           
 12208                           ; BSR set to: 0
 12209  014FBC  0012               	return	
 12210  014FBE                     l7894:
 12211                           
 12212                           ; BSR set to: 0
 12213  014FBE  C0A9  F0AD         	movff	___fltol@f1,??___fltol
 12214  014FC2  C0AA  F0AE         	movff	___fltol@f1+1,??___fltol+1
 12215  014FC6  C0AB  F0AF         	movff	___fltol@f1+2,??___fltol+2
 12216  014FCA  C0AC  F0B0         	movff	___fltol@f1+3,??___fltol+3
 12217  014FCE  0E20               	movlw	32
 12218  014FD0  D006               	goto	u10020
 12219  014FD2                     u10025:
 12220  014FD2  0100               	movlb	0	; () banked
 12221  014FD4  90D8               	bcf	status,0,c
 12222  014FD6  33B0               	rrcf	(??___fltol+3)& (0+255),f,b
 12223  014FD8  33AF               	rrcf	(??___fltol+2)& (0+255),f,b
 12224  014FDA  33AE               	rrcf	(??___fltol+1)& (0+255),f,b
 12225  014FDC  33AD               	rrcf	??___fltol& (0+255),f,b
 12226  014FDE                     u10020:
 12227  014FDE  2EE8               	decfsz	wreg,f,c
 12228  014FE0  D7F8               	goto	u10025
 12229  014FE2  0100               	movlb	0	; () banked
 12230  014FE4  51AD               	movf	??___fltol& (0+255),w,b
 12231  014FE6  0100               	movlb	0	; () banked
 12232  014FE8  6FB1               	movwf	___fltol@sign1& (0+255),b
 12233                           
 12234                           ; BSR set to: 0
 12235  014FEA  0100               	movlb	0	; () banked
 12236  014FEC  8FAB               	bsf	(___fltol@f1+2)& (0+255),7,b
 12237                           
 12238                           ; BSR set to: 0
 12239  014FEE  0EFF               	movlw	255
 12240  014FF0  0100               	movlb	0	; () banked
 12241  014FF2  17A9               	andwf	___fltol@f1& (0+255),f,b
 12242  014FF4  0EFF               	movlw	255
 12243  014FF6  17AA               	andwf	(___fltol@f1+1)& (0+255),f,b
 12244  014FF8  0EFF               	movlw	255
 12245  014FFA  17AB               	andwf	(___fltol@f1+2)& (0+255),f,b
 12246  014FFC  0E00               	movlw	0
 12247  014FFE  17AC               	andwf	(___fltol@f1+3)& (0+255),f,b
 12248                           
 12249                           ; BSR set to: 0
 12250  015000  0E96               	movlw	150
 12251  015002  0100               	movlb	0	; () banked
 12252  015004  5FB2               	subwf	___fltol@exp1& (0+255),f,b
 12253                           
 12254                           ; BSR set to: 0
 12255  015006  0100               	movlb	0	; () banked
 12256  015008  AFB2               	btfss	___fltol@exp1& (0+255),7,b
 12257  01500A  D01B               	goto	l7914
 12258                           
 12259                           ; BSR set to: 0
 12260  01500C  0100               	movlb	0	; () banked
 12261  01500E  51B2               	movf	___fltol@exp1& (0+255),w,b
 12262  015010  0A80               	xorlw	128
 12263  015012  0F97               	addlw	151
 12264  015014  B0D8               	btfsc	status,0,c
 12265  015016  D00B               	goto	l7910
 12266                           
 12267                           ; BSR set to: 0
 12268  015018  0E00               	movlw	0
 12269  01501A  0100               	movlb	0	; () banked
 12270  01501C  6FA9               	movwf	?___fltol& (0+255),b
 12271  01501E  0E00               	movlw	0
 12272  015020  6FAA               	movwf	(?___fltol+1)& (0+255),b
 12273  015022  0E00               	movlw	0
 12274  015024  6FAB               	movwf	(?___fltol+2)& (0+255),b
 12275  015026  0E00               	movlw	0
 12276  015028  6FAC               	movwf	(?___fltol+3)& (0+255),b
 12277                           
 12278                           ; BSR set to: 0
 12279  01502A  0012               	return	
 12280                           
 12281                           ; BSR set to: 0
 12282  01502C  D000               	goto	l7910
 12283  01502E                     l7910:
 12284                           
 12285                           ; BSR set to: 0
 12286  01502E  0100               	movlb	0	; () banked
 12287  015030  90D8               	bcf	status,0,c
 12288  015032  33AC               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12289  015034  33AB               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12290  015036  33AA               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12291  015038  33A9               	rrcf	___fltol@f1& (0+255),f,b
 12292                           
 12293                           ; BSR set to: 0
 12294  01503A  0100               	movlb	0	; () banked
 12295  01503C  3FB2               	incfsz	___fltol@exp1& (0+255),f,b
 12296  01503E  D7F7               	goto	l7910
 12297                           
 12298                           ; BSR set to: 0
 12299  015040  D01F               	goto	l7924
 12300  015042                     l7914:
 12301                           
 12302                           ; BSR set to: 0
 12303  015042  0E1F               	movlw	31
 12304  015044  0100               	movlb	0	; () banked
 12305  015046  65B2               	cpfsgt	___fltol@exp1& (0+255),b
 12306  015048  D014               	goto	l7922
 12307                           
 12308                           ; BSR set to: 0
 12309  01504A  0E00               	movlw	0
 12310  01504C  0100               	movlb	0	; () banked
 12311  01504E  6FA9               	movwf	?___fltol& (0+255),b
 12312  015050  0E00               	movlw	0
 12313  015052  6FAA               	movwf	(?___fltol+1)& (0+255),b
 12314  015054  0E00               	movlw	0
 12315  015056  6FAB               	movwf	(?___fltol+2)& (0+255),b
 12316  015058  0E00               	movlw	0
 12317  01505A  6FAC               	movwf	(?___fltol+3)& (0+255),b
 12318                           
 12319                           ; BSR set to: 0
 12320  01505C  0012               	return	
 12321                           
 12322                           ; BSR set to: 0
 12323  01505E  D009               	goto	l7922
 12324  015060                     l7920:
 12325                           
 12326                           ; BSR set to: 0
 12327  015060  0100               	movlb	0	; () banked
 12328  015062  90D8               	bcf	status,0,c
 12329  015064  37A9               	rlcf	___fltol@f1& (0+255),f,b
 12330  015066  37AA               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12331  015068  37AB               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12332  01506A  37AC               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12333  01506C  0100               	movlb	0	; () banked
 12334  01506E  07B2               	decf	___fltol@exp1& (0+255),f,b
 12335  015070  D000               	goto	l7922
 12336  015072                     l7922:
 12337                           
 12338                           ; BSR set to: 0
 12339  015072  0100               	movlb	0	; () banked
 12340  015074  51B2               	movf	___fltol@exp1& (0+255),w,b
 12341  015076  0100               	movlb	0	; () banked
 12342  015078  B4D8               	btfsc	status,2,c
 12343  01507A  D002               	goto	l7924
 12344  01507C  D7F1               	goto	l7920
 12345                           
 12346                           ; BSR set to: 0
 12347  01507E  D000               	goto	l7924
 12348  015080                     l7924:
 12349                           
 12350                           ; BSR set to: 0
 12351  015080  0100               	movlb	0	; () banked
 12352  015082  51B1               	movf	___fltol@sign1& (0+255),w,b
 12353  015084  0100               	movlb	0	; () banked
 12354  015086  B4D8               	btfsc	status,2,c
 12355  015088  D00A               	goto	l7928
 12356                           
 12357                           ; BSR set to: 0
 12358  01508A  0100               	movlb	0	; () banked
 12359  01508C  1FAC               	comf	(___fltol@f1+3)& (0+255),f,b
 12360  01508E  1FAB               	comf	(___fltol@f1+2)& (0+255),f,b
 12361  015090  1FAA               	comf	(___fltol@f1+1)& (0+255),f,b
 12362  015092  6DA9               	negf	___fltol@f1& (0+255),b
 12363  015094  0E00               	movlw	0
 12364  015096  23AA               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12365  015098  23AB               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12366  01509A  23AC               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12367  01509C  D000               	goto	l7928
 12368  01509E                     l7928:
 12369                           
 12370                           ; BSR set to: 0
 12371  01509E  C0A9  F0A9         	movff	___fltol@f1,?___fltol
 12372  0150A2  C0AA  F0AA         	movff	___fltol@f1+1,?___fltol+1
 12373  0150A6  C0AB  F0AB         	movff	___fltol@f1+2,?___fltol+2
 12374  0150AA  C0AC  F0AC         	movff	___fltol@f1+3,?___fltol+3
 12375  0150AE  0012               	return	
 12376                           
 12377                           ; BSR set to: 0
 12378                           
 12379                           ; BSR set to: 0
 12380  0150B0  0012               	return		;funcret
 12381  0150B2                     __end_of___fltol:
 12382                           	opt stack 0
 12383                           tblptru	equ	0xFF8
 12384                           tblptrh	equ	0xFF7
 12385                           tblptrl	equ	0xFF6
 12386                           tablat	equ	0xFF5
 12387                           prodh	equ	0xFF4
 12388                           prodl	equ	0xFF3
 12389                           intcon	equ	0xFF2
 12390                           postinc0	equ	0xFEE
 12391                           wreg	equ	0xFE8
 12392                           indf2	equ	0xFDF
 12393                           postinc2	equ	0xFDE
 12394                           fsr2h	equ	0xFDA
 12395                           fsr2l	equ	0xFD9
 12396                           status	equ	0xFD8
 12397                           
 12398 ;; *************** function ___flsub *****************
 12399 ;; Defined at:
 12400 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flsub.c"
 12401 ;; Parameters:    Size  Location     Type
 12402 ;;  f1              4   73[BANK0 ] long 
 12403 ;;  f2              4   77[BANK0 ] long 
 12404 ;; Auto vars:     Size  Location     Type
 12405 ;;		None
 12406 ;; Return value:  Size  Location     Type
 12407 ;;                  4   73[BANK0 ] long 
 12408 ;; Registers used:
 12409 ;;		wreg, status,2, status,0, cstack
 12410 ;; Tracked objects:
 12411 ;;		On entry : 0/0
 12412 ;;		On exit  : 0/0
 12413 ;;		Unchanged: 0/0
 12414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12415 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12418 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12419 ;;Total ram usage:        8 bytes
 12420 ;; Hardware stack levels used:    1
 12421 ;; Hardware stack levels required when called:    5
 12422 ;; This function calls:
 12423 ;;		___fladd
 12424 ;; This function is called by:
 12425 ;;		_sprintf
 12426 ;; This function uses a non-reentrant model
 12427 ;;
 12428                           
 12429                           	psect	text25
 12430  015B26                     __ptext25:
 12431                           	opt stack 0
 12432  015B26                     ___flsub:
 12433                           	opt stack 23
 12434                           
 12435                           ; BSR set to: 0
 12436                           ;incstack = 0
 12437  015B26  0100               	movlb	0	; () banked
 12438  015B28  51AD               	movf	___flsub@f2& (0+255),w,b
 12439  015B2A  0100               	movlb	0	; () banked
 12440  015B2C  11AE               	iorwf	(___flsub@f2+1)& (0+255),w,b
 12441  015B2E  0100               	movlb	0	; () banked
 12442  015B30  11AF               	iorwf	(___flsub@f2+2)& (0+255),w,b
 12443  015B32  0100               	movlb	0	; () banked
 12444  015B34  11B0               	iorwf	(___flsub@f2+3)& (0+255),w,b
 12445  015B36  B4D8               	btfsc	status,2,c
 12446  015B38  D00A               	goto	l7862
 12447                           
 12448                           ; BSR set to: 0
 12449  015B3A  0E00               	movlw	0
 12450  015B3C  0100               	movlb	0	; () banked
 12451  015B3E  1BAD               	xorwf	___flsub@f2& (0+255),f,b
 12452  015B40  0E00               	movlw	0
 12453  015B42  1BAE               	xorwf	(___flsub@f2+1)& (0+255),f,b
 12454  015B44  0E00               	movlw	0
 12455  015B46  1BAF               	xorwf	(___flsub@f2+2)& (0+255),f,b
 12456  015B48  0E80               	movlw	128
 12457  015B4A  1BB0               	xorwf	(___flsub@f2+3)& (0+255),f,b
 12458  015B4C  D000               	goto	l7862
 12459  015B4E                     l7862:
 12460                           
 12461                           ; BSR set to: 0
 12462  015B4E  C0A9  F09D         	movff	___flsub@f1,___fladd@f1
 12463  015B52  C0AA  F09E         	movff	___flsub@f1+1,___fladd@f1+1
 12464  015B56  C0AB  F09F         	movff	___flsub@f1+2,___fladd@f1+2
 12465  015B5A  C0AC  F0A0         	movff	___flsub@f1+3,___fladd@f1+3
 12466  015B5E  C0AD  F0A1         	movff	___flsub@f2,___fladd@f2
 12467  015B62  C0AE  F0A2         	movff	___flsub@f2+1,___fladd@f2+1
 12468  015B66  C0AF  F0A3         	movff	___flsub@f2+2,___fladd@f2+2
 12469  015B6A  C0B0  F0A4         	movff	___flsub@f2+3,___fladd@f2+3
 12470  015B6E  EC69  F0A0         	call	___fladd	;wreg free
 12471  015B72  C09D  F0A9         	movff	?___fladd,?___flsub
 12472  015B76  C09E  F0AA         	movff	?___fladd+1,?___flsub+1
 12473  015B7A  C09F  F0AB         	movff	?___fladd+2,?___flsub+2
 12474  015B7E  C0A0  F0AC         	movff	?___fladd+3,?___flsub+3
 12475  015B82  0012               	return	
 12476  015B84  0012               	return		;funcret
 12477  015B86                     __end_of___flsub:
 12478                           	opt stack 0
 12479                           tblptru	equ	0xFF8
 12480                           tblptrh	equ	0xFF7
 12481                           tblptrl	equ	0xFF6
 12482                           tablat	equ	0xFF5
 12483                           prodh	equ	0xFF4
 12484                           prodl	equ	0xFF3
 12485                           intcon	equ	0xFF2
 12486                           postinc0	equ	0xFEE
 12487                           wreg	equ	0xFE8
 12488                           indf2	equ	0xFDF
 12489                           postinc2	equ	0xFDE
 12490                           fsr2h	equ	0xFDA
 12491                           fsr2l	equ	0xFD9
 12492                           status	equ	0xFD8
 12493                           
 12494 ;; *************** function ___fladd *****************
 12495 ;; Defined at:
 12496 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fladd.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;  f1              4   61[BANK0 ] long 
 12499 ;;  f2              4   65[BANK0 ] long 
 12500 ;; Auto vars:     Size  Location     Type
 12501 ;;  exp1            1   72[BANK0 ] unsigned char 
 12502 ;;  exp2            1   71[BANK0 ] unsigned char 
 12503 ;;  sign            1   70[BANK0 ] unsigned char 
 12504 ;; Return value:  Size  Location     Type
 12505 ;;                  4   61[BANK0 ] unsigned char 
 12506 ;; Registers used:
 12507 ;;		wreg, status,2, status,0, cstack
 12508 ;; Tracked objects:
 12509 ;;		On entry : 0/0
 12510 ;;		On exit  : 0/0
 12511 ;;		Unchanged: 0/0
 12512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12513 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12514 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12515 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12516 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12517 ;;Total ram usage:       12 bytes
 12518 ;; Hardware stack levels used:    1
 12519 ;; Hardware stack levels required when called:    4
 12520 ;; This function calls:
 12521 ;;		___flpack
 12522 ;; This function is called by:
 12523 ;;		_main
 12524 ;;		_sprintf
 12525 ;;		___flsub
 12526 ;; This function uses a non-reentrant model
 12527 ;;
 12528                           
 12529                           	psect	text26
 12530  0140D2                     __ptext26:
 12531                           	opt stack 0
 12532  0140D2                     ___fladd:
 12533                           	opt stack 26
 12534                           
 12535                           ;incstack = 0
 12536  0140D2  0100               	movlb	0	; () banked
 12537  0140D4  359F               	rlcf	(___fladd@f1+2)& (0+255),w,b
 12538  0140D6  35A0               	rlcf	(___fladd@f1+3)& (0+255),w,b
 12539  0140D8  0100               	movlb	0	; () banked
 12540  0140DA  6FA8               	movwf	___fladd@exp1& (0+255),b
 12541  0140DC  0100               	movlb	0	; () banked
 12542  0140DE  35A3               	rlcf	(___fladd@f2+2)& (0+255),w,b
 12543  0140E0  35A4               	rlcf	(___fladd@f2+3)& (0+255),w,b
 12544  0140E2  0100               	movlb	0	; () banked
 12545  0140E4  6FA7               	movwf	___fladd@exp2& (0+255),b
 12546  0140E6  0100               	movlb	0	; () banked
 12547  0140E8  51A8               	movf	___fladd@exp1& (0+255),w,b
 12548  0140EA  0100               	movlb	0	; () banked
 12549  0140EC  B4D8               	btfsc	status,2,c
 12550  0140EE  D011               	goto	l1314
 12551                           
 12552                           ; BSR set to: 0
 12553  0140F0  0100               	movlb	0	; () banked
 12554  0140F2  51A7               	movf	___fladd@exp2& (0+255),w,b
 12555  0140F4  0100               	movlb	0	; () banked
 12556  0140F6  5DA8               	subwf	___fladd@exp1& (0+255),w,b
 12557  0140F8  B0D8               	btfsc	status,0,c
 12558  0140FA  D014               	goto	l7446
 12559                           
 12560                           ; BSR set to: 0
 12561  0140FC  0100               	movlb	0	; () banked
 12562  0140FE  51A8               	movf	___fladd@exp1& (0+255),w,b
 12563  014100  0800               	sublw	0
 12564  014102  0100               	movlb	0	; () banked
 12565  014104  25A7               	addwf	___fladd@exp2& (0+255),w,b
 12566  014106  0100               	movlb	0	; () banked
 12567  014108  6FA5               	movwf	??___fladd& (0+255),b
 12568  01410A  0E20               	movlw	32
 12569  01410C  0100               	movlb	0	; () banked
 12570  01410E  65A5               	cpfsgt	??___fladd& (0+255),b
 12571  014110  D009               	goto	l7446
 12572  014112                     l1314:
 12573                           
 12574                           ; BSR set to: 0
 12575  014112  C0A1  F09D         	movff	___fladd@f2,?___fladd
 12576  014116  C0A2  F09E         	movff	___fladd@f2+1,?___fladd+1
 12577  01411A  C0A3  F09F         	movff	___fladd@f2+2,?___fladd+2
 12578  01411E  C0A4  F0A0         	movff	___fladd@f2+3,?___fladd+3
 12579  014122  0012               	return	
 12580  014124                     l7446:
 12581                           
 12582                           ; BSR set to: 0
 12583  014124  0100               	movlb	0	; () banked
 12584  014126  51A7               	movf	___fladd@exp2& (0+255),w,b
 12585  014128  0100               	movlb	0	; () banked
 12586  01412A  B4D8               	btfsc	status,2,c
 12587  01412C  D011               	goto	l1318
 12588                           
 12589                           ; BSR set to: 0
 12590  01412E  0100               	movlb	0	; () banked
 12591  014130  51A8               	movf	___fladd@exp1& (0+255),w,b
 12592  014132  0100               	movlb	0	; () banked
 12593  014134  5DA7               	subwf	___fladd@exp2& (0+255),w,b
 12594  014136  B0D8               	btfsc	status,0,c
 12595  014138  D014               	goto	l7452
 12596                           
 12597                           ; BSR set to: 0
 12598  01413A  0100               	movlb	0	; () banked
 12599  01413C  51A7               	movf	___fladd@exp2& (0+255),w,b
 12600  01413E  0800               	sublw	0
 12601  014140  0100               	movlb	0	; () banked
 12602  014142  25A8               	addwf	___fladd@exp1& (0+255),w,b
 12603  014144  0100               	movlb	0	; () banked
 12604  014146  6FA5               	movwf	??___fladd& (0+255),b
 12605  014148  0E20               	movlw	32
 12606  01414A  0100               	movlb	0	; () banked
 12607  01414C  65A5               	cpfsgt	??___fladd& (0+255),b
 12608  01414E  D009               	goto	l7452
 12609  014150                     l1318:
 12610                           
 12611                           ; BSR set to: 0
 12612  014150  C09D  F09D         	movff	___fladd@f1,?___fladd
 12613  014154  C09E  F09E         	movff	___fladd@f1+1,?___fladd+1
 12614  014158  C09F  F09F         	movff	___fladd@f1+2,?___fladd+2
 12615  01415C  C0A0  F0A0         	movff	___fladd@f1+3,?___fladd+3
 12616  014160  0012               	return	
 12617  014162                     l7452:
 12618                           
 12619                           ; BSR set to: 0
 12620  014162  0E06               	movlw	6
 12621  014164  0100               	movlb	0	; () banked
 12622  014166  6FA6               	movwf	___fladd@sign& (0+255),b
 12623                           
 12624                           ; BSR set to: 0
 12625  014168  0100               	movlb	0	; () banked
 12626  01416A  AFA0               	btfss	(___fladd@f1+3)& (0+255),7,b
 12627  01416C  D003               	goto	l7458
 12628                           
 12629                           ; BSR set to: 0
 12630  01416E  0100               	movlb	0	; () banked
 12631  014170  8FA6               	bsf	___fladd@sign& (0+255),7,b
 12632  014172  D000               	goto	l7458
 12633  014174                     l7458:
 12634                           
 12635                           ; BSR set to: 0
 12636  014174  0100               	movlb	0	; () banked
 12637  014176  AFA4               	btfss	(___fladd@f2+3)& (0+255),7,b
 12638  014178  D002               	goto	l1320
 12639                           
 12640                           ; BSR set to: 0
 12641  01417A  0100               	movlb	0	; () banked
 12642  01417C  8DA6               	bsf	___fladd@sign& (0+255),6,b
 12643  01417E                     l1320:
 12644                           
 12645                           ; BSR set to: 0
 12646  01417E  0100               	movlb	0	; () banked
 12647  014180  8F9F               	bsf	(___fladd@f1+2)& (0+255),7,b
 12648                           
 12649                           ; BSR set to: 0
 12650  014182  0EFF               	movlw	255
 12651  014184  0100               	movlb	0	; () banked
 12652  014186  179D               	andwf	___fladd@f1& (0+255),f,b
 12653  014188  0EFF               	movlw	255
 12654  01418A  179E               	andwf	(___fladd@f1+1)& (0+255),f,b
 12655  01418C  0EFF               	movlw	255
 12656  01418E  179F               	andwf	(___fladd@f1+2)& (0+255),f,b
 12657  014190  0E00               	movlw	0
 12658  014192  17A0               	andwf	(___fladd@f1+3)& (0+255),f,b
 12659                           
 12660                           ; BSR set to: 0
 12661  014194  0100               	movlb	0	; () banked
 12662  014196  8FA3               	bsf	(___fladd@f2+2)& (0+255),7,b
 12663  014198  0EFF               	movlw	255
 12664  01419A  0100               	movlb	0	; () banked
 12665  01419C  17A1               	andwf	___fladd@f2& (0+255),f,b
 12666  01419E  0EFF               	movlw	255
 12667  0141A0  17A2               	andwf	(___fladd@f2+1)& (0+255),f,b
 12668  0141A2  0EFF               	movlw	255
 12669  0141A4  17A3               	andwf	(___fladd@f2+2)& (0+255),f,b
 12670  0141A6  0E00               	movlw	0
 12671  0141A8  17A4               	andwf	(___fladd@f2+3)& (0+255),f,b
 12672  0141AA  0100               	movlb	0	; () banked
 12673  0141AC  51A7               	movf	___fladd@exp2& (0+255),w,b
 12674  0141AE  0100               	movlb	0	; () banked
 12675  0141B0  5DA8               	subwf	___fladd@exp1& (0+255),w,b
 12676  0141B2  B0D8               	btfsc	status,0,c
 12677  0141B4  D02A               	goto	l7476
 12678  0141B6                     l7466:
 12679                           
 12680                           ; BSR set to: 0
 12681  0141B6  0100               	movlb	0	; () banked
 12682  0141B8  90D8               	bcf	status,0,c
 12683  0141BA  37A1               	rlcf	___fladd@f2& (0+255),f,b
 12684  0141BC  37A2               	rlcf	(___fladd@f2+1)& (0+255),f,b
 12685  0141BE  37A3               	rlcf	(___fladd@f2+2)& (0+255),f,b
 12686  0141C0  37A4               	rlcf	(___fladd@f2+3)& (0+255),f,b
 12687  0141C2  0100               	movlb	0	; () banked
 12688  0141C4  07A7               	decf	___fladd@exp2& (0+255),f,b
 12689                           
 12690                           ; BSR set to: 0
 12691  0141C6  0100               	movlb	0	; () banked
 12692  0141C8  51A8               	movf	___fladd@exp1& (0+255),w,b
 12693  0141CA  0100               	movlb	0	; () banked
 12694  0141CC  19A7               	xorwf	___fladd@exp2& (0+255),w,b
 12695  0141CE  B4D8               	btfsc	status,2,c
 12696  0141D0  D014               	goto	l7474
 12697                           
 12698                           ; BSR set to: 0
 12699  0141D2  0100               	movlb	0	; () banked
 12700  0141D4  07A6               	decf	___fladd@sign& (0+255),f,b
 12701  0141D6  C0A6  F0A5         	movff	___fladd@sign,??___fladd
 12702  0141DA  0E07               	movlw	7
 12703  0141DC  0100               	movlb	0	; () banked
 12704  0141DE  17A5               	andwf	??___fladd& (0+255),f,b
 12705  0141E0  B4D8               	btfsc	status,2,c
 12706  0141E2  D00B               	goto	l7474
 12707  0141E4  D7E8               	goto	l7466
 12708                           
 12709                           ; BSR set to: 0
 12710                           
 12711                           ; BSR set to: 0
 12712  0141E6  D009               	goto	l7474
 12713  0141E8                     l7472:
 12714                           
 12715                           ; BSR set to: 0
 12716  0141E8  0100               	movlb	0	; () banked
 12717  0141EA  90D8               	bcf	status,0,c
 12718  0141EC  33A0               	rrcf	(___fladd@f1+3)& (0+255),f,b
 12719  0141EE  339F               	rrcf	(___fladd@f1+2)& (0+255),f,b
 12720  0141F0  339E               	rrcf	(___fladd@f1+1)& (0+255),f,b
 12721  0141F2  339D               	rrcf	___fladd@f1& (0+255),f,b
 12722  0141F4  0100               	movlb	0	; () banked
 12723  0141F6  2BA8               	incf	___fladd@exp1& (0+255),f,b
 12724  0141F8  D000               	goto	l7474
 12725  0141FA                     l7474:
 12726                           
 12727                           ; BSR set to: 0
 12728  0141FA  0100               	movlb	0	; () banked
 12729  0141FC  51A7               	movf	___fladd@exp2& (0+255),w,b
 12730  0141FE  0100               	movlb	0	; () banked
 12731  014200  19A8               	xorwf	___fladd@exp1& (0+255),w,b
 12732  014202  B4D8               	btfsc	status,2,c
 12733  014204  D032               	goto	l1329
 12734  014206  D7F0               	goto	l7472
 12735                           
 12736                           ; BSR set to: 0
 12737  014208  D030               	goto	l1329
 12738  01420A                     l7476:
 12739                           
 12740                           ; BSR set to: 0
 12741  01420A  0100               	movlb	0	; () banked
 12742  01420C  51A8               	movf	___fladd@exp1& (0+255),w,b
 12743  01420E  0100               	movlb	0	; () banked
 12744  014210  5DA7               	subwf	___fladd@exp2& (0+255),w,b
 12745  014212  B0D8               	btfsc	status,0,c
 12746  014214  D02A               	goto	l1329
 12747  014216                     l7478:
 12748                           
 12749                           ; BSR set to: 0
 12750  014216  0100               	movlb	0	; () banked
 12751  014218  90D8               	bcf	status,0,c
 12752  01421A  379D               	rlcf	___fladd@f1& (0+255),f,b
 12753  01421C  379E               	rlcf	(___fladd@f1+1)& (0+255),f,b
 12754  01421E  379F               	rlcf	(___fladd@f1+2)& (0+255),f,b
 12755  014220  37A0               	rlcf	(___fladd@f1+3)& (0+255),f,b
 12756  014222  0100               	movlb	0	; () banked
 12757  014224  07A8               	decf	___fladd@exp1& (0+255),f,b
 12758                           
 12759                           ; BSR set to: 0
 12760  014226  0100               	movlb	0	; () banked
 12761  014228  51A8               	movf	___fladd@exp1& (0+255),w,b
 12762  01422A  0100               	movlb	0	; () banked
 12763  01422C  19A7               	xorwf	___fladd@exp2& (0+255),w,b
 12764  01422E  B4D8               	btfsc	status,2,c
 12765  014230  D014               	goto	l7486
 12766                           
 12767                           ; BSR set to: 0
 12768  014232  0100               	movlb	0	; () banked
 12769  014234  07A6               	decf	___fladd@sign& (0+255),f,b
 12770  014236  C0A6  F0A5         	movff	___fladd@sign,??___fladd
 12771  01423A  0E07               	movlw	7
 12772  01423C  0100               	movlb	0	; () banked
 12773  01423E  17A5               	andwf	??___fladd& (0+255),f,b
 12774  014240  B4D8               	btfsc	status,2,c
 12775  014242  D00B               	goto	l7486
 12776  014244  D7E8               	goto	l7478
 12777                           
 12778                           ; BSR set to: 0
 12779                           
 12780                           ; BSR set to: 0
 12781  014246  D009               	goto	l7486
 12782  014248                     l7484:
 12783                           
 12784                           ; BSR set to: 0
 12785  014248  0100               	movlb	0	; () banked
 12786  01424A  90D8               	bcf	status,0,c
 12787  01424C  33A4               	rrcf	(___fladd@f2+3)& (0+255),f,b
 12788  01424E  33A3               	rrcf	(___fladd@f2+2)& (0+255),f,b
 12789  014250  33A2               	rrcf	(___fladd@f2+1)& (0+255),f,b
 12790  014252  33A1               	rrcf	___fladd@f2& (0+255),f,b
 12791  014254  0100               	movlb	0	; () banked
 12792  014256  2BA7               	incf	___fladd@exp2& (0+255),f,b
 12793  014258  D000               	goto	l7486
 12794  01425A                     l7486:
 12795                           
 12796                           ; BSR set to: 0
 12797  01425A  0100               	movlb	0	; () banked
 12798  01425C  51A7               	movf	___fladd@exp2& (0+255),w,b
 12799  01425E  0100               	movlb	0	; () banked
 12800  014260  19A8               	xorwf	___fladd@exp1& (0+255),w,b
 12801  014262  B4D8               	btfsc	status,2,c
 12802  014264  D002               	goto	l1329
 12803  014266  D7F0               	goto	l7484
 12804                           
 12805                           ; BSR set to: 0
 12806  014268  D000               	goto	l1329
 12807  01426A                     l1329:
 12808                           
 12809                           ; BSR set to: 0
 12810  01426A  0100               	movlb	0	; () banked
 12811  01426C  AFA6               	btfss	___fladd@sign& (0+255),7,b
 12812  01426E  D011               	goto	l7490
 12813                           
 12814                           ; BSR set to: 0
 12815  014270  0EFF               	movlw	255
 12816  014272  0100               	movlb	0	; () banked
 12817  014274  1B9D               	xorwf	___fladd@f1& (0+255),f,b
 12818  014276  0EFF               	movlw	255
 12819  014278  1B9E               	xorwf	(___fladd@f1+1)& (0+255),f,b
 12820  01427A  0EFF               	movlw	255
 12821  01427C  1B9F               	xorwf	(___fladd@f1+2)& (0+255),f,b
 12822  01427E  0EFF               	movlw	255
 12823  014280  1BA0               	xorwf	(___fladd@f1+3)& (0+255),f,b
 12824  014282  0E01               	movlw	1
 12825  014284  0100               	movlb	0	; () banked
 12826  014286  279D               	addwf	___fladd@f1& (0+255),f,b
 12827  014288  0E00               	movlw	0
 12828  01428A  239E               	addwfc	(___fladd@f1+1)& (0+255),f,b
 12829  01428C  239F               	addwfc	(___fladd@f1+2)& (0+255),f,b
 12830  01428E  23A0               	addwfc	(___fladd@f1+3)& (0+255),f,b
 12831  014290  D000               	goto	l7490
 12832  014292                     l7490:
 12833                           
 12834                           ; BSR set to: 0
 12835  014292  0100               	movlb	0	; () banked
 12836  014294  ADA6               	btfss	___fladd@sign& (0+255),6,b
 12837  014296  D011               	goto	l7494
 12838                           
 12839                           ; BSR set to: 0
 12840  014298  0EFF               	movlw	255
 12841  01429A  0100               	movlb	0	; () banked
 12842  01429C  1BA1               	xorwf	___fladd@f2& (0+255),f,b
 12843  01429E  0EFF               	movlw	255
 12844  0142A0  1BA2               	xorwf	(___fladd@f2+1)& (0+255),f,b
 12845  0142A2  0EFF               	movlw	255
 12846  0142A4  1BA3               	xorwf	(___fladd@f2+2)& (0+255),f,b
 12847  0142A6  0EFF               	movlw	255
 12848  0142A8  1BA4               	xorwf	(___fladd@f2+3)& (0+255),f,b
 12849  0142AA  0E01               	movlw	1
 12850  0142AC  0100               	movlb	0	; () banked
 12851  0142AE  27A1               	addwf	___fladd@f2& (0+255),f,b
 12852  0142B0  0E00               	movlw	0
 12853  0142B2  23A2               	addwfc	(___fladd@f2+1)& (0+255),f,b
 12854  0142B4  23A3               	addwfc	(___fladd@f2+2)& (0+255),f,b
 12855  0142B6  23A4               	addwfc	(___fladd@f2+3)& (0+255),f,b
 12856  0142B8  D000               	goto	l7494
 12857  0142BA                     l7494:
 12858                           
 12859                           ; BSR set to: 0
 12860  0142BA  0E00               	movlw	0
 12861  0142BC  0100               	movlb	0	; () banked
 12862  0142BE  6FA6               	movwf	___fladd@sign& (0+255),b
 12863                           
 12864                           ; BSR set to: 0
 12865  0142C0  0100               	movlb	0	; () banked
 12866  0142C2  519D               	movf	___fladd@f1& (0+255),w,b
 12867  0142C4  0100               	movlb	0	; () banked
 12868  0142C6  27A1               	addwf	___fladd@f2& (0+255),f,b
 12869  0142C8  0100               	movlb	0	; () banked
 12870  0142CA  519E               	movf	(___fladd@f1+1)& (0+255),w,b
 12871  0142CC  0100               	movlb	0	; () banked
 12872  0142CE  23A2               	addwfc	(___fladd@f2+1)& (0+255),f,b
 12873  0142D0  0100               	movlb	0	; () banked
 12874  0142D2  519F               	movf	(___fladd@f1+2)& (0+255),w,b
 12875  0142D4  0100               	movlb	0	; () banked
 12876  0142D6  23A3               	addwfc	(___fladd@f2+2)& (0+255),f,b
 12877  0142D8  0100               	movlb	0	; () banked
 12878  0142DA  51A0               	movf	(___fladd@f1+3)& (0+255),w,b
 12879  0142DC  0100               	movlb	0	; () banked
 12880  0142DE  23A4               	addwfc	(___fladd@f2+3)& (0+255),f,b
 12881                           
 12882                           ; BSR set to: 0
 12883  0142E0  0100               	movlb	0	; () banked
 12884  0142E2  AFA4               	btfss	(___fladd@f2+3)& (0+255),7,b
 12885  0142E4  D014               	goto	l7504
 12886                           
 12887                           ; BSR set to: 0
 12888  0142E6  0EFF               	movlw	255
 12889  0142E8  0100               	movlb	0	; () banked
 12890  0142EA  1BA1               	xorwf	___fladd@f2& (0+255),f,b
 12891  0142EC  0EFF               	movlw	255
 12892  0142EE  1BA2               	xorwf	(___fladd@f2+1)& (0+255),f,b
 12893  0142F0  0EFF               	movlw	255
 12894  0142F2  1BA3               	xorwf	(___fladd@f2+2)& (0+255),f,b
 12895  0142F4  0EFF               	movlw	255
 12896  0142F6  1BA4               	xorwf	(___fladd@f2+3)& (0+255),f,b
 12897  0142F8  0E01               	movlw	1
 12898  0142FA  0100               	movlb	0	; () banked
 12899  0142FC  27A1               	addwf	___fladd@f2& (0+255),f,b
 12900  0142FE  0E00               	movlw	0
 12901  014300  23A2               	addwfc	(___fladd@f2+1)& (0+255),f,b
 12902  014302  23A3               	addwfc	(___fladd@f2+2)& (0+255),f,b
 12903  014304  23A4               	addwfc	(___fladd@f2+3)& (0+255),f,b
 12904                           
 12905                           ; BSR set to: 0
 12906  014306  0E01               	movlw	1
 12907  014308  0100               	movlb	0	; () banked
 12908  01430A  6FA6               	movwf	___fladd@sign& (0+255),b
 12909  01430C  D000               	goto	l7504
 12910  01430E                     l7504:
 12911                           
 12912                           ; BSR set to: 0
 12913  01430E  C0A1  F072         	movff	___fladd@f2,___flpack@arg
 12914  014312  C0A2  F073         	movff	___fladd@f2+1,___flpack@arg+1
 12915  014316  C0A3  F074         	movff	___fladd@f2+2,___flpack@arg+2
 12916  01431A  C0A4  F075         	movff	___fladd@f2+3,___flpack@arg+3
 12917  01431E  C0A8  F076         	movff	___fladd@exp1,___flpack@exp
 12918  014322  C0A6  F077         	movff	___fladd@sign,___flpack@sign
 12919  014326  EC08  F0A5         	call	___flpack	;wreg free
 12920  01432A  C072  F09D         	movff	?___flpack,?___fladd
 12921  01432E  C073  F09E         	movff	?___flpack+1,?___fladd+1
 12922  014332  C074  F09F         	movff	?___flpack+2,?___fladd+2
 12923  014336  C075  F0A0         	movff	?___flpack+3,?___fladd+3
 12924  01433A  0012               	return	
 12925  01433C  0012               	return		;funcret
 12926  01433E                     __end_of___fladd:
 12927                           	opt stack 0
 12928                           tblptru	equ	0xFF8
 12929                           tblptrh	equ	0xFF7
 12930                           tblptrl	equ	0xFF6
 12931                           tablat	equ	0xFF5
 12932                           prodh	equ	0xFF4
 12933                           prodl	equ	0xFF3
 12934                           intcon	equ	0xFF2
 12935                           postinc0	equ	0xFEE
 12936                           wreg	equ	0xFE8
 12937                           indf2	equ	0xFDF
 12938                           postinc2	equ	0xFDE
 12939                           fsr2h	equ	0xFDA
 12940                           fsr2l	equ	0xFD9
 12941                           status	equ	0xFD8
 12942                           
 12943 ;; *************** function ___flneg *****************
 12944 ;; Defined at:
 12945 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flneg.c"
 12946 ;; Parameters:    Size  Location     Type
 12947 ;;  f1              4   48[BANK0 ] unsigned char 
 12948 ;; Auto vars:     Size  Location     Type
 12949 ;;		None
 12950 ;; Return value:  Size  Location     Type
 12951 ;;                  4   48[BANK0 ] unsigned char 
 12952 ;; Registers used:
 12953 ;;		wreg, status,2, status,0
 12954 ;; Tracked objects:
 12955 ;;		On entry : 0/0
 12956 ;;		On exit  : 0/0
 12957 ;;		Unchanged: 0/0
 12958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12959 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12962 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12963 ;;Total ram usage:        4 bytes
 12964 ;; Hardware stack levels used:    1
 12965 ;; Hardware stack levels required when called:    3
 12966 ;; This function calls:
 12967 ;;		Nothing
 12968 ;; This function is called by:
 12969 ;;		_main
 12970 ;;		_sprintf
 12971 ;; This function uses a non-reentrant model
 12972 ;;
 12973                           
 12974                           	psect	text27
 12975  015CF0                     __ptext27:
 12976                           	opt stack 0
 12977  015CF0                     ___flneg:
 12978                           	opt stack 27
 12979                           
 12980                           ;incstack = 0
 12981  015CF0  0100               	movlb	0	; () banked
 12982  015CF2  5190               	movf	___flneg@f1& (0+255),w,b
 12983  015CF4  0100               	movlb	0	; () banked
 12984  015CF6  1191               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12985  015CF8  0100               	movlb	0	; () banked
 12986  015CFA  1192               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12987  015CFC  0100               	movlb	0	; () banked
 12988  015CFE  1193               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12989  015D00  B4D8               	btfsc	status,2,c
 12990  015D02  D00A               	goto	l7884
 12991                           
 12992                           ; BSR set to: 0
 12993  015D04  0E00               	movlw	0
 12994  015D06  0100               	movlb	0	; () banked
 12995  015D08  1B90               	xorwf	___flneg@f1& (0+255),f,b
 12996  015D0A  0E00               	movlw	0
 12997  015D0C  1B91               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12998  015D0E  0E00               	movlw	0
 12999  015D10  1B92               	xorwf	(___flneg@f1+2)& (0+255),f,b
 13000  015D12  0E80               	movlw	128
 13001  015D14  1B93               	xorwf	(___flneg@f1+3)& (0+255),f,b
 13002  015D16  D000               	goto	l7884
 13003  015D18                     l7884:
 13004                           
 13005                           ; BSR set to: 0
 13006  015D18  C090  F090         	movff	___flneg@f1,?___flneg
 13007  015D1C  C091  F091         	movff	___flneg@f1+1,?___flneg+1
 13008  015D20  C092  F092         	movff	___flneg@f1+2,?___flneg+2
 13009  015D24  C093  F093         	movff	___flneg@f1+3,?___flneg+3
 13010  015D28  0012               	return	
 13011                           
 13012                           ; BSR set to: 0
 13013                           
 13014                           ; BSR set to: 0
 13015  015D2A  0012               	return		;funcret
 13016  015D2C                     __end_of___flneg:
 13017                           	opt stack 0
 13018                           tblptru	equ	0xFF8
 13019                           tblptrh	equ	0xFF7
 13020                           tblptrl	equ	0xFF6
 13021                           tablat	equ	0xFF5
 13022                           prodh	equ	0xFF4
 13023                           prodl	equ	0xFF3
 13024                           intcon	equ	0xFF2
 13025                           postinc0	equ	0xFEE
 13026                           wreg	equ	0xFE8
 13027                           indf2	equ	0xFDF
 13028                           postinc2	equ	0xFDE
 13029                           fsr2h	equ	0xFDA
 13030                           fsr2l	equ	0xFD9
 13031                           status	equ	0xFD8
 13032                           
 13033 ;; *************** function ___flge *****************
 13034 ;; Defined at:
 13035 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flge.c"
 13036 ;; Parameters:    Size  Location     Type
 13037 ;;  ff1             4   18[BANK0 ] unsigned char 
 13038 ;;  ff2             4   22[BANK0 ] unsigned char 
 13039 ;; Auto vars:     Size  Location     Type
 13040 ;;		None
 13041 ;; Return value:  Size  Location     Type
 13042 ;;		None               void
 13043 ;; Registers used:
 13044 ;;		wreg, status,2, status,0
 13045 ;; Tracked objects:
 13046 ;;		On entry : 0/0
 13047 ;;		On exit  : 0/0
 13048 ;;		Unchanged: 0/0
 13049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13050 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13052 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13053 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13054 ;;Total ram usage:       12 bytes
 13055 ;; Hardware stack levels used:    1
 13056 ;; Hardware stack levels required when called:    3
 13057 ;; This function calls:
 13058 ;;		Nothing
 13059 ;; This function is called by:
 13060 ;;		_sprintf
 13061 ;; This function uses a non-reentrant model
 13062 ;;
 13063                           
 13064                           	psect	text28
 13065  0150B2                     __ptext28:
 13066                           	opt stack 0
 13067  0150B2                     ___flge:
 13068                           	opt stack 25
 13069                           
 13070                           ; BSR set to: 0
 13071                           ;incstack = 0
 13072  0150B2  0100               	movlb	0	; () banked
 13073  0150B4  AF75               	btfss	(___flge@ff1+3)& (0+255),7,b
 13074  0150B6  D027               	goto	l7870
 13075                           
 13076                           ; BSR set to: 0
 13077  0150B8  C072  F07A         	movff	___flge@ff1,??___flge
 13078  0150BC  C073  F07B         	movff	___flge@ff1+1,??___flge+1
 13079  0150C0  C074  F07C         	movff	___flge@ff1+2,??___flge+2
 13080  0150C4  C075  F07D         	movff	___flge@ff1+3,??___flge+3
 13081  0150C8  0100               	movlb	0	; () banked
 13082  0150CA  1F7A               	comf	??___flge& (0+255),f,b
 13083  0150CC  1F7B               	comf	(??___flge+1)& (0+255),f,b
 13084  0150CE  1F7C               	comf	(??___flge+2)& (0+255),f,b
 13085  0150D0  1F7D               	comf	(??___flge+3)& (0+255),f,b
 13086  0150D2  2B7A               	incf	??___flge& (0+255),f,b
 13087  0150D4  0E00               	movlw	0
 13088  0150D6  237B               	addwfc	(??___flge+1)& (0+255),f,b
 13089  0150D8  237C               	addwfc	(??___flge+2)& (0+255),f,b
 13090  0150DA  237D               	addwfc	(??___flge+3)& (0+255),f,b
 13091  0150DC  0E00               	movlw	0
 13092  0150DE  0100               	movlb	0	; () banked
 13093  0150E0  257A               	addwf	??___flge& (0+255),w,b
 13094  0150E2  0100               	movlb	0	; () banked
 13095  0150E4  6F72               	movwf	___flge@ff1& (0+255),b
 13096  0150E6  0E00               	movlw	0
 13097  0150E8  0100               	movlb	0	; () banked
 13098  0150EA  217B               	addwfc	(??___flge+1)& (0+255),w,b
 13099  0150EC  0100               	movlb	0	; () banked
 13100  0150EE  6F73               	movwf	(___flge@ff1+1)& (0+255),b
 13101  0150F0  0E00               	movlw	0
 13102  0150F2  0100               	movlb	0	; () banked
 13103  0150F4  217C               	addwfc	(??___flge+2)& (0+255),w,b
 13104  0150F6  0100               	movlb	0	; () banked
 13105  0150F8  6F74               	movwf	(___flge@ff1+2)& (0+255),b
 13106  0150FA  0E80               	movlw	128
 13107  0150FC  0100               	movlb	0	; () banked
 13108  0150FE  217D               	addwfc	(??___flge+3)& (0+255),w,b
 13109  015100  0100               	movlb	0	; () banked
 13110  015102  6F75               	movwf	(___flge@ff1+3)& (0+255),b
 13111  015104  D000               	goto	l7870
 13112  015106                     l7870:
 13113                           
 13114                           ; BSR set to: 0
 13115  015106  0100               	movlb	0	; () banked
 13116  015108  AF79               	btfss	(___flge@ff2+3)& (0+255),7,b
 13117  01510A  D026               	goto	l1371
 13118                           
 13119                           ; BSR set to: 0
 13120  01510C  C076  F07A         	movff	___flge@ff2,??___flge
 13121  015110  C077  F07B         	movff	___flge@ff2+1,??___flge+1
 13122  015114  C078  F07C         	movff	___flge@ff2+2,??___flge+2
 13123  015118  C079  F07D         	movff	___flge@ff2+3,??___flge+3
 13124  01511C  0100               	movlb	0	; () banked
 13125  01511E  1F7A               	comf	??___flge& (0+255),f,b
 13126  015120  1F7B               	comf	(??___flge+1)& (0+255),f,b
 13127  015122  1F7C               	comf	(??___flge+2)& (0+255),f,b
 13128  015124  1F7D               	comf	(??___flge+3)& (0+255),f,b
 13129  015126  2B7A               	incf	??___flge& (0+255),f,b
 13130  015128  0E00               	movlw	0
 13131  01512A  237B               	addwfc	(??___flge+1)& (0+255),f,b
 13132  01512C  237C               	addwfc	(??___flge+2)& (0+255),f,b
 13133  01512E  237D               	addwfc	(??___flge+3)& (0+255),f,b
 13134  015130  0E00               	movlw	0
 13135  015132  0100               	movlb	0	; () banked
 13136  015134  257A               	addwf	??___flge& (0+255),w,b
 13137  015136  0100               	movlb	0	; () banked
 13138  015138  6F76               	movwf	___flge@ff2& (0+255),b
 13139  01513A  0E00               	movlw	0
 13140  01513C  0100               	movlb	0	; () banked
 13141  01513E  217B               	addwfc	(??___flge+1)& (0+255),w,b
 13142  015140  0100               	movlb	0	; () banked
 13143  015142  6F77               	movwf	(___flge@ff2+1)& (0+255),b
 13144  015144  0E00               	movlw	0
 13145  015146  0100               	movlb	0	; () banked
 13146  015148  217C               	addwfc	(??___flge+2)& (0+255),w,b
 13147  01514A  0100               	movlb	0	; () banked
 13148  01514C  6F78               	movwf	(___flge@ff2+2)& (0+255),b
 13149  01514E  0E80               	movlw	128
 13150  015150  0100               	movlb	0	; () banked
 13151  015152  217D               	addwfc	(??___flge+3)& (0+255),w,b
 13152  015154  0100               	movlb	0	; () banked
 13153  015156  6F79               	movwf	(___flge@ff2+3)& (0+255),b
 13154  015158                     l1371:
 13155                           
 13156                           ; BSR set to: 0
 13157  015158  0E00               	movlw	0
 13158  01515A  0100               	movlb	0	; () banked
 13159  01515C  1B72               	xorwf	___flge@ff1& (0+255),f,b
 13160  01515E  0E00               	movlw	0
 13161  015160  1B73               	xorwf	(___flge@ff1+1)& (0+255),f,b
 13162  015162  0E00               	movlw	0
 13163  015164  1B74               	xorwf	(___flge@ff1+2)& (0+255),f,b
 13164  015166  0E80               	movlw	128
 13165  015168  1B75               	xorwf	(___flge@ff1+3)& (0+255),f,b
 13166  01516A  0E00               	movlw	0
 13167  01516C  0100               	movlb	0	; () banked
 13168  01516E  1B76               	xorwf	___flge@ff2& (0+255),f,b
 13169  015170  0E00               	movlw	0
 13170  015172  1B77               	xorwf	(___flge@ff2+1)& (0+255),f,b
 13171  015174  0E00               	movlw	0
 13172  015176  1B78               	xorwf	(___flge@ff2+2)& (0+255),f,b
 13173  015178  0E80               	movlw	128
 13174  01517A  1B79               	xorwf	(___flge@ff2+3)& (0+255),f,b
 13175  01517C  0100               	movlb	0	; () banked
 13176  01517E  5176               	movf	___flge@ff2& (0+255),w,b
 13177  015180  0100               	movlb	0	; () banked
 13178  015182  5D72               	subwf	___flge@ff1& (0+255),w,b
 13179  015184  0100               	movlb	0	; () banked
 13180  015186  5177               	movf	(___flge@ff2+1)& (0+255),w,b
 13181  015188  0100               	movlb	0	; () banked
 13182  01518A  5973               	subwfb	(___flge@ff1+1)& (0+255),w,b
 13183  01518C  0100               	movlb	0	; () banked
 13184  01518E  5178               	movf	(___flge@ff2+2)& (0+255),w,b
 13185  015190  0100               	movlb	0	; () banked
 13186  015192  5974               	subwfb	(___flge@ff1+2)& (0+255),w,b
 13187  015194  0100               	movlb	0	; () banked
 13188  015196  5179               	movf	(___flge@ff2+3)& (0+255),w,b
 13189  015198  0100               	movlb	0	; () banked
 13190  01519A  5975               	subwfb	(___flge@ff1+3)& (0+255),w,b
 13191  01519C  B0D8               	btfsc	status,0,c
 13192  01519E  D002               	goto	l7876
 13193                           
 13194                           ; BSR set to: 0
 13195  0151A0  90D8               	bcf	status,0,c
 13196  0151A2  0012               	return	
 13197  0151A4                     l7876:
 13198                           
 13199                           ; BSR set to: 0
 13200  0151A4  80D8               	bsf	status,0,c
 13201                           
 13202                           ; BSR set to: 0
 13203  0151A6  0012               	return	
 13204                           
 13205                           ; BSR set to: 0
 13206                           
 13207                           ; BSR set to: 0
 13208  0151A8  0012               	return		;funcret
 13209  0151AA                     __end_of___flge:
 13210                           	opt stack 0
 13211                           tblptru	equ	0xFF8
 13212                           tblptrh	equ	0xFF7
 13213                           tblptrl	equ	0xFF6
 13214                           tablat	equ	0xFF5
 13215                           prodh	equ	0xFF4
 13216                           prodl	equ	0xFF3
 13217                           intcon	equ	0xFF2
 13218                           postinc0	equ	0xFEE
 13219                           wreg	equ	0xFE8
 13220                           indf2	equ	0xFDF
 13221                           postinc2	equ	0xFDE
 13222                           fsr2h	equ	0xFDA
 13223                           fsr2l	equ	0xFD9
 13224                           status	equ	0xFD8
 13225                           
 13226 ;; *************** function ___lwtofl *****************
 13227 ;; Defined at:
 13228 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtofl.c"
 13229 ;; Parameters:    Size  Location     Type
 13230 ;;  c               2   28[BANK0 ] unsigned int 
 13231 ;; Auto vars:     Size  Location     Type
 13232 ;;		None
 13233 ;; Return value:  Size  Location     Type
 13234 ;;                  4   28[BANK0 ] unsigned int 
 13235 ;; Registers used:
 13236 ;;		wreg, status,2, status,0, cstack
 13237 ;; Tracked objects:
 13238 ;;		On entry : 0/0
 13239 ;;		On exit  : 0/0
 13240 ;;		Unchanged: 0/0
 13241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13242 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13245 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13246 ;;Total ram usage:        4 bytes
 13247 ;; Hardware stack levels used:    1
 13248 ;; Hardware stack levels required when called:    4
 13249 ;; This function calls:
 13250 ;;		___flpack
 13251 ;; This function is called by:
 13252 ;;		_LCD_Handler
 13253 ;; This function uses a non-reentrant model
 13254 ;;
 13255                           
 13256                           	psect	text29
 13257  015E78                     __ptext29:
 13258                           	opt stack 0
 13259  015E78                     ___lwtofl:
 13260                           	opt stack 25
 13261                           
 13262                           ; BSR set to: 0
 13263                           ;incstack = 0
 13264  015E78  C07C  F072         	movff	___lwtofl@c,___flpack@arg
 13265  015E7C  C07D  F073         	movff	___lwtofl@c+1,___flpack@arg+1
 13266  015E80  0100               	movlb	0	; () banked
 13267  015E82  6B74               	clrf	(___flpack@arg+2)& (0+255),b
 13268  015E84  6B75               	clrf	(___flpack@arg+3)& (0+255),b
 13269  015E86  0E96               	movlw	150
 13270  015E88  0100               	movlb	0	; () banked
 13271  015E8A  6F76               	movwf	___flpack@exp& (0+255),b
 13272  015E8C  0E00               	movlw	0
 13273  015E8E  0100               	movlb	0	; () banked
 13274  015E90  6F77               	movwf	___flpack@sign& (0+255),b
 13275  015E92  EC08  F0A5         	call	___flpack	;wreg free
 13276  015E96  C072  F07C         	movff	?___flpack,?___lwtofl
 13277  015E9A  C073  F07D         	movff	?___flpack+1,?___lwtofl+1
 13278  015E9E  C074  F07E         	movff	?___flpack+2,?___lwtofl+2
 13279  015EA2  C075  F07F         	movff	?___flpack+3,?___lwtofl+3
 13280  015EA6  0012               	return	
 13281  015EA8  0012               	return		;funcret
 13282  015EAA                     __end_of___lwtofl:
 13283                           	opt stack 0
 13284                           tblptru	equ	0xFF8
 13285                           tblptrh	equ	0xFF7
 13286                           tblptrl	equ	0xFF6
 13287                           tablat	equ	0xFF5
 13288                           prodh	equ	0xFF4
 13289                           prodl	equ	0xFF3
 13290                           intcon	equ	0xFF2
 13291                           postinc0	equ	0xFEE
 13292                           wreg	equ	0xFE8
 13293                           indf2	equ	0xFDF
 13294                           postinc2	equ	0xFDE
 13295                           fsr2h	equ	0xFDA
 13296                           fsr2l	equ	0xFD9
 13297                           status	equ	0xFD8
 13298                           
 13299 ;; *************** function ___fldiv *****************
 13300 ;; Defined at:
 13301 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldiv.c"
 13302 ;; Parameters:    Size  Location     Type
 13303 ;;  f1              4   32[BANK0 ] unsigned int 
 13304 ;;  f2              4   36[BANK0 ] unsigned int 
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;  f3              4   40[BANK0 ] unsigned int 
 13307 ;;  sign            1   46[BANK0 ] unsigned char 
 13308 ;;  exp             1   45[BANK0 ] unsigned char 
 13309 ;;  cntr            1   44[BANK0 ] unsigned char 
 13310 ;; Return value:  Size  Location     Type
 13311 ;;                  4   32[BANK0 ] unsigned char 
 13312 ;; Registers used:
 13313 ;;		wreg, status,2, status,0, cstack
 13314 ;; Tracked objects:
 13315 ;;		On entry : 0/0
 13316 ;;		On exit  : 0/0
 13317 ;;		Unchanged: 0/0
 13318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13319 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13320 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13322 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13323 ;;Total ram usage:       15 bytes
 13324 ;; Hardware stack levels used:    1
 13325 ;; Hardware stack levels required when called:    4
 13326 ;; This function calls:
 13327 ;;		___flpack
 13328 ;; This function is called by:
 13329 ;;		_LCD_Handler
 13330 ;; This function uses a non-reentrant model
 13331 ;;
 13332                           
 13333                           	psect	text30
 13334  014E62                     __ptext30:
 13335                           	opt stack 0
 13336  014E62                     ___fldiv:
 13337                           	opt stack 25
 13338                           
 13339                           ;incstack = 0
 13340  014E62  0100               	movlb	0	; () banked
 13341  014E64  3582               	rlcf	(___fldiv@f1+2)& (0+255),w,b
 13342  014E66  3583               	rlcf	(___fldiv@f1+3)& (0+255),w,b
 13343  014E68  0100               	movlb	0	; () banked
 13344  014E6A  6F8D               	movwf	___fldiv@exp& (0+255),b
 13345  014E6C  0100               	movlb	0	; () banked
 13346  014E6E  518D               	movf	___fldiv@exp& (0+255),w,b
 13347  014E70  A4D8               	btfss	status,2,c
 13348  014E72  D00A               	goto	l8270
 13349                           
 13350                           ; BSR set to: 0
 13351  014E74  0E00               	movlw	0
 13352  014E76  0100               	movlb	0	; () banked
 13353  014E78  6F80               	movwf	?___fldiv& (0+255),b
 13354  014E7A  0E00               	movlw	0
 13355  014E7C  6F81               	movwf	(?___fldiv+1)& (0+255),b
 13356  014E7E  0E00               	movlw	0
 13357  014E80  6F82               	movwf	(?___fldiv+2)& (0+255),b
 13358  014E82  0E00               	movlw	0
 13359  014E84  6F83               	movwf	(?___fldiv+3)& (0+255),b
 13360                           
 13361                           ; BSR set to: 0
 13362  014E86  0012               	return	
 13363  014E88                     l8270:
 13364                           
 13365                           ; BSR set to: 0
 13366  014E88  0100               	movlb	0	; () banked
 13367  014E8A  3586               	rlcf	(___fldiv@f2+2)& (0+255),w,b
 13368  014E8C  3587               	rlcf	(___fldiv@f2+3)& (0+255),w,b
 13369  014E8E  0100               	movlb	0	; () banked
 13370  014E90  6F8E               	movwf	___fldiv@sign& (0+255),b
 13371  014E92  0100               	movlb	0	; () banked
 13372  014E94  518E               	movf	___fldiv@sign& (0+255),w,b
 13373  014E96  A4D8               	btfss	status,2,c
 13374  014E98  D00A               	goto	l8276
 13375                           
 13376                           ; BSR set to: 0
 13377  014E9A  0E00               	movlw	0
 13378  014E9C  0100               	movlb	0	; () banked
 13379  014E9E  6F80               	movwf	?___fldiv& (0+255),b
 13380  014EA0  0E00               	movlw	0
 13381  014EA2  6F81               	movwf	(?___fldiv+1)& (0+255),b
 13382  014EA4  0E00               	movlw	0
 13383  014EA6  6F82               	movwf	(?___fldiv+2)& (0+255),b
 13384  014EA8  0E00               	movlw	0
 13385  014EAA  6F83               	movwf	(?___fldiv+3)& (0+255),b
 13386                           
 13387                           ; BSR set to: 0
 13388  014EAC  0012               	return	
 13389  014EAE                     l8276:
 13390                           
 13391                           ; BSR set to: 0
 13392  014EAE  0100               	movlb	0	; () banked
 13393  014EB0  518E               	movf	___fldiv@sign& (0+255),w,b
 13394  014EB2  0F89               	addlw	137
 13395  014EB4  0100               	movlb	0	; () banked
 13396  014EB6  5F8D               	subwf	___fldiv@exp& (0+255),f,b
 13397                           
 13398                           ; BSR set to: 0
 13399  014EB8  C083  F08E         	movff	___fldiv@f1+3,___fldiv@sign
 13400  014EBC  0100               	movlb	0	; () banked
 13401  014EBE  5187               	movf	(___fldiv@f2+3)& (0+255),w,b
 13402  014EC0  0100               	movlb	0	; () banked
 13403  014EC2  1B8E               	xorwf	___fldiv@sign& (0+255),f,b
 13404  014EC4  0E80               	movlw	128
 13405  014EC6  0100               	movlb	0	; () banked
 13406  014EC8  178E               	andwf	___fldiv@sign& (0+255),f,b
 13407                           
 13408                           ; BSR set to: 0
 13409  014ECA  0100               	movlb	0	; () banked
 13410  014ECC  8F82               	bsf	(___fldiv@f1+2)& (0+255),7,b
 13411                           
 13412                           ; BSR set to: 0
 13413  014ECE  0EFF               	movlw	255
 13414  014ED0  0100               	movlb	0	; () banked
 13415  014ED2  1780               	andwf	___fldiv@f1& (0+255),f,b
 13416  014ED4  0EFF               	movlw	255
 13417  014ED6  1781               	andwf	(___fldiv@f1+1)& (0+255),f,b
 13418  014ED8  0EFF               	movlw	255
 13419  014EDA  1782               	andwf	(___fldiv@f1+2)& (0+255),f,b
 13420  014EDC  0E00               	movlw	0
 13421  014EDE  1783               	andwf	(___fldiv@f1+3)& (0+255),f,b
 13422  014EE0  0100               	movlb	0	; () banked
 13423  014EE2  8F86               	bsf	(___fldiv@f2+2)& (0+255),7,b
 13424                           
 13425                           ; BSR set to: 0
 13426  014EE4  0EFF               	movlw	255
 13427  014EE6  0100               	movlb	0	; () banked
 13428  014EE8  1784               	andwf	___fldiv@f2& (0+255),f,b
 13429  014EEA  0EFF               	movlw	255
 13430  014EEC  1785               	andwf	(___fldiv@f2+1)& (0+255),f,b
 13431  014EEE  0EFF               	movlw	255
 13432  014EF0  1786               	andwf	(___fldiv@f2+2)& (0+255),f,b
 13433  014EF2  0E00               	movlw	0
 13434  014EF4  1787               	andwf	(___fldiv@f2+3)& (0+255),f,b
 13435                           
 13436                           ; BSR set to: 0
 13437  014EF6  0E20               	movlw	32
 13438  014EF8  0100               	movlb	0	; () banked
 13439  014EFA  6F8C               	movwf	___fldiv@cntr& (0+255),b
 13440  014EFC  D000               	goto	l8288
 13441  014EFE                     l8288:
 13442                           
 13443                           ; BSR set to: 0
 13444  014EFE  0100               	movlb	0	; () banked
 13445  014F00  90D8               	bcf	status,0,c
 13446  014F02  3788               	rlcf	___fldiv@f3& (0+255),f,b
 13447  014F04  3789               	rlcf	(___fldiv@f3+1)& (0+255),f,b
 13448  014F06  378A               	rlcf	(___fldiv@f3+2)& (0+255),f,b
 13449  014F08  378B               	rlcf	(___fldiv@f3+3)& (0+255),f,b
 13450                           
 13451                           ; BSR set to: 0
 13452  014F0A  0100               	movlb	0	; () banked
 13453  014F0C  5184               	movf	___fldiv@f2& (0+255),w,b
 13454  014F0E  0100               	movlb	0	; () banked
 13455  014F10  5D80               	subwf	___fldiv@f1& (0+255),w,b
 13456  014F12  0100               	movlb	0	; () banked
 13457  014F14  5185               	movf	(___fldiv@f2+1)& (0+255),w,b
 13458  014F16  0100               	movlb	0	; () banked
 13459  014F18  5981               	subwfb	(___fldiv@f1+1)& (0+255),w,b
 13460  014F1A  0100               	movlb	0	; () banked
 13461  014F1C  5186               	movf	(___fldiv@f2+2)& (0+255),w,b
 13462  014F1E  0100               	movlb	0	; () banked
 13463  014F20  5982               	subwfb	(___fldiv@f1+2)& (0+255),w,b
 13464  014F22  0100               	movlb	0	; () banked
 13465  014F24  5187               	movf	(___fldiv@f2+3)& (0+255),w,b
 13466  014F26  0100               	movlb	0	; () banked
 13467  014F28  5983               	subwfb	(___fldiv@f1+3)& (0+255),w,b
 13468  014F2A  A0D8               	btfss	status,0,c
 13469  014F2C  D013               	goto	l8296
 13470                           
 13471                           ; BSR set to: 0
 13472  014F2E  0100               	movlb	0	; () banked
 13473  014F30  5184               	movf	___fldiv@f2& (0+255),w,b
 13474  014F32  0100               	movlb	0	; () banked
 13475  014F34  5F80               	subwf	___fldiv@f1& (0+255),f,b
 13476  014F36  0100               	movlb	0	; () banked
 13477  014F38  5185               	movf	(___fldiv@f2+1)& (0+255),w,b
 13478  014F3A  0100               	movlb	0	; () banked
 13479  014F3C  5B81               	subwfb	(___fldiv@f1+1)& (0+255),f,b
 13480  014F3E  0100               	movlb	0	; () banked
 13481  014F40  5186               	movf	(___fldiv@f2+2)& (0+255),w,b
 13482  014F42  0100               	movlb	0	; () banked
 13483  014F44  5B82               	subwfb	(___fldiv@f1+2)& (0+255),f,b
 13484  014F46  0100               	movlb	0	; () banked
 13485  014F48  5187               	movf	(___fldiv@f2+3)& (0+255),w,b
 13486  014F4A  0100               	movlb	0	; () banked
 13487  014F4C  5B83               	subwfb	(___fldiv@f1+3)& (0+255),f,b
 13488                           
 13489                           ; BSR set to: 0
 13490  014F4E  0100               	movlb	0	; () banked
 13491  014F50  8188               	bsf	___fldiv@f3& (0+255),0,b
 13492  014F52  D000               	goto	l8296
 13493  014F54                     l8296:
 13494                           
 13495                           ; BSR set to: 0
 13496  014F54  0100               	movlb	0	; () banked
 13497  014F56  90D8               	bcf	status,0,c
 13498  014F58  3780               	rlcf	___fldiv@f1& (0+255),f,b
 13499  014F5A  3781               	rlcf	(___fldiv@f1+1)& (0+255),f,b
 13500  014F5C  3782               	rlcf	(___fldiv@f1+2)& (0+255),f,b
 13501  014F5E  3783               	rlcf	(___fldiv@f1+3)& (0+255),f,b
 13502                           
 13503                           ; BSR set to: 0
 13504  014F60  0100               	movlb	0	; () banked
 13505  014F62  2F8C               	decfsz	___fldiv@cntr& (0+255),f,b
 13506  014F64  D7CC               	goto	l8288
 13507  014F66  D000               	goto	l8300
 13508  014F68                     l8300:
 13509                           
 13510                           ; BSR set to: 0
 13511  014F68  C088  F072         	movff	___fldiv@f3,___flpack@arg
 13512  014F6C  C089  F073         	movff	___fldiv@f3+1,___flpack@arg+1
 13513  014F70  C08A  F074         	movff	___fldiv@f3+2,___flpack@arg+2
 13514  014F74  C08B  F075         	movff	___fldiv@f3+3,___flpack@arg+3
 13515  014F78  C08D  F076         	movff	___fldiv@exp,___flpack@exp
 13516  014F7C  C08E  F077         	movff	___fldiv@sign,___flpack@sign
 13517  014F80  EC08  F0A5         	call	___flpack	;wreg free
 13518  014F84  C072  F080         	movff	?___flpack,?___fldiv
 13519  014F88  C073  F081         	movff	?___flpack+1,?___fldiv+1
 13520  014F8C  C074  F082         	movff	?___flpack+2,?___fldiv+2
 13521  014F90  C075  F083         	movff	?___flpack+3,?___fldiv+3
 13522  014F94  0012               	return	
 13523  014F96  0012               	return		;funcret
 13524  014F98                     __end_of___fldiv:
 13525                           	opt stack 0
 13526                           tblptru	equ	0xFF8
 13527                           tblptrh	equ	0xFF7
 13528                           tblptrl	equ	0xFF6
 13529                           tablat	equ	0xFF5
 13530                           prodh	equ	0xFF4
 13531                           prodl	equ	0xFF3
 13532                           intcon	equ	0xFF2
 13533                           postinc0	equ	0xFEE
 13534                           wreg	equ	0xFE8
 13535                           indf2	equ	0xFDF
 13536                           postinc2	equ	0xFDE
 13537                           fsr2h	equ	0xFDA
 13538                           fsr2l	equ	0xFD9
 13539                           status	equ	0xFD8
 13540                           
 13541 ;; *************** function ___flpack *****************
 13542 ;; Defined at:
 13543 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\double.c"
 13544 ;; Parameters:    Size  Location     Type
 13545 ;;  arg             4   18[BANK0 ] unsigned long 
 13546 ;;  exp             1   22[BANK0 ] unsigned char 
 13547 ;;  sign            1   23[BANK0 ] unsigned char 
 13548 ;; Auto vars:     Size  Location     Type
 13549 ;;		None
 13550 ;; Return value:  Size  Location     Type
 13551 ;;                  4   18[BANK0 ] unsigned char 
 13552 ;; Registers used:
 13553 ;;		wreg, status,2, status,0
 13554 ;; Tracked objects:
 13555 ;;		On entry : 0/0
 13556 ;;		On exit  : 0/0
 13557 ;;		Unchanged: 0/0
 13558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13559 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13561 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13562 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13563 ;;Total ram usage:       10 bytes
 13564 ;; Hardware stack levels used:    1
 13565 ;; Hardware stack levels required when called:    3
 13566 ;; This function calls:
 13567 ;;		Nothing
 13568 ;; This function is called by:
 13569 ;;		___awtofl
 13570 ;;		___fladd
 13571 ;;		___fldiv
 13572 ;;		___flmul
 13573 ;;		___lbtofl
 13574 ;;		___lltofl
 13575 ;;		___lwtofl
 13576 ;; This function uses a non-reentrant model
 13577 ;;
 13578                           
 13579                           	psect	text31
 13580  014A10                     __ptext31:
 13581                           	opt stack 0
 13582  014A10                     ___flpack:
 13583                           	opt stack 26
 13584                           
 13585                           ;incstack = 0
 13586  014A10  0100               	movlb	0	; () banked
 13587  014A12  5176               	movf	___flpack@exp& (0+255),w,b
 13588  014A14  0100               	movlb	0	; () banked
 13589  014A16  B4D8               	btfsc	status,2,c
 13590  014A18  D00A               	goto	l7392
 13591                           
 13592                           ; BSR set to: 0
 13593  014A1A  0100               	movlb	0	; () banked
 13594  014A1C  5172               	movf	___flpack@arg& (0+255),w,b
 13595  014A1E  0100               	movlb	0	; () banked
 13596  014A20  1173               	iorwf	(___flpack@arg+1)& (0+255),w,b
 13597  014A22  0100               	movlb	0	; () banked
 13598  014A24  1174               	iorwf	(___flpack@arg+2)& (0+255),w,b
 13599  014A26  0100               	movlb	0	; () banked
 13600  014A28  1175               	iorwf	(___flpack@arg+3)& (0+255),w,b
 13601  014A2A  A4D8               	btfss	status,2,c
 13602  014A2C  D014               	goto	l7398
 13603  014A2E                     l7392:
 13604                           
 13605                           ; BSR set to: 0
 13606  014A2E  0E00               	movlw	0
 13607  014A30  0100               	movlb	0	; () banked
 13608  014A32  6F72               	movwf	?___flpack& (0+255),b
 13609  014A34  0E00               	movlw	0
 13610  014A36  6F73               	movwf	(?___flpack+1)& (0+255),b
 13611  014A38  0E00               	movlw	0
 13612  014A3A  6F74               	movwf	(?___flpack+2)& (0+255),b
 13613  014A3C  0E00               	movlw	0
 13614  014A3E  6F75               	movwf	(?___flpack+3)& (0+255),b
 13615                           
 13616                           ; BSR set to: 0
 13617  014A40  0012               	return	
 13618                           
 13619                           ; BSR set to: 0
 13620  014A42  D009               	goto	l7398
 13621  014A44                     l7396:
 13622                           
 13623                           ; BSR set to: 0
 13624  014A44  0100               	movlb	0	; () banked
 13625  014A46  2B76               	incf	___flpack@exp& (0+255),f,b
 13626  014A48  0100               	movlb	0	; () banked
 13627  014A4A  90D8               	bcf	status,0,c
 13628  014A4C  3375               	rrcf	(___flpack@arg+3)& (0+255),f,b
 13629  014A4E  3374               	rrcf	(___flpack@arg+2)& (0+255),f,b
 13630  014A50  3373               	rrcf	(___flpack@arg+1)& (0+255),f,b
 13631  014A52  3372               	rrcf	___flpack@arg& (0+255),f,b
 13632  014A54  D000               	goto	l7398
 13633  014A56                     l7398:
 13634                           
 13635                           ; BSR set to: 0
 13636  014A56  0E00               	movlw	0
 13637  014A58  0100               	movlb	0	; () banked
 13638  014A5A  1572               	andwf	___flpack@arg& (0+255),w,b
 13639  014A5C  0100               	movlb	0	; () banked
 13640  014A5E  6F78               	movwf	??___flpack& (0+255),b
 13641  014A60  0E00               	movlw	0
 13642  014A62  0100               	movlb	0	; () banked
 13643  014A64  1573               	andwf	(___flpack@arg+1)& (0+255),w,b
 13644  014A66  0100               	movlb	0	; () banked
 13645  014A68  6F79               	movwf	(??___flpack+1)& (0+255),b
 13646  014A6A  0E00               	movlw	0
 13647  014A6C  0100               	movlb	0	; () banked
 13648  014A6E  1574               	andwf	(___flpack@arg+2)& (0+255),w,b
 13649  014A70  0100               	movlb	0	; () banked
 13650  014A72  6F7A               	movwf	(??___flpack+2)& (0+255),b
 13651  014A74  0EFE               	movlw	254
 13652  014A76  0100               	movlb	0	; () banked
 13653  014A78  1575               	andwf	(___flpack@arg+3)& (0+255),w,b
 13654  014A7A  0100               	movlb	0	; () banked
 13655  014A7C  6F7B               	movwf	(??___flpack+3)& (0+255),b
 13656  014A7E  0100               	movlb	0	; () banked
 13657  014A80  5178               	movf	??___flpack& (0+255),w,b
 13658  014A82  0100               	movlb	0	; () banked
 13659  014A84  1179               	iorwf	(??___flpack+1)& (0+255),w,b
 13660  014A86  0100               	movlb	0	; () banked
 13661  014A88  117A               	iorwf	(??___flpack+2)& (0+255),w,b
 13662  014A8A  0100               	movlb	0	; () banked
 13663  014A8C  117B               	iorwf	(??___flpack+3)& (0+255),w,b
 13664  014A8E  B4D8               	btfsc	status,2,c
 13665  014A90  D011               	goto	l1298
 13666  014A92  D7D8               	goto	l7396
 13667                           
 13668                           ; BSR set to: 0
 13669  014A94  D00F               	goto	l1298
 13670  014A96                     l7400:
 13671                           
 13672                           ; BSR set to: 0
 13673  014A96  0100               	movlb	0	; () banked
 13674  014A98  2B76               	incf	___flpack@exp& (0+255),f,b
 13675                           
 13676                           ; BSR set to: 0
 13677  014A9A  0E01               	movlw	1
 13678  014A9C  0100               	movlb	0	; () banked
 13679  014A9E  2772               	addwf	___flpack@arg& (0+255),f,b
 13680  014AA0  0E00               	movlw	0
 13681  014AA2  2373               	addwfc	(___flpack@arg+1)& (0+255),f,b
 13682  014AA4  2374               	addwfc	(___flpack@arg+2)& (0+255),f,b
 13683  014AA6  2375               	addwfc	(___flpack@arg+3)& (0+255),f,b
 13684                           
 13685                           ; BSR set to: 0
 13686  014AA8  0100               	movlb	0	; () banked
 13687  014AAA  90D8               	bcf	status,0,c
 13688  014AAC  3375               	rrcf	(___flpack@arg+3)& (0+255),f,b
 13689  014AAE  3374               	rrcf	(___flpack@arg+2)& (0+255),f,b
 13690  014AB0  3373               	rrcf	(___flpack@arg+1)& (0+255),f,b
 13691  014AB2  3372               	rrcf	___flpack@arg& (0+255),f,b
 13692  014AB4                     l1298:
 13693                           
 13694                           ; BSR set to: 0
 13695  014AB4  0E00               	movlw	0
 13696  014AB6  0100               	movlb	0	; () banked
 13697  014AB8  1572               	andwf	___flpack@arg& (0+255),w,b
 13698  014ABA  0100               	movlb	0	; () banked
 13699  014ABC  6F78               	movwf	??___flpack& (0+255),b
 13700  014ABE  0E00               	movlw	0
 13701  014AC0  0100               	movlb	0	; () banked
 13702  014AC2  1573               	andwf	(___flpack@arg+1)& (0+255),w,b
 13703  014AC4  0100               	movlb	0	; () banked
 13704  014AC6  6F79               	movwf	(??___flpack+1)& (0+255),b
 13705  014AC8  0E00               	movlw	0
 13706  014ACA  0100               	movlb	0	; () banked
 13707  014ACC  1574               	andwf	(___flpack@arg+2)& (0+255),w,b
 13708  014ACE  0100               	movlb	0	; () banked
 13709  014AD0  6F7A               	movwf	(??___flpack+2)& (0+255),b
 13710  014AD2  0EFF               	movlw	255
 13711  014AD4  0100               	movlb	0	; () banked
 13712  014AD6  1575               	andwf	(___flpack@arg+3)& (0+255),w,b
 13713  014AD8  0100               	movlb	0	; () banked
 13714  014ADA  6F7B               	movwf	(??___flpack+3)& (0+255),b
 13715  014ADC  0100               	movlb	0	; () banked
 13716  014ADE  5178               	movf	??___flpack& (0+255),w,b
 13717  014AE0  0100               	movlb	0	; () banked
 13718  014AE2  1179               	iorwf	(??___flpack+1)& (0+255),w,b
 13719  014AE4  0100               	movlb	0	; () banked
 13720  014AE6  117A               	iorwf	(??___flpack+2)& (0+255),w,b
 13721  014AE8  0100               	movlb	0	; () banked
 13722  014AEA  117B               	iorwf	(??___flpack+3)& (0+255),w,b
 13723  014AEC  B4D8               	btfsc	status,2,c
 13724  014AEE  D00B               	goto	l7408
 13725  014AF0  D7D2               	goto	l7400
 13726                           
 13727                           ; BSR set to: 0
 13728  014AF2  D009               	goto	l7408
 13729  014AF4                     l7406:
 13730                           
 13731                           ; BSR set to: 0
 13732  014AF4  0100               	movlb	0	; () banked
 13733  014AF6  0776               	decf	___flpack@exp& (0+255),f,b
 13734  014AF8  0100               	movlb	0	; () banked
 13735  014AFA  90D8               	bcf	status,0,c
 13736  014AFC  3772               	rlcf	___flpack@arg& (0+255),f,b
 13737  014AFE  3773               	rlcf	(___flpack@arg+1)& (0+255),f,b
 13738  014B00  3774               	rlcf	(___flpack@arg+2)& (0+255),f,b
 13739  014B02  3775               	rlcf	(___flpack@arg+3)& (0+255),f,b
 13740  014B04  D000               	goto	l7408
 13741  014B06                     l7408:
 13742                           
 13743                           ; BSR set to: 0
 13744  014B06  0100               	movlb	0	; () banked
 13745  014B08  BF74               	btfsc	(___flpack@arg+2)& (0+255),7,b
 13746  014B0A  D005               	goto	l1305
 13747                           
 13748                           ; BSR set to: 0
 13749  014B0C  0E02               	movlw	2
 13750  014B0E  0100               	movlb	0	; () banked
 13751  014B10  6176               	cpfslt	___flpack@exp& (0+255),b
 13752  014B12  D7F0               	goto	l7406
 13753  014B14  D000               	goto	l1305
 13754  014B16                     l1305:
 13755                           
 13756                           ; BSR set to: 0
 13757  014B16  0100               	movlb	0	; () banked
 13758  014B18  B176               	btfsc	___flpack@exp& (0+255),0,b
 13759  014B1A  D009               	goto	l1306
 13760                           
 13761                           ; BSR set to: 0
 13762  014B1C  0EFF               	movlw	255
 13763  014B1E  0100               	movlb	0	; () banked
 13764  014B20  1772               	andwf	___flpack@arg& (0+255),f,b
 13765  014B22  0EFF               	movlw	255
 13766  014B24  1773               	andwf	(___flpack@arg+1)& (0+255),f,b
 13767  014B26  0E7F               	movlw	127
 13768  014B28  1774               	andwf	(___flpack@arg+2)& (0+255),f,b
 13769  014B2A  0EFF               	movlw	255
 13770  014B2C  1775               	andwf	(___flpack@arg+3)& (0+255),f,b
 13771  014B2E                     l1306:
 13772                           
 13773                           ; BSR set to: 0
 13774  014B2E  0100               	movlb	0	; () banked
 13775  014B30  90D8               	bcf	status,0,c
 13776  014B32  3376               	rrcf	___flpack@exp& (0+255),f,b
 13777  014B34  C076  F078         	movff	___flpack@exp,??___flpack
 13778  014B38  0100               	movlb	0	; () banked
 13779  014B3A  6B79               	clrf	(??___flpack+1)& (0+255),b
 13780  014B3C  6B7A               	clrf	(??___flpack+2)& (0+255),b
 13781  014B3E  6B7B               	clrf	(??___flpack+3)& (0+255),b
 13782  014B40  C078  F07B         	movff	??___flpack,??___flpack+3
 13783  014B44  0100               	movlb	0	; () banked
 13784  014B46  6B7A               	clrf	(??___flpack+2)& (0+255),b
 13785  014B48  6B79               	clrf	(??___flpack+1)& (0+255),b
 13786  014B4A  6B78               	clrf	??___flpack& (0+255),b
 13787  014B4C  0100               	movlb	0	; () banked
 13788  014B4E  5178               	movf	??___flpack& (0+255),w,b
 13789  014B50  0100               	movlb	0	; () banked
 13790  014B52  1372               	iorwf	___flpack@arg& (0+255),f,b
 13791  014B54  0100               	movlb	0	; () banked
 13792  014B56  5179               	movf	(??___flpack+1)& (0+255),w,b
 13793  014B58  0100               	movlb	0	; () banked
 13794  014B5A  1373               	iorwf	(___flpack@arg+1)& (0+255),f,b
 13795  014B5C  0100               	movlb	0	; () banked
 13796  014B5E  517A               	movf	(??___flpack+2)& (0+255),w,b
 13797  014B60  0100               	movlb	0	; () banked
 13798  014B62  1374               	iorwf	(___flpack@arg+2)& (0+255),f,b
 13799  014B64  0100               	movlb	0	; () banked
 13800  014B66  517B               	movf	(??___flpack+3)& (0+255),w,b
 13801  014B68  0100               	movlb	0	; () banked
 13802  014B6A  1375               	iorwf	(___flpack@arg+3)& (0+255),f,b
 13803                           
 13804                           ; BSR set to: 0
 13805  014B6C  0100               	movlb	0	; () banked
 13806  014B6E  5177               	movf	___flpack@sign& (0+255),w,b
 13807  014B70  0100               	movlb	0	; () banked
 13808  014B72  B4D8               	btfsc	status,2,c
 13809  014B74  D003               	goto	l7418
 13810                           
 13811                           ; BSR set to: 0
 13812  014B76  0100               	movlb	0	; () banked
 13813  014B78  8F75               	bsf	(___flpack@arg+3)& (0+255),7,b
 13814  014B7A  D000               	goto	l7418
 13815  014B7C                     l7418:
 13816                           
 13817                           ; BSR set to: 0
 13818  014B7C  C072  F072         	movff	___flpack@arg,?___flpack
 13819  014B80  C073  F073         	movff	___flpack@arg+1,?___flpack+1
 13820  014B84  C074  F074         	movff	___flpack@arg+2,?___flpack+2
 13821  014B88  C075  F075         	movff	___flpack@arg+3,?___flpack+3
 13822  014B8C  0012               	return	
 13823                           
 13824                           ; BSR set to: 0
 13825                           
 13826                           ; BSR set to: 0
 13827  014B8E  0012               	return		;funcret
 13828  014B90                     __end_of___flpack:
 13829                           	opt stack 0
 13830                           tblptru	equ	0xFF8
 13831                           tblptrh	equ	0xFF7
 13832                           tblptrl	equ	0xFF6
 13833                           tablat	equ	0xFF5
 13834                           prodh	equ	0xFF4
 13835                           prodl	equ	0xFF3
 13836                           intcon	equ	0xFF2
 13837                           postinc0	equ	0xFEE
 13838                           wreg	equ	0xFE8
 13839                           indf2	equ	0xFDF
 13840                           postinc2	equ	0xFDE
 13841                           fsr2h	equ	0xFDA
 13842                           fsr2l	equ	0xFD9
 13843                           status	equ	0xFD8
 13844                           
 13845 ;; *************** function _LCD_write_integer *****************
 13846 ;; Defined at:
 13847 ;;		line 210 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13848 ;; Parameters:    Size  Location     Type
 13849 ;;  value           2   42[BANK0 ] int 
 13850 ;;  number_of_di    1   44[BANK0 ] unsigned char 
 13851 ;;  zero_cleanin    1   45[BANK0 ] unsigned char 
 13852 ;; Auto vars:     Size  Location     Type
 13853 ;;  convertedInt    6   51[BANK0 ] unsigned char [6]
 13854 ;;  index           1   57[BANK0 ] unsigned char 
 13855 ;; Return value:  Size  Location     Type
 13856 ;;		None               void
 13857 ;; Registers used:
 13858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13859 ;; Tracked objects:
 13860 ;;		On entry : 0/0
 13861 ;;		On exit  : 0/0
 13862 ;;		Unchanged: 0/0
 13863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13864 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13865 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13866 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13867 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13868 ;;Total ram usage:       16 bytes
 13869 ;; Hardware stack levels used:    1
 13870 ;; Hardware stack levels required when called:    9
 13871 ;; This function calls:
 13872 ;;		_LCD_write_string
 13873 ;;		_itoa
 13874 ;; This function is called by:
 13875 ;;		_LCD_Handler
 13876 ;; This function uses a non-reentrant model
 13877 ;;
 13878                           
 13879                           	psect	text32
 13880  01450C                     __ptext32:
 13881                           	opt stack 0
 13882  01450C                     _LCD_write_integer:
 13883                           	opt stack 20
 13884                           
 13885                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 13886                           
 13887                           ; BSR set to: 0
 13888                           ;incstack = 0
 13889  01450C  EE21  F000         	lfsr	2,LCD_write_integer@F17326
 13890  014510  EE10  F093         	lfsr	1,LCD_write_integer@convertedInt
 13891  014514  0E05               	movlw	5
 13892  014516                     u10151:
 13893  014516  CFDB FFE3          	movff	plusw2,plusw1
 13894  01451A  06E8               	decf	wreg,f,c
 13895  01451C  E2FC               	bc	u10151
 13896                           
 13897                           ;src\LCD_44780.c: 216: unsigned char index;
 13898                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 13899  01451E  0E93               	movlw	low LCD_write_integer@convertedInt
 13900  014520  0100               	movlb	0	; () banked
 13901  014522  6F82               	movwf	itoa@buf& (0+255),b
 13902  014524  0E00               	movlw	high LCD_write_integer@convertedInt
 13903  014526  0100               	movlb	0	; () banked
 13904  014528  6F83               	movwf	(itoa@buf+1)& (0+255),b
 13905  01452A  C08A  F084         	movff	LCD_write_integer@value,itoa@val
 13906  01452E  C08B  F085         	movff	LCD_write_integer@value+1,itoa@val+1
 13907  014532  0E00               	movlw	0
 13908  014534  0100               	movlb	0	; () banked
 13909  014536  6F87               	movwf	(itoa@base+1)& (0+255),b
 13910  014538  0E0A               	movlw	10
 13911  01453A  6F86               	movwf	itoa@base& (0+255),b
 13912  01453C  EC10  F0AE         	call	_itoa	;wreg free
 13913                           
 13914                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 13915  014540  0100               	movlb	0	; () banked
 13916  014542  518C               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13917  014544  0100               	movlb	0	; () banked
 13918  014546  B4D8               	btfsc	status,2,c
 13919  014548  D0BD               	goto	l8014
 13920                           
 13921                           ; BSR set to: 0
 13922                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 13923  01454A  0100               	movlb	0	; () banked
 13924  01454C  518C               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13925  01454E  0D01               	mullw	1
 13926  014550  0E93               	movlw	low LCD_write_integer@convertedInt
 13927  014552  24F3               	addwf	prodl,w,c
 13928  014554  6ED9               	movwf	fsr2l,c
 13929  014556  0E00               	movlw	high LCD_write_integer@convertedInt
 13930  014558  20F4               	addwfc	prodh,w,c
 13931  01455A  6EDA               	movwf	fsr2h,c
 13932  01455C  0E00               	movlw	0
 13933  01455E  6EDF               	movwf	indf2,c
 13934                           
 13935                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 13936  014560  D074               	goto	l8010
 13937  014562                     l7992:
 13938                           
 13939                           ; BSR set to: 0
 13940                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 13941  014562  0100               	movlb	0	; () banked
 13942  014564  058C               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 13943  014566  0100               	movlb	0	; () banked
 13944  014568  6F99               	movwf	LCD_write_integer@index& (0+255),b
 13945  01456A                     l7994:
 13946                           
 13947                           ; BSR set to: 0
 13948  01456A  0100               	movlb	0	; () banked
 13949  01456C  5199               	movf	LCD_write_integer@index& (0+255),w,b
 13950  01456E  0100               	movlb	0	; () banked
 13951  014570  B4D8               	btfsc	status,2,c
 13952  014572  D06B               	goto	l8010
 13953  014574  D001               	goto	l7998
 13954                           
 13955                           ; BSR set to: 0
 13956  014576  D069               	goto	l8010
 13957  014578                     l7998:
 13958                           
 13959                           ; BSR set to: 0
 13960                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 13961  014578  0EFF               	movlw	255
 13962  01457A  0100               	movlb	0	; () banked
 13963  01457C  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 13964  01457E  0EFF               	movlw	255
 13965  014580  0100               	movlb	0	; () banked
 13966  014582  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13967  014584  0100               	movlb	0	; () banked
 13968  014586  5199               	movf	LCD_write_integer@index& (0+255),w,b
 13969  014588  0100               	movlb	0	; () banked
 13970  01458A  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13971  01458C  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13972  01458E  0100               	movlb	0	; () banked
 13973  014590  518E               	movf	??_LCD_write_integer& (0+255),w,b
 13974  014592  0100               	movlb	0	; () banked
 13975  014594  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13976  014596  0100               	movlb	0	; () banked
 13977  014598  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13978  01459A  0100               	movlb	0	; () banked
 13979  01459C  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13980  01459E  0E93               	movlw	low LCD_write_integer@convertedInt
 13981  0145A0  0100               	movlb	0	; () banked
 13982  0145A2  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13983  0145A4  6ED9               	movwf	fsr2l,c
 13984  0145A6  0E00               	movlw	high LCD_write_integer@convertedInt
 13985  0145A8  0100               	movlb	0	; () banked
 13986  0145AA  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13987  0145AC  6EDA               	movwf	fsr2h,c
 13988  0145AE  0100               	movlb	0	; () banked
 13989  0145B0  5199               	movf	LCD_write_integer@index& (0+255),w,b
 13990  0145B2  0D01               	mullw	1
 13991  0145B4  0E93               	movlw	low LCD_write_integer@convertedInt
 13992  0145B6  24F3               	addwf	prodl,w,c
 13993  0145B8  6EE1               	movwf	fsr1l,c
 13994  0145BA  0E00               	movlw	high LCD_write_integer@convertedInt
 13995  0145BC  20F4               	addwfc	prodh,w,c
 13996  0145BE  6EE2               	movwf	fsr1h,c
 13997  0145C0  CFDF FFE7          	movff	indf2,indf1
 13998                           
 13999                           ; BSR set to: 0
 14000                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 14001  0145C4  0100               	movlb	0	; () banked
 14002  0145C6  058D               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 14003  0145C8  A4D8               	btfss	status,2,c
 14004  0145CA  D01D               	goto	l8004
 14005                           
 14006                           ; BSR set to: 0
 14007                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 14008  0145CC  0EFF               	movlw	255
 14009  0145CE  0100               	movlb	0	; () banked
 14010  0145D0  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 14011  0145D2  0EFF               	movlw	255
 14012  0145D4  0100               	movlb	0	; () banked
 14013  0145D6  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14014  0145D8  0100               	movlb	0	; () banked
 14015  0145DA  5199               	movf	LCD_write_integer@index& (0+255),w,b
 14016  0145DC  0100               	movlb	0	; () banked
 14017  0145DE  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14018  0145E0  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14019  0145E2  0100               	movlb	0	; () banked
 14020  0145E4  518E               	movf	??_LCD_write_integer& (0+255),w,b
 14021  0145E6  0100               	movlb	0	; () banked
 14022  0145E8  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14023  0145EA  0100               	movlb	0	; () banked
 14024  0145EC  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14025  0145EE  0100               	movlb	0	; () banked
 14026  0145F0  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14027  0145F2  0E93               	movlw	low LCD_write_integer@convertedInt
 14028  0145F4  0100               	movlb	0	; () banked
 14029  0145F6  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14030  0145F8  6ED9               	movwf	fsr2l,c
 14031  0145FA  0E00               	movlw	high LCD_write_integer@convertedInt
 14032  0145FC  0100               	movlb	0	; () banked
 14033  0145FE  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14034  014600  6EDA               	movwf	fsr2h,c
 14035  014602  0E20               	movlw	32
 14036  014604  D01C               	goto	L10
 14037  014606                     l8004:
 14038                           
 14039                           ; BSR set to: 0
 14040                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 14041  014606  0EFF               	movlw	255
 14042  014608  0100               	movlb	0	; () banked
 14043  01460A  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 14044  01460C  0EFF               	movlw	255
 14045  01460E  0100               	movlb	0	; () banked
 14046  014610  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14047  014612  0100               	movlb	0	; () banked
 14048  014614  5199               	movf	LCD_write_integer@index& (0+255),w,b
 14049  014616  0100               	movlb	0	; () banked
 14050  014618  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14051  01461A  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14052  01461C  0100               	movlb	0	; () banked
 14053  01461E  518E               	movf	??_LCD_write_integer& (0+255),w,b
 14054  014620  0100               	movlb	0	; () banked
 14055  014622  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14056  014624  0100               	movlb	0	; () banked
 14057  014626  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14058  014628  0100               	movlb	0	; () banked
 14059  01462A  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14060  01462C  0E93               	movlw	low LCD_write_integer@convertedInt
 14061  01462E  0100               	movlb	0	; () banked
 14062  014630  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14063  014632  6ED9               	movwf	fsr2l,c
 14064  014634  0E00               	movlw	high LCD_write_integer@convertedInt
 14065  014636  0100               	movlb	0	; () banked
 14066  014638  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14067  01463A  6EDA               	movwf	fsr2h,c
 14068  01463C  0E30               	movlw	48
 14069  01463E                     L10:
 14070  01463E  6EDF               	movwf	indf2,c
 14071  014640  D000               	goto	l8006
 14072  014642                     l8006:
 14073                           
 14074                           ; BSR set to: 0
 14075  014642  0100               	movlb	0	; () banked
 14076  014644  0799               	decf	LCD_write_integer@index& (0+255),f,b
 14077  014646  D791               	goto	l7994
 14078                           
 14079                           ; BSR set to: 0
 14080                           
 14081                           ; BSR set to: 0
 14082  014648  D000               	goto	l8010
 14083  01464A                     l8010:
 14084                           
 14085                           ; BSR set to: 0
 14086  01464A  0EFF               	movlw	255
 14087  01464C  0100               	movlb	0	; () banked
 14088  01464E  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 14089  014650  0EFF               	movlw	255
 14090  014652  0100               	movlb	0	; () banked
 14091  014654  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14092  014656  0100               	movlb	0	; () banked
 14093  014658  518C               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14094  01465A  0100               	movlb	0	; () banked
 14095  01465C  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14096  01465E  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14097  014660  0100               	movlb	0	; () banked
 14098  014662  518E               	movf	??_LCD_write_integer& (0+255),w,b
 14099  014664  0100               	movlb	0	; () banked
 14100  014666  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14101  014668  0100               	movlb	0	; () banked
 14102  01466A  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14103  01466C  0100               	movlb	0	; () banked
 14104  01466E  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14105  014670  0E93               	movlw	low LCD_write_integer@convertedInt
 14106  014672  0100               	movlb	0	; () banked
 14107  014674  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14108  014676  6ED9               	movwf	fsr2l,c
 14109  014678  0E00               	movlw	high LCD_write_integer@convertedInt
 14110  01467A  0100               	movlb	0	; () banked
 14111  01467C  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14112  01467E  6EDA               	movwf	fsr2h,c
 14113  014680  0E3A               	movlw	58
 14114  014682  60DF               	cpfslt	indf2,c
 14115  014684  D76E               	goto	l7992
 14116                           
 14117                           ; BSR set to: 0
 14118  014686  0EFF               	movlw	255
 14119  014688  0100               	movlb	0	; () banked
 14120  01468A  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 14121  01468C  0EFF               	movlw	255
 14122  01468E  0100               	movlb	0	; () banked
 14123  014690  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14124  014692  0100               	movlb	0	; () banked
 14125  014694  518C               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14126  014696  0100               	movlb	0	; () banked
 14127  014698  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14128  01469A  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14129  01469C  0100               	movlb	0	; () banked
 14130  01469E  518E               	movf	??_LCD_write_integer& (0+255),w,b
 14131  0146A0  0100               	movlb	0	; () banked
 14132  0146A2  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14133  0146A4  0100               	movlb	0	; () banked
 14134  0146A6  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14135  0146A8  0100               	movlb	0	; () banked
 14136  0146AA  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14137  0146AC  0E93               	movlw	low LCD_write_integer@convertedInt
 14138  0146AE  0100               	movlb	0	; () banked
 14139  0146B0  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14140  0146B2  6ED9               	movwf	fsr2l,c
 14141  0146B4  0E00               	movlw	high LCD_write_integer@convertedInt
 14142  0146B6  0100               	movlb	0	; () banked
 14143  0146B8  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14144  0146BA  6EDA               	movwf	fsr2h,c
 14145  0146BC  0E2F               	movlw	47
 14146  0146BE  64DF               	cpfsgt	indf2,c
 14147  0146C0  D750               	goto	l7992
 14148                           
 14149                           ; BSR set to: 0
 14150  0146C2  D000               	goto	l8014
 14151  0146C4                     l8014:
 14152                           
 14153                           ; BSR set to: 0
 14154                           ;src\LCD_44780.c: 243: }
 14155                           ;src\LCD_44780.c: 245: }
 14156                           ;src\LCD_44780.c: 246: }
 14157                           ;src\LCD_44780.c: 247: }
 14158                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 14159  0146C4  0E93               	movlw	low LCD_write_integer@convertedInt
 14160  0146C6  0100               	movlb	0	; () banked
 14161  0146C8  6F83               	movwf	LCD_write_string@buffer& (0+255),b
 14162  0146CA  0E00               	movlw	high LCD_write_integer@convertedInt
 14163  0146CC  0100               	movlb	0	; () banked
 14164  0146CE  6F84               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 14165  0146D0  EC9E  F0AF         	call	_LCD_write_string	;wreg free
 14166  0146D4  0012               	return		;funcret
 14167  0146D6                     __end_of_LCD_write_integer:
 14168                           	opt stack 0
 14169                           tblptru	equ	0xFF8
 14170                           tblptrh	equ	0xFF7
 14171                           tblptrl	equ	0xFF6
 14172                           tablat	equ	0xFF5
 14173                           prodh	equ	0xFF4
 14174                           prodl	equ	0xFF3
 14175                           intcon	equ	0xFF2
 14176                           postinc0	equ	0xFEE
 14177                           wreg	equ	0xFE8
 14178                           indf1	equ	0xFE7
 14179                           plusw1	equ	0xFE3
 14180                           fsr1h	equ	0xFE2
 14181                           fsr1l	equ	0xFE1
 14182                           indf2	equ	0xFDF
 14183                           postinc2	equ	0xFDE
 14184                           plusw2	equ	0xFDB
 14185                           fsr2h	equ	0xFDA
 14186                           fsr2l	equ	0xFD9
 14187                           status	equ	0xFD8
 14188                           
 14189 ;; *************** function _itoa *****************
 14190 ;; Defined at:
 14191 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\itoa.c"
 14192 ;; Parameters:    Size  Location     Type
 14193 ;;  buf             2   34[BANK0 ] PTR unsigned char 
 14194 ;;		 -> LCD_write_integer@convertedInt(6), 
 14195 ;;  val             2   36[BANK0 ] int 
 14196 ;;  base            2   38[BANK0 ] int 
 14197 ;; Auto vars:     Size  Location     Type
 14198 ;;  cp              2   40[BANK0 ] PTR unsigned char 
 14199 ;;		 -> LCD_write_integer@convertedInt(6), 
 14200 ;; Return value:  Size  Location     Type
 14201 ;;                  2   34[BANK0 ] PTR unsigned char 
 14202 ;; Registers used:
 14203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14204 ;; Tracked objects:
 14205 ;;		On entry : 0/0
 14206 ;;		On exit  : 0/0
 14207 ;;		Unchanged: 0/0
 14208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14209 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14210 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14212 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14213 ;;Total ram usage:        8 bytes
 14214 ;; Hardware stack levels used:    1
 14215 ;; Hardware stack levels required when called:    5
 14216 ;; This function calls:
 14217 ;;		_utoa
 14218 ;; This function is called by:
 14219 ;;		_LCD_write_integer
 14220 ;; This function uses a non-reentrant model
 14221 ;;
 14222                           
 14223                           	psect	text33
 14224  015C20                     __ptext33:
 14225                           	opt stack 0
 14226  015C20                     _itoa:
 14227                           	opt stack 23
 14228                           
 14229                           ;incstack = 0
 14230  015C20  C082  F088         	movff	itoa@buf,itoa@cp
 14231  015C24  C083  F089         	movff	itoa@buf+1,itoa@cp+1
 14232  015C28  0100               	movlb	0	; () banked
 14233  015C2A  AF85               	btfss	(itoa@val+1)& (0+255),7,b
 14234  015C2C  D00F               	goto	l5362
 14235                           
 14236                           ; BSR set to: 0
 14237  015C2E  C082  FFD9         	movff	itoa@buf,fsr2l
 14238  015C32  C083  FFDA         	movff	itoa@buf+1,fsr2h
 14239  015C36  0E2D               	movlw	45
 14240  015C38  6EDF               	movwf	indf2,c
 14241                           
 14242                           ; BSR set to: 0
 14243  015C3A  0100               	movlb	0	; () banked
 14244  015C3C  4B82               	infsnz	itoa@buf& (0+255),f,b
 14245  015C3E  2B83               	incf	(itoa@buf+1)& (0+255),f,b
 14246                           
 14247                           ; BSR set to: 0
 14248  015C40  0100               	movlb	0	; () banked
 14249  015C42  6D84               	negf	itoa@val& (0+255),b
 14250  015C44  1F85               	comf	(itoa@val+1)& (0+255),f,b
 14251  015C46  B0D8               	btfsc	status,0,c
 14252  015C48  2B85               	incf	(itoa@val+1)& (0+255),f,b
 14253  015C4A  D000               	goto	l5362
 14254  015C4C                     l5362:
 14255                           
 14256                           ; BSR set to: 0
 14257  015C4C  C082  F079         	movff	itoa@buf,utoa@buf
 14258  015C50  C083  F07A         	movff	itoa@buf+1,utoa@buf+1
 14259  015C54  C084  F07B         	movff	itoa@val,utoa@val
 14260  015C58  C085  F07C         	movff	itoa@val+1,utoa@val+1
 14261  015C5C  C086  F07D         	movff	itoa@base,utoa@base
 14262  015C60  C087  F07E         	movff	itoa@base+1,utoa@base+1
 14263  015C64  EC17  F0AA         	call	_utoa	;wreg free
 14264  015C68  0012               	return	
 14265                           
 14266                           ;	Return value of _itoa is never used
 14267  015C6A  0012               	return		;funcret
 14268  015C6C                     __end_of_itoa:
 14269                           	opt stack 0
 14270                           tblptru	equ	0xFF8
 14271                           tblptrh	equ	0xFF7
 14272                           tblptrl	equ	0xFF6
 14273                           tablat	equ	0xFF5
 14274                           prodh	equ	0xFF4
 14275                           prodl	equ	0xFF3
 14276                           intcon	equ	0xFF2
 14277                           postinc0	equ	0xFEE
 14278                           wreg	equ	0xFE8
 14279                           indf1	equ	0xFE7
 14280                           plusw1	equ	0xFE3
 14281                           fsr1h	equ	0xFE2
 14282                           fsr1l	equ	0xFE1
 14283                           indf2	equ	0xFDF
 14284                           postinc2	equ	0xFDE
 14285                           plusw2	equ	0xFDB
 14286                           fsr2h	equ	0xFDA
 14287                           fsr2l	equ	0xFD9
 14288                           status	equ	0xFD8
 14289                           
 14290 ;; *************** function _utoa *****************
 14291 ;; Defined at:
 14292 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\itoa.c"
 14293 ;; Parameters:    Size  Location     Type
 14294 ;;  buf             2   25[BANK0 ] PTR unsigned char 
 14295 ;;		 -> LCD_write_integer@convertedInt(6), 
 14296 ;;  val             2   27[BANK0 ] unsigned int 
 14297 ;;  base            2   29[BANK0 ] int 
 14298 ;; Auto vars:     Size  Location     Type
 14299 ;;  v               2   31[BANK0 ] unsigned int 
 14300 ;;  c               1   33[BANK0 ] unsigned char 
 14301 ;; Return value:  Size  Location     Type
 14302 ;;                  2   25[BANK0 ] PTR unsigned char 
 14303 ;; Registers used:
 14304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14305 ;; Tracked objects:
 14306 ;;		On entry : 0/0
 14307 ;;		On exit  : 0/0
 14308 ;;		Unchanged: 0/0
 14309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14310 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14311 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14313 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14314 ;;Total ram usage:        9 bytes
 14315 ;; Hardware stack levels used:    1
 14316 ;; Hardware stack levels required when called:    4
 14317 ;; This function calls:
 14318 ;;		___lwdiv
 14319 ;;		___lwmod
 14320 ;; This function is called by:
 14321 ;;		_itoa
 14322 ;; This function uses a non-reentrant model
 14323 ;;
 14324                           
 14325                           	psect	text34
 14326  01542E                     __ptext34:
 14327                           	opt stack 0
 14328  01542E                     _utoa:
 14329                           	opt stack 23
 14330                           
 14331                           ;incstack = 0
 14332  01542E  C07B  F07F         	movff	utoa@val,utoa@v
 14333  015432  C07C  F080         	movff	utoa@val+1,utoa@v+1
 14334  015436  D000               	goto	l4884
 14335  015438                     l4884:
 14336  015438  C07F  F072         	movff	utoa@v,___lwdiv@dividend
 14337  01543C  C080  F073         	movff	utoa@v+1,___lwdiv@dividend+1
 14338  015440  C07D  F074         	movff	utoa@base,___lwdiv@divisor
 14339  015444  C07E  F075         	movff	utoa@base+1,___lwdiv@divisor+1
 14340  015448  EC22  F0AC         	call	___lwdiv	;wreg free
 14341  01544C  C072  F07F         	movff	?___lwdiv,utoa@v
 14342  015450  C073  F080         	movff	?___lwdiv+1,utoa@v+1
 14343  015454  0100               	movlb	0	; () banked
 14344  015456  4B79               	infsnz	utoa@buf& (0+255),f,b
 14345  015458  2B7A               	incf	(utoa@buf+1)& (0+255),f,b
 14346                           
 14347                           ; BSR set to: 0
 14348  01545A  0100               	movlb	0	; () banked
 14349  01545C  517F               	movf	utoa@v& (0+255),w,b
 14350  01545E  0100               	movlb	0	; () banked
 14351  015460  1180               	iorwf	(utoa@v+1)& (0+255),w,b
 14352  015462  A4D8               	btfss	status,2,c
 14353  015464  D7E9               	goto	l4884
 14354                           
 14355                           ; BSR set to: 0
 14356                           
 14357                           ; BSR set to: 0
 14358  015466  C079  FFD9         	movff	utoa@buf,fsr2l
 14359  01546A  C07A  FFDA         	movff	utoa@buf+1,fsr2h
 14360  01546E  0E00               	movlw	0
 14361  015470  6EDF               	movwf	indf2,c
 14362                           
 14363                           ; BSR set to: 0
 14364  015472  0100               	movlb	0	; () banked
 14365  015474  0779               	decf	utoa@buf& (0+255),f,b
 14366  015476  A0D8               	btfss	status,0,c
 14367  015478  077A               	decf	(utoa@buf+1)& (0+255),f,b
 14368  01547A  D000               	goto	l4894
 14369  01547C                     l4894:
 14370                           
 14371                           ; BSR set to: 0
 14372  01547C  C07B  F072         	movff	utoa@val,___lwmod@dividend
 14373  015480  C07C  F073         	movff	utoa@val+1,___lwmod@dividend+1
 14374  015484  C07D  F074         	movff	utoa@base,___lwmod@divisor
 14375  015488  C07E  F075         	movff	utoa@base+1,___lwmod@divisor+1
 14376  01548C  EC63  F0AC         	call	___lwmod	;wreg free
 14377  015490  0100               	movlb	0	; () banked
 14378  015492  5172               	movf	?___lwmod& (0+255),w,b
 14379  015494  0100               	movlb	0	; () banked
 14380  015496  6F81               	movwf	utoa@c& (0+255),b
 14381                           
 14382                           ; BSR set to: 0
 14383  015498  C07B  F072         	movff	utoa@val,___lwdiv@dividend
 14384  01549C  C07C  F073         	movff	utoa@val+1,___lwdiv@dividend+1
 14385  0154A0  C07D  F074         	movff	utoa@base,___lwdiv@divisor
 14386  0154A4  C07E  F075         	movff	utoa@base+1,___lwdiv@divisor+1
 14387  0154A8  EC22  F0AC         	call	___lwdiv	;wreg free
 14388  0154AC  C072  F07B         	movff	?___lwdiv,utoa@val
 14389  0154B0  C073  F07C         	movff	?___lwdiv+1,utoa@val+1
 14390  0154B4  0E09               	movlw	9
 14391  0154B6  0100               	movlb	0	; () banked
 14392  0154B8  6581               	cpfsgt	utoa@c& (0+255),b
 14393  0154BA  D003               	goto	l1547
 14394                           
 14395                           ; BSR set to: 0
 14396  0154BC  0E07               	movlw	7
 14397  0154BE  0100               	movlb	0	; () banked
 14398  0154C0  2781               	addwf	utoa@c& (0+255),f,b
 14399  0154C2                     l1547:
 14400                           
 14401                           ; BSR set to: 0
 14402  0154C2  0E30               	movlw	48
 14403  0154C4  0100               	movlb	0	; () banked
 14404  0154C6  2781               	addwf	utoa@c& (0+255),f,b
 14405                           
 14406                           ; BSR set to: 0
 14407  0154C8  C079  FFD9         	movff	utoa@buf,fsr2l
 14408  0154CC  C07A  FFDA         	movff	utoa@buf+1,fsr2h
 14409  0154D0  C081  FFDF         	movff	utoa@c,indf2
 14410                           
 14411                           ; BSR set to: 0
 14412  0154D4  0100               	movlb	0	; () banked
 14413  0154D6  0779               	decf	utoa@buf& (0+255),f,b
 14414  0154D8  A0D8               	btfss	status,0,c
 14415  0154DA  077A               	decf	(utoa@buf+1)& (0+255),f,b
 14416                           
 14417                           ; BSR set to: 0
 14418  0154DC  0100               	movlb	0	; () banked
 14419  0154DE  517B               	movf	utoa@val& (0+255),w,b
 14420  0154E0  0100               	movlb	0	; () banked
 14421  0154E2  117C               	iorwf	(utoa@val+1)& (0+255),w,b
 14422  0154E4  A4D8               	btfss	status,2,c
 14423  0154E6  D7CA               	goto	l4894
 14424                           
 14425                           ; BSR set to: 0
 14426                           ;	Return value of _utoa is never used
 14427                           
 14428                           ; BSR set to: 0
 14429  0154E8  0100               	movlb	0	; () banked
 14430  0154EA  4B79               	infsnz	utoa@buf& (0+255),f,b
 14431  0154EC  2B7A               	incf	(utoa@buf+1)& (0+255),f,b
 14432  0154EE  0012               	return	
 14433                           
 14434                           ; BSR set to: 0
 14435                           
 14436                           ; BSR set to: 0
 14437  0154F0  0012               	return		;funcret
 14438  0154F2                     __end_of_utoa:
 14439                           	opt stack 0
 14440                           tblptru	equ	0xFF8
 14441                           tblptrh	equ	0xFF7
 14442                           tblptrl	equ	0xFF6
 14443                           tablat	equ	0xFF5
 14444                           prodh	equ	0xFF4
 14445                           prodl	equ	0xFF3
 14446                           intcon	equ	0xFF2
 14447                           postinc0	equ	0xFEE
 14448                           wreg	equ	0xFE8
 14449                           indf1	equ	0xFE7
 14450                           plusw1	equ	0xFE3
 14451                           fsr1h	equ	0xFE2
 14452                           fsr1l	equ	0xFE1
 14453                           indf2	equ	0xFDF
 14454                           postinc2	equ	0xFDE
 14455                           plusw2	equ	0xFDB
 14456                           fsr2h	equ	0xFDA
 14457                           fsr2l	equ	0xFD9
 14458                           status	equ	0xFD8
 14459                           
 14460 ;; *************** function ___lwmod *****************
 14461 ;; Defined at:
 14462 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
 14463 ;; Parameters:    Size  Location     Type
 14464 ;;  dividend        2   18[BANK0 ] unsigned int 
 14465 ;;  divisor         2   20[BANK0 ] unsigned int 
 14466 ;; Auto vars:     Size  Location     Type
 14467 ;;  counter         1   22[BANK0 ] unsigned char 
 14468 ;; Return value:  Size  Location     Type
 14469 ;;                  2   18[BANK0 ] unsigned int 
 14470 ;; Registers used:
 14471 ;;		wreg, status,2, status,0
 14472 ;; Tracked objects:
 14473 ;;		On entry : 0/0
 14474 ;;		On exit  : 0/0
 14475 ;;		Unchanged: 0/0
 14476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14477 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14478 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14480 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14481 ;;Total ram usage:        5 bytes
 14482 ;; Hardware stack levels used:    1
 14483 ;; Hardware stack levels required when called:    3
 14484 ;; This function calls:
 14485 ;;		Nothing
 14486 ;; This function is called by:
 14487 ;;		_utoa
 14488 ;; This function uses a non-reentrant model
 14489 ;;
 14490                           
 14491                           	psect	text35
 14492  0158C6                     __ptext35:
 14493                           	opt stack 0
 14494  0158C6                     ___lwmod:
 14495                           	opt stack 23
 14496                           
 14497                           ; BSR set to: 0
 14498                           ;incstack = 0
 14499  0158C6  0100               	movlb	0	; () banked
 14500  0158C8  5174               	movf	___lwmod@divisor& (0+255),w,b
 14501  0158CA  0100               	movlb	0	; () banked
 14502  0158CC  1175               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14503  0158CE  B4D8               	btfsc	status,2,c
 14504  0158D0  D02B               	goto	l1651
 14505                           
 14506                           ; BSR set to: 0
 14507  0158D2  0E01               	movlw	1
 14508  0158D4  0100               	movlb	0	; () banked
 14509  0158D6  6F76               	movwf	___lwmod@counter& (0+255),b
 14510  0158D8  D007               	goto	l4656
 14511  0158DA                     l4654:
 14512                           
 14513                           ; BSR set to: 0
 14514  0158DA  0100               	movlb	0	; () banked
 14515  0158DC  90D8               	bcf	status,0,c
 14516  0158DE  3774               	rlcf	___lwmod@divisor& (0+255),f,b
 14517  0158E0  3775               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14518  0158E2  0100               	movlb	0	; () banked
 14519  0158E4  2B76               	incf	___lwmod@counter& (0+255),f,b
 14520  0158E6  D000               	goto	l4656
 14521  0158E8                     l4656:
 14522                           
 14523                           ; BSR set to: 0
 14524  0158E8  0100               	movlb	0	; () banked
 14525  0158EA  BF75               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
 14526  0158EC  D002               	goto	l4658
 14527  0158EE  D7F5               	goto	l4654
 14528                           
 14529                           ; BSR set to: 0
 14530  0158F0  D000               	goto	l4658
 14531  0158F2                     l4658:
 14532                           
 14533                           ; BSR set to: 0
 14534  0158F2  0100               	movlb	0	; () banked
 14535  0158F4  5174               	movf	___lwmod@divisor& (0+255),w,b
 14536  0158F6  0100               	movlb	0	; () banked
 14537  0158F8  5D72               	subwf	___lwmod@dividend& (0+255),w,b
 14538  0158FA  0100               	movlb	0	; () banked
 14539  0158FC  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14540  0158FE  0100               	movlb	0	; () banked
 14541  015900  5973               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14542  015902  A0D8               	btfss	status,0,c
 14543  015904  D009               	goto	l4662
 14544                           
 14545                           ; BSR set to: 0
 14546  015906  0100               	movlb	0	; () banked
 14547  015908  5174               	movf	___lwmod@divisor& (0+255),w,b
 14548  01590A  0100               	movlb	0	; () banked
 14549  01590C  5F72               	subwf	___lwmod@dividend& (0+255),f,b
 14550  01590E  0100               	movlb	0	; () banked
 14551  015910  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14552  015912  0100               	movlb	0	; () banked
 14553  015914  5B73               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14554  015916  D000               	goto	l4662
 14555  015918                     l4662:
 14556                           
 14557                           ; BSR set to: 0
 14558  015918  0100               	movlb	0	; () banked
 14559  01591A  90D8               	bcf	status,0,c
 14560  01591C  3375               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14561  01591E  3374               	rrcf	___lwmod@divisor& (0+255),f,b
 14562                           
 14563                           ; BSR set to: 0
 14564  015920  0100               	movlb	0	; () banked
 14565  015922  2F76               	decfsz	___lwmod@counter& (0+255),f,b
 14566  015924  D7E6               	goto	l4658
 14567  015926  D000               	goto	l1651
 14568  015928                     l1651:
 14569                           
 14570                           ; BSR set to: 0
 14571  015928  C072  F072         	movff	___lwmod@dividend,?___lwmod
 14572  01592C  C073  F073         	movff	___lwmod@dividend+1,?___lwmod+1
 14573                           
 14574                           ; BSR set to: 0
 14575  015930  0012               	return		;funcret
 14576  015932                     __end_of___lwmod:
 14577                           	opt stack 0
 14578                           tblptru	equ	0xFF8
 14579                           tblptrh	equ	0xFF7
 14580                           tblptrl	equ	0xFF6
 14581                           tablat	equ	0xFF5
 14582                           prodh	equ	0xFF4
 14583                           prodl	equ	0xFF3
 14584                           intcon	equ	0xFF2
 14585                           postinc0	equ	0xFEE
 14586                           wreg	equ	0xFE8
 14587                           indf1	equ	0xFE7
 14588                           plusw1	equ	0xFE3
 14589                           fsr1h	equ	0xFE2
 14590                           fsr1l	equ	0xFE1
 14591                           indf2	equ	0xFDF
 14592                           postinc2	equ	0xFDE
 14593                           plusw2	equ	0xFDB
 14594                           fsr2h	equ	0xFDA
 14595                           fsr2l	equ	0xFD9
 14596                           status	equ	0xFD8
 14597                           
 14598 ;; *************** function ___lwdiv *****************
 14599 ;; Defined at:
 14600 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
 14601 ;; Parameters:    Size  Location     Type
 14602 ;;  dividend        2   18[BANK0 ] unsigned int 
 14603 ;;  divisor         2   20[BANK0 ] unsigned int 
 14604 ;; Auto vars:     Size  Location     Type
 14605 ;;  quotient        2   22[BANK0 ] unsigned int 
 14606 ;;  counter         1   24[BANK0 ] unsigned char 
 14607 ;; Return value:  Size  Location     Type
 14608 ;;                  2   18[BANK0 ] unsigned int 
 14609 ;; Registers used:
 14610 ;;		wreg, status,2, status,0
 14611 ;; Tracked objects:
 14612 ;;		On entry : 0/0
 14613 ;;		On exit  : 0/0
 14614 ;;		Unchanged: 0/0
 14615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14616 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14617 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14619 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14620 ;;Total ram usage:        7 bytes
 14621 ;; Hardware stack levels used:    1
 14622 ;; Hardware stack levels required when called:    3
 14623 ;; This function calls:
 14624 ;;		Nothing
 14625 ;; This function is called by:
 14626 ;;		_utoa
 14627 ;; This function uses a non-reentrant model
 14628 ;;
 14629                           
 14630                           	psect	text36
 14631  015844                     __ptext36:
 14632                           	opt stack 0
 14633  015844                     ___lwdiv:
 14634                           	opt stack 23
 14635                           
 14636                           ; BSR set to: 0
 14637                           ;incstack = 0
 14638  015844  0E00               	movlw	0
 14639  015846  0100               	movlb	0	; () banked
 14640  015848  6F77               	movwf	(___lwdiv@quotient+1)& (0+255),b
 14641  01584A  0E00               	movlw	0
 14642  01584C  6F76               	movwf	___lwdiv@quotient& (0+255),b
 14643                           
 14644                           ; BSR set to: 0
 14645  01584E  0100               	movlb	0	; () banked
 14646  015850  5174               	movf	___lwdiv@divisor& (0+255),w,b
 14647  015852  0100               	movlb	0	; () banked
 14648  015854  1175               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 14649  015856  B4D8               	btfsc	status,2,c
 14650  015858  D031               	goto	l1641
 14651                           
 14652                           ; BSR set to: 0
 14653  01585A  0E01               	movlw	1
 14654  01585C  0100               	movlb	0	; () banked
 14655  01585E  6F78               	movwf	___lwdiv@counter& (0+255),b
 14656  015860  D007               	goto	l4636
 14657  015862                     l4634:
 14658                           
 14659                           ; BSR set to: 0
 14660  015862  0100               	movlb	0	; () banked
 14661  015864  90D8               	bcf	status,0,c
 14662  015866  3774               	rlcf	___lwdiv@divisor& (0+255),f,b
 14663  015868  3775               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 14664  01586A  0100               	movlb	0	; () banked
 14665  01586C  2B78               	incf	___lwdiv@counter& (0+255),f,b
 14666  01586E  D000               	goto	l4636
 14667  015870                     l4636:
 14668                           
 14669                           ; BSR set to: 0
 14670  015870  0100               	movlb	0	; () banked
 14671  015872  BF75               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
 14672  015874  D002               	goto	l4638
 14673  015876  D7F5               	goto	l4634
 14674                           
 14675                           ; BSR set to: 0
 14676  015878  D000               	goto	l4638
 14677  01587A                     l4638:
 14678                           
 14679                           ; BSR set to: 0
 14680  01587A  0100               	movlb	0	; () banked
 14681  01587C  90D8               	bcf	status,0,c
 14682  01587E  3776               	rlcf	___lwdiv@quotient& (0+255),f,b
 14683  015880  3777               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 14684                           
 14685                           ; BSR set to: 0
 14686  015882  0100               	movlb	0	; () banked
 14687  015884  5174               	movf	___lwdiv@divisor& (0+255),w,b
 14688  015886  0100               	movlb	0	; () banked
 14689  015888  5D72               	subwf	___lwdiv@dividend& (0+255),w,b
 14690  01588A  0100               	movlb	0	; () banked
 14691  01588C  5175               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14692  01588E  0100               	movlb	0	; () banked
 14693  015890  5973               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 14694  015892  A0D8               	btfss	status,0,c
 14695  015894  D00B               	goto	l4646
 14696                           
 14697                           ; BSR set to: 0
 14698  015896  0100               	movlb	0	; () banked
 14699  015898  5174               	movf	___lwdiv@divisor& (0+255),w,b
 14700  01589A  0100               	movlb	0	; () banked
 14701  01589C  5F72               	subwf	___lwdiv@dividend& (0+255),f,b
 14702  01589E  0100               	movlb	0	; () banked
 14703  0158A0  5175               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14704  0158A2  0100               	movlb	0	; () banked
 14705  0158A4  5B73               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 14706                           
 14707                           ; BSR set to: 0
 14708  0158A6  0100               	movlb	0	; () banked
 14709  0158A8  8176               	bsf	___lwdiv@quotient& (0+255),0,b
 14710  0158AA  D000               	goto	l4646
 14711  0158AC                     l4646:
 14712                           
 14713                           ; BSR set to: 0
 14714  0158AC  0100               	movlb	0	; () banked
 14715  0158AE  90D8               	bcf	status,0,c
 14716  0158B0  3375               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 14717  0158B2  3374               	rrcf	___lwdiv@divisor& (0+255),f,b
 14718                           
 14719                           ; BSR set to: 0
 14720  0158B4  0100               	movlb	0	; () banked
 14721  0158B6  2F78               	decfsz	___lwdiv@counter& (0+255),f,b
 14722  0158B8  D7E0               	goto	l4638
 14723  0158BA  D000               	goto	l1641
 14724  0158BC                     l1641:
 14725                           
 14726                           ; BSR set to: 0
 14727  0158BC  C076  F072         	movff	___lwdiv@quotient,?___lwdiv
 14728  0158C0  C077  F073         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14729                           
 14730                           ; BSR set to: 0
 14731  0158C4  0012               	return		;funcret
 14732  0158C6                     __end_of___lwdiv:
 14733                           	opt stack 0
 14734                           tblptru	equ	0xFF8
 14735                           tblptrh	equ	0xFF7
 14736                           tblptrl	equ	0xFF6
 14737                           tablat	equ	0xFF5
 14738                           prodh	equ	0xFF4
 14739                           prodl	equ	0xFF3
 14740                           intcon	equ	0xFF2
 14741                           postinc0	equ	0xFEE
 14742                           wreg	equ	0xFE8
 14743                           indf1	equ	0xFE7
 14744                           plusw1	equ	0xFE3
 14745                           fsr1h	equ	0xFE2
 14746                           fsr1l	equ	0xFE1
 14747                           indf2	equ	0xFDF
 14748                           postinc2	equ	0xFDE
 14749                           plusw2	equ	0xFDB
 14750                           fsr2h	equ	0xFDA
 14751                           fsr2l	equ	0xFD9
 14752                           status	equ	0xFD8
 14753                           
 14754 ;; *************** function _LCD_write_string *****************
 14755 ;; Defined at:
 14756 ;;		line 194 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14757 ;; Parameters:    Size  Location     Type
 14758 ;;  buffer          2   35[BANK0 ] PTR unsigned char 
 14759 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 14760 ;; Auto vars:     Size  Location     Type
 14761 ;;		None
 14762 ;; Return value:  Size  Location     Type
 14763 ;;		None               void
 14764 ;; Registers used:
 14765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14766 ;; Tracked objects:
 14767 ;;		On entry : 0/0
 14768 ;;		On exit  : 0/0
 14769 ;;		Unchanged: 0/0
 14770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14771 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14774 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14775 ;;Total ram usage:        2 bytes
 14776 ;; Hardware stack levels used:    1
 14777 ;; Hardware stack levels required when called:    8
 14778 ;; This function calls:
 14779 ;;		_LCD_write_char
 14780 ;; This function is called by:
 14781 ;;		_LCD_write_integer
 14782 ;;		_LCD_Handler
 14783 ;; This function uses a non-reentrant model
 14784 ;;
 14785                           
 14786                           	psect	text37
 14787  015F3C                     __ptext37:
 14788                           	opt stack 0
 14789  015F3C                     _LCD_write_string:
 14790                           	opt stack 21
 14791                           
 14792                           ;src\LCD_44780.c: 197: while(*buffer){
 14793                           
 14794                           ; BSR set to: 0
 14795                           ;incstack = 0
 14796  015F3C  D00B               	goto	l7664
 14797  015F3E                     l7660:
 14798                           
 14799                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 14800  015F3E  C083  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14801  015F42  C084  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14802  015F46  50DF               	movf	indf2,w,c
 14803  015F48  ECD7  F0AB         	call	_LCD_write_char
 14804                           
 14805                           ;src\LCD_44780.c: 202: buffer++;
 14806  015F4C  0100               	movlb	0	; () banked
 14807  015F4E  4B83               	infsnz	LCD_write_string@buffer& (0+255),f,b
 14808  015F50  2B84               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 14809  015F52  D000               	goto	l7664
 14810  015F54                     l7664:
 14811  015F54  C083  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14812  015F58  C084  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14813  015F5C  50DF               	movf	indf2,w,c
 14814  015F5E  A4D8               	btfss	status,2,c
 14815  015F60  D7EE               	goto	l7660
 14816  015F62  0012               	return		;funcret
 14817  015F64                     __end_of_LCD_write_string:
 14818                           	opt stack 0
 14819                           tblptru	equ	0xFF8
 14820                           tblptrh	equ	0xFF7
 14821                           tblptrl	equ	0xFF6
 14822                           tablat	equ	0xFF5
 14823                           prodh	equ	0xFF4
 14824                           prodl	equ	0xFF3
 14825                           intcon	equ	0xFF2
 14826                           postinc0	equ	0xFEE
 14827                           wreg	equ	0xFE8
 14828                           indf1	equ	0xFE7
 14829                           plusw1	equ	0xFE3
 14830                           fsr1h	equ	0xFE2
 14831                           fsr1l	equ	0xFE1
 14832                           indf2	equ	0xFDF
 14833                           postinc2	equ	0xFDE
 14834                           plusw2	equ	0xFDB
 14835                           fsr2h	equ	0xFDA
 14836                           fsr2l	equ	0xFD9
 14837                           status	equ	0xFD8
 14838                           
 14839 ;; *************** function _LCD_goto_xy *****************
 14840 ;; Defined at:
 14841 ;;		line 136 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14842 ;; Parameters:    Size  Location     Type
 14843 ;;  x               1    wreg     unsigned char 
 14844 ;;  y               1   33[BANK0 ] unsigned char 
 14845 ;; Auto vars:     Size  Location     Type
 14846 ;;  x               1   34[BANK0 ] unsigned char 
 14847 ;; Return value:  Size  Location     Type
 14848 ;;		None               void
 14849 ;; Registers used:
 14850 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14851 ;; Tracked objects:
 14852 ;;		On entry : 0/0
 14853 ;;		On exit  : 0/0
 14854 ;;		Unchanged: 0/0
 14855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14856 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14859 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14860 ;;Total ram usage:        2 bytes
 14861 ;; Hardware stack levels used:    1
 14862 ;; Hardware stack levels required when called:    8
 14863 ;; This function calls:
 14864 ;;		_LCD_goto_line
 14865 ;;		_LCD_shift_cursor
 14866 ;; This function is called by:
 14867 ;;		_LCD_Handler
 14868 ;; This function uses a non-reentrant model
 14869 ;;
 14870                           
 14871                           	psect	text38
 14872  015FCC                     __ptext38:
 14873                           	opt stack 0
 14874  015FCC                     _LCD_goto_xy:
 14875                           	opt stack 21
 14876                           
 14877                           ;incstack = 0
 14878                           ;LCD_goto_xy@x stored from wreg
 14879  015FCC  0100               	movlb	0	; () banked
 14880  015FCE  6F82               	movwf	LCD_goto_xy@x& (0+255),b
 14881                           
 14882                           ; BSR set to: 0
 14883                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 14884  015FD0  0100               	movlb	0	; () banked
 14885  015FD2  5181               	movf	LCD_goto_xy@y& (0+255),w,b
 14886  015FD4  ECD5  F0A8         	call	_LCD_goto_line
 14887                           
 14888                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 14889  015FD8  0100               	movlb	0	; () banked
 14890  015FDA  0582               	decf	LCD_goto_xy@x& (0+255),w,b
 14891  015FDC  0100               	movlb	0	; () banked
 14892  015FDE  6F7E               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 14893  015FE0  0E01               	movlw	1
 14894  015FE2  ECC3  F0AD         	call	_LCD_shift_cursor
 14895  015FE6  0012               	return		;funcret
 14896  015FE8                     __end_of_LCD_goto_xy:
 14897                           	opt stack 0
 14898                           tblptru	equ	0xFF8
 14899                           tblptrh	equ	0xFF7
 14900                           tblptrl	equ	0xFF6
 14901                           tablat	equ	0xFF5
 14902                           prodh	equ	0xFF4
 14903                           prodl	equ	0xFF3
 14904                           intcon	equ	0xFF2
 14905                           postinc0	equ	0xFEE
 14906                           wreg	equ	0xFE8
 14907                           indf1	equ	0xFE7
 14908                           plusw1	equ	0xFE3
 14909                           fsr1h	equ	0xFE2
 14910                           fsr1l	equ	0xFE1
 14911                           indf2	equ	0xFDF
 14912                           postinc2	equ	0xFDE
 14913                           plusw2	equ	0xFDB
 14914                           fsr2h	equ	0xFDA
 14915                           fsr2l	equ	0xFD9
 14916                           status	equ	0xFD8
 14917                           
 14918 ;; *************** function _LCD_shift_cursor *****************
 14919 ;; Defined at:
 14920 ;;		line 98 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14921 ;; Parameters:    Size  Location     Type
 14922 ;;  shift           1    wreg     unsigned char 
 14923 ;;  number_of_sh    1   30[BANK0 ] unsigned char 
 14924 ;; Auto vars:     Size  Location     Type
 14925 ;;  shift           1   31[BANK0 ] unsigned char 
 14926 ;;  i               1   32[BANK0 ] unsigned char 
 14927 ;; Return value:  Size  Location     Type
 14928 ;;		None               void
 14929 ;; Registers used:
 14930 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14931 ;; Tracked objects:
 14932 ;;		On entry : 0/0
 14933 ;;		On exit  : 0/0
 14934 ;;		Unchanged: 0/0
 14935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14936 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14937 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14939 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14940 ;;Total ram usage:        3 bytes
 14941 ;; Hardware stack levels used:    1
 14942 ;; Hardware stack levels required when called:    7
 14943 ;; This function calls:
 14944 ;;		_LCD_send_command
 14945 ;; This function is called by:
 14946 ;;		_LCD_goto_xy
 14947 ;; This function uses a non-reentrant model
 14948 ;;
 14949                           
 14950                           	psect	text39
 14951  015B86                     __ptext39:
 14952                           	opt stack 0
 14953  015B86                     _LCD_shift_cursor:
 14954                           	opt stack 21
 14955                           
 14956                           ;incstack = 0
 14957                           ;LCD_shift_cursor@shift stored from wreg
 14958  015B86  0100               	movlb	0	; () banked
 14959  015B88  6F7F               	movwf	LCD_shift_cursor@shift& (0+255),b
 14960                           
 14961                           ; BSR set to: 0
 14962                           ;src\LCD_44780.c: 100: unsigned char i;
 14963                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 14964  015B8A  0E00               	movlw	0
 14965  015B8C  0100               	movlb	0	; () banked
 14966  015B8E  6F80               	movwf	LCD_shift_cursor@i& (0+255),b
 14967  015B90  D01A               	goto	l7644
 14968  015B92                     l7640:
 14969                           
 14970                           ; BSR set to: 0
 14971                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 14972  015B92  0E00               	movlw	0
 14973  015B94  0100               	movlb	0	; () banked
 14974  015B96  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14975  015B98  0E00               	movlw	0
 14976  015B9A  0100               	movlb	0	; () banked
 14977  015B9C  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14978  015B9E  0E01               	movlw	1
 14979  015BA0  0100               	movlb	0	; () banked
 14980  015BA2  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14981  015BA4  0E00               	movlw	0
 14982  015BA6  EC96  F0AE         	call	_LCD_send_command
 14983                           
 14984                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 14985  015BAA  C07F  F07A         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 14986  015BAE  0E00               	movlw	0
 14987  015BB0  0100               	movlb	0	; () banked
 14988  015BB2  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14989  015BB4  0E00               	movlw	0
 14990  015BB6  0100               	movlb	0	; () banked
 14991  015BB8  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14992  015BBA  0E00               	movlw	0
 14993  015BBC  EC96  F0AE         	call	_LCD_send_command
 14994  015BC0  0100               	movlb	0	; () banked
 14995  015BC2  2B80               	incf	LCD_shift_cursor@i& (0+255),f,b
 14996  015BC4  D000               	goto	l7644
 14997  015BC6                     l7644:
 14998                           
 14999                           ; BSR set to: 0
 15000  015BC6  0100               	movlb	0	; () banked
 15001  015BC8  517E               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 15002  015BCA  0100               	movlb	0	; () banked
 15003  015BCC  5D80               	subwf	LCD_shift_cursor@i& (0+255),w,b
 15004  015BCE  A0D8               	btfss	status,0,c
 15005  015BD0  D7E0               	goto	l7640
 15006                           
 15007                           ; BSR set to: 0
 15008                           
 15009                           ; BSR set to: 0
 15010  015BD2  0012               	return		;funcret
 15011  015BD4                     __end_of_LCD_shift_cursor:
 15012                           	opt stack 0
 15013                           tblptru	equ	0xFF8
 15014                           tblptrh	equ	0xFF7
 15015                           tblptrl	equ	0xFF6
 15016                           tablat	equ	0xFF5
 15017                           prodh	equ	0xFF4
 15018                           prodl	equ	0xFF3
 15019                           intcon	equ	0xFF2
 15020                           postinc0	equ	0xFEE
 15021                           wreg	equ	0xFE8
 15022                           indf1	equ	0xFE7
 15023                           plusw1	equ	0xFE3
 15024                           fsr1h	equ	0xFE2
 15025                           fsr1l	equ	0xFE1
 15026                           indf2	equ	0xFDF
 15027                           postinc2	equ	0xFDE
 15028                           plusw2	equ	0xFDB
 15029                           fsr2h	equ	0xFDA
 15030                           fsr2l	equ	0xFD9
 15031                           status	equ	0xFD8
 15032                           
 15033 ;; *************** function _LCD_Gap *****************
 15034 ;; Defined at:
 15035 ;;		line 544 in file "RemoteCan.c"
 15036 ;; Parameters:    Size  Location     Type
 15037 ;;		None
 15038 ;; Auto vars:     Size  Location     Type
 15039 ;;		None
 15040 ;; Return value:  Size  Location     Type
 15041 ;;		None               void
 15042 ;; Registers used:
 15043 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15044 ;; Tracked objects:
 15045 ;;		On entry : 0/0
 15046 ;;		On exit  : 0/0
 15047 ;;		Unchanged: 0/0
 15048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15053 ;;Total ram usage:        0 bytes
 15054 ;; Hardware stack levels used:    1
 15055 ;; Hardware stack levels required when called:    9
 15056 ;; This function calls:
 15057 ;;		_LCD_clear
 15058 ;;		_LCD_goto_line
 15059 ;;		_LCD_initialize
 15060 ;;		_LCD_write_message
 15061 ;; This function is called by:
 15062 ;;		_main
 15063 ;; This function uses a non-reentrant model
 15064 ;;
 15065                           
 15066                           	psect	text40
 15067  0159FA                     __ptext40:
 15068                           	opt stack 0
 15069  0159FA                     _LCD_Gap:
 15070                           	opt stack 21
 15071                           
 15072                           ;RemoteCan.c: 545: LCD_initialize(16);
 15073                           
 15074                           ; BSR set to: 0
 15075                           ;incstack = 0
 15076  0159FA  0E10               	movlw	16
 15077  0159FC  ECC8  F0A5         	call	_LCD_initialize
 15078                           
 15079                           ;RemoteCan.c: 546: LCD_clear();
 15080  015A00  EC6E  F0AF         	call	_LCD_clear	;wreg free
 15081                           
 15082                           ;RemoteCan.c: 547: LCD_goto_line(1);
 15083  015A04  0E01               	movlw	1
 15084  015A06  ECD5  F0A8         	call	_LCD_goto_line
 15085                           
 15086                           ;RemoteCan.c: 548: LCD_write_message("= PARKING MESSAGES =");
 15087  015A0A  0E2B               	movlw	low STR_20
 15088  015A0C  0100               	movlb	0	; () banked
 15089  015A0E  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15090  015A10  0EFF               	movlw	high STR_20
 15091  015A12  0100               	movlb	0	; () banked
 15092  015A14  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15093  015A16  EC07  F0AF         	call	_LCD_write_message	;wreg free
 15094                           
 15095                           ;RemoteCan.c: 549: LCD_goto_line(2);
 15096  015A1A  0E02               	movlw	2
 15097  015A1C  ECD5  F0A8         	call	_LCD_goto_line
 15098                           
 15099                           ;RemoteCan.c: 550: LCD_write_message(" Parking space FOUND");
 15100  015A20  0E7F               	movlw	low STR_21
 15101  015A22  0100               	movlb	0	; () banked
 15102  015A24  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15103  015A26  0EFF               	movlw	high STR_21
 15104  015A28  0100               	movlb	0	; () banked
 15105  015A2A  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15106  015A2C  EC07  F0AF         	call	_LCD_write_message	;wreg free
 15107                           
 15108                           ;RemoteCan.c: 551: LCD_goto_line(3);
 15109  015A30  0E03               	movlw	3
 15110  015A32  ECD5  F0A8         	call	_LCD_goto_line
 15111                           
 15112                           ;RemoteCan.c: 552: LCD_write_message("->  KEEP MOVING   <-");
 15113  015A36  0ED7               	movlw	low STR_22
 15114  015A38  0100               	movlb	0	; () banked
 15115  015A3A  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15116  015A3C  0EFE               	movlw	high STR_22
 15117  015A3E  0100               	movlb	0	; () banked
 15118  015A40  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15119  015A42  EC07  F0AF         	call	_LCD_write_message	;wreg free
 15120                           
 15121                           ;RemoteCan.c: 553: LCD_goto_line(4);
 15122  015A46  0E04               	movlw	4
 15123  015A48  ECD5  F0A8         	call	_LCD_goto_line
 15124                           
 15125                           ;RemoteCan.c: 554: LCD_write_message(" until next message ");
 15126  015A4C  0E83               	movlw	low STR_23
 15127  015A4E  0100               	movlb	0	; () banked
 15128  015A50  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15129  015A52  0EFE               	movlw	high STR_23
 15130  015A54  0100               	movlb	0	; () banked
 15131  015A56  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15132  015A58  EC07  F0AF         	call	_LCD_write_message	;wreg free
 15133  015A5C  0012               	return		;funcret
 15134  015A5E                     __end_of_LCD_Gap:
 15135                           	opt stack 0
 15136                           tblptru	equ	0xFF8
 15137                           tblptrh	equ	0xFF7
 15138                           tblptrl	equ	0xFF6
 15139                           tablat	equ	0xFF5
 15140                           prodh	equ	0xFF4
 15141                           prodl	equ	0xFF3
 15142                           intcon	equ	0xFF2
 15143                           postinc0	equ	0xFEE
 15144                           wreg	equ	0xFE8
 15145                           indf1	equ	0xFE7
 15146                           plusw1	equ	0xFE3
 15147                           fsr1h	equ	0xFE2
 15148                           fsr1l	equ	0xFE1
 15149                           indf2	equ	0xFDF
 15150                           postinc2	equ	0xFDE
 15151                           plusw2	equ	0xFDB
 15152                           fsr2h	equ	0xFDA
 15153                           fsr2l	equ	0xFD9
 15154                           status	equ	0xFD8
 15155                           
 15156 ;; *************** function _LCD_Error *****************
 15157 ;; Defined at:
 15158 ;;		line 596 in file "RemoteCan.c"
 15159 ;; Parameters:    Size  Location     Type
 15160 ;;		None
 15161 ;; Auto vars:     Size  Location     Type
 15162 ;;		None
 15163 ;; Return value:  Size  Location     Type
 15164 ;;		None               void
 15165 ;; Registers used:
 15166 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15167 ;; Tracked objects:
 15168 ;;		On entry : 0/0
 15169 ;;		On exit  : 0/0
 15170 ;;		Unchanged: 0/0
 15171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15176 ;;Total ram usage:        0 bytes
 15177 ;; Hardware stack levels used:    1
 15178 ;; Hardware stack levels required when called:    9
 15179 ;; This function calls:
 15180 ;;		_LCD_clear
 15181 ;;		_LCD_goto_line
 15182 ;;		_LCD_initialize
 15183 ;;		_LCD_write_message
 15184 ;; This function is called by:
 15185 ;;		_main
 15186 ;; This function uses a non-reentrant model
 15187 ;;
 15188                           
 15189                           	psect	text41
 15190  015A5E                     __ptext41:
 15191                           	opt stack 0
 15192  015A5E                     _LCD_Error:
 15193                           	opt stack 21
 15194                           
 15195                           ;RemoteCan.c: 597: LCD_initialize(16);
 15196                           
 15197                           ;incstack = 0
 15198  015A5E  0E10               	movlw	16
 15199  015A60  ECC8  F0A5         	call	_LCD_initialize
 15200                           
 15201                           ;RemoteCan.c: 598: LCD_clear();
 15202  015A64  EC6E  F0AF         	call	_LCD_clear	;wreg free
 15203                           
 15204                           ;RemoteCan.c: 599: LCD_goto_line(1);
 15205  015A68  0E01               	movlw	1
 15206  015A6A  ECD5  F0A8         	call	_LCD_goto_line
 15207                           
 15208                           ;RemoteCan.c: 600: LCD_write_message("= PARKING MESSAGES =");
 15209  015A6E  0E2B               	movlw	low STR_20
 15210  015A70  0100               	movlb	0	; () banked
 15211  015A72  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15212  015A74  0EFF               	movlw	high STR_20
 15213  015A76  0100               	movlb	0	; () banked
 15214  015A78  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15215  015A7A  EC07  F0AF         	call	_LCD_write_message	;wreg free
 15216                           
 15217                           ;RemoteCan.c: 601: LCD_goto_line(2);
 15218  015A7E  0E02               	movlw	2
 15219  015A80  ECD5  F0A8         	call	_LCD_goto_line
 15220                           
 15221                           ;RemoteCan.c: 602: LCD_write_message(" Parking procedures ");
 15222  015A84  0EAD               	movlw	low STR_33
 15223  015A86  0100               	movlb	0	; () banked
 15224  015A88  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15225  015A8A  0EFE               	movlw	high STR_33
 15226  015A8C  0100               	movlb	0	; () banked
 15227  015A8E  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15228  015A90  EC07  F0AF         	call	_LCD_write_message	;wreg free
 15229                           
 15230                           ;RemoteCan.c: 603: LCD_goto_line(3);
 15231  015A94  0E03               	movlw	3
 15232  015A96  ECD5  F0A8         	call	_LCD_goto_line
 15233                           
 15234                           ;RemoteCan.c: 604: LCD_write_message("       FAILED!      ");
 15235  015A9A  0EF0               	movlw	low STR_38
 15236  015A9C  0100               	movlb	0	; () banked
 15237  015A9E  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15238  015AA0  0EFD               	movlw	high STR_38
 15239  015AA2  0100               	movlb	0	; () banked
 15240  015AA4  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15241  015AA6  EC07  F0AF         	call	_LCD_write_message	;wreg free
 15242                           
 15243                           ;RemoteCan.c: 605: LCD_goto_line(4);
 15244  015AAA  0E04               	movlw	4
 15245  015AAC  ECD5  F0A8         	call	_LCD_goto_line
 15246                           
 15247                           ;RemoteCan.c: 606: LCD_write_message("   due to an error  ");
 15248  015AB0  0E59               	movlw	low STR_39
 15249  015AB2  0100               	movlb	0	; () banked
 15250  015AB4  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15251  015AB6  0EFE               	movlw	high STR_39
 15252  015AB8  0100               	movlb	0	; () banked
 15253  015ABA  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15254  015ABC  EC07  F0AF         	call	_LCD_write_message	;wreg free
 15255  015AC0  0012               	return		;funcret
 15256  015AC2                     __end_of_LCD_Error:
 15257                           	opt stack 0
 15258                           tblptru	equ	0xFF8
 15259                           tblptrh	equ	0xFF7
 15260                           tblptrl	equ	0xFF6
 15261                           tablat	equ	0xFF5
 15262                           prodh	equ	0xFF4
 15263                           prodl	equ	0xFF3
 15264                           intcon	equ	0xFF2
 15265                           postinc0	equ	0xFEE
 15266                           wreg	equ	0xFE8
 15267                           indf1	equ	0xFE7
 15268                           plusw1	equ	0xFE3
 15269                           fsr1h	equ	0xFE2
 15270                           fsr1l	equ	0xFE1
 15271                           indf2	equ	0xFDF
 15272                           postinc2	equ	0xFDE
 15273                           plusw2	equ	0xFDB
 15274                           fsr2h	equ	0xFDA
 15275                           fsr2l	equ	0xFD9
 15276                           status	equ	0xFD8
 15277                           
 15278 ;; *************** function _LCD_End *****************
 15279 ;; Defined at:
 15280 ;;		line 583 in file "RemoteCan.c"
 15281 ;; Parameters:    Size  Location     Type
 15282 ;;		None
 15283 ;; Auto vars:     Size  Location     Type
 15284 ;;		None
 15285 ;; Return value:  Size  Location     Type
 15286 ;;		None               void
 15287 ;; Registers used:
 15288 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15289 ;; Tracked objects:
 15290 ;;		On entry : 0/0
 15291 ;;		On exit  : 0/0
 15292 ;;		Unchanged: 0/0
 15293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15298 ;;Total ram usage:        0 bytes
 15299 ;; Hardware stack levels used:    1
 15300 ;; Hardware stack levels required when called:    9
 15301 ;; This function calls:
 15302 ;;		_LCD_clear
 15303 ;;		_LCD_goto_line
 15304 ;;		_LCD_initialize
 15305 ;;		_LCD_write_message
 15306 ;; This function is called by:
 15307 ;;		_main
 15308 ;; This function uses a non-reentrant model
 15309 ;;
 15310                           
 15311                           	psect	text42
 15312  015AC2                     __ptext42:
 15313                           	opt stack 0
 15314  015AC2                     _LCD_End:
 15315                           	opt stack 21
 15316                           
 15317                           ;RemoteCan.c: 584: LCD_initialize(16);
 15318                           
 15319                           ;incstack = 0
 15320  015AC2  0E10               	movlw	16
 15321  015AC4  ECC8  F0A5         	call	_LCD_initialize
 15322                           
 15323                           ;RemoteCan.c: 585: LCD_clear();
 15324  015AC8  EC6E  F0AF         	call	_LCD_clear	;wreg free
 15325                           
 15326                           ;RemoteCan.c: 586: LCD_goto_line(1);
 15327  015ACC  0E01               	movlw	1
 15328  015ACE  ECD5  F0A8         	call	_LCD_goto_line
 15329                           
 15330                           ;RemoteCan.c: 587: LCD_write_message("= PARKING MESSAGES =");
 15331  015AD2  0E2B               	movlw	low STR_20
 15332  015AD4  0100               	movlb	0	; () banked
 15333  015AD6  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15334  015AD8  0EFF               	movlw	high STR_20
 15335  015ADA  0100               	movlb	0	; () banked
 15336  015ADC  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15337  015ADE  EC07  F0AF         	call	_LCD_write_message	;wreg free
 15338                           
 15339                           ;RemoteCan.c: 588: LCD_goto_line(2);
 15340  015AE2  0E02               	movlw	2
 15341  015AE4  ECD5  F0A8         	call	_LCD_goto_line
 15342                           
 15343                           ;RemoteCan.c: 589: LCD_write_message(" Parking procedures ");
 15344  015AE8  0EAD               	movlw	low STR_33
 15345  015AEA  0100               	movlb	0	; () banked
 15346  015AEC  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15347  015AEE  0EFE               	movlw	high STR_33
 15348  015AF0  0100               	movlb	0	; () banked
 15349  015AF2  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15350  015AF4  EC07  F0AF         	call	_LCD_write_message	;wreg free
 15351                           
 15352                           ;RemoteCan.c: 590: LCD_goto_line(3);
 15353  015AF8  0E03               	movlw	3
 15354  015AFA  ECD5  F0A8         	call	_LCD_goto_line
 15355                           
 15356                           ;RemoteCan.c: 591: LCD_write_message("    SUCCESSFULLY    ");
 15357  015AFE  0E1A               	movlw	low STR_34
 15358  015B00  0100               	movlb	0	; () banked
 15359  015B02  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15360  015B04  0EFE               	movlw	high STR_34
 15361  015B06  0100               	movlb	0	; () banked
 15362  015B08  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15363  015B0A  EC07  F0AF         	call	_LCD_write_message	;wreg free
 15364                           
 15365                           ;RemoteCan.c: 592: LCD_goto_line(4);
 15366  015B0E  0E04               	movlw	4
 15367  015B10  ECD5  F0A8         	call	_LCD_goto_line
 15368                           
 15369                           ;RemoteCan.c: 593: LCD_write_message("     COMPLETED!     ");
 15370  015B14  0E05               	movlw	low STR_35
 15371  015B16  0100               	movlb	0	; () banked
 15372  015B18  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15373  015B1A  0EFE               	movlw	high STR_35
 15374  015B1C  0100               	movlb	0	; () banked
 15375  015B1E  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15376  015B20  EC07  F0AF         	call	_LCD_write_message	;wreg free
 15377  015B24  0012               	return		;funcret
 15378  015B26                     __end_of_LCD_End:
 15379                           	opt stack 0
 15380                           tblptru	equ	0xFF8
 15381                           tblptrh	equ	0xFF7
 15382                           tblptrl	equ	0xFF6
 15383                           tablat	equ	0xFF5
 15384                           prodh	equ	0xFF4
 15385                           prodl	equ	0xFF3
 15386                           intcon	equ	0xFF2
 15387                           postinc0	equ	0xFEE
 15388                           wreg	equ	0xFE8
 15389                           indf1	equ	0xFE7
 15390                           plusw1	equ	0xFE3
 15391                           fsr1h	equ	0xFE2
 15392                           fsr1l	equ	0xFE1
 15393                           indf2	equ	0xFDF
 15394                           postinc2	equ	0xFDE
 15395                           plusw2	equ	0xFDB
 15396                           fsr2h	equ	0xFDA
 15397                           fsr2l	equ	0xFD9
 15398                           status	equ	0xFD8
 15399                           
 15400 ;; *************** function _LCD_write_message *****************
 15401 ;; Defined at:
 15402 ;;		line 178 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15403 ;; Parameters:    Size  Location     Type
 15404 ;;  buffer          2   35[BANK0 ] PTR const unsigned char 
 15405 ;;		 -> STR_39(21), STR_38(21), STR_37(21), STR_36(21), 
 15406 ;;		 -> STR_35(21), STR_34(21), STR_33(21), STR_32(21), 
 15407 ;;		 -> STR_31(21), STR_30(21), STR_29(21), STR_28(21), 
 15408 ;;		 -> STR_27(21), STR_26(21), STR_25(21), STR_24(21), 
 15409 ;;		 -> STR_23(21), STR_22(21), STR_21(21), STR_20(21), 
 15410 ;;		 -> STR_19(21), STR_18(21), STR_17(8), STR_16(8), 
 15411 ;;		 -> STR_15(21), STR_14(5), STR_13(5), STR_12(5), 
 15412 ;;		 -> STR_11(21), STR_10(7), STR_9(14), STR_8(17), 
 15413 ;;		 -> STR_7(12), STR_6(21), STR_4(21), STR_3(21), 
 15414 ;;		 -> STR_2(21), STR_1(21), 
 15415 ;; Auto vars:     Size  Location     Type
 15416 ;;		None
 15417 ;; Return value:  Size  Location     Type
 15418 ;;		None               void
 15419 ;; Registers used:
 15420 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15421 ;; Tracked objects:
 15422 ;;		On entry : 0/0
 15423 ;;		On exit  : 0/0
 15424 ;;		Unchanged: 0/0
 15425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15426 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15429 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15430 ;;Total ram usage:        2 bytes
 15431 ;; Hardware stack levels used:    1
 15432 ;; Hardware stack levels required when called:    8
 15433 ;; This function calls:
 15434 ;;		_LCD_write_char
 15435 ;; This function is called by:
 15436 ;;		_main
 15437 ;;		_LCD_Handler
 15438 ;;		_LCD_Gap
 15439 ;;		_LCD_Park
 15440 ;;		_LCD_Parking
 15441 ;;		_LCD_End
 15442 ;;		_LCD_Error
 15443 ;; This function uses a non-reentrant model
 15444 ;;
 15445                           
 15446                           	psect	text43
 15447  015E0E                     __ptext43:
 15448                           	opt stack 0
 15449  015E0E                     _LCD_write_message:
 15450                           	opt stack 22
 15451                           
 15452                           ;src\LCD_44780.c: 181: while(*buffer) {
 15453                           
 15454                           ;incstack = 0
 15455  015E0E  D00E               	goto	l7982
 15456  015E10                     l7978:
 15457                           
 15458                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 15459  015E10  C083  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15460  015E14  C084  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15461  015E18                     	if	0	;tblptru may be non-zero
 15462  015E18                     	endif
 15463  015E18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15464  015E18  0E00               	movlw	low (__mediumconst shr (0+16))
 15465  015E1A  6EF8               	movwf	tblptru,c
 15466  015E1C                     	endif
 15467  015E1C  0008               	tblrd		*
 15468  015E1E  50F5               	movf	tablat,w,c
 15469  015E20  ECD7  F0AB         	call	_LCD_write_char
 15470                           
 15471                           ;src\LCD_44780.c: 186: buffer++;
 15472  015E24  0100               	movlb	0	; () banked
 15473  015E26  4B83               	infsnz	LCD_write_message@buffer& (0+255),f,b
 15474  015E28  2B84               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 15475  015E2A  D000               	goto	l7982
 15476  015E2C                     l7982:
 15477  015E2C  C083  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15478  015E30  C084  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15479  015E34                     	if	0	;tblptru may be non-zero
 15480  015E34                     	endif
 15481  015E34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15482  015E34  0E00               	movlw	low (__mediumconst shr (0+16))
 15483  015E36  6EF8               	movwf	tblptru,c
 15484  015E38                     	endif
 15485  015E38  0008               	tblrd		*
 15486  015E3A  50F5               	movf	tablat,w,c
 15487  015E3C  0900               	iorlw	0
 15488  015E3E  A4D8               	btfss	status,2,c
 15489  015E40  D7E7               	goto	l7978
 15490  015E42  0012               	return		;funcret
 15491  015E44                     __end_of_LCD_write_message:
 15492                           	opt stack 0
 15493                           tblptru	equ	0xFF8
 15494                           tblptrh	equ	0xFF7
 15495                           tblptrl	equ	0xFF6
 15496                           tablat	equ	0xFF5
 15497                           prodh	equ	0xFF4
 15498                           prodl	equ	0xFF3
 15499                           intcon	equ	0xFF2
 15500                           postinc0	equ	0xFEE
 15501                           wreg	equ	0xFE8
 15502                           indf1	equ	0xFE7
 15503                           plusw1	equ	0xFE3
 15504                           fsr1h	equ	0xFE2
 15505                           fsr1l	equ	0xFE1
 15506                           indf2	equ	0xFDF
 15507                           postinc2	equ	0xFDE
 15508                           plusw2	equ	0xFDB
 15509                           fsr2h	equ	0xFDA
 15510                           fsr2l	equ	0xFD9
 15511                           status	equ	0xFD8
 15512                           
 15513 ;; *************** function _LCD_write_char *****************
 15514 ;; Defined at:
 15515 ;;		line 145 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15516 ;; Parameters:    Size  Location     Type
 15517 ;;  value           1    wreg     unsigned char 
 15518 ;; Auto vars:     Size  Location     Type
 15519 ;;  value           1   34[BANK0 ] unsigned char 
 15520 ;;  D0              1   33[BANK0 ] unsigned char 
 15521 ;;  D1              1   32[BANK0 ] unsigned char 
 15522 ;;  D2              1   31[BANK0 ] unsigned char 
 15523 ;;  D3              1   30[BANK0 ] unsigned char 
 15524 ;; Return value:  Size  Location     Type
 15525 ;;		None               void
 15526 ;; Registers used:
 15527 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15528 ;; Tracked objects:
 15529 ;;		On entry : 0/0
 15530 ;;		On exit  : 0/0
 15531 ;;		Unchanged: 0/0
 15532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15534 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15536 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15537 ;;Total ram usage:        5 bytes
 15538 ;; Hardware stack levels used:    1
 15539 ;; Hardware stack levels required when called:    7
 15540 ;; This function calls:
 15541 ;;		_LCD_send_command
 15542 ;; This function is called by:
 15543 ;;		_LCD_write_message
 15544 ;;		_LCD_write_string
 15545 ;; This function uses a non-reentrant model
 15546 ;;
 15547                           
 15548                           	psect	text44
 15549  0157AE                     __ptext44:
 15550                           	opt stack 0
 15551  0157AE                     _LCD_write_char:
 15552                           	opt stack 22
 15553                           
 15554                           ;incstack = 0
 15555                           ;LCD_write_char@value stored from wreg
 15556  0157AE  0100               	movlb	0	; () banked
 15557  0157B0  6F82               	movwf	LCD_write_char@value& (0+255),b
 15558                           
 15559                           ; BSR set to: 0
 15560                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 15561                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 15562  0157B2  848D               	bsf	3981,2,c	;volatile
 15563                           
 15564                           ; BSR set to: 0
 15565                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 15566  0157B4  0100               	movlb	0	; () banked
 15567  0157B6  4582               	rlncf	LCD_write_char@value& (0+255),w,b
 15568  0157B8  0B01               	andlw	1
 15569  0157BA  0100               	movlb	0	; () banked
 15570  0157BC  6F7E               	movwf	LCD_write_char@D3& (0+255),b
 15571                           
 15572                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 15573  0157BE  0100               	movlb	0	; () banked
 15574  0157C0  4582               	rlncf	LCD_write_char@value& (0+255),w,b
 15575  0157C2  46E8               	rlncf	wreg,f,c
 15576  0157C4  0B03               	andlw	3
 15577  0157C6  0B01               	andlw	1
 15578  0157C8  0100               	movlb	0	; () banked
 15579  0157CA  6F7F               	movwf	LCD_write_char@D2& (0+255),b
 15580                           
 15581                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 15582  0157CC  0100               	movlb	0	; () banked
 15583  0157CE  3982               	swapf	LCD_write_char@value& (0+255),w,b
 15584  0157D0  42E8               	rrncf	wreg,f,c
 15585  0157D2  0B07               	andlw	7
 15586  0157D4  0B01               	andlw	1
 15587  0157D6  0100               	movlb	0	; () banked
 15588  0157D8  6F80               	movwf	LCD_write_char@D1& (0+255),b
 15589                           
 15590                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 15591  0157DA  0100               	movlb	0	; () banked
 15592  0157DC  3982               	swapf	LCD_write_char@value& (0+255),w,b
 15593  0157DE  0B0F               	andlw	15
 15594  0157E0  0B01               	andlw	1
 15595  0157E2  0100               	movlb	0	; () banked
 15596  0157E4  6F81               	movwf	LCD_write_char@D0& (0+255),b
 15597                           
 15598                           ; BSR set to: 0
 15599                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 15600  0157E6  C07F  F07A         	movff	LCD_write_char@D2,LCD_send_command@D2
 15601  0157EA  C080  F07B         	movff	LCD_write_char@D1,LCD_send_command@D1
 15602  0157EE  C081  F07C         	movff	LCD_write_char@D0,LCD_send_command@D0
 15603  0157F2  0100               	movlb	0	; () banked
 15604  0157F4  517E               	movf	LCD_write_char@D3& (0+255),w,b
 15605  0157F6  EC96  F0AE         	call	_LCD_send_command
 15606                           
 15607                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 15608  0157FA  0100               	movlb	0	; () banked
 15609  0157FC  3982               	swapf	LCD_write_char@value& (0+255),w,b
 15610  0157FE  46E8               	rlncf	wreg,f,c
 15611  015800  0B1F               	andlw	31
 15612  015802  0B01               	andlw	1
 15613  015804  0100               	movlb	0	; () banked
 15614  015806  6F7E               	movwf	LCD_write_char@D3& (0+255),b
 15615                           
 15616                           ; BSR set to: 0
 15617                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 15618  015808  0100               	movlb	0	; () banked
 15619  01580A  4182               	rrncf	LCD_write_char@value& (0+255),w,b
 15620  01580C  42E8               	rrncf	wreg,f,c
 15621  01580E  0B3F               	andlw	63
 15622  015810  0B01               	andlw	1
 15623  015812  0100               	movlb	0	; () banked
 15624  015814  6F7F               	movwf	LCD_write_char@D2& (0+255),b
 15625                           
 15626                           ; BSR set to: 0
 15627                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 15628  015816  0100               	movlb	0	; () banked
 15629  015818  90D8               	bcf	status,0,c
 15630  01581A  3182               	rrcf	LCD_write_char@value& (0+255),w,b
 15631  01581C  0B01               	andlw	1
 15632  01581E  0100               	movlb	0	; () banked
 15633  015820  6F80               	movwf	LCD_write_char@D1& (0+255),b
 15634                           
 15635                           ; BSR set to: 0
 15636                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 15637  015822  0100               	movlb	0	; () banked
 15638  015824  5182               	movf	LCD_write_char@value& (0+255),w,b
 15639  015826  0B01               	andlw	1
 15640  015828  0100               	movlb	0	; () banked
 15641  01582A  6F81               	movwf	LCD_write_char@D0& (0+255),b
 15642                           
 15643                           ; BSR set to: 0
 15644                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 15645  01582C  C07F  F07A         	movff	LCD_write_char@D2,LCD_send_command@D2
 15646  015830  C080  F07B         	movff	LCD_write_char@D1,LCD_send_command@D1
 15647  015834  C081  F07C         	movff	LCD_write_char@D0,LCD_send_command@D0
 15648  015838  0100               	movlb	0	; () banked
 15649  01583A  517E               	movf	LCD_write_char@D3& (0+255),w,b
 15650  01583C  EC96  F0AE         	call	_LCD_send_command
 15651                           
 15652                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 15653  015840  948D               	bcf	3981,2,c	;volatile
 15654  015842  0012               	return		;funcret
 15655  015844                     __end_of_LCD_write_char:
 15656                           	opt stack 0
 15657                           tblptru	equ	0xFF8
 15658                           tblptrh	equ	0xFF7
 15659                           tblptrl	equ	0xFF6
 15660                           tablat	equ	0xFF5
 15661                           prodh	equ	0xFF4
 15662                           prodl	equ	0xFF3
 15663                           intcon	equ	0xFF2
 15664                           postinc0	equ	0xFEE
 15665                           wreg	equ	0xFE8
 15666                           indf1	equ	0xFE7
 15667                           plusw1	equ	0xFE3
 15668                           fsr1h	equ	0xFE2
 15669                           fsr1l	equ	0xFE1
 15670                           indf2	equ	0xFDF
 15671                           postinc2	equ	0xFDE
 15672                           plusw2	equ	0xFDB
 15673                           fsr2h	equ	0xFDA
 15674                           fsr2l	equ	0xFD9
 15675                           status	equ	0xFD8
 15676                           
 15677 ;; *************** function _LCD_initialize *****************
 15678 ;; Defined at:
 15679 ;;		line 283 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15680 ;; Parameters:    Size  Location     Type
 15681 ;;  quartz_frequ    1    wreg     unsigned char 
 15682 ;; Auto vars:     Size  Location     Type
 15683 ;;  quartz_frequ    1   32[BANK0 ] unsigned char 
 15684 ;; Return value:  Size  Location     Type
 15685 ;;		None               void
 15686 ;; Registers used:
 15687 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15688 ;; Tracked objects:
 15689 ;;		On entry : 0/0
 15690 ;;		On exit  : 0/0
 15691 ;;		Unchanged: 0/0
 15692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15694 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15696 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15697 ;;Total ram usage:        1 bytes
 15698 ;; Hardware stack levels used:    1
 15699 ;; Hardware stack levels required when called:    8
 15700 ;; This function calls:
 15701 ;;		_LCD_clear
 15702 ;;		_LCD_cursor
 15703 ;;		_LCD_send_command
 15704 ;;		_delay_ms
 15705 ;;		_delay_set_quartz
 15706 ;; This function is called by:
 15707 ;;		_main
 15708 ;;		_LCD_Handler
 15709 ;;		_LCD_Gap
 15710 ;;		_LCD_Park
 15711 ;;		_LCD_Parking
 15712 ;;		_LCD_End
 15713 ;;		_LCD_Error
 15714 ;;		_board_initialization
 15715 ;; This function uses a non-reentrant model
 15716 ;;
 15717                           
 15718                           	psect	text45
 15719  014B90                     __ptext45:
 15720                           	opt stack 0
 15721  014B90                     _LCD_initialize:
 15722                           	opt stack 21
 15723                           
 15724                           ;incstack = 0
 15725                           ;LCD_initialize@quartz_frequency stored from wreg
 15726  014B90  0100               	movlb	0	; () banked
 15727  014B92  6F80               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 15728                           
 15729                           ; BSR set to: 0
 15730                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 15731  014B94  0100               	movlb	0	; () banked
 15732  014B96  5180               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 15733  014B98  EC2D  F0B0         	call	_delay_set_quartz
 15734                           
 15735                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 15736  014B9C  948D               	bcf	3981,2,c	;volatile
 15737                           
 15738                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 15739  014B9E  928B               	bcf	3979,1,c	;volatile
 15740                           
 15741                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 15742  014BA0  908B               	bcf	3979,0,c	;volatile
 15743                           
 15744                           ;src\LCD_44780.c: 291: delay_ms (100);
 15745  014BA2  0E00               	movlw	0
 15746  014BA4  0100               	movlb	0	; () banked
 15747  014BA6  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15748  014BA8  0E64               	movlw	100
 15749  014BAA  6F78               	movwf	delay_ms@value_ms& (0+255),b
 15750  014BAC  ECB3  F0AE         	call	_delay_ms	;wreg free
 15751                           
 15752                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 15753  014BB0  0E00               	movlw	0
 15754  014BB2  0100               	movlb	0	; () banked
 15755  014BB4  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15756  014BB6  0E01               	movlw	1
 15757  014BB8  0100               	movlb	0	; () banked
 15758  014BBA  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15759  014BBC  0E01               	movlw	1
 15760  014BBE  0100               	movlb	0	; () banked
 15761  014BC0  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15762  014BC2  0E00               	movlw	0
 15763  014BC4  EC96  F0AE         	call	_LCD_send_command
 15764                           
 15765                           ;src\LCD_44780.c: 293: delay_ms (100);
 15766  014BC8  0E00               	movlw	0
 15767  014BCA  0100               	movlb	0	; () banked
 15768  014BCC  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15769  014BCE  0E64               	movlw	100
 15770  014BD0  6F78               	movwf	delay_ms@value_ms& (0+255),b
 15771  014BD2  ECB3  F0AE         	call	_delay_ms	;wreg free
 15772                           
 15773                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 15774  014BD6  0E00               	movlw	0
 15775  014BD8  0100               	movlb	0	; () banked
 15776  014BDA  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15777  014BDC  0E01               	movlw	1
 15778  014BDE  0100               	movlb	0	; () banked
 15779  014BE0  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15780  014BE2  0E01               	movlw	1
 15781  014BE4  0100               	movlb	0	; () banked
 15782  014BE6  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15783  014BE8  0E00               	movlw	0
 15784  014BEA  EC96  F0AE         	call	_LCD_send_command
 15785                           
 15786                           ;src\LCD_44780.c: 295: delay_ms (10);
 15787  014BEE  0E00               	movlw	0
 15788  014BF0  0100               	movlb	0	; () banked
 15789  014BF2  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15790  014BF4  0E0A               	movlw	10
 15791  014BF6  6F78               	movwf	delay_ms@value_ms& (0+255),b
 15792  014BF8  ECB3  F0AE         	call	_delay_ms	;wreg free
 15793                           
 15794                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 15795  014BFC  0E00               	movlw	0
 15796  014BFE  0100               	movlb	0	; () banked
 15797  014C00  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15798  014C02  0E01               	movlw	1
 15799  014C04  0100               	movlb	0	; () banked
 15800  014C06  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15801  014C08  0E01               	movlw	1
 15802  014C0A  0100               	movlb	0	; () banked
 15803  014C0C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15804  014C0E  0E00               	movlw	0
 15805  014C10  EC96  F0AE         	call	_LCD_send_command
 15806                           
 15807                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 15808  014C14  0E00               	movlw	0
 15809  014C16  0100               	movlb	0	; () banked
 15810  014C18  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15811  014C1A  0E01               	movlw	1
 15812  014C1C  0100               	movlb	0	; () banked
 15813  014C1E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15814  014C20  0E00               	movlw	0
 15815  014C22  0100               	movlb	0	; () banked
 15816  014C24  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15817  014C26  0E00               	movlw	0
 15818  014C28  EC96  F0AE         	call	_LCD_send_command
 15819                           
 15820                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 15821  014C2C  0E00               	movlw	0
 15822  014C2E  0100               	movlb	0	; () banked
 15823  014C30  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15824  014C32  0E01               	movlw	1
 15825  014C34  0100               	movlb	0	; () banked
 15826  014C36  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15827  014C38  0E00               	movlw	0
 15828  014C3A  0100               	movlb	0	; () banked
 15829  014C3C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15830  014C3E  0E00               	movlw	0
 15831  014C40  EC96  F0AE         	call	_LCD_send_command
 15832                           
 15833                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 15834  014C44  0E00               	movlw	0
 15835  014C46  0100               	movlb	0	; () banked
 15836  014C48  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15837  014C4A  0E00               	movlw	0
 15838  014C4C  0100               	movlb	0	; () banked
 15839  014C4E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15840  014C50  0E00               	movlw	0
 15841  014C52  0100               	movlb	0	; () banked
 15842  014C54  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15843  014C56  0E01               	movlw	1
 15844  014C58  EC96  F0AE         	call	_LCD_send_command
 15845                           
 15846                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 15847  014C5C  0E00               	movlw	0
 15848  014C5E  0100               	movlb	0	; () banked
 15849  014C60  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15850  014C62  0E00               	movlw	0
 15851  014C64  0100               	movlb	0	; () banked
 15852  014C66  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15853  014C68  0E00               	movlw	0
 15854  014C6A  0100               	movlb	0	; () banked
 15855  014C6C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15856  014C6E  0E00               	movlw	0
 15857  014C70  EC96  F0AE         	call	_LCD_send_command
 15858                           
 15859                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 15860  014C74  0E00               	movlw	0
 15861  014C76  0100               	movlb	0	; () banked
 15862  014C78  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15863  014C7A  0E00               	movlw	0
 15864  014C7C  0100               	movlb	0	; () banked
 15865  014C7E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15866  014C80  0E00               	movlw	0
 15867  014C82  0100               	movlb	0	; () banked
 15868  014C84  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15869  014C86  0E01               	movlw	1
 15870  014C88  EC96  F0AE         	call	_LCD_send_command
 15871                           
 15872                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 15873  014C8C  0E00               	movlw	0
 15874  014C8E  0100               	movlb	0	; () banked
 15875  014C90  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15876  014C92  0E00               	movlw	0
 15877  014C94  0100               	movlb	0	; () banked
 15878  014C96  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15879  014C98  0E00               	movlw	0
 15880  014C9A  0100               	movlb	0	; () banked
 15881  014C9C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15882  014C9E  0E00               	movlw	0
 15883  014CA0  EC96  F0AE         	call	_LCD_send_command
 15884                           
 15885                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 15886  014CA4  0E00               	movlw	0
 15887  014CA6  0100               	movlb	0	; () banked
 15888  014CA8  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15889  014CAA  0E00               	movlw	0
 15890  014CAC  0100               	movlb	0	; () banked
 15891  014CAE  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15892  014CB0  0E01               	movlw	1
 15893  014CB2  0100               	movlb	0	; () banked
 15894  014CB4  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15895  014CB6  0E00               	movlw	0
 15896  014CB8  EC96  F0AE         	call	_LCD_send_command
 15897                           
 15898                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 15899  014CBC  0E00               	movlw	0
 15900  014CBE  0100               	movlb	0	; () banked
 15901  014CC0  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15902  014CC2  0E00               	movlw	0
 15903  014CC4  0100               	movlb	0	; () banked
 15904  014CC6  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15905  014CC8  0E00               	movlw	0
 15906  014CCA  0100               	movlb	0	; () banked
 15907  014CCC  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15908  014CCE  0E00               	movlw	0
 15909  014CD0  EC96  F0AE         	call	_LCD_send_command
 15910                           
 15911                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 15912  014CD4  0E01               	movlw	1
 15913  014CD6  0100               	movlb	0	; () banked
 15914  014CD8  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15915  014CDA  0E01               	movlw	1
 15916  014CDC  0100               	movlb	0	; () banked
 15917  014CDE  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15918  014CE0  0E00               	movlw	0
 15919  014CE2  0100               	movlb	0	; () banked
 15920  014CE4  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15921  014CE6  0E00               	movlw	0
 15922  014CE8  EC96  F0AE         	call	_LCD_send_command
 15923                           
 15924                           ;src\LCD_44780.c: 312: LCD_clear ();
 15925  014CEC  EC6E  F0AF         	call	_LCD_clear	;wreg free
 15926                           
 15927                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 15928  014CF0  0E00               	movlw	0
 15929  014CF2  0100               	movlb	0	; () banked
 15930  014CF4  6F7E               	movwf	LCD_cursor@blinking& (0+255),b
 15931  014CF6  0E00               	movlw	0
 15932  014CF8  EC55  F0AF         	call	_LCD_cursor
 15933  014CFC  0012               	return		;funcret
 15934  014CFE                     __end_of_LCD_initialize:
 15935                           	opt stack 0
 15936                           tblptru	equ	0xFF8
 15937                           tblptrh	equ	0xFF7
 15938                           tblptrl	equ	0xFF6
 15939                           tablat	equ	0xFF5
 15940                           prodh	equ	0xFF4
 15941                           prodl	equ	0xFF3
 15942                           intcon	equ	0xFF2
 15943                           postinc0	equ	0xFEE
 15944                           wreg	equ	0xFE8
 15945                           indf1	equ	0xFE7
 15946                           plusw1	equ	0xFE3
 15947                           fsr1h	equ	0xFE2
 15948                           fsr1l	equ	0xFE1
 15949                           indf2	equ	0xFDF
 15950                           postinc2	equ	0xFDE
 15951                           plusw2	equ	0xFDB
 15952                           fsr2h	equ	0xFDA
 15953                           fsr2l	equ	0xFD9
 15954                           status	equ	0xFD8
 15955                           
 15956 ;; *************** function _delay_set_quartz *****************
 15957 ;; Defined at:
 15958 ;;		line 115 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 15959 ;; Parameters:    Size  Location     Type
 15960 ;;  frequency       1    wreg     unsigned char 
 15961 ;; Auto vars:     Size  Location     Type
 15962 ;;  frequency       1   18[BANK0 ] unsigned char 
 15963 ;; Return value:  Size  Location     Type
 15964 ;;		None               void
 15965 ;; Registers used:
 15966 ;;		wreg
 15967 ;; Tracked objects:
 15968 ;;		On entry : 0/0
 15969 ;;		On exit  : 0/0
 15970 ;;		Unchanged: 0/0
 15971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15973 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15975 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15976 ;;Total ram usage:        1 bytes
 15977 ;; Hardware stack levels used:    1
 15978 ;; Hardware stack levels required when called:    3
 15979 ;; This function calls:
 15980 ;;		Nothing
 15981 ;; This function is called by:
 15982 ;;		_LCD_initialize
 15983 ;; This function uses a non-reentrant model
 15984 ;;
 15985                           
 15986                           	psect	text46
 15987  01605A                     __ptext46:
 15988                           	opt stack 0
 15989  01605A                     _delay_set_quartz:
 15990                           	opt stack 25
 15991                           
 15992                           ;incstack = 0
 15993                           ;delay_set_quartz@frequency stored from wreg
 15994  01605A  0100               	movlb	0	; () banked
 15995  01605C  6F72               	movwf	delay_set_quartz@frequency& (0+255),b
 15996                           
 15997                           ; BSR set to: 0
 15998                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 15999  01605E  C072  F0ED         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 16000                           
 16001                           ; BSR set to: 0
 16002  016062  0012               	return		;funcret
 16003  016064                     __end_of_delay_set_quartz:
 16004                           	opt stack 0
 16005                           tblptru	equ	0xFF8
 16006                           tblptrh	equ	0xFF7
 16007                           tblptrl	equ	0xFF6
 16008                           tablat	equ	0xFF5
 16009                           prodh	equ	0xFF4
 16010                           prodl	equ	0xFF3
 16011                           intcon	equ	0xFF2
 16012                           postinc0	equ	0xFEE
 16013                           wreg	equ	0xFE8
 16014                           indf1	equ	0xFE7
 16015                           plusw1	equ	0xFE3
 16016                           fsr1h	equ	0xFE2
 16017                           fsr1l	equ	0xFE1
 16018                           indf2	equ	0xFDF
 16019                           postinc2	equ	0xFDE
 16020                           plusw2	equ	0xFDB
 16021                           fsr2h	equ	0xFDA
 16022                           fsr2l	equ	0xFD9
 16023                           status	equ	0xFD8
 16024                           
 16025 ;; *************** function _LCD_cursor *****************
 16026 ;; Defined at:
 16027 ;;		line 266 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16028 ;; Parameters:    Size  Location     Type
 16029 ;;  active          1    wreg     unsigned char 
 16030 ;;  blinking        1   30[BANK0 ] unsigned char 
 16031 ;; Auto vars:     Size  Location     Type
 16032 ;;  active          1   31[BANK0 ] unsigned char 
 16033 ;; Return value:  Size  Location     Type
 16034 ;;		None               void
 16035 ;; Registers used:
 16036 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16037 ;; Tracked objects:
 16038 ;;		On entry : 0/0
 16039 ;;		On exit  : 0/0
 16040 ;;		Unchanged: 0/0
 16041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16042 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16043 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16045 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16046 ;;Total ram usage:        2 bytes
 16047 ;; Hardware stack levels used:    1
 16048 ;; Hardware stack levels required when called:    7
 16049 ;; This function calls:
 16050 ;;		_LCD_send_command
 16051 ;; This function is called by:
 16052 ;;		_LCD_initialize
 16053 ;; This function uses a non-reentrant model
 16054 ;;
 16055                           
 16056                           	psect	text47
 16057  015EAA                     __ptext47:
 16058                           	opt stack 0
 16059  015EAA                     _LCD_cursor:
 16060                           	opt stack 21
 16061                           
 16062                           ; BSR set to: 0
 16063                           ;incstack = 0
 16064                           ;LCD_cursor@active stored from wreg
 16065  015EAA  0100               	movlb	0	; () banked
 16066  015EAC  6F7F               	movwf	LCD_cursor@active& (0+255),b
 16067                           
 16068                           ; BSR set to: 0
 16069                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 16070  015EAE  0E00               	movlw	0
 16071  015EB0  0100               	movlb	0	; () banked
 16072  015EB2  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16073  015EB4  0E00               	movlw	0
 16074  015EB6  0100               	movlb	0	; () banked
 16075  015EB8  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16076  015EBA  0E00               	movlw	0
 16077  015EBC  0100               	movlb	0	; () banked
 16078  015EBE  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16079  015EC0  0E00               	movlw	0
 16080  015EC2  EC96  F0AE         	call	_LCD_send_command
 16081                           
 16082                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 16083  015EC6  0E01               	movlw	1
 16084  015EC8  0100               	movlb	0	; () banked
 16085  015ECA  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16086  015ECC  C07F  F07B         	movff	LCD_cursor@active,LCD_send_command@D1
 16087  015ED0  C07E  F07C         	movff	LCD_cursor@blinking,LCD_send_command@D0
 16088  015ED4  0E01               	movlw	1
 16089  015ED6  EC96  F0AE         	call	_LCD_send_command
 16090  015EDA  0012               	return		;funcret
 16091  015EDC                     __end_of_LCD_cursor:
 16092                           	opt stack 0
 16093                           tblptru	equ	0xFF8
 16094                           tblptrh	equ	0xFF7
 16095                           tblptrl	equ	0xFF6
 16096                           tablat	equ	0xFF5
 16097                           prodh	equ	0xFF4
 16098                           prodl	equ	0xFF3
 16099                           intcon	equ	0xFF2
 16100                           postinc0	equ	0xFEE
 16101                           wreg	equ	0xFE8
 16102                           indf1	equ	0xFE7
 16103                           plusw1	equ	0xFE3
 16104                           fsr1h	equ	0xFE2
 16105                           fsr1l	equ	0xFE1
 16106                           indf2	equ	0xFDF
 16107                           postinc2	equ	0xFDE
 16108                           plusw2	equ	0xFDB
 16109                           fsr2h	equ	0xFDA
 16110                           fsr2l	equ	0xFD9
 16111                           status	equ	0xFD8
 16112                           
 16113 ;; *************** function _LCD_clear *****************
 16114 ;; Defined at:
 16115 ;;		line 257 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16116 ;; Parameters:    Size  Location     Type
 16117 ;;		None
 16118 ;; Auto vars:     Size  Location     Type
 16119 ;;		None
 16120 ;; Return value:  Size  Location     Type
 16121 ;;		None               void
 16122 ;; Registers used:
 16123 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16124 ;; Tracked objects:
 16125 ;;		On entry : 0/0
 16126 ;;		On exit  : 0/0
 16127 ;;		Unchanged: 0/0
 16128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16133 ;;Total ram usage:        0 bytes
 16134 ;; Hardware stack levels used:    1
 16135 ;; Hardware stack levels required when called:    7
 16136 ;; This function calls:
 16137 ;;		_LCD_send_command
 16138 ;; This function is called by:
 16139 ;;		_LCD_initialize
 16140 ;;		_LCD_Handler
 16141 ;;		_LCD_Gap
 16142 ;;		_LCD_Park
 16143 ;;		_LCD_Parking
 16144 ;;		_LCD_End
 16145 ;;		_LCD_Error
 16146 ;;		_board_initialization
 16147 ;; This function uses a non-reentrant model
 16148 ;;
 16149                           
 16150                           	psect	text48
 16151  015EDC                     __ptext48:
 16152                           	opt stack 0
 16153  015EDC                     _LCD_clear:
 16154                           	opt stack 21
 16155                           
 16156                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 16157                           
 16158                           ;incstack = 0
 16159  015EDC  0E00               	movlw	0
 16160  015EDE  0100               	movlb	0	; () banked
 16161  015EE0  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16162  015EE2  0E00               	movlw	0
 16163  015EE4  0100               	movlb	0	; () banked
 16164  015EE6  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16165  015EE8  0E00               	movlw	0
 16166  015EEA  0100               	movlb	0	; () banked
 16167  015EEC  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16168  015EEE  0E00               	movlw	0
 16169  015EF0  EC96  F0AE         	call	_LCD_send_command
 16170                           
 16171                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 16172  015EF4  0E00               	movlw	0
 16173  015EF6  0100               	movlb	0	; () banked
 16174  015EF8  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16175  015EFA  0E00               	movlw	0
 16176  015EFC  0100               	movlb	0	; () banked
 16177  015EFE  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16178  015F00  0E01               	movlw	1
 16179  015F02  0100               	movlb	0	; () banked
 16180  015F04  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16181  015F06  0E00               	movlw	0
 16182  015F08  EC96  F0AE         	call	_LCD_send_command
 16183  015F0C  0012               	return		;funcret
 16184  015F0E                     __end_of_LCD_clear:
 16185                           	opt stack 0
 16186                           tblptru	equ	0xFF8
 16187                           tblptrh	equ	0xFF7
 16188                           tblptrl	equ	0xFF6
 16189                           tablat	equ	0xFF5
 16190                           prodh	equ	0xFF4
 16191                           prodl	equ	0xFF3
 16192                           intcon	equ	0xFF2
 16193                           postinc0	equ	0xFEE
 16194                           wreg	equ	0xFE8
 16195                           indf1	equ	0xFE7
 16196                           plusw1	equ	0xFE3
 16197                           fsr1h	equ	0xFE2
 16198                           fsr1l	equ	0xFE1
 16199                           indf2	equ	0xFDF
 16200                           postinc2	equ	0xFDE
 16201                           plusw2	equ	0xFDB
 16202                           fsr2h	equ	0xFDA
 16203                           fsr2l	equ	0xFD9
 16204                           status	equ	0xFD8
 16205                           
 16206 ;; *************** function _LCD_goto_line *****************
 16207 ;; Defined at:
 16208 ;;		line 111 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16209 ;; Parameters:    Size  Location     Type
 16210 ;;  line            1    wreg     unsigned char 
 16211 ;; Auto vars:     Size  Location     Type
 16212 ;;  line            1   30[BANK0 ] unsigned char 
 16213 ;; Return value:  Size  Location     Type
 16214 ;;		None               void
 16215 ;; Registers used:
 16216 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16217 ;; Tracked objects:
 16218 ;;		On entry : 0/0
 16219 ;;		On exit  : 0/0
 16220 ;;		Unchanged: 0/0
 16221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16223 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16225 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16226 ;;Total ram usage:        1 bytes
 16227 ;; Hardware stack levels used:    1
 16228 ;; Hardware stack levels required when called:    7
 16229 ;; This function calls:
 16230 ;;		_LCD_send_command
 16231 ;; This function is called by:
 16232 ;;		_LCD_goto_xy
 16233 ;;		_main
 16234 ;;		_LCD_Handler
 16235 ;;		_LCD_Gap
 16236 ;;		_LCD_Park
 16237 ;;		_LCD_Parking
 16238 ;;		_LCD_End
 16239 ;;		_LCD_Error
 16240 ;;		_board_initialization
 16241 ;; This function uses a non-reentrant model
 16242 ;;
 16243                           
 16244                           	psect	text49
 16245  0151AA                     __ptext49:
 16246                           	opt stack 0
 16247  0151AA                     _LCD_goto_line:
 16248                           	opt stack 22
 16249                           
 16250                           ;incstack = 0
 16251                           ;LCD_goto_line@line stored from wreg
 16252  0151AA  0100               	movlb	0	; () banked
 16253  0151AC  6F7E               	movwf	LCD_goto_line@line& (0+255),b
 16254                           
 16255                           ; BSR set to: 0
 16256                           ;src\LCD_44780.c: 113: switch(line) {
 16257  0151AE  D064               	goto	l7656
 16258  0151B0                     l7648:
 16259                           
 16260                           ; BSR set to: 0
 16261  0151B0  0E00               	movlw	0
 16262  0151B2  0100               	movlb	0	; () banked
 16263  0151B4  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16264  0151B6  0E00               	movlw	0
 16265  0151B8  0100               	movlb	0	; () banked
 16266  0151BA  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16267  0151BC  0E00               	movlw	0
 16268  0151BE  0100               	movlb	0	; () banked
 16269  0151C0  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16270  0151C2  0E01               	movlw	1
 16271  0151C4  EC96  F0AE         	call	_LCD_send_command
 16272                           
 16273                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 16274  0151C8  0E00               	movlw	0
 16275  0151CA  0100               	movlb	0	; () banked
 16276  0151CC  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16277  0151CE  0E00               	movlw	0
 16278  0151D0  0100               	movlb	0	; () banked
 16279  0151D2  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16280  0151D4  0E00               	movlw	0
 16281  0151D6  0100               	movlb	0	; () banked
 16282  0151D8  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16283  0151DA  0E00               	movlw	0
 16284  0151DC  EC96  F0AE         	call	_LCD_send_command
 16285                           
 16286                           ;src\LCD_44780.c: 117: break;
 16287  0151E0  0012               	return	
 16288  0151E2                     l7650:
 16289  0151E2  0E01               	movlw	1
 16290  0151E4  0100               	movlb	0	; () banked
 16291  0151E6  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16292  0151E8  0E00               	movlw	0
 16293  0151EA  0100               	movlb	0	; () banked
 16294  0151EC  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16295  0151EE  0E00               	movlw	0
 16296  0151F0  0100               	movlb	0	; () banked
 16297  0151F2  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16298  0151F4  0E01               	movlw	1
 16299  0151F6  EC96  F0AE         	call	_LCD_send_command
 16300                           
 16301                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 16302  0151FA  0E00               	movlw	0
 16303  0151FC  0100               	movlb	0	; () banked
 16304  0151FE  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16305  015200  0E00               	movlw	0
 16306  015202  0100               	movlb	0	; () banked
 16307  015204  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16308  015206  0E00               	movlw	0
 16309  015208  0100               	movlb	0	; () banked
 16310  01520A  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16311  01520C  0E00               	movlw	0
 16312  01520E  EC96  F0AE         	call	_LCD_send_command
 16313                           
 16314                           ;src\LCD_44780.c: 121: break;
 16315  015212  0012               	return	
 16316  015214                     l7652:
 16317  015214  0E00               	movlw	0
 16318  015216  0100               	movlb	0	; () banked
 16319  015218  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16320  01521A  0E00               	movlw	0
 16321  01521C  0100               	movlb	0	; () banked
 16322  01521E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16323  015220  0E01               	movlw	1
 16324  015222  0100               	movlb	0	; () banked
 16325  015224  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16326  015226  0E01               	movlw	1
 16327  015228  EC96  F0AE         	call	_LCD_send_command
 16328                           
 16329                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 16330  01522C  0E01               	movlw	1
 16331  01522E  0100               	movlb	0	; () banked
 16332  015230  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16333  015232  0E00               	movlw	0
 16334  015234  0100               	movlb	0	; () banked
 16335  015236  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16336  015238  0E00               	movlw	0
 16337  01523A  0100               	movlb	0	; () banked
 16338  01523C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16339  01523E  0E00               	movlw	0
 16340  015240  EC96  F0AE         	call	_LCD_send_command
 16341                           
 16342                           ;src\LCD_44780.c: 125: break;
 16343  015244  0012               	return	
 16344  015246                     l7654:
 16345  015246  0E01               	movlw	1
 16346  015248  0100               	movlb	0	; () banked
 16347  01524A  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16348  01524C  0E00               	movlw	0
 16349  01524E  0100               	movlb	0	; () banked
 16350  015250  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16351  015252  0E01               	movlw	1
 16352  015254  0100               	movlb	0	; () banked
 16353  015256  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16354  015258  0E01               	movlw	1
 16355  01525A  EC96  F0AE         	call	_LCD_send_command
 16356                           
 16357                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 16358  01525E  0E01               	movlw	1
 16359  015260  0100               	movlb	0	; () banked
 16360  015262  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16361  015264  0E00               	movlw	0
 16362  015266  0100               	movlb	0	; () banked
 16363  015268  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16364  01526A  0E00               	movlw	0
 16365  01526C  0100               	movlb	0	; () banked
 16366  01526E  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16367  015270  0E00               	movlw	0
 16368  015272  EC96  F0AE         	call	_LCD_send_command
 16369                           
 16370                           ;src\LCD_44780.c: 129: }
 16371  015276  0012               	return	
 16372  015278                     l7656:
 16373  015278  0100               	movlb	0	; () banked
 16374  01527A  517E               	movf	LCD_goto_line@line& (0+255),w,b
 16375                           
 16376                           ; Switch size 1, requested type "space"
 16377                           ; Number of cases is 4, Range of values is 1 to 4
 16378                           ; switch strategies available:
 16379                           ; Name         Instructions Cycles
 16380                           ; simple_byte           13     7 (average)
 16381                           ;	Chosen strategy is simple_byte
 16382  01527C  0A01               	xorlw	1	; case 1
 16383  01527E  B4D8               	btfsc	status,2,c
 16384  015280  D797               	goto	l7648
 16385  015282  0A03               	xorlw	3	; case 2
 16386  015284  B4D8               	btfsc	status,2,c
 16387  015286  D7AD               	goto	l7650
 16388  015288  0A01               	xorlw	1	; case 3
 16389  01528A  B4D8               	btfsc	status,2,c
 16390  01528C  D7C3               	goto	l7652
 16391  01528E  0A07               	xorlw	7	; case 4
 16392  015290  A4D8               	btfss	status,2,c
 16393  015292  0012               	return	
 16394  015294  D7D8               	goto	l7654
 16395                           
 16396                           ; BSR set to: 0
 16397  015296  0012               	return		;funcret
 16398  015298                     __end_of_LCD_goto_line:
 16399                           	opt stack 0
 16400                           tblptru	equ	0xFF8
 16401                           tblptrh	equ	0xFF7
 16402                           tblptrl	equ	0xFF6
 16403                           tablat	equ	0xFF5
 16404                           prodh	equ	0xFF4
 16405                           prodl	equ	0xFF3
 16406                           intcon	equ	0xFF2
 16407                           postinc0	equ	0xFEE
 16408                           wreg	equ	0xFE8
 16409                           indf1	equ	0xFE7
 16410                           plusw1	equ	0xFE3
 16411                           fsr1h	equ	0xFE2
 16412                           fsr1l	equ	0xFE1
 16413                           indf2	equ	0xFDF
 16414                           postinc2	equ	0xFDE
 16415                           plusw2	equ	0xFDB
 16416                           fsr2h	equ	0xFDA
 16417                           fsr2l	equ	0xFD9
 16418                           status	equ	0xFD8
 16419                           
 16420 ;; *************** function _LCD_send_command *****************
 16421 ;; Defined at:
 16422 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16423 ;; Parameters:    Size  Location     Type
 16424 ;;  D3              1    wreg     unsigned char 
 16425 ;;  D2              1   26[BANK0 ] unsigned char 
 16426 ;;  D1              1   27[BANK0 ] unsigned char 
 16427 ;;  D0              1   28[BANK0 ] unsigned char 
 16428 ;; Auto vars:     Size  Location     Type
 16429 ;;  D3              1   29[BANK0 ] unsigned char 
 16430 ;; Return value:  Size  Location     Type
 16431 ;;		None               void
 16432 ;; Registers used:
 16433 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16434 ;; Tracked objects:
 16435 ;;		On entry : 0/0
 16436 ;;		On exit  : 0/0
 16437 ;;		Unchanged: 0/0
 16438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16439 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16440 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16442 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16443 ;;Total ram usage:        4 bytes
 16444 ;; Hardware stack levels used:    1
 16445 ;; Hardware stack levels required when called:    6
 16446 ;; This function calls:
 16447 ;;		_LCD_enable_pulse
 16448 ;; This function is called by:
 16449 ;;		_LCD_shift_cursor
 16450 ;;		_LCD_goto_line
 16451 ;;		_LCD_write_char
 16452 ;;		_LCD_clear
 16453 ;;		_LCD_cursor
 16454 ;;		_LCD_initialize
 16455 ;;		_LCD_home
 16456 ;;		_LCD_shift
 16457 ;; This function uses a non-reentrant model
 16458 ;;
 16459                           
 16460                           	psect	text50
 16461  015D2C                     __ptext50:
 16462                           	opt stack 0
 16463  015D2C                     _LCD_send_command:
 16464                           	opt stack 22
 16465                           
 16466                           ;incstack = 0
 16467                           ;LCD_send_command@D3 stored from wreg
 16468  015D2C  0100               	movlb	0	; () banked
 16469  015D2E  6F7D               	movwf	LCD_send_command@D3& (0+255),b
 16470                           
 16471                           ; BSR set to: 0
 16472                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 16473  015D30  0100               	movlb	0	; () banked
 16474  015D32  B17C               	btfsc	LCD_send_command@D0& (0+255),0,b
 16475  015D34  D002               	bra	u9225
 16476  015D36  948B               	bcf	3979,2,c	;volatile
 16477  015D38  D001               	bra	u9226
 16478  015D3A                     u9225:
 16479  015D3A  848B               	bsf	3979,2,c	;volatile
 16480  015D3C                     u9226:
 16481                           
 16482                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 16483  015D3C  0100               	movlb	0	; () banked
 16484  015D3E  B17B               	btfsc	LCD_send_command@D1& (0+255),0,b
 16485  015D40  D002               	bra	u9235
 16486  015D42  968B               	bcf	3979,3,c	;volatile
 16487  015D44  D001               	bra	u9236
 16488  015D46                     u9235:
 16489  015D46  868B               	bsf	3979,3,c	;volatile
 16490  015D48                     u9236:
 16491                           
 16492                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 16493  015D48  0100               	movlb	0	; () banked
 16494  015D4A  B17A               	btfsc	LCD_send_command@D2& (0+255),0,b
 16495  015D4C  D002               	bra	u9245
 16496  015D4E  908C               	bcf	3980,0,c	;volatile
 16497  015D50  D001               	bra	u9246
 16498  015D52                     u9245:
 16499  015D52  808C               	bsf	3980,0,c	;volatile
 16500  015D54                     u9246:
 16501                           
 16502                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 16503  015D54  0100               	movlb	0	; () banked
 16504  015D56  B17D               	btfsc	LCD_send_command@D3& (0+255),0,b
 16505  015D58  D002               	bra	u9255
 16506  015D5A  928C               	bcf	3980,1,c	;volatile
 16507  015D5C  D001               	bra	u9256
 16508  015D5E                     u9255:
 16509  015D5E  828C               	bsf	3980,1,c	;volatile
 16510  015D60                     u9256:
 16511                           
 16512                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 16513  015D60  ECC5  F0AF         	call	_LCD_enable_pulse	;wreg free
 16514  015D64  0012               	return		;funcret
 16515  015D66                     __end_of_LCD_send_command:
 16516                           	opt stack 0
 16517                           tblptru	equ	0xFF8
 16518                           tblptrh	equ	0xFF7
 16519                           tblptrl	equ	0xFF6
 16520                           tablat	equ	0xFF5
 16521                           prodh	equ	0xFF4
 16522                           prodl	equ	0xFF3
 16523                           intcon	equ	0xFF2
 16524                           postinc0	equ	0xFEE
 16525                           wreg	equ	0xFE8
 16526                           indf1	equ	0xFE7
 16527                           plusw1	equ	0xFE3
 16528                           fsr1h	equ	0xFE2
 16529                           fsr1l	equ	0xFE1
 16530                           indf2	equ	0xFDF
 16531                           postinc2	equ	0xFDE
 16532                           plusw2	equ	0xFDB
 16533                           fsr2h	equ	0xFDA
 16534                           fsr2l	equ	0xFD9
 16535                           status	equ	0xFD8
 16536                           
 16537 ;; *************** function _LCD_enable_pulse *****************
 16538 ;; Defined at:
 16539 ;;		line 49 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16540 ;; Parameters:    Size  Location     Type
 16541 ;;		None
 16542 ;; Auto vars:     Size  Location     Type
 16543 ;;		None
 16544 ;; Return value:  Size  Location     Type
 16545 ;;		None               void
 16546 ;; Registers used:
 16547 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16548 ;; Tracked objects:
 16549 ;;		On entry : 0/0
 16550 ;;		On exit  : 0/0
 16551 ;;		Unchanged: 0/0
 16552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16557 ;;Total ram usage:        0 bytes
 16558 ;; Hardware stack levels used:    1
 16559 ;; Hardware stack levels required when called:    5
 16560 ;; This function calls:
 16561 ;;		_delay_ms
 16562 ;; This function is called by:
 16563 ;;		_LCD_send_command
 16564 ;; This function uses a non-reentrant model
 16565 ;;
 16566                           
 16567                           	psect	text51
 16568  015F8A                     __ptext51:
 16569                           	opt stack 0
 16570  015F8A                     _LCD_enable_pulse:
 16571                           	opt stack 22
 16572                           
 16573                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 16574                           
 16575                           ;incstack = 0
 16576  015F8A  828B               	bsf	3979,1,c	;volatile
 16577                           
 16578                           ;src\LCD_44780.c: 52: delay_ms (1);
 16579  015F8C  0E00               	movlw	0
 16580  015F8E  0100               	movlb	0	; () banked
 16581  015F90  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16582  015F92  0E01               	movlw	1
 16583  015F94  6F78               	movwf	delay_ms@value_ms& (0+255),b
 16584  015F96  ECB3  F0AE         	call	_delay_ms	;wreg free
 16585                           
 16586                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 16587  015F9A  928B               	bcf	3979,1,c	;volatile
 16588                           
 16589                           ;src\LCD_44780.c: 54: delay_ms (1);
 16590  015F9C  0E00               	movlw	0
 16591  015F9E  0100               	movlb	0	; () banked
 16592  015FA0  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16593  015FA2  0E01               	movlw	1
 16594  015FA4  6F78               	movwf	delay_ms@value_ms& (0+255),b
 16595  015FA6  ECB3  F0AE         	call	_delay_ms	;wreg free
 16596  015FAA  0012               	return		;funcret
 16597  015FAC                     __end_of_LCD_enable_pulse:
 16598                           	opt stack 0
 16599                           tblptru	equ	0xFF8
 16600                           tblptrh	equ	0xFF7
 16601                           tblptrl	equ	0xFF6
 16602                           tablat	equ	0xFF5
 16603                           prodh	equ	0xFF4
 16604                           prodl	equ	0xFF3
 16605                           intcon	equ	0xFF2
 16606                           postinc0	equ	0xFEE
 16607                           wreg	equ	0xFE8
 16608                           indf1	equ	0xFE7
 16609                           plusw1	equ	0xFE3
 16610                           fsr1h	equ	0xFE2
 16611                           fsr1l	equ	0xFE1
 16612                           indf2	equ	0xFDF
 16613                           postinc2	equ	0xFDE
 16614                           plusw2	equ	0xFDB
 16615                           fsr2h	equ	0xFDA
 16616                           fsr2l	equ	0xFD9
 16617                           status	equ	0xFD8
 16618                           
 16619 ;; *************** function _delay_ms *****************
 16620 ;; Defined at:
 16621 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 16622 ;; Parameters:    Size  Location     Type
 16623 ;;  value_ms        2   24[BANK0 ] unsigned int 
 16624 ;; Auto vars:     Size  Location     Type
 16625 ;;		None
 16626 ;; Return value:  Size  Location     Type
 16627 ;;		None               void
 16628 ;; Registers used:
 16629 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16630 ;; Tracked objects:
 16631 ;;		On entry : 0/0
 16632 ;;		On exit  : 0/0
 16633 ;;		Unchanged: 0/0
 16634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16635 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16638 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16639 ;;Total ram usage:        2 bytes
 16640 ;; Hardware stack levels used:    1
 16641 ;; Hardware stack levels required when called:    4
 16642 ;; This function calls:
 16643 ;;		___wmul
 16644 ;; This function is called by:
 16645 ;;		_LCD_enable_pulse
 16646 ;;		_LCD_initialize
 16647 ;;		_main
 16648 ;;		_delay_s
 16649 ;; This function uses a non-reentrant model
 16650 ;;
 16651                           
 16652                           	psect	text52
 16653  015D66                     __ptext52:
 16654                           	opt stack 0
 16655  015D66                     _delay_ms:
 16656                           	opt stack 26
 16657                           
 16658                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 16659                           
 16660                           ;incstack = 0
 16661  015D66  C0ED  F072         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 16662  015D6A  0100               	movlb	0	; () banked
 16663  015D6C  6B73               	clrf	(___wmul@multiplier+1)& (0+255),b
 16664  015D6E  C078  F074         	movff	delay_ms@value_ms,___wmul@multiplicand
 16665  015D72  C079  F075         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 16666  015D76  ECD0  F0AE         	call	___wmul	;wreg free
 16667  015D7A  C072  F0E3         	movff	?___wmul,_clock_counter_reference	;volatile
 16668  015D7E  C073  F0E4         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 16669                           
 16670                           ;src\delay.c: 75: while (clock_counter_reference) {
 16671  015D82  D007               	goto	l589
 16672  015D84                     l7372:
 16673                           
 16674                           ;src\delay.c: 85: _delay(240);
 16675  015D84  0E50               	movlw	80
 16676  015D86                     u11447:
 16677  015D86  2EE8               	decfsz	wreg,f,c
 16678  015D88  D7FE               	goto	u11447
 16679                           
 16680                           ;src\delay.c: 88: clock_counter_reference--;
 16681  015D8A  0100               	movlb	0	; () banked
 16682  015D8C  07E3               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 16683  015D8E  A0D8               	btfss	status,0,c
 16684  015D90  07E4               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 16685  015D92                     l589:
 16686  015D92  0100               	movlb	0	; () banked
 16687  015D94  51E3               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 16688  015D96  0100               	movlb	0	; () banked
 16689  015D98  11E4               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 16690  015D9A  A4D8               	btfss	status,2,c
 16691  015D9C  D7F3               	goto	l7372
 16692                           
 16693                           ; BSR set to: 0
 16694                           
 16695                           ; BSR set to: 0
 16696  015D9E  0012               	return		;funcret
 16697  015DA0                     __end_of_delay_ms:
 16698                           	opt stack 0
 16699                           tblptru	equ	0xFF8
 16700                           tblptrh	equ	0xFF7
 16701                           tblptrl	equ	0xFF6
 16702                           tablat	equ	0xFF5
 16703                           prodh	equ	0xFF4
 16704                           prodl	equ	0xFF3
 16705                           intcon	equ	0xFF2
 16706                           postinc0	equ	0xFEE
 16707                           wreg	equ	0xFE8
 16708                           indf1	equ	0xFE7
 16709                           plusw1	equ	0xFE3
 16710                           fsr1h	equ	0xFE2
 16711                           fsr1l	equ	0xFE1
 16712                           indf2	equ	0xFDF
 16713                           postinc2	equ	0xFDE
 16714                           plusw2	equ	0xFDB
 16715                           fsr2h	equ	0xFDA
 16716                           fsr2l	equ	0xFD9
 16717                           status	equ	0xFD8
 16718                           
 16719 ;; *************** function ___wmul *****************
 16720 ;; Defined at:
 16721 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 16722 ;; Parameters:    Size  Location     Type
 16723 ;;  multiplier      2   18[BANK0 ] unsigned int 
 16724 ;;  multiplicand    2   20[BANK0 ] unsigned int 
 16725 ;; Auto vars:     Size  Location     Type
 16726 ;;  product         2   22[BANK0 ] unsigned int 
 16727 ;; Return value:  Size  Location     Type
 16728 ;;                  2   18[BANK0 ] unsigned int 
 16729 ;; Registers used:
 16730 ;;		wreg, status,2, status,0, prodl, prodh
 16731 ;; Tracked objects:
 16732 ;;		On entry : 0/0
 16733 ;;		On exit  : 0/0
 16734 ;;		Unchanged: 0/0
 16735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16736 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16737 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16739 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16740 ;;Total ram usage:        6 bytes
 16741 ;; Hardware stack levels used:    1
 16742 ;; Hardware stack levels required when called:    3
 16743 ;; This function calls:
 16744 ;;		Nothing
 16745 ;; This function is called by:
 16746 ;;		_delay_ms
 16747 ;;		_sprintf
 16748 ;; This function uses a non-reentrant model
 16749 ;;
 16750                           
 16751                           	psect	text53
 16752  015DA0                     __ptext53:
 16753                           	opt stack 0
 16754  015DA0                     ___wmul:
 16755                           	opt stack 26
 16756                           
 16757                           ; BSR set to: 0
 16758                           ;incstack = 0
 16759  015DA0  0100               	movlb	0	; () banked
 16760  015DA2  5172               	movf	___wmul@multiplier& (0+255),w,b
 16761  015DA4  0100               	movlb	0	; () banked
 16762  015DA6  0374               	mulwf	___wmul@multiplicand& (0+255),b
 16763  015DA8  CFF3 F076          	movff	prodl,___wmul@product
 16764  015DAC  CFF4 F077          	movff	prodh,___wmul@product+1
 16765  015DB0  0100               	movlb	0	; () banked
 16766  015DB2  5172               	movf	___wmul@multiplier& (0+255),w,b
 16767  015DB4  0100               	movlb	0	; () banked
 16768  015DB6  0375               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16769  015DB8  50F3               	movf	prodl,w,c
 16770  015DBA  0100               	movlb	0	; () banked
 16771  015DBC  2777               	addwf	(___wmul@product+1)& (0+255),f,b
 16772  015DBE  0100               	movlb	0	; () banked
 16773  015DC0  5173               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16774  015DC2  0100               	movlb	0	; () banked
 16775  015DC4  0374               	mulwf	___wmul@multiplicand& (0+255),b
 16776  015DC6  50F3               	movf	prodl,w,c
 16777  015DC8  0100               	movlb	0	; () banked
 16778  015DCA  2777               	addwf	(___wmul@product+1)& (0+255),f,b
 16779                           
 16780                           ; BSR set to: 0
 16781  015DCC  C076  F072         	movff	___wmul@product,?___wmul
 16782  015DD0  C077  F073         	movff	___wmul@product+1,?___wmul+1
 16783  015DD4  0012               	return	
 16784                           
 16785                           ; BSR set to: 0
 16786                           
 16787                           ; BSR set to: 0
 16788  015DD6  0012               	return		;funcret
 16789  015DD8                     __end_of___wmul:
 16790                           	opt stack 0
 16791                           tblptru	equ	0xFF8
 16792                           tblptrh	equ	0xFF7
 16793                           tblptrl	equ	0xFF6
 16794                           tablat	equ	0xFF5
 16795                           prodh	equ	0xFF4
 16796                           prodl	equ	0xFF3
 16797                           intcon	equ	0xFF2
 16798                           postinc0	equ	0xFEE
 16799                           wreg	equ	0xFE8
 16800                           indf1	equ	0xFE7
 16801                           plusw1	equ	0xFE3
 16802                           fsr1h	equ	0xFE2
 16803                           fsr1l	equ	0xFE1
 16804                           indf2	equ	0xFDF
 16805                           postinc2	equ	0xFDE
 16806                           plusw2	equ	0xFDB
 16807                           fsr2h	equ	0xFDA
 16808                           fsr2l	equ	0xFD9
 16809                           status	equ	0xFD8
 16810                           
 16811 ;; *************** function _Joystick_Polling *****************
 16812 ;; Defined at:
 16813 ;;		line 639 in file "RemoteCan.c"
 16814 ;; Parameters:    Size  Location     Type
 16815 ;;		None
 16816 ;; Auto vars:     Size  Location     Type
 16817 ;;  i               1   18[BANK0 ] unsigned char 
 16818 ;; Return value:  Size  Location     Type
 16819 ;;		None               void
 16820 ;; Registers used:
 16821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16822 ;; Tracked objects:
 16823 ;;		On entry : 0/0
 16824 ;;		On exit  : 0/0
 16825 ;;		Unchanged: 0/0
 16826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16828 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16830 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16831 ;;Total ram usage:        1 bytes
 16832 ;; Hardware stack levels used:    1
 16833 ;; Hardware stack levels required when called:    3
 16834 ;; This function calls:
 16835 ;;		Nothing
 16836 ;; This function is called by:
 16837 ;;		_main
 16838 ;; This function uses a non-reentrant model
 16839 ;;
 16840                           
 16841                           	psect	text54
 16842  015CAE                     __ptext54:
 16843                           	opt stack 0
 16844  015CAE                     _Joystick_Polling:
 16845                           	opt stack 27
 16846                           
 16847                           ;RemoteCan.c: 640: for (unsigned char i = 0; i < 2; i++) {
 16848                           
 16849                           ; BSR set to: 0
 16850                           ;incstack = 0
 16851  015CAE  0E00               	movlw	0
 16852  015CB0  0100               	movlb	0	; () banked
 16853  015CB2  6F72               	movwf	Joystick_Polling@i& (0+255),b
 16854                           
 16855                           ; BSR set to: 0
 16856  015CB4  0E01               	movlw	1
 16857  015CB6  0100               	movlb	0	; () banked
 16858  015CB8  6572               	cpfsgt	Joystick_Polling@i& (0+255),b
 16859  015CBA  D002               	goto	l954
 16860  015CBC  0012               	return	
 16861                           
 16862                           ; BSR set to: 0
 16863  015CBE  0012               	return	
 16864  015CC0                     l954:
 16865                           
 16866                           ; BSR set to: 0
 16867                           ;RemoteCan.c: 641: ADCON0bits.GO = 1;
 16868  015CC0  82C2               	bsf	4034,1,c	;volatile
 16869                           
 16870                           ;RemoteCan.c: 642: while (ADCON0bits.GO);
 16871  015CC2  D000               	goto	l956
 16872  015CC4                     l956:
 16873  015CC4  B2C2               	btfsc	4034,1,c	;volatile
 16874  015CC6  D7FE               	goto	l956
 16875                           
 16876                           ;RemoteCan.c: 643: JoystickValues[i] = ADRESH;
 16877  015CC8  0100               	movlb	0	; () banked
 16878  015CCA  5172               	movf	Joystick_Polling@i& (0+255),w,b
 16879  015CCC  0D01               	mullw	1
 16880  015CCE  0EDF               	movlw	low _JoystickValues
 16881  015CD0  24F3               	addwf	prodl,w,c
 16882  015CD2  6ED9               	movwf	fsr2l,c
 16883  015CD4  0E00               	movlw	high _JoystickValues
 16884  015CD6  20F4               	addwfc	prodh,w,c
 16885  015CD8  6EDA               	movwf	fsr2h,c
 16886  015CDA  CFC4 FFDF          	movff	4036,indf2	;volatile
 16887                           
 16888                           ; BSR set to: 0
 16889                           ;RemoteCan.c: 644: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 16890  015CDE  74C2               	btg	4034,2,c	;volatile
 16891                           
 16892                           ; BSR set to: 0
 16893  015CE0  0100               	movlb	0	; () banked
 16894  015CE2  2B72               	incf	Joystick_Polling@i& (0+255),f,b
 16895                           
 16896                           ; BSR set to: 0
 16897  015CE4  0E01               	movlw	1
 16898  015CE6  0100               	movlb	0	; () banked
 16899  015CE8  6572               	cpfsgt	Joystick_Polling@i& (0+255),b
 16900  015CEA  D7EA               	goto	l954
 16901  015CEC  0012               	return	
 16902                           
 16903                           ; BSR set to: 0
 16904                           
 16905                           ; BSR set to: 0
 16906  015CEE  0012               	return		;funcret
 16907  015CF0                     __end_of_Joystick_Polling:
 16908                           	opt stack 0
 16909                           tblptru	equ	0xFF8
 16910                           tblptrh	equ	0xFF7
 16911                           tblptrl	equ	0xFF6
 16912                           tablat	equ	0xFF5
 16913                           prodh	equ	0xFF4
 16914                           prodl	equ	0xFF3
 16915                           intcon	equ	0xFF2
 16916                           postinc0	equ	0xFEE
 16917                           wreg	equ	0xFE8
 16918                           indf1	equ	0xFE7
 16919                           plusw1	equ	0xFE3
 16920                           fsr1h	equ	0xFE2
 16921                           fsr1l	equ	0xFE1
 16922                           indf2	equ	0xFDF
 16923                           postinc2	equ	0xFDE
 16924                           plusw2	equ	0xFDB
 16925                           fsr2h	equ	0xFDA
 16926                           fsr2l	equ	0xFD9
 16927                           status	equ	0xFD8
 16928                           
 16929 ;; *************** function _F2_Button_Polling *****************
 16930 ;; Defined at:
 16931 ;;		line 629 in file "RemoteCan.c"
 16932 ;; Parameters:    Size  Location     Type
 16933 ;;		None
 16934 ;; Auto vars:     Size  Location     Type
 16935 ;;		None
 16936 ;; Return value:  Size  Location     Type
 16937 ;;		None               void
 16938 ;; Registers used:
 16939 ;;		None
 16940 ;; Tracked objects:
 16941 ;;		On entry : 0/0
 16942 ;;		On exit  : 0/0
 16943 ;;		Unchanged: 0/0
 16944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16949 ;;Total ram usage:        0 bytes
 16950 ;; Hardware stack levels used:    1
 16951 ;; Hardware stack levels required when called:    3
 16952 ;; This function calls:
 16953 ;;		Nothing
 16954 ;; This function is called by:
 16955 ;;		_main
 16956 ;; This function uses a non-reentrant model
 16957 ;;
 16958                           
 16959                           	psect	text55
 16960  01602E                     __ptext55:
 16961                           	opt stack 0
 16962  01602E                     _F2_Button_Polling:
 16963                           	opt stack 27
 16964                           
 16965                           ;RemoteCan.c: 630: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 16966                           
 16967                           ; BSR set to: 0
 16968                           ;incstack = 0
 16969  01602E  A281               	btfss	3969,1,c	;volatile
 16970  016030  D002               	goto	l949
 16971  016032  B44C               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16972  016034  0012               	return	
 16973  016036                     l949:
 16974                           
 16975                           ;RemoteCan.c: 631: wait_low_3 = 0;
 16976  016036  944C               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16977                           
 16978                           ;RemoteCan.c: 632: if (PORTBbits.RB1 == 1) {
 16979  016038  A281               	btfss	3969,1,c	;volatile
 16980  01603A  0012               	return	
 16981                           
 16982                           ;RemoteCan.c: 633: F2_switch = ~F2_switch;
 16983  01603C  744A               	btg	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16984                           
 16985                           ;RemoteCan.c: 634: wait_low_3 = 1;
 16986  01603E  844C               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16987  016040  0012               	return	
 16988  016042  0012               	return		;funcret
 16989  016044                     __end_of_F2_Button_Polling:
 16990                           	opt stack 0
 16991                           tblptru	equ	0xFF8
 16992                           tblptrh	equ	0xFF7
 16993                           tblptrl	equ	0xFF6
 16994                           tablat	equ	0xFF5
 16995                           prodh	equ	0xFF4
 16996                           prodl	equ	0xFF3
 16997                           intcon	equ	0xFF2
 16998                           postinc0	equ	0xFEE
 16999                           wreg	equ	0xFE8
 17000                           indf1	equ	0xFE7
 17001                           plusw1	equ	0xFE3
 17002                           fsr1h	equ	0xFE2
 17003                           fsr1l	equ	0xFE1
 17004                           indf2	equ	0xFDF
 17005                           postinc2	equ	0xFDE
 17006                           plusw2	equ	0xFDB
 17007                           fsr2h	equ	0xFDA
 17008                           fsr2l	equ	0xFD9
 17009                           status	equ	0xFD8
 17010                           
 17011 ;; *************** function _F1_Button_Polling *****************
 17012 ;; Defined at:
 17013 ;;		line 619 in file "RemoteCan.c"
 17014 ;; Parameters:    Size  Location     Type
 17015 ;;		None
 17016 ;; Auto vars:     Size  Location     Type
 17017 ;;		None
 17018 ;; Return value:  Size  Location     Type
 17019 ;;		None               void
 17020 ;; Registers used:
 17021 ;;		None
 17022 ;; Tracked objects:
 17023 ;;		On entry : 0/0
 17024 ;;		On exit  : 0/0
 17025 ;;		Unchanged: 0/0
 17026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17031 ;;Total ram usage:        0 bytes
 17032 ;; Hardware stack levels used:    1
 17033 ;; Hardware stack levels required when called:    3
 17034 ;; This function calls:
 17035 ;;		Nothing
 17036 ;; This function is called by:
 17037 ;;		_main
 17038 ;; This function uses a non-reentrant model
 17039 ;;
 17040                           
 17041                           	psect	text56
 17042  016044                     __ptext56:
 17043                           	opt stack 0
 17044  016044                     _F1_Button_Polling:
 17045                           	opt stack 27
 17046                           
 17047                           ;RemoteCan.c: 620: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 17048                           
 17049                           ;incstack = 0
 17050  016044  A881               	btfss	3969,4,c	;volatile
 17051  016046  D002               	goto	l942
 17052  016048  B24C               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17053  01604A  0012               	return	
 17054  01604C                     l942:
 17055                           
 17056                           ;RemoteCan.c: 621: wait_low_2 = 0;
 17057  01604C  924C               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17058                           
 17059                           ;RemoteCan.c: 622: if (PORTBbits.RB4 == 1) {
 17060  01604E  A881               	btfss	3969,4,c	;volatile
 17061  016050  0012               	return	
 17062                           
 17063                           ;RemoteCan.c: 623: F1_switch = ~F1_switch;
 17064  016052  724A               	btg	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 17065                           
 17066                           ;RemoteCan.c: 624: wait_low_2 = 1;
 17067  016054  824C               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17068  016056  0012               	return	
 17069  016058  0012               	return		;funcret
 17070  01605A                     __end_of_F1_Button_Polling:
 17071                           	opt stack 0
 17072                           tblptru	equ	0xFF8
 17073                           tblptrh	equ	0xFF7
 17074                           tblptrl	equ	0xFF6
 17075                           tablat	equ	0xFF5
 17076                           prodh	equ	0xFF4
 17077                           prodl	equ	0xFF3
 17078                           intcon	equ	0xFF2
 17079                           postinc0	equ	0xFEE
 17080                           wreg	equ	0xFE8
 17081                           indf1	equ	0xFE7
 17082                           plusw1	equ	0xFE3
 17083                           fsr1h	equ	0xFE2
 17084                           fsr1l	equ	0xFE1
 17085                           indf2	equ	0xFDF
 17086                           postinc2	equ	0xFDE
 17087                           plusw2	equ	0xFDB
 17088                           fsr2h	equ	0xFDA
 17089                           fsr2l	equ	0xFD9
 17090                           status	equ	0xFD8
 17091                           
 17092 ;; *************** function _CAN_Tx *****************
 17093 ;; Defined at:
 17094 ;;		line 648 in file "RemoteCan.c"
 17095 ;; Parameters:    Size  Location     Type
 17096 ;;		None
 17097 ;; Auto vars:     Size  Location     Type
 17098 ;;		None
 17099 ;; Return value:  Size  Location     Type
 17100 ;;		None               void
 17101 ;; Registers used:
 17102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17103 ;; Tracked objects:
 17104 ;;		On entry : 0/0
 17105 ;;		On exit  : 0/0
 17106 ;;		Unchanged: 0/0
 17107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17112 ;;Total ram usage:        0 bytes
 17113 ;; Hardware stack levels used:    1
 17114 ;; Hardware stack levels required when called:    4
 17115 ;; This function calls:
 17116 ;;		_CANisTxReady
 17117 ;;		_CANsendMessage
 17118 ;; This function is called by:
 17119 ;;		_main
 17120 ;; This function uses a non-reentrant model
 17121 ;;
 17122                           
 17123                           	psect	text57
 17124  0154F2                     __ptext57:
 17125                           	opt stack 0
 17126  0154F2                     _CAN_Tx:
 17127                           	opt stack 26
 17128                           
 17129                           ;RemoteCan.c: 650: while (CANisTxReady() != 1);
 17130                           
 17131                           ;incstack = 0
 17132  0154F2  D000               	goto	l6538
 17133  0154F4                     l6538:
 17134  0154F4  ECB2  F0AF         	call	_CANisTxReady	;wreg free
 17135  0154F8  06E8               	decf	wreg,f,c
 17136  0154FA  A4D8               	btfss	status,2,c
 17137  0154FC  D7FB               	goto	l6538
 17138                           
 17139                           ;RemoteCan.c: 651: CANsendMessage(0b00000000111, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17140  0154FE  0E07               	movlw	7
 17141  015500  0100               	movlb	0	; () banked
 17142  015502  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 17143  015504  0E00               	movlw	0
 17144  015506  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17145  015508  0E00               	movlw	0
 17146  01550A  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17147  01550C  0E00               	movlw	0
 17148  01550E  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17149  015510  0E26               	movlw	low _data_steering
 17150  015512  0100               	movlb	0	; () banked
 17151  015514  6F76               	movwf	CANsendMessage@data& (0+255),b
 17152  015516  0E01               	movlw	high _data_steering
 17153  015518  0100               	movlb	0	; () banked
 17154  01551A  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 17155  01551C  0E08               	movlw	8
 17156  01551E  0100               	movlb	0	; () banked
 17157  015520  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 17158  015522  0EBC               	movlw	188
 17159  015524  0100               	movlb	0	; () banked
 17160  015526  6F79               	movwf	CANsendMessage@flags& (0+255),b
 17161  015528  EC48  F08E         	call	_CANsendMessage	;wreg free
 17162                           
 17163                           ;RemoteCan.c: 654: data_speed[0] = set_speed;
 17164  01552C  C0E5  F11E         	movff	_set_speed,_data_speed	;volatile
 17165                           
 17166                           ;RemoteCan.c: 655: data_speed[1] = (set_speed >> 8);
 17167  015530  0100               	movlb	0	; () banked
 17168  015532  51E6               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 17169  015534  0101               	movlb	1	; () banked
 17170  015536  6F1F               	movwf	(_data_speed+1)& (0+255),b
 17171                           
 17172                           ; BSR set to: 1
 17173                           ;RemoteCan.c: 656: data_speed[2] = dir;
 17174  015538  C0E8  F120         	movff	_dir,_data_speed+2	;volatile
 17175                           
 17176                           ; BSR set to: 1
 17177                           
 17178                           ;RemoteCan.c: 657: while (CANisTxReady() != 1);
 17179  01553C  D000               	goto	l6548
 17180  01553E                     l6548:
 17181  01553E  ECB2  F0AF         	call	_CANisTxReady	;wreg free
 17182  015542  06E8               	decf	wreg,f,c
 17183  015544  A4D8               	btfss	status,2,c
 17184  015546  D7FB               	goto	l6548
 17185                           
 17186                           ;RemoteCan.c: 658: CANsendMessage(0b00000000101, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17187  015548  0E05               	movlw	5
 17188  01554A  0100               	movlb	0	; () banked
 17189  01554C  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 17190  01554E  0E00               	movlw	0
 17191  015550  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17192  015552  0E00               	movlw	0
 17193  015554  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17194  015556  0E00               	movlw	0
 17195  015558  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17196  01555A  0E1E               	movlw	low _data_speed
 17197  01555C  0100               	movlb	0	; () banked
 17198  01555E  6F76               	movwf	CANsendMessage@data& (0+255),b
 17199  015560  0E01               	movlw	high _data_speed
 17200  015562  0100               	movlb	0	; () banked
 17201  015564  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 17202  015566  0E08               	movlw	8
 17203  015568  0100               	movlb	0	; () banked
 17204  01556A  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 17205  01556C  0EBC               	movlw	188
 17206  01556E  0100               	movlb	0	; () banked
 17207  015570  6F79               	movwf	CANsendMessage@flags& (0+255),b
 17208  015572  EC48  F08E         	call	_CANsendMessage	;wreg free
 17209                           
 17210                           ;RemoteCan.c: 661: while (CANisTxReady() != 1);
 17211  015576  D000               	goto	l6552
 17212  015578                     l6552:
 17213  015578  ECB2  F0AF         	call	_CANisTxReady	;wreg free
 17214  01557C  06E8               	decf	wreg,f,c
 17215  01557E  A4D8               	btfss	status,2,c
 17216  015580  D7FB               	goto	l6552
 17217                           
 17218                           ;RemoteCan.c: 662: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17219  015582  0E06               	movlw	6
 17220  015584  0100               	movlb	0	; () banked
 17221  015586  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 17222  015588  0E00               	movlw	0
 17223  01558A  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17224  01558C  0E00               	movlw	0
 17225  01558E  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17226  015590  0E00               	movlw	0
 17227  015592  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17228  015594  0E21               	movlw	low _data_brake
 17229  015596  0100               	movlb	0	; () banked
 17230  015598  6F76               	movwf	CANsendMessage@data& (0+255),b
 17231  01559A  0E00               	movlw	high _data_brake
 17232  01559C  0100               	movlb	0	; () banked
 17233  01559E  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 17234  0155A0  0E08               	movlw	8
 17235  0155A2  0100               	movlb	0	; () banked
 17236  0155A4  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 17237  0155A6  0EBC               	movlw	188
 17238  0155A8  0100               	movlb	0	; () banked
 17239  0155AA  6F79               	movwf	CANsendMessage@flags& (0+255),b
 17240  0155AC  EC48  F08E         	call	_CANsendMessage	;wreg free
 17241  0155B0  0012               	return		;funcret
 17242  0155B2                     __end_of_CAN_Tx:
 17243                           	opt stack 0
 17244                           tblptru	equ	0xFF8
 17245                           tblptrh	equ	0xFF7
 17246                           tblptrl	equ	0xFF6
 17247                           tablat	equ	0xFF5
 17248                           prodh	equ	0xFF4
 17249                           prodl	equ	0xFF3
 17250                           intcon	equ	0xFF2
 17251                           postinc0	equ	0xFEE
 17252                           wreg	equ	0xFE8
 17253                           indf1	equ	0xFE7
 17254                           plusw1	equ	0xFE3
 17255                           fsr1h	equ	0xFE2
 17256                           fsr1l	equ	0xFE1
 17257                           indf2	equ	0xFDF
 17258                           postinc2	equ	0xFDE
 17259                           plusw2	equ	0xFDB
 17260                           fsr2h	equ	0xFDA
 17261                           fsr2l	equ	0xFD9
 17262                           status	equ	0xFD8
 17263                           
 17264 ;; *************** function _CANsendMessage *****************
 17265 ;; Defined at:
 17266 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 17267 ;; Parameters:    Size  Location     Type
 17268 ;;  identifier      4   18[BANK0 ] unsigned long 
 17269 ;;  data            2   22[BANK0 ] PTR unsigned char 
 17270 ;;		 -> data_speed(8), park_assist_state(8), data_steering(8), data_brake(8), 
 17271 ;;		 -> data(8), 
 17272 ;;  dataLength      1   24[BANK0 ] unsigned char 
 17273 ;;  flags           1   25[BANK0 ] enum E16950
 17274 ;; Auto vars:     Size  Location     Type
 17275 ;;  tamp            4   30[BANK0 ] unsigned long 
 17276 ;; Return value:  Size  Location     Type
 17277 ;;		None               void
 17278 ;; Registers used:
 17279 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17280 ;; Tracked objects:
 17281 ;;		On entry : 0/0
 17282 ;;		On exit  : 0/0
 17283 ;;		Unchanged: 0/0
 17284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17285 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17286 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17287 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17288 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17289 ;;Total ram usage:       16 bytes
 17290 ;; Hardware stack levels used:    1
 17291 ;; Hardware stack levels required when called:    3
 17292 ;; This function calls:
 17293 ;;		Nothing
 17294 ;; This function is called by:
 17295 ;;		_main
 17296 ;;		_LCD_Handler
 17297 ;;		_CAN_Tx
 17298 ;; This function uses a non-reentrant model
 17299 ;;
 17300                           
 17301                           	psect	text58
 17302  011C90                     __ptext58:
 17303                           	opt stack 0
 17304  011C90                     _CANsendMessage:
 17305                           	opt stack 26
 17306                           
 17307                           ;inc\CANlib.h: 296: unsigned long tamp;
 17308                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 17309                           
 17310                           ;incstack = 0
 17311  011C90  010F               	movlb	15	; () banked
 17312  011C92  B740               	btfsc	64,3,b	;volatile
 17313  011C94  D142               	goto	l383
 17314                           
 17315                           ; BSR set to: 15
 17316                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 17317  011C96  C078  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 17318                           
 17319                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 17320  011C9A  0100               	movlb	0	; () banked
 17321  011C9C  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 17322  011C9E  D003               	goto	l384
 17323                           
 17324                           ; BSR set to: 0
 17325                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 17326  011CA0  010F               	movlb	15	; () banked
 17327  011CA2  8D45               	bsf	69,6,b	;volatile
 17328  011CA4  D002               	goto	l385
 17329  011CA6                     l384:
 17330                           
 17331                           ; BSR set to: 0
 17332                           ;inc\CANlib.h: 302: else
 17333                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 17334  011CA6  010F               	movlb	15	; () banked
 17335  011CA8  9D45               	bcf	69,6,b	;volatile
 17336  011CAA                     l385:
 17337                           
 17338                           ; BSR set to: 15
 17339                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 17340  011CAA  0100               	movlb	0	; () banked
 17341  011CAC  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 17342  011CAE  D07A               	goto	l386
 17343                           
 17344                           ; BSR set to: 0
 17345                           ;inc\CANlib.h: 306: {
 17346                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 17347  011CB0  0100               	movlb	0	; () banked
 17348  011CB2  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 17349  011CB4  0100               	movlb	0	; () banked
 17350  011CB6  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17351  011CB8  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17352  011CBA  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17353  011CBC  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17354                           
 17355                           ; BSR set to: 0
 17356                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 17357  011CBE  C07E  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 17358                           
 17359                           ; BSR set to: 0
 17360                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 17361  011CC2  0E00               	movlw	0
 17362  011CC4  0100               	movlb	0	; () banked
 17363  011CC6  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 17364  011CC8  0100               	movlb	0	; () banked
 17365  011CCA  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17366  011CCC  0EFF               	movlw	255
 17367  011CCE  0100               	movlb	0	; () banked
 17368  011CD0  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17369  011CD2  0100               	movlb	0	; () banked
 17370  011CD4  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17371  011CD6  0E00               	movlw	0
 17372  011CD8  0100               	movlb	0	; () banked
 17373  011CDA  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17374  011CDC  0100               	movlb	0	; () banked
 17375  011CDE  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17376  011CE0  0E00               	movlw	0
 17377  011CE2  0100               	movlb	0	; () banked
 17378  011CE4  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17379  011CE6  0100               	movlb	0	; () banked
 17380  011CE8  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17381                           
 17382                           ; BSR set to: 0
 17383                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 17384  011CEA  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 17385  011CEE  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17386  011CF2  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17387  011CF6  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17388  011CFA  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 17389  011CFE  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17390  011D02  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17391  011D06  0100               	movlb	0	; () banked
 17392  011D08  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 17393  011D0A  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17394  011D0E  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17395  011D12  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17396  011D16  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17397                           
 17398                           ; BSR set to: 0
 17399                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 17400  011D1A  C07E  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 17401                           
 17402                           ; BSR set to: 0
 17403                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 17404  011D1E  0E00               	movlw	0
 17405  011D20  010F               	movlb	15	; () banked
 17406  011D22  6F42               	movwf	66,b	;volatile
 17407                           
 17408                           ; BSR set to: 15
 17409                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 17410  011D24  010F               	movlb	15	; () banked
 17411  011D26  8742               	bsf	66,3,b	;volatile
 17412                           
 17413                           ; BSR set to: 15
 17414                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 17415  011D28  0100               	movlb	0	; () banked
 17416  011D2A  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17417  011D2C  D002               	goto	l387
 17418                           
 17419                           ; BSR set to: 0
 17420                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 17421  011D2E  010F               	movlb	15	; () banked
 17422  011D30  8142               	bsf	66,0,b	;volatile
 17423  011D32                     l387:
 17424                           
 17425                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 17426  011D32  0100               	movlb	0	; () banked
 17427  011D34  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17428  011D36  D002               	goto	l388
 17429                           
 17430                           ; BSR set to: 0
 17431                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 17432  011D38  010F               	movlb	15	; () banked
 17433  011D3A  8342               	bsf	66,1,b	;volatile
 17434  011D3C                     l388:
 17435                           
 17436                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 17437  011D3C  0100               	movlb	0	; () banked
 17438  011D3E  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17439  011D40  D002               	goto	l389
 17440                           
 17441                           ; BSR set to: 0
 17442                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 17443  011D42  010F               	movlb	15	; () banked
 17444  011D44  8B42               	bsf	66,5,b	;volatile
 17445  011D46                     l389:
 17446                           
 17447                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 17448  011D46  0100               	movlb	0	; () banked
 17449  011D48  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17450  011D4A  D002               	goto	l390
 17451                           
 17452                           ; BSR set to: 0
 17453                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 17454  011D4C  010F               	movlb	15	; () banked
 17455  011D4E  8D42               	bsf	66,6,b	;volatile
 17456  011D50                     l390:
 17457                           
 17458                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 17459  011D50  0100               	movlb	0	; () banked
 17460  011D52  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17461  011D54  D003               	goto	l5758
 17462                           
 17463                           ; BSR set to: 0
 17464                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 17465  011D56  010F               	movlb	15	; () banked
 17466  011D58  8F42               	bsf	66,7,b	;volatile
 17467  011D5A  D000               	goto	l5758
 17468  011D5C                     l5758:
 17469                           
 17470                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 17471  011D5C  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 17472  011D60  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17473  011D64  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17474  011D68  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17475  011D6C  0E16               	movlw	22
 17476  011D6E  D006               	goto	u6740
 17477  011D70                     u6745:
 17478  011D70  0100               	movlb	0	; () banked
 17479  011D72  90D8               	bcf	status,0,c
 17480  011D74  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17481  011D76  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17482  011D78  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17483  011D7A  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 17484  011D7C                     u6740:
 17485  011D7C  2EE8               	decfsz	wreg,f,c
 17486  011D7E  D7F8               	goto	u6745
 17487  011D80  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17488  011D84  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17489  011D88  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17490  011D8C  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17491                           
 17492                           ; BSR set to: 0
 17493                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17494  011D90  0100               	movlb	0	; () banked
 17495  011D92  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 17496  011D94  0100               	movlb	0	; () banked
 17497  011D96  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17498  011D98  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17499  011D9A  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17500  011D9C  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17501                           
 17502                           ; BSR set to: 0
 17503                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17504  011D9E  C07E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17505                           
 17506                           ;inc\CANlib.h: 332: }
 17507  011DA2  D05A               	goto	l5778
 17508  011DA4                     l386:
 17509                           
 17510                           ; BSR set to: 0
 17511                           ;inc\CANlib.h: 334: else
 17512                           ;inc\CANlib.h: 336: {
 17513                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17514  011DA4  010F               	movlb	15	; () banked
 17515  011DA6  9742               	bcf	66,3,b	;volatile
 17516                           
 17517                           ; BSR set to: 15
 17518                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17519  011DA8  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 17520  011DAC  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17521  011DB0  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17522  011DB4  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17523  011DB8  0E04               	movlw	4
 17524  011DBA  D006               	goto	u6750
 17525  011DBC                     u6755:
 17526  011DBC  0100               	movlb	0	; () banked
 17527  011DBE  90D8               	bcf	status,0,c
 17528  011DC0  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17529  011DC2  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17530  011DC4  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17531  011DC6  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 17532  011DC8                     u6750:
 17533  011DC8  2EE8               	decfsz	wreg,f,c
 17534  011DCA  D7F8               	goto	u6755
 17535  011DCC  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17536  011DD0  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17537  011DD4  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17538  011DD8  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17539                           
 17540                           ; BSR set to: 0
 17541                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17542  011DDC  0100               	movlb	0	; () banked
 17543  011DDE  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 17544  011DE0  0100               	movlb	0	; () banked
 17545  011DE2  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17546  011DE4  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17547  011DE6  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17548  011DE8  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17549                           
 17550                           ; BSR set to: 0
 17551                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17552  011DEA  C07E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17553                           
 17554                           ; BSR set to: 0
 17555                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17556  011DEE  0E07               	movlw	7
 17557  011DF0  0100               	movlb	0	; () banked
 17558  011DF2  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 17559  011DF4  0100               	movlb	0	; () banked
 17560  011DF6  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17561  011DF8  0E00               	movlw	0
 17562  011DFA  0100               	movlb	0	; () banked
 17563  011DFC  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17564  011DFE  0100               	movlb	0	; () banked
 17565  011E00  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17566  011E02  0E00               	movlw	0
 17567  011E04  0100               	movlb	0	; () banked
 17568  011E06  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17569  011E08  0100               	movlb	0	; () banked
 17570  011E0A  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17571  011E0C  0E00               	movlw	0
 17572  011E0E  0100               	movlb	0	; () banked
 17573  011E10  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17574  011E12  0100               	movlb	0	; () banked
 17575  011E14  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17576                           
 17577                           ; BSR set to: 0
 17578                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17579  011E16  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 17580  011E1A  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17581  011E1E  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17582  011E22  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17583  011E26  0E05               	movlw	5
 17584  011E28                     u6765:
 17585  011E28  90D8               	bcf	status,0,c
 17586  011E2A  0100               	movlb	0	; () banked
 17587  011E2C  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 17588  011E2E  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17589  011E30  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17590  011E32  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17591  011E34  2EE8               	decfsz	wreg,f,c
 17592  011E36  D7F8               	goto	u6765
 17593  011E38  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17594  011E3C  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17595  011E40  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17596  011E44  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17597                           
 17598                           ; BSR set to: 0
 17599                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17600  011E48  010F               	movlb	15	; () banked
 17601  011E4A  5142               	movf	66,w,b	;volatile
 17602  011E4C  0B1F               	andlw	31
 17603  011E4E  010F               	movlb	15	; () banked
 17604  011E50  6F42               	movwf	66,b	;volatile
 17605                           
 17606                           ; BSR set to: 15
 17607                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17608  011E52  C07E  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 17609  011E56  D000               	goto	l5778
 17610  011E58                     l5778:
 17611                           
 17612                           ;inc\CANlib.h: 347: }
 17613                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17614  011E58  0100               	movlb	0	; () banked
 17615  011E5A  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 17616  011E5C  D003               	goto	l393
 17617                           
 17618                           ; BSR set to: 0
 17619                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17620  011E5E  010F               	movlb	15	; () banked
 17621  011E60  8140               	bsf	64,0,b	;volatile
 17622  011E62  D002               	goto	l394
 17623  011E64                     l393:
 17624                           
 17625                           ; BSR set to: 0
 17626                           ;inc\CANlib.h: 351: else
 17627                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17628  011E64  010F               	movlb	15	; () banked
 17629  011E66  9140               	bcf	64,0,b	;volatile
 17630  011E68                     l394:
 17631                           
 17632                           ; BSR set to: 15
 17633                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17634  011E68  0100               	movlb	0	; () banked
 17635  011E6A  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 17636  011E6C  D003               	goto	l395
 17637                           
 17638                           ; BSR set to: 0
 17639                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 17640  011E6E  010F               	movlb	15	; () banked
 17641  011E70  8340               	bsf	64,1,b	;volatile
 17642  011E72  D003               	goto	l5784
 17643  011E74                     l395:
 17644                           
 17645                           ; BSR set to: 0
 17646                           ;inc\CANlib.h: 355: else
 17647                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 17648  011E74  010F               	movlb	15	; () banked
 17649  011E76  9340               	bcf	64,1,b	;volatile
 17650  011E78  D000               	goto	l5784
 17651  011E7A                     l5784:
 17652                           
 17653                           ; BSR set to: 15
 17654                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 17655  011E7A  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 17656  011E7E  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17657  011E82  50DF               	movf	indf2,w,c
 17658  011E84  010F               	movlb	15	; () banked
 17659  011E86  6F46               	movwf	70,b	;volatile
 17660                           
 17661                           ; BSR set to: 15
 17662                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 17663  011E88  0100               	movlb	0	; () banked
 17664  011E8A  EE20 F001          	lfsr	2,1
 17665  011E8E  5176               	movf	CANsendMessage@data& (0+255),w,b
 17666  011E90  26D9               	addwf	fsr2l,f,c
 17667  011E92  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17668  011E94  22DA               	addwfc	fsr2h,f,c
 17669  011E96  50DF               	movf	indf2,w,c
 17670  011E98  010F               	movlb	15	; () banked
 17671  011E9A  6F47               	movwf	71,b	;volatile
 17672                           
 17673                           ; BSR set to: 15
 17674                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 17675  011E9C  0100               	movlb	0	; () banked
 17676  011E9E  EE20 F002          	lfsr	2,2
 17677  011EA2  5176               	movf	CANsendMessage@data& (0+255),w,b
 17678  011EA4  26D9               	addwf	fsr2l,f,c
 17679  011EA6  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17680  011EA8  22DA               	addwfc	fsr2h,f,c
 17681  011EAA  50DF               	movf	indf2,w,c
 17682  011EAC  010F               	movlb	15	; () banked
 17683  011EAE  6F48               	movwf	72,b	;volatile
 17684                           
 17685                           ; BSR set to: 15
 17686                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 17687  011EB0  0100               	movlb	0	; () banked
 17688  011EB2  EE20 F003          	lfsr	2,3
 17689  011EB6  5176               	movf	CANsendMessage@data& (0+255),w,b
 17690  011EB8  26D9               	addwf	fsr2l,f,c
 17691  011EBA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17692  011EBC  22DA               	addwfc	fsr2h,f,c
 17693  011EBE  50DF               	movf	indf2,w,c
 17694  011EC0  010F               	movlb	15	; () banked
 17695  011EC2  6F49               	movwf	73,b	;volatile
 17696                           
 17697                           ; BSR set to: 15
 17698                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 17699  011EC4  0100               	movlb	0	; () banked
 17700  011EC6  EE20 F004          	lfsr	2,4
 17701  011ECA  5176               	movf	CANsendMessage@data& (0+255),w,b
 17702  011ECC  26D9               	addwf	fsr2l,f,c
 17703  011ECE  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17704  011ED0  22DA               	addwfc	fsr2h,f,c
 17705  011ED2  50DF               	movf	indf2,w,c
 17706  011ED4  010F               	movlb	15	; () banked
 17707  011ED6  6F4A               	movwf	74,b	;volatile
 17708                           
 17709                           ; BSR set to: 15
 17710                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17711  011ED8  0100               	movlb	0	; () banked
 17712  011EDA  EE20 F005          	lfsr	2,5
 17713  011EDE  5176               	movf	CANsendMessage@data& (0+255),w,b
 17714  011EE0  26D9               	addwf	fsr2l,f,c
 17715  011EE2  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17716  011EE4  22DA               	addwfc	fsr2h,f,c
 17717  011EE6  50DF               	movf	indf2,w,c
 17718  011EE8  010F               	movlb	15	; () banked
 17719  011EEA  6F4B               	movwf	75,b	;volatile
 17720                           
 17721                           ; BSR set to: 15
 17722                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17723  011EEC  0100               	movlb	0	; () banked
 17724  011EEE  EE20 F006          	lfsr	2,6
 17725  011EF2  5176               	movf	CANsendMessage@data& (0+255),w,b
 17726  011EF4  26D9               	addwf	fsr2l,f,c
 17727  011EF6  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17728  011EF8  22DA               	addwfc	fsr2h,f,c
 17729  011EFA  50DF               	movf	indf2,w,c
 17730  011EFC  010F               	movlb	15	; () banked
 17731  011EFE  6F4C               	movwf	76,b	;volatile
 17732                           
 17733                           ; BSR set to: 15
 17734                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17735  011F00  0100               	movlb	0	; () banked
 17736  011F02  EE20 F007          	lfsr	2,7
 17737  011F06  5176               	movf	CANsendMessage@data& (0+255),w,b
 17738  011F08  26D9               	addwf	fsr2l,f,c
 17739  011F0A  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17740  011F0C  22DA               	addwfc	fsr2h,f,c
 17741  011F0E  50DF               	movf	indf2,w,c
 17742  011F10  010F               	movlb	15	; () banked
 17743  011F12  6F4D               	movwf	77,b	;volatile
 17744                           
 17745                           ; BSR set to: 15
 17746                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17747  011F14  010F               	movlb	15	; () banked
 17748  011F16  8740               	bsf	64,3,b	;volatile
 17749                           
 17750                           ; BSR set to: 15
 17751                           ;inc\CANlib.h: 368: return;
 17752  011F18  0012               	return	
 17753  011F1A                     l383:
 17754                           
 17755                           ; BSR set to: 15
 17756                           ;inc\CANlib.h: 369: }
 17757                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17758  011F1A  010F               	movlb	15	; () banked
 17759  011F1C  B730               	btfsc	48,3,b	;volatile
 17760  011F1E  D142               	goto	l398
 17761                           
 17762                           ; BSR set to: 15
 17763                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17764  011F20  C078  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 17765                           
 17766                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17767  011F24  0100               	movlb	0	; () banked
 17768  011F26  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 17769  011F28  D003               	goto	l399
 17770                           
 17771                           ; BSR set to: 0
 17772                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17773  011F2A  010F               	movlb	15	; () banked
 17774  011F2C  8D35               	bsf	53,6,b	;volatile
 17775  011F2E  D002               	goto	l400
 17776  011F30                     l399:
 17777                           
 17778                           ; BSR set to: 0
 17779                           ;inc\CANlib.h: 378: else
 17780                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17781  011F30  010F               	movlb	15	; () banked
 17782  011F32  9D35               	bcf	53,6,b	;volatile
 17783  011F34                     l400:
 17784                           
 17785                           ; BSR set to: 15
 17786                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 17787  011F34  0100               	movlb	0	; () banked
 17788  011F36  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 17789  011F38  D07A               	goto	l401
 17790                           
 17791                           ; BSR set to: 0
 17792                           ;inc\CANlib.h: 382: {
 17793                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 17794  011F3A  0100               	movlb	0	; () banked
 17795  011F3C  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 17796  011F3E  0100               	movlb	0	; () banked
 17797  011F40  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17798  011F42  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17799  011F44  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17800  011F46  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17801                           
 17802                           ; BSR set to: 0
 17803                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 17804  011F48  C07E  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 17805                           
 17806                           ; BSR set to: 0
 17807                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 17808  011F4C  0E00               	movlw	0
 17809  011F4E  0100               	movlb	0	; () banked
 17810  011F50  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 17811  011F52  0100               	movlb	0	; () banked
 17812  011F54  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17813  011F56  0EFF               	movlw	255
 17814  011F58  0100               	movlb	0	; () banked
 17815  011F5A  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17816  011F5C  0100               	movlb	0	; () banked
 17817  011F5E  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17818  011F60  0E00               	movlw	0
 17819  011F62  0100               	movlb	0	; () banked
 17820  011F64  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17821  011F66  0100               	movlb	0	; () banked
 17822  011F68  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17823  011F6A  0E00               	movlw	0
 17824  011F6C  0100               	movlb	0	; () banked
 17825  011F6E  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17826  011F70  0100               	movlb	0	; () banked
 17827  011F72  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17828                           
 17829                           ; BSR set to: 0
 17830                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 17831  011F74  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 17832  011F78  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17833  011F7C  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17834  011F80  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17835  011F84  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 17836  011F88  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17837  011F8C  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17838  011F90  0100               	movlb	0	; () banked
 17839  011F92  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 17840  011F94  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17841  011F98  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17842  011F9C  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17843  011FA0  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17844                           
 17845                           ; BSR set to: 0
 17846                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 17847  011FA4  C07E  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 17848                           
 17849                           ; BSR set to: 0
 17850                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 17851  011FA8  0E00               	movlw	0
 17852  011FAA  010F               	movlb	15	; () banked
 17853  011FAC  6F32               	movwf	50,b	;volatile
 17854                           
 17855                           ; BSR set to: 15
 17856                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 17857  011FAE  010F               	movlb	15	; () banked
 17858  011FB0  8732               	bsf	50,3,b	;volatile
 17859                           
 17860                           ; BSR set to: 15
 17861                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 17862  011FB2  0100               	movlb	0	; () banked
 17863  011FB4  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17864  011FB6  D002               	goto	l402
 17865                           
 17866                           ; BSR set to: 0
 17867                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 17868  011FB8  010F               	movlb	15	; () banked
 17869  011FBA  8132               	bsf	50,0,b	;volatile
 17870  011FBC                     l402:
 17871                           
 17872                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 17873  011FBC  0100               	movlb	0	; () banked
 17874  011FBE  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17875  011FC0  D002               	goto	l403
 17876                           
 17877                           ; BSR set to: 0
 17878                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 17879  011FC2  010F               	movlb	15	; () banked
 17880  011FC4  8332               	bsf	50,1,b	;volatile
 17881  011FC6                     l403:
 17882                           
 17883                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 17884  011FC6  0100               	movlb	0	; () banked
 17885  011FC8  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17886  011FCA  D002               	goto	l404
 17887                           
 17888                           ; BSR set to: 0
 17889                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 17890  011FCC  010F               	movlb	15	; () banked
 17891  011FCE  8B32               	bsf	50,5,b	;volatile
 17892  011FD0                     l404:
 17893                           
 17894                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 17895  011FD0  0100               	movlb	0	; () banked
 17896  011FD2  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17897  011FD4  D002               	goto	l405
 17898                           
 17899                           ; BSR set to: 0
 17900                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 17901  011FD6  010F               	movlb	15	; () banked
 17902  011FD8  8D32               	bsf	50,6,b	;volatile
 17903  011FDA                     l405:
 17904                           
 17905                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 17906  011FDA  0100               	movlb	0	; () banked
 17907  011FDC  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17908  011FDE  D003               	goto	l5834
 17909                           
 17910                           ; BSR set to: 0
 17911                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 17912  011FE0  010F               	movlb	15	; () banked
 17913  011FE2  8F32               	bsf	50,7,b	;volatile
 17914  011FE4  D000               	goto	l5834
 17915  011FE6                     l5834:
 17916                           
 17917                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 17918  011FE6  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 17919  011FEA  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17920  011FEE  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17921  011FF2  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17922  011FF6  0E16               	movlw	22
 17923  011FF8  D006               	goto	u6870
 17924  011FFA                     u6875:
 17925  011FFA  0100               	movlb	0	; () banked
 17926  011FFC  90D8               	bcf	status,0,c
 17927  011FFE  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17928  012000  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17929  012002  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17930  012004  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 17931  012006                     u6870:
 17932  012006  2EE8               	decfsz	wreg,f,c
 17933  012008  D7F8               	goto	u6875
 17934  01200A  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17935  01200E  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17936  012012  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17937  012016  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17938                           
 17939                           ; BSR set to: 0
 17940                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 17941  01201A  0100               	movlb	0	; () banked
 17942  01201C  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 17943  01201E  0100               	movlb	0	; () banked
 17944  012020  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17945  012022  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17946  012024  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17947  012026  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17948                           
 17949                           ; BSR set to: 0
 17950                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 17951  012028  C07E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 17952                           
 17953                           ;inc\CANlib.h: 407: }
 17954  01202C  D05A               	goto	l5854
 17955  01202E                     l401:
 17956                           
 17957                           ; BSR set to: 0
 17958                           ;inc\CANlib.h: 409: else
 17959                           ;inc\CANlib.h: 411: {
 17960                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 17961  01202E  010F               	movlb	15	; () banked
 17962  012030  9732               	bcf	50,3,b	;volatile
 17963                           
 17964                           ; BSR set to: 15
 17965                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 17966  012032  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 17967  012036  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17968  01203A  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17969  01203E  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17970  012042  0E04               	movlw	4
 17971  012044  D006               	goto	u6880
 17972  012046                     u6885:
 17973  012046  0100               	movlb	0	; () banked
 17974  012048  90D8               	bcf	status,0,c
 17975  01204A  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17976  01204C  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17977  01204E  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17978  012050  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 17979  012052                     u6880:
 17980  012052  2EE8               	decfsz	wreg,f,c
 17981  012054  D7F8               	goto	u6885
 17982  012056  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17983  01205A  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17984  01205E  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17985  012062  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17986                           
 17987                           ; BSR set to: 0
 17988                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 17989  012066  0100               	movlb	0	; () banked
 17990  012068  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 17991  01206A  0100               	movlb	0	; () banked
 17992  01206C  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17993  01206E  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17994  012070  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17995  012072  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17996                           
 17997                           ; BSR set to: 0
 17998                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 17999  012074  C07E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 18000                           
 18001                           ; BSR set to: 0
 18002                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 18003  012078  0E07               	movlw	7
 18004  01207A  0100               	movlb	0	; () banked
 18005  01207C  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 18006  01207E  0100               	movlb	0	; () banked
 18007  012080  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18008  012082  0E00               	movlw	0
 18009  012084  0100               	movlb	0	; () banked
 18010  012086  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18011  012088  0100               	movlb	0	; () banked
 18012  01208A  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18013  01208C  0E00               	movlw	0
 18014  01208E  0100               	movlb	0	; () banked
 18015  012090  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18016  012092  0100               	movlb	0	; () banked
 18017  012094  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18018  012096  0E00               	movlw	0
 18019  012098  0100               	movlb	0	; () banked
 18020  01209A  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18021  01209C  0100               	movlb	0	; () banked
 18022  01209E  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18023                           
 18024                           ; BSR set to: 0
 18025                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 18026  0120A0  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 18027  0120A4  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18028  0120A8  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18029  0120AC  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18030  0120B0  0E05               	movlw	5
 18031  0120B2                     u6895:
 18032  0120B2  90D8               	bcf	status,0,c
 18033  0120B4  0100               	movlb	0	; () banked
 18034  0120B6  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 18035  0120B8  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18036  0120BA  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18037  0120BC  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18038  0120BE  2EE8               	decfsz	wreg,f,c
 18039  0120C0  D7F8               	goto	u6895
 18040  0120C2  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 18041  0120C6  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18042  0120CA  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18043  0120CE  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18044                           
 18045                           ; BSR set to: 0
 18046                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 18047  0120D2  010F               	movlb	15	; () banked
 18048  0120D4  5132               	movf	50,w,b	;volatile
 18049  0120D6  0B1F               	andlw	31
 18050  0120D8  010F               	movlb	15	; () banked
 18051  0120DA  6F32               	movwf	50,b	;volatile
 18052                           
 18053                           ; BSR set to: 15
 18054                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 18055  0120DC  C07E  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 18056  0120E0  D000               	goto	l5854
 18057  0120E2                     l5854:
 18058                           
 18059                           ;inc\CANlib.h: 422: }
 18060                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 18061  0120E2  0100               	movlb	0	; () banked
 18062  0120E4  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 18063  0120E6  D003               	goto	l408
 18064                           
 18065                           ; BSR set to: 0
 18066                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 18067  0120E8  010F               	movlb	15	; () banked
 18068  0120EA  8130               	bsf	48,0,b	;volatile
 18069  0120EC  D002               	goto	l409
 18070  0120EE                     l408:
 18071                           
 18072                           ; BSR set to: 0
 18073                           ;inc\CANlib.h: 426: else
 18074                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 18075  0120EE  010F               	movlb	15	; () banked
 18076  0120F0  9130               	bcf	48,0,b	;volatile
 18077  0120F2                     l409:
 18078                           
 18079                           ; BSR set to: 15
 18080                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 18081  0120F2  0100               	movlb	0	; () banked
 18082  0120F4  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 18083  0120F6  D003               	goto	l410
 18084                           
 18085                           ; BSR set to: 0
 18086                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 18087  0120F8  010F               	movlb	15	; () banked
 18088  0120FA  8330               	bsf	48,1,b	;volatile
 18089  0120FC  D003               	goto	l5860
 18090  0120FE                     l410:
 18091                           
 18092                           ; BSR set to: 0
 18093                           ;inc\CANlib.h: 430: else
 18094                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 18095  0120FE  010F               	movlb	15	; () banked
 18096  012100  9330               	bcf	48,1,b	;volatile
 18097  012102  D000               	goto	l5860
 18098  012104                     l5860:
 18099                           
 18100                           ; BSR set to: 15
 18101                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 18102  012104  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 18103  012108  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18104  01210C  50DF               	movf	indf2,w,c
 18105  01210E  010F               	movlb	15	; () banked
 18106  012110  6F36               	movwf	54,b	;volatile
 18107                           
 18108                           ; BSR set to: 15
 18109                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 18110  012112  0100               	movlb	0	; () banked
 18111  012114  EE20 F001          	lfsr	2,1
 18112  012118  5176               	movf	CANsendMessage@data& (0+255),w,b
 18113  01211A  26D9               	addwf	fsr2l,f,c
 18114  01211C  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18115  01211E  22DA               	addwfc	fsr2h,f,c
 18116  012120  50DF               	movf	indf2,w,c
 18117  012122  010F               	movlb	15	; () banked
 18118  012124  6F37               	movwf	55,b	;volatile
 18119                           
 18120                           ; BSR set to: 15
 18121                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 18122  012126  0100               	movlb	0	; () banked
 18123  012128  EE20 F002          	lfsr	2,2
 18124  01212C  5176               	movf	CANsendMessage@data& (0+255),w,b
 18125  01212E  26D9               	addwf	fsr2l,f,c
 18126  012130  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18127  012132  22DA               	addwfc	fsr2h,f,c
 18128  012134  50DF               	movf	indf2,w,c
 18129  012136  010F               	movlb	15	; () banked
 18130  012138  6F38               	movwf	56,b	;volatile
 18131                           
 18132                           ; BSR set to: 15
 18133                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 18134  01213A  0100               	movlb	0	; () banked
 18135  01213C  EE20 F003          	lfsr	2,3
 18136  012140  5176               	movf	CANsendMessage@data& (0+255),w,b
 18137  012142  26D9               	addwf	fsr2l,f,c
 18138  012144  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18139  012146  22DA               	addwfc	fsr2h,f,c
 18140  012148  50DF               	movf	indf2,w,c
 18141  01214A  010F               	movlb	15	; () banked
 18142  01214C  6F39               	movwf	57,b	;volatile
 18143                           
 18144                           ; BSR set to: 15
 18145                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 18146  01214E  0100               	movlb	0	; () banked
 18147  012150  EE20 F004          	lfsr	2,4
 18148  012154  5176               	movf	CANsendMessage@data& (0+255),w,b
 18149  012156  26D9               	addwf	fsr2l,f,c
 18150  012158  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18151  01215A  22DA               	addwfc	fsr2h,f,c
 18152  01215C  50DF               	movf	indf2,w,c
 18153  01215E  010F               	movlb	15	; () banked
 18154  012160  6F3A               	movwf	58,b	;volatile
 18155                           
 18156                           ; BSR set to: 15
 18157                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 18158  012162  0100               	movlb	0	; () banked
 18159  012164  EE20 F005          	lfsr	2,5
 18160  012168  5176               	movf	CANsendMessage@data& (0+255),w,b
 18161  01216A  26D9               	addwf	fsr2l,f,c
 18162  01216C  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18163  01216E  22DA               	addwfc	fsr2h,f,c
 18164  012170  50DF               	movf	indf2,w,c
 18165  012172  010F               	movlb	15	; () banked
 18166  012174  6F3B               	movwf	59,b	;volatile
 18167                           
 18168                           ; BSR set to: 15
 18169                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 18170  012176  0100               	movlb	0	; () banked
 18171  012178  EE20 F006          	lfsr	2,6
 18172  01217C  5176               	movf	CANsendMessage@data& (0+255),w,b
 18173  01217E  26D9               	addwf	fsr2l,f,c
 18174  012180  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18175  012182  22DA               	addwfc	fsr2h,f,c
 18176  012184  50DF               	movf	indf2,w,c
 18177  012186  010F               	movlb	15	; () banked
 18178  012188  6F3C               	movwf	60,b	;volatile
 18179                           
 18180                           ; BSR set to: 15
 18181                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 18182  01218A  0100               	movlb	0	; () banked
 18183  01218C  EE20 F007          	lfsr	2,7
 18184  012190  5176               	movf	CANsendMessage@data& (0+255),w,b
 18185  012192  26D9               	addwf	fsr2l,f,c
 18186  012194  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18187  012196  22DA               	addwfc	fsr2h,f,c
 18188  012198  50DF               	movf	indf2,w,c
 18189  01219A  010F               	movlb	15	; () banked
 18190  01219C  6F3D               	movwf	61,b	;volatile
 18191                           
 18192                           ; BSR set to: 15
 18193                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 18194  01219E  010F               	movlb	15	; () banked
 18195  0121A0  8730               	bsf	48,3,b	;volatile
 18196                           
 18197                           ; BSR set to: 15
 18198                           ;inc\CANlib.h: 444: return;
 18199  0121A2  0012               	return	
 18200  0121A4                     l398:
 18201                           
 18202                           ; BSR set to: 15
 18203                           ;inc\CANlib.h: 445: }
 18204                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 18205  0121A4  010F               	movlb	15	; () banked
 18206  0121A6  B720               	btfsc	32,3,b	;volatile
 18207  0121A8  0012               	return	
 18208                           
 18209                           ; BSR set to: 15
 18210                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 18211  0121AA  C078  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 18212                           
 18213                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 18214  0121AE  0100               	movlb	0	; () banked
 18215  0121B0  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 18216  0121B2  D003               	goto	l413
 18217                           
 18218                           ; BSR set to: 0
 18219                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 18220  0121B4  010F               	movlb	15	; () banked
 18221  0121B6  8D25               	bsf	37,6,b	;volatile
 18222  0121B8  D002               	goto	l414
 18223  0121BA                     l413:
 18224                           
 18225                           ; BSR set to: 0
 18226                           ;inc\CANlib.h: 454: else
 18227                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 18228  0121BA  010F               	movlb	15	; () banked
 18229  0121BC  9D25               	bcf	37,6,b	;volatile
 18230  0121BE                     l414:
 18231                           
 18232                           ; BSR set to: 15
 18233                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 18234  0121BE  0100               	movlb	0	; () banked
 18235  0121C0  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 18236  0121C2  D07A               	goto	l415
 18237                           
 18238                           ; BSR set to: 0
 18239                           ;inc\CANlib.h: 458: {
 18240                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 18241  0121C4  0100               	movlb	0	; () banked
 18242  0121C6  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 18243  0121C8  0100               	movlb	0	; () banked
 18244  0121CA  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18245  0121CC  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18246  0121CE  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18247  0121D0  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18248                           
 18249                           ; BSR set to: 0
 18250                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 18251  0121D2  C07E  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 18252                           
 18253                           ; BSR set to: 0
 18254                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 18255  0121D6  0E00               	movlw	0
 18256  0121D8  0100               	movlb	0	; () banked
 18257  0121DA  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 18258  0121DC  0100               	movlb	0	; () banked
 18259  0121DE  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18260  0121E0  0EFF               	movlw	255
 18261  0121E2  0100               	movlb	0	; () banked
 18262  0121E4  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18263  0121E6  0100               	movlb	0	; () banked
 18264  0121E8  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18265  0121EA  0E00               	movlw	0
 18266  0121EC  0100               	movlb	0	; () banked
 18267  0121EE  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18268  0121F0  0100               	movlb	0	; () banked
 18269  0121F2  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18270  0121F4  0E00               	movlw	0
 18271  0121F6  0100               	movlb	0	; () banked
 18272  0121F8  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18273  0121FA  0100               	movlb	0	; () banked
 18274  0121FC  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18275                           
 18276                           ; BSR set to: 0
 18277                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 18278  0121FE  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 18279  012202  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18280  012206  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18281  01220A  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18282  01220E  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 18283  012212  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 18284  012216  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 18285  01221A  0100               	movlb	0	; () banked
 18286  01221C  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 18287  01221E  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 18288  012222  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18289  012226  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18290  01222A  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18291                           
 18292                           ; BSR set to: 0
 18293                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 18294  01222E  C07E  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 18295                           
 18296                           ; BSR set to: 0
 18297                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 18298  012232  0E00               	movlw	0
 18299  012234  010F               	movlb	15	; () banked
 18300  012236  6F22               	movwf	34,b	;volatile
 18301                           
 18302                           ; BSR set to: 15
 18303                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 18304  012238  010F               	movlb	15	; () banked
 18305  01223A  8722               	bsf	34,3,b	;volatile
 18306                           
 18307                           ; BSR set to: 15
 18308                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 18309  01223C  0100               	movlb	0	; () banked
 18310  01223E  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18311  012240  D002               	goto	l416
 18312                           
 18313                           ; BSR set to: 0
 18314                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 18315  012242  010F               	movlb	15	; () banked
 18316  012244  8122               	bsf	34,0,b	;volatile
 18317  012246                     l416:
 18318                           
 18319                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 18320  012246  0100               	movlb	0	; () banked
 18321  012248  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18322  01224A  D002               	goto	l417
 18323                           
 18324                           ; BSR set to: 0
 18325                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 18326  01224C  010F               	movlb	15	; () banked
 18327  01224E  8322               	bsf	34,1,b	;volatile
 18328  012250                     l417:
 18329                           
 18330                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 18331  012250  0100               	movlb	0	; () banked
 18332  012252  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18333  012254  D002               	goto	l418
 18334                           
 18335                           ; BSR set to: 0
 18336                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 18337  012256  010F               	movlb	15	; () banked
 18338  012258  8B22               	bsf	34,5,b	;volatile
 18339  01225A                     l418:
 18340                           
 18341                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 18342  01225A  0100               	movlb	0	; () banked
 18343  01225C  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18344  01225E  D002               	goto	l419
 18345                           
 18346                           ; BSR set to: 0
 18347                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 18348  012260  010F               	movlb	15	; () banked
 18349  012262  8D22               	bsf	34,6,b	;volatile
 18350  012264                     l419:
 18351                           
 18352                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 18353  012264  0100               	movlb	0	; () banked
 18354  012266  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18355  012268  D003               	goto	l5910
 18356                           
 18357                           ; BSR set to: 0
 18358                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 18359  01226A  010F               	movlb	15	; () banked
 18360  01226C  8F22               	bsf	34,7,b	;volatile
 18361  01226E  D000               	goto	l5910
 18362  012270                     l5910:
 18363                           
 18364                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 18365  012270  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 18366  012274  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18367  012278  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18368  01227C  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18369  012280  0E16               	movlw	22
 18370  012282  D006               	goto	u7000
 18371  012284                     u7005:
 18372  012284  0100               	movlb	0	; () banked
 18373  012286  90D8               	bcf	status,0,c
 18374  012288  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18375  01228A  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18376  01228C  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18377  01228E  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 18378  012290                     u7000:
 18379  012290  2EE8               	decfsz	wreg,f,c
 18380  012292  D7F8               	goto	u7005
 18381  012294  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 18382  012298  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18383  01229C  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18384  0122A0  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18385                           
 18386                           ; BSR set to: 0
 18387                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 18388  0122A4  0100               	movlb	0	; () banked
 18389  0122A6  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 18390  0122A8  0100               	movlb	0	; () banked
 18391  0122AA  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18392  0122AC  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18393  0122AE  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18394  0122B0  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18395                           
 18396                           ; BSR set to: 0
 18397                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 18398  0122B2  C07E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18399                           
 18400                           ;inc\CANlib.h: 483: }
 18401  0122B6  D05A               	goto	l5930
 18402  0122B8                     l415:
 18403                           
 18404                           ; BSR set to: 0
 18405                           ;inc\CANlib.h: 485: else
 18406                           ;inc\CANlib.h: 487: {
 18407                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 18408  0122B8  010F               	movlb	15	; () banked
 18409  0122BA  9722               	bcf	34,3,b	;volatile
 18410                           
 18411                           ; BSR set to: 15
 18412                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 18413  0122BC  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 18414  0122C0  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18415  0122C4  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18416  0122C8  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18417  0122CC  0E04               	movlw	4
 18418  0122CE  D006               	goto	u7010
 18419  0122D0                     u7015:
 18420  0122D0  0100               	movlb	0	; () banked
 18421  0122D2  90D8               	bcf	status,0,c
 18422  0122D4  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18423  0122D6  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18424  0122D8  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18425  0122DA  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 18426  0122DC                     u7010:
 18427  0122DC  2EE8               	decfsz	wreg,f,c
 18428  0122DE  D7F8               	goto	u7015
 18429  0122E0  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 18430  0122E4  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18431  0122E8  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18432  0122EC  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18433                           
 18434                           ; BSR set to: 0
 18435                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 18436  0122F0  0100               	movlb	0	; () banked
 18437  0122F2  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 18438  0122F4  0100               	movlb	0	; () banked
 18439  0122F6  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18440  0122F8  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18441  0122FA  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18442  0122FC  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18443                           
 18444                           ; BSR set to: 0
 18445                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 18446  0122FE  C07E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18447                           
 18448                           ; BSR set to: 0
 18449                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 18450  012302  0E07               	movlw	7
 18451  012304  0100               	movlb	0	; () banked
 18452  012306  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 18453  012308  0100               	movlb	0	; () banked
 18454  01230A  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18455  01230C  0E00               	movlw	0
 18456  01230E  0100               	movlb	0	; () banked
 18457  012310  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18458  012312  0100               	movlb	0	; () banked
 18459  012314  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18460  012316  0E00               	movlw	0
 18461  012318  0100               	movlb	0	; () banked
 18462  01231A  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18463  01231C  0100               	movlb	0	; () banked
 18464  01231E  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18465  012320  0E00               	movlw	0
 18466  012322  0100               	movlb	0	; () banked
 18467  012324  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18468  012326  0100               	movlb	0	; () banked
 18469  012328  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18470                           
 18471                           ; BSR set to: 0
 18472                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 18473  01232A  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 18474  01232E  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18475  012332  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18476  012336  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18477  01233A  0E05               	movlw	5
 18478  01233C                     u7025:
 18479  01233C  90D8               	bcf	status,0,c
 18480  01233E  0100               	movlb	0	; () banked
 18481  012340  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 18482  012342  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18483  012344  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18484  012346  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18485  012348  2EE8               	decfsz	wreg,f,c
 18486  01234A  D7F8               	goto	u7025
 18487  01234C  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 18488  012350  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18489  012354  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18490  012358  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18491                           
 18492                           ; BSR set to: 0
 18493                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 18494  01235C  010F               	movlb	15	; () banked
 18495  01235E  5122               	movf	34,w,b	;volatile
 18496  012360  0B1F               	andlw	31
 18497  012362  010F               	movlb	15	; () banked
 18498  012364  6F22               	movwf	34,b	;volatile
 18499                           
 18500                           ; BSR set to: 15
 18501                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18502  012366  C07E  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 18503  01236A  D000               	goto	l5930
 18504  01236C                     l5930:
 18505                           
 18506                           ;inc\CANlib.h: 498: }
 18507                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18508  01236C  0100               	movlb	0	; () banked
 18509  01236E  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 18510  012370  D003               	goto	l422
 18511                           
 18512                           ; BSR set to: 0
 18513                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18514  012372  010F               	movlb	15	; () banked
 18515  012374  8120               	bsf	32,0,b	;volatile
 18516  012376  D002               	goto	l423
 18517  012378                     l422:
 18518                           
 18519                           ; BSR set to: 0
 18520                           ;inc\CANlib.h: 502: else
 18521                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18522  012378  010F               	movlb	15	; () banked
 18523  01237A  9120               	bcf	32,0,b	;volatile
 18524  01237C                     l423:
 18525                           
 18526                           ; BSR set to: 15
 18527                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18528  01237C  0100               	movlb	0	; () banked
 18529  01237E  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 18530  012380  D003               	goto	l424
 18531                           
 18532                           ; BSR set to: 0
 18533                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18534  012382  010F               	movlb	15	; () banked
 18535  012384  8320               	bsf	32,1,b	;volatile
 18536  012386  D003               	goto	l5936
 18537  012388                     l424:
 18538                           
 18539                           ; BSR set to: 0
 18540                           ;inc\CANlib.h: 506: else
 18541                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18542  012388  010F               	movlb	15	; () banked
 18543  01238A  9320               	bcf	32,1,b	;volatile
 18544  01238C  D000               	goto	l5936
 18545  01238E                     l5936:
 18546                           
 18547                           ; BSR set to: 15
 18548                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18549  01238E  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 18550  012392  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18551  012396  50DF               	movf	indf2,w,c
 18552  012398  010F               	movlb	15	; () banked
 18553  01239A  6F26               	movwf	38,b	;volatile
 18554                           
 18555                           ; BSR set to: 15
 18556                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18557  01239C  0100               	movlb	0	; () banked
 18558  01239E  EE20 F001          	lfsr	2,1
 18559  0123A2  5176               	movf	CANsendMessage@data& (0+255),w,b
 18560  0123A4  26D9               	addwf	fsr2l,f,c
 18561  0123A6  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18562  0123A8  22DA               	addwfc	fsr2h,f,c
 18563  0123AA  50DF               	movf	indf2,w,c
 18564  0123AC  010F               	movlb	15	; () banked
 18565  0123AE  6F27               	movwf	39,b	;volatile
 18566                           
 18567                           ; BSR set to: 15
 18568                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18569  0123B0  0100               	movlb	0	; () banked
 18570  0123B2  EE20 F002          	lfsr	2,2
 18571  0123B6  5176               	movf	CANsendMessage@data& (0+255),w,b
 18572  0123B8  26D9               	addwf	fsr2l,f,c
 18573  0123BA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18574  0123BC  22DA               	addwfc	fsr2h,f,c
 18575  0123BE  50DF               	movf	indf2,w,c
 18576  0123C0  010F               	movlb	15	; () banked
 18577  0123C2  6F28               	movwf	40,b	;volatile
 18578                           
 18579                           ; BSR set to: 15
 18580                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18581  0123C4  0100               	movlb	0	; () banked
 18582  0123C6  EE20 F003          	lfsr	2,3
 18583  0123CA  5176               	movf	CANsendMessage@data& (0+255),w,b
 18584  0123CC  26D9               	addwf	fsr2l,f,c
 18585  0123CE  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18586  0123D0  22DA               	addwfc	fsr2h,f,c
 18587  0123D2  50DF               	movf	indf2,w,c
 18588  0123D4  010F               	movlb	15	; () banked
 18589  0123D6  6F29               	movwf	41,b	;volatile
 18590                           
 18591                           ; BSR set to: 15
 18592                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18593  0123D8  0100               	movlb	0	; () banked
 18594  0123DA  EE20 F004          	lfsr	2,4
 18595  0123DE  5176               	movf	CANsendMessage@data& (0+255),w,b
 18596  0123E0  26D9               	addwf	fsr2l,f,c
 18597  0123E2  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18598  0123E4  22DA               	addwfc	fsr2h,f,c
 18599  0123E6  50DF               	movf	indf2,w,c
 18600  0123E8  010F               	movlb	15	; () banked
 18601  0123EA  6F2A               	movwf	42,b	;volatile
 18602                           
 18603                           ; BSR set to: 15
 18604                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18605  0123EC  0100               	movlb	0	; () banked
 18606  0123EE  EE20 F005          	lfsr	2,5
 18607  0123F2  5176               	movf	CANsendMessage@data& (0+255),w,b
 18608  0123F4  26D9               	addwf	fsr2l,f,c
 18609  0123F6  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18610  0123F8  22DA               	addwfc	fsr2h,f,c
 18611  0123FA  50DF               	movf	indf2,w,c
 18612  0123FC  010F               	movlb	15	; () banked
 18613  0123FE  6F2B               	movwf	43,b	;volatile
 18614                           
 18615                           ; BSR set to: 15
 18616                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18617  012400  0100               	movlb	0	; () banked
 18618  012402  EE20 F006          	lfsr	2,6
 18619  012406  5176               	movf	CANsendMessage@data& (0+255),w,b
 18620  012408  26D9               	addwf	fsr2l,f,c
 18621  01240A  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18622  01240C  22DA               	addwfc	fsr2h,f,c
 18623  01240E  50DF               	movf	indf2,w,c
 18624  012410  010F               	movlb	15	; () banked
 18625  012412  6F2C               	movwf	44,b	;volatile
 18626                           
 18627                           ; BSR set to: 15
 18628                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18629  012414  0100               	movlb	0	; () banked
 18630  012416  EE20 F007          	lfsr	2,7
 18631  01241A  5176               	movf	CANsendMessage@data& (0+255),w,b
 18632  01241C  26D9               	addwf	fsr2l,f,c
 18633  01241E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18634  012420  22DA               	addwfc	fsr2h,f,c
 18635  012422  50DF               	movf	indf2,w,c
 18636  012424  010F               	movlb	15	; () banked
 18637  012426  6F2D               	movwf	45,b	;volatile
 18638                           
 18639                           ; BSR set to: 15
 18640                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 18641  012428  010F               	movlb	15	; () banked
 18642  01242A  8720               	bsf	32,3,b	;volatile
 18643                           
 18644                           ; BSR set to: 15
 18645                           ;inc\CANlib.h: 520: return;
 18646  01242C  0012               	return	
 18647                           
 18648                           ; BSR set to: 15
 18649                           
 18650                           ; BSR set to: 15
 18651  01242E  0012               	return		;funcret
 18652  012430                     __end_of_CANsendMessage:
 18653                           	opt stack 0
 18654                           tblptru	equ	0xFF8
 18655                           tblptrh	equ	0xFF7
 18656                           tblptrl	equ	0xFF6
 18657                           tablat	equ	0xFF5
 18658                           prodh	equ	0xFF4
 18659                           prodl	equ	0xFF3
 18660                           intcon	equ	0xFF2
 18661                           postinc0	equ	0xFEE
 18662                           wreg	equ	0xFE8
 18663                           indf1	equ	0xFE7
 18664                           plusw1	equ	0xFE3
 18665                           fsr1h	equ	0xFE2
 18666                           fsr1l	equ	0xFE1
 18667                           indf2	equ	0xFDF
 18668                           postinc2	equ	0xFDE
 18669                           plusw2	equ	0xFDB
 18670                           fsr2h	equ	0xFDA
 18671                           fsr2l	equ	0xFD9
 18672                           status	equ	0xFD8
 18673                           
 18674 ;; *************** function _CANisTxReady *****************
 18675 ;; Defined at:
 18676 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 18677 ;; Parameters:    Size  Location     Type
 18678 ;;		None
 18679 ;; Auto vars:     Size  Location     Type
 18680 ;;		None
 18681 ;; Return value:  Size  Location     Type
 18682 ;;                  1    wreg      unsigned char 
 18683 ;; Registers used:
 18684 ;;		wreg, status,2
 18685 ;; Tracked objects:
 18686 ;;		On entry : 0/0
 18687 ;;		On exit  : 0/0
 18688 ;;		Unchanged: 0/0
 18689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18691 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18693 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18694 ;;Total ram usage:        1 bytes
 18695 ;; Hardware stack levels used:    1
 18696 ;; Hardware stack levels required when called:    3
 18697 ;; This function calls:
 18698 ;;		Nothing
 18699 ;; This function is called by:
 18700 ;;		_main
 18701 ;;		_LCD_Handler
 18702 ;;		_CAN_Tx
 18703 ;; This function uses a non-reentrant model
 18704 ;;
 18705                           
 18706                           	psect	text59
 18707  015F64                     __ptext59:
 18708                           	opt stack 0
 18709  015F64                     _CANisTxReady:
 18710                           	opt stack 26
 18711                           
 18712                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 18713                           
 18714                           ; BSR set to: 15
 18715                           ;incstack = 0
 18716  015F64  0E01               	movlw	1
 18717  015F66  0100               	movlb	0	; () banked
 18718  015F68  6F72               	movwf	_CANisTxReady$3251& (0+255),b
 18719                           
 18720                           ; BSR set to: 0
 18721  015F6A  010F               	movlb	15	; () banked
 18722  015F6C  A740               	btfss	64,3,b	;volatile
 18723  015F6E  D009               	goto	l576
 18724                           
 18725                           ; BSR set to: 15
 18726  015F70  010F               	movlb	15	; () banked
 18727  015F72  A730               	btfss	48,3,b	;volatile
 18728  015F74  D006               	goto	l576
 18729                           
 18730                           ; BSR set to: 15
 18731  015F76  010F               	movlb	15	; () banked
 18732  015F78  A720               	btfss	32,3,b	;volatile
 18733  015F7A  D003               	goto	l576
 18734                           
 18735                           ; BSR set to: 15
 18736  015F7C  0E00               	movlw	0
 18737  015F7E  0100               	movlb	0	; () banked
 18738  015F80  6F72               	movwf	_CANisTxReady$3251& (0+255),b
 18739  015F82                     l576:
 18740  015F82  0100               	movlb	0	; () banked
 18741  015F84  5172               	movf	_CANisTxReady$3251& (0+255),w,b
 18742  015F86  0012               	return	
 18743                           
 18744                           ; BSR set to: 0
 18745                           
 18746                           ; BSR set to: 0
 18747  015F88  0012               	return		;funcret
 18748  015F8A                     __end_of_CANisTxReady:
 18749                           	opt stack 0
 18750                           tblptru	equ	0xFF8
 18751                           tblptrh	equ	0xFF7
 18752                           tblptrl	equ	0xFF6
 18753                           tablat	equ	0xFF5
 18754                           prodh	equ	0xFF4
 18755                           prodl	equ	0xFF3
 18756                           intcon	equ	0xFF2
 18757                           postinc0	equ	0xFEE
 18758                           wreg	equ	0xFE8
 18759                           indf1	equ	0xFE7
 18760                           plusw1	equ	0xFE3
 18761                           fsr1h	equ	0xFE2
 18762                           fsr1l	equ	0xFE1
 18763                           indf2	equ	0xFDF
 18764                           postinc2	equ	0xFDE
 18765                           plusw2	equ	0xFDB
 18766                           fsr2h	equ	0xFDA
 18767                           fsr2l	equ	0xFD9
 18768                           status	equ	0xFD8
 18769                           
 18770 ;; *************** function _ISR_bassa *****************
 18771 ;; Defined at:
 18772 ;;		line 205 in file "RemoteCan.c"
 18773 ;; Parameters:    Size  Location     Type
 18774 ;;		None
 18775 ;; Auto vars:     Size  Location     Type
 18776 ;;		None
 18777 ;; Return value:  Size  Location     Type
 18778 ;;		None               void
 18779 ;; Registers used:
 18780 ;;		wreg, status,2, status,0
 18781 ;; Tracked objects:
 18782 ;;		On entry : 0/0
 18783 ;;		On exit  : 0/0
 18784 ;;		Unchanged: 0/0
 18785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18788 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18789 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18790 ;;Total ram usage:       17 bytes
 18791 ;; Hardware stack levels used:    1
 18792 ;; Hardware stack levels required when called:    2
 18793 ;; This function calls:
 18794 ;;		Nothing
 18795 ;; This function is called by:
 18796 ;;		Interrupt level 1
 18797 ;; This function uses a non-reentrant model
 18798 ;;
 18799                           
 18800                           	psect	intcodelo
 18801  000018                     __pintcodelo:
 18802                           	opt stack 0
 18803  000018                     _ISR_bassa:
 18804                           	opt stack 20
 18805                           
 18806                           ; BSR set to: 0
 18807                           ;incstack = 0
 18808  000018  CFD8 F029          	movff	status,??_ISR_bassa
 18809  00001C  CFE8 F02A          	movff	wreg,??_ISR_bassa+1
 18810  000020  CFE0 F02B          	movff	bsr,??_ISR_bassa+2
 18811  000024  CFFA F02C          	movff	pclath,??_ISR_bassa+3
 18812  000028  CFFB F02D          	movff	pclatu,??_ISR_bassa+4
 18813  00002C  CFE9 F02E          	movff	fsr0l,??_ISR_bassa+5
 18814  000030  CFEA F02F          	movff	fsr0h,??_ISR_bassa+6
 18815  000034  CFE1 F030          	movff	fsr1l,??_ISR_bassa+7
 18816  000038  CFE2 F031          	movff	fsr1h,??_ISR_bassa+8
 18817  00003C  CFD9 F032          	movff	fsr2l,??_ISR_bassa+9
 18818  000040  CFDA F033          	movff	fsr2h,??_ISR_bassa+10
 18819  000044  CFF3 F034          	movff	prodl,??_ISR_bassa+11
 18820  000048  CFF4 F035          	movff	prodh,??_ISR_bassa+12
 18821  00004C  CFF6 F036          	movff	tblptrl,??_ISR_bassa+13
 18822  000050  CFF7 F037          	movff	tblptrh,??_ISR_bassa+14
 18823  000054  CFF8 F038          	movff	tblptru,??_ISR_bassa+15
 18824  000058  CFF5 F039          	movff	tablat,??_ISR_bassa+16
 18825                           
 18826                           ;RemoteCan.c: 206: if (PIR2bits.TMR3IF == 1) {
 18827  00005C  A2A1               	btfss	4001,1,c	;volatile
 18828  00005E  D00C               	goto	i1l809
 18829                           
 18830                           ;RemoteCan.c: 207: time_counter++;
 18831  000060  0E01               	movlw	1
 18832  000062  2605               	addwf	_time_counter,f,c	;volatile
 18833  000064  0E00               	movlw	0
 18834  000066  2206               	addwfc	_time_counter+1,f,c	;volatile
 18835  000068  2207               	addwfc	_time_counter+2,f,c	;volatile
 18836  00006A  2208               	addwfc	_time_counter+3,f,c	;volatile
 18837                           
 18838                           ;RemoteCan.c: 208: TMR3H = 0x63;
 18839  00006C  0E63               	movlw	99
 18840  00006E  6EB3               	movwf	4019,c	;volatile
 18841                           
 18842                           ;RemoteCan.c: 209: TMR3L = 0xC0;
 18843  000070  0EC0               	movlw	192
 18844  000072  6EB2               	movwf	4018,c	;volatile
 18845                           
 18846                           ;RemoteCan.c: 210: PIR2bits.TMR3IF = 0;
 18847  000074  92A1               	bcf	4001,1,c	;volatile
 18848  000076  D000               	goto	i1l809
 18849  000078                     i1l809:
 18850  000078  C039  FFF5         	movff	??_ISR_bassa+16,tablat
 18851  00007C  C038  FFF8         	movff	??_ISR_bassa+15,tblptru
 18852  000080  C037  FFF7         	movff	??_ISR_bassa+14,tblptrh
 18853  000084  C036  FFF6         	movff	??_ISR_bassa+13,tblptrl
 18854  000088  C035  FFF4         	movff	??_ISR_bassa+12,prodh
 18855  00008C  C034  FFF3         	movff	??_ISR_bassa+11,prodl
 18856  000090  C033  FFDA         	movff	??_ISR_bassa+10,fsr2h
 18857  000094  C032  FFD9         	movff	??_ISR_bassa+9,fsr2l
 18858  000098  C031  FFE2         	movff	??_ISR_bassa+8,fsr1h
 18859  00009C  C030  FFE1         	movff	??_ISR_bassa+7,fsr1l
 18860  0000A0  C02F  FFEA         	movff	??_ISR_bassa+6,fsr0h
 18861  0000A4  C02E  FFE9         	movff	??_ISR_bassa+5,fsr0l
 18862  0000A8  C02D  FFFB         	movff	??_ISR_bassa+4,pclatu
 18863  0000AC  C02C  FFFA         	movff	??_ISR_bassa+3,pclath
 18864  0000B0  C02B  FFE0         	movff	??_ISR_bassa+2,bsr
 18865  0000B4  C02A  FFE8         	movff	??_ISR_bassa+1,wreg
 18866  0000B8  C029  FFD8         	movff	??_ISR_bassa,status
 18867  0000BC  0010               	retfie	
 18868  0000BE                     __end_of_ISR_bassa:
 18869                           	opt stack 0
 18870                           pclatu	equ	0xFFB
 18871                           pclath	equ	0xFFA
 18872                           tblptru	equ	0xFF8
 18873                           tblptrh	equ	0xFF7
 18874                           tblptrl	equ	0xFF6
 18875                           tablat	equ	0xFF5
 18876                           prodh	equ	0xFF4
 18877                           prodl	equ	0xFF3
 18878                           intcon	equ	0xFF2
 18879                           postinc0	equ	0xFEE
 18880                           fsr0h	equ	0xFEA
 18881                           fsr0l	equ	0xFE9
 18882                           wreg	equ	0xFE8
 18883                           indf1	equ	0xFE7
 18884                           plusw1	equ	0xFE3
 18885                           fsr1h	equ	0xFE2
 18886                           fsr1l	equ	0xFE1
 18887                           bsr	equ	0xFE0
 18888                           indf2	equ	0xFDF
 18889                           postinc2	equ	0xFDE
 18890                           plusw2	equ	0xFDB
 18891                           fsr2h	equ	0xFDA
 18892                           fsr2l	equ	0xFD9
 18893                           status	equ	0xFD8
 18894                           
 18895 ;; *************** function _ISR_alta *****************
 18896 ;; Defined at:
 18897 ;;		line 122 in file "RemoteCan.c"
 18898 ;; Parameters:    Size  Location     Type
 18899 ;;		None
 18900 ;; Auto vars:     Size  Location     Type
 18901 ;;		None
 18902 ;; Return value:  Size  Location     Type
 18903 ;;		None               void
 18904 ;; Registers used:
 18905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18906 ;; Tracked objects:
 18907 ;;		On entry : 0/0
 18908 ;;		On exit  : 0/0
 18909 ;;		Unchanged: 0/0
 18910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18913 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18914 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18915 ;;Total ram usage:       18 bytes
 18916 ;; Hardware stack levels used:    1
 18917 ;; Hardware stack levels required when called:    1
 18918 ;; This function calls:
 18919 ;;		_CANisRxReady
 18920 ;;		_CANreceiveMessage
 18921 ;;		i2_CANisTxReady
 18922 ;;		i2_CANsendMessage
 18923 ;; This function is called by:
 18924 ;;		Interrupt level 2
 18925 ;; This function uses a non-reentrant model
 18926 ;;
 18927                           
 18928                           	psect	intcode
 18929  000008                     __pintcode:
 18930                           	opt stack 0
 18931  000008                     _ISR_alta:
 18932                           	opt stack 20
 18933                           
 18934                           ;incstack = 0
 18935  000008  CFFA F064          	movff	pclath,??_ISR_alta+4
 18936  00000C  CFFB F065          	movff	pclatu,??_ISR_alta+5
 18937  000010  CFE9 F066          	movff	fsr0l,??_ISR_alta+6
 18938  000014  EFE9  F09D         	goto	int_func
 18939                           pclatu	equ	0xFFB
 18940                           pclath	equ	0xFFA
 18941                           tblptru	equ	0xFF8
 18942                           tblptrh	equ	0xFF7
 18943                           tblptrl	equ	0xFF6
 18944                           tablat	equ	0xFF5
 18945                           prodh	equ	0xFF4
 18946                           prodl	equ	0xFF3
 18947                           intcon	equ	0xFF2
 18948                           postinc0	equ	0xFEE
 18949                           fsr0h	equ	0xFEA
 18950                           fsr0l	equ	0xFE9
 18951                           wreg	equ	0xFE8
 18952                           indf1	equ	0xFE7
 18953                           plusw1	equ	0xFE3
 18954                           fsr1h	equ	0xFE2
 18955                           fsr1l	equ	0xFE1
 18956                           bsr	equ	0xFE0
 18957                           indf2	equ	0xFDF
 18958                           postinc2	equ	0xFDE
 18959                           plusw2	equ	0xFDB
 18960                           fsr2h	equ	0xFDA
 18961                           fsr2l	equ	0xFD9
 18962                           status	equ	0xFD8
 18963                           
 18964                           	psect	intcode_body
 18965  013BD2                     __pintcode_body:
 18966                           	opt stack 20
 18967  013BD2                     int_func:
 18968                           	opt stack 20
 18969  013BD2  CFEA F067          	movff	fsr0h,??_ISR_alta+7
 18970  013BD6  CFE1 F068          	movff	fsr1l,??_ISR_alta+8
 18971  013BDA  CFE2 F069          	movff	fsr1h,??_ISR_alta+9
 18972  013BDE  CFD9 F06A          	movff	fsr2l,??_ISR_alta+10
 18973  013BE2  CFDA F06B          	movff	fsr2h,??_ISR_alta+11
 18974  013BE6  CFF3 F06C          	movff	prodl,??_ISR_alta+12
 18975  013BEA  CFF4 F06D          	movff	prodh,??_ISR_alta+13
 18976  013BEE  CFF6 F06E          	movff	tblptrl,??_ISR_alta+14
 18977  013BF2  CFF7 F06F          	movff	tblptrh,??_ISR_alta+15
 18978  013BF6  CFF8 F070          	movff	tblptru,??_ISR_alta+16
 18979  013BFA  CFF5 F071          	movff	tablat,??_ISR_alta+17
 18980                           
 18981                           ;RemoteCan.c: 123: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 18982  013BFE  B2A4               	btfsc	4004,1,c	;volatile
 18983  013C00  D002               	goto	i2l8560
 18984  013C02  A0A4               	btfss	4004,0,c	;volatile
 18985  013C04  D10F               	goto	i2l805
 18986  013C06                     i2l8560:
 18987                           
 18988                           ;RemoteCan.c: 124: if (CANisRxReady()) {
 18989  013C06  EC00  F0B0         	call	_CANisRxReady	;wreg free
 18990  013C0A  0900               	iorlw	0
 18991  013C0C  B4D8               	btfsc	status,2,c
 18992  013C0E  D107               	goto	i2l788
 18993                           
 18994                           ;RemoteCan.c: 125: CANreceiveMessage(&msg);
 18995  013C10  0E12               	movlw	low _msg
 18996  013C12  6E3A               	movwf	CANreceiveMessage@msg,c
 18997  013C14  0E00               	movlw	high _msg
 18998  013C16  6E3B               	movwf	CANreceiveMessage@msg+1,c
 18999  013C18  EC6A  F095         	call	_CANreceiveMessage	;wreg free
 19000                           
 19001                           ;RemoteCan.c: 126: RTR_Flag = msg.RTR;
 19002  013C1C  B020               	btfsc	_msg+14,0,c
 19003  013C1E  D002               	bra	i2u1075_45
 19004  013C20  984A               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19005  013C22  D001               	bra	i2u1075_46
 19006  013C24                     i2u1075_45:
 19007  013C24  884A               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19008  013C26                     i2u1075_46:
 19009                           
 19010                           ;RemoteCan.c: 127: id = msg.identifier;
 19011  013C26  C012  F001         	movff	_msg,_id	;volatile
 19012  013C2A  C013  F002         	movff	_msg+1,_id+1	;volatile
 19013  013C2E  C014  F003         	movff	_msg+2,_id+2	;volatile
 19014  013C32  C015  F004         	movff	_msg+3,_id+3	;volatile
 19015                           
 19016                           ;RemoteCan.c: 129: if (id == 0b00000001000) {
 19017  013C36  0E08               	movlw	8
 19018  013C38  1801               	xorwf	_id,w,c	;volatile
 19019  013C3A  1002               	iorwf	_id+1,w,c	;volatile
 19020  013C3C  1003               	iorwf	_id+2,w,c	;volatile
 19021  013C3E  1004               	iorwf	_id+3,w,c	;volatile
 19022  013C40  A4D8               	btfss	status,2,c
 19023  013C42  D028               	goto	i2l8578
 19024                           
 19025                           ;RemoteCan.c: 130: left_speed = msg.data[1];
 19026  013C44  C017  F00B         	movff	_msg+5,_left_speed	;volatile
 19027  013C48  6A0C               	clrf	_left_speed+1,c	;volatile
 19028                           
 19029                           ;RemoteCan.c: 131: left_speed = ((left_speed << 8) | (msg.data[0]));
 19030  013C4A  500B               	movf	_left_speed,w,c	;volatile
 19031  013C4C  0100               	movlb	0	; () banked
 19032  013C4E  6F60               	movwf	??_ISR_alta& (0+255),b
 19033  013C50  5016               	movf	_msg+4,w,c
 19034  013C52  6E0B               	movwf	_left_speed,c	;volatile
 19035  013C54  C060  F00C         	movff	??_ISR_alta,_left_speed+1	;volatile
 19036                           
 19037                           ; BSR set to: 0
 19038                           ;RemoteCan.c: 132: right_speed = msg.data[3];
 19039  013C58  C019  F00D         	movff	_msg+7,_right_speed	;volatile
 19040  013C5C  6A0E               	clrf	_right_speed+1,c	;volatile
 19041                           
 19042                           ;RemoteCan.c: 133: right_speed = ((right_speed << 8) | (msg.data[2]));
 19043  013C5E  500D               	movf	_right_speed,w,c	;volatile
 19044  013C60  0100               	movlb	0	; () banked
 19045  013C62  6F60               	movwf	??_ISR_alta& (0+255),b
 19046  013C64  5018               	movf	_msg+6,w,c
 19047  013C66  6E0D               	movwf	_right_speed,c	;volatile
 19048  013C68  C060  F00E         	movff	??_ISR_alta,_right_speed+1	;volatile
 19049                           
 19050                           ; BSR set to: 0
 19051                           ;RemoteCan.c: 134: actual_speed = (right_speed + left_speed) / 2;
 19052  013C6C  500B               	movf	_left_speed,w,c	;volatile
 19053  013C6E  240D               	addwf	_right_speed,w,c	;volatile
 19054  013C70  0100               	movlb	0	; () banked
 19055  013C72  6F60               	movwf	??_ISR_alta& (0+255),b
 19056  013C74  500C               	movf	_left_speed+1,w,c	;volatile
 19057  013C76  200E               	addwfc	_right_speed+1,w,c	;volatile
 19058  013C78  0100               	movlb	0	; () banked
 19059  013C7A  6F61               	movwf	(??_ISR_alta+1)& (0+255),b
 19060  013C7C  90D8               	bcf	status,0,c
 19061  013C7E  0100               	movlb	0	; () banked
 19062  013C80  3161               	rrcf	(??_ISR_alta+1)& (0+255),w,b
 19063  013C82  0100               	movlb	0	; () banked
 19064  013C84  6F62               	movwf	(??_ISR_alta+2)& (0+255),b
 19065  013C86  0100               	movlb	0	; () banked
 19066  013C88  3160               	rrcf	??_ISR_alta& (0+255),w,b
 19067  013C8A  0100               	movlb	0	; () banked
 19068  013C8C  6FE1               	movwf	_actual_speed& (0+255),b	;volatile
 19069  013C8E  C062  F0E2         	movff	??_ISR_alta+2,_actual_speed+1	;volatile
 19070  013C92  D000               	goto	i2l8578
 19071  013C94                     i2l8578:
 19072                           
 19073                           ;RemoteCan.c: 135: }
 19074                           ;RemoteCan.c: 137: if (id == 0b00000001101) {
 19075  013C94  0E0D               	movlw	13
 19076  013C96  1801               	xorwf	_id,w,c	;volatile
 19077  013C98  1002               	iorwf	_id+1,w,c	;volatile
 19078  013C9A  1003               	iorwf	_id+2,w,c	;volatile
 19079  013C9C  1004               	iorwf	_id+3,w,c	;volatile
 19080  013C9E  A4D8               	btfss	status,2,c
 19081  013CA0  D049               	goto	i2l8610
 19082                           
 19083                           ;RemoteCan.c: 138: if (msg.data[0] == 1) {
 19084  013CA2  0416               	decf	_msg+4,w,c
 19085  013CA4  A4D8               	btfss	status,2,c
 19086  013CA6  D008               	goto	i2l8586
 19087                           
 19088                           ;RemoteCan.c: 139: space_available = 1;
 19089  013CA8  8A4B               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 19090                           
 19091                           ;RemoteCan.c: 140: space_gap_reached = 0;
 19092  013CAA  9C4B               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 19093                           
 19094                           ;RemoteCan.c: 141: F2_switch = 0;
 19095  013CAC  944A               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 19096                           
 19097                           ;RemoteCan.c: 142: parking_message_E = 1;
 19098  013CAE  844B               	bsf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
 19099                           
 19100                           ;RemoteCan.c: 143: parking_message_ID = 0;
 19101  013CB0  0E00               	movlw	0
 19102  013CB2  0100               	movlb	0	; () banked
 19103  013CB4  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
 19104  013CB6  D000               	goto	i2l8586
 19105  013CB8                     i2l8586:
 19106                           
 19107                           ;RemoteCan.c: 144: }
 19108                           ;RemoteCan.c: 146: if (msg.data[0] == 2) {
 19109  013CB8  0E02               	movlw	2
 19110  013CBA  1816               	xorwf	_msg+4,w,c
 19111  013CBC  A4D8               	btfss	status,2,c
 19112  013CBE  D007               	goto	i2l8592
 19113                           
 19114                           ;RemoteCan.c: 147: space_available = 1;
 19115  013CC0  8A4B               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 19116                           
 19117                           ;RemoteCan.c: 148: space_gap_reached = 1;
 19118  013CC2  8C4B               	bsf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 19119                           
 19120                           ;RemoteCan.c: 149: Can_Tx_Force = 1;
 19121  013CC4  804A               	bsf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
 19122                           
 19123                           ;RemoteCan.c: 150: parking_message_ID = 2;
 19124  013CC6  0E02               	movlw	2
 19125  013CC8  0100               	movlb	0	; () banked
 19126  013CCA  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
 19127  013CCC  D000               	goto	i2l8592
 19128  013CCE                     i2l8592:
 19129                           
 19130                           ;RemoteCan.c: 151: }
 19131                           ;RemoteCan.c: 153: if (msg.data[0] == 3) {
 19132  013CCE  0E03               	movlw	3
 19133  013CD0  1816               	xorwf	_msg+4,w,c
 19134  013CD2  A4D8               	btfss	status,2,c
 19135  013CD4  D015               	goto	i2l8600
 19136                           
 19137                           ;RemoteCan.c: 154: parking_message_ID = 6;
 19138  013CD6  0E06               	movlw	6
 19139  013CD8  0100               	movlb	0	; () banked
 19140  013CDA  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
 19141                           
 19142                           ; BSR set to: 0
 19143                           ;RemoteCan.c: 155: F1_switch = 0;
 19144  013CDC  924A               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 19145                           
 19146                           ; BSR set to: 0
 19147                           ;RemoteCan.c: 156: pr_time_6 = time_counter + (2000 / 10);
 19148  013CDE  0EC8               	movlw	200
 19149  013CE0  2405               	addwf	_time_counter,w,c	;volatile
 19150  013CE2  0100               	movlb	0	; () banked
 19151  013CE4  6FDB               	movwf	_pr_time_6& (0+255),b	;volatile
 19152  013CE6  0E00               	movlw	0
 19153  013CE8  2006               	addwfc	_time_counter+1,w,c	;volatile
 19154  013CEA  0100               	movlb	0	; () banked
 19155  013CEC  6FDC               	movwf	(_pr_time_6+1)& (0+255),b	;volatile
 19156  013CEE  0E00               	movlw	0
 19157  013CF0  2007               	addwfc	_time_counter+2,w,c	;volatile
 19158  013CF2  0100               	movlb	0	; () banked
 19159  013CF4  6FDD               	movwf	(_pr_time_6+2)& (0+255),b	;volatile
 19160  013CF6  0E00               	movlw	0
 19161  013CF8  2008               	addwfc	_time_counter+3,w,c	;volatile
 19162  013CFA  0100               	movlb	0	; () banked
 19163  013CFC  6FDE               	movwf	(_pr_time_6+3)& (0+255),b	;volatile
 19164  013CFE  D000               	goto	i2l8600
 19165  013D00                     i2l8600:
 19166                           
 19167                           ;RemoteCan.c: 157: }
 19168                           ;RemoteCan.c: 158: if (msg.data[0] == 4) {
 19169  013D00  0E04               	movlw	4
 19170  013D02  1816               	xorwf	_msg+4,w,c
 19171  013D04  A4D8               	btfss	status,2,c
 19172  013D06  D016               	goto	i2l8610
 19173                           
 19174                           ;RemoteCan.c: 159: parking_message_ID = 6;
 19175  013D08  0E06               	movlw	6
 19176  013D0A  0100               	movlb	0	; () banked
 19177  013D0C  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
 19178                           
 19179                           ; BSR set to: 0
 19180                           ;RemoteCan.c: 160: parking_error = 1;
 19181  013D0E  824B               	bsf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
 19182                           
 19183                           ; BSR set to: 0
 19184                           ;RemoteCan.c: 161: F1_switch = 0;
 19185  013D10  924A               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 19186                           
 19187                           ; BSR set to: 0
 19188                           ;RemoteCan.c: 162: pr_time_6 = time_counter + (2000 / 10);
 19189  013D12  0EC8               	movlw	200
 19190  013D14  2405               	addwf	_time_counter,w,c	;volatile
 19191  013D16  0100               	movlb	0	; () banked
 19192  013D18  6FDB               	movwf	_pr_time_6& (0+255),b	;volatile
 19193  013D1A  0E00               	movlw	0
 19194  013D1C  2006               	addwfc	_time_counter+1,w,c	;volatile
 19195  013D1E  0100               	movlb	0	; () banked
 19196  013D20  6FDC               	movwf	(_pr_time_6+1)& (0+255),b	;volatile
 19197  013D22  0E00               	movlw	0
 19198  013D24  2007               	addwfc	_time_counter+2,w,c	;volatile
 19199  013D26  0100               	movlb	0	; () banked
 19200  013D28  6FDD               	movwf	(_pr_time_6+2)& (0+255),b	;volatile
 19201  013D2A  0E00               	movlw	0
 19202  013D2C  2008               	addwfc	_time_counter+3,w,c	;volatile
 19203  013D2E  0100               	movlb	0	; () banked
 19204  013D30  6FDE               	movwf	(_pr_time_6+3)& (0+255),b	;volatile
 19205                           
 19206                           ; BSR set to: 0
 19207  013D32  D000               	goto	i2l8610
 19208  013D34                     i2l8610:
 19209                           
 19210                           ;RemoteCan.c: 163: }
 19211                           ;RemoteCan.c: 164: }
 19212                           ;RemoteCan.c: 166: if (id == 0b00000010000) {
 19213  013D34  0E10               	movlw	16
 19214  013D36  1801               	xorwf	_id,w,c	;volatile
 19215  013D38  1002               	iorwf	_id+1,w,c	;volatile
 19216  013D3A  1003               	iorwf	_id+2,w,c	;volatile
 19217  013D3C  1004               	iorwf	_id+3,w,c	;volatile
 19218  013D3E  A4D8               	btfss	status,2,c
 19219  013D40  D008               	goto	i2l8614
 19220                           
 19221                           ;RemoteCan.c: 167: steering_correction_dir = msg.data[1];
 19222  013D42  B017               	btfsc	_msg+5,0,c
 19223  013D44  D002               	bra	i2u1083_45
 19224  013D46  9E4B               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19225  013D48  D001               	bra	i2u1083_46
 19226  013D4A                     i2u1083_45:
 19227  013D4A  8E4B               	bsf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19228  013D4C                     i2u1083_46:
 19229                           
 19230                           ;RemoteCan.c: 168: steering_correction = msg.data[0];
 19231  013D4C  C016  F0EB         	movff	_msg+4,_steering_correction	;volatile
 19232  013D50  D000               	goto	i2l8614
 19233  013D52                     i2l8614:
 19234                           
 19235                           ;RemoteCan.c: 169: }
 19236                           ;RemoteCan.c: 171: if (id == 0b00000010001) {
 19237  013D52  0E11               	movlw	17
 19238  013D54  1801               	xorwf	_id,w,c	;volatile
 19239  013D56  1002               	iorwf	_id+1,w,c	;volatile
 19240  013D58  1003               	iorwf	_id+2,w,c	;volatile
 19241  013D5A  1004               	iorwf	_id+3,w,c	;volatile
 19242  013D5C  A4D8               	btfss	status,2,c
 19243  013D5E  D005               	goto	i2l8618
 19244                           
 19245                           ;RemoteCan.c: 172: collision_sensor_distance[1] = msg.data[0];
 19246  013D60  C016  F00A         	movff	_msg+4,_collision_sensor_distance+1	;volatile
 19247                           
 19248                           ;RemoteCan.c: 173: collision_sensor_distance[0] = msg.data[1];
 19249  013D64  C017  F009         	movff	_msg+5,_collision_sensor_distance	;volatile
 19250  013D68  D000               	goto	i2l8618
 19251  013D6A                     i2l8618:
 19252                           
 19253                           ;RemoteCan.c: 174: }
 19254                           ;RemoteCan.c: 176: if (id == 0xAA) {
 19255  013D6A  0EAA               	movlw	170
 19256  013D6C  1801               	xorwf	_id,w,c	;volatile
 19257  013D6E  1002               	iorwf	_id+1,w,c	;volatile
 19258  013D70  1003               	iorwf	_id+2,w,c	;volatile
 19259  013D72  1004               	iorwf	_id+3,w,c	;volatile
 19260  013D74  A4D8               	btfss	status,2,c
 19261  013D76  D00B               	goto	i2l8624
 19262                           
 19263                           ;RemoteCan.c: 177: user_data = msg.data[1];
 19264  013D78  C017  F00F         	movff	_msg+5,_user_data	;volatile
 19265  013D7C  6A10               	clrf	_user_data+1,c	;volatile
 19266                           
 19267                           ;RemoteCan.c: 178: user_data = ((user_data << 8) | msg.data[0]);
 19268  013D7E  500F               	movf	_user_data,w,c	;volatile
 19269  013D80  0100               	movlb	0	; () banked
 19270  013D82  6F60               	movwf	??_ISR_alta& (0+255),b
 19271  013D84  5016               	movf	_msg+4,w,c
 19272  013D86  6E0F               	movwf	_user_data,c	;volatile
 19273  013D88  C060  F010         	movff	??_ISR_alta,_user_data+1	;volatile
 19274  013D8C  D000               	goto	i2l8624
 19275  013D8E                     i2l8624:
 19276                           
 19277                           ;RemoteCan.c: 179: }
 19278                           ;RemoteCan.c: 181: if (id == 0b00000000100) {
 19279  013D8E  0E04               	movlw	4
 19280  013D90  1801               	xorwf	_id,w,c	;volatile
 19281  013D92  1002               	iorwf	_id+1,w,c	;volatile
 19282  013D94  1003               	iorwf	_id+2,w,c	;volatile
 19283  013D96  1004               	iorwf	_id+3,w,c	;volatile
 19284  013D98  B4D8               	btfsc	status,2,c
 19285                           
 19286                           ;RemoteCan.c: 182: if (RTR_Flag == 1) {
 19287  013D9A  A84A               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19288  013D9C  D028               	goto	i2l8638
 19289                           
 19290                           ;RemoteCan.c: 183: pr_time_4 = time_counter;
 19291  013D9E  C005  F106         	movff	_time_counter,_pr_time_4	;volatile
 19292  013DA2  C006  F107         	movff	_time_counter+1,_pr_time_4+1	;volatile
 19293  013DA6  C007  F108         	movff	_time_counter+2,_pr_time_4+2	;volatile
 19294  013DAA  C008  F109         	movff	_time_counter+3,_pr_time_4+3	;volatile
 19295                           
 19296                           ;RemoteCan.c: 184: data[0] = 0x03;
 19297  013DAE  0E03               	movlw	3
 19298  013DB0  0101               	movlb	1	; () banked
 19299  013DB2  6F16               	movwf	_data& (0+255),b
 19300                           
 19301                           ; BSR set to: 1
 19302                           ;RemoteCan.c: 185: _delay((unsigned long)((10)*(16000000/4000000.0)));
 19303  013DB4  0E0D               	movlw	13
 19304  013DB6                     i2u1145_47:
 19305  013DB6  2EE8               	decfsz	wreg,f,c
 19306  013DB8  D7FE               	goto	i2u1145_47
 19307  013DBA  F000               	nop	
 19308                           
 19309                           ;RemoteCan.c: 186: while (CANisTxReady() != 1);
 19310  013DBC  D000               	goto	i2l8634
 19311  013DBE                     i2l8634:
 19312  013DBE  ECD6  F0AF         	call	i2_CANisTxReady	;wreg free
 19313  013DC2  06E8               	decf	wreg,f,c
 19314  013DC4  A4D8               	btfss	status,2,c
 19315  013DC6  D7FB               	goto	i2l8634
 19316                           
 19317                           ;RemoteCan.c: 187: CANsendMessage(0b00000000100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 19318  013DC8  0E04               	movlw	4
 19319  013DCA  6E3A               	movwf	i2CANsendMessage@identifier,c
 19320  013DCC  0E00               	movlw	0
 19321  013DCE  6E3B               	movwf	i2CANsendMessage@identifier+1,c
 19322  013DD0  0E00               	movlw	0
 19323  013DD2  6E3C               	movwf	i2CANsendMessage@identifier+2,c
 19324  013DD4  0E00               	movlw	0
 19325  013DD6  6E3D               	movwf	i2CANsendMessage@identifier+3,c
 19326  013DD8  0E16               	movlw	low _data
 19327  013DDA  6E3E               	movwf	i2CANsendMessage@data,c
 19328  013DDC  0E01               	movlw	high _data
 19329  013DDE  6E3F               	movwf	i2CANsendMessage@data+1,c
 19330  013DE0  0E08               	movlw	8
 19331  013DE2  6E40               	movwf	i2CANsendMessage@dataLength,c
 19332  013DE4  0EBC               	movlw	188
 19333  013DE6  6E41               	movwf	i2CANsendMessage@flags,c
 19334  013DE8  EC18  F092         	call	i2_CANsendMessage	;wreg free
 19335  013DEC  D000               	goto	i2l8638
 19336  013DEE                     i2l8638:
 19337                           
 19338                           ;RemoteCan.c: 188: }
 19339                           ;RemoteCan.c: 189: }
 19340                           ;RemoteCan.c: 191: if ((id == 0b00000001011)&&(RTR_Flag == 1)) {
 19341  013DEE  0E0B               	movlw	11
 19342  013DF0  1801               	xorwf	_id,w,c	;volatile
 19343  013DF2  1002               	iorwf	_id+1,w,c	;volatile
 19344  013DF4  1003               	iorwf	_id+2,w,c	;volatile
 19345  013DF6  1004               	iorwf	_id+3,w,c	;volatile
 19346  013DF8  B4D8               	btfsc	status,2,c
 19347  013DFA  A84A               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19348  013DFC  D002               	goto	i2l8644
 19349                           
 19350                           ;RemoteCan.c: 192: low_battery = 1;
 19351  013DFE  804B               	bsf	_low_battery/(0+8),_low_battery& (0+7),c	;volatile
 19352  013E00  D000               	goto	i2l8644
 19353  013E02                     i2l8644:
 19354                           
 19355                           ;RemoteCan.c: 193: }
 19356                           ;RemoteCan.c: 195: if (id == 0b00000010010) {
 19357  013E02  0E12               	movlw	18
 19358  013E04  1801               	xorwf	_id,w,c	;volatile
 19359  013E06  1002               	iorwf	_id+1,w,c	;volatile
 19360  013E08  1003               	iorwf	_id+2,w,c	;volatile
 19361  013E0A  1004               	iorwf	_id+3,w,c	;volatile
 19362  013E0C  A4D8               	btfss	status,2,c
 19363  013E0E  D007               	goto	i2l788
 19364                           
 19365                           ;RemoteCan.c: 196: battery_charging = msg.data[0];
 19366  013E10  B016               	btfsc	_msg+4,0,c
 19367  013E12  D002               	bra	i2u1092_45
 19368  013E14  9A4A               	bcf	_battery_charging/(0+8),_battery_charging& (0+7),c	;volatile
 19369  013E16  D001               	bra	i2u1092_46
 19370  013E18                     i2u1092_45:
 19371  013E18  8A4A               	bsf	_battery_charging/(0+8),_battery_charging& (0+7),c	;volatile
 19372  013E1A                     i2u1092_46:
 19373                           
 19374                           ;RemoteCan.c: 197: low_battery = 0;
 19375  013E1A  904B               	bcf	_low_battery/(0+8),_low_battery& (0+7),c	;volatile
 19376  013E1C  D000               	goto	i2l788
 19377  013E1E                     i2l788:
 19378                           
 19379                           ;RemoteCan.c: 198: }
 19380                           ;RemoteCan.c: 199: }
 19381                           ;RemoteCan.c: 200: PIR3bits.RXB1IF = 0;
 19382  013E1E  92A4               	bcf	4004,1,c	;volatile
 19383                           
 19384                           ;RemoteCan.c: 201: PIR3bits.RXB0IF = 0;
 19385  013E20  90A4               	bcf	4004,0,c	;volatile
 19386  013E22  D000               	goto	i2l805
 19387  013E24                     i2l805:
 19388  013E24  C071  FFF5         	movff	??_ISR_alta+17,tablat
 19389  013E28  C070  FFF8         	movff	??_ISR_alta+16,tblptru
 19390  013E2C  C06F  FFF7         	movff	??_ISR_alta+15,tblptrh
 19391  013E30  C06E  FFF6         	movff	??_ISR_alta+14,tblptrl
 19392  013E34  C06D  FFF4         	movff	??_ISR_alta+13,prodh
 19393  013E38  C06C  FFF3         	movff	??_ISR_alta+12,prodl
 19394  013E3C  C06B  FFDA         	movff	??_ISR_alta+11,fsr2h
 19395  013E40  C06A  FFD9         	movff	??_ISR_alta+10,fsr2l
 19396  013E44  C069  FFE2         	movff	??_ISR_alta+9,fsr1h
 19397  013E48  C068  FFE1         	movff	??_ISR_alta+8,fsr1l
 19398  013E4C  C067  FFEA         	movff	??_ISR_alta+7,fsr0h
 19399  013E50  C066  FFE9         	movff	??_ISR_alta+6,fsr0l
 19400  013E54  C065  FFFB         	movff	??_ISR_alta+5,pclatu
 19401  013E58  C064  FFFA         	movff	??_ISR_alta+4,pclath
 19402  013E5C  0011               	retfie		f
 19403  013E5E                     __end_of_ISR_alta:
 19404                           	opt stack 0
 19405                           pclatu	equ	0xFFB
 19406                           pclath	equ	0xFFA
 19407                           tblptru	equ	0xFF8
 19408                           tblptrh	equ	0xFF7
 19409                           tblptrl	equ	0xFF6
 19410                           tablat	equ	0xFF5
 19411                           prodh	equ	0xFF4
 19412                           prodl	equ	0xFF3
 19413                           intcon	equ	0xFF2
 19414                           postinc0	equ	0xFEE
 19415                           fsr0h	equ	0xFEA
 19416                           fsr0l	equ	0xFE9
 19417                           wreg	equ	0xFE8
 19418                           indf1	equ	0xFE7
 19419                           plusw1	equ	0xFE3
 19420                           fsr1h	equ	0xFE2
 19421                           fsr1l	equ	0xFE1
 19422                           bsr	equ	0xFE0
 19423                           indf2	equ	0xFDF
 19424                           postinc2	equ	0xFDE
 19425                           plusw2	equ	0xFDB
 19426                           fsr2h	equ	0xFDA
 19427                           fsr2l	equ	0xFD9
 19428                           status	equ	0xFD8
 19429                           
 19430 ;; *************** function i2_CANsendMessage *****************
 19431 ;; Defined at:
 19432 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 19433 ;; Parameters:    Size  Location     Type
 19434 ;;  identifier      4   17[COMRAM] unsigned long 
 19435 ;;  data            2   21[COMRAM] PTR unsigned char 
 19436 ;;		 -> data_speed(8), park_assist_state(8), data_steering(8), data_brake(8), 
 19437 ;;		 -> data(8), 
 19438 ;;  dataLength      1   23[COMRAM] unsigned char 
 19439 ;;  flags           1   24[COMRAM] enum E16950
 19440 ;; Auto vars:     Size  Location     Type
 19441 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 19442 ;; Return value:  Size  Location     Type
 19443 ;;		None               void
 19444 ;; Registers used:
 19445 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19446 ;; Tracked objects:
 19447 ;;		On entry : 0/0
 19448 ;;		On exit  : 0/0
 19449 ;;		Unchanged: 0/0
 19450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19451 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19452 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19453 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19454 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19455 ;;Total ram usage:       16 bytes
 19456 ;; Hardware stack levels used:    1
 19457 ;; This function calls:
 19458 ;;		Nothing
 19459 ;; This function is called by:
 19460 ;;		_ISR_alta
 19461 ;; This function uses a non-reentrant model
 19462 ;;
 19463                           
 19464                           	psect	text62
 19465  012430                     __ptext62:
 19466                           	opt stack 0
 19467  012430                     i2_CANsendMessage:
 19468                           	opt stack 20
 19469                           
 19470                           ;inc\CANlib.h: 296: unsigned long tamp;
 19471                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 19472                           
 19473                           ;incstack = 0
 19474  012430  010F               	movlb	15	; () banked
 19475  012432  B740               	btfsc	64,3,b	;volatile
 19476  012434  D118               	goto	i2l383
 19477                           
 19478                           ; BSR set to: 15
 19479                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 19480  012436  C040  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 19481                           
 19482                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 19483  01243A  AC41               	btfss	i2CANsendMessage@flags,6,c
 19484  01243C  D003               	goto	i2l384
 19485                           
 19486                           ; BSR set to: 15
 19487                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 19488  01243E  010F               	movlb	15	; () banked
 19489  012440  8D45               	bsf	69,6,b	;volatile
 19490  012442  D002               	goto	i2l385
 19491  012444                     i2l384:
 19492                           
 19493                           ; BSR set to: 15
 19494                           ;inc\CANlib.h: 302: else
 19495                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 19496  012444  010F               	movlb	15	; () banked
 19497  012446  9D45               	bcf	69,6,b	;volatile
 19498  012448                     i2l385:
 19499                           
 19500                           ; BSR set to: 15
 19501                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 19502  012448  A641               	btfss	i2CANsendMessage@flags,3,c
 19503  01244A  D067               	goto	i2l386
 19504                           
 19505                           ; BSR set to: 15
 19506                           ;inc\CANlib.h: 306: {
 19507                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 19508  01244C  503A               	movf	i2CANsendMessage@identifier,w,c
 19509  01244E  6E46               	movwf	i2CANsendMessage@tamp,c
 19510  012450  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19511  012452  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19512  012454  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19513                           
 19514                           ; BSR set to: 15
 19515                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 19516  012456  C046  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 19517                           
 19518                           ; BSR set to: 15
 19519                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 19520  01245A  0E00               	movlw	0
 19521  01245C  143A               	andwf	i2CANsendMessage@identifier,w,c
 19522  01245E  6E46               	movwf	i2CANsendMessage@tamp,c
 19523  012460  0EFF               	movlw	255
 19524  012462  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 19525  012464  6E47               	movwf	i2CANsendMessage@tamp+1,c
 19526  012466  0E00               	movlw	0
 19527  012468  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 19528  01246A  6E48               	movwf	i2CANsendMessage@tamp+2,c
 19529  01246C  0E00               	movlw	0
 19530  01246E  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 19531  012470  6E49               	movwf	i2CANsendMessage@tamp+3,c
 19532                           
 19533                           ; BSR set to: 15
 19534                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 19535  012472  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19536  012476  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19537  01247A  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19538  01247E  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19539  012482  C043  F042         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19540  012486  C044  F043         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19541  01248A  C045  F044         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19542  01248E  6A45               	clrf	??i2_CANsendMessage+3,c
 19543  012490  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19544  012494  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19545  012498  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19546  01249C  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19547                           
 19548                           ; BSR set to: 15
 19549                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 19550  0124A0  C046  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 19551                           
 19552                           ; BSR set to: 15
 19553                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 19554  0124A4  0E00               	movlw	0
 19555  0124A6  010F               	movlb	15	; () banked
 19556  0124A8  6F42               	movwf	66,b	;volatile
 19557                           
 19558                           ; BSR set to: 15
 19559                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 19560  0124AA  010F               	movlb	15	; () banked
 19561  0124AC  8742               	bsf	66,3,b	;volatile
 19562                           
 19563                           ; BSR set to: 15
 19564                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 19565  0124AE  A03C               	btfss	i2CANsendMessage@identifier+2,0,c
 19566  0124B0  D002               	goto	i2l387
 19567                           
 19568                           ; BSR set to: 15
 19569                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 19570  0124B2  010F               	movlb	15	; () banked
 19571  0124B4  8142               	bsf	66,0,b	;volatile
 19572  0124B6                     i2l387:
 19573                           
 19574                           ; BSR set to: 15
 19575                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 19576  0124B6  A23C               	btfss	i2CANsendMessage@identifier+2,1,c
 19577  0124B8  D002               	goto	i2l388
 19578                           
 19579                           ; BSR set to: 15
 19580                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 19581  0124BA  010F               	movlb	15	; () banked
 19582  0124BC  8342               	bsf	66,1,b	;volatile
 19583  0124BE                     i2l388:
 19584                           
 19585                           ; BSR set to: 15
 19586                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 19587  0124BE  A43C               	btfss	i2CANsendMessage@identifier+2,2,c
 19588  0124C0  D002               	goto	i2l389
 19589                           
 19590                           ; BSR set to: 15
 19591                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 19592  0124C2  010F               	movlb	15	; () banked
 19593  0124C4  8B42               	bsf	66,5,b	;volatile
 19594  0124C6                     i2l389:
 19595                           
 19596                           ; BSR set to: 15
 19597                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 19598  0124C6  A63C               	btfss	i2CANsendMessage@identifier+2,3,c
 19599  0124C8  D002               	goto	i2l390
 19600                           
 19601                           ; BSR set to: 15
 19602                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 19603  0124CA  010F               	movlb	15	; () banked
 19604  0124CC  8D42               	bsf	66,6,b	;volatile
 19605  0124CE                     i2l390:
 19606                           
 19607                           ; BSR set to: 15
 19608                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 19609  0124CE  A83C               	btfss	i2CANsendMessage@identifier+2,4,c
 19610  0124D0  D003               	goto	i2l6762
 19611                           
 19612                           ; BSR set to: 15
 19613                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 19614  0124D2  010F               	movlb	15	; () banked
 19615  0124D4  8F42               	bsf	66,7,b	;volatile
 19616  0124D6  D000               	goto	i2l6762
 19617  0124D8                     i2l6762:
 19618                           
 19619                           ; BSR set to: 15
 19620                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 19621  0124D8  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19622  0124DC  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19623  0124E0  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19624  0124E4  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19625  0124E8  0E16               	movlw	22
 19626  0124EA  D005               	goto	i2u813_40
 19627  0124EC                     i2u813_45:
 19628  0124EC  90D8               	bcf	status,0,c
 19629  0124EE  3245               	rrcf	??i2_CANsendMessage+3,f,c
 19630  0124F0  3244               	rrcf	??i2_CANsendMessage+2,f,c
 19631  0124F2  3243               	rrcf	??i2_CANsendMessage+1,f,c
 19632  0124F4  3242               	rrcf	??i2_CANsendMessage,f,c
 19633  0124F6                     i2u813_40:
 19634  0124F6  2EE8               	decfsz	wreg,f,c
 19635  0124F8  D7F9               	goto	i2u813_45
 19636  0124FA  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19637  0124FE  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19638  012502  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19639  012506  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19640                           
 19641                           ; BSR set to: 15
 19642                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 19643  01250A  5046               	movf	i2CANsendMessage@tamp,w,c
 19644  01250C  6E46               	movwf	i2CANsendMessage@tamp,c
 19645  01250E  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19646  012510  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19647  012512  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19648                           
 19649                           ; BSR set to: 15
 19650                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 19651  012514  C046  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19652                           
 19653                           ;inc\CANlib.h: 332: }
 19654  012518  D04E               	goto	i2l6782
 19655  01251A                     i2l386:
 19656                           
 19657                           ; BSR set to: 15
 19658                           ;inc\CANlib.h: 334: else
 19659                           ;inc\CANlib.h: 336: {
 19660                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 19661  01251A  010F               	movlb	15	; () banked
 19662  01251C  9742               	bcf	66,3,b	;volatile
 19663                           
 19664                           ; BSR set to: 15
 19665                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 19666  01251E  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19667  012522  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19668  012526  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19669  01252A  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19670  01252E  0E04               	movlw	4
 19671  012530  D005               	goto	i2u814_40
 19672  012532                     i2u814_45:
 19673  012532  90D8               	bcf	status,0,c
 19674  012534  3245               	rrcf	??i2_CANsendMessage+3,f,c
 19675  012536  3244               	rrcf	??i2_CANsendMessage+2,f,c
 19676  012538  3243               	rrcf	??i2_CANsendMessage+1,f,c
 19677  01253A  3242               	rrcf	??i2_CANsendMessage,f,c
 19678  01253C                     i2u814_40:
 19679  01253C  2EE8               	decfsz	wreg,f,c
 19680  01253E  D7F9               	goto	i2u814_45
 19681  012540  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19682  012544  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19683  012548  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19684  01254C  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19685                           
 19686                           ; BSR set to: 15
 19687                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 19688  012550  5046               	movf	i2CANsendMessage@tamp,w,c
 19689  012552  6E46               	movwf	i2CANsendMessage@tamp,c
 19690  012554  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19691  012556  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19692  012558  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19693                           
 19694                           ; BSR set to: 15
 19695                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 19696  01255A  C046  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19697                           
 19698                           ; BSR set to: 15
 19699                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 19700  01255E  0E07               	movlw	7
 19701  012560  143A               	andwf	i2CANsendMessage@identifier,w,c
 19702  012562  6E46               	movwf	i2CANsendMessage@tamp,c
 19703  012564  0E00               	movlw	0
 19704  012566  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 19705  012568  6E47               	movwf	i2CANsendMessage@tamp+1,c
 19706  01256A  0E00               	movlw	0
 19707  01256C  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 19708  01256E  6E48               	movwf	i2CANsendMessage@tamp+2,c
 19709  012570  0E00               	movlw	0
 19710  012572  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 19711  012574  6E49               	movwf	i2CANsendMessage@tamp+3,c
 19712                           
 19713                           ; BSR set to: 15
 19714                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 19715  012576  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19716  01257A  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19717  01257E  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19718  012582  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19719  012586  0E05               	movlw	5
 19720  012588                     i2u815_45:
 19721  012588  90D8               	bcf	status,0,c
 19722  01258A  3642               	rlcf	??i2_CANsendMessage,f,c
 19723  01258C  3643               	rlcf	??i2_CANsendMessage+1,f,c
 19724  01258E  3644               	rlcf	??i2_CANsendMessage+2,f,c
 19725  012590  3645               	rlcf	??i2_CANsendMessage+3,f,c
 19726  012592  2EE8               	decfsz	wreg,f,c
 19727  012594  D7F9               	goto	i2u815_45
 19728  012596  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19729  01259A  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19730  01259E  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19731  0125A2  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19732                           
 19733                           ; BSR set to: 15
 19734                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 19735  0125A6  010F               	movlb	15	; () banked
 19736  0125A8  5142               	movf	66,w,b	;volatile
 19737  0125AA  0B1F               	andlw	31
 19738  0125AC  010F               	movlb	15	; () banked
 19739  0125AE  6F42               	movwf	66,b	;volatile
 19740                           
 19741                           ; BSR set to: 15
 19742                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 19743  0125B0  C046  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 19744  0125B4  D000               	goto	i2l6782
 19745  0125B6                     i2l6782:
 19746                           
 19747                           ; BSR set to: 15
 19748                           ;inc\CANlib.h: 347: }
 19749                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 19750  0125B6  A041               	btfss	i2CANsendMessage@flags,0,c
 19751  0125B8  D003               	goto	i2l393
 19752                           
 19753                           ; BSR set to: 15
 19754                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 19755  0125BA  010F               	movlb	15	; () banked
 19756  0125BC  8140               	bsf	64,0,b	;volatile
 19757  0125BE  D002               	goto	i2l394
 19758  0125C0                     i2l393:
 19759                           
 19760                           ; BSR set to: 15
 19761                           ;inc\CANlib.h: 351: else
 19762                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 19763  0125C0  010F               	movlb	15	; () banked
 19764  0125C2  9140               	bcf	64,0,b	;volatile
 19765  0125C4                     i2l394:
 19766                           
 19767                           ; BSR set to: 15
 19768                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 19769  0125C4  A241               	btfss	i2CANsendMessage@flags,1,c
 19770  0125C6  D003               	goto	i2l395
 19771                           
 19772                           ; BSR set to: 15
 19773                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 19774  0125C8  010F               	movlb	15	; () banked
 19775  0125CA  8340               	bsf	64,1,b	;volatile
 19776  0125CC  D003               	goto	i2l6788
 19777  0125CE                     i2l395:
 19778                           
 19779                           ; BSR set to: 15
 19780                           ;inc\CANlib.h: 355: else
 19781                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 19782  0125CE  010F               	movlb	15	; () banked
 19783  0125D0  9340               	bcf	64,1,b	;volatile
 19784  0125D2  D000               	goto	i2l6788
 19785  0125D4                     i2l6788:
 19786                           
 19787                           ; BSR set to: 15
 19788                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 19789  0125D4  C03E  FFD9         	movff	i2CANsendMessage@data,fsr2l
 19790  0125D8  C03F  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 19791  0125DC  50DF               	movf	indf2,w,c
 19792  0125DE  010F               	movlb	15	; () banked
 19793  0125E0  6F46               	movwf	70,b	;volatile
 19794                           
 19795                           ; BSR set to: 15
 19796                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 19797  0125E2  EE20 F001          	lfsr	2,1
 19798  0125E6  503E               	movf	i2CANsendMessage@data,w,c
 19799  0125E8  26D9               	addwf	fsr2l,f,c
 19800  0125EA  503F               	movf	i2CANsendMessage@data+1,w,c
 19801  0125EC  22DA               	addwfc	fsr2h,f,c
 19802  0125EE  50DF               	movf	indf2,w,c
 19803  0125F0  010F               	movlb	15	; () banked
 19804  0125F2  6F47               	movwf	71,b	;volatile
 19805                           
 19806                           ; BSR set to: 15
 19807                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 19808  0125F4  EE20 F002          	lfsr	2,2
 19809  0125F8  503E               	movf	i2CANsendMessage@data,w,c
 19810  0125FA  26D9               	addwf	fsr2l,f,c
 19811  0125FC  503F               	movf	i2CANsendMessage@data+1,w,c
 19812  0125FE  22DA               	addwfc	fsr2h,f,c
 19813  012600  50DF               	movf	indf2,w,c
 19814  012602  010F               	movlb	15	; () banked
 19815  012604  6F48               	movwf	72,b	;volatile
 19816                           
 19817                           ; BSR set to: 15
 19818                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 19819  012606  EE20 F003          	lfsr	2,3
 19820  01260A  503E               	movf	i2CANsendMessage@data,w,c
 19821  01260C  26D9               	addwf	fsr2l,f,c
 19822  01260E  503F               	movf	i2CANsendMessage@data+1,w,c
 19823  012610  22DA               	addwfc	fsr2h,f,c
 19824  012612  50DF               	movf	indf2,w,c
 19825  012614  010F               	movlb	15	; () banked
 19826  012616  6F49               	movwf	73,b	;volatile
 19827                           
 19828                           ; BSR set to: 15
 19829                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 19830  012618  EE20 F004          	lfsr	2,4
 19831  01261C  503E               	movf	i2CANsendMessage@data,w,c
 19832  01261E  26D9               	addwf	fsr2l,f,c
 19833  012620  503F               	movf	i2CANsendMessage@data+1,w,c
 19834  012622  22DA               	addwfc	fsr2h,f,c
 19835  012624  50DF               	movf	indf2,w,c
 19836  012626  010F               	movlb	15	; () banked
 19837  012628  6F4A               	movwf	74,b	;volatile
 19838                           
 19839                           ; BSR set to: 15
 19840                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 19841  01262A  EE20 F005          	lfsr	2,5
 19842  01262E  503E               	movf	i2CANsendMessage@data,w,c
 19843  012630  26D9               	addwf	fsr2l,f,c
 19844  012632  503F               	movf	i2CANsendMessage@data+1,w,c
 19845  012634  22DA               	addwfc	fsr2h,f,c
 19846  012636  50DF               	movf	indf2,w,c
 19847  012638  010F               	movlb	15	; () banked
 19848  01263A  6F4B               	movwf	75,b	;volatile
 19849                           
 19850                           ; BSR set to: 15
 19851                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 19852  01263C  EE20 F006          	lfsr	2,6
 19853  012640  503E               	movf	i2CANsendMessage@data,w,c
 19854  012642  26D9               	addwf	fsr2l,f,c
 19855  012644  503F               	movf	i2CANsendMessage@data+1,w,c
 19856  012646  22DA               	addwfc	fsr2h,f,c
 19857  012648  50DF               	movf	indf2,w,c
 19858  01264A  010F               	movlb	15	; () banked
 19859  01264C  6F4C               	movwf	76,b	;volatile
 19860                           
 19861                           ; BSR set to: 15
 19862                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 19863  01264E  EE20 F007          	lfsr	2,7
 19864  012652  503E               	movf	i2CANsendMessage@data,w,c
 19865  012654  26D9               	addwf	fsr2l,f,c
 19866  012656  503F               	movf	i2CANsendMessage@data+1,w,c
 19867  012658  22DA               	addwfc	fsr2h,f,c
 19868  01265A  50DF               	movf	indf2,w,c
 19869  01265C  010F               	movlb	15	; () banked
 19870  01265E  6F4D               	movwf	77,b	;volatile
 19871                           
 19872                           ; BSR set to: 15
 19873                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 19874  012660  010F               	movlb	15	; () banked
 19875  012662  8740               	bsf	64,3,b	;volatile
 19876                           
 19877                           ; BSR set to: 15
 19878                           ;inc\CANlib.h: 368: return;
 19879  012664  0012               	return	
 19880  012666                     i2l383:
 19881                           
 19882                           ; BSR set to: 15
 19883                           ;inc\CANlib.h: 369: }
 19884                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 19885  012666  010F               	movlb	15	; () banked
 19886  012668  B730               	btfsc	48,3,b	;volatile
 19887  01266A  D118               	goto	i2l398
 19888                           
 19889                           ; BSR set to: 15
 19890                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 19891  01266C  C040  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 19892                           
 19893                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 19894  012670  AC41               	btfss	i2CANsendMessage@flags,6,c
 19895  012672  D003               	goto	i2l399
 19896                           
 19897                           ; BSR set to: 15
 19898                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 19899  012674  010F               	movlb	15	; () banked
 19900  012676  8D35               	bsf	53,6,b	;volatile
 19901  012678  D002               	goto	i2l400
 19902  01267A                     i2l399:
 19903                           
 19904                           ; BSR set to: 15
 19905                           ;inc\CANlib.h: 378: else
 19906                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 19907  01267A  010F               	movlb	15	; () banked
 19908  01267C  9D35               	bcf	53,6,b	;volatile
 19909  01267E                     i2l400:
 19910                           
 19911                           ; BSR set to: 15
 19912                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 19913  01267E  A641               	btfss	i2CANsendMessage@flags,3,c
 19914  012680  D067               	goto	i2l401
 19915                           
 19916                           ; BSR set to: 15
 19917                           ;inc\CANlib.h: 382: {
 19918                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 19919  012682  503A               	movf	i2CANsendMessage@identifier,w,c
 19920  012684  6E46               	movwf	i2CANsendMessage@tamp,c
 19921  012686  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19922  012688  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19923  01268A  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19924                           
 19925                           ; BSR set to: 15
 19926                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 19927  01268C  C046  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 19928                           
 19929                           ; BSR set to: 15
 19930                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 19931  012690  0E00               	movlw	0
 19932  012692  143A               	andwf	i2CANsendMessage@identifier,w,c
 19933  012694  6E46               	movwf	i2CANsendMessage@tamp,c
 19934  012696  0EFF               	movlw	255
 19935  012698  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 19936  01269A  6E47               	movwf	i2CANsendMessage@tamp+1,c
 19937  01269C  0E00               	movlw	0
 19938  01269E  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 19939  0126A0  6E48               	movwf	i2CANsendMessage@tamp+2,c
 19940  0126A2  0E00               	movlw	0
 19941  0126A4  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 19942  0126A6  6E49               	movwf	i2CANsendMessage@tamp+3,c
 19943                           
 19944                           ; BSR set to: 15
 19945                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 19946  0126A8  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19947  0126AC  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19948  0126B0  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19949  0126B4  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19950  0126B8  C043  F042         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19951  0126BC  C044  F043         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19952  0126C0  C045  F044         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19953  0126C4  6A45               	clrf	??i2_CANsendMessage+3,c
 19954  0126C6  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19955  0126CA  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19956  0126CE  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19957  0126D2  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19958                           
 19959                           ; BSR set to: 15
 19960                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 19961  0126D6  C046  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 19962                           
 19963                           ; BSR set to: 15
 19964                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 19965  0126DA  0E00               	movlw	0
 19966  0126DC  010F               	movlb	15	; () banked
 19967  0126DE  6F32               	movwf	50,b	;volatile
 19968                           
 19969                           ; BSR set to: 15
 19970                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 19971  0126E0  010F               	movlb	15	; () banked
 19972  0126E2  8732               	bsf	50,3,b	;volatile
 19973                           
 19974                           ; BSR set to: 15
 19975                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 19976  0126E4  A03C               	btfss	i2CANsendMessage@identifier+2,0,c
 19977  0126E6  D002               	goto	i2l402
 19978                           
 19979                           ; BSR set to: 15
 19980                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 19981  0126E8  010F               	movlb	15	; () banked
 19982  0126EA  8132               	bsf	50,0,b	;volatile
 19983  0126EC                     i2l402:
 19984                           
 19985                           ; BSR set to: 15
 19986                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 19987  0126EC  A23C               	btfss	i2CANsendMessage@identifier+2,1,c
 19988  0126EE  D002               	goto	i2l403
 19989                           
 19990                           ; BSR set to: 15
 19991                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 19992  0126F0  010F               	movlb	15	; () banked
 19993  0126F2  8332               	bsf	50,1,b	;volatile
 19994  0126F4                     i2l403:
 19995                           
 19996                           ; BSR set to: 15
 19997                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 19998  0126F4  A43C               	btfss	i2CANsendMessage@identifier+2,2,c
 19999  0126F6  D002               	goto	i2l404
 20000                           
 20001                           ; BSR set to: 15
 20002                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 20003  0126F8  010F               	movlb	15	; () banked
 20004  0126FA  8B32               	bsf	50,5,b	;volatile
 20005  0126FC                     i2l404:
 20006                           
 20007                           ; BSR set to: 15
 20008                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 20009  0126FC  A63C               	btfss	i2CANsendMessage@identifier+2,3,c
 20010  0126FE  D002               	goto	i2l405
 20011                           
 20012                           ; BSR set to: 15
 20013                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 20014  012700  010F               	movlb	15	; () banked
 20015  012702  8D32               	bsf	50,6,b	;volatile
 20016  012704                     i2l405:
 20017                           
 20018                           ; BSR set to: 15
 20019                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 20020  012704  A83C               	btfss	i2CANsendMessage@identifier+2,4,c
 20021  012706  D003               	goto	i2l6838
 20022                           
 20023                           ; BSR set to: 15
 20024                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 20025  012708  010F               	movlb	15	; () banked
 20026  01270A  8F32               	bsf	50,7,b	;volatile
 20027  01270C  D000               	goto	i2l6838
 20028  01270E                     i2l6838:
 20029                           
 20030                           ; BSR set to: 15
 20031                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 20032  01270E  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20033  012712  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20034  012716  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20035  01271A  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20036  01271E  0E16               	movlw	22
 20037  012720  D005               	goto	i2u826_40
 20038  012722                     i2u826_45:
 20039  012722  90D8               	bcf	status,0,c
 20040  012724  3245               	rrcf	??i2_CANsendMessage+3,f,c
 20041  012726  3244               	rrcf	??i2_CANsendMessage+2,f,c
 20042  012728  3243               	rrcf	??i2_CANsendMessage+1,f,c
 20043  01272A  3242               	rrcf	??i2_CANsendMessage,f,c
 20044  01272C                     i2u826_40:
 20045  01272C  2EE8               	decfsz	wreg,f,c
 20046  01272E  D7F9               	goto	i2u826_45
 20047  012730  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20048  012734  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20049  012738  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20050  01273C  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20051                           
 20052                           ; BSR set to: 15
 20053                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 20054  012740  5046               	movf	i2CANsendMessage@tamp,w,c
 20055  012742  6E46               	movwf	i2CANsendMessage@tamp,c
 20056  012744  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20057  012746  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20058  012748  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20059                           
 20060                           ; BSR set to: 15
 20061                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 20062  01274A  C046  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 20063                           
 20064                           ;inc\CANlib.h: 407: }
 20065  01274E  D04E               	goto	i2l6858
 20066  012750                     i2l401:
 20067                           
 20068                           ; BSR set to: 15
 20069                           ;inc\CANlib.h: 409: else
 20070                           ;inc\CANlib.h: 411: {
 20071                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 20072  012750  010F               	movlb	15	; () banked
 20073  012752  9732               	bcf	50,3,b	;volatile
 20074                           
 20075                           ; BSR set to: 15
 20076                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 20077  012754  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20078  012758  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20079  01275C  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20080  012760  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20081  012764  0E04               	movlw	4
 20082  012766  D005               	goto	i2u827_40
 20083  012768                     i2u827_45:
 20084  012768  90D8               	bcf	status,0,c
 20085  01276A  3245               	rrcf	??i2_CANsendMessage+3,f,c
 20086  01276C  3244               	rrcf	??i2_CANsendMessage+2,f,c
 20087  01276E  3243               	rrcf	??i2_CANsendMessage+1,f,c
 20088  012770  3242               	rrcf	??i2_CANsendMessage,f,c
 20089  012772                     i2u827_40:
 20090  012772  2EE8               	decfsz	wreg,f,c
 20091  012774  D7F9               	goto	i2u827_45
 20092  012776  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20093  01277A  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20094  01277E  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20095  012782  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20096                           
 20097                           ; BSR set to: 15
 20098                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 20099  012786  5046               	movf	i2CANsendMessage@tamp,w,c
 20100  012788  6E46               	movwf	i2CANsendMessage@tamp,c
 20101  01278A  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20102  01278C  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20103  01278E  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20104                           
 20105                           ; BSR set to: 15
 20106                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 20107  012790  C046  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 20108                           
 20109                           ; BSR set to: 15
 20110                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 20111  012794  0E07               	movlw	7
 20112  012796  143A               	andwf	i2CANsendMessage@identifier,w,c
 20113  012798  6E46               	movwf	i2CANsendMessage@tamp,c
 20114  01279A  0E00               	movlw	0
 20115  01279C  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 20116  01279E  6E47               	movwf	i2CANsendMessage@tamp+1,c
 20117  0127A0  0E00               	movlw	0
 20118  0127A2  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 20119  0127A4  6E48               	movwf	i2CANsendMessage@tamp+2,c
 20120  0127A6  0E00               	movlw	0
 20121  0127A8  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 20122  0127AA  6E49               	movwf	i2CANsendMessage@tamp+3,c
 20123                           
 20124                           ; BSR set to: 15
 20125                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 20126  0127AC  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20127  0127B0  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20128  0127B4  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20129  0127B8  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20130  0127BC  0E05               	movlw	5
 20131  0127BE                     i2u828_45:
 20132  0127BE  90D8               	bcf	status,0,c
 20133  0127C0  3642               	rlcf	??i2_CANsendMessage,f,c
 20134  0127C2  3643               	rlcf	??i2_CANsendMessage+1,f,c
 20135  0127C4  3644               	rlcf	??i2_CANsendMessage+2,f,c
 20136  0127C6  3645               	rlcf	??i2_CANsendMessage+3,f,c
 20137  0127C8  2EE8               	decfsz	wreg,f,c
 20138  0127CA  D7F9               	goto	i2u828_45
 20139  0127CC  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20140  0127D0  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20141  0127D4  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20142  0127D8  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20143                           
 20144                           ; BSR set to: 15
 20145                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 20146  0127DC  010F               	movlb	15	; () banked
 20147  0127DE  5132               	movf	50,w,b	;volatile
 20148  0127E0  0B1F               	andlw	31
 20149  0127E2  010F               	movlb	15	; () banked
 20150  0127E4  6F32               	movwf	50,b	;volatile
 20151                           
 20152                           ; BSR set to: 15
 20153                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 20154  0127E6  C046  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 20155  0127EA  D000               	goto	i2l6858
 20156  0127EC                     i2l6858:
 20157                           
 20158                           ; BSR set to: 15
 20159                           ;inc\CANlib.h: 422: }
 20160                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 20161  0127EC  A041               	btfss	i2CANsendMessage@flags,0,c
 20162  0127EE  D003               	goto	i2l408
 20163                           
 20164                           ; BSR set to: 15
 20165                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 20166  0127F0  010F               	movlb	15	; () banked
 20167  0127F2  8130               	bsf	48,0,b	;volatile
 20168  0127F4  D002               	goto	i2l409
 20169  0127F6                     i2l408:
 20170                           
 20171                           ; BSR set to: 15
 20172                           ;inc\CANlib.h: 426: else
 20173                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 20174  0127F6  010F               	movlb	15	; () banked
 20175  0127F8  9130               	bcf	48,0,b	;volatile
 20176  0127FA                     i2l409:
 20177                           
 20178                           ; BSR set to: 15
 20179                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 20180  0127FA  A241               	btfss	i2CANsendMessage@flags,1,c
 20181  0127FC  D003               	goto	i2l410
 20182                           
 20183                           ; BSR set to: 15
 20184                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 20185  0127FE  010F               	movlb	15	; () banked
 20186  012800  8330               	bsf	48,1,b	;volatile
 20187  012802  D003               	goto	i2l6864
 20188  012804                     i2l410:
 20189                           
 20190                           ; BSR set to: 15
 20191                           ;inc\CANlib.h: 430: else
 20192                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 20193  012804  010F               	movlb	15	; () banked
 20194  012806  9330               	bcf	48,1,b	;volatile
 20195  012808  D000               	goto	i2l6864
 20196  01280A                     i2l6864:
 20197                           
 20198                           ; BSR set to: 15
 20199                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 20200  01280A  C03E  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20201  01280E  C03F  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20202  012812  50DF               	movf	indf2,w,c
 20203  012814  010F               	movlb	15	; () banked
 20204  012816  6F36               	movwf	54,b	;volatile
 20205                           
 20206                           ; BSR set to: 15
 20207                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 20208  012818  EE20 F001          	lfsr	2,1
 20209  01281C  503E               	movf	i2CANsendMessage@data,w,c
 20210  01281E  26D9               	addwf	fsr2l,f,c
 20211  012820  503F               	movf	i2CANsendMessage@data+1,w,c
 20212  012822  22DA               	addwfc	fsr2h,f,c
 20213  012824  50DF               	movf	indf2,w,c
 20214  012826  010F               	movlb	15	; () banked
 20215  012828  6F37               	movwf	55,b	;volatile
 20216                           
 20217                           ; BSR set to: 15
 20218                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 20219  01282A  EE20 F002          	lfsr	2,2
 20220  01282E  503E               	movf	i2CANsendMessage@data,w,c
 20221  012830  26D9               	addwf	fsr2l,f,c
 20222  012832  503F               	movf	i2CANsendMessage@data+1,w,c
 20223  012834  22DA               	addwfc	fsr2h,f,c
 20224  012836  50DF               	movf	indf2,w,c
 20225  012838  010F               	movlb	15	; () banked
 20226  01283A  6F38               	movwf	56,b	;volatile
 20227                           
 20228                           ; BSR set to: 15
 20229                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 20230  01283C  EE20 F003          	lfsr	2,3
 20231  012840  503E               	movf	i2CANsendMessage@data,w,c
 20232  012842  26D9               	addwf	fsr2l,f,c
 20233  012844  503F               	movf	i2CANsendMessage@data+1,w,c
 20234  012846  22DA               	addwfc	fsr2h,f,c
 20235  012848  50DF               	movf	indf2,w,c
 20236  01284A  010F               	movlb	15	; () banked
 20237  01284C  6F39               	movwf	57,b	;volatile
 20238                           
 20239                           ; BSR set to: 15
 20240                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 20241  01284E  EE20 F004          	lfsr	2,4
 20242  012852  503E               	movf	i2CANsendMessage@data,w,c
 20243  012854  26D9               	addwf	fsr2l,f,c
 20244  012856  503F               	movf	i2CANsendMessage@data+1,w,c
 20245  012858  22DA               	addwfc	fsr2h,f,c
 20246  01285A  50DF               	movf	indf2,w,c
 20247  01285C  010F               	movlb	15	; () banked
 20248  01285E  6F3A               	movwf	58,b	;volatile
 20249                           
 20250                           ; BSR set to: 15
 20251                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 20252  012860  EE20 F005          	lfsr	2,5
 20253  012864  503E               	movf	i2CANsendMessage@data,w,c
 20254  012866  26D9               	addwf	fsr2l,f,c
 20255  012868  503F               	movf	i2CANsendMessage@data+1,w,c
 20256  01286A  22DA               	addwfc	fsr2h,f,c
 20257  01286C  50DF               	movf	indf2,w,c
 20258  01286E  010F               	movlb	15	; () banked
 20259  012870  6F3B               	movwf	59,b	;volatile
 20260                           
 20261                           ; BSR set to: 15
 20262                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 20263  012872  EE20 F006          	lfsr	2,6
 20264  012876  503E               	movf	i2CANsendMessage@data,w,c
 20265  012878  26D9               	addwf	fsr2l,f,c
 20266  01287A  503F               	movf	i2CANsendMessage@data+1,w,c
 20267  01287C  22DA               	addwfc	fsr2h,f,c
 20268  01287E  50DF               	movf	indf2,w,c
 20269  012880  010F               	movlb	15	; () banked
 20270  012882  6F3C               	movwf	60,b	;volatile
 20271                           
 20272                           ; BSR set to: 15
 20273                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 20274  012884  EE20 F007          	lfsr	2,7
 20275  012888  503E               	movf	i2CANsendMessage@data,w,c
 20276  01288A  26D9               	addwf	fsr2l,f,c
 20277  01288C  503F               	movf	i2CANsendMessage@data+1,w,c
 20278  01288E  22DA               	addwfc	fsr2h,f,c
 20279  012890  50DF               	movf	indf2,w,c
 20280  012892  010F               	movlb	15	; () banked
 20281  012894  6F3D               	movwf	61,b	;volatile
 20282                           
 20283                           ; BSR set to: 15
 20284                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 20285  012896  010F               	movlb	15	; () banked
 20286  012898  8730               	bsf	48,3,b	;volatile
 20287                           
 20288                           ; BSR set to: 15
 20289                           ;inc\CANlib.h: 444: return;
 20290  01289A  0012               	return	
 20291  01289C                     i2l398:
 20292                           
 20293                           ; BSR set to: 15
 20294                           ;inc\CANlib.h: 445: }
 20295                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 20296  01289C  010F               	movlb	15	; () banked
 20297  01289E  B720               	btfsc	32,3,b	;volatile
 20298  0128A0  0012               	return	
 20299                           
 20300                           ; BSR set to: 15
 20301                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 20302  0128A2  C040  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 20303                           
 20304                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 20305  0128A6  AC41               	btfss	i2CANsendMessage@flags,6,c
 20306  0128A8  D003               	goto	i2l413
 20307                           
 20308                           ; BSR set to: 15
 20309                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 20310  0128AA  010F               	movlb	15	; () banked
 20311  0128AC  8D25               	bsf	37,6,b	;volatile
 20312  0128AE  D002               	goto	i2l414
 20313  0128B0                     i2l413:
 20314                           
 20315                           ; BSR set to: 15
 20316                           ;inc\CANlib.h: 454: else
 20317                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 20318  0128B0  010F               	movlb	15	; () banked
 20319  0128B2  9D25               	bcf	37,6,b	;volatile
 20320  0128B4                     i2l414:
 20321                           
 20322                           ; BSR set to: 15
 20323                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 20324  0128B4  A641               	btfss	i2CANsendMessage@flags,3,c
 20325  0128B6  D067               	goto	i2l415
 20326                           
 20327                           ; BSR set to: 15
 20328                           ;inc\CANlib.h: 458: {
 20329                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 20330  0128B8  503A               	movf	i2CANsendMessage@identifier,w,c
 20331  0128BA  6E46               	movwf	i2CANsendMessage@tamp,c
 20332  0128BC  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20333  0128BE  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20334  0128C0  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20335                           
 20336                           ; BSR set to: 15
 20337                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 20338  0128C2  C046  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 20339                           
 20340                           ; BSR set to: 15
 20341                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 20342  0128C6  0E00               	movlw	0
 20343  0128C8  143A               	andwf	i2CANsendMessage@identifier,w,c
 20344  0128CA  6E46               	movwf	i2CANsendMessage@tamp,c
 20345  0128CC  0EFF               	movlw	255
 20346  0128CE  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 20347  0128D0  6E47               	movwf	i2CANsendMessage@tamp+1,c
 20348  0128D2  0E00               	movlw	0
 20349  0128D4  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 20350  0128D6  6E48               	movwf	i2CANsendMessage@tamp+2,c
 20351  0128D8  0E00               	movlw	0
 20352  0128DA  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 20353  0128DC  6E49               	movwf	i2CANsendMessage@tamp+3,c
 20354                           
 20355                           ; BSR set to: 15
 20356                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 20357  0128DE  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20358  0128E2  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20359  0128E6  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20360  0128EA  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20361  0128EE  C043  F042         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20362  0128F2  C044  F043         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20363  0128F6  C045  F044         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20364  0128FA  6A45               	clrf	??i2_CANsendMessage+3,c
 20365  0128FC  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20366  012900  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20367  012904  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20368  012908  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20369                           
 20370                           ; BSR set to: 15
 20371                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 20372  01290C  C046  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 20373                           
 20374                           ; BSR set to: 15
 20375                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 20376  012910  0E00               	movlw	0
 20377  012912  010F               	movlb	15	; () banked
 20378  012914  6F22               	movwf	34,b	;volatile
 20379                           
 20380                           ; BSR set to: 15
 20381                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 20382  012916  010F               	movlb	15	; () banked
 20383  012918  8722               	bsf	34,3,b	;volatile
 20384                           
 20385                           ; BSR set to: 15
 20386                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 20387  01291A  A03C               	btfss	i2CANsendMessage@identifier+2,0,c
 20388  01291C  D002               	goto	i2l416
 20389                           
 20390                           ; BSR set to: 15
 20391                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 20392  01291E  010F               	movlb	15	; () banked
 20393  012920  8122               	bsf	34,0,b	;volatile
 20394  012922                     i2l416:
 20395                           
 20396                           ; BSR set to: 15
 20397                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 20398  012922  A23C               	btfss	i2CANsendMessage@identifier+2,1,c
 20399  012924  D002               	goto	i2l417
 20400                           
 20401                           ; BSR set to: 15
 20402                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 20403  012926  010F               	movlb	15	; () banked
 20404  012928  8322               	bsf	34,1,b	;volatile
 20405  01292A                     i2l417:
 20406                           
 20407                           ; BSR set to: 15
 20408                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 20409  01292A  A43C               	btfss	i2CANsendMessage@identifier+2,2,c
 20410  01292C  D002               	goto	i2l418
 20411                           
 20412                           ; BSR set to: 15
 20413                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 20414  01292E  010F               	movlb	15	; () banked
 20415  012930  8B22               	bsf	34,5,b	;volatile
 20416  012932                     i2l418:
 20417                           
 20418                           ; BSR set to: 15
 20419                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 20420  012932  A63C               	btfss	i2CANsendMessage@identifier+2,3,c
 20421  012934  D002               	goto	i2l419
 20422                           
 20423                           ; BSR set to: 15
 20424                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 20425  012936  010F               	movlb	15	; () banked
 20426  012938  8D22               	bsf	34,6,b	;volatile
 20427  01293A                     i2l419:
 20428                           
 20429                           ; BSR set to: 15
 20430                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 20431  01293A  A83C               	btfss	i2CANsendMessage@identifier+2,4,c
 20432  01293C  D003               	goto	i2l6914
 20433                           
 20434                           ; BSR set to: 15
 20435                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 20436  01293E  010F               	movlb	15	; () banked
 20437  012940  8F22               	bsf	34,7,b	;volatile
 20438  012942  D000               	goto	i2l6914
 20439  012944                     i2l6914:
 20440                           
 20441                           ; BSR set to: 15
 20442                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 20443  012944  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20444  012948  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20445  01294C  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20446  012950  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20447  012954  0E16               	movlw	22
 20448  012956  D005               	goto	i2u839_40
 20449  012958                     i2u839_45:
 20450  012958  90D8               	bcf	status,0,c
 20451  01295A  3245               	rrcf	??i2_CANsendMessage+3,f,c
 20452  01295C  3244               	rrcf	??i2_CANsendMessage+2,f,c
 20453  01295E  3243               	rrcf	??i2_CANsendMessage+1,f,c
 20454  012960  3242               	rrcf	??i2_CANsendMessage,f,c
 20455  012962                     i2u839_40:
 20456  012962  2EE8               	decfsz	wreg,f,c
 20457  012964  D7F9               	goto	i2u839_45
 20458  012966  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20459  01296A  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20460  01296E  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20461  012972  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20462                           
 20463                           ; BSR set to: 15
 20464                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 20465  012976  5046               	movf	i2CANsendMessage@tamp,w,c
 20466  012978  6E46               	movwf	i2CANsendMessage@tamp,c
 20467  01297A  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20468  01297C  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20469  01297E  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20470                           
 20471                           ; BSR set to: 15
 20472                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 20473  012980  C046  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20474                           
 20475                           ;inc\CANlib.h: 483: }
 20476  012984  D04E               	goto	i2l6934
 20477  012986                     i2l415:
 20478                           
 20479                           ; BSR set to: 15
 20480                           ;inc\CANlib.h: 485: else
 20481                           ;inc\CANlib.h: 487: {
 20482                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 20483  012986  010F               	movlb	15	; () banked
 20484  012988  9722               	bcf	34,3,b	;volatile
 20485                           
 20486                           ; BSR set to: 15
 20487                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 20488  01298A  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20489  01298E  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20490  012992  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20491  012996  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20492  01299A  0E04               	movlw	4
 20493  01299C  D005               	goto	i2u840_40
 20494  01299E                     i2u840_45:
 20495  01299E  90D8               	bcf	status,0,c
 20496  0129A0  3245               	rrcf	??i2_CANsendMessage+3,f,c
 20497  0129A2  3244               	rrcf	??i2_CANsendMessage+2,f,c
 20498  0129A4  3243               	rrcf	??i2_CANsendMessage+1,f,c
 20499  0129A6  3242               	rrcf	??i2_CANsendMessage,f,c
 20500  0129A8                     i2u840_40:
 20501  0129A8  2EE8               	decfsz	wreg,f,c
 20502  0129AA  D7F9               	goto	i2u840_45
 20503  0129AC  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20504  0129B0  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20505  0129B4  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20506  0129B8  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20507                           
 20508                           ; BSR set to: 15
 20509                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 20510  0129BC  5046               	movf	i2CANsendMessage@tamp,w,c
 20511  0129BE  6E46               	movwf	i2CANsendMessage@tamp,c
 20512  0129C0  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20513  0129C2  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20514  0129C4  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20515                           
 20516                           ; BSR set to: 15
 20517                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 20518  0129C6  C046  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20519                           
 20520                           ; BSR set to: 15
 20521                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 20522  0129CA  0E07               	movlw	7
 20523  0129CC  143A               	andwf	i2CANsendMessage@identifier,w,c
 20524  0129CE  6E46               	movwf	i2CANsendMessage@tamp,c
 20525  0129D0  0E00               	movlw	0
 20526  0129D2  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 20527  0129D4  6E47               	movwf	i2CANsendMessage@tamp+1,c
 20528  0129D6  0E00               	movlw	0
 20529  0129D8  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 20530  0129DA  6E48               	movwf	i2CANsendMessage@tamp+2,c
 20531  0129DC  0E00               	movlw	0
 20532  0129DE  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 20533  0129E0  6E49               	movwf	i2CANsendMessage@tamp+3,c
 20534                           
 20535                           ; BSR set to: 15
 20536                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 20537  0129E2  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20538  0129E6  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20539  0129EA  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20540  0129EE  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20541  0129F2  0E05               	movlw	5
 20542  0129F4                     i2u841_45:
 20543  0129F4  90D8               	bcf	status,0,c
 20544  0129F6  3642               	rlcf	??i2_CANsendMessage,f,c
 20545  0129F8  3643               	rlcf	??i2_CANsendMessage+1,f,c
 20546  0129FA  3644               	rlcf	??i2_CANsendMessage+2,f,c
 20547  0129FC  3645               	rlcf	??i2_CANsendMessage+3,f,c
 20548  0129FE  2EE8               	decfsz	wreg,f,c
 20549  012A00  D7F9               	goto	i2u841_45
 20550  012A02  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20551  012A06  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20552  012A0A  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20553  012A0E  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20554                           
 20555                           ; BSR set to: 15
 20556                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 20557  012A12  010F               	movlb	15	; () banked
 20558  012A14  5122               	movf	34,w,b	;volatile
 20559  012A16  0B1F               	andlw	31
 20560  012A18  010F               	movlb	15	; () banked
 20561  012A1A  6F22               	movwf	34,b	;volatile
 20562                           
 20563                           ; BSR set to: 15
 20564                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 20565  012A1C  C046  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 20566  012A20  D000               	goto	i2l6934
 20567  012A22                     i2l6934:
 20568                           
 20569                           ; BSR set to: 15
 20570                           ;inc\CANlib.h: 498: }
 20571                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 20572  012A22  A041               	btfss	i2CANsendMessage@flags,0,c
 20573  012A24  D003               	goto	i2l422
 20574                           
 20575                           ; BSR set to: 15
 20576                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 20577  012A26  010F               	movlb	15	; () banked
 20578  012A28  8120               	bsf	32,0,b	;volatile
 20579  012A2A  D002               	goto	i2l423
 20580  012A2C                     i2l422:
 20581                           
 20582                           ; BSR set to: 15
 20583                           ;inc\CANlib.h: 502: else
 20584                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 20585  012A2C  010F               	movlb	15	; () banked
 20586  012A2E  9120               	bcf	32,0,b	;volatile
 20587  012A30                     i2l423:
 20588                           
 20589                           ; BSR set to: 15
 20590                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 20591  012A30  A241               	btfss	i2CANsendMessage@flags,1,c
 20592  012A32  D003               	goto	i2l424
 20593                           
 20594                           ; BSR set to: 15
 20595                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 20596  012A34  010F               	movlb	15	; () banked
 20597  012A36  8320               	bsf	32,1,b	;volatile
 20598  012A38  D003               	goto	i2l6940
 20599  012A3A                     i2l424:
 20600                           
 20601                           ; BSR set to: 15
 20602                           ;inc\CANlib.h: 506: else
 20603                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 20604  012A3A  010F               	movlb	15	; () banked
 20605  012A3C  9320               	bcf	32,1,b	;volatile
 20606  012A3E  D000               	goto	i2l6940
 20607  012A40                     i2l6940:
 20608                           
 20609                           ; BSR set to: 15
 20610                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 20611  012A40  C03E  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20612  012A44  C03F  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20613  012A48  50DF               	movf	indf2,w,c
 20614  012A4A  010F               	movlb	15	; () banked
 20615  012A4C  6F26               	movwf	38,b	;volatile
 20616                           
 20617                           ; BSR set to: 15
 20618                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 20619  012A4E  EE20 F001          	lfsr	2,1
 20620  012A52  503E               	movf	i2CANsendMessage@data,w,c
 20621  012A54  26D9               	addwf	fsr2l,f,c
 20622  012A56  503F               	movf	i2CANsendMessage@data+1,w,c
 20623  012A58  22DA               	addwfc	fsr2h,f,c
 20624  012A5A  50DF               	movf	indf2,w,c
 20625  012A5C  010F               	movlb	15	; () banked
 20626  012A5E  6F27               	movwf	39,b	;volatile
 20627                           
 20628                           ; BSR set to: 15
 20629                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 20630  012A60  EE20 F002          	lfsr	2,2
 20631  012A64  503E               	movf	i2CANsendMessage@data,w,c
 20632  012A66  26D9               	addwf	fsr2l,f,c
 20633  012A68  503F               	movf	i2CANsendMessage@data+1,w,c
 20634  012A6A  22DA               	addwfc	fsr2h,f,c
 20635  012A6C  50DF               	movf	indf2,w,c
 20636  012A6E  010F               	movlb	15	; () banked
 20637  012A70  6F28               	movwf	40,b	;volatile
 20638                           
 20639                           ; BSR set to: 15
 20640                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 20641  012A72  EE20 F003          	lfsr	2,3
 20642  012A76  503E               	movf	i2CANsendMessage@data,w,c
 20643  012A78  26D9               	addwf	fsr2l,f,c
 20644  012A7A  503F               	movf	i2CANsendMessage@data+1,w,c
 20645  012A7C  22DA               	addwfc	fsr2h,f,c
 20646  012A7E  50DF               	movf	indf2,w,c
 20647  012A80  010F               	movlb	15	; () banked
 20648  012A82  6F29               	movwf	41,b	;volatile
 20649                           
 20650                           ; BSR set to: 15
 20651                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 20652  012A84  EE20 F004          	lfsr	2,4
 20653  012A88  503E               	movf	i2CANsendMessage@data,w,c
 20654  012A8A  26D9               	addwf	fsr2l,f,c
 20655  012A8C  503F               	movf	i2CANsendMessage@data+1,w,c
 20656  012A8E  22DA               	addwfc	fsr2h,f,c
 20657  012A90  50DF               	movf	indf2,w,c
 20658  012A92  010F               	movlb	15	; () banked
 20659  012A94  6F2A               	movwf	42,b	;volatile
 20660                           
 20661                           ; BSR set to: 15
 20662                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 20663  012A96  EE20 F005          	lfsr	2,5
 20664  012A9A  503E               	movf	i2CANsendMessage@data,w,c
 20665  012A9C  26D9               	addwf	fsr2l,f,c
 20666  012A9E  503F               	movf	i2CANsendMessage@data+1,w,c
 20667  012AA0  22DA               	addwfc	fsr2h,f,c
 20668  012AA2  50DF               	movf	indf2,w,c
 20669  012AA4  010F               	movlb	15	; () banked
 20670  012AA6  6F2B               	movwf	43,b	;volatile
 20671                           
 20672                           ; BSR set to: 15
 20673                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 20674  012AA8  EE20 F006          	lfsr	2,6
 20675  012AAC  503E               	movf	i2CANsendMessage@data,w,c
 20676  012AAE  26D9               	addwf	fsr2l,f,c
 20677  012AB0  503F               	movf	i2CANsendMessage@data+1,w,c
 20678  012AB2  22DA               	addwfc	fsr2h,f,c
 20679  012AB4  50DF               	movf	indf2,w,c
 20680  012AB6  010F               	movlb	15	; () banked
 20681  012AB8  6F2C               	movwf	44,b	;volatile
 20682                           
 20683                           ; BSR set to: 15
 20684                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 20685  012ABA  EE20 F007          	lfsr	2,7
 20686  012ABE  503E               	movf	i2CANsendMessage@data,w,c
 20687  012AC0  26D9               	addwf	fsr2l,f,c
 20688  012AC2  503F               	movf	i2CANsendMessage@data+1,w,c
 20689  012AC4  22DA               	addwfc	fsr2h,f,c
 20690  012AC6  50DF               	movf	indf2,w,c
 20691  012AC8  010F               	movlb	15	; () banked
 20692  012ACA  6F2D               	movwf	45,b	;volatile
 20693                           
 20694                           ; BSR set to: 15
 20695                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 20696  012ACC  010F               	movlb	15	; () banked
 20697  012ACE  8720               	bsf	32,3,b	;volatile
 20698                           
 20699                           ; BSR set to: 15
 20700                           ;inc\CANlib.h: 520: return;
 20701  012AD0  0012               	return	
 20702                           
 20703                           ; BSR set to: 15
 20704                           
 20705                           ; BSR set to: 15
 20706  012AD2  0012               	return		;funcret
 20707  012AD4                     __end_ofi2_CANsendMessage:
 20708                           	opt stack 0
 20709                           pclatu	equ	0xFFB
 20710                           pclath	equ	0xFFA
 20711                           tblptru	equ	0xFF8
 20712                           tblptrh	equ	0xFF7
 20713                           tblptrl	equ	0xFF6
 20714                           tablat	equ	0xFF5
 20715                           prodh	equ	0xFF4
 20716                           prodl	equ	0xFF3
 20717                           intcon	equ	0xFF2
 20718                           postinc0	equ	0xFEE
 20719                           fsr0h	equ	0xFEA
 20720                           fsr0l	equ	0xFE9
 20721                           wreg	equ	0xFE8
 20722                           indf1	equ	0xFE7
 20723                           plusw1	equ	0xFE3
 20724                           fsr1h	equ	0xFE2
 20725                           fsr1l	equ	0xFE1
 20726                           bsr	equ	0xFE0
 20727                           indf2	equ	0xFDF
 20728                           postinc2	equ	0xFDE
 20729                           plusw2	equ	0xFDB
 20730                           fsr2h	equ	0xFDA
 20731                           fsr2l	equ	0xFD9
 20732                           status	equ	0xFD8
 20733                           
 20734 ;; *************** function i2_CANisTxReady *****************
 20735 ;; Defined at:
 20736 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 20737 ;; Parameters:    Size  Location     Type
 20738 ;;		None
 20739 ;; Auto vars:     Size  Location     Type
 20740 ;;		None
 20741 ;; Return value:  Size  Location     Type
 20742 ;;                  1    wreg      unsigned char 
 20743 ;; Registers used:
 20744 ;;		wreg, status,2
 20745 ;; Tracked objects:
 20746 ;;		On entry : 0/0
 20747 ;;		On exit  : 0/0
 20748 ;;		Unchanged: 0/0
 20749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20754 ;;Total ram usage:        1 bytes
 20755 ;; Hardware stack levels used:    1
 20756 ;; This function calls:
 20757 ;;		Nothing
 20758 ;; This function is called by:
 20759 ;;		_ISR_alta
 20760 ;; This function uses a non-reentrant model
 20761 ;;
 20762                           
 20763                           	psect	text63
 20764  015FAC                     __ptext63:
 20765                           	opt stack 0
 20766  015FAC                     i2_CANisTxReady:
 20767                           	opt stack 20
 20768                           
 20769                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 20770                           
 20771                           ; BSR set to: 15
 20772                           ;incstack = 0
 20773  015FAC  0E01               	movlw	1
 20774  015FAE  6E3A               	movwf	i2_CANisTxReady$3251,c
 20775  015FB0  010F               	movlb	15	; () banked
 20776  015FB2  A740               	btfss	64,3,b	;volatile
 20777  015FB4  D008               	goto	i2l576
 20778                           
 20779                           ; BSR set to: 15
 20780  015FB6  010F               	movlb	15	; () banked
 20781  015FB8  A730               	btfss	48,3,b	;volatile
 20782  015FBA  D005               	goto	i2l576
 20783                           
 20784                           ; BSR set to: 15
 20785  015FBC  010F               	movlb	15	; () banked
 20786  015FBE  A720               	btfss	32,3,b	;volatile
 20787  015FC0  D002               	goto	i2l576
 20788                           
 20789                           ; BSR set to: 15
 20790  015FC2  0E00               	movlw	0
 20791  015FC4  6E3A               	movwf	i2_CANisTxReady$3251,c
 20792  015FC6                     i2l576:
 20793                           
 20794                           ; BSR set to: 15
 20795  015FC6  503A               	movf	i2_CANisTxReady$3251,w,c
 20796  015FC8  0012               	return	
 20797                           
 20798                           ; BSR set to: 15
 20799                           
 20800                           ; BSR set to: 15
 20801  015FCA  0012               	return		;funcret
 20802  015FCC                     __end_ofi2_CANisTxReady:
 20803                           	opt stack 0
 20804                           pclatu	equ	0xFFB
 20805                           pclath	equ	0xFFA
 20806                           tblptru	equ	0xFF8
 20807                           tblptrh	equ	0xFF7
 20808                           tblptrl	equ	0xFF6
 20809                           tablat	equ	0xFF5
 20810                           prodh	equ	0xFF4
 20811                           prodl	equ	0xFF3
 20812                           intcon	equ	0xFF2
 20813                           postinc0	equ	0xFEE
 20814                           fsr0h	equ	0xFEA
 20815                           fsr0l	equ	0xFE9
 20816                           wreg	equ	0xFE8
 20817                           indf1	equ	0xFE7
 20818                           plusw1	equ	0xFE3
 20819                           fsr1h	equ	0xFE2
 20820                           fsr1l	equ	0xFE1
 20821                           bsr	equ	0xFE0
 20822                           indf2	equ	0xFDF
 20823                           postinc2	equ	0xFDE
 20824                           plusw2	equ	0xFDB
 20825                           fsr2h	equ	0xFDA
 20826                           fsr2l	equ	0xFD9
 20827                           status	equ	0xFD8
 20828                           
 20829 ;; *************** function _CANreceiveMessage *****************
 20830 ;; Defined at:
 20831 ;;		line 528 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 20832 ;; Parameters:    Size  Location     Type
 20833 ;;  msg             2   17[COMRAM] PTR struct .
 20834 ;;		 -> msg(15), 
 20835 ;; Auto vars:     Size  Location     Type
 20836 ;;  tamp            1   28[COMRAM] unsigned char 
 20837 ;;  error           1   27[COMRAM] unsigned char 
 20838 ;; Return value:  Size  Location     Type
 20839 ;;                  1    wreg      unsigned char 
 20840 ;; Registers used:
 20841 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20842 ;; Tracked objects:
 20843 ;;		On entry : 0/0
 20844 ;;		On exit  : 0/0
 20845 ;;		Unchanged: 0/0
 20846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20847 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20849 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20850 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20851 ;;Total ram usage:       12 bytes
 20852 ;; Hardware stack levels used:    1
 20853 ;; This function calls:
 20854 ;;		Nothing
 20855 ;; This function is called by:
 20856 ;;		_ISR_alta
 20857 ;; This function uses a non-reentrant model
 20858 ;;
 20859                           
 20860                           	psect	text64
 20861  012AD4                     __ptext64:
 20862                           	opt stack 0
 20863  012AD4                     _CANreceiveMessage:
 20864                           	opt stack 20
 20865                           
 20866                           ;inc\CANlib.h: 530: BYTE tamp;
 20867                           ;inc\CANlib.h: 531: BYTE error = 0;
 20868                           
 20869                           ; BSR set to: 15
 20870                           ;incstack = 0
 20871  012AD4  0E00               	movlw	0
 20872  012AD6  6E44               	movwf	CANreceiveMessage@error,c
 20873                           
 20874                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 20875  012AD8  AE74               	btfss	3956,7,c	;volatile
 20876  012ADA  D002               	goto	i2l6308
 20877                           
 20878                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 20879  012ADC  8044               	bsf	CANreceiveMessage@error,0,c
 20880  012ADE  D000               	goto	i2l6308
 20881  012AE0                     i2l6308:
 20882                           
 20883                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 20884  012AE0  AC74               	btfss	3956,6,c	;volatile
 20885  012AE2  D002               	goto	i2l6312
 20886                           
 20887                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 20888  012AE4  8244               	bsf	CANreceiveMessage@error,1,c
 20889  012AE6  D000               	goto	i2l6312
 20890  012AE8                     i2l6312:
 20891                           
 20892                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 20893  012AE8  010F               	movlb	15	; () banked
 20894  012AEA  AF50               	btfss	80,7,b	;volatile
 20895  012AEC  D149               	goto	i2l430
 20896                           
 20897                           ; BSR set to: 15
 20898                           ;inc\CANlib.h: 541: {
 20899                           ;inc\CANlib.h: 542: msg->identifier = 0;
 20900  012AEE  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20901  012AF2  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20902  012AF6  6ADE               	clrf	postinc2,c
 20903  012AF8  6ADE               	clrf	postinc2,c
 20904  012AFA  6ADE               	clrf	postinc2,c
 20905  012AFC  6ADD               	clrf	postdec2,c
 20906                           
 20907                           ; BSR set to: 15
 20908                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 20909  012AFE  EE20 F004          	lfsr	2,4
 20910  012B02  503A               	movf	CANreceiveMessage@msg,w,c
 20911  012B04  26D9               	addwf	fsr2l,f,c
 20912  012B06  503B               	movf	CANreceiveMessage@msg+1,w,c
 20913  012B08  22DA               	addwfc	fsr2h,f,c
 20914  012B0A  CF56 FFDF          	movff	3926,indf2	;volatile
 20915                           
 20916                           ; BSR set to: 15
 20917                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 20918  012B0E  EE20 F005          	lfsr	2,5
 20919  012B12  503A               	movf	CANreceiveMessage@msg,w,c
 20920  012B14  26D9               	addwf	fsr2l,f,c
 20921  012B16  503B               	movf	CANreceiveMessage@msg+1,w,c
 20922  012B18  22DA               	addwfc	fsr2h,f,c
 20923  012B1A  CF57 FFDF          	movff	3927,indf2	;volatile
 20924                           
 20925                           ; BSR set to: 15
 20926                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 20927  012B1E  EE20 F006          	lfsr	2,6
 20928  012B22  503A               	movf	CANreceiveMessage@msg,w,c
 20929  012B24  26D9               	addwf	fsr2l,f,c
 20930  012B26  503B               	movf	CANreceiveMessage@msg+1,w,c
 20931  012B28  22DA               	addwfc	fsr2h,f,c
 20932  012B2A  CF58 FFDF          	movff	3928,indf2	;volatile
 20933                           
 20934                           ; BSR set to: 15
 20935                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 20936  012B2E  EE20 F007          	lfsr	2,7
 20937  012B32  503A               	movf	CANreceiveMessage@msg,w,c
 20938  012B34  26D9               	addwf	fsr2l,f,c
 20939  012B36  503B               	movf	CANreceiveMessage@msg+1,w,c
 20940  012B38  22DA               	addwfc	fsr2h,f,c
 20941  012B3A  CF59 FFDF          	movff	3929,indf2	;volatile
 20942                           
 20943                           ; BSR set to: 15
 20944                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 20945  012B3E  EE20 F008          	lfsr	2,8
 20946  012B42  503A               	movf	CANreceiveMessage@msg,w,c
 20947  012B44  26D9               	addwf	fsr2l,f,c
 20948  012B46  503B               	movf	CANreceiveMessage@msg+1,w,c
 20949  012B48  22DA               	addwfc	fsr2h,f,c
 20950  012B4A  CF5A FFDF          	movff	3930,indf2	;volatile
 20951                           
 20952                           ; BSR set to: 15
 20953                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 20954  012B4E  EE20 F009          	lfsr	2,9
 20955  012B52  503A               	movf	CANreceiveMessage@msg,w,c
 20956  012B54  26D9               	addwf	fsr2l,f,c
 20957  012B56  503B               	movf	CANreceiveMessage@msg+1,w,c
 20958  012B58  22DA               	addwfc	fsr2h,f,c
 20959  012B5A  CF5B FFDF          	movff	3931,indf2	;volatile
 20960                           
 20961                           ; BSR set to: 15
 20962                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 20963  012B5E  EE20 F00A          	lfsr	2,10
 20964  012B62  503A               	movf	CANreceiveMessage@msg,w,c
 20965  012B64  26D9               	addwf	fsr2l,f,c
 20966  012B66  503B               	movf	CANreceiveMessage@msg+1,w,c
 20967  012B68  22DA               	addwfc	fsr2h,f,c
 20968  012B6A  CF5C FFDF          	movff	3932,indf2	;volatile
 20969                           
 20970                           ; BSR set to: 15
 20971                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 20972  012B6E  EE20 F00B          	lfsr	2,11
 20973  012B72  503A               	movf	CANreceiveMessage@msg,w,c
 20974  012B74  26D9               	addwf	fsr2l,f,c
 20975  012B76  503B               	movf	CANreceiveMessage@msg+1,w,c
 20976  012B78  22DA               	addwfc	fsr2h,f,c
 20977  012B7A  CF5D FFDF          	movff	3933,indf2	;volatile
 20978                           
 20979                           ; BSR set to: 15
 20980                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 20981  012B7E  EE20 F00E          	lfsr	2,14
 20982  012B82  503A               	movf	CANreceiveMessage@msg,w,c
 20983  012B84  26D9               	addwf	fsr2l,f,c
 20984  012B86  503B               	movf	CANreceiveMessage@msg+1,w,c
 20985  012B88  22DA               	addwfc	fsr2h,f,c
 20986  012B8A  010F               	movlb	15	; () banked
 20987  012B8C  AD55               	btfss	85,6,b	;volatile
 20988  012B8E  D002               	goto	i2u754_40
 20989  012B90  0E01               	movlw	1
 20990  012B92  D001               	goto	i2u754_46
 20991  012B94                     i2u754_40:
 20992  012B94  0E00               	movlw	0
 20993  012B96                     i2u754_46:
 20994  012B96  6EDF               	movwf	indf2,c
 20995                           
 20996                           ; BSR set to: 15
 20997                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 20998  012B98  EE20 F00D          	lfsr	2,13
 20999  012B9C  503A               	movf	CANreceiveMessage@msg,w,c
 21000  012B9E  26D9               	addwf	fsr2l,f,c
 21001  012BA0  503B               	movf	CANreceiveMessage@msg+1,w,c
 21002  012BA2  22DA               	addwfc	fsr2h,f,c
 21003  012BA4  010F               	movlb	15	; () banked
 21004  012BA6  5155               	movf	85,w,b	;volatile
 21005  012BA8  0B0F               	andlw	15
 21006  012BAA  6EDF               	movwf	indf2,c
 21007                           
 21008                           ; BSR set to: 15
 21009                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 21010  012BAC  EE20 F00C          	lfsr	2,12
 21011  012BB0  503A               	movf	CANreceiveMessage@msg,w,c
 21012  012BB2  26D9               	addwf	fsr2l,f,c
 21013  012BB4  503B               	movf	CANreceiveMessage@msg+1,w,c
 21014  012BB6  22DA               	addwfc	fsr2h,f,c
 21015  012BB8  010F               	movlb	15	; () banked
 21016  012BBA  A752               	btfss	82,3,b	;volatile
 21017  012BBC  D002               	goto	i2u755_40
 21018  012BBE  0E01               	movlw	1
 21019  012BC0  D001               	goto	i2u755_46
 21020  012BC2                     i2u755_40:
 21021  012BC2  0E00               	movlw	0
 21022  012BC4                     i2u755_46:
 21023  012BC4  6EDF               	movwf	indf2,c
 21024                           
 21025                           ; BSR set to: 15
 21026                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 21027  012BC6  010F               	movlb	15	; () banked
 21028  012BC8  B752               	btfsc	82,3,b	;volatile
 21029  012BCA  D044               	goto	i2l6346
 21030                           
 21031                           ; BSR set to: 15
 21032                           ;inc\CANlib.h: 559: {
 21033                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 21034  012BCC  CF51 F03C          	movff	3921,??_CANreceiveMessage	;volatile
 21035  012BD0  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21036  012BD2  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21037  012BD4  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21038  012BD6  0E03               	movlw	3
 21039  012BD8                     i2u757_45:
 21040  012BD8  90D8               	bcf	status,0,c
 21041  012BDA  363C               	rlcf	??_CANreceiveMessage,f,c
 21042  012BDC  363D               	rlcf	??_CANreceiveMessage+1,f,c
 21043  012BDE  363E               	rlcf	??_CANreceiveMessage+2,f,c
 21044  012BE0  363F               	rlcf	??_CANreceiveMessage+3,f,c
 21045  012BE2  2EE8               	decfsz	wreg,f,c
 21046  012BE4  D7F9               	goto	i2u757_45
 21047  012BE6  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21048  012BEA  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21049  012BEE  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 21050  012BF2  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21051  012BF6  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21052  012BFA  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21053                           
 21054                           ; BSR set to: 15
 21055                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 21056  012BFE  010F               	movlb	15	; () banked
 21057  012C00  3952               	swapf	82,w,b	;volatile
 21058  012C02  42E8               	rrncf	wreg,f,c
 21059  012C04  0B07               	andlw	7
 21060  012C06  0B07               	andlw	7
 21061  012C08  6E45               	movwf	CANreceiveMessage@tamp,c
 21062                           
 21063                           ; BSR set to: 15
 21064                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 21065  012C0A  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21066  012C0E  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21067  012C12  CFDE F03C          	movff	postinc2,??_CANreceiveMessage
 21068  012C16  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+1
 21069  012C1A  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+2
 21070  012C1E  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+3
 21071  012C22  5045               	movf	CANreceiveMessage@tamp,w,c
 21072  012C24  243C               	addwf	??_CANreceiveMessage,w,c
 21073  012C26  6E40               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 21074  012C28  0E00               	movlw	0
 21075  012C2A  203D               	addwfc	??_CANreceiveMessage+1,w,c
 21076  012C2C  6E41               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 21077  012C2E  0E00               	movlw	0
 21078  012C30  203E               	addwfc	??_CANreceiveMessage+2,w,c
 21079  012C32  6E42               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 21080  012C34  0E00               	movlw	0
 21081  012C36  203F               	addwfc	??_CANreceiveMessage+3,w,c
 21082  012C38  6E43               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 21083  012C3A  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21084  012C3E  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21085  012C42  C040  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 21086  012C46  C041  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 21087  012C4A  C042  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 21088  012C4E  C043  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 21089                           
 21090                           ;inc\CANlib.h: 563: }
 21091  012C52  D093               	goto	i2l6372
 21092  012C54                     i2l6346:
 21093                           
 21094                           ; BSR set to: 15
 21095                           ;inc\CANlib.h: 564: else
 21096                           ;inc\CANlib.h: 565: {
 21097                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 21098  012C54  CF54 F03C          	movff	3924,??_CANreceiveMessage	;volatile
 21099  012C58  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21100  012C5A  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21101  012C5C  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21102  012C5E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21103  012C62  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21104  012C66  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 21105  012C6A  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21106  012C6E  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21107  012C72  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21108                           
 21109                           ; BSR set to: 15
 21110                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 21111  012C76  CF53 F03C          	movff	3923,??_CANreceiveMessage	;volatile
 21112  012C7A  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21113  012C7C  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21114  012C7E  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21115  012C80  C03E  F03F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 21116  012C84  C03D  F03E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 21117  012C88  C03C  F03D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 21118  012C8C  6A3C               	clrf	??_CANreceiveMessage,c
 21119  012C8E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21120  012C92  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21121  012C96  503C               	movf	??_CANreceiveMessage,w,c
 21122  012C98  26DE               	addwf	postinc2,f,c
 21123  012C9A  503D               	movf	??_CANreceiveMessage+1,w,c
 21124  012C9C  22DE               	addwfc	postinc2,f,c
 21125  012C9E  503E               	movf	??_CANreceiveMessage+2,w,c
 21126  012CA0  22DE               	addwfc	postinc2,f,c
 21127  012CA2  503F               	movf	??_CANreceiveMessage+3,w,c
 21128  012CA4  22DE               	addwfc	postinc2,f,c
 21129                           
 21130                           ; BSR set to: 15
 21131                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 21132  012CA6  010F               	movlb	15	; () banked
 21133  012CA8  A152               	btfss	82,0,b	;volatile
 21134  012CAA  D00D               	goto	i2l6354
 21135                           
 21136                           ; BSR set to: 15
 21137                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 21138  012CAC  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21139  012CB0  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21140  012CB4  0E00               	movlw	0
 21141  012CB6  12DE               	iorwf	postinc2,f,c
 21142  012CB8  0E00               	movlw	0
 21143  012CBA  12DE               	iorwf	postinc2,f,c
 21144  012CBC  0E01               	movlw	1
 21145  012CBE  12DE               	iorwf	postinc2,f,c
 21146  012CC0  0E00               	movlw	0
 21147  012CC2  12DE               	iorwf	postinc2,f,c
 21148  012CC4  D000               	goto	i2l6354
 21149  012CC6                     i2l6354:
 21150                           
 21151                           ; BSR set to: 15
 21152                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 21153  012CC6  010F               	movlb	15	; () banked
 21154  012CC8  A352               	btfss	82,1,b	;volatile
 21155  012CCA  D00D               	goto	i2l6358
 21156                           
 21157                           ; BSR set to: 15
 21158                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 21159  012CCC  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21160  012CD0  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21161  012CD4  0E00               	movlw	0
 21162  012CD6  12DE               	iorwf	postinc2,f,c
 21163  012CD8  0E00               	movlw	0
 21164  012CDA  12DE               	iorwf	postinc2,f,c
 21165  012CDC  0E02               	movlw	2
 21166  012CDE  12DE               	iorwf	postinc2,f,c
 21167  012CE0  0E00               	movlw	0
 21168  012CE2  12DE               	iorwf	postinc2,f,c
 21169  012CE4  D000               	goto	i2l6358
 21170  012CE6                     i2l6358:
 21171                           
 21172                           ; BSR set to: 15
 21173                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 21174  012CE6  010F               	movlb	15	; () banked
 21175  012CE8  AB52               	btfss	82,5,b	;volatile
 21176  012CEA  D00D               	goto	i2l6362
 21177                           
 21178                           ; BSR set to: 15
 21179                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 21180  012CEC  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21181  012CF0  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21182  012CF4  0E00               	movlw	0
 21183  012CF6  12DE               	iorwf	postinc2,f,c
 21184  012CF8  0E00               	movlw	0
 21185  012CFA  12DE               	iorwf	postinc2,f,c
 21186  012CFC  0E04               	movlw	4
 21187  012CFE  12DE               	iorwf	postinc2,f,c
 21188  012D00  0E00               	movlw	0
 21189  012D02  12DE               	iorwf	postinc2,f,c
 21190  012D04  D000               	goto	i2l6362
 21191  012D06                     i2l6362:
 21192                           
 21193                           ; BSR set to: 15
 21194                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 21195  012D06  010F               	movlb	15	; () banked
 21196  012D08  AD52               	btfss	82,6,b	;volatile
 21197  012D0A  D00D               	goto	i2l6366
 21198                           
 21199                           ; BSR set to: 15
 21200                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 21201  012D0C  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21202  012D10  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21203  012D14  0E00               	movlw	0
 21204  012D16  12DE               	iorwf	postinc2,f,c
 21205  012D18  0E00               	movlw	0
 21206  012D1A  12DE               	iorwf	postinc2,f,c
 21207  012D1C  0E08               	movlw	8
 21208  012D1E  12DE               	iorwf	postinc2,f,c
 21209  012D20  0E00               	movlw	0
 21210  012D22  12DE               	iorwf	postinc2,f,c
 21211  012D24  D000               	goto	i2l6366
 21212  012D26                     i2l6366:
 21213                           
 21214                           ; BSR set to: 15
 21215                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 21216  012D26  010F               	movlb	15	; () banked
 21217  012D28  AF52               	btfss	82,7,b	;volatile
 21218  012D2A  D00D               	goto	i2l6370
 21219                           
 21220                           ; BSR set to: 15
 21221                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 21222  012D2C  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21223  012D30  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21224  012D34  0E00               	movlw	0
 21225  012D36  12DE               	iorwf	postinc2,f,c
 21226  012D38  0E00               	movlw	0
 21227  012D3A  12DE               	iorwf	postinc2,f,c
 21228  012D3C  0E10               	movlw	16
 21229  012D3E  12DE               	iorwf	postinc2,f,c
 21230  012D40  0E00               	movlw	0
 21231  012D42  12DE               	iorwf	postinc2,f,c
 21232  012D44  D000               	goto	i2l6370
 21233  012D46                     i2l6370:
 21234                           
 21235                           ; BSR set to: 15
 21236                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 21237  012D46  CF51 F03C          	movff	3921,??_CANreceiveMessage	;volatile
 21238  012D4A  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21239  012D4C  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21240  012D4E  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21241  012D50  0E15               	movlw	21
 21242  012D52                     i2u763_45:
 21243  012D52  90D8               	bcf	status,0,c
 21244  012D54  363C               	rlcf	??_CANreceiveMessage,f,c
 21245  012D56  363D               	rlcf	??_CANreceiveMessage+1,f,c
 21246  012D58  363E               	rlcf	??_CANreceiveMessage+2,f,c
 21247  012D5A  363F               	rlcf	??_CANreceiveMessage+3,f,c
 21248  012D5C  2EE8               	decfsz	wreg,f,c
 21249  012D5E  D7F9               	goto	i2u763_45
 21250  012D60  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21251  012D64  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21252  012D68  503C               	movf	??_CANreceiveMessage,w,c
 21253  012D6A  12DE               	iorwf	postinc2,f,c
 21254  012D6C  503D               	movf	??_CANreceiveMessage+1,w,c
 21255  012D6E  12DE               	iorwf	postinc2,f,c
 21256  012D70  503E               	movf	??_CANreceiveMessage+2,w,c
 21257  012D72  12DE               	iorwf	postinc2,f,c
 21258  012D74  503F               	movf	??_CANreceiveMessage+3,w,c
 21259  012D76  12DE               	iorwf	postinc2,f,c
 21260  012D78  D000               	goto	i2l6372
 21261  012D7A                     i2l6372:
 21262                           
 21263                           ; BSR set to: 15
 21264                           ;inc\CANlib.h: 581: }
 21265                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 21266  012D7A  010F               	movlb	15	; () banked
 21267  012D7C  9F50               	bcf	80,7,b	;volatile
 21268                           
 21269                           ; BSR set to: 15
 21270                           ;inc\CANlib.h: 584: return (error);
 21271                           ;	Return value of _CANreceiveMessage is never used
 21272  012D7E  0012               	return	
 21273  012D80                     i2l430:
 21274                           
 21275                           ; BSR set to: 15
 21276                           ;inc\CANlib.h: 585: }
 21277                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 21278  012D80  AE60               	btfss	3936,7,c	;volatile
 21279  012D82  0012               	return	
 21280                           
 21281                           ; BSR set to: 15
 21282                           ;inc\CANlib.h: 588: {
 21283                           ;inc\CANlib.h: 589: msg->identifier = 0;
 21284  012D84  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21285  012D88  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21286  012D8C  6ADE               	clrf	postinc2,c
 21287  012D8E  6ADE               	clrf	postinc2,c
 21288  012D90  6ADE               	clrf	postinc2,c
 21289  012D92  6ADD               	clrf	postdec2,c
 21290                           
 21291                           ; BSR set to: 15
 21292                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 21293  012D94  EE20 F004          	lfsr	2,4
 21294  012D98  503A               	movf	CANreceiveMessage@msg,w,c
 21295  012D9A  26D9               	addwf	fsr2l,f,c
 21296  012D9C  503B               	movf	CANreceiveMessage@msg+1,w,c
 21297  012D9E  22DA               	addwfc	fsr2h,f,c
 21298  012DA0  CF66 FFDF          	movff	3942,indf2	;volatile
 21299                           
 21300                           ; BSR set to: 15
 21301                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 21302  012DA4  EE20 F005          	lfsr	2,5
 21303  012DA8  503A               	movf	CANreceiveMessage@msg,w,c
 21304  012DAA  26D9               	addwf	fsr2l,f,c
 21305  012DAC  503B               	movf	CANreceiveMessage@msg+1,w,c
 21306  012DAE  22DA               	addwfc	fsr2h,f,c
 21307  012DB0  CF67 FFDF          	movff	3943,indf2	;volatile
 21308                           
 21309                           ; BSR set to: 15
 21310                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 21311  012DB4  EE20 F006          	lfsr	2,6
 21312  012DB8  503A               	movf	CANreceiveMessage@msg,w,c
 21313  012DBA  26D9               	addwf	fsr2l,f,c
 21314  012DBC  503B               	movf	CANreceiveMessage@msg+1,w,c
 21315  012DBE  22DA               	addwfc	fsr2h,f,c
 21316  012DC0  CF68 FFDF          	movff	3944,indf2	;volatile
 21317                           
 21318                           ; BSR set to: 15
 21319                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 21320  012DC4  EE20 F007          	lfsr	2,7
 21321  012DC8  503A               	movf	CANreceiveMessage@msg,w,c
 21322  012DCA  26D9               	addwf	fsr2l,f,c
 21323  012DCC  503B               	movf	CANreceiveMessage@msg+1,w,c
 21324  012DCE  22DA               	addwfc	fsr2h,f,c
 21325  012DD0  CF69 FFDF          	movff	3945,indf2	;volatile
 21326                           
 21327                           ; BSR set to: 15
 21328                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 21329  012DD4  EE20 F008          	lfsr	2,8
 21330  012DD8  503A               	movf	CANreceiveMessage@msg,w,c
 21331  012DDA  26D9               	addwf	fsr2l,f,c
 21332  012DDC  503B               	movf	CANreceiveMessage@msg+1,w,c
 21333  012DDE  22DA               	addwfc	fsr2h,f,c
 21334  012DE0  CF6A FFDF          	movff	3946,indf2	;volatile
 21335                           
 21336                           ; BSR set to: 15
 21337                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 21338  012DE4  EE20 F009          	lfsr	2,9
 21339  012DE8  503A               	movf	CANreceiveMessage@msg,w,c
 21340  012DEA  26D9               	addwf	fsr2l,f,c
 21341  012DEC  503B               	movf	CANreceiveMessage@msg+1,w,c
 21342  012DEE  22DA               	addwfc	fsr2h,f,c
 21343  012DF0  CF6B FFDF          	movff	3947,indf2	;volatile
 21344                           
 21345                           ; BSR set to: 15
 21346                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 21347  012DF4  EE20 F00A          	lfsr	2,10
 21348  012DF8  503A               	movf	CANreceiveMessage@msg,w,c
 21349  012DFA  26D9               	addwf	fsr2l,f,c
 21350  012DFC  503B               	movf	CANreceiveMessage@msg+1,w,c
 21351  012DFE  22DA               	addwfc	fsr2h,f,c
 21352  012E00  CF6C FFDF          	movff	3948,indf2	;volatile
 21353                           
 21354                           ; BSR set to: 15
 21355                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 21356  012E04  EE20 F00B          	lfsr	2,11
 21357  012E08  503A               	movf	CANreceiveMessage@msg,w,c
 21358  012E0A  26D9               	addwf	fsr2l,f,c
 21359  012E0C  503B               	movf	CANreceiveMessage@msg+1,w,c
 21360  012E0E  22DA               	addwfc	fsr2h,f,c
 21361  012E10  CF6D FFDF          	movff	3949,indf2	;volatile
 21362                           
 21363                           ; BSR set to: 15
 21364                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 21365  012E14  EE20 F00E          	lfsr	2,14
 21366  012E18  503A               	movf	CANreceiveMessage@msg,w,c
 21367  012E1A  26D9               	addwf	fsr2l,f,c
 21368  012E1C  503B               	movf	CANreceiveMessage@msg+1,w,c
 21369  012E1E  22DA               	addwfc	fsr2h,f,c
 21370  012E20  AC65               	btfss	3941,6,c	;volatile
 21371  012E22  D002               	goto	i2u765_40
 21372  012E24  0E01               	movlw	1
 21373  012E26  D001               	goto	i2u765_46
 21374  012E28                     i2u765_40:
 21375  012E28  0E00               	movlw	0
 21376  012E2A                     i2u765_46:
 21377  012E2A  6EDF               	movwf	indf2,c
 21378                           
 21379                           ; BSR set to: 15
 21380                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 21381  012E2C  EE20 F00D          	lfsr	2,13
 21382  012E30  503A               	movf	CANreceiveMessage@msg,w,c
 21383  012E32  26D9               	addwf	fsr2l,f,c
 21384  012E34  503B               	movf	CANreceiveMessage@msg+1,w,c
 21385  012E36  22DA               	addwfc	fsr2h,f,c
 21386  012E38  5065               	movf	3941,w,c	;volatile
 21387  012E3A  0B0F               	andlw	15
 21388  012E3C  6EDF               	movwf	indf2,c
 21389                           
 21390                           ; BSR set to: 15
 21391                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 21392  012E3E  EE20 F00C          	lfsr	2,12
 21393  012E42  503A               	movf	CANreceiveMessage@msg,w,c
 21394  012E44  26D9               	addwf	fsr2l,f,c
 21395  012E46  503B               	movf	CANreceiveMessage@msg+1,w,c
 21396  012E48  22DA               	addwfc	fsr2h,f,c
 21397  012E4A  A662               	btfss	3938,3,c	;volatile
 21398  012E4C  D002               	goto	i2u766_40
 21399  012E4E  0E01               	movlw	1
 21400  012E50  D001               	goto	i2u766_46
 21401  012E52                     i2u766_40:
 21402  012E52  0E00               	movlw	0
 21403  012E54                     i2u766_46:
 21404  012E54  6EDF               	movwf	indf2,c
 21405                           
 21406                           ; BSR set to: 15
 21407                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 21408  012E56  B662               	btfsc	3938,3,c	;volatile
 21409  012E58  D043               	goto	i2l6408
 21410                           
 21411                           ; BSR set to: 15
 21412                           ;inc\CANlib.h: 606: {
 21413                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 21414  012E5A  CF61 F03C          	movff	3937,??_CANreceiveMessage	;volatile
 21415  012E5E  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21416  012E60  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21417  012E62  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21418  012E64  0E03               	movlw	3
 21419  012E66                     i2u768_45:
 21420  012E66  90D8               	bcf	status,0,c
 21421  012E68  363C               	rlcf	??_CANreceiveMessage,f,c
 21422  012E6A  363D               	rlcf	??_CANreceiveMessage+1,f,c
 21423  012E6C  363E               	rlcf	??_CANreceiveMessage+2,f,c
 21424  012E6E  363F               	rlcf	??_CANreceiveMessage+3,f,c
 21425  012E70  2EE8               	decfsz	wreg,f,c
 21426  012E72  D7F9               	goto	i2u768_45
 21427  012E74  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21428  012E78  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21429  012E7C  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 21430  012E80  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21431  012E84  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21432  012E88  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21433                           
 21434                           ; BSR set to: 15
 21435                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 21436  012E8C  3862               	swapf	3938,w,c	;volatile
 21437  012E8E  42E8               	rrncf	wreg,f,c
 21438  012E90  0B07               	andlw	7
 21439  012E92  0B07               	andlw	7
 21440  012E94  6E45               	movwf	CANreceiveMessage@tamp,c
 21441                           
 21442                           ; BSR set to: 15
 21443                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 21444  012E96  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21445  012E9A  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21446  012E9E  CFDE F03C          	movff	postinc2,??_CANreceiveMessage
 21447  012EA2  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+1
 21448  012EA6  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+2
 21449  012EAA  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+3
 21450  012EAE  5045               	movf	CANreceiveMessage@tamp,w,c
 21451  012EB0  243C               	addwf	??_CANreceiveMessage,w,c
 21452  012EB2  6E40               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 21453  012EB4  0E00               	movlw	0
 21454  012EB6  203D               	addwfc	??_CANreceiveMessage+1,w,c
 21455  012EB8  6E41               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 21456  012EBA  0E00               	movlw	0
 21457  012EBC  203E               	addwfc	??_CANreceiveMessage+2,w,c
 21458  012EBE  6E42               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 21459  012EC0  0E00               	movlw	0
 21460  012EC2  203F               	addwfc	??_CANreceiveMessage+3,w,c
 21461  012EC4  6E43               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 21462  012EC6  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21463  012ECA  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21464  012ECE  C040  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 21465  012ED2  C041  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 21466  012ED6  C042  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 21467  012EDA  C043  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 21468                           
 21469                           ;inc\CANlib.h: 610: }
 21470  012EDE  D08E               	goto	i2l6434
 21471  012EE0                     i2l6408:
 21472                           
 21473                           ; BSR set to: 15
 21474                           ;inc\CANlib.h: 611: else
 21475                           ;inc\CANlib.h: 612: {
 21476                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 21477  012EE0  CF64 F03C          	movff	3940,??_CANreceiveMessage	;volatile
 21478  012EE4  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21479  012EE6  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21480  012EE8  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21481  012EEA  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21482  012EEE  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21483  012EF2  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 21484  012EF6  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21485  012EFA  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21486  012EFE  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21487                           
 21488                           ; BSR set to: 15
 21489                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 21490  012F02  CF63 F03C          	movff	3939,??_CANreceiveMessage	;volatile
 21491  012F06  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21492  012F08  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21493  012F0A  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21494  012F0C  C03E  F03F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 21495  012F10  C03D  F03E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 21496  012F14  C03C  F03D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 21497  012F18  6A3C               	clrf	??_CANreceiveMessage,c
 21498  012F1A  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21499  012F1E  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21500  012F22  503C               	movf	??_CANreceiveMessage,w,c
 21501  012F24  26DE               	addwf	postinc2,f,c
 21502  012F26  503D               	movf	??_CANreceiveMessage+1,w,c
 21503  012F28  22DE               	addwfc	postinc2,f,c
 21504  012F2A  503E               	movf	??_CANreceiveMessage+2,w,c
 21505  012F2C  22DE               	addwfc	postinc2,f,c
 21506  012F2E  503F               	movf	??_CANreceiveMessage+3,w,c
 21507  012F30  22DE               	addwfc	postinc2,f,c
 21508                           
 21509                           ; BSR set to: 15
 21510                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 21511  012F32  A062               	btfss	3938,0,c	;volatile
 21512  012F34  D00D               	goto	i2l6416
 21513                           
 21514                           ; BSR set to: 15
 21515                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 21516  012F36  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21517  012F3A  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21518  012F3E  0E00               	movlw	0
 21519  012F40  12DE               	iorwf	postinc2,f,c
 21520  012F42  0E00               	movlw	0
 21521  012F44  12DE               	iorwf	postinc2,f,c
 21522  012F46  0E01               	movlw	1
 21523  012F48  12DE               	iorwf	postinc2,f,c
 21524  012F4A  0E00               	movlw	0
 21525  012F4C  12DE               	iorwf	postinc2,f,c
 21526  012F4E  D000               	goto	i2l6416
 21527  012F50                     i2l6416:
 21528                           
 21529                           ; BSR set to: 15
 21530                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 21531  012F50  A262               	btfss	3938,1,c	;volatile
 21532  012F52  D00D               	goto	i2l6420
 21533                           
 21534                           ; BSR set to: 15
 21535                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 21536  012F54  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21537  012F58  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21538  012F5C  0E00               	movlw	0
 21539  012F5E  12DE               	iorwf	postinc2,f,c
 21540  012F60  0E00               	movlw	0
 21541  012F62  12DE               	iorwf	postinc2,f,c
 21542  012F64  0E02               	movlw	2
 21543  012F66  12DE               	iorwf	postinc2,f,c
 21544  012F68  0E00               	movlw	0
 21545  012F6A  12DE               	iorwf	postinc2,f,c
 21546  012F6C  D000               	goto	i2l6420
 21547  012F6E                     i2l6420:
 21548                           
 21549                           ; BSR set to: 15
 21550                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 21551  012F6E  AA62               	btfss	3938,5,c	;volatile
 21552  012F70  D00D               	goto	i2l6424
 21553                           
 21554                           ; BSR set to: 15
 21555                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 21556  012F72  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21557  012F76  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21558  012F7A  0E00               	movlw	0
 21559  012F7C  12DE               	iorwf	postinc2,f,c
 21560  012F7E  0E00               	movlw	0
 21561  012F80  12DE               	iorwf	postinc2,f,c
 21562  012F82  0E04               	movlw	4
 21563  012F84  12DE               	iorwf	postinc2,f,c
 21564  012F86  0E00               	movlw	0
 21565  012F88  12DE               	iorwf	postinc2,f,c
 21566  012F8A  D000               	goto	i2l6424
 21567  012F8C                     i2l6424:
 21568                           
 21569                           ; BSR set to: 15
 21570                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 21571  012F8C  AC62               	btfss	3938,6,c	;volatile
 21572  012F8E  D00D               	goto	i2l6428
 21573                           
 21574                           ; BSR set to: 15
 21575                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 21576  012F90  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21577  012F94  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21578  012F98  0E00               	movlw	0
 21579  012F9A  12DE               	iorwf	postinc2,f,c
 21580  012F9C  0E00               	movlw	0
 21581  012F9E  12DE               	iorwf	postinc2,f,c
 21582  012FA0  0E08               	movlw	8
 21583  012FA2  12DE               	iorwf	postinc2,f,c
 21584  012FA4  0E00               	movlw	0
 21585  012FA6  12DE               	iorwf	postinc2,f,c
 21586  012FA8  D000               	goto	i2l6428
 21587  012FAA                     i2l6428:
 21588                           
 21589                           ; BSR set to: 15
 21590                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 21591  012FAA  AE62               	btfss	3938,7,c	;volatile
 21592  012FAC  D00D               	goto	i2l6432
 21593                           
 21594                           ; BSR set to: 15
 21595                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 21596  012FAE  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21597  012FB2  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21598  012FB6  0E00               	movlw	0
 21599  012FB8  12DE               	iorwf	postinc2,f,c
 21600  012FBA  0E00               	movlw	0
 21601  012FBC  12DE               	iorwf	postinc2,f,c
 21602  012FBE  0E10               	movlw	16
 21603  012FC0  12DE               	iorwf	postinc2,f,c
 21604  012FC2  0E00               	movlw	0
 21605  012FC4  12DE               	iorwf	postinc2,f,c
 21606  012FC6  D000               	goto	i2l6432
 21607  012FC8                     i2l6432:
 21608                           
 21609                           ; BSR set to: 15
 21610                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 21611  012FC8  CF61 F03C          	movff	3937,??_CANreceiveMessage	;volatile
 21612  012FCC  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21613  012FCE  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21614  012FD0  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21615  012FD2  0E15               	movlw	21
 21616  012FD4                     i2u774_45:
 21617  012FD4  90D8               	bcf	status,0,c
 21618  012FD6  363C               	rlcf	??_CANreceiveMessage,f,c
 21619  012FD8  363D               	rlcf	??_CANreceiveMessage+1,f,c
 21620  012FDA  363E               	rlcf	??_CANreceiveMessage+2,f,c
 21621  012FDC  363F               	rlcf	??_CANreceiveMessage+3,f,c
 21622  012FDE  2EE8               	decfsz	wreg,f,c
 21623  012FE0  D7F9               	goto	i2u774_45
 21624  012FE2  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21625  012FE6  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21626  012FEA  503C               	movf	??_CANreceiveMessage,w,c
 21627  012FEC  12DE               	iorwf	postinc2,f,c
 21628  012FEE  503D               	movf	??_CANreceiveMessage+1,w,c
 21629  012FF0  12DE               	iorwf	postinc2,f,c
 21630  012FF2  503E               	movf	??_CANreceiveMessage+2,w,c
 21631  012FF4  12DE               	iorwf	postinc2,f,c
 21632  012FF6  503F               	movf	??_CANreceiveMessage+3,w,c
 21633  012FF8  12DE               	iorwf	postinc2,f,c
 21634  012FFA  D000               	goto	i2l6434
 21635  012FFC                     i2l6434:
 21636                           
 21637                           ; BSR set to: 15
 21638                           ;inc\CANlib.h: 629: }
 21639                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 21640  012FFC  9E60               	bcf	3936,7,c	;volatile
 21641                           
 21642                           ; BSR set to: 15
 21643                           ;inc\CANlib.h: 632: return (error);
 21644                           ;	Return value of _CANreceiveMessage is never used
 21645  012FFE  0012               	return	
 21646                           
 21647                           ; BSR set to: 15
 21648                           
 21649                           ; BSR set to: 15
 21650  013000  0012               	return		;funcret
 21651  013002                     __end_of_CANreceiveMessage:
 21652                           	opt stack 0
 21653                           pclatu	equ	0xFFB
 21654                           pclath	equ	0xFFA
 21655                           tblptru	equ	0xFF8
 21656                           tblptrh	equ	0xFF7
 21657                           tblptrl	equ	0xFF6
 21658                           tablat	equ	0xFF5
 21659                           prodh	equ	0xFF4
 21660                           prodl	equ	0xFF3
 21661                           intcon	equ	0xFF2
 21662                           postinc0	equ	0xFEE
 21663                           fsr0h	equ	0xFEA
 21664                           fsr0l	equ	0xFE9
 21665                           wreg	equ	0xFE8
 21666                           indf1	equ	0xFE7
 21667                           plusw1	equ	0xFE3
 21668                           fsr1h	equ	0xFE2
 21669                           fsr1l	equ	0xFE1
 21670                           bsr	equ	0xFE0
 21671                           indf2	equ	0xFDF
 21672                           postinc2	equ	0xFDE
 21673                           postdec2	equ	0xFDD
 21674                           plusw2	equ	0xFDB
 21675                           fsr2h	equ	0xFDA
 21676                           fsr2l	equ	0xFD9
 21677                           status	equ	0xFD8
 21678                           
 21679 ;; *************** function _CANisRxReady *****************
 21680 ;; Defined at:
 21681 ;;		line 1163 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 21682 ;; Parameters:    Size  Location     Type
 21683 ;;		None
 21684 ;; Auto vars:     Size  Location     Type
 21685 ;;		None
 21686 ;; Return value:  Size  Location     Type
 21687 ;;                  1    wreg      unsigned char 
 21688 ;; Registers used:
 21689 ;;		wreg, status,2
 21690 ;; Tracked objects:
 21691 ;;		On entry : 0/0
 21692 ;;		On exit  : 0/0
 21693 ;;		Unchanged: 0/0
 21694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21699 ;;Total ram usage:        1 bytes
 21700 ;; Hardware stack levels used:    1
 21701 ;; This function calls:
 21702 ;;		Nothing
 21703 ;; This function is called by:
 21704 ;;		_ISR_alta
 21705 ;; This function uses a non-reentrant model
 21706 ;;
 21707                           
 21708                           	psect	text65
 21709  016000                     __ptext65:
 21710                           	opt stack 0
 21711  016000                     _CANisRxReady:
 21712                           	opt stack 20
 21713                           
 21714                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 21715                           
 21716                           ; BSR set to: 15
 21717                           ;incstack = 0
 21718  016000  0E01               	movlw	1
 21719  016002  6E3A               	movwf	_CANisRxReady$3253,c
 21720  016004  BE60               	btfsc	3936,7,c	;volatile
 21721  016006  D005               	goto	i2l581
 21722  016008  010F               	movlb	15	; () banked
 21723  01600A  BF50               	btfsc	80,7,b	;volatile
 21724  01600C  D002               	goto	i2l581
 21725                           
 21726                           ; BSR set to: 15
 21727  01600E  0E00               	movlw	0
 21728  016010  6E3A               	movwf	_CANisRxReady$3253,c
 21729  016012                     i2l581:
 21730  016012  503A               	movf	_CANisRxReady$3253,w,c
 21731  016014  0012               	return	
 21732  016016  0012               	return		;funcret
 21733  016018                     __end_of_CANisRxReady:
 21734                           	opt stack 0
 21735                           pclatu	equ	0xFFB
 21736                           pclath	equ	0xFFA
 21737                           tblptru	equ	0xFF8
 21738                           tblptrh	equ	0xFF7
 21739                           tblptrl	equ	0xFF6
 21740                           tablat	equ	0xFF5
 21741                           prodh	equ	0xFF4
 21742                           prodl	equ	0xFF3
 21743                           intcon	equ	0xFF2
 21744                           postinc0	equ	0xFEE
 21745                           fsr0h	equ	0xFEA
 21746                           fsr0l	equ	0xFE9
 21747                           wreg	equ	0xFE8
 21748                           indf1	equ	0xFE7
 21749                           plusw1	equ	0xFE3
 21750                           fsr1h	equ	0xFE2
 21751                           fsr1l	equ	0xFE1
 21752                           bsr	equ	0xFE0
 21753                           indf2	equ	0xFDF
 21754                           postinc2	equ	0xFDE
 21755                           postdec2	equ	0xFDD
 21756                           plusw2	equ	0xFDB
 21757                           fsr2h	equ	0xFDA
 21758                           fsr2l	equ	0xFD9
 21759                           status	equ	0xFD8
 21760                           pclatu	equ	0xFFB
 21761                           pclath	equ	0xFFA
 21762                           tblptru	equ	0xFF8
 21763                           tblptrh	equ	0xFF7
 21764                           tblptrl	equ	0xFF6
 21765                           tablat	equ	0xFF5
 21766                           prodh	equ	0xFF4
 21767                           prodl	equ	0xFF3
 21768                           intcon	equ	0xFF2
 21769                           postinc0	equ	0xFEE
 21770                           fsr0h	equ	0xFEA
 21771                           fsr0l	equ	0xFE9
 21772                           wreg	equ	0xFE8
 21773                           indf1	equ	0xFE7
 21774                           plusw1	equ	0xFE3
 21775                           fsr1h	equ	0xFE2
 21776                           fsr1l	equ	0xFE1
 21777                           bsr	equ	0xFE0
 21778                           indf2	equ	0xFDF
 21779                           postinc2	equ	0xFDE
 21780                           postdec2	equ	0xFDD
 21781                           plusw2	equ	0xFDB
 21782                           fsr2h	equ	0xFDA
 21783                           fsr2l	equ	0xFD9
 21784                           status	equ	0xFD8
 21785                           
 21786                           	psect	rparam
 21787  0000                     pclatu	equ	0xFFB
 21788                           pclath	equ	0xFFA
 21789                           tblptru	equ	0xFF8
 21790                           tblptrh	equ	0xFF7
 21791                           tblptrl	equ	0xFF6
 21792                           tablat	equ	0xFF5
 21793                           prodh	equ	0xFF4
 21794                           prodl	equ	0xFF3
 21795                           intcon	equ	0xFF2
 21796                           postinc0	equ	0xFEE
 21797                           fsr0h	equ	0xFEA
 21798                           fsr0l	equ	0xFE9
 21799                           wreg	equ	0xFE8
 21800                           indf1	equ	0xFE7
 21801                           plusw1	equ	0xFE3
 21802                           fsr1h	equ	0xFE2
 21803                           fsr1l	equ	0xFE1
 21804                           bsr	equ	0xFE0
 21805                           indf2	equ	0xFDF
 21806                           postinc2	equ	0xFDE
 21807                           postdec2	equ	0xFDD
 21808                           plusw2	equ	0xFDB
 21809                           fsr2h	equ	0xFDA
 21810                           fsr2l	equ	0xFD9
 21811                           status	equ	0xFD8


Data Sizes:
    Strings     548
    Constant    144
    Data        1
    BSS         144
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      76
    BANK0           160     91     142
    BANK1           256     35      89
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_39(CODE[21]), STR_38(CODE[21]), STR_37(CODE[21]), STR_36(CODE[21]), 
		 -> STR_35(CODE[21]), STR_34(CODE[21]), STR_33(CODE[21]), STR_32(CODE[21]), 
		 -> STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[21]), STR_28(CODE[21]), 
		 -> STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), 
		 -> STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[8]), STR_16(CODE[8]), 
		 -> STR_15(CODE[21]), STR_14(CODE[5]), STR_13(CODE[5]), STR_12(CODE[5]), 
		 -> STR_11(CODE[21]), STR_10(CODE[7]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_7(CODE[12]), STR_6(CODE[21]), STR_4(CODE[21]), STR_3(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK1[8]), park_assist_state(BANK1[8]), data_steering(BANK1[8]), data_brake(COMRAM[8]), 
		 -> data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    ___lbtofl->___flpack
    ___awtofl->___flpack
    _LCD_Parking->_LCD_write_message
    _LCD_Park->_LCD_write_message
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awtofl
    ___flmul->___lbtofl
    ___awdiv->___awmod
    ___lltofl->___flpack
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___lwtofl->___flpack
    ___fldiv->___lwtofl
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_Gap->_LCD_write_message
    _LCD_Error->_LCD_write_message
    _LCD_End->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Tx->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  574717
                                             27 BANK1      8     8      0
                             _CAN_Tx
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                            _LCD_End
                          _LCD_Error
                            _LCD_Gap
                        _LCD_Handler
                           _LCD_Park
                        _LCD_Parking
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___awdiv
                           ___awtofl
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___lbtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             32 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lbtofl                                             5     1      4    2675
                                             28 BANK0      5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) ___awtofl                                             9     5      4    2854
                                             28 BANK0      5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Parking                                          0     0      0   57678
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Park                                             0     0      0   57678
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  156620
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___lwtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   48534
                                             83 BANK0      8     0      8
                                              0 BANK1     27    27      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                           ___lltofl
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4   10519
                                             48 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             18 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4   10240
                                             48 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             15     7      8    5710
                                             33 BANK0     15     7      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtofl (ARG)
                           ___flpack
                           ___lbtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    2293
                                             24 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             18 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             18 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___lltofl                                             4     0      4    2752
                                             28 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             18 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             18 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             73 BANK0     10     6      4
                           ___awtofl (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___lbtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4809
                                             73 BANK0      8     0      8
                            ___fladd
                           ___lltofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             12     4      8    4445
                                             61 BANK0     12     4      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___flpack
                           ___lbtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             48 BANK0      4     0      4
                            ___flmul (ARG)
                           ___lbtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     660
                                             18 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lwtofl                                             4     0      4    2752
                                             28 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             15     7      8    3329
                                             32 BANK0     15     7      8
                           ___flpack
                           ___lwtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flpack                                            10     4      6    2644
                                             18 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12052
                                             42 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             34 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             25 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             18 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             18 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             35 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18137
                                             33 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             30 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_Gap                                              0     0      0   57678
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Error                                            0     0      0   57678
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_End                                              0     0      0   57678
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   12291
                                             35 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             30 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             32 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             30 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             30 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             26 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             24 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     1     1      0      68
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_Tx                                               0     0      0    4619
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4595
                                             18 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           18    18      0    3428
                                              0 BANK0     18    18      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    2243
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Tx
     _CANisTxReady
     _CANsendMessage
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_End
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Error
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Gap
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___flpack
       ___lwtofl (ARG)
         ___flpack
     ___lwtofl
       ___flpack
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___lbtofl (ARG)
             ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___lbtofl (ARG)
           ___flpack
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
             ___lbtofl (ARG)
               ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
         ___lltofl (ARG)
           ___flpack
       ___fltol
         ___awtofl (ARG)
           ___flpack
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
             ___lbtofl (ARG)
               ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___lbtofl (ARG)
             ___flpack
         ___lbtofl (ARG)
           ___flpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
       ___lldiv
       ___llmod
       ___lltofl
         ___flpack
       ___wmul
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
   _LCD_Park
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Parking
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___awdiv
     ___awmod (ARG)
   ___awtofl
     ___flpack
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___lbtofl (ARG)
         ___flpack
     ___flpack (ARG)
     ___lbtofl (ARG)
       ___flpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtofl (ARG)
       ___flpack
     ___flpack (ARG)
     ___lbtofl (ARG)
       ___flpack
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
     ___lbtofl (ARG)
       ___flpack
   ___fltol
     ___awtofl (ARG)
       ___flpack
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___lbtofl (ARG)
           ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___lbtofl (ARG)
         ___flpack
     ___lbtofl (ARG)
       ___flpack
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
   ___lbtofl
     ___flpack
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     23      59       7       34.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5B      8E       5       88.8%
BITCOMRAM           5F      0       3       0        3.2%
COMRAM              5F     21      4C       1       80.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     133      20        0.0%
DATA                 0      0     133       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Jun 09 19:08:14 2016

                                _x 0263                                  _y 0264  
                                _z 0265          __size_of_delay_set_quartz 000A  
                     ___fldiv@cntr 008C               __end_of_CANSetFilter 0B2A  
                     ?_LCD_Handler 0029                       ___fldiv@sign 008E  
                     ___awdiv@sign 007D                                 _id 0001  
                               bsr 000FE0                ___wmul@multiplicand 0074  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                       __CFG_CP2$OFF 000000  
                     ?_LCD_Parking 0029                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                       __CFG_CP4$OFF 000000  
                     __CFG_CP5$OFF 000000                       ___flpack@arg 0072  
                      _row_refresh 025C                       ___flpack@exp 0076  
                              l400 1F34                                l401 202E  
                              l410 20FE                                l402 1FBC  
                              l403 1FC6                                l404 1FD0  
                              l500 064A                                l413 21BA  
                              l405 1FDA                                l501 064E  
                              l422 2378                                l414 21BE  
                              l510 075E                                l502 065A  
                              l423 237C                                l415 22B8  
                              l511 076A                                l424 2388  
                              l416 2246                                l408 20EE  
                              l520 087A                                l512 076E  
                              l417 2250                                l409 20F2  
                              l521 087E                                l513 077A  
                              l505 073A                                l418 225A  
                              l530 098E                                l522 088A  
                              l506 073E                                l419 2264  
                              l531 099A                                l523 088E  
                              l507 074A                                l540 0AAA  
                              l532 099E                                l524 089A  
                              l516 085A                                l508 074E  
                              l460 3768                                l452 3728  
                              l541 0AAE                                l533 09AA  
                              l517 085E                                l509 075A  
                              l453 372C                                l390 1D50  
                              l542 0ABA                                l534 09AE  
                              l518 086A                                l470 3878  
                              l454 3738                                l383 1F1A  
                              l543 0ABE                                l535 09BA  
                              l527 097A                                l519 086E  
                              l471 3884                                l463 3844  
                              l455 373C                                l384 1CA6  
                              l544 0ACA                                l528 097E  
                              l464 3848                                l456 3748  
                              l393 1E64                                l385 1CAA  
                              l545 0ACE                                l529 098A  
                              l465 3854                                l457 374C  
                              l394 1E68                                l386 1DA4  
                              l546 0ADA                                l538 0A9A  
                              l490 0530                                l466 3858  
                              l458 3758                                l378 4402  
                              l395 1E74                                l387 1D32  
                              l539 0A9E                                l491 053C  
                              l483 04FC                                l467 3864  
                              l459 375C                                l379 440C  
                              l388 1D3C                                l484 0500  
                              l468 3868                                l389 1D46  
                              l485 050C                                l469 3874  
                              l398 21A4                                l494 061A  
                              l486 0510                                l814 1590  
                              l399 1F30                                l495 061E  
                              l487 051C                                l823 170E  
                              l576 5F82                                l496 062A  
                              l488 0520                                l497 062E  
                              l489 052C                                l498 063A  
                              l907 4040                                l499 063E  
                              l835 1708                                l819 159C  
                              l836 1704                                l828 167C  
                              l589 5D92                                l942 604C  
                              l862 1A4C                                l935 6020  
                              l871 1B14                                l855 1936  
                              l848 192E                                l954 5CC0  
                              l956 5CC4                                l949 6036  
                              l869 1B18                                l898 4002  
             ??_PWR_Button_Polling 0072                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                        ?_LCD_cursor 007E  
                              _dir 00E8                                _msg 0012  
                              _str 010A                       ___awmod@sign 0077  
                              prod 000FF3                                wreg 000FE8  
                     ___flmul@cntr 008E                       ___flmul@sign 008F  
                  __end_of_LCD_Gap 5A5E                       __CFG_LVP$OFF 000000  
                  __end_of_LCD_End 5B26                      ___flpack@sign 0077  
           __size_of_LCD_goto_line 00EE                       ___fltol@exp1 00B2  
                     __CFG_WDT$OFF 000000                               l1052 117E  
                             l1320 417E                               l1305 4B16  
                             l1306 4B2E                               l1314 4112  
                             l1318 4150                               l1329 426A  
                             l1371 5158                               l1363 49FE  
                             l1641 58BC                               l1298 4AB4  
                             l1651 5928                               l1547 54C2  
                             l1484 486A                               l1477 479E  
                             l1478 47E2                               l5102 03AE  
                             l5030 00C0                               l5006 388A  
                             l5120 046A                               l1578 541C  
                             l1588 579C                               l5222 07C8  
                             l5216 0780                               l5048 017A  
                             l5250 08A0                               l5154 058A  
                             l5066 0236                               l5148 0542  
                             l5084 02F2                               l5318 0AE0  
                             l5182 0660                   _battery_charging 0255  
                             l5256 08E8                               l4634 5862  
                             l5362 5C4C                               l8010 464A  
                             l5290 0A08                               l4636 5870  
                             l8004 4606                               l5284 09C0  
                             l5188 06A8                               l5700 4394  
                             l4646 58AC                               l4638 587A  
                             l4662 5918                               l4654 58DA  
                             l8006 4642                               l8014 46C4  
                             l4656 58E8                               l7400 4A96  
                             l8200 114C                               l5720 445C  
                             l5712 43FA                               l4658 58F2  
                             l8202 1160                               l8130 0DB4  
                             l8122 0D30                               l8106 0CAA  
                             l4914 5FF2                               l5714 4410  
                             l5706 43A4                               l8300 4F68  
                             l8140 0E52                               l8060 0B3A  
                             l4932 35E4                               l5910 2270  
                             l7406 4AF4                               l8230 131E  
                             l8214 11B6                               l8206 1184  
                             l8150 0EDA                               l8134 0DE8  
                             l5718 4418                               l6552 5578  
                             l7408 4B06                               l7504 430E  
                             l7520 4D4A                               l8152 0EE6  
                             l8160 0F7E                               l8136 0DFE  
                             l8080 0BF2                               l5930 236C  
                             l5834 1FE6                               l6538 54F4  
                             l7418 4B7C                               l7610 55D0  
                             l7514 4D24                               l8218 1218  
                             l8170 100A                               l8146 0EA8  
                             l8138 0E3C                               l8090 0C3A  
                             l8074 0B8A                               l8066 0B54  
                             l5860 2104                               l6548 553E  
                             l7372 5D84                               l4884 5438  
                             l7452 4162                               l7620 5604  
                             l7532 4D9A                               l8252 13CC  
                             l8244 1372                               l8236 133A  
                             l8228 130E                               l8164 0FF6  
                             l8084 0C06                               l8260 1426  
                             l4980 37B6                               l4948 369C  
                             l5854 20E2                               l5758 1D5C  
                             l4894 547C                               l8270 4E88  
                             l7446 4124                               l7622 560E  
                             l7630 5644                               l7614 55E2  
                             l7542 4DE2                               l7702 3194  
                             l8182 107C                               l8174 104A  
                             l8166 0FFC                               l8158 0F6A  
                             l8238 134A                               l8078 0BD6  
                             l4974 376E                               l5936 238E  
                             l5784 1E7A                               l7640 5B92  
                             l7392 4A2E                               l7472 41E8  
                             l7544 4DEA                               l7536 4DC2  
                             l7720 3420                               l7712 329C  
                             l8256 13F8                               l8248 139A  
                             l8184 1084                               l8192 1120  
                             l8096 0C56                               l8088 0C10  
                             l8416 3E60                               l5778 1E58  
                             l7650 51E2                               l7490 4292  
                             l7474 41FA                               l7466 41B6  
                             l7458 4174                               l7810 48C8  
                             l7634 565A                               l7626 5634  
                             l7618 55F6                               l7554 4E32  
                             l8194 1130                               l8178 1050  
                             l8258 1400                               l8442 3F78  
                             l8530 5BF0                               l7652 5214  
                             l7644 5BC6                               l7660 5F3E  
                             l7396 4A44                               l8276 4EAE  
                             l7484 4248                               l7476 420A  
                             l7804 48A2                               l7580 52FA  
                             l7572 52CE                               l7548 4E12  
                             l7708 326A                               l8444 3F8A  
                             l7654 5246                               l7398 4A56  
                             l7494 42BA                               l7486 425A  
                             l7478 4216                               l7910 502E  
                             l7590 5336                               l7582 5304  
                             l7566 52B6                               l7726 34F6  
                             l8446 3F8E                               l7648 51B0  
                             l7656 5278                               l7664 5F54  
                             l8296 4F54                               l8288 4EFE  
                             l7920 5060                               l7832 4974  
                             l7824 491E                               l7680 3A7C  
                             l8472 401C                               l8464 3FDE  
                             l8456 3FB0                               l8800 1926  
                             l8704 15AA                               l7922 5072  
                             l7914 5042                               l7754 474A  
                             l7578 52EC                               l7594 5346  
                             l7738 5F30                               l8466 3FF0  
                             l8810 19A0                               l8706 15B8  
                             l7924 5080                               l7940 53A8  
                             l7844 49B0                               l7836 4988  
                             l7748 4710                               l8492 40A2  
                             l8900 1C7A                               l8812 19A6  
                             l8716 15E0                               l8724 1622  
                             l8660 146A                               l7870 5106  
                             l7862 5B4E                               l7950 5408  
                             l7942 53B2                               l7854 49E2  
                             l7598 535C                               l8486 406A  
                             l8902 1C80                               l8822 19D4  
                             l8734 163E                               l8742 1680  
                             l7928 509E                               l7960 5738  
                             l7856 49F4                               l7848 49C4  
                             l7784 481C                               l7776 47F4  
                             l7688 3B78                               l8488 407C  
                             l7938 5396                               l7962 5742  
                             l7794 484E                               l8498 40BE  
                             l8818 19C2                               l8826 19E4  
                             l8754 173C                               l8762 177E  
                             l8690 14FC                               l7876 51A4  
                             l7884 5D18                               l7796 4860  
                             l7788 4830                               l8764 1780  
                             l7982 5E2C                               l7894 4FBE  
                             l7966 5788                               l7958 5726  
                             l8854 1B3A                               l8846 1AA8  
                             l8838 1A50                               l8790 1898  
                             l8782 17EC                               l8766 1784  
                             l8694 1574                               l7992 4562  
                             l8872 1BF8                               l8776 17B0  
                             l7978 5E10                               l7994 456A  
                             l8858 1B50                               l8794 18FE  
                             l8698 1588                               l8884 1C20  
                             l8796 1904                               l7998 4578  
                             l8894 1C3C                               l8878 1C0C  
                             l8886 1C26                               STR_1 FF6A  
                             STR_2 FF40                               STR_3 FE44  
                             STR_4 FF6A                               STR_5 FFFA  
                             STR_6 FF55                               STR_7 FFC8  
                             STR_8 FFA9                               STR_9 FFBA  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                               u5220 355E  
                             u7000 2290                               u5225 3552  
                             u7010 22DC                               u5235 35BE  
                             u5500 00F4                               u5260 3616  
                             u7005 2284                               u6150 0B00  
                             u6070 09E0                               u5430 38AA  
                             u5350 378E                               u7015 22D0  
                             u7025 233C                               u5505 00E8  
                             u5265 360A                               u6155 0AF4  
                             u6075 09D4                               u5515 0154  
                             u5435 389E                               u5355 3782  
                             u5275 3676                               u5620 0328  
                             u5540 01B0                               u5460 003A  
                             u5625 031C                               u5545 01A4  
                             u5465 002E                               u5635 0388  
                             u5555 0210                               u5475 009A  
                             u5660 03E4                               u5580 026C  
                _F2_Button_Polling 602E                               u5910 07A0  
                             u5830 0680                               u5750 0562  
                             u5665 03D8                               u5585 0260  
                             u5915 0794                               u5835 0674  
                             u5755 0556                               u5675 0444  
                             u5595 02CC                               u6740 1D7C  
                             u6750 1DC8                               u6745 1D70  
                             u9225 5D3A                               u9226 5D3C  
                             u6755 1DBC                               u9235 5D46  
                             u9236 5D48                               u6765 1E28  
                             u9245 5D52                               u6870 2006  
                             u9246 5D54                               u5990 08C0  
                             u9255 5D5E                               u6880 2052  
                             u9256 5D60                               u6875 1FFA  
                             u5995 08B4                               u6885 2046  
                             u6895 20B2                               u9801 46EC  
                             u9821 4726                __size_of_CANSetMask 03AA  
                     ?_LCD_goto_xy 0081                               _data 0116  
                             _main 1436                               _itoa 5C20  
               ?_F2_Button_Polling 0029          __size_of_LCD_send_command 003A  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             _utoa 542E                 __size_of_LCD_Error 0064  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 00BE  
                    __CFG_IESO$OFF 000000                 __size_of_LCD_clear 0032  
                     _sprintf$4233 0138                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000010                ??_F2_Button_Polling 0072  
         __end_of_LCD_enable_pulse 5FAC                   _CANOperationMode 5FE8  
                     _Can_Tx_Force 0250                   __end_of_LCD_Park 59FA  
                  _space_available 025D            __size_of_LCD_initialize 016E  
       __size_of_CANreceiveMessage 052E                      ___fltol@sign1 00B1  
                  __end_of___fladd 433E                              ?_main 0029  
                  __end_of___fldiv 4F98                              ?_itoa 0082  
                  __end_of___awdiv 5368                    __end_of___flneg 5D2C  
                            STR_10 FFE4                              STR_11 FDDB  
                            STR_12 FFF0                              STR_20 FF2B  
                            STR_13 FFF5                              STR_21 FF7F  
                            STR_14 FFEB                              STR_30 FF16  
                            STR_22 FED7                              STR_31 FF6A  
                            STR_15 FEEC                              STR_23 FE83  
                            STR_32 FF2B                              STR_24 FF2B  
                            STR_16 FFD4                              STR_17 FFDC  
                            STR_25 FEC2                              STR_33 FEAD  
                            STR_26 FE98                              STR_18 FE6E  
                            STR_34 FE1A                              STR_19 FF94  
                            STR_27 FE2F                              STR_35 FE05  
                            STR_36 FF2B                              STR_28 FF2B  
                  __end_of___awmod 5666                              STR_37 FEAD  
                            STR_29 FF01                              STR_38 FDF0  
                            STR_39 FE59                    __end_of___flmul 4E62  
                  __end_of___flsub 5B86                    __end_of___fltol 50B2  
                  __end_of___lldiv 542E                              u10020 4FDE  
                            ?_utoa 0079                              u10025 4FD2  
                            u10151 4516                              u11210 1922  
                            u11310 1B0C                              u10440 1176  
                            u11080 16E4                    ___awdiv@divisor 007A  
                            u11360 1BD0                    __end_of___llmod 57AE  
                            u11447 5D86                              u10950 1560  
                            _T3CON 000FB1                    __end_of___lwdiv 58C6  
                  __end_of___lwmod 5932                              i2l400 267E  
                            i2l401 2750                              i2l410 2804  
                            i2l402 26EC                              i2l403 26F4  
                            i2l404 26FC                              i2l413 28B0  
                            i2l405 2704                              i2l430 2D80  
                            i2l422 2A2C                              i2l414 28B4  
                            i2l423 2A30                              i2l415 2986  
                            i2l424 2A3A                              i2l416 2922  
                            i2l408 27F6                              i2l417 292A  
                            i2l409 27FA                              i1l809 0078  
                            i2l418 2932                              i2l419 293A  
                            i2l390 24CE                              i2l383 2666  
                            i2l384 2444                              i2l393 25C0  
                            i2l385 2448                              i2l394 25C4  
                            i2l386 251A                              i2l395 25CE  
                            i2l387 24B6                              i2l388 24BE  
                            i2l581 6012                              i2l389 24C6  
                            i2l805 3E24                              i2l398 289C  
                            i2l399 267A                              i2l576 5FC6  
                            i2l788 3E1E                    ___awdiv@counter 007C  
                            _TMR3H 000FB3                              _TMR3L 000FB2  
                _CANisRxReady$3253 003A                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                    __CFG_PWRT$OFF 000000                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                      __CFG_WRT4$OFF 000000  
               __size_of_ISR_bassa 00A6                      __CFG_WRT5$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                 CANInitialize@flags 0084  
                   __CFG_EBTR2$OFF 000000                      ___awtofl@sign 0080  
                   __CFG_EBTR3$OFF 000000                     __CFG_EBTR4$OFF 000000  
                 __end_of_ISR_alta 3E5E                     __CFG_EBTR5$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                              _check 00C7  
                   __CFG_EBTRB$OFF 000000          __end_of_F2_Button_Polling 6044  
                  __end_of_dpowers FDDB                              _scale 3002  
                  __end_of_isdigit 5F3C          __size_of_LCD_shift_cursor 004E  
                   __pbitbssCOMRAM 0250               __end_of_CANisRxReady 6018  
                            tablat 000FF5               __end_of_CANisTxReady 5F8A  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 0081                              utoa@v 007F  
                            status 000FD8                    __end_of_sprintf 1436  
              __size_of_LCD_cursor 0032                    __initialization 5C6C  
                     __end_of_main 1C90                       __end_of_itoa 5C6C  
    __size_of_board_initialization 00A4                      _LCD_goto_line 51AA  
                     __end_of_utoa 54F2                  ?_Joystick_Polling 0029  
               ??_Joystick_Polling 0072                  ?_LCD_write_string 0083  
                           ??_main 0151                             ??_itoa 0088  
                           ??_utoa 007F          __size_ofi2_CANsendMessage 06A4  
                    __activetblptr 000003                  __end_of_LCD_Error 5AC2  
                        ??_LCD_Gap 0085                          ??_LCD_End 0085  
                   _JoystickValues 00DF                 ??_LCD_write_string 0085  
             __size_of__tdiv_to_l_ 01A6                  _CANisTxReady$3251 0072  
                __end_of_LCD_clear 5F0E              i2CANsendMessage@flags 0041  
           LCD_write_string@buffer 0083                             _ADCON1 000FC1  
                           _CANCON 000F6F                   ___llmod@dividend 0072  
                           ?_scale 0090                             _ADRESH 000FC4  
                 __end_of___flpack 4B90                   ___awdiv@dividend 0078  
                 __end_of___awtofl 5C20                             _CAN_Tx 54F2  
                  __CFG_BBSIZ$1024 000000                   __end_of___lbtofl 5E0E  
                 __end_of___lltofl 5E78                             i2l6312 2AE8  
                           i2l6420 2F6E                             i2l6308 2AE0  
                           i2l6432 2FC8                             i2l6424 2F8C  
                           i2l6416 2F50                             i2l6408 2EE0  
                           i2l6434 2FFC                             i2l6370 2D46  
                           i2l6362 2D06                             i2l6354 2CC6  
                           i2l6346 2C54                             i2l6428 2FAA  
                           i2l6372 2D7A                             i2l6366 2D26  
                           i2l6358 2CE6                             i2l8600 3D00  
                           i2l6914 2944                             i2l6762 24D8  
                           i2l8610 3D34                             i2l6940 2A40  
                           i2l6934 2A22                             i2l6838 270E  
                           i2l6782 25B6                             i2l8614 3D52  
                           i2l6864 280A                             i2l8624 3D8E  
                           i2l8560 3C06                             i2l6858 27EC  
                           i2l8634 3DBE                             i2l8618 3D6A  
                           i2l6788 25D4                             i2l8644 3E02  
                           i2l8638 3DEE                             i2l8592 3CCE  
                           i2l8586 3CB8                             i2l8578 3C94  
                 __end_of___lwtofl 5EAA                             _RXB0D0 000F66  
                           _RXB0D1 000F67                             _RXB0D2 000F68  
                           _RXB0D3 000F69                             _RXB0D4 000F6A  
                           _RXB1D0 000F56                             _RXB0D5 000F6B  
                           _RXB1D1 000F57                             _RXB0D6 000F6C  
                           _RXB1D2 000F58                             _RXB0D7 000F6D  
                           _RXB1D3 000F59                             _RXB1D4 000F5A  
                           _RXB1D5 000F5B                             _RXB1D6 000F5C  
                           _RXB1D7 000F5D                             _TXB0D0 000F46  
                           _TXB0D1 000F47                             _TXB0D2 000F48  
                           _TXB0D3 000F49                             _TXB1D0 000F36  
                           _TXB0D4 000F4A                             _TXB1D1 000F37  
                           _TXB0D5 000F4B                             _TXB1D2 000F38  
                           _TXB0D6 000F4C                             _TXB1D3 000F39  
                           _TXB0D7 000F4D                             _TXB2D0 000F26  
                           _TXB1D4 000F3A                             _TXB2D1 000F27  
                           _TXB1D5 000F3B                             _TXB2D2 000F28  
                           _TXB1D6 000F3C                             _TXB2D3 000F29  
                           _TXB1D7 000F3D                             _TXB2D4 000F2A  
                           _TXB2D5 000F2B                             _TXB2D6 000F2C  
                           _TXB2D7 000F2D                 CANsendMessage@data 0076  
               CANsendMessage@tamp 007E                    _switch_position 00EC  
                 __end_of_delay_ms 5DA0              __size_of_CANSetFilter 0B2A  
                   __CFG_XINST$OFF 000000                  __end_of_ISR_bassa 00BE  
                 __end_of__powers_ FDB3                     ?_LCD_goto_line 0029  
                           ___flge 50B2                          ??___fladd 00A5  
                 _delay_set_quartz 605A                             ___wmul 5DA0  
                        ??___fldiv 0088                          ??___awdiv 007C  
                        ??___flneg 0094                     __CFG_STVREN$ON 000000  
                        ??___awmod 0076                          ??___flmul 0089  
                        ??___flsub 00B1                          ??___fltol 00AD  
                        ??___lldiv 007A                          ??___llmod 007A  
                        ??___lwdiv 0076                       ??_CANSetMask 0077  
                        ??___lwmod 0076            __size_of_LCD_write_char 0096  
                           _fround 38D4     LCD_initialize@quartz_frequency 0080  
                           clear_0 5C72                             clear_1 5C7E  
                           clear_2 5C90                   ___awdiv@quotient 007E  
                  ___awmod@divisor 0074               __size_of_LCD_Handler 0274  
                  ___awmod@counter 0076                    __CFG_BOREN$BOHW 000000  
                _JoystickConstants 00BB                             itoa@cp 0088  
                        ??_isdigit 0072               __size_of_LCD_Parking 0064  
                     __mediumconst FD4A                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
       __size_of_F2_Button_Polling 0016                          ??_sprintf 0136  
                     _CANSetFilter 0000                         ___fladd@f1 009D  
                       ___fladd@f2 00A1                         ___flge@ff1 0072  
                       ___flge@ff2 0076                         ___fldiv@f1 0080  
                       ___fldiv@f2 0084                         ___fldiv@f3 0088  
                       __accesstop 0060            __end_of__initialization 5CA8  
               __end_of_CANSetMask 38D4                          ?_LCD_Park 0029  
                  __CFG_PBADEN$OFF 000000                         ___flneg@f1 0090  
                 _LCD_send_command 5D2C                         ___flmul@f1 0081  
                       ___flmul@f2 0085                      ___rparam_used 000001  
LCD_write_integer@number_of_digits 008C                         ___flsub@f1 00A9  
                       ___flsub@f2 00AD                         ___fltol@f1 00A9  
             __size_of_LCD_goto_xy 001C                         ___awtofl@c 007C  
                       ___lbtofl@c 0080                     __pcstackCOMRAM 0029  
                     __pidataBANK0 6064                          ?_ISR_alta 0029  
                       ___lltofl@c 007C                       LCD_goto_xy@x 0082  
                     LCD_goto_xy@y 0081                      __end_of_scale 352A  
                   _LCD_initialize 4B90                  _LCD_write_integer 450C  
                _LCD_write_message 5E0E                         ___lwtofl@c 007C  
            CANSetFilter@numBuffer 007B                 ?_LCD_write_integer 008A  
           LCD_write_integer@index 0099                 ?_LCD_write_message 0083  
                       __div_to_l_ 487C                       ??_LCD_cursor 007F  
           LCD_write_integer@value 008A      LCD_write_integer@convertedInt 0093  
                _space_gap_reached 025E                       _actual_speed 00E1  
            __size_of_CANisRxReady 0018              __size_of_CANisTxReady 0026  
              ??_LCD_write_integer 008E                    __div_to_l_@exp1 007F  
              ??_LCD_write_message 0085                    __div_to_l_@cntr 007E  
                          ??_scale 0094                   _LCD_shift_cursor 5B86  
                  __div_to_l_@quot 007A           __end_of_CANOperationMode 6000  
                          ?_CAN_Tx 0029                         __pbssBANK0 00BB  
                       __pbssBANK1 0100                         _data_brake 0021  
                       ??_LCD_Park 0085            __size_of_CANsendMessage 07A0  
                       _data_speed 011E                      __div_to_l_@f1 0072  
                    __div_to_l_@f2 0076                    ??_LCD_goto_line 007E  
               __end_of_LCD_cursor 5EDC             __end_of_LCD_initialize 4CFE  
                          ?___flge 0072                            ?___wmul 0072  
                       ??_ISR_alta 0060          __end_of_LCD_write_integer 46D6  
        __end_of_LCD_write_message 5E44                  ?_LCD_enable_pulse 0029  
                        ?___flpack 0072                            ?_fround 0090  
                     _CANisRxReady 6000                            _CANSTAT 000F6E  
                        ?___awtofl 007C                 ??_LCD_enable_pulse 007A  
                        ?___lbtofl 007C                       _CANisTxReady 5F64  
                        ?___lltofl 007C                            _BRGCON1 000F70  
                          _BRGCON2 000F71                            _BRGCON3 000F72  
                 i2_CANsendMessage 2430                          ?___lwtofl 007C  
      __size_of_PWR_Button_Polling 0016                            _LCD_Gap 59FA  
                          _LCD_End 5AC2            __size_ofi2_CANisTxReady 0020  
           __size_of_CANInitialize 01CE                   LCD_cursor@active 007F  
                        ?_delay_ms 0078                            _RXB0DLC 000F65  
                          _RXB1DLC 000F55                            _RXB0CON 000F60  
                          _RXB1CON 000F50                            _TXB0DLC 000F45  
                          _TXB1DLC 000F35                            _TXB2DLC 000F25  
              CANsendMessage@flags 0079                  _parking_message_E 025A  
                  __size_of_CAN_Tx 00C0                  __end_of__npowers_ FD7F  
                          __Hparam 0000                         _left_speed 000B  
                       _scale$4232 0094                            __Lparam 0000  
                 delay_ms@value_ms 0078                    ?_LCD_initialize 0029  
                  __size_of___flge 00F8                            ___fladd 40D2  
                          ___fldiv 4E62                            ___awdiv 5298  
                          ___flneg 5CF0                            ___awmod 55B2  
                          ___flmul 4CFE                            ___flsub 5B26  
                          ___fltol 4F98                            ___lldiv 5368  
                  __size_of___wmul 0038                     _LCD_write_char 57AE  
                          ___llmod 570A                            ___lwdiv 5844  
                          ___lwmod 58C6                         ??___flpack 0078  
             CANInitialize@propSeg 0089                            __pcinit 5C6C  
                       ??___awtofl 0080                         ??___lbtofl 0080  
                  __size_of_fround 02FE                            __ramtop 0D00  
                 _LCD_4TH_ROW_MODE 0253                LCD_write_char@value 0082  
                       ??___lltofl 0080                            __ptext0 1436  
                          __ptext1 5666                            __ptext2 433E  
                          __ptext3 352A                            __ptext4 0000  
                          __ptext5 5FE8                            __ptext6 5DD8  
                          __ptext7 5BD4                            __ptext8 6018  
                          __ptext9 5932                         ??___lwtofl 0080  
                      ?__div_to_l_ 0072                   LCD_write_char@D0 0081  
                 LCD_write_char@D1 0080                   LCD_write_char@D2 007F  
                 LCD_write_char@D3 007E                          _F1_switch 0251  
                          _dpowers FDB3                          _F2_switch 0252  
                          _isdigit 5F0E                   ___awmod@dividend 0072  
                       ??_delay_ms 007A             CANreceiveMessage@error 0044  
     __end_of_board_initialization 570A          __size_of_Joystick_Polling 0042  
                        _LCD_Error 5A5E           __end_of_delay_set_quartz 6064  
                          _sprintf 0B2A                     __pintcode_body 3BD2  
                        _LCD_clear 5EDC               end_of_initialization 5CA8  
        __size_of_LCD_write_string 0028                            itoa@buf 0082  
                          itoa@val 0084                            int_func 3BD2  
                        i2u1145_47 3DB6                          i2u1083_45 3D4A  
                        i2u1075_45 3C24                          i2u1083_46 3D4C  
                        i2u1075_46 3C26                          i2u1092_45 3E18  
                        i2u1092_46 3E1A                      _CANInitialize 433E  
                    _parking_error 0259                    ___lldiv@divisor 0076  
               LCD_cursor@blinking 007E                      _parking_state 00EA  
                  ___lldiv@counter 007E             __end_of_LCD_write_char 5844  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 01CA  
       __size_of_LCD_write_message 0036                            utoa@buf 0079  
                   __tdiv_to_l_@f1 0072                     __tdiv_to_l_@f2 0076  
                          utoa@val 007B                         _wait_low_1 0260  
                       _wait_low_2 0261                         _wait_low_3 0262  
                        _ISR_bassa 0018                      ??__tdiv_to_l_ 007A  
          _steering_correction_dir 025F                          _PORTAbits 000F80  
                        _PORTBbits 000F81                     CANSetMask@mask 0072  
                        _PORTDbits 000F83                     CANSetMask@tamp 007C  
         __end_of_LCD_send_command 5D66                     CANSetMask@type 0076  
                      ___fldiv@exp 008D                  _F1_Button_Polling 6044  
                       ?_LCD_Error 0029                         ?_LCD_clear 0029  
               ?_F1_Button_Polling 0029                     __end_of_CAN_Tx 55B2  
          _clock_counter_reference 00E3                        ___flmul@exp 0089  
                   _CANsendMessage 1C90                   CANInitialize@BRP 0083  
                 CANInitialize@SJW 0082                     ?_CANInitialize 0080  
              ??_F1_Button_Polling 0072                  __size_of_LCD_Park 0064  
              __size_of__div_to_l_ 0194            LCD_write_integer@F17326 0100  
                  ?_LCD_write_char 0029                      ??_LCD_Handler 00BB  
         __end_of_LCD_shift_cursor 5BD4                     __end_of___flge 51AA  
                       ?_ISR_bassa 0029                     __end_of___wmul 5DD8  
                __size_of_ISR_alta 3E56                      ??_LCD_Parking 0085  
                LCD_shift_cursor@i 0080                     __end_of_fround 3BD2  
                   i2_CANisTxReady 5FAC          __end_of_F1_Button_Polling 605A  
              start_initialization 5C6C                __end_of__tdiv_to_l_ 487C  
              CANSetMask@numBuffer 007B             __end_of_CANsendMessage 2430  
                         ??_CAN_Tx 0082                  ?_CANOperationMode 0029  
                    _data_steering 0126                      ??_LCD_goto_xy 0082  
       i2CANsendMessage@dataLength 0040               i2CANsendMessage@data 003E  
               ??_CANOperationMode 0072               i2CANsendMessage@tamp 0046  
                  ___llmod@divisor 0076           __end_ofi2_CANsendMessage 2AD4  
       CANInitialize@FilterConfig1 008A         CANInitialize@FilterConfig2 008B  
                  ___llmod@counter 007A                _steering_correction 00EB  
                         ??___flge 007A               _board_initialization 5666  
                         ??___wmul 0076                        __pdataBANK0 00ED  
                 __CFG_LPT1OSC$OFF 000000                           ??_fround 0094  
           __end_ofi2_CANisTxReady 5FCC                      sprintf@tmpval 0146  
                __size_of___flpack 0180             CANInitialize@phaseSeg1 0080  
           CANInitialize@phaseSeg2 0081                         fround@prec 009C  
              __end_of_LCD_Handler 40D2                  __size_of___awtofl 004C  
                         ?_LCD_Gap 0029                  __size_of___lbtofl 0036  
                         ?_LCD_End 0029                  __size_of___lltofl 0034  
                      __pbssCOMRAM 0001                  __size_of___lwtofl 0032  
                    __pcstackBANK0 0060                      __pcstackBANK1 0136  
                      _BRGCON2bits 000F71                __end_of_LCD_Parking 5996  
                      _BRGCON3bits 000F72                   _Joystick_Polling 5CAE  
                      ??_LCD_Error 0085          __size_of_LCD_enable_pulse 0022  
                     _isdigit$3906 0073         i2CANsendMessage@identifier 003A  
                _park_assist_state 012E                  __size_of_delay_ms 003A  
                      ??_LCD_clear 007E                    ?_CANsendMessage 0072  
          LCD_write_message@buffer 0083                   _LCD_write_string 5F3C  
                  ??_CANInitialize 0085                        sprintf@flag 013E  
                      sprintf@fval 014C                        sprintf@prec 014A  
                 ??_LCD_initialize 0080                 CANSetFilter@filter 0072  
        delay_set_quartz@frequency 0072                   ___lwdiv@dividend 0072  
               LCD_send_command@D0 007C                 LCD_send_command@D1 007B  
               LCD_send_command@D2 007A                 LCD_send_command@D3 007D  
              __end_of_LCD_goto_xy 5FE8              __end_of_LCD_goto_line 5298  
            ?_board_initialization 0029                          __pintcode 0008  
                    __pmediumconst FD4A                           ?___fladd 009D  
                         ?___fldiv 0080                           ?___awdiv 0078  
                         ?___flneg 0090                           ?___awmod 0072  
                         ?___flmul 0081                           ?___flsub 00A9  
                         ?___fltol 00A9                           ?___lldiv 0072  
                         ?___llmod 0072                          __npowers_ FD4B  
                         ?___lwdiv 0072                           ?___lwmod 0072  
                      ??_ISR_bassa 0029                        __pintcodelo 0018  
       __end_of_PWR_Button_Polling 602E                    ?i2_CANisTxReady 0029  
                      __tdiv_to_l_ 46D6                       ??__div_to_l_ 007A  
                      _COMSTATbits 000F74                           ?_isdigit 0029  
       __size_of_F1_Button_Polling 0016                   ___lwdiv@quotient 0076  
                         ?_sprintf 00B3                     __size_of_scale 0528  
                ?_delay_set_quartz 0029              CANreceiveMessage@tamp 0045  
               ??_delay_set_quartz 0072                           _LCD_Park 5996  
                   ___wmul@product 0076                           _LATCbits 000F8B  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                         _IPR2bits 000FA2       _delay_quartz_frequency_value 00ED  
                         _IPR3bits 000FA5                           _PIE2bits 000FA0  
                         _PIE3bits 000FA3               _collision_risk_value 00E7  
               __end_of__div_to_l_ 4A10                           _PIR2bits 000FA1  
                         _PIR3bits 000FA4                           i2u813_40 24F6  
                         i2u813_45 24EC                           i2u814_40 253C  
                         i2u814_45 2532                           i2u815_45 2588  
                         i2u840_40 29A8                           i2u840_45 299E  
                         i2u841_45 29F4                           i2u754_40 2B94  
                         i2u826_40 272C                           i2u826_45 2722  
                         i2u754_46 2B96                           i2u755_40 2BC2  
                         i2u827_40 2772                           i2u763_45 2D52  
                         i2u827_45 2768                           i2u755_46 2BC4  
                         i2u828_45 27BE                           i2u765_40 2E28  
                         i2u757_45 2BD8                           i2u765_46 2E2A  
                         i2u766_40 2E52                           i2u774_45 2FD4  
                         i2u766_46 2E54                           i2u839_40 2962  
                         i2u839_45 2958                           i2u768_45 2E66  
                         _RXB0EIDH 000F63                           _RXB0EIDL 000F64  
                         _RXB1EIDH 000F53                          _pr_time_1 00CB  
                        _pr_time_2 00CF                           _RXB1EIDL 000F54  
                        _pr_time_3 00D3                          _pr_time_4 0106  
                        _pr_time_5 00D7                          _pr_time_6 00DB  
                        _set_speed 00E5                           _RCONbits 000FD0  
                 __CFG_WDTPS$32768 000000                           _RXB0SIDH 000F61  
                         _RXB0SIDL 000F62                           _RXF0EIDH 000F02  
                         _RXB1SIDH 000F51                           _RXF0EIDL 000F03  
                         _RXB1SIDL 000F52                           _RXF1EIDH 000F06  
                         _RXF1EIDL 000F07                           _RXF2EIDH 000F0A  
                         _RXF2EIDL 000F0B                           _RXF3EIDH 000F0E  
                         _RXF3EIDL 000F0F                           _RXF4EIDH 000F12  
                         _RXF4EIDL 000F13                           _RXF5EIDH 000F16  
                         _RXF5EIDL 000F17                           _RXF0SIDH 000F00  
                         _RXF0SIDL 000F01                           _TXB0EIDH 000F43  
                         _RXF1SIDH 000F04                           _TXB0EIDL 000F44  
                         _RXF1SIDL 000F05                           _TXB1EIDH 000F33  
                         _RXF2SIDH 000F08                           _TXB1EIDL 000F34  
                         _RXF2SIDL 000F09                           _ISR_alta 0008  
                         _TXB2EIDH 000F23                           _RXF3SIDH 000F0C  
                         _TXB2EIDL 000F24                           _RXF3SIDL 000F0D  
                         _RXF4SIDH 000F10                           _RXF4SIDL 000F11  
                         _RXF5SIDH 000F14                           _RXF5SIDL 000F15  
                         _RXM0EIDH 000F1A                           _RXM0EIDL 000F1B  
                         _TXB0SIDH 000F41                           _RXM1EIDH 000F1E  
                         _TXB0SIDL 000F42                           _RXM1EIDL 000F1F  
                         _TXB1SIDH 000F31                           _TXB1SIDL 000F32  
                         _TXB2SIDH 000F21                           _TXB2SIDL 000F22  
                      _LCD_Handler 3E5E                           _RXM0SIDH 000F18  
                         _RXM0SIDL 000F19                           _RXM1SIDH 000F1C  
                         _RXM1SIDL 000F1D                           _RXERRCNT 000F75  
   LCD_write_integer@zero_cleaning 008D                 _parking_message_ID 00E9  
                         _TXERRCNT 000F76                         _ADCON0bits 000FC2  
                      _LCD_Parking 5932                         _ADCON2bits 000FC0  
                ___wmul@multiplier 0072                           _RTR_Flag 0254  
                ?_LCD_send_command 007A                   _actual_speed_kmh 00C3  
                        _user_data 000F                   __size_of_LCD_Gap 0064  
                 __size_of_LCD_End 0064                 ??_LCD_send_command 007D  
                    ?_CANSetFilter 0072                         _CANCONbits 000F6F  
                      _LCD_goto_xy 5FCC                   ??_LCD_write_char 007E  
                LCD_goto_line@line 007E                           __Hrparam 0000  
                     _RXB0SIDLbits 000F62             ??_board_initialization 008C  
        _collision_sensor_distance 0009                           __Lrparam 0000  
                     _RXB1SIDLbits 000F52                   __size_of___fladd 026C  
                       _CANSetMask 352A                   __size_of___fldiv 0136  
                 __size_of___awdiv 00D0                   __size_of___flneg 003C  
                 __size_of___awmod 00B4                   __size_of___flmul 0164  
                ?_LCD_shift_cursor 007E                   __size_of___flsub 0060  
                 __size_of___fltol 011A                   __size_of___lldiv 00C6  
                 __size_of___llmod 00A4                           ___flpack 4A10  
                 __size_of___lwdiv 0082                   __size_of___lwmod 006C  
                         ___awtofl 5BD4                           ___lbtofl 5DD8  
                      _fround$4230 0098                        _fround$4231 0094  
                         ___lltofl 5E44                 ??_LCD_shift_cursor 007F  
                         ___lwtofl 5E78                         sprintf@exp 0144  
                       sprintf@val 0140                       _RXF0SIDLbits 000F01  
                 __size_of_isdigit 002E                           _delay_ms 5D66  
                  ___lwdiv@divisor 0074                       _RXF1SIDLbits 000F05  
                  ___lwdiv@counter 0078                     ??_CANSetFilter 0077  
                 _LCD_enable_pulse 5F8A                           __ptext10 5996  
                         __ptext11 3E5E                           __ptext20 487C  
                         __ptext12 0B2A                           __ptext21 5E44  
                         __ptext13 3002                           __ptext30 4E62  
                         __ptext22 570A                           __ptext14 5F0E  
                         __ptext31 4A10                           __ptext23 5368  
                         __ptext15 38D4                           __ptext40 59FA  
                         __ptext32 450C                           __ptext24 4F98  
                         __ptext16 4CFE                           __ptext41 5A5E  
                         __ptext33 5C20                           __ptext25 5B26  
                         __ptext17 55B2                           __ptext50 5D2C  
                         __ptext42 5AC2                           __ptext34 542E  
                         __ptext26 40D2                           __ptext18 5298  
                         __ptext51 5F8A                           __ptext43 5E0E  
                         __ptext35 58C6                           __ptext27 5CF0  
                         __ptext19 46D6                           __ptext52 5D66  
                         __ptext44 57AE                           __ptext36 5844  
                         __ptext28 50B2                           __ptext53 5DA0  
                         __ptext45 4B90                           __ptext37 5F3C  
                         __ptext29 5E78                           __ptext62 2430  
                         __ptext54 5CAE                           __ptext46 605A  
                         __ptext38 5FCC                           __ptext63 5FAC  
                         __ptext55 602E                           __ptext47 5EAA  
                         __ptext39 5B86                           __ptext64 2AD4  
                         __ptext56 6044                           __ptext48 5EDC  
                         __ptext65 6000                           __ptext57 54F2  
                         __ptext49 51AA                           __ptext58 1C90  
                         __ptext59 5F64                       _RXF2SIDLbits 000F09  
                         __powers_ FD7F                       _RXF3SIDLbits 000F0D  
                 __size_of_sprintf 090C                       _RXF4SIDLbits 000F11  
                     _RXF5SIDLbits 000F15           CANsendMessage@dataLength 0078  
                    __size_of_main 085A                      __size_of_itoa 004C  
                    __size_of_utoa 00C4                  ?i2_CANsendMessage 003A  
             CANreceiveMessage@msg 003A              LCD_shift_cursor@shift 007F  
              i2_CANisTxReady$3251 003A                       _TXB0SIDLbits 000F42  
                Joystick_Polling@i 0072                 ??i2_CANsendMessage 0042  
                     _TXB1SIDLbits 000F32           __end_of_Joystick_Polling 5CF0  
                     _TXB2SIDLbits 000F22          __size_of_CANOperationMode 0018  
                    ?_CANisRxReady 0029                      ?_CANisTxReady 0029  
         __end_of_LCD_write_string 5F64                        _RXB0DLCbits 000F65  
            ___flmul@f3_as_product 008A                        _RXB1DLCbits 000F55  
                     _RXM0SIDLbits 000F19                        _RXB0CONbits 000F60  
                       _LCD_cursor 5EAA                        _RXB1CONbits 000F50  
                _CANreceiveMessage 2AD4                       _RXM1SIDLbits 000F1D  
                       _INTCONbits 000FF2                       _set_steering 0011  
                 ??_CANsendMessage 007A                 ?_CANreceiveMessage 003A  
                         itoa@base 0086                           isdigit@c 0074  
                      _low_battery 0258                           scale@scl 0098  
         CANsendMessage@identifier 0072                       _time_counter 0005  
                         intlevel1 0000                           intlevel2 0000  
                        sprintf@ap 013C                   __tdiv_to_l_@exp1 0082  
                        sprintf@sp 00B3                   __tdiv_to_l_@cntr 0081  
                 CANSetFilter@tamp 007C                   __tdiv_to_l_@quot 007D  
                 CANSetFilter@type 0076                ??_CANreceiveMessage 003C  
                 ___lwmod@dividend 0072                   ___lldiv@dividend 0072  
                      _TXB0DLCbits 000F45                        _right_speed 000D  
                      _TXB1DLCbits 000F35                        _TXB0CONbits 000F40  
                      _TXB2DLCbits 000F25                        _TXB1CONbits 000F30  
                      _TXB2CONbits 000F20                    _display_refresh 0257  
                 ??i2_CANisTxReady 003A               CANOperationMode@mode 0072  
                   ??_CANisRxReady 003A                        ?_CANSetMask 0072  
                   ??_CANisTxReady 0072                       ?__tdiv_to_l_ 0072  
        __end_of_CANreceiveMessage 3002                           utoa@base 007D  
                         sprintf@c 0150                           sprintf@f 00B5  
                 ___lldiv@quotient 007A                    ___lwmod@divisor 0074  
  LCD_shift_cursor@number_of_shift 007E                    ___lwmod@counter 0076  
               _PWR_Button_Polling 6018                      _collision_msg 0256  
                     ___fladd@exp1 00A8                       ___fladd@exp2 00A7  
                     ___fladd@sign 00A6              __end_of_CANInitialize 450C  
              ?_PWR_Button_Polling 0029                       _power_switch 025B  
