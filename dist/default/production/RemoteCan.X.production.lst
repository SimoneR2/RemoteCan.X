

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Jun 01 16:32:33 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    86  0000                     
    87                           	psect	idataBANK0
    88  015F64                     __pidataBANK0:
    89                           	opt stack 0
    90                           
    91                           ;initializer for _delay_quartz_frequency_value
    92  015F64  10                 	db	16
    93                           
    94                           	psect	mediumconst
    95  00FD9E                     __pmediumconst:
    96                           	opt stack 0
    97  00FD9E  00                 	db	0
    98  00FD9F                     __npowers_:
    99                           	opt stack 0
   100  00FD9F  0000               	dw	0
   101  00FDA1  3F80               	dw	16256
   102  00FDA3  CCCD               	dw	52429
   103  00FDA5  3DCC               	dw	15820
   104  00FDA7  D70A               	dw	55050
   105  00FDA9  3C23               	dw	15395
   106  00FDAB  126F               	dw	4719
   107  00FDAD  3A83               	dw	14979
   108  00FDAF  B717               	dw	46871
   109  00FDB1  38D1               	dw	14545
   110  00FDB3  C5AC               	dw	50604
   111  00FDB5  3727               	dw	14119
   112  00FDB7  37BD               	dw	14269
   113  00FDB9  3586               	dw	13702
   114  00FDBB  BF95               	dw	49045
   115  00FDBD  33D6               	dw	13270
   116  00FDBF  CC77               	dw	52343
   117  00FDC1  322B               	dw	12843
   118  00FDC3  705F               	dw	28767
   119  00FDC5  3089               	dw	12425
   120  00FDC7  E6FF               	dw	59135
   121  00FDC9  2EDB               	dw	11995
   122  00FDCB  E508               	dw	58632
   123  00FDCD  1E3C               	dw	7740
   124  00FDCF  4260               	dw	16992
   125  00FDD1  0DA2               	dw	3490
   126  00FDD3                     __end_of__npowers_:
   127                           	opt stack 0
   128  00FDD3                     __powers_:
   129                           	opt stack 0
   130  00FDD3  0000               	dw	0
   131  00FDD5  3F80               	dw	16256
   132  00FDD7  0000               	dw	0
   133  00FDD9  4120               	dw	16672
   134  00FDDB  0000               	dw	0
   135  00FDDD  42C8               	dw	17096
   136  00FDDF  0000               	dw	0
   137  00FDE1  447A               	dw	17530
   138  00FDE3  4000               	dw	16384
   139  00FDE5  461C               	dw	17948
   140  00FDE7  5000               	dw	20480
   141  00FDE9  47C3               	dw	18371
   142  00FDEB  2400               	dw	9216
   143  00FDED  4974               	dw	18804
   144  00FDEF  9680               	dw	38528
   145  00FDF1  4B18               	dw	19224
   146  00FDF3  BC20               	dw	48160
   147  00FDF5  4CBE               	dw	19646
   148  00FDF7  6B28               	dw	27432
   149  00FDF9  4E6E               	dw	20078
   150  00FDFB  02F9               	dw	761
   151  00FDFD  5015               	dw	20501
   152  00FDFF  78EC               	dw	30956
   153  00FE01  60AD               	dw	24749
   154  00FE03  F2CA               	dw	62154
   155  00FE05  7149               	dw	29001
   156  00FE07                     __end_of__powers_:
   157                           	opt stack 0
   158  00FE07                     _dpowers:
   159                           	opt stack 0
   160  00FE07  0001               	dw	1
   161  00FE09  0000               	dw	0
   162  00FE0B  000A               	dw	10
   163  00FE0D  0000               	dw	0
   164  00FE0F  0064               	dw	100
   165  00FE11  0000               	dw	0
   166  00FE13  03E8               	dw	1000
   167  00FE15  0000               	dw	0
   168  00FE17  2710               	dw	10000
   169  00FE19  0000               	dw	0
   170  00FE1B  86A0               	dw	34464
   171  00FE1D  0001               	dw	1
   172  00FE1F  4240               	dw	16960
   173  00FE21  000F               	dw	15
   174  00FE23  9680               	dw	38528
   175  00FE25  0098               	dw	152
   176  00FE27  E100               	dw	57600
   177  00FE29  05F5               	dw	1525
   178  00FE2B  CA00               	dw	51712
   179  00FE2D  3B9A               	dw	15258
   180  00FE2F                     __end_of_dpowers:
   181                           	opt stack 0
   182  0000                     _RXB1CON	set	3920
   183  0000                     _RXB1CONbits	set	3920
   184  0000                     _RXB1D0	set	3926
   185  0000                     _RXB1D1	set	3927
   186  0000                     _RXB1D2	set	3928
   187  0000                     _RXB1D3	set	3929
   188  0000                     _RXB1D4	set	3930
   189  0000                     _RXB1D5	set	3931
   190  0000                     _RXB1D6	set	3932
   191  0000                     _RXB1D7	set	3933
   192  0000                     _RXB1DLC	set	3925
   193  0000                     _RXB1DLCbits	set	3925
   194  0000                     _RXB1EIDH	set	3923
   195  0000                     _RXB1EIDL	set	3924
   196  0000                     _RXB1SIDH	set	3921
   197  0000                     _RXB1SIDL	set	3922
   198  0000                     _RXB1SIDLbits	set	3922
   199  0000                     _RXF0EIDH	set	3842
   200  0000                     _RXF0EIDL	set	3843
   201  0000                     _RXF0SIDH	set	3840
   202  0000                     _RXF0SIDL	set	3841
   203  0000                     _RXF0SIDLbits	set	3841
   204  0000                     _RXF1EIDH	set	3846
   205  0000                     _RXF1EIDL	set	3847
   206  0000                     _RXF1SIDH	set	3844
   207  0000                     _RXF1SIDL	set	3845
   208  0000                     _RXF1SIDLbits	set	3845
   209  0000                     _RXF2EIDH	set	3850
   210  0000                     _RXF2EIDL	set	3851
   211  0000                     _RXF2SIDH	set	3848
   212  0000                     _RXF2SIDL	set	3849
   213  0000                     _RXF2SIDLbits	set	3849
   214  0000                     _RXF3EIDH	set	3854
   215  0000                     _RXF3EIDL	set	3855
   216  0000                     _RXF3SIDH	set	3852
   217  0000                     _RXF3SIDL	set	3853
   218  0000                     _RXF3SIDLbits	set	3853
   219  0000                     _RXF4EIDH	set	3858
   220  0000                     _RXF4EIDL	set	3859
   221  0000                     _RXF4SIDH	set	3856
   222  0000                     _RXF4SIDL	set	3857
   223  0000                     _RXF4SIDLbits	set	3857
   224  0000                     _RXF5EIDH	set	3862
   225  0000                     _RXF5EIDL	set	3863
   226  0000                     _RXF5SIDH	set	3860
   227  0000                     _RXF5SIDL	set	3861
   228  0000                     _RXF5SIDLbits	set	3861
   229  0000                     _RXM0EIDH	set	3866
   230  0000                     _RXM0EIDL	set	3867
   231  0000                     _RXM0SIDH	set	3864
   232  0000                     _RXM0SIDL	set	3865
   233  0000                     _RXM0SIDLbits	set	3865
   234  0000                     _RXM1EIDH	set	3870
   235  0000                     _RXM1EIDL	set	3871
   236  0000                     _RXM1SIDH	set	3868
   237  0000                     _RXM1SIDL	set	3869
   238  0000                     _RXM1SIDLbits	set	3869
   239  0000                     _TXB0CONbits	set	3904
   240  0000                     _TXB0D0	set	3910
   241  0000                     _TXB0D1	set	3911
   242  0000                     _TXB0D2	set	3912
   243  0000                     _TXB0D3	set	3913
   244  0000                     _TXB0D4	set	3914
   245  0000                     _TXB0D5	set	3915
   246  0000                     _TXB0D6	set	3916
   247  0000                     _TXB0D7	set	3917
   248  0000                     _TXB0DLC	set	3909
   249  0000                     _TXB0DLCbits	set	3909
   250  0000                     _TXB0EIDH	set	3907
   251  0000                     _TXB0EIDL	set	3908
   252  0000                     _TXB0SIDH	set	3905
   253  0000                     _TXB0SIDL	set	3906
   254  0000                     _TXB0SIDLbits	set	3906
   255  0000                     _TXB1CONbits	set	3888
   256  0000                     _TXB1D0	set	3894
   257  0000                     _TXB1D1	set	3895
   258  0000                     _TXB1D2	set	3896
   259  0000                     _TXB1D3	set	3897
   260  0000                     _TXB1D4	set	3898
   261  0000                     _TXB1D5	set	3899
   262  0000                     _TXB1D6	set	3900
   263  0000                     _TXB1D7	set	3901
   264  0000                     _TXB1DLC	set	3893
   265  0000                     _TXB1DLCbits	set	3893
   266  0000                     _TXB1EIDH	set	3891
   267  0000                     _TXB1EIDL	set	3892
   268  0000                     _TXB1SIDH	set	3889
   269  0000                     _TXB1SIDL	set	3890
   270  0000                     _TXB1SIDLbits	set	3890
   271  0000                     _TXB2CONbits	set	3872
   272  0000                     _TXB2D0	set	3878
   273  0000                     _TXB2D1	set	3879
   274  0000                     _TXB2D2	set	3880
   275  0000                     _TXB2D3	set	3881
   276  0000                     _TXB2D4	set	3882
   277  0000                     _TXB2D5	set	3883
   278  0000                     _TXB2D6	set	3884
   279  0000                     _TXB2D7	set	3885
   280  0000                     _TXB2DLC	set	3877
   281  0000                     _TXB2DLCbits	set	3877
   282  0000                     _TXB2EIDH	set	3875
   283  0000                     _TXB2EIDL	set	3876
   284  0000                     _TXB2SIDH	set	3873
   285  0000                     _TXB2SIDL	set	3874
   286  0000                     _TXB2SIDLbits	set	3874
   287  0000                     _ADCON0bits	set	4034
   288  0000                     _ADCON1	set	4033
   289  0000                     _ADCON2bits	set	4032
   290  0000                     _ADRESH	set	4036
   291  0000                     _BRGCON1	set	3952
   292  0000                     _BRGCON2	set	3953
   293  0000                     _BRGCON2bits	set	3953
   294  0000                     _BRGCON3	set	3954
   295  0000                     _BRGCON3bits	set	3954
   296  0000                     _CANCON	set	3951
   297  0000                     _CANCONbits	set	3951
   298  0000                     _CANSTAT	set	3950
   299  0000                     _COMSTATbits	set	3956
   300  0000                     _INTCONbits	set	4082
   301  0000                     _IPR2bits	set	4002
   302  0000                     _IPR3bits	set	4005
   303  0000                     _LATA	set	3977
   304  0000                     _LATB	set	3978
   305  0000                     _LATC	set	3979
   306  0000                     _LATCbits	set	3979
   307  0000                     _LATD	set	3980
   308  0000                     _LATDbits	set	3980
   309  0000                     _LATE	set	3981
   310  0000                     _LATEbits	set	3981
   311  0000                     _PIE2bits	set	4000
   312  0000                     _PIE3bits	set	4003
   313  0000                     _PIR2bits	set	4001
   314  0000                     _PIR3bits	set	4004
   315  0000                     _PORTAbits	set	3968
   316  0000                     _PORTBbits	set	3969
   317  0000                     _PORTDbits	set	3971
   318  0000                     _RCONbits	set	4048
   319  0000                     _RXB0CON	set	3936
   320  0000                     _RXB0CONbits	set	3936
   321  0000                     _RXB0D0	set	3942
   322  0000                     _RXB0D1	set	3943
   323  0000                     _RXB0D2	set	3944
   324  0000                     _RXB0D3	set	3945
   325  0000                     _RXB0D4	set	3946
   326  0000                     _RXB0D5	set	3947
   327  0000                     _RXB0D6	set	3948
   328  0000                     _RXB0D7	set	3949
   329  0000                     _RXB0DLC	set	3941
   330  0000                     _RXB0DLCbits	set	3941
   331  0000                     _RXB0EIDH	set	3939
   332  0000                     _RXB0EIDL	set	3940
   333  0000                     _RXB0SIDH	set	3937
   334  0000                     _RXB0SIDL	set	3938
   335  0000                     _RXB0SIDLbits	set	3938
   336  0000                     _RXERRCNT	set	3957
   337  0000                     _T3CON	set	4017
   338  0000                     _TMR3H	set	4019
   339  0000                     _TMR3L	set	4018
   340  0000                     _TRISA	set	3986
   341  0000                     _TRISB	set	3987
   342  0000                     _TRISC	set	3988
   343  0000                     _TRISD	set	3989
   344  0000                     _TRISE	set	3990
   345  0000                     _TXERRCNT	set	3958
   346  00FE2F                     STR_34:
   347  00FE2F  20                 	db	32
   348  00FE30  20                 	db	32
   349  00FE31  20                 	db	32
   350  00FE32  20                 	db	32
   351  00FE33  20                 	db	32
   352  00FE34  20                 	db	32
   353  00FE35  20                 	db	32
   354  00FE36  46                 	db	70	;'F'
   355  00FE37  41                 	db	65	;'A'
   356  00FE38  49                 	db	73	;'I'
   357  00FE39  4C                 	db	76	;'L'
   358  00FE3A  45                 	db	69	;'E'
   359  00FE3B  44                 	db	68	;'D'
   360  00FE3C  21                 	db	33
   361  00FE3D  20                 	db	32
   362  00FE3E  20                 	db	32
   363  00FE3F  20                 	db	32
   364  00FE40  20                 	db	32
   365  00FE41  20                 	db	32
   366  00FE42  20                 	db	32
   367  00FE43  00                 	db	0
   368  00FE44                     STR_31:
   369  00FE44  20                 	db	32
   370  00FE45  20                 	db	32
   371  00FE46  20                 	db	32
   372  00FE47  20                 	db	32
   373  00FE48  20                 	db	32
   374  00FE49  43                 	db	67	;'C'
   375  00FE4A  4F                 	db	79	;'O'
   376  00FE4B  4D                 	db	77	;'M'
   377  00FE4C  50                 	db	80	;'P'
   378  00FE4D  4C                 	db	76	;'L'
   379  00FE4E  45                 	db	69	;'E'
   380  00FE4F  54                 	db	84	;'T'
   381  00FE50  45                 	db	69	;'E'
   382  00FE51  44                 	db	68	;'D'
   383  00FE52  21                 	db	33
   384  00FE53  20                 	db	32
   385  00FE54  20                 	db	32
   386  00FE55  20                 	db	32
   387  00FE56  20                 	db	32
   388  00FE57  20                 	db	32
   389  00FE58  00                 	db	0
   390  00FE59                     STR_30:
   391  00FE59  20                 	db	32
   392  00FE5A  20                 	db	32
   393  00FE5B  20                 	db	32
   394  00FE5C  20                 	db	32
   395  00FE5D  53                 	db	83	;'S'
   396  00FE5E  55                 	db	85	;'U'
   397  00FE5F  43                 	db	67	;'C'
   398  00FE60  43                 	db	67	;'C'
   399  00FE61  45                 	db	69	;'E'
   400  00FE62  53                 	db	83	;'S'
   401  00FE63  53                 	db	83	;'S'
   402  00FE64  46                 	db	70	;'F'
   403  00FE65  55                 	db	85	;'U'
   404  00FE66  4C                 	db	76	;'L'
   405  00FE67  4C                 	db	76	;'L'
   406  00FE68  59                 	db	89	;'Y'
   407  00FE69  20                 	db	32
   408  00FE6A  20                 	db	32
   409  00FE6B  20                 	db	32
   410  00FE6C  20                 	db	32
   411  00FE6D  00                 	db	0
   412  00FE6E                     STR_23:
   413  00FE6E  20                 	db	32
   414  00FE6F  20                 	db	32
   415  00FE70  20                 	db	32
   416  00FE71  73                 	db	115	;'s'
   417  00FE72  74                 	db	116	;'t'
   418  00FE73  61                 	db	97	;'a'
   419  00FE74  72                 	db	114	;'r'
   420  00FE75  74                 	db	116	;'t'
   421  00FE76  20                 	db	32
   422  00FE77  70                 	db	112	;'p'
   423  00FE78  61                 	db	97	;'a'
   424  00FE79  72                 	db	114	;'r'
   425  00FE7A  6B                 	db	107	;'k'
   426  00FE7B  69                 	db	105	;'i'
   427  00FE7C  6E                 	db	110	;'n'
   428  00FE7D  67                 	db	103	;'g'
   429  00FE7E  20                 	db	32
   430  00FE7F  20                 	db	32
   431  00FE80  20                 	db	32
   432  00FE81  20                 	db	32
   433  00FE82  00                 	db	0
   434  00FE83                     STR_3:
   435  00FE83  20                 	db	32
   436  00FE84  20                 	db	32
   437  00FE85  50                 	db	80	;'P'
   438  00FE86  72                 	db	114	;'r'
   439  00FE87  65                 	db	101	;'e'
   440  00FE88  73                 	db	115	;'s'
   441  00FE89  73                 	db	115	;'s'
   442  00FE8A  20                 	db	32
   443  00FE8B  74                 	db	116	;'t'
   444  00FE8C  68                 	db	104	;'h'
   445  00FE8D  65                 	db	101	;'e'
   446  00FE8E  20                 	db	32
   447  00FE8F  62                 	db	98	;'b'
   448  00FE90  75                 	db	117	;'u'
   449  00FE91  74                 	db	116	;'t'
   450  00FE92  74                 	db	116	;'t'
   451  00FE93  6F                 	db	111	;'o'
   452  00FE94  6E                 	db	110	;'n'
   453  00FE95  20                 	db	32
   454  00FE96  20                 	db	32
   455  00FE97  00                 	db	0
   456  00FE98                     STR_35:
   457  00FE98  20                 	db	32
   458  00FE99  20                 	db	32
   459  00FE9A  20                 	db	32
   460  00FE9B  64                 	db	100	;'d'
   461  00FE9C  75                 	db	117	;'u'
   462  00FE9D  65                 	db	101	;'e'
   463  00FE9E  20                 	db	32
   464  00FE9F  74                 	db	116	;'t'
   465  00FEA0  6F                 	db	111	;'o'
   466  00FEA1  20                 	db	32
   467  00FEA2  61                 	db	97	;'a'
   468  00FEA3  6E                 	db	110	;'n'
   469  00FEA4  20                 	db	32
   470  00FEA5  65                 	db	101	;'e'
   471  00FEA6  72                 	db	114	;'r'
   472  00FEA7  72                 	db	114	;'r'
   473  00FEA8  6F                 	db	111	;'o'
   474  00FEA9  72                 	db	114	;'r'
   475  00FEAA  20                 	db	32
   476  00FEAB  20                 	db	32
   477  00FEAC  00                 	db	0
   478  00FEAD                     STR_19:
   479  00FEAD  20                 	db	32
   480  00FEAE  75                 	db	117	;'u'
   481  00FEAF  6E                 	db	110	;'n'
   482  00FEB0  74                 	db	116	;'t'
   483  00FEB1  69                 	db	105	;'i'
   484  00FEB2  6C                 	db	108	;'l'
   485  00FEB3  20                 	db	32
   486  00FEB4  6E                 	db	110	;'n'
   487  00FEB5  65                 	db	101	;'e'
   488  00FEB6  78                 	db	120	;'x'
   489  00FEB7  74                 	db	116	;'t'
   490  00FEB8  20                 	db	32
   491  00FEB9  6D                 	db	109	;'m'
   492  00FEBA  65                 	db	101	;'e'
   493  00FEBB  73                 	db	115	;'s'
   494  00FEBC  73                 	db	115	;'s'
   495  00FEBD  61                 	db	97	;'a'
   496  00FEBE  67                 	db	103	;'g'
   497  00FEBF  65                 	db	101	;'e'
   498  00FEC0  20                 	db	32
   499  00FEC1  00                 	db	0
   500  00FEC2                     STR_22:
   501  00FEC2  50                 	db	80	;'P'
   502  00FEC3  72                 	db	114	;'r'
   503  00FEC4  65                 	db	101	;'e'
   504  00FEC5  73                 	db	115	;'s'
   505  00FEC6  73                 	db	115	;'s'
   506  00FEC7  20                 	db	32
   507  00FEC8  74                 	db	116	;'t'
   508  00FEC9  68                 	db	104	;'h'
   509  00FECA  65                 	db	101	;'e'
   510  00FECB  20                 	db	32
   511  00FECC  42                 	db	66	;'B'
   512  00FECD  55                 	db	85	;'U'
   513  00FECE  54                 	db	84	;'T'
   514  00FECF  54                 	db	84	;'T'
   515  00FED0  4F                 	db	79	;'O'
   516  00FED1  4E                 	db	78	;'N'
   517  00FED2  20                 	db	32
   518  00FED3  74                 	db	116	;'t'
   519  00FED4  6F                 	db	111	;'o'
   520  00FED5  20                 	db	32
   521  00FED6  00                 	db	0
   522  00FED7                     STR_29:
   523  00FED7  20                 	db	32
   524  00FED8  50                 	db	80	;'P'
   525  00FED9  61                 	db	97	;'a'
   526  00FEDA  72                 	db	114	;'r'
   527  00FEDB  6B                 	db	107	;'k'
   528  00FEDC  69                 	db	105	;'i'
   529  00FEDD  6E                 	db	110	;'n'
   530  00FEDE  67                 	db	103	;'g'
   531  00FEDF  20                 	db	32
   532  00FEE0  70                 	db	112	;'p'
   533  00FEE1  72                 	db	114	;'r'
   534  00FEE2  6F                 	db	111	;'o'
   535  00FEE3  63                 	db	99	;'c'
   536  00FEE4  65                 	db	101	;'e'
   537  00FEE5  64                 	db	100	;'d'
   538  00FEE6  75                 	db	117	;'u'
   539  00FEE7  72                 	db	114	;'r'
   540  00FEE8  65                 	db	101	;'e'
   541  00FEE9  73                 	db	115	;'s'
   542  00FEEA  20                 	db	32
   543  00FEEB  00                 	db	0
   544  00FEEC                     STR_21:
   545  00FEEC  2D                 	db	45
   546  00FEED  20                 	db	32
   547  00FEEE  44                 	db	68	;'D'
   548  00FEEF  69                 	db	105	;'i'
   549  00FEF0  73                 	db	115	;'s'
   550  00FEF1  74                 	db	116	;'t'
   551  00FEF2  61                 	db	97	;'a'
   552  00FEF3  6E                 	db	110	;'n'
   553  00FEF4  63                 	db	99	;'c'
   554  00FEF5  65                 	db	101	;'e'
   555  00FEF6  20                 	db	32
   556  00FEF7  52                 	db	82	;'R'
   557  00FEF8  45                 	db	69	;'E'
   558  00FEF9  41                 	db	65	;'A'
   559  00FEFA  43                 	db	67	;'C'
   560  00FEFB  48                 	db	72	;'H'
   561  00FEFC  45                 	db	69	;'E'
   562  00FEFD  44                 	db	68	;'D'
   563  00FEFE  20                 	db	32
   564  00FEFF  2D                 	db	45
   565  00FF00  00                 	db	0
   566  00FF01                     STR_18:
   567  00FF01  2D                 	db	45
   568  00FF02  3E                 	db	62	;'>'
   569  00FF03  20                 	db	32
   570  00FF04  20                 	db	32
   571  00FF05  4B                 	db	75	;'K'
   572  00FF06  45                 	db	69	;'E'
   573  00FF07  45                 	db	69	;'E'
   574  00FF08  50                 	db	80	;'P'
   575  00FF09  20                 	db	32
   576  00FF0A  4D                 	db	77	;'M'
   577  00FF0B  4F                 	db	79	;'O'
   578  00FF0C  56                 	db	86	;'V'
   579  00FF0D  49                 	db	73	;'I'
   580  00FF0E  4E                 	db	78	;'N'
   581  00FF0F  47                 	db	71	;'G'
   582  00FF10  20                 	db	32
   583  00FF11  20                 	db	32
   584  00FF12  20                 	db	32
   585  00FF13  3C                 	db	60	;'<'
   586  00FF14  2D                 	db	45
   587  00FF15  00                 	db	0
   588  00FF16                     STR_25:
   589  00FF16  3D                 	db	61	;'='
   590  00FF17  20                 	db	32
   591  00FF18  20                 	db	32
   592  00FF19  20                 	db	32
   593  00FF1A  20                 	db	32
   594  00FF1B  50                 	db	80	;'P'
   595  00FF1C  61                 	db	97	;'a'
   596  00FF1D  72                 	db	114	;'r'
   597  00FF1E  6B                 	db	107	;'k'
   598  00FF1F  69                 	db	105	;'i'
   599  00FF20  6E                 	db	110	;'n'
   600  00FF21  67                 	db	103	;'g'
   601  00FF22  20                 	db	32
   602  00FF23  69                 	db	105	;'i'
   603  00FF24  6E                 	db	110	;'n'
   604  00FF25  20                 	db	32
   605  00FF26  20                 	db	32
   606  00FF27  20                 	db	32
   607  00FF28  20                 	db	32
   608  00FF29  3D                 	db	61	;'='
   609  00FF2A  00                 	db	0
   610  00FF2B                     STR_26:
   611  00FF2B  3D                 	db	61	;'='
   612  00FF2C  20                 	db	32
   613  00FF2D  20                 	db	32
   614  00FF2E  20                 	db	32
   615  00FF2F  20                 	db	32
   616  00FF30  70                 	db	112	;'p'
   617  00FF31  72                 	db	114	;'r'
   618  00FF32  6F                 	db	111	;'o'
   619  00FF33  67                 	db	103	;'g'
   620  00FF34  72                 	db	114	;'r'
   621  00FF35  65                 	db	101	;'e'
   622  00FF36  73                 	db	115	;'s'
   623  00FF37  73                 	db	115	;'s'
   624  00FF38  2E                 	db	46
   625  00FF39  2E                 	db	46
   626  00FF3A  2E                 	db	46
   627  00FF3B  20                 	db	32
   628  00FF3C  20                 	db	32
   629  00FF3D  20                 	db	32
   630  00FF3E  3D                 	db	61	;'='
   631  00FF3F  00                 	db	0
   632  00FF40                     STR_16:
   633  00FF40  3D                 	db	61	;'='
   634  00FF41  20                 	db	32
   635  00FF42  50                 	db	80	;'P'
   636  00FF43  41                 	db	65	;'A'
   637  00FF44  52                 	db	82	;'R'
   638  00FF45  4B                 	db	75	;'K'
   639  00FF46  49                 	db	73	;'I'
   640  00FF47  4E                 	db	78	;'N'
   641  00FF48  47                 	db	71	;'G'
   642  00FF49  20                 	db	32
   643  00FF4A  4D                 	db	77	;'M'
   644  00FF4B  45                 	db	69	;'E'
   645  00FF4C  53                 	db	83	;'S'
   646  00FF4D  53                 	db	83	;'S'
   647  00FF4E  41                 	db	65	;'A'
   648  00FF4F  47                 	db	71	;'G'
   649  00FF50  45                 	db	69	;'E'
   650  00FF51  53                 	db	83	;'S'
   651  00FF52  20                 	db	32
   652  00FF53  3D                 	db	61	;'='
   653  00FF54  00                 	db	0
   654  00FF55                     STR_2:
   655  00FF55  3D                 	db	61	;'='
   656  00FF56  3D                 	db	61	;'='
   657  00FF57  3E                 	db	62	;'>'
   658  00FF58  20                 	db	32
   659  00FF59  56                 	db	86	;'V'
   660  00FF5A  45                 	db	69	;'E'
   661  00FF5B  48                 	db	72	;'H'
   662  00FF5C  49                 	db	73	;'I'
   663  00FF5D  43                 	db	67	;'C'
   664  00FF5E  4C                 	db	76	;'L'
   665  00FF5F  45                 	db	69	;'E'
   666  00FF60  20                 	db	32
   667  00FF61  20                 	db	32
   668  00FF62  4F                 	db	79	;'O'
   669  00FF63  46                 	db	70	;'F'
   670  00FF64  46                 	db	70	;'F'
   671  00FF65  20                 	db	32
   672  00FF66  3C                 	db	60	;'<'
   673  00FF67  3D                 	db	61	;'='
   674  00FF68  3D                 	db	61	;'='
   675  00FF69  00                 	db	0
   676  00FF6A                     STR_6:
   677  00FF6A  3D                 	db	61	;'='
   678  00FF6B  3D                 	db	61	;'='
   679  00FF6C  3D                 	db	61	;'='
   680  00FF6D  20                 	db	32
   681  00FF6E  56                 	db	86	;'V'
   682  00FF6F  45                 	db	69	;'E'
   683  00FF70  48                 	db	72	;'H'
   684  00FF71  49                 	db	73	;'I'
   685  00FF72  43                 	db	67	;'C'
   686  00FF73  4C                 	db	76	;'L'
   687  00FF74  45                 	db	69	;'E'
   688  00FF75  20                 	db	32
   689  00FF76  44                 	db	68	;'D'
   690  00FF77  41                 	db	65	;'A'
   691  00FF78  54                 	db	84	;'T'
   692  00FF79  41                 	db	65	;'A'
   693  00FF7A  20                 	db	32
   694  00FF7B  3D                 	db	61	;'='
   695  00FF7C  3D                 	db	61	;'='
   696  00FF7D  3D                 	db	61	;'='
   697  00FF7E  00                 	db	0
   698  00FF7F                     STR_1:
   699  00FF7F  3D                 	db	61	;'='
   700  00FF80  3D                 	db	61	;'='
   701  00FF81  3D                 	db	61	;'='
   702  00FF82  3D                 	db	61	;'='
   703  00FF83  3D                 	db	61	;'='
   704  00FF84  3D                 	db	61	;'='
   705  00FF85  3D                 	db	61	;'='
   706  00FF86  3D                 	db	61	;'='
   707  00FF87  3D                 	db	61	;'='
   708  00FF88  3D                 	db	61	;'='
   709  00FF89  3D                 	db	61	;'='
   710  00FF8A  3D                 	db	61	;'='
   711  00FF8B  3D                 	db	61	;'='
   712  00FF8C  3D                 	db	61	;'='
   713  00FF8D  3D                 	db	61	;'='
   714  00FF8E  3D                 	db	61	;'='
   715  00FF8F  3D                 	db	61	;'='
   716  00FF90  3D                 	db	61	;'='
   717  00FF91  3D                 	db	61	;'='
   718  00FF92  3D                 	db	61	;'='
   719  00FF93  00                 	db	0
   720  00FF94                     STR_17:
   721  00FF94  20                 	db	32
   722  00FF95  50                 	db	80	;'P'
   723  00FF96  61                 	db	97	;'a'
   724  00FF97  72                 	db	114	;'r'
   725  00FF98  6B                 	db	107	;'k'
   726  00FF99  69                 	db	105	;'i'
   727  00FF9A  6E                 	db	110	;'n'
   728  00FF9B  67                 	db	103	;'g'
   729  00FF9C  20                 	db	32
   730  00FF9D  73                 	db	115	;'s'
   731  00FF9E  70                 	db	112	;'p'
   732  00FF9F  61                 	db	97	;'a'
   733  00FFA0  63                 	db	99	;'c'
   734  00FFA1  65                 	db	101	;'e'
   735  00FFA2  20                 	db	32
   736  00FFA3  46                 	db	70	;'F'
   737  00FFA4  4F                 	db	79	;'O'
   738  00FFA5  55                 	db	85	;'U'
   739  00FFA6  4E                 	db	78	;'N'
   740  00FFA7  44                 	db	68	;'D'
   741  00FFA8  00                 	db	0
   742  00FFA9                     STR_8:
   743  00FFA9  53                 	db	83	;'S'
   744  00FFAA  70                 	db	112	;'p'
   745  00FFAB  65                 	db	101	;'e'
   746  00FFAC  65                 	db	101	;'e'
   747  00FFAD  64                 	db	100	;'d'
   748  00FFAE  3A                 	db	58	;':'
   749  00FFAF  20                 	db	32
   750  00FFB0  30                 	db	48	;'0'
   751  00FFB1  2E                 	db	46
   752  00FFB2  30                 	db	48	;'0'
   753  00FFB3  30                 	db	48	;'0'
   754  00FFB4  20                 	db	32
   755  00FFB5  4B                 	db	75	;'K'
   756  00FFB6  6D                 	db	109	;'m'
   757  00FFB7  2F                 	db	47
   758  00FFB8  68                 	db	104	;'h'
   759  00FFB9  00                 	db	0
   760  00FFBA                     STR_9:
   761  00FFBA  50                 	db	80	;'P'
   762  00FFBB  61                 	db	97	;'a'
   763  00FFBC  72                 	db	114	;'r'
   764  00FFBD  6B                 	db	107	;'k'
   765  00FFBE  20                 	db	32
   766  00FFBF  61                 	db	97	;'a'
   767  00FFC0  73                 	db	115	;'s'
   768  00FFC1  73                 	db	115	;'s'
   769  00FFC2  69                 	db	105	;'i'
   770  00FFC3  73                 	db	115	;'s'
   771  00FFC4  74                 	db	116	;'t'
   772  00FFC5  3A                 	db	58	;':'
   773  00FFC6  20                 	db	32
   774  00FFC7  00                 	db	0
   775  00FFC8                     STR_7:
   776  00FFC8  44                 	db	68	;'D'
   777  00FFC9  69                 	db	105	;'i'
   778  00FFCA  72                 	db	114	;'r'
   779  00FFCB  65                 	db	101	;'e'
   780  00FFCC  63                 	db	99	;'c'
   781  00FFCD  74                 	db	116	;'t'
   782  00FFCE  69                 	db	105	;'i'
   783  00FFCF  6F                 	db	111	;'o'
   784  00FFD0  6E                 	db	110	;'n'
   785  00FFD1  3A                 	db	58	;':'
   786  00FFD2  20                 	db	32
   787  00FFD3  00                 	db	0
   788  00FFD4                     STR_14:
   789  00FFD4  4F                 	db	79	;'O'
   790  00FFD5  46                 	db	70	;'F'
   791  00FFD6  46                 	db	70	;'F'
   792  00FFD7  20                 	db	32
   793  00FFD8  20                 	db	32
   794  00FFD9  20                 	db	32
   795  00FFDA  20                 	db	32
   796  00FFDB  00                 	db	0
   797  00FFDC                     STR_15:
   798  00FFDC  53                 	db	83	;'S'
   799  00FFDD  45                 	db	69	;'E'
   800  00FFDE  41                 	db	65	;'A'
   801  00FFDF  52                 	db	82	;'R'
   802  00FFE0  43                 	db	67	;'C'
   803  00FFE1  48                 	db	72	;'H'
   804  00FFE2  20                 	db	32
   805  00FFE3  00                 	db	0
   806  00FFE4                     STR_10:
   807  00FFE4  44                 	db	68	;'D'
   808  00FFE5  61                 	db	97	;'a'
   809  00FFE6  74                 	db	116	;'t'
   810  00FFE7  61                 	db	97	;'a'
   811  00FFE8  3A                 	db	58	;':'
   812  00FFE9  20                 	db	32
   813  00FFEA  00                 	db	0
   814  00FFEB                     STR_13:
   815  00FFEB  50                 	db	80	;'P'
   816  00FFEC  20                 	db	32
   817  00FFED  20                 	db	32
   818  00FFEE  20                 	db	32
   819  00FFEF  00                 	db	0
   820  00FFF0                     STR_11:
   821  00FFF0  46                 	db	70	;'F'
   822  00FFF1  57                 	db	87	;'W'
   823  00FFF2  44                 	db	68	;'D'
   824  00FFF3  20                 	db	32
   825  00FFF4  00                 	db	0
   826  00FFF5                     STR_12:
   827  00FFF5  42                 	db	66	;'B'
   828  00FFF6  4B                 	db	75	;'K'
   829  00FFF7  57                 	db	87	;'W'
   830  00FFF8  44                 	db	68	;'D'
   831  00FFF9  00                 	db	0
   832  00FFFA                     STR_5:
   833  00FFFA  25                 	db	37
   834  00FFFB  2E                 	db	46
   835  00FFFC  32                 	db	50	;'2'
   836  00FFFD  66                 	db	102	;'f'
   837  00FFFE  00                 	db	0
   838  0000                     
   839                           ; #config settings
   840  00FFFF  00                 	db	0	; dummy byte at the end
   841  0000                     
   842                           	psect	cinit
   843  015B6C                     __pcinit:
   844                           	opt stack 0
   845  015B6C                     start_initialization:
   846                           	opt stack 0
   847  015B6C                     __initialization:
   848                           	opt stack 0
   849                           
   850                           ; Clear objects allocated to BANK1 (61 bytes)
   851  015B6C  EE01  F000         	lfsr	0,__pbssBANK1
   852  015B70  0E3D               	movlw	61
   853  015B72                     clear_0:
   854  015B72  6AEE               	clrf	postinc0,c
   855  015B74  06E8               	decf	wreg,f,c
   856  015B76  E1FD               	bnz	clear_0
   857                           
   858                           ; Clear objects allocated to BANK0 (49 bytes)
   859  015B78  EE00  F0BB         	lfsr	0,__pbssBANK0
   860  015B7C  0E31               	movlw	49
   861  015B7E                     clear_1:
   862  015B7E  6AEE               	clrf	postinc0,c
   863  015B80  06E8               	decf	wreg,f,c
   864  015B82  E1FD               	bnz	clear_1
   865                           
   866                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   867  015B84  6A4C               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   868  015B86  6A4B               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   869  015B88  6A4A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   870                           
   871                           ; Clear objects allocated to COMRAM (39 bytes)
   872  015B8A  EE00  F001         	lfsr	0,__pbssCOMRAM
   873  015B8E  0E27               	movlw	39
   874  015B90                     clear_2:
   875  015B90  6AEE               	clrf	postinc0,c
   876  015B92  06E8               	decf	wreg,f,c
   877  015B94  E1FD               	bnz	clear_2
   878                           
   879                           ; Initialize objects allocated to BANK0 (1 bytes)
   880                           ; load TBLPTR registers with __pidataBANK0
   881  015B96  0E64               	movlw	low __pidataBANK0
   882  015B98  6EF6               	movwf	tblptrl,c
   883  015B9A  0E5F               	movlw	high __pidataBANK0
   884  015B9C  6EF7               	movwf	tblptrh,c
   885  015B9E  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   886  015BA0  6EF8               	movwf	tblptru,c
   887  015BA2  0009               	tblrd		*+	;fetch initializer
   888  015BA4  CFF5 F0EC          	movff	tablat,__pdataBANK0
   889  015BA8                     end_of_initialization:
   890                           	opt stack 0
   891  015BA8                     __end_of__initialization:
   892                           	opt stack 0
   893  015BA8  0100               	movlb	0
   894  015BAA  EFEB  F08D         	goto	_main	;jump to C main() function
   895                           tblptru	equ	0xFF8
   896                           tblptrh	equ	0xFF7
   897                           tblptrl	equ	0xFF6
   898                           tablat	equ	0xFF5
   899                           postinc0	equ	0xFEE
   900                           wreg	equ	0xFE8
   901                           
   902                           	psect	bitbssCOMRAM
   903  000250                     __pbitbssCOMRAM:
   904                           	opt stack 0
   905  000250                     _AbsFlag:
   906                           	opt stack 0
   907  000250                     	ds	1
   908  000251                     _BKWD_sensor:
   909                           	opt stack 0
   910  000251                     	ds	1
   911  000252                     _Can_Tx_Force:
   912                           	opt stack 0
   913  000252                     	ds	1
   914  000253                     _F1_switch:
   915                           	opt stack 0
   916  000253                     	ds	1
   917  000254                     _F2_switch:
   918                           	opt stack 0
   919  000254                     	ds	1
   920  000255                     _FWD_sensor:
   921                           	opt stack 0
   922  000255                     	ds	1
   923  000256                     _MotoreFlag:
   924                           	opt stack 0
   925  000256                     	ds	1
   926  000257                     _RTR_Flag:
   927                           	opt stack 0
   928  000257                     	ds	1
   929  000258                     _SterzoFlag:
   930                           	opt stack 0
   931  000258                     	ds	1
   932  000259                     _collision_risk:
   933                           	opt stack 0
   934  000259                     	ds	1
   935  00025A                     _display_refresh:
   936                           	opt stack 0
   937  00025A                     	ds	1
   938  00025B                     _newMessageCan:
   939                           	opt stack 0
   940  00025B                     	ds	1
   941  00025C                     _parking_error:
   942                           	opt stack 0
   943  00025C                     	ds	1
   944  00025D                     _parking_message_E:
   945                           	opt stack 0
   946  00025D                     	ds	1
   947  00025E                     _power_switch:
   948                           	opt stack 0
   949  00025E                     	ds	1
   950  00025F                     _space_available:
   951                           	opt stack 0
   952  00025F                     	ds	1
   953  000260                     _space_gap_reached:
   954                           	opt stack 0
   955  000260                     	ds	1
   956  000261                     _steering_correction_dir:
   957                           	opt stack 0
   958  000261                     	ds	1
   959  000262                     _wait_low_1:
   960                           	opt stack 0
   961  000262                     	ds	1
   962  000263                     _wait_low_2:
   963                           	opt stack 0
   964  000263                     	ds	1
   965  000264                     _wait_low_3:
   966                           	opt stack 0
   967  000264                     	ds	1
   968  000265                     _x:
   969                           	opt stack 0
   970  000265                     	ds	1
   971  000266                     _y:
   972                           	opt stack 0
   973  000266                     	ds	1
   974  000267                     _z:
   975                           	opt stack 0
   976  000267                     	ds	1
   977                           tblptru	equ	0xFF8
   978                           tblptrh	equ	0xFF7
   979                           tblptrl	equ	0xFF6
   980                           tablat	equ	0xFF5
   981                           postinc0	equ	0xFEE
   982                           wreg	equ	0xFE8
   983                           
   984                           	psect	bssCOMRAM
   985  000001                     __pbssCOMRAM:
   986                           	opt stack 0
   987  000001                     _id:
   988                           	opt stack 0
   989  000001                     	ds	4
   990  000005                     _time_counter:
   991                           	opt stack 0
   992  000005                     	ds	4
   993  000009                     _left_speed:
   994                           	opt stack 0
   995  000009                     	ds	2
   996  00000B                     _right_speed:
   997                           	opt stack 0
   998  00000B                     	ds	2
   999  00000D                     _user_data:
  1000                           	opt stack 0
  1001  00000D                     	ds	2
  1002  00000F                     _battery:
  1003                           	opt stack 0
  1004  00000F                     	ds	1
  1005  000010                     _set_steering:
  1006                           	opt stack 0
  1007  000010                     	ds	1
  1008  000011                     _msg:
  1009                           	opt stack 0
  1010  000011                     	ds	15
  1011  000020                     _data_brake:
  1012                           	opt stack 0
  1013  000020                     	ds	8
  1014                           tblptru	equ	0xFF8
  1015                           tblptrh	equ	0xFF7
  1016                           tblptrl	equ	0xFF6
  1017                           tablat	equ	0xFF5
  1018                           postinc0	equ	0xFEE
  1019                           wreg	equ	0xFE8
  1020                           
  1021                           	psect	bssBANK0
  1022  0000BB                     __pbssBANK0:
  1023                           	opt stack 0
  1024  0000BB                     _JoystickConstants:
  1025                           	opt stack 0
  1026  0000BB                     	ds	8
  1027  0000C3                     _actual_speed_kmh:
  1028                           	opt stack 0
  1029  0000C3                     	ds	4
  1030  0000C7                     _check:
  1031                           	opt stack 0
  1032  0000C7                     	ds	4
  1033  0000CB                     _pr_time_1:
  1034                           	opt stack 0
  1035  0000CB                     	ds	4
  1036  0000CF                     _pr_time_2:
  1037                           	opt stack 0
  1038  0000CF                     	ds	4
  1039  0000D3                     _pr_time_3:
  1040                           	opt stack 0
  1041  0000D3                     	ds	4
  1042  0000D7                     _pr_time_5:
  1043                           	opt stack 0
  1044  0000D7                     	ds	4
  1045  0000DB                     _pr_time_6:
  1046                           	opt stack 0
  1047  0000DB                     	ds	4
  1048  0000DF                     _JoystickValues:
  1049                           	opt stack 0
  1050  0000DF                     	ds	2
  1051  0000E1                     _actual_speed:
  1052                           	opt stack 0
  1053  0000E1                     	ds	2
  1054  0000E3                     _clock_counter_reference:
  1055                           	opt stack 0
  1056  0000E3                     	ds	2
  1057  0000E5                     _set_speed:
  1058                           	opt stack 0
  1059  0000E5                     	ds	2
  1060  0000E7                     _dir:
  1061                           	opt stack 0
  1062  0000E7                     	ds	1
  1063  0000E8                     _parking_message_ID:
  1064                           	opt stack 0
  1065  0000E8                     	ds	1
  1066  0000E9                     _parking_state:
  1067                           	opt stack 0
  1068  0000E9                     	ds	1
  1069  0000EA                     _steering_correction:
  1070                           	opt stack 0
  1071  0000EA                     	ds	1
  1072  0000EB                     _switch_position:
  1073                           	opt stack 0
  1074  0000EB                     	ds	1
  1075                           tblptru	equ	0xFF8
  1076                           tblptrh	equ	0xFF7
  1077                           tblptrl	equ	0xFF6
  1078                           tablat	equ	0xFF5
  1079                           postinc0	equ	0xFEE
  1080                           wreg	equ	0xFE8
  1081                           
  1082                           	psect	dataBANK0
  1083  0000EC                     __pdataBANK0:
  1084                           	opt stack 0
  1085  0000EC                     _delay_quartz_frequency_value:
  1086                           	opt stack 0
  1087  0000EC                     	ds	1
  1088                           tblptru	equ	0xFF8
  1089                           tblptrh	equ	0xFF7
  1090                           tblptrl	equ	0xFF6
  1091                           tablat	equ	0xFF5
  1092                           postinc0	equ	0xFEE
  1093                           wreg	equ	0xFE8
  1094                           
  1095                           	psect	bssBANK1
  1096  000100                     __pbssBANK1:
  1097                           	opt stack 0
  1098  000100                     _data_speed_rx:
  1099                           	opt stack 0
  1100  000100                     	ds	7
  1101  000107                     LCD_write_integer@F17326:
  1102                           	opt stack 0
  1103  000107                     	ds	6
  1104  00010D                     _pr_time_4:
  1105                           	opt stack 0
  1106  00010D                     	ds	4
  1107  000111                     _str:
  1108                           	opt stack 0
  1109  000111                     	ds	12
  1110  00011D                     _data:
  1111                           	opt stack 0
  1112  00011D                     	ds	8
  1113  000125                     _data_speed:
  1114                           	opt stack 0
  1115  000125                     	ds	8
  1116  00012D                     _data_steering:
  1117                           	opt stack 0
  1118  00012D                     	ds	8
  1119  000135                     _park_assist_state:
  1120                           	opt stack 0
  1121  000135                     	ds	8
  1122                           tblptru	equ	0xFF8
  1123                           tblptrh	equ	0xFF7
  1124                           tblptrl	equ	0xFF6
  1125                           tablat	equ	0xFF5
  1126                           postinc0	equ	0xFEE
  1127                           wreg	equ	0xFE8
  1128                           
  1129                           	psect	cstackBANK1
  1130  00013D                     __pcstackBANK1:
  1131                           	opt stack 0
  1132  00013D                     _sprintf$4237:
  1133                           	opt stack 0
  1134                           
  1135                           ; 4 bytes @ 0x0
  1136  00013D                     	ds	4
  1137  000141                     sprintf@ap:
  1138                           	opt stack 0
  1139                           
  1140                           ; 2 bytes @ 0x4
  1141  000141                     	ds	2
  1142  000143                     sprintf@flag:
  1143                           	opt stack 0
  1144                           
  1145                           ; 2 bytes @ 0x6
  1146  000143                     	ds	2
  1147  000145                     sprintf@val:
  1148                           	opt stack 0
  1149                           
  1150                           ; 4 bytes @ 0x8
  1151  000145                     	ds	4
  1152  000149                     sprintf@exp:
  1153                           	opt stack 0
  1154                           
  1155                           ; 2 bytes @ 0xC
  1156  000149                     	ds	2
  1157  00014B                     sprintf@tmpval:
  1158                           	opt stack 0
  1159                           
  1160                           ; 4 bytes @ 0xE
  1161  00014B                     	ds	4
  1162  00014F                     sprintf@prec:
  1163                           	opt stack 0
  1164                           
  1165                           ; 2 bytes @ 0x12
  1166  00014F                     	ds	2
  1167  000151                     sprintf@fval:
  1168                           	opt stack 0
  1169                           
  1170                           ; 4 bytes @ 0x14
  1171  000151                     	ds	4
  1172  000155                     sprintf@c:
  1173                           	opt stack 0
  1174                           
  1175                           ; 1 bytes @ 0x18
  1176  000155                     	ds	1
  1177  000156                     ??_main:
  1178                           
  1179                           ; 0 bytes @ 0x19
  1180  000156                     	ds	8
  1181                           tblptru	equ	0xFF8
  1182                           tblptrh	equ	0xFF7
  1183                           tblptrl	equ	0xFF6
  1184                           tablat	equ	0xFF5
  1185                           postinc0	equ	0xFEE
  1186                           wreg	equ	0xFE8
  1187                           
  1188                           	psect	cstackBANK0
  1189  000060                     __pcstackBANK0:
  1190                           	opt stack 0
  1191  000060                     ??_ISR_alta:
  1192                           
  1193                           ; 0 bytes @ 0x0
  1194  000060                     	ds	16
  1195  000070                     ??_CAN_Rx:
  1196  000070                     ??_isdigit:
  1197  000070                     ?___wmul:
  1198                           	opt stack 0
  1199  000070                     ?___awmod:
  1200                           	opt stack 0
  1201  000070                     ?___lwdiv:
  1202                           	opt stack 0
  1203  000070                     ?___lwmod:
  1204                           	opt stack 0
  1205  000070                     ?__tdiv_to_l_:
  1206                           	opt stack 0
  1207  000070                     ?__div_to_l_:
  1208                           	opt stack 0
  1209  000070                     ?___flpack:
  1210                           	opt stack 0
  1211  000070                     ?___lldiv:
  1212                           	opt stack 0
  1213  000070                     ?___llmod:
  1214                           	opt stack 0
  1215  000070                     CANOperationMode@mode:
  1216                           	opt stack 0
  1217  000070                     _CANisTxReady$3255:
  1218                           	opt stack 0
  1219  000070                     delay_set_quartz@frequency:
  1220                           	opt stack 0
  1221  000070                     Joystick_Polling@i:
  1222                           	opt stack 0
  1223  000070                     ___wmul@multiplier:
  1224                           	opt stack 0
  1225  000070                     ___awmod@dividend:
  1226                           	opt stack 0
  1227  000070                     ___lwdiv@dividend:
  1228                           	opt stack 0
  1229  000070                     ___lwmod@dividend:
  1230                           	opt stack 0
  1231  000070                     CANsendMessage@identifier:
  1232                           	opt stack 0
  1233  000070                     CANSetMask@mask:
  1234                           	opt stack 0
  1235  000070                     CANSetFilter@filter:
  1236                           	opt stack 0
  1237  000070                     ___flpack@arg:
  1238                           	opt stack 0
  1239  000070                     __div_to_l_@f1:
  1240                           	opt stack 0
  1241  000070                     ___flge@ff1:
  1242                           	opt stack 0
  1243  000070                     __tdiv_to_l_@f1:
  1244                           	opt stack 0
  1245  000070                     ___lldiv@dividend:
  1246                           	opt stack 0
  1247  000070                     ___llmod@dividend:
  1248                           	opt stack 0
  1249                           
  1250                           ; 4 bytes @ 0x10
  1251  000070                     	ds	1
  1252  000071                     _isdigit$3910:
  1253                           	opt stack 0
  1254                           
  1255                           ; 1 bytes @ 0x11
  1256  000071                     	ds	1
  1257  000072                     isdigit@c:
  1258                           	opt stack 0
  1259  000072                     ___wmul@multiplicand:
  1260                           	opt stack 0
  1261  000072                     ___awmod@divisor:
  1262                           	opt stack 0
  1263  000072                     ___lwdiv@divisor:
  1264                           	opt stack 0
  1265  000072                     ___lwmod@divisor:
  1266                           	opt stack 0
  1267                           
  1268                           ; 2 bytes @ 0x12
  1269  000072                     	ds	2
  1270  000074                     CANSetMask@type:
  1271                           	opt stack 0
  1272  000074                     CANSetFilter@type:
  1273                           	opt stack 0
  1274  000074                     ___awmod@counter:
  1275                           	opt stack 0
  1276  000074                     ___flpack@exp:
  1277                           	opt stack 0
  1278  000074                     ___lwmod@counter:
  1279                           	opt stack 0
  1280  000074                     CANsendMessage@data:
  1281                           	opt stack 0
  1282  000074                     ___wmul@product:
  1283                           	opt stack 0
  1284  000074                     ___lwdiv@quotient:
  1285                           	opt stack 0
  1286  000074                     __div_to_l_@f2:
  1287                           	opt stack 0
  1288  000074                     ___flge@ff2:
  1289                           	opt stack 0
  1290  000074                     __tdiv_to_l_@f2:
  1291                           	opt stack 0
  1292  000074                     ___lldiv@divisor:
  1293                           	opt stack 0
  1294  000074                     ___llmod@divisor:
  1295                           	opt stack 0
  1296                           
  1297                           ; 4 bytes @ 0x14
  1298  000074                     	ds	1
  1299  000075                     ??_CANSetMask:
  1300  000075                     ??_CANSetFilter:
  1301  000075                     ___awmod@sign:
  1302                           	opt stack 0
  1303  000075                     ___flpack@sign:
  1304                           	opt stack 0
  1305                           
  1306                           ; 1 bytes @ 0x15
  1307  000075                     	ds	1
  1308  000076                     ??___flpack:
  1309  000076                     ?___awdiv:
  1310                           	opt stack 0
  1311  000076                     CANsendMessage@dataLength:
  1312                           	opt stack 0
  1313  000076                     ___lwdiv@counter:
  1314                           	opt stack 0
  1315  000076                     delay_ms@value_ms:
  1316                           	opt stack 0
  1317  000076                     ___awdiv@dividend:
  1318                           	opt stack 0
  1319                           
  1320                           ; 2 bytes @ 0x16
  1321  000076                     	ds	1
  1322  000077                     CANsendMessage@flags:
  1323                           	opt stack 0
  1324  000077                     utoa@buf:
  1325                           	opt stack 0
  1326                           
  1327                           ; 2 bytes @ 0x17
  1328  000077                     	ds	1
  1329  000078                     ??__tdiv_to_l_:
  1330  000078                     ??_CANsendMessage:
  1331  000078                     ??___flge:
  1332  000078                     LCD_send_command@D2:
  1333                           	opt stack 0
  1334  000078                     ___llmod@counter:
  1335                           	opt stack 0
  1336  000078                     ___awdiv@divisor:
  1337                           	opt stack 0
  1338  000078                     __div_to_l_@quot:
  1339                           	opt stack 0
  1340  000078                     ___lldiv@quotient:
  1341                           	opt stack 0
  1342                           
  1343                           ; 4 bytes @ 0x18
  1344  000078                     	ds	1
  1345  000079                     CANSetMask@numBuffer:
  1346                           	opt stack 0
  1347  000079                     CANSetFilter@numBuffer:
  1348                           	opt stack 0
  1349  000079                     LCD_send_command@D1:
  1350                           	opt stack 0
  1351  000079                     utoa@val:
  1352                           	opt stack 0
  1353                           
  1354                           ; 2 bytes @ 0x19
  1355  000079                     	ds	1
  1356  00007A                     ?___awtofl:
  1357                           	opt stack 0
  1358  00007A                     ?___lbtofl:
  1359                           	opt stack 0
  1360  00007A                     ?___lltofl:
  1361                           	opt stack 0
  1362  00007A                     ?___lwtofl:
  1363                           	opt stack 0
  1364  00007A                     LCD_send_command@D0:
  1365                           	opt stack 0
  1366  00007A                     ___awdiv@counter:
  1367                           	opt stack 0
  1368  00007A                     ___awtofl@c:
  1369                           	opt stack 0
  1370  00007A                     ___lwtofl@c:
  1371                           	opt stack 0
  1372  00007A                     CANSetMask@tamp:
  1373                           	opt stack 0
  1374  00007A                     CANSetFilter@tamp:
  1375                           	opt stack 0
  1376  00007A                     ___lltofl@c:
  1377                           	opt stack 0
  1378                           
  1379                           ; 4 bytes @ 0x1A
  1380  00007A                     	ds	1
  1381  00007B                     LCD_send_command@D3:
  1382                           	opt stack 0
  1383  00007B                     ___awdiv@sign:
  1384                           	opt stack 0
  1385  00007B                     utoa@base:
  1386                           	opt stack 0
  1387  00007B                     __tdiv_to_l_@quot:
  1388                           	opt stack 0
  1389                           
  1390                           ; 4 bytes @ 0x1B
  1391  00007B                     	ds	1
  1392  00007C                     LCD_shift_cursor@number_of_shift:
  1393                           	opt stack 0
  1394  00007C                     LCD_goto_line@line:
  1395                           	opt stack 0
  1396  00007C                     LCD_write_char@D3:
  1397                           	opt stack 0
  1398  00007C                     LCD_cursor@blinking:
  1399                           	opt stack 0
  1400  00007C                     __div_to_l_@cntr:
  1401                           	opt stack 0
  1402  00007C                     ___lldiv@counter:
  1403                           	opt stack 0
  1404  00007C                     ___awdiv@quotient:
  1405                           	opt stack 0
  1406  00007C                     CANsendMessage@tamp:
  1407                           	opt stack 0
  1408                           
  1409                           ; 4 bytes @ 0x1C
  1410  00007C                     	ds	1
  1411  00007D                     LCD_shift_cursor@shift:
  1412                           	opt stack 0
  1413  00007D                     LCD_write_char@D2:
  1414                           	opt stack 0
  1415  00007D                     LCD_cursor@active:
  1416                           	opt stack 0
  1417  00007D                     __div_to_l_@exp1:
  1418                           	opt stack 0
  1419  00007D                     utoa@v:
  1420                           	opt stack 0
  1421                           
  1422                           ; 2 bytes @ 0x1D
  1423  00007D                     	ds	1
  1424  00007E                     ?___fldiv:
  1425                           	opt stack 0
  1426  00007E                     CANInitialize@phaseSeg1:
  1427                           	opt stack 0
  1428  00007E                     LCD_shift_cursor@i:
  1429                           	opt stack 0
  1430  00007E                     LCD_write_char@D1:
  1431                           	opt stack 0
  1432  00007E                     LCD_initialize@quartz_frequency:
  1433                           	opt stack 0
  1434  00007E                     ___awtofl@sign:
  1435                           	opt stack 0
  1436  00007E                     ___lbtofl@c:
  1437                           	opt stack 0
  1438  00007E                     ___fldiv@f1:
  1439                           	opt stack 0
  1440                           
  1441                           ; 4 bytes @ 0x1E
  1442  00007E                     	ds	1
  1443  00007F                     ?___flmul:
  1444                           	opt stack 0
  1445  00007F                     CANInitialize@phaseSeg2:
  1446                           	opt stack 0
  1447  00007F                     LCD_goto_xy@y:
  1448                           	opt stack 0
  1449  00007F                     LCD_write_char@D0:
  1450                           	opt stack 0
  1451  00007F                     __tdiv_to_l_@cntr:
  1452                           	opt stack 0
  1453  00007F                     utoa@c:
  1454                           	opt stack 0
  1455  00007F                     ___flmul@f1:
  1456                           	opt stack 0
  1457                           
  1458                           ; 4 bytes @ 0x1F
  1459  00007F                     	ds	1
  1460  000080                     CANInitialize@SJW:
  1461                           	opt stack 0
  1462  000080                     LCD_goto_xy@x:
  1463                           	opt stack 0
  1464  000080                     LCD_write_char@value:
  1465                           	opt stack 0
  1466  000080                     __tdiv_to_l_@exp1:
  1467                           	opt stack 0
  1468  000080                     itoa@buf:
  1469                           	opt stack 0
  1470                           
  1471                           ; 2 bytes @ 0x20
  1472  000080                     	ds	1
  1473  000081                     CANInitialize@BRP:
  1474                           	opt stack 0
  1475  000081                     LCD_write_message@buffer:
  1476                           	opt stack 0
  1477  000081                     LCD_write_string@buffer:
  1478                           	opt stack 0
  1479                           
  1480                           ; 2 bytes @ 0x21
  1481  000081                     	ds	1
  1482  000082                     CANInitialize@flags:
  1483                           	opt stack 0
  1484  000082                     itoa@val:
  1485                           	opt stack 0
  1486  000082                     ___fldiv@f2:
  1487                           	opt stack 0
  1488                           
  1489                           ; 4 bytes @ 0x22
  1490  000082                     	ds	1
  1491  000083                     ??_CANInitialize:
  1492  000083                     ___flmul@f2:
  1493                           	opt stack 0
  1494                           
  1495                           ; 4 bytes @ 0x23
  1496  000083                     	ds	1
  1497  000084                     itoa@base:
  1498                           	opt stack 0
  1499                           
  1500                           ; 2 bytes @ 0x24
  1501  000084                     	ds	2
  1502  000086                     itoa@cp:
  1503                           	opt stack 0
  1504  000086                     ___fldiv@f3:
  1505                           	opt stack 0
  1506                           
  1507                           ; 4 bytes @ 0x26
  1508  000086                     	ds	1
  1509  000087                     CANInitialize@propSeg:
  1510                           	opt stack 0
  1511  000087                     ___flmul@exp:
  1512                           	opt stack 0
  1513                           
  1514                           ; 1 bytes @ 0x27
  1515  000087                     	ds	1
  1516  000088                     CANInitialize@FilterConfig1:
  1517                           	opt stack 0
  1518  000088                     LCD_write_integer@value:
  1519                           	opt stack 0
  1520  000088                     ___flmul@f3_as_product:
  1521                           	opt stack 0
  1522                           
  1523                           ; 4 bytes @ 0x28
  1524  000088                     	ds	1
  1525  000089                     CANInitialize@FilterConfig2:
  1526                           	opt stack 0
  1527                           
  1528                           ; 1 bytes @ 0x29
  1529  000089                     	ds	1
  1530  00008A                     LCD_write_integer@number_of_digits:
  1531                           	opt stack 0
  1532  00008A                     ___fldiv@cntr:
  1533                           	opt stack 0
  1534                           
  1535                           ; 1 bytes @ 0x2A
  1536  00008A                     	ds	1
  1537  00008B                     LCD_write_integer@zero_cleaning:
  1538                           	opt stack 0
  1539  00008B                     ___fldiv@exp:
  1540                           	opt stack 0
  1541                           
  1542                           ; 1 bytes @ 0x2B
  1543  00008B                     	ds	1
  1544  00008C                     ??_LCD_write_integer:
  1545  00008C                     ___fldiv@sign:
  1546                           	opt stack 0
  1547  00008C                     ___flmul@cntr:
  1548                           	opt stack 0
  1549                           
  1550                           ; 1 bytes @ 0x2C
  1551  00008C                     	ds	1
  1552  00008D                     ___flmul@sign:
  1553                           	opt stack 0
  1554                           
  1555                           ; 1 bytes @ 0x2D
  1556  00008D                     	ds	1
  1557  00008E                     ?_fround:
  1558                           	opt stack 0
  1559  00008E                     ?_scale:
  1560                           	opt stack 0
  1561  00008E                     ?___flneg:
  1562                           	opt stack 0
  1563  00008E                     ___flneg@f1:
  1564                           	opt stack 0
  1565                           
  1566                           ; 4 bytes @ 0x2E
  1567  00008E                     	ds	3
  1568  000091                     LCD_write_integer@convertedInt:
  1569                           	opt stack 0
  1570                           
  1571                           ; 6 bytes @ 0x31
  1572  000091                     	ds	1
  1573  000092                     _fround$4235:
  1574                           	opt stack 0
  1575  000092                     _scale$4236:
  1576                           	opt stack 0
  1577                           
  1578                           ; 4 bytes @ 0x32
  1579  000092                     	ds	4
  1580  000096                     scale@scl:
  1581                           	opt stack 0
  1582  000096                     _fround$4234:
  1583                           	opt stack 0
  1584                           
  1585                           ; 4 bytes @ 0x36
  1586  000096                     	ds	1
  1587  000097                     LCD_write_integer@index:
  1588                           	opt stack 0
  1589                           
  1590                           ; 1 bytes @ 0x37
  1591  000097                     	ds	3
  1592  00009A                     fround@prec:
  1593                           	opt stack 0
  1594                           
  1595                           ; 1 bytes @ 0x3A
  1596  00009A                     	ds	1
  1597  00009B                     ?___fladd:
  1598                           	opt stack 0
  1599  00009B                     ___fladd@f1:
  1600                           	opt stack 0
  1601                           
  1602                           ; 4 bytes @ 0x3B
  1603  00009B                     	ds	4
  1604  00009F                     ___fladd@f2:
  1605                           	opt stack 0
  1606                           
  1607                           ; 4 bytes @ 0x3F
  1608  00009F                     	ds	4
  1609  0000A3                     ??___fladd:
  1610                           
  1611                           ; 0 bytes @ 0x43
  1612  0000A3                     	ds	1
  1613  0000A4                     ___fladd@sign:
  1614                           	opt stack 0
  1615                           
  1616                           ; 1 bytes @ 0x44
  1617  0000A4                     	ds	1
  1618  0000A5                     ___fladd@exp2:
  1619                           	opt stack 0
  1620                           
  1621                           ; 1 bytes @ 0x45
  1622  0000A5                     	ds	1
  1623  0000A6                     ___fladd@exp1:
  1624                           	opt stack 0
  1625                           
  1626                           ; 1 bytes @ 0x46
  1627  0000A6                     	ds	1
  1628  0000A7                     ?___flsub:
  1629                           	opt stack 0
  1630  0000A7                     ?___fltol:
  1631                           	opt stack 0
  1632  0000A7                     ___flsub@f1:
  1633                           	opt stack 0
  1634  0000A7                     ___fltol@f1:
  1635                           	opt stack 0
  1636                           
  1637                           ; 4 bytes @ 0x47
  1638  0000A7                     	ds	4
  1639  0000AB                     ??___fltol:
  1640  0000AB                     ___flsub@f2:
  1641                           	opt stack 0
  1642                           
  1643                           ; 4 bytes @ 0x4B
  1644  0000AB                     	ds	4
  1645  0000AF                     ___fltol@sign1:
  1646                           	opt stack 0
  1647                           
  1648                           ; 1 bytes @ 0x4F
  1649  0000AF                     	ds	1
  1650  0000B0                     ___fltol@exp1:
  1651                           	opt stack 0
  1652                           
  1653                           ; 1 bytes @ 0x50
  1654  0000B0                     	ds	1
  1655  0000B1                     ?_sprintf:
  1656                           	opt stack 0
  1657  0000B1                     sprintf@sp:
  1658                           	opt stack 0
  1659                           
  1660                           ; 2 bytes @ 0x51
  1661  0000B1                     	ds	2
  1662  0000B3                     sprintf@f:
  1663                           	opt stack 0
  1664                           
  1665                           ; 2 bytes @ 0x53
  1666  0000B3                     	ds	6
  1667  0000B9                     ??_sprintf:
  1668                           
  1669                           ; 0 bytes @ 0x59
  1670  0000B9                     	ds	2
  1671  0000BB                     tblptru	equ	0xFF8
  1672                           tblptrh	equ	0xFF7
  1673                           tblptrl	equ	0xFF6
  1674                           tablat	equ	0xFF5
  1675                           postinc0	equ	0xFEE
  1676                           wreg	equ	0xFE8
  1677                           
  1678                           ; 0 bytes @ 0x5B
  1679                           
  1680                           	psect	cstackCOMRAM
  1681  000028                     __pcstackCOMRAM:
  1682                           	opt stack 0
  1683  000028                     ??_ISR_bassa:
  1684  000028                     
  1685                           ; 1 bytes @ 0x0
  1686  000028                     	ds	17
  1687  000039                     _CANisRxReady$3257:
  1688                           	opt stack 0
  1689  000039                     i2_CANisTxReady$3255:
  1690                           	opt stack 0
  1691  000039                     CANreceiveMessage@msg:
  1692                           	opt stack 0
  1693  000039                     i2CANsendMessage@identifier:
  1694                           	opt stack 0
  1695                           
  1696                           ; 4 bytes @ 0x11
  1697  000039                     	ds	2
  1698  00003B                     ??_CANreceiveMessage:
  1699                           
  1700                           ; 0 bytes @ 0x13
  1701  00003B                     	ds	2
  1702  00003D                     i2CANsendMessage@data:
  1703                           	opt stack 0
  1704                           
  1705                           ; 2 bytes @ 0x15
  1706  00003D                     	ds	2
  1707  00003F                     i2CANsendMessage@dataLength:
  1708                           	opt stack 0
  1709                           
  1710                           ; 1 bytes @ 0x17
  1711  00003F                     	ds	1
  1712  000040                     i2CANsendMessage@flags:
  1713                           	opt stack 0
  1714                           
  1715                           ; 1 bytes @ 0x18
  1716  000040                     	ds	1
  1717  000041                     ??i2_CANsendMessage:
  1718                           
  1719                           ; 0 bytes @ 0x19
  1720  000041                     	ds	2
  1721  000043                     CANreceiveMessage@error:
  1722                           	opt stack 0
  1723                           
  1724                           ; 1 bytes @ 0x1B
  1725  000043                     	ds	1
  1726  000044                     CANreceiveMessage@tamp:
  1727                           	opt stack 0
  1728                           
  1729                           ; 1 bytes @ 0x1C
  1730  000044                     	ds	1
  1731  000045                     i2CANsendMessage@tamp:
  1732                           	opt stack 0
  1733                           
  1734                           ; 4 bytes @ 0x1D
  1735  000045                     	ds	4
  1736  000049                     ISR_alta@i:
  1737                           	opt stack 0
  1738                           
  1739                           ; 1 bytes @ 0x21
  1740  000049                     	ds	1
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           
  1748 ;;
  1749 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1750 ;;
  1751 ;; *************** function _main *****************
  1752 ;; Defined at:
  1753 ;;		line 209 in file "RemoteCan.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;		None               void
  1760 ;; Registers used:
  1761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1769 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1770 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1771 ;;Total ram usage:        8 bytes
  1772 ;; Hardware stack levels required when called:   11
  1773 ;; This function calls:
  1774 ;;		_CAN_Rx
  1775 ;;		_CAN_Tx
  1776 ;;		_CANisTxReady
  1777 ;;		_CANsendMessage
  1778 ;;		_F1_Button_Polling
  1779 ;;		_F2_Button_Polling
  1780 ;;		_Joystick_Polling
  1781 ;;		_LCD_End
  1782 ;;		_LCD_Error
  1783 ;;		_LCD_Gap
  1784 ;;		_LCD_Handler
  1785 ;;		_LCD_Park
  1786 ;;		_LCD_Parking
  1787 ;;		_LCD_goto_line
  1788 ;;		_LCD_initialize
  1789 ;;		_LCD_write_message
  1790 ;;		_PWR_Button_Polling
  1791 ;;		___awtofl
  1792 ;;		___fladd
  1793 ;;		___flmul
  1794 ;;		___flneg
  1795 ;;		___fltol
  1796 ;;		___lbtofl
  1797 ;;		_board_initialization
  1798 ;;		_delay_ms
  1799 ;; This function is called by:
  1800 ;;		Startup code after reset
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text0
  1805  011BD6                     __ptext0:
  1806                           	opt stack 0
  1807  011BD6                     _main:
  1808                           	opt stack 20
  1809                           
  1810                           ;RemoteCan.c: 210: board_initialization();
  1811                           
  1812                           ;incstack = 0
  1813  011BD6  EC76  F0AA         	call	_board_initialization	;wreg free
  1814                           
  1815                           ;RemoteCan.c: 218: JoystickConstants[0] = 0.703;
  1816  011BDA  0ECF               	movlw	207
  1817  011BDC  0100               	movlb	0	; () banked
  1818  011BDE  6FBB               	movwf	_JoystickConstants& (0+255),b	;volatile
  1819  011BE0  0EF7               	movlw	247
  1820  011BE2  6FBC               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1821  011BE4  0E33               	movlw	51
  1822  011BE6  6FBD               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1823  011BE8  0E3F               	movlw	63
  1824  011BEA  6FBE               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;RemoteCan.c: 219: JoystickConstants[1] = 20;
  1828  011BEC  0E00               	movlw	0
  1829  011BEE  0100               	movlb	0	; () banked
  1830  011BF0  6FBF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1831  011BF2  0E00               	movlw	0
  1832  011BF4  6FC0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1833  011BF6  0EA0               	movlw	160
  1834  011BF8  6FC1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1835  011BFA  0E41               	movlw	65
  1836  011BFC  6FC2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;RemoteCan.c: 221: data_brake [1] = 0;
  1840  011BFE  0E00               	movlw	0
  1841  011C00  6E21               	movwf	_data_brake+1,c
  1842  011C02  D000               	goto	l8560
  1843  011C04                     l8560:
  1844                           
  1845                           ;RemoteCan.c: 226: PWR_Button_Polling();
  1846  011C04  EC8C  F0AF         	call	_PWR_Button_Polling	;wreg free
  1847                           
  1848                           ;RemoteCan.c: 227: F1_Button_Polling();
  1849  011C08  ECA2  F0AF         	call	_F1_Button_Polling	;wreg free
  1850                           
  1851                           ;RemoteCan.c: 228: F2_Button_Polling();
  1852  011C0C  EC97  F0AF         	call	_F2_Button_Polling	;wreg free
  1853                           
  1854                           ;RemoteCan.c: 231: if (power_switch == 0) {
  1855  011C10  BC4B               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1856  011C12  D08B               	goto	l819
  1857                           
  1858                           ;RemoteCan.c: 232: dir = 1;
  1859  011C14  0E01               	movlw	1
  1860  011C16  0100               	movlb	0	; () banked
  1861  011C18  6FE7               	movwf	_dir& (0+255),b	;volatile
  1862                           
  1863                           ;RemoteCan.c: 233: set_speed = 0;
  1864  011C1A  0E00               	movlw	0
  1865  011C1C  0100               	movlb	0	; () banked
  1866  011C1E  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1867  011C20  0E00               	movlw	0
  1868  011C22  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  1869                           
  1870                           ;RemoteCan.c: 234: data_steering [0] = 90;
  1871  011C24  0E5A               	movlw	90
  1872  011C26  0101               	movlb	1	; () banked
  1873  011C28  6F2D               	movwf	_data_steering& (0+255),b
  1874                           
  1875                           ;RemoteCan.c: 235: data_brake [0] = 0b00000000;
  1876  011C2A  0E00               	movlw	0
  1877  011C2C  6E20               	movwf	_data_brake,c
  1878                           
  1879                           ; BSR set to: 1
  1880                           ;RemoteCan.c: 236: CAN_Tx();
  1881  011C2E  ECBC  F0A9         	call	_CAN_Tx	;wreg free
  1882                           
  1883                           ;RemoteCan.c: 237: PORTDbits.RD6 = 0;
  1884  011C32  9C83               	bcf	3971,6,c	;volatile
  1885                           
  1886                           ;RemoteCan.c: 238: PORTDbits.RD5 = 0;
  1887  011C34  9A83               	bcf	3971,5,c	;volatile
  1888                           
  1889                           ;RemoteCan.c: 239: LCD_initialize(16);
  1890  011C36  0E10               	movlw	16
  1891  011C38  EC0B  F0A5         	call	_LCD_initialize
  1892                           
  1893                           ;RemoteCan.c: 240: LCD_goto_line(1);
  1894  011C3C  0E01               	movlw	1
  1895  011C3E  EC18  F0A8         	call	_LCD_goto_line
  1896                           
  1897                           ;RemoteCan.c: 241: LCD_write_message("====================");
  1898  011C42  0E7F               	movlw	low STR_1
  1899  011C44  0100               	movlb	0	; () banked
  1900  011C46  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1901  011C48  0EFF               	movlw	high STR_1
  1902  011C4A  0100               	movlb	0	; () banked
  1903  011C4C  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1904  011C4E  EC87  F0AE         	call	_LCD_write_message	;wreg free
  1905                           
  1906                           ;RemoteCan.c: 242: LCD_goto_line(2);
  1907  011C52  0E02               	movlw	2
  1908  011C54  EC18  F0A8         	call	_LCD_goto_line
  1909                           
  1910                           ;RemoteCan.c: 243: LCD_write_message("==> VEHICLE  OFF <==");
  1911  011C58  0E55               	movlw	low STR_2
  1912  011C5A  0100               	movlb	0	; () banked
  1913  011C5C  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1914  011C5E  0EFF               	movlw	high STR_2
  1915  011C60  0100               	movlb	0	; () banked
  1916  011C62  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1917  011C64  EC87  F0AE         	call	_LCD_write_message	;wreg free
  1918                           
  1919                           ;RemoteCan.c: 244: LCD_goto_line(3);
  1920  011C68  0E03               	movlw	3
  1921  011C6A  EC18  F0A8         	call	_LCD_goto_line
  1922                           
  1923                           ;RemoteCan.c: 245: LCD_write_message("  Press the button  ");
  1924  011C6E  0E83               	movlw	low STR_3
  1925  011C70  0100               	movlb	0	; () banked
  1926  011C72  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1927  011C74  0EFE               	movlw	high STR_3
  1928  011C76  0100               	movlb	0	; () banked
  1929  011C78  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1930  011C7A  EC87  F0AE         	call	_LCD_write_message	;wreg free
  1931                           
  1932                           ;RemoteCan.c: 246: LCD_goto_line(4);
  1933  011C7E  0E04               	movlw	4
  1934  011C80  EC18  F0A8         	call	_LCD_goto_line
  1935                           
  1936                           ;RemoteCan.c: 247: LCD_write_message("====================");
  1937  011C84  0E7F               	movlw	low STR_1
  1938  011C86  0100               	movlb	0	; () banked
  1939  011C88  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1940  011C8A  0EFF               	movlw	high STR_1
  1941  011C8C  0100               	movlb	0	; () banked
  1942  011C8E  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1943  011C90  EC87  F0AE         	call	_LCD_write_message	;wreg free
  1944                           
  1945                           ;RemoteCan.c: 248: while (power_switch == 0) {
  1946  011C94  D046               	goto	l8602
  1947  011C96                     l8594:
  1948                           
  1949                           ;RemoteCan.c: 249: if ((time_counter - pr_time_1) >= 30) {
  1950  011C96  C0CB  F156         	movff	_pr_time_1,??_main	;volatile
  1951  011C9A  C0CC  F157         	movff	_pr_time_1+1,??_main+1	;volatile
  1952  011C9E  C0CD  F158         	movff	_pr_time_1+2,??_main+2	;volatile
  1953  011CA2  C0CE  F159         	movff	_pr_time_1+3,??_main+3	;volatile
  1954  011CA6  0101               	movlb	1	; () banked
  1955  011CA8  1F56               	comf	??_main& (0+255),f,b
  1956  011CAA  1F57               	comf	(??_main+1)& (0+255),f,b
  1957  011CAC  1F58               	comf	(??_main+2)& (0+255),f,b
  1958  011CAE  1F59               	comf	(??_main+3)& (0+255),f,b
  1959  011CB0  2B56               	incf	??_main& (0+255),f,b
  1960  011CB2  0E00               	movlw	0
  1961  011CB4  2357               	addwfc	(??_main+1)& (0+255),f,b
  1962  011CB6  2358               	addwfc	(??_main+2)& (0+255),f,b
  1963  011CB8  2359               	addwfc	(??_main+3)& (0+255),f,b
  1964  011CBA  5005               	movf	_time_counter,w,c	;volatile
  1965  011CBC  0101               	movlb	1	; () banked
  1966  011CBE  2556               	addwf	??_main& (0+255),w,b
  1967  011CC0  0101               	movlb	1	; () banked
  1968  011CC2  6F5A               	movwf	(??_main+4)& (0+255),b
  1969  011CC4  5006               	movf	_time_counter+1,w,c	;volatile
  1970  011CC6  0101               	movlb	1	; () banked
  1971  011CC8  2157               	addwfc	(??_main+1)& (0+255),w,b
  1972  011CCA  0101               	movlb	1	; () banked
  1973  011CCC  6F5B               	movwf	(??_main+5)& (0+255),b
  1974  011CCE  5007               	movf	_time_counter+2,w,c	;volatile
  1975  011CD0  0101               	movlb	1	; () banked
  1976  011CD2  2158               	addwfc	(??_main+2)& (0+255),w,b
  1977  011CD4  0101               	movlb	1	; () banked
  1978  011CD6  6F5C               	movwf	(??_main+6)& (0+255),b
  1979  011CD8  5008               	movf	_time_counter+3,w,c	;volatile
  1980  011CDA  0101               	movlb	1	; () banked
  1981  011CDC  2159               	addwfc	(??_main+3)& (0+255),w,b
  1982  011CDE  0101               	movlb	1	; () banked
  1983  011CE0  6F5D               	movwf	(??_main+7)& (0+255),b
  1984  011CE2  0101               	movlb	1	; () banked
  1985  011CE4  515D               	movf	(??_main+7)& (0+255),w,b
  1986  011CE6  0101               	movlb	1	; () banked
  1987  011CE8  115C               	iorwf	(??_main+6)& (0+255),w,b
  1988  011CEA  0101               	movlb	1	; () banked
  1989  011CEC  115B               	iorwf	(??_main+5)& (0+255),w,b
  1990  011CEE  E105               	bnz	u10740
  1991  011CF0  0E1E               	movlw	30
  1992  011CF2  0101               	movlb	1	; () banked
  1993  011CF4  5D5A               	subwf	(??_main+4)& (0+255),w,b
  1994  011CF6  A0D8               	btfss	status,0,c
  1995  011CF8  D00A               	goto	l8598
  1996  011CFA                     u10740:
  1997                           
  1998                           ; BSR set to: 1
  1999                           ;RemoteCan.c: 250: pr_time_1 = time_counter;
  2000  011CFA  C005  F0CB         	movff	_time_counter,_pr_time_1	;volatile
  2001  011CFE  C006  F0CC         	movff	_time_counter+1,_pr_time_1+1	;volatile
  2002  011D02  C007  F0CD         	movff	_time_counter+2,_pr_time_1+2	;volatile
  2003  011D06  C008  F0CE         	movff	_time_counter+3,_pr_time_1+3	;volatile
  2004                           
  2005                           ;RemoteCan.c: 251: PORTDbits.RD7 = ~PORTDbits.RD7;
  2006  011D0A  7E83               	btg	3971,7,c	;volatile
  2007  011D0C  D000               	goto	l8598
  2008  011D0E                     l8598:
  2009                           
  2010                           ; BSR set to: 1
  2011                           ;RemoteCan.c: 252: }
  2012                           ;RemoteCan.c: 253: PWR_Button_Polling();
  2013  011D0E  EC8C  F0AF         	call	_PWR_Button_Polling	;wreg free
  2014                           
  2015                           ;RemoteCan.c: 254: delay_ms(10);
  2016  011D12  0E00               	movlw	0
  2017  011D14  0100               	movlb	0	; () banked
  2018  011D16  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2019  011D18  0E0A               	movlw	10
  2020  011D1A  6F76               	movwf	delay_ms@value_ms& (0+255),b
  2021  011D1C  EC33  F0AE         	call	_delay_ms	;wreg free
  2022  011D20  D000               	goto	l8602
  2023  011D22                     l8602:
  2024  011D22  AC4B               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  2025  011D24  D7B8               	goto	l8594
  2026                           
  2027                           ;RemoteCan.c: 255: }
  2028                           ;RemoteCan.c: 256: PORTDbits.RD7 = 0;
  2029  011D26  9E83               	bcf	3971,7,c	;volatile
  2030                           
  2031                           ;RemoteCan.c: 257: display_refresh = 1;
  2032  011D28  844B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  2033  011D2A                     l819:
  2034                           
  2035                           ;RemoteCan.c: 258: }
  2036                           ;RemoteCan.c: 261: if (PORTAbits.RA2 == 1) {
  2037  011D2A  A480               	btfss	3968,2,c	;volatile
  2038  011D2C  D004               	goto	l824
  2039                           
  2040                           ;RemoteCan.c: 262: switch_position = 0;
  2041  011D2E  0E00               	movlw	0
  2042  011D30  0100               	movlb	0	; () banked
  2043  011D32  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  2044                           
  2045                           ;RemoteCan.c: 263: } else {
  2046  011D34  D018               	goto	l825
  2047  011D36                     l824:
  2048                           
  2049                           ;RemoteCan.c: 264: if (PORTAbits.RA3 == 0) {
  2050  011D36  B680               	btfsc	3968,3,c	;volatile
  2051  011D38  D00A               	goto	l8612
  2052                           
  2053                           ;RemoteCan.c: 265: switch_position = 1;
  2054  011D3A  0E01               	movlw	1
  2055  011D3C  0100               	movlb	0	; () banked
  2056  011D3E  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  2057                           
  2058                           ;RemoteCan.c: 266: dir = 1;
  2059  011D40  0E01               	movlw	1
  2060  011D42  0100               	movlb	0	; () banked
  2061  011D44  6FE7               	movwf	_dir& (0+255),b	;volatile
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;RemoteCan.c: 267: if (FWD_sensor == 1) {
  2065  011D46  AA4A               	btfss	_FWD_sensor/(0+8),_FWD_sensor& (0+7),c	;volatile
  2066  011D48  D00C               	goto	l830
  2067  011D4A  D009               	goto	l8616
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;RemoteCan.c: 271: }
  2071                           ;RemoteCan.c: 272: } else {
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;RemoteCan.c: 270: collision_risk = 0;
  2075                           
  2076                           ;RemoteCan.c: 269: } else {
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;RemoteCan.c: 268: collision_risk = 1;
  2080  011D4C  D00C               	goto	l825
  2081  011D4E                     l8612:
  2082                           
  2083                           ;RemoteCan.c: 273: switch_position = 2;
  2084  011D4E  0E02               	movlw	2
  2085  011D50  0100               	movlb	0	; () banked
  2086  011D52  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  2087                           
  2088                           ;RemoteCan.c: 274: dir = 0;
  2089  011D54  0E00               	movlw	0
  2090  011D56  0100               	movlb	0	; () banked
  2091  011D58  6FE7               	movwf	_dir& (0+255),b	;volatile
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;RemoteCan.c: 275: if (BKWD_sensor == 1) {
  2095  011D5A  A24A               	btfss	_BKWD_sensor/(0+8),_BKWD_sensor& (0+7),c	;volatile
  2096  011D5C  D002               	goto	l830
  2097  011D5E                     l8616:
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;RemoteCan.c: 276: collision_risk = 1;
  2101  011D5E  824B               	bsf	_collision_risk/(0+8),_collision_risk& (0+7),c	;volatile
  2102                           
  2103                           ;RemoteCan.c: 277: } else {
  2104  011D60  D002               	goto	l825
  2105  011D62                     l830:
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;RemoteCan.c: 278: collision_risk = 0;
  2109  011D62  924B               	bcf	_collision_risk/(0+8),_collision_risk& (0+7),c	;volatile
  2110                           
  2111                           ; BSR set to: 0
  2112  011D64  D000               	goto	l825
  2113  011D66                     l825:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;RemoteCan.c: 279: }
  2117                           ;RemoteCan.c: 280: }
  2118                           ;RemoteCan.c: 281: }
  2119                           ;RemoteCan.c: 284: if (F1_switch == 1) {
  2120  011D66  A64A               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  2121  011D68  D0A9               	goto	l832
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;RemoteCan.c: 285: y = 0;
  2125  011D6A  9C4C               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  2126                           
  2127                           ;RemoteCan.c: 286: if ((x == 0)&&(F2_switch == 0)) {
  2128  011D6C  AA4C               	btfss	_x/(0+8),_x& (0+7),c	;volatile
  2129                           
  2130                           ; BSR set to: 0
  2131  011D6E  B84A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2132  011D70  D02F               	goto	l8634
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;RemoteCan.c: 287: space_available = 0;
  2136  011D72  9E4B               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;RemoteCan.c: 288: parking_state = 1;
  2140  011D74  0E01               	movlw	1
  2141  011D76  0100               	movlb	0	; () banked
  2142  011D78  6FE9               	movwf	_parking_state& (0+255),b	;volatile
  2143                           
  2144                           ;RemoteCan.c: 289: JoystickConstants[1] = 5;
  2145  011D7A  0E00               	movlw	0
  2146  011D7C  0100               	movlb	0	; () banked
  2147  011D7E  6FBF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2148  011D80  0E00               	movlw	0
  2149  011D82  6FC0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2150  011D84  0EA0               	movlw	160
  2151  011D86  6FC1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2152  011D88  0E40               	movlw	64
  2153  011D8A  6FC2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2154                           
  2155                           ; BSR set to: 0
  2156                           
  2157                           ;RemoteCan.c: 290: while (!CANisTxReady());
  2158  011D8C  D000               	goto	l8626
  2159  011D8E                     l8626:
  2160  011D8E  EC32  F0AF         	call	_CANisTxReady	;wreg free
  2161  011D92  0900               	iorlw	0
  2162  011D94  B4D8               	btfsc	status,2,c
  2163  011D96  D7FB               	goto	l8626
  2164                           
  2165                           ;RemoteCan.c: 291: park_assist_state[0] = 0b00000001;
  2166  011D98  0E01               	movlw	1
  2167  011D9A  0101               	movlb	1	; () banked
  2168  011D9C  6F35               	movwf	_park_assist_state& (0+255),b
  2169                           
  2170                           ; BSR set to: 1
  2171                           ;RemoteCan.c: 292: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2172  011D9E  0E0C               	movlw	12
  2173  011DA0  0100               	movlb	0	; () banked
  2174  011DA2  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  2175  011DA4  0E00               	movlw	0
  2176  011DA6  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2177  011DA8  0E00               	movlw	0
  2178  011DAA  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2179  011DAC  0E00               	movlw	0
  2180  011DAE  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2181  011DB0  0E35               	movlw	low _park_assist_state
  2182  011DB2  0100               	movlb	0	; () banked
  2183  011DB4  6F74               	movwf	CANsendMessage@data& (0+255),b
  2184  011DB6  0E01               	movlw	high _park_assist_state
  2185  011DB8  0100               	movlb	0	; () banked
  2186  011DBA  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  2187  011DBC  0E08               	movlw	8
  2188  011DBE  0100               	movlb	0	; () banked
  2189  011DC0  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  2190  011DC2  0EBC               	movlw	188
  2191  011DC4  0100               	movlb	0	; () banked
  2192  011DC6  6F77               	movwf	CANsendMessage@flags& (0+255),b
  2193  011DC8  EC1B  F08A         	call	_CANsendMessage	;wreg free
  2194                           
  2195                           ;RemoteCan.c: 293: x = 1;
  2196  011DCC  8A4C               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  2197  011DCE  D000               	goto	l8634
  2198  011DD0                     l8634:
  2199                           
  2200                           ;RemoteCan.c: 294: }
  2201                           ;RemoteCan.c: 296: if ((F2_switch == 1)&&(space_available == 1)&&(space_gap_reached == 1
      +                          )) {
  2202  011DD0  B84A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2203  011DD2  AE4B               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2204  011DD4  D02A               	goto	l837
  2205  011DD6  A04C               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2206  011DD8  D028               	goto	l837
  2207                           
  2208                           ;RemoteCan.c: 297: if (z == 0) {
  2209  011DDA  BE4C               	btfsc	_z/(0+8),_z& (0+7),c	;volatile
  2210  011DDC  D028               	goto	l8652
  2211                           
  2212                           ;RemoteCan.c: 298: parking_message_ID = 4;
  2213  011DDE  0E04               	movlw	4
  2214  011DE0  0100               	movlb	0	; () banked
  2215  011DE2  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
  2216                           
  2217                           ;RemoteCan.c: 299: parking_state = 2;
  2218  011DE4  0E02               	movlw	2
  2219  011DE6  0100               	movlb	0	; () banked
  2220  011DE8  6FE9               	movwf	_parking_state& (0+255),b	;volatile
  2221                           
  2222                           ; BSR set to: 0
  2223                           
  2224                           ;RemoteCan.c: 300: while (!CANisTxReady());
  2225  011DEA  D000               	goto	l8644
  2226  011DEC                     l8644:
  2227  011DEC  EC32  F0AF         	call	_CANisTxReady	;wreg free
  2228  011DF0  0900               	iorlw	0
  2229  011DF2  B4D8               	btfsc	status,2,c
  2230  011DF4  D7FB               	goto	l8644
  2231                           
  2232                           ;RemoteCan.c: 301: CANsendMessage(0b00000001110, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  2233  011DF6  0E0E               	movlw	14
  2234  011DF8  0100               	movlb	0	; () banked
  2235  011DFA  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  2236  011DFC  0E00               	movlw	0
  2237  011DFE  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2238  011E00  0E00               	movlw	0
  2239  011E02  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2240  011E04  0E00               	movlw	0
  2241  011E06  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2242  011E08  0E1D               	movlw	low _data
  2243  011E0A  0100               	movlb	0	; () banked
  2244  011E0C  6F74               	movwf	CANsendMessage@data& (0+255),b
  2245  011E0E  0E01               	movlw	high _data
  2246  011E10  0100               	movlb	0	; () banked
  2247  011E12  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  2248  011E14  0E08               	movlw	8
  2249  011E16  0100               	movlb	0	; () banked
  2250  011E18  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  2251  011E1A  0EBC               	movlw	188
  2252  011E1C  0100               	movlb	0	; () banked
  2253  011E1E  6F77               	movwf	CANsendMessage@flags& (0+255),b
  2254  011E20  EC1B  F08A         	call	_CANsendMessage	;wreg free
  2255                           
  2256                           ;RemoteCan.c: 302: x = 0;
  2257  011E24  9A4C               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2258                           
  2259                           ;RemoteCan.c: 303: z = 1;
  2260  011E26  8E4C               	bsf	_z/(0+8),_z& (0+7),c	;volatile
  2261                           
  2262                           ;RemoteCan.c: 304: }
  2263                           ;RemoteCan.c: 305: } else {
  2264  011E28  D002               	goto	l8652
  2265  011E2A                     l837:
  2266                           
  2267                           ;RemoteCan.c: 306: z = 0;
  2268  011E2A  9E4C               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2269  011E2C  D000               	goto	l8652
  2270  011E2E                     l8652:
  2271                           
  2272                           ;RemoteCan.c: 307: }
  2273                           ;RemoteCan.c: 309: if ((time_counter - pr_time_5) >= 30) {
  2274  011E2E  C0D7  F156         	movff	_pr_time_5,??_main	;volatile
  2275  011E32  C0D8  F157         	movff	_pr_time_5+1,??_main+1	;volatile
  2276  011E36  C0D9  F158         	movff	_pr_time_5+2,??_main+2	;volatile
  2277  011E3A  C0DA  F159         	movff	_pr_time_5+3,??_main+3	;volatile
  2278  011E3E  0101               	movlb	1	; () banked
  2279  011E40  1F56               	comf	??_main& (0+255),f,b
  2280  011E42  1F57               	comf	(??_main+1)& (0+255),f,b
  2281  011E44  1F58               	comf	(??_main+2)& (0+255),f,b
  2282  011E46  1F59               	comf	(??_main+3)& (0+255),f,b
  2283  011E48  2B56               	incf	??_main& (0+255),f,b
  2284  011E4A  0E00               	movlw	0
  2285  011E4C  2357               	addwfc	(??_main+1)& (0+255),f,b
  2286  011E4E  2358               	addwfc	(??_main+2)& (0+255),f,b
  2287  011E50  2359               	addwfc	(??_main+3)& (0+255),f,b
  2288  011E52  5005               	movf	_time_counter,w,c	;volatile
  2289  011E54  0101               	movlb	1	; () banked
  2290  011E56  2556               	addwf	??_main& (0+255),w,b
  2291  011E58  0101               	movlb	1	; () banked
  2292  011E5A  6F5A               	movwf	(??_main+4)& (0+255),b
  2293  011E5C  5006               	movf	_time_counter+1,w,c	;volatile
  2294  011E5E  0101               	movlb	1	; () banked
  2295  011E60  2157               	addwfc	(??_main+1)& (0+255),w,b
  2296  011E62  0101               	movlb	1	; () banked
  2297  011E64  6F5B               	movwf	(??_main+5)& (0+255),b
  2298  011E66  5007               	movf	_time_counter+2,w,c	;volatile
  2299  011E68  0101               	movlb	1	; () banked
  2300  011E6A  2158               	addwfc	(??_main+2)& (0+255),w,b
  2301  011E6C  0101               	movlb	1	; () banked
  2302  011E6E  6F5C               	movwf	(??_main+6)& (0+255),b
  2303  011E70  5008               	movf	_time_counter+3,w,c	;volatile
  2304  011E72  0101               	movlb	1	; () banked
  2305  011E74  2159               	addwfc	(??_main+3)& (0+255),w,b
  2306  011E76  0101               	movlb	1	; () banked
  2307  011E78  6F5D               	movwf	(??_main+7)& (0+255),b
  2308  011E7A  0101               	movlb	1	; () banked
  2309  011E7C  515D               	movf	(??_main+7)& (0+255),w,b
  2310  011E7E  0101               	movlb	1	; () banked
  2311  011E80  115C               	iorwf	(??_main+6)& (0+255),w,b
  2312  011E82  0101               	movlb	1	; () banked
  2313  011E84  115B               	iorwf	(??_main+5)& (0+255),w,b
  2314  011E86  E105               	bnz	u10890
  2315  011E88  0E1E               	movlw	30
  2316  011E8A  0101               	movlb	1	; () banked
  2317  011E8C  5D5A               	subwf	(??_main+4)& (0+255),w,b
  2318  011E8E  A0D8               	btfss	status,0,c
  2319  011E90  D050               	goto	l8676
  2320  011E92                     u10890:
  2321                           
  2322                           ; BSR set to: 1
  2323                           ;RemoteCan.c: 310: pr_time_5 = time_counter;
  2324  011E92  C005  F0D7         	movff	_time_counter,_pr_time_5	;volatile
  2325  011E96  C006  F0D8         	movff	_time_counter+1,_pr_time_5+1	;volatile
  2326  011E9A  C007  F0D9         	movff	_time_counter+2,_pr_time_5+2	;volatile
  2327  011E9E  C008  F0DA         	movff	_time_counter+3,_pr_time_5+3	;volatile
  2328                           
  2329                           ;RemoteCan.c: 311: if ((space_available == 1)&&(space_gap_reached == 1)) {
  2330  011EA2  BE4B               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2331                           
  2332                           ; BSR set to: 1
  2333  011EA4  A04C               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2334  011EA6  D007               	goto	l844
  2335                           
  2336                           ; BSR set to: 1
  2337                           ;RemoteCan.c: 312: PORTDbits.RD6 = 1;
  2338  011EA8  8C83               	bsf	3971,6,c	;volatile
  2339                           
  2340                           ;RemoteCan.c: 313: if (F2_switch == 0) {
  2341  011EAA  B84A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2342  011EAC  D002               	goto	l845
  2343                           
  2344                           ; BSR set to: 1
  2345                           ;RemoteCan.c: 314: PORTDbits.RD5 = ~PORTDbits.RD5;
  2346  011EAE  7A83               	btg	3971,5,c	;volatile
  2347                           
  2348                           ;RemoteCan.c: 315: } else {
  2349  011EB0  D040               	goto	l8676
  2350  011EB2                     l845:
  2351                           
  2352                           ; BSR set to: 1
  2353                           ;RemoteCan.c: 316: PORTDbits.RD5 = 1;
  2354  011EB2  8A83               	bsf	3971,5,c	;volatile
  2355                           
  2356                           ; BSR set to: 1
  2357                           ;RemoteCan.c: 317: }
  2358                           ;RemoteCan.c: 318: } else {
  2359  011EB4  D03E               	goto	l8676
  2360  011EB6                     l844:
  2361                           
  2362                           ; BSR set to: 1
  2363                           ;RemoteCan.c: 319: PORTDbits.RD6 = ~PORTDbits.RD6;
  2364  011EB6  7C83               	btg	3971,6,c	;volatile
  2365  011EB8  D03A               	goto	l8674
  2366                           
  2367                           ; BSR set to: 1
  2368                           ;RemoteCan.c: 321: }
  2369                           ;RemoteCan.c: 322: }
  2370                           ;RemoteCan.c: 323: } else {
  2371                           
  2372                           ; BSR set to: 1
  2373                           
  2374                           ;RemoteCan.c: 320: PORTDbits.RD5 = 0;
  2375  011EBA  D03B               	goto	l8676
  2376  011EBC                     l832:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;RemoteCan.c: 324: x = 0;
  2380  011EBC  9A4C               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2381                           
  2382                           ;RemoteCan.c: 325: z = 0;
  2383  011EBE  9E4C               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2384                           
  2385                           ;RemoteCan.c: 326: parking_message_E = 0;
  2386  011EC0  9A4B               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  2387                           
  2388                           ;RemoteCan.c: 327: F2_switch = 0;
  2389  011EC2  984A               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2390                           
  2391                           ;RemoteCan.c: 328: space_available = 0;
  2392  011EC4  9E4B               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2393                           
  2394                           ;RemoteCan.c: 329: space_gap_reached = 0;
  2395  011EC6  904C               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2396                           
  2397                           ;RemoteCan.c: 330: PORTDbits.RD5 = 0;
  2398  011EC8  9A83               	bcf	3971,5,c	;volatile
  2399                           
  2400                           ;RemoteCan.c: 331: PORTDbits.RD6 = 0;
  2401  011ECA  9C83               	bcf	3971,6,c	;volatile
  2402                           
  2403                           ;RemoteCan.c: 332: if (y == 0) {
  2404  011ECC  BC4C               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2405  011ECE  D02E               	goto	l8672
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;RemoteCan.c: 333: parking_state = 0;
  2409  011ED0  0E00               	movlw	0
  2410  011ED2  0100               	movlb	0	; () banked
  2411  011ED4  6FE9               	movwf	_parking_state& (0+255),b	;volatile
  2412                           
  2413                           ;RemoteCan.c: 334: JoystickConstants[1] = 20;
  2414  011ED6  0E00               	movlw	0
  2415  011ED8  0100               	movlb	0	; () banked
  2416  011EDA  6FBF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2417  011EDC  0E00               	movlw	0
  2418  011EDE  6FC0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2419  011EE0  0EA0               	movlw	160
  2420  011EE2  6FC1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2421  011EE4  0E41               	movlw	65
  2422  011EE6  6FC2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2423                           
  2424                           ; BSR set to: 0
  2425                           
  2426                           ;RemoteCan.c: 335: while (!CANisTxReady());
  2427  011EE8  D000               	goto	l8664
  2428  011EEA                     l8664:
  2429  011EEA  EC32  F0AF         	call	_CANisTxReady	;wreg free
  2430  011EEE  0900               	iorlw	0
  2431  011EF0  B4D8               	btfsc	status,2,c
  2432  011EF2  D7FB               	goto	l8664
  2433                           
  2434                           ;RemoteCan.c: 336: park_assist_state[0] = 0b00000000;
  2435  011EF4  0E00               	movlw	0
  2436  011EF6  0101               	movlb	1	; () banked
  2437  011EF8  6F35               	movwf	_park_assist_state& (0+255),b
  2438                           
  2439                           ; BSR set to: 1
  2440                           ;RemoteCan.c: 337: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2441  011EFA  0E0C               	movlw	12
  2442  011EFC  0100               	movlb	0	; () banked
  2443  011EFE  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  2444  011F00  0E00               	movlw	0
  2445  011F02  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2446  011F04  0E00               	movlw	0
  2447  011F06  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2448  011F08  0E00               	movlw	0
  2449  011F0A  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2450  011F0C  0E35               	movlw	low _park_assist_state
  2451  011F0E  0100               	movlb	0	; () banked
  2452  011F10  6F74               	movwf	CANsendMessage@data& (0+255),b
  2453  011F12  0E01               	movlw	high _park_assist_state
  2454  011F14  0100               	movlb	0	; () banked
  2455  011F16  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  2456  011F18  0E08               	movlw	8
  2457  011F1A  0100               	movlb	0	; () banked
  2458  011F1C  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  2459  011F1E  0EBC               	movlw	188
  2460  011F20  0100               	movlb	0	; () banked
  2461  011F22  6F77               	movwf	CANsendMessage@flags& (0+255),b
  2462  011F24  EC1B  F08A         	call	_CANsendMessage	;wreg free
  2463                           
  2464                           ;RemoteCan.c: 338: y = 1;
  2465  011F28  8C4C               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2466  011F2A  D000               	goto	l8672
  2467  011F2C                     l8672:
  2468                           
  2469                           ;RemoteCan.c: 339: }
  2470                           ;RemoteCan.c: 340: PORTDbits.RD6 = 0;
  2471  011F2C  9C83               	bcf	3971,6,c	;volatile
  2472  011F2E                     l8674:
  2473                           
  2474                           ;RemoteCan.c: 341: PORTDbits.RD5 = 0;
  2475  011F2E  9A83               	bcf	3971,5,c	;volatile
  2476  011F30  D000               	goto	l8676
  2477  011F32                     l8676:
  2478                           
  2479                           ;RemoteCan.c: 342: }
  2480                           ;RemoteCan.c: 344: Joystick_Polling();
  2481  011F32  ECD7  F0AD         	call	_Joystick_Polling	;wreg free
  2482                           
  2483                           ;RemoteCan.c: 347: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2484  011F36  0E00               	movlw	0
  2485  011F38  0100               	movlb	0	; () banked
  2486  011F3A  6F9F               	movwf	___fladd@f2& (0+255),b
  2487  011F3C  0E00               	movlw	0
  2488  011F3E  6FA0               	movwf	(___fladd@f2+1)& (0+255),b
  2489  011F40  0E34               	movlw	52
  2490  011F42  6FA1               	movwf	(___fladd@f2+2)& (0+255),b
  2491  011F44  0E43               	movlw	67
  2492  011F46  6FA2               	movwf	(___fladd@f2+3)& (0+255),b
  2493  011F48  C0BB  F083         	movff	_JoystickConstants,___flmul@f2	;volatile
  2494  011F4C  C0BC  F084         	movff	_JoystickConstants+1,___flmul@f2+1	;volatile
  2495  011F50  C0BD  F085         	movff	_JoystickConstants+2,___flmul@f2+2	;volatile
  2496  011F54  C0BE  F086         	movff	_JoystickConstants+3,___flmul@f2+3	;volatile
  2497  011F58  0100               	movlb	0	; () banked
  2498  011F5A  51DF               	movf	_JoystickValues& (0+255),w,b	;volatile
  2499  011F5C  EC6C  F0AE         	call	___lbtofl
  2500  011F60  C07A  F07F         	movff	?___lbtofl,___flmul@f1
  2501  011F64  C07B  F080         	movff	?___lbtofl+1,___flmul@f1+1
  2502  011F68  C07C  F081         	movff	?___lbtofl+2,___flmul@f1+2
  2503  011F6C  C07D  F082         	movff	?___lbtofl+3,___flmul@f1+3
  2504  011F70  ECC2  F0A5         	call	___flmul	;wreg free
  2505  011F74  C07F  F08E         	movff	?___flmul,___flneg@f1
  2506  011F78  C080  F08F         	movff	?___flmul+1,___flneg@f1+1
  2507  011F7C  C081  F090         	movff	?___flmul+2,___flneg@f1+2
  2508  011F80  C082  F091         	movff	?___flmul+3,___flneg@f1+3
  2509  011F84  ECF8  F0AD         	call	___flneg	;wreg free
  2510  011F88  C08E  F09B         	movff	?___flneg,___fladd@f1
  2511  011F8C  C08F  F09C         	movff	?___flneg+1,___fladd@f1+1
  2512  011F90  C090  F09D         	movff	?___flneg+2,___fladd@f1+2
  2513  011F94  C091  F09E         	movff	?___flneg+3,___fladd@f1+3
  2514  011F98  ECAD  F09E         	call	___fladd	;wreg free
  2515  011F9C  C09B  F0A7         	movff	?___fladd,___fltol@f1
  2516  011FA0  C09C  F0A8         	movff	?___fladd+1,___fltol@f1+1
  2517  011FA4  C09D  F0A9         	movff	?___fladd+2,___fltol@f1+2
  2518  011FA8  C09E  F0AA         	movff	?___fladd+3,___fltol@f1+3
  2519  011FAC  EC0F  F0A7         	call	___fltol	;wreg free
  2520  011FB0  0100               	movlb	0	; () banked
  2521  011FB2  51A7               	movf	?___fltol& (0+255),w,b
  2522  011FB4  0101               	movlb	1	; () banked
  2523  011FB6  6F2D               	movwf	_data_steering& (0+255),b
  2524                           
  2525                           ; BSR set to: 1
  2526                           ;RemoteCan.c: 348: if (parking_state == 1) {
  2527  011FB8  0100               	movlb	0	; () banked
  2528  011FBA  05E9               	decf	_parking_state& (0+255),w,b	;volatile
  2529  011FBC  A4D8               	btfss	status,2,c
  2530  011FBE  D05C               	goto	l853
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;RemoteCan.c: 349: if (steering_correction_dir == 1) {
  2534  011FC0  A24C               	btfss	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2535  011FC2  D00F               	goto	l8686
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;RemoteCan.c: 350: check = data_steering[0] + steering_correction;
  2539  011FC4  0100               	movlb	0	; () banked
  2540  011FC6  51EA               	movf	_steering_correction& (0+255),w,b	;volatile
  2541  011FC8  C12D  F156         	movff	_data_steering,??_main
  2542  011FCC  0101               	movlb	1	; () banked
  2543  011FCE  6B57               	clrf	(??_main+1)& (0+255),b
  2544  011FD0  0101               	movlb	1	; () banked
  2545  011FD2  2756               	addwf	??_main& (0+255),f,b
  2546  011FD4  0E00               	movlw	0
  2547  011FD6  2357               	addwfc	(??_main+1)& (0+255),f,b
  2548  011FD8  C156  F0C7         	movff	??_main,_check	;volatile
  2549  011FDC  C157  F0C8         	movff	??_main+1,_check+1	;volatile
  2550  011FE0  D01B               	goto	L1
  2551  011FE2                     l8686:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;RemoteCan.c: 352: check = data_steering[0] - steering_correction;
  2555  011FE2  0100               	movlb	0	; () banked
  2556  011FE4  51EA               	movf	_steering_correction& (0+255),w,b	;volatile
  2557  011FE6  0101               	movlb	1	; () banked
  2558  011FE8  6F56               	movwf	??_main& (0+255),b
  2559  011FEA  6B57               	clrf	(??_main+1)& (0+255),b
  2560  011FEC  0101               	movlb	1	; () banked
  2561  011FEE  1F56               	comf	??_main& (0+255),f,b
  2562  011FF0  1F57               	comf	(??_main+1)& (0+255),f,b
  2563  011FF2  4B56               	infsnz	??_main& (0+255),f,b
  2564  011FF4  2B57               	incf	(??_main+1)& (0+255),f,b
  2565  011FF6  0101               	movlb	1	; () banked
  2566  011FF8  512D               	movf	_data_steering& (0+255),w,b
  2567  011FFA  0101               	movlb	1	; () banked
  2568  011FFC  6F58               	movwf	(??_main+2)& (0+255),b
  2569  011FFE  6B59               	clrf	(??_main+3)& (0+255),b
  2570  012000  0101               	movlb	1	; () banked
  2571  012002  5156               	movf	??_main& (0+255),w,b
  2572  012004  0101               	movlb	1	; () banked
  2573  012006  2758               	addwf	(??_main+2)& (0+255),f,b
  2574  012008  0101               	movlb	1	; () banked
  2575  01200A  5157               	movf	(??_main+1)& (0+255),w,b
  2576  01200C  0101               	movlb	1	; () banked
  2577  01200E  2359               	addwfc	(??_main+3)& (0+255),f,b
  2578  012010  C158  F0C7         	movff	??_main+2,_check	;volatile
  2579  012014  C159  F0C8         	movff	??_main+3,_check+1	;volatile
  2580  012018                     L1:
  2581  012018  0100               	movlb	0	; () banked
  2582  01201A  0E00               	movlw	0
  2583  01201C  BFC8               	btfsc	(_check+1)& (0+255),7,b	;volatile
  2584  01201E  0EFF               	movlw	-1
  2585  012020  6FC9               	movwf	(_check+2)& (0+255),b	;volatile
  2586  012022  6FCA               	movwf	(_check+3)& (0+255),b	;volatile
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;RemoteCan.c: 353: }
  2590                           ;RemoteCan.c: 354: if ((check >= 0)&&(check <= 180)) {
  2591  012024  0100               	movlb	0	; () banked
  2592  012026  BFCA               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2593  012028  D012               	goto	l8692
  2594                           
  2595                           ; BSR set to: 0
  2596  01202A  0100               	movlb	0	; () banked
  2597  01202C  BFCA               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2598  01202E  D00C               	goto	l8690
  2599  012030  0100               	movlb	0	; () banked
  2600  012032  51CA               	movf	(_check+3)& (0+255),w,b	;volatile
  2601  012034  0100               	movlb	0	; () banked
  2602  012036  11C9               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2603  012038  0100               	movlb	0	; () banked
  2604  01203A  11C8               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2605  01203C  E108               	bnz	l8692
  2606  01203E  0EB5               	movlw	181
  2607  012040  0100               	movlb	0	; () banked
  2608  012042  5DC7               	subwf	_check& (0+255),w,b	;volatile
  2609  012044  B0D8               	btfsc	status,0,c
  2610  012046  D003               	goto	l8692
  2611  012048                     l8690:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;RemoteCan.c: 355: data_steering[0] = check;
  2615  012048  C0C7  F12D         	movff	_check,_data_steering	;volatile
  2616                           
  2617                           ;RemoteCan.c: 356: } else {
  2618  01204C  D019               	goto	l860
  2619  01204E                     l8692:
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;RemoteCan.c: 357: if (check > 180) {
  2623  01204E  0100               	movlb	0	; () banked
  2624  012050  BFCA               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2625  012052  D00E               	goto	l8696
  2626  012054  0100               	movlb	0	; () banked
  2627  012056  51CA               	movf	(_check+3)& (0+255),w,b	;volatile
  2628  012058  0100               	movlb	0	; () banked
  2629  01205A  11C9               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2630  01205C  0100               	movlb	0	; () banked
  2631  01205E  11C8               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2632  012060  E105               	bnz	u10990
  2633  012062  0EB5               	movlw	181
  2634  012064  0100               	movlb	0	; () banked
  2635  012066  5DC7               	subwf	_check& (0+255),w,b	;volatile
  2636  012068  A0D8               	btfss	status,0,c
  2637  01206A  D002               	goto	l8696
  2638  01206C                     u10990:
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;RemoteCan.c: 358: data_steering[0] = 180;
  2642  01206C  0EB4               	movlw	180
  2643  01206E  D001               	goto	L2
  2644  012070                     l8696:
  2645                           
  2646                           ;RemoteCan.c: 360: data_steering[0] = 0;
  2647  012070  0E00               	movlw	0
  2648  012072                     L2:
  2649  012072  0101               	movlb	1	; () banked
  2650  012074  6F2D               	movwf	_data_steering& (0+255),b
  2651                           
  2652                           ; BSR set to: 1
  2653                           ;RemoteCan.c: 361: }
  2654                           ;RemoteCan.c: 362: }
  2655                           ;RemoteCan.c: 363: } else {
  2656                           
  2657                           ; BSR set to: 1
  2658  012076  D004               	goto	l860
  2659  012078                     l853:
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;RemoteCan.c: 364: steering_correction_dir = 0;
  2663  012078  924C               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;RemoteCan.c: 365: steering_correction = 0;
  2667  01207A  0E00               	movlw	0
  2668  01207C  0100               	movlb	0	; () banked
  2669  01207E  6FEA               	movwf	_steering_correction& (0+255),b	;volatile
  2670  012080                     l860:
  2671                           
  2672                           ;RemoteCan.c: 366: }
  2673                           ;RemoteCan.c: 369: if ((switch_position != 0)&&(collision_risk == 0)) {
  2674  012080  0100               	movlb	0	; () banked
  2675  012082  51EB               	movf	_switch_position& (0+255),w,b	;volatile
  2676  012084  A4D8               	btfss	status,2,c
  2677                           
  2678                           ; BSR set to: 0
  2679  012086  B24B               	btfsc	_collision_risk/(0+8),_collision_risk& (0+7),c	;volatile
  2680  012088  D053               	goto	l8724
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;RemoteCan.c: 370: if (JoystickValues[1] > 132) {
  2684  01208A  0E84               	movlw	132
  2685  01208C  0100               	movlb	0	; () banked
  2686  01208E  65E0               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2687  012090  D030               	goto	l8710
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;RemoteCan.c: 371: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2691  012092  C0BF  F083         	movff	_JoystickConstants+4,___flmul@f2	;volatile
  2692  012096  C0C0  F084         	movff	_JoystickConstants+5,___flmul@f2+1	;volatile
  2693  01209A  C0C1  F085         	movff	_JoystickConstants+6,___flmul@f2+2	;volatile
  2694  01209E  C0C2  F086         	movff	_JoystickConstants+7,___flmul@f2+3	;volatile
  2695  0120A2  0E7E               	movlw	126
  2696  0120A4  0100               	movlb	0	; () banked
  2697  0120A6  25E0               	addwf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2698  0120A8  0100               	movlb	0	; () banked
  2699  0120AA  6F7A               	movwf	___awtofl@c& (0+255),b
  2700  0120AC  0100               	movlb	0	; () banked
  2701  0120AE  6B7B               	clrf	(___awtofl@c+1)& (0+255),b
  2702  0120B0  0EFF               	movlw	255
  2703  0120B2  237B               	addwfc	(___awtofl@c+1)& (0+255),f,b
  2704  0120B4  EC6A  F0AD         	call	___awtofl	;wreg free
  2705  0120B8  C07A  F07F         	movff	?___awtofl,___flmul@f1
  2706  0120BC  C07B  F080         	movff	?___awtofl+1,___flmul@f1+1
  2707  0120C0  C07C  F081         	movff	?___awtofl+2,___flmul@f1+2
  2708  0120C4  C07D  F082         	movff	?___awtofl+3,___flmul@f1+3
  2709  0120C8  ECC2  F0A5         	call	___flmul	;wreg free
  2710  0120CC  C07F  F0A7         	movff	?___flmul,___fltol@f1
  2711  0120D0  C080  F0A8         	movff	?___flmul+1,___fltol@f1+1
  2712  0120D4  C081  F0A9         	movff	?___flmul+2,___fltol@f1+2
  2713  0120D8  C082  F0AA         	movff	?___flmul+3,___fltol@f1+3
  2714  0120DC  EC0F  F0A7         	call	___fltol	;wreg free
  2715  0120E0  C0A7  F0E5         	movff	?___fltol,_set_speed	;volatile
  2716  0120E4  C0A8  F0E6         	movff	?___fltol+1,_set_speed+1	;volatile
  2717                           
  2718                           ;RemoteCan.c: 372: data_brake [0] = 3;
  2719  0120E8  0E03               	movlw	3
  2720  0120EA  D01F               	goto	L3
  2721  0120EC                     l8708:
  2722                           
  2723                           ;RemoteCan.c: 373: data_brake [1] = 0;
  2724  0120EC  0E00               	movlw	0
  2725  0120EE  6E21               	movwf	_data_brake+1,c
  2726                           
  2727                           ;RemoteCan.c: 374: } else {
  2728  0120F0  D027               	goto	l8726
  2729  0120F2                     l8710:
  2730                           
  2731                           ;RemoteCan.c: 375: set_speed = 0;
  2732  0120F2  0E00               	movlw	0
  2733  0120F4  0100               	movlb	0	; () banked
  2734  0120F6  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2735  0120F8  0E00               	movlw	0
  2736  0120FA  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;RemoteCan.c: 376: if (JoystickValues[1] <= 65) {
  2740  0120FC  0E42               	movlw	66
  2741  0120FE  0100               	movlb	0	; () banked
  2742  012100  61E0               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2743  012102  D005               	goto	l8716
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;RemoteCan.c: 377: data_brake [0] = 0b00000010;
  2747  012104  0E02               	movlw	2
  2748  012106  6E20               	movwf	_data_brake,c
  2749                           
  2750                           ;RemoteCan.c: 378: data_brake [1] = 0;
  2751  012108  0E00               	movlw	0
  2752  01210A  6E21               	movwf	_data_brake+1,c
  2753  01210C  D000               	goto	l8716
  2754  01210E                     l8716:
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;RemoteCan.c: 379: }
  2758                           ;RemoteCan.c: 380: if (JoystickValues[1] <= 20) {
  2759  01210E  0E15               	movlw	21
  2760  012110  0100               	movlb	0	; () banked
  2761  012112  61E0               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2762  012114  D005               	goto	l8720
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;RemoteCan.c: 381: data_brake [0] = 0b00000001;
  2766  012116  0E01               	movlw	1
  2767  012118  6E20               	movwf	_data_brake,c
  2768                           
  2769                           ;RemoteCan.c: 382: data_brake [1] = 0;
  2770  01211A  0E00               	movlw	0
  2771  01211C  6E21               	movwf	_data_brake+1,c
  2772  01211E  D000               	goto	l8720
  2773  012120                     l8720:
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;RemoteCan.c: 383: }
  2777                           ;RemoteCan.c: 384: if (JoystickValues[1] <= 5) {
  2778  012120  0E06               	movlw	6
  2779  012122  0100               	movlb	0	; () banked
  2780  012124  61E0               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2781  012126  D00C               	goto	l8726
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;RemoteCan.c: 385: data_brake [0] = 0b00000000;
  2785  012128  0E00               	movlw	0
  2786  01212A                     L3:
  2787  01212A  6E20               	movwf	_data_brake,c
  2788  01212C  D7DF               	goto	l8708
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;RemoteCan.c: 387: }
  2792                           ;RemoteCan.c: 388: }
  2793                           ;RemoteCan.c: 389: } else {
  2794                           
  2795                           ; BSR set to: 0
  2796                           
  2797                           ;RemoteCan.c: 386: data_brake [1] = 0;
  2798  01212E  D008               	goto	l8726
  2799  012130                     l8724:
  2800                           
  2801                           ; BSR set to: 0
  2802                           ;RemoteCan.c: 390: set_speed = 0;
  2803  012130  0E00               	movlw	0
  2804  012132  0100               	movlb	0	; () banked
  2805  012134  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2806  012136  0E00               	movlw	0
  2807  012138  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  2808                           
  2809                           ;RemoteCan.c: 391: data_brake [0] = 0b00000000;
  2810  01213A  0E00               	movlw	0
  2811  01213C  6E20               	movwf	_data_brake,c
  2812  01213E  D000               	goto	l8726
  2813  012140                     l8726:
  2814                           
  2815                           ;RemoteCan.c: 392: }
  2816                           ;RemoteCan.c: 394: if (newMessageCan == 1) {
  2817  012140  A64B               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2818  012142  D004               	goto	l8732
  2819                           
  2820                           ;RemoteCan.c: 395: CAN_Rx();
  2821  012144  ECA6  F0AB         	call	_CAN_Rx	;wreg free
  2822                           
  2823                           ;RemoteCan.c: 396: newMessageCan = 0;
  2824  012148  964B               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2825  01214A  D000               	goto	l8732
  2826  01214C                     l8732:
  2827                           
  2828                           ;RemoteCan.c: 397: }
  2829                           ;RemoteCan.c: 399: if ((((time_counter - pr_time_2) >= 2) && (parking_message_ID < 2)) |
      +                          | (Can_Tx_Force == 1)) {
  2830  01214C  C0CF  F156         	movff	_pr_time_2,??_main	;volatile
  2831  012150  C0D0  F157         	movff	_pr_time_2+1,??_main+1	;volatile
  2832  012154  C0D1  F158         	movff	_pr_time_2+2,??_main+2	;volatile
  2833  012158  C0D2  F159         	movff	_pr_time_2+3,??_main+3	;volatile
  2834  01215C  0101               	movlb	1	; () banked
  2835  01215E  1F56               	comf	??_main& (0+255),f,b
  2836  012160  1F57               	comf	(??_main+1)& (0+255),f,b
  2837  012162  1F58               	comf	(??_main+2)& (0+255),f,b
  2838  012164  1F59               	comf	(??_main+3)& (0+255),f,b
  2839  012166  2B56               	incf	??_main& (0+255),f,b
  2840  012168  0E00               	movlw	0
  2841  01216A  2357               	addwfc	(??_main+1)& (0+255),f,b
  2842  01216C  2358               	addwfc	(??_main+2)& (0+255),f,b
  2843  01216E  2359               	addwfc	(??_main+3)& (0+255),f,b
  2844  012170  5005               	movf	_time_counter,w,c	;volatile
  2845  012172  0101               	movlb	1	; () banked
  2846  012174  2556               	addwf	??_main& (0+255),w,b
  2847  012176  0101               	movlb	1	; () banked
  2848  012178  6F5A               	movwf	(??_main+4)& (0+255),b
  2849  01217A  5006               	movf	_time_counter+1,w,c	;volatile
  2850  01217C  0101               	movlb	1	; () banked
  2851  01217E  2157               	addwfc	(??_main+1)& (0+255),w,b
  2852  012180  0101               	movlb	1	; () banked
  2853  012182  6F5B               	movwf	(??_main+5)& (0+255),b
  2854  012184  5007               	movf	_time_counter+2,w,c	;volatile
  2855  012186  0101               	movlb	1	; () banked
  2856  012188  2158               	addwfc	(??_main+2)& (0+255),w,b
  2857  01218A  0101               	movlb	1	; () banked
  2858  01218C  6F5C               	movwf	(??_main+6)& (0+255),b
  2859  01218E  5008               	movf	_time_counter+3,w,c	;volatile
  2860  012190  0101               	movlb	1	; () banked
  2861  012192  2159               	addwfc	(??_main+3)& (0+255),w,b
  2862  012194  0101               	movlb	1	; () banked
  2863  012196  6F5D               	movwf	(??_main+7)& (0+255),b
  2864  012198  0101               	movlb	1	; () banked
  2865  01219A  515D               	movf	(??_main+7)& (0+255),w,b
  2866  01219C  0101               	movlb	1	; () banked
  2867  01219E  115C               	iorwf	(??_main+6)& (0+255),w,b
  2868  0121A0  0101               	movlb	1	; () banked
  2869  0121A2  115B               	iorwf	(??_main+5)& (0+255),w,b
  2870  0121A4  E105               	bnz	u11070
  2871  0121A6  0E02               	movlw	2
  2872  0121A8  0101               	movlb	1	; () banked
  2873  0121AA  5D5A               	subwf	(??_main+4)& (0+255),w,b
  2874  0121AC  A0D8               	btfss	status,0,c
  2875  0121AE  D004               	goto	l873
  2876  0121B0                     u11070:
  2877                           
  2878                           ; BSR set to: 1
  2879  0121B0  0E01               	movlw	1
  2880  0121B2  0100               	movlb	0	; () banked
  2881  0121B4  65E8               	cpfsgt	_parking_message_ID& (0+255),b	;volatile
  2882  0121B6  D002               	goto	l871
  2883  0121B8                     l873:
  2884  0121B8  A44A               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2885  0121BA  D01C               	goto	l8744
  2886  0121BC                     l871:
  2887                           
  2888                           ;RemoteCan.c: 400: if (Can_Tx_Force == 1) {
  2889  0121BC  A44A               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2890  0121BE  D00F               	goto	l8740
  2891                           
  2892                           ;RemoteCan.c: 401: dir = 1;
  2893  0121C0  0E01               	movlw	1
  2894  0121C2  0100               	movlb	0	; () banked
  2895  0121C4  6FE7               	movwf	_dir& (0+255),b	;volatile
  2896                           
  2897                           ;RemoteCan.c: 402: set_speed = 0;
  2898  0121C6  0E00               	movlw	0
  2899  0121C8  0100               	movlb	0	; () banked
  2900  0121CA  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2901  0121CC  0E00               	movlw	0
  2902  0121CE  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  2903                           
  2904                           ;RemoteCan.c: 403: data_steering [0] = 90;
  2905  0121D0  0E5A               	movlw	90
  2906  0121D2  0101               	movlb	1	; () banked
  2907  0121D4  6F2D               	movwf	_data_steering& (0+255),b
  2908                           
  2909                           ;RemoteCan.c: 404: data_brake [0] = 0b00000000;
  2910  0121D6  0E00               	movlw	0
  2911  0121D8  6E20               	movwf	_data_brake,c
  2912                           
  2913                           ; BSR set to: 1
  2914                           ;RemoteCan.c: 405: Can_Tx_Force = 0;
  2915  0121DA  944A               	bcf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2916  0121DC  D000               	goto	l8740
  2917  0121DE                     l8740:
  2918                           
  2919                           ;RemoteCan.c: 406: }
  2920                           ;RemoteCan.c: 407: pr_time_2 = time_counter;
  2921  0121DE  C005  F0CF         	movff	_time_counter,_pr_time_2	;volatile
  2922  0121E2  C006  F0D0         	movff	_time_counter+1,_pr_time_2+1	;volatile
  2923  0121E6  C007  F0D1         	movff	_time_counter+2,_pr_time_2+2	;volatile
  2924  0121EA  C008  F0D2         	movff	_time_counter+3,_pr_time_2+3	;volatile
  2925                           
  2926                           ;RemoteCan.c: 408: CAN_Tx();
  2927  0121EE  ECBC  F0A9         	call	_CAN_Tx	;wreg free
  2928  0121F2  D000               	goto	l8744
  2929  0121F4                     l8744:
  2930                           
  2931                           ;RemoteCan.c: 409: }
  2932                           ;RemoteCan.c: 412: if (time_counter >= pr_time_6) {
  2933  0121F4  0100               	movlb	0	; () banked
  2934  0121F6  51DB               	movf	_pr_time_6& (0+255),w,b	;volatile
  2935  0121F8  5C05               	subwf	_time_counter,w,c	;volatile
  2936  0121FA  0100               	movlb	0	; () banked
  2937  0121FC  51DC               	movf	(_pr_time_6+1)& (0+255),w,b	;volatile
  2938  0121FE  5806               	subwfb	_time_counter+1,w,c	;volatile
  2939  012200  0100               	movlb	0	; () banked
  2940  012202  51DD               	movf	(_pr_time_6+2)& (0+255),w,b	;volatile
  2941  012204  5807               	subwfb	_time_counter+2,w,c	;volatile
  2942  012206  0100               	movlb	0	; () banked
  2943  012208  51DE               	movf	(_pr_time_6+3)& (0+255),w,b	;volatile
  2944  01220A  5808               	subwfb	_time_counter+3,w,c	;volatile
  2945  01220C  A0D8               	btfss	status,0,c
  2946  01220E  D05D               	goto	l8772
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;RemoteCan.c: 413: if ((time_counter - pr_time_3) >= (100 / 10)) {
  2950  012210  C0D3  F156         	movff	_pr_time_3,??_main	;volatile
  2951  012214  C0D4  F157         	movff	_pr_time_3+1,??_main+1	;volatile
  2952  012218  C0D5  F158         	movff	_pr_time_3+2,??_main+2	;volatile
  2953  01221C  C0D6  F159         	movff	_pr_time_3+3,??_main+3	;volatile
  2954  012220  0101               	movlb	1	; () banked
  2955  012222  1F56               	comf	??_main& (0+255),f,b
  2956  012224  1F57               	comf	(??_main+1)& (0+255),f,b
  2957  012226  1F58               	comf	(??_main+2)& (0+255),f,b
  2958  012228  1F59               	comf	(??_main+3)& (0+255),f,b
  2959  01222A  2B56               	incf	??_main& (0+255),f,b
  2960  01222C  0E00               	movlw	0
  2961  01222E  2357               	addwfc	(??_main+1)& (0+255),f,b
  2962  012230  2358               	addwfc	(??_main+2)& (0+255),f,b
  2963  012232  2359               	addwfc	(??_main+3)& (0+255),f,b
  2964  012234  5005               	movf	_time_counter,w,c	;volatile
  2965  012236  0101               	movlb	1	; () banked
  2966  012238  2556               	addwf	??_main& (0+255),w,b
  2967  01223A  0101               	movlb	1	; () banked
  2968  01223C  6F5A               	movwf	(??_main+4)& (0+255),b
  2969  01223E  5006               	movf	_time_counter+1,w,c	;volatile
  2970  012240  0101               	movlb	1	; () banked
  2971  012242  2157               	addwfc	(??_main+1)& (0+255),w,b
  2972  012244  0101               	movlb	1	; () banked
  2973  012246  6F5B               	movwf	(??_main+5)& (0+255),b
  2974  012248  5007               	movf	_time_counter+2,w,c	;volatile
  2975  01224A  0101               	movlb	1	; () banked
  2976  01224C  2158               	addwfc	(??_main+2)& (0+255),w,b
  2977  01224E  0101               	movlb	1	; () banked
  2978  012250  6F5C               	movwf	(??_main+6)& (0+255),b
  2979  012252  5008               	movf	_time_counter+3,w,c	;volatile
  2980  012254  0101               	movlb	1	; () banked
  2981  012256  2159               	addwfc	(??_main+3)& (0+255),w,b
  2982  012258  0101               	movlb	1	; () banked
  2983  01225A  6F5D               	movwf	(??_main+7)& (0+255),b
  2984  01225C  0101               	movlb	1	; () banked
  2985  01225E  515D               	movf	(??_main+7)& (0+255),w,b
  2986  012260  0101               	movlb	1	; () banked
  2987  012262  115C               	iorwf	(??_main+6)& (0+255),w,b
  2988  012264  0101               	movlb	1	; () banked
  2989  012266  115B               	iorwf	(??_main+5)& (0+255),w,b
  2990  012268  E105               	bnz	u11120
  2991  01226A  0E0A               	movlw	10
  2992  01226C  0101               	movlb	1	; () banked
  2993  01226E  5D5A               	subwf	(??_main+4)& (0+255),w,b
  2994  012270  A0D8               	btfss	status,0,c
  2995  012272  D4C8               	goto	l8560
  2996  012274                     u11120:
  2997                           
  2998                           ; BSR set to: 1
  2999                           ;RemoteCan.c: 414: pr_time_3 = time_counter;
  3000  012274  C005  F0D3         	movff	_time_counter,_pr_time_3	;volatile
  3001  012278  C006  F0D4         	movff	_time_counter+1,_pr_time_3+1	;volatile
  3002  01227C  C007  F0D5         	movff	_time_counter+2,_pr_time_3+2	;volatile
  3003  012280  C008  F0D6         	movff	_time_counter+3,_pr_time_3+3	;volatile
  3004                           
  3005                           ;RemoteCan.c: 415: if (parking_message_E == 1) {
  3006  012284  AA4B               	btfss	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3007  012286  D01E               	goto	l8770
  3008                           
  3009                           ; BSR set to: 1
  3010                           ;RemoteCan.c: 416: display_refresh = 1;
  3011  012288  844B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  3012                           
  3013                           ; BSR set to: 1
  3014                           ;RemoteCan.c: 417: if (parking_message_ID == 0) {
  3015  01228A  0100               	movlb	0	; () banked
  3016  01228C  51E8               	movf	_parking_message_ID& (0+255),w,b	;volatile
  3017  01228E  A4D8               	btfss	status,2,c
  3018  012290  D005               	goto	l8758
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;RemoteCan.c: 418: LCD_Gap();
  3022  012292  EC7D  F0AC         	call	_LCD_Gap	;wreg free
  3023                           
  3024                           ;RemoteCan.c: 419: parking_message_ID++;
  3025  012296  0100               	movlb	0	; () banked
  3026  012298  2BE8               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3027  01229A  D000               	goto	l8758
  3028  01229C                     l8758:
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;RemoteCan.c: 420: }
  3032                           ;RemoteCan.c: 421: if (parking_message_ID == 2) {
  3033  01229C  0E02               	movlw	2
  3034  01229E  0100               	movlb	0	; () banked
  3035  0122A0  19E8               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3036  0122A2  A4D8               	btfss	status,2,c
  3037  0122A4  D005               	goto	l8764
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;RemoteCan.c: 422: LCD_Park();
  3041  0122A6  EC4B  F0AC         	call	_LCD_Park	;wreg free
  3042                           
  3043                           ;RemoteCan.c: 423: parking_message_ID++;
  3044  0122AA  0100               	movlb	0	; () banked
  3045  0122AC  2BE8               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3046  0122AE  D000               	goto	l8764
  3047  0122B0                     l8764:
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;RemoteCan.c: 424: }
  3051                           ;RemoteCan.c: 425: if (parking_message_ID == 4) {
  3052  0122B0  0E04               	movlw	4
  3053  0122B2  0100               	movlb	0	; () banked
  3054  0122B4  19E8               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3055  0122B6  A4D8               	btfss	status,2,c
  3056  0122B8  D4A5               	goto	l8560
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;RemoteCan.c: 426: LCD_Parking();
  3060  0122BA  EC19  F0AC         	call	_LCD_Parking	;wreg free
  3061                           
  3062                           ;RemoteCan.c: 427: parking_message_ID++;
  3063  0122BE  0100               	movlb	0	; () banked
  3064  0122C0  2BE8               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;RemoteCan.c: 428: }
  3068                           ;RemoteCan.c: 429: } else {
  3069  0122C2  D4A0               	goto	l8560
  3070  0122C4                     l8770:
  3071                           
  3072                           ;RemoteCan.c: 430: LCD_Handler();
  3073  0122C4  ECE3  F09F         	call	_LCD_Handler	;wreg free
  3074                           
  3075                           ;RemoteCan.c: 431: }
  3076                           ;RemoteCan.c: 432: }
  3077                           ;RemoteCan.c: 433: } else {
  3078  0122C8  D49D               	goto	l8560
  3079  0122CA                     l8772:
  3080                           
  3081                           ;RemoteCan.c: 434: if (parking_message_ID == 6) {
  3082  0122CA  0E06               	movlw	6
  3083  0122CC  0100               	movlb	0	; () banked
  3084  0122CE  19E8               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3085  0122D0  A4D8               	btfss	status,2,c
  3086  0122D2  D498               	goto	l8560
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;RemoteCan.c: 435: if (parking_error == 1) {
  3090  0122D4  A84B               	btfss	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3091  0122D6  D023               	goto	l8786
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;RemoteCan.c: 436: parking_error = 0;
  3095  0122D8  984B               	bcf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;RemoteCan.c: 437: LCD_Error();
  3099  0122DA  ECAF  F0AC         	call	_LCD_Error	;wreg free
  3100                           
  3101                           ;RemoteCan.c: 438: while (CANisTxReady() != 1);
  3102  0122DE  D000               	goto	l8780
  3103  0122E0                     l8780:
  3104  0122E0  EC32  F0AF         	call	_CANisTxReady	;wreg free
  3105  0122E4  06E8               	decf	wreg,f,c
  3106  0122E6  A4D8               	btfss	status,2,c
  3107  0122E8  D7FB               	goto	l8780
  3108                           
  3109                           ;RemoteCan.c: 439: data_brake [0] = 0b00000000;
  3110  0122EA  0E00               	movlw	0
  3111  0122EC  6E20               	movwf	_data_brake,c
  3112                           
  3113                           ;RemoteCan.c: 440: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3114  0122EE  0E06               	movlw	6
  3115  0122F0  0100               	movlb	0	; () banked
  3116  0122F2  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  3117  0122F4  0E00               	movlw	0
  3118  0122F6  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3119  0122F8  0E00               	movlw	0
  3120  0122FA  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3121  0122FC  0E00               	movlw	0
  3122  0122FE  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3123  012300  0E20               	movlw	low _data_brake
  3124  012302  0100               	movlb	0	; () banked
  3125  012304  6F74               	movwf	CANsendMessage@data& (0+255),b
  3126  012306  0E00               	movlw	high _data_brake
  3127  012308  0100               	movlb	0	; () banked
  3128  01230A  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  3129  01230C  0E08               	movlw	8
  3130  01230E  0100               	movlb	0	; () banked
  3131  012310  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  3132  012312  0EBC               	movlw	188
  3133  012314  0100               	movlb	0	; () banked
  3134  012316  6F77               	movwf	CANsendMessage@flags& (0+255),b
  3135  012318  EC1B  F08A         	call	_CANsendMessage	;wreg free
  3136                           
  3137                           ;RemoteCan.c: 441: } else {
  3138  01231C  D003               	goto	l8788
  3139  01231E                     l8786:
  3140                           
  3141                           ;RemoteCan.c: 442: LCD_End();
  3142  01231E  ECE1  F0AC         	call	_LCD_End	;wreg free
  3143  012322  D000               	goto	l8788
  3144  012324                     l8788:
  3145                           
  3146                           ;RemoteCan.c: 443: }
  3147                           ;RemoteCan.c: 444: parking_message_ID = 0;
  3148  012324  0E00               	movlw	0
  3149  012326  0100               	movlb	0	; () banked
  3150  012328  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;RemoteCan.c: 445: parking_message_E = 0;
  3154  01232A  9A4B               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3155                           
  3156                           ; BSR set to: 0
  3157                           
  3158                           ; BSR set to: 0
  3159                           
  3160                           ; BSR set to: 0
  3161  01232C  D46B               	goto	l8560
  3162                           
  3163                           ; BSR set to: 0
  3164                           
  3165                           ; BSR set to: 0
  3166  01232E  EF5F  F000         	goto	start
  3167  012332                     __end_of_main:
  3168                           	opt stack 0
  3169                           tblptru	equ	0xFF8
  3170                           tblptrh	equ	0xFF7
  3171                           tblptrl	equ	0xFF6
  3172                           tablat	equ	0xFF5
  3173                           postinc0	equ	0xFEE
  3174                           wreg	equ	0xFE8
  3175                           status	equ	0xFD8
  3176                           
  3177 ;; *************** function _board_initialization *****************
  3178 ;; Defined at:
  3179 ;;		line 665 in file "RemoteCan.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;		None
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;		None
  3184 ;; Return value:  Size  Location     Type
  3185 ;;		None               void
  3186 ;; Registers used:
  3187 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3197 ;;Total ram usage:        0 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    9
  3200 ;; This function calls:
  3201 ;;		_CANInitialize
  3202 ;;		_LCD_clear
  3203 ;;		_LCD_goto_line
  3204 ;;		_LCD_initialize
  3205 ;; This function is called by:
  3206 ;;		_main
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text1
  3211  0154EC                     __ptext1:
  3212                           	opt stack 0
  3213  0154EC                     _board_initialization:
  3214                           	opt stack 21
  3215                           
  3216                           ;RemoteCan.c: 667: LATA = 0x00;
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;incstack = 0
  3220  0154EC  0E00               	movlw	0
  3221  0154EE  6E89               	movwf	3977,c	;volatile
  3222                           
  3223                           ;RemoteCan.c: 668: TRISA = 0b00011111;
  3224  0154F0  0E1F               	movlw	31
  3225  0154F2  6E92               	movwf	3986,c	;volatile
  3226                           
  3227                           ;RemoteCan.c: 669: LATB = 0x00;
  3228  0154F4  0E00               	movlw	0
  3229  0154F6  6E8A               	movwf	3978,c	;volatile
  3230                           
  3231                           ;RemoteCan.c: 670: TRISB = 0b11111011;
  3232  0154F8  0EFB               	movlw	251
  3233  0154FA  6E93               	movwf	3987,c	;volatile
  3234                           
  3235                           ;RemoteCan.c: 671: LATC = 0x00;
  3236  0154FC  0E00               	movlw	0
  3237  0154FE  6E8B               	movwf	3979,c	;volatile
  3238                           
  3239                           ;RemoteCan.c: 672: TRISC = 0b11110000;
  3240  015500  0EF0               	movlw	240
  3241  015502  6E94               	movwf	3988,c	;volatile
  3242                           
  3243                           ;RemoteCan.c: 673: LATD = 0x00;
  3244  015504  0E00               	movlw	0
  3245  015506  6E8C               	movwf	3980,c	;volatile
  3246                           
  3247                           ;RemoteCan.c: 674: TRISD = 0x00;
  3248  015508  0E00               	movlw	0
  3249  01550A  6E95               	movwf	3989,c	;volatile
  3250                           
  3251                           ;RemoteCan.c: 675: LATE = 0x00;
  3252  01550C  0E00               	movlw	0
  3253  01550E  6E8D               	movwf	3981,c	;volatile
  3254                           
  3255                           ;RemoteCan.c: 676: TRISE = 0x00;
  3256  015510  0E00               	movlw	0
  3257  015512  6E96               	movwf	3990,c	;volatile
  3258                           
  3259                           ;RemoteCan.c: 678: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3260  015514  0E06               	movlw	6
  3261  015516  0100               	movlb	0	; () banked
  3262  015518  6F7E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3263  01551A  0E05               	movlw	5
  3264  01551C  0100               	movlb	0	; () banked
  3265  01551E  6F7F               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3266  015520  0E01               	movlw	1
  3267  015522  0100               	movlb	0	; () banked
  3268  015524  6F80               	movwf	CANInitialize@SJW& (0+255),b
  3269  015526  0E03               	movlw	3
  3270  015528  0100               	movlb	0	; () banked
  3271  01552A  6F81               	movwf	CANInitialize@BRP& (0+255),b
  3272  01552C  0E9D               	movlw	157
  3273  01552E  0100               	movlb	0	; () banked
  3274  015530  6F82               	movwf	CANInitialize@flags& (0+255),b
  3275  015532  0E04               	movlw	4
  3276  015534  ECE2  F0A0         	call	_CANInitialize
  3277                           
  3278                           ;RemoteCan.c: 682: PIR2bits.TMR3IF = 0;
  3279  015538  92A1               	bcf	4001,1,c	;volatile
  3280                           
  3281                           ;RemoteCan.c: 683: PIR3bits.RXB1IF = 0;
  3282  01553A  92A4               	bcf	4004,1,c	;volatile
  3283                           
  3284                           ;RemoteCan.c: 684: PIR3bits.RXB0IF = 0;
  3285  01553C  90A4               	bcf	4004,0,c	;volatile
  3286                           
  3287                           ;RemoteCan.c: 687: RCONbits.IPEN = 1;
  3288  01553E  8ED0               	bsf	4048,7,c	;volatile
  3289                           
  3290                           ;RemoteCan.c: 688: IPR3bits.RXB1IP = 1;
  3291  015540  82A5               	bsf	4005,1,c	;volatile
  3292                           
  3293                           ;RemoteCan.c: 689: IPR3bits.RXB0IP = 1;
  3294  015542  80A5               	bsf	4005,0,c	;volatile
  3295                           
  3296                           ;RemoteCan.c: 690: IPR2bits.TMR3IP = 0;
  3297  015544  92A2               	bcf	4002,1,c	;volatile
  3298                           
  3299                           ;RemoteCan.c: 693: ADCON1 = 0b00001101;
  3300  015546  0E0D               	movlw	13
  3301  015548  6EC1               	movwf	4033,c	;volatile
  3302                           
  3303                           ;RemoteCan.c: 694: ADCON0bits.CHS2 = 0;
  3304  01554A  98C2               	bcf	4034,4,c	;volatile
  3305                           
  3306                           ;RemoteCan.c: 695: ADCON0bits.CHS1 = 0;
  3307  01554C  96C2               	bcf	4034,3,c	;volatile
  3308                           
  3309                           ;RemoteCan.c: 696: ADCON0bits.CHS0 = 0;
  3310  01554E  94C2               	bcf	4034,2,c	;volatile
  3311                           
  3312                           ;RemoteCan.c: 697: ADCON2bits.ACQT2 = 1;
  3313  015550  8AC0               	bsf	4032,5,c	;volatile
  3314                           
  3315                           ;RemoteCan.c: 698: ADCON2bits.ACQT1 = 1;
  3316  015552  88C0               	bsf	4032,4,c	;volatile
  3317                           
  3318                           ;RemoteCan.c: 699: ADCON2bits.ACQT0 = 0;
  3319  015554  96C0               	bcf	4032,3,c	;volatile
  3320                           
  3321                           ;RemoteCan.c: 700: ADCON2bits.ADCS2 = 1;
  3322  015556  84C0               	bsf	4032,2,c	;volatile
  3323                           
  3324                           ;RemoteCan.c: 701: ADCON2bits.ADCS1 = 0;
  3325  015558  92C0               	bcf	4032,1,c	;volatile
  3326                           
  3327                           ;RemoteCan.c: 702: ADCON2bits.ADCS0 = 1;
  3328  01555A  80C0               	bsf	4032,0,c	;volatile
  3329                           
  3330                           ;RemoteCan.c: 703: ADCON2bits.ADFM = 0;
  3331  01555C  9EC0               	bcf	4032,7,c	;volatile
  3332                           
  3333                           ;RemoteCan.c: 704: ADCON0bits.ADON = 1;
  3334  01555E  80C2               	bsf	4034,0,c	;volatile
  3335                           
  3336                           ;RemoteCan.c: 707: LCD_initialize(16);
  3337  015560  0E10               	movlw	16
  3338  015562  EC0B  F0A5         	call	_LCD_initialize
  3339                           
  3340                           ;RemoteCan.c: 709: LCD_clear();
  3341  015566  ECEE  F0AE         	call	_LCD_clear	;wreg free
  3342                           
  3343                           ;RemoteCan.c: 710: LCD_goto_line(1);
  3344  01556A  0E01               	movlw	1
  3345  01556C  EC18  F0A8         	call	_LCD_goto_line
  3346                           
  3347                           ;RemoteCan.c: 714: PORTDbits.RD2 = 0;
  3348  015570  9483               	bcf	3971,2,c	;volatile
  3349                           
  3350                           ;RemoteCan.c: 715: PORTDbits.RD3 = 0;
  3351  015572  9683               	bcf	3971,3,c	;volatile
  3352                           
  3353                           ;RemoteCan.c: 718: TMR3H = 0x63;
  3354  015574  0E63               	movlw	99
  3355  015576  6EB3               	movwf	4019,c	;volatile
  3356                           
  3357                           ;RemoteCan.c: 719: TMR3L = 0xC0;
  3358  015578  0EC0               	movlw	192
  3359  01557A  6EB2               	movwf	4018,c	;volatile
  3360                           
  3361                           ;RemoteCan.c: 722: PIE3bits.RXB1IE = 1;
  3362  01557C  82A3               	bsf	4003,1,c	;volatile
  3363                           
  3364                           ;RemoteCan.c: 723: PIE3bits.RXB0IE = 1;
  3365  01557E  80A3               	bsf	4003,0,c	;volatile
  3366                           
  3367                           ;RemoteCan.c: 724: PIE2bits.TMR3IE = 1;
  3368  015580  82A0               	bsf	4000,1,c	;volatile
  3369                           
  3370                           ;RemoteCan.c: 727: T3CON = 0x01;
  3371  015582  0E01               	movlw	1
  3372  015584  6EB1               	movwf	4017,c	;volatile
  3373                           
  3374                           ;RemoteCan.c: 728: LCD_clear();
  3375  015586  ECEE  F0AE         	call	_LCD_clear	;wreg free
  3376                           
  3377                           ;RemoteCan.c: 729: INTCONbits.GIEH = 1;
  3378  01558A  8EF2               	bsf	intcon,7,c	;volatile
  3379                           
  3380                           ;RemoteCan.c: 730: INTCONbits.GIEL = 1;
  3381  01558C  8CF2               	bsf	intcon,6,c	;volatile
  3382  01558E  0012               	return		;funcret
  3383  015590                     __end_of_board_initialization:
  3384                           	opt stack 0
  3385                           tblptru	equ	0xFF8
  3386                           tblptrh	equ	0xFF7
  3387                           tblptrl	equ	0xFF6
  3388                           tablat	equ	0xFF5
  3389                           intcon	equ	0xFF2
  3390                           postinc0	equ	0xFEE
  3391                           wreg	equ	0xFE8
  3392                           status	equ	0xFD8
  3393                           
  3394 ;; *************** function _CANInitialize *****************
  3395 ;; Defined at:
  3396 ;;		line 218 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  propSeg         1    wreg     unsigned char 
  3399 ;;  phaseSeg1       1   30[BANK0 ] unsigned char 
  3400 ;;  phaseSeg2       1   31[BANK0 ] unsigned char 
  3401 ;;  SJW             1   32[BANK0 ] unsigned char 
  3402 ;;  BRP             1   33[BANK0 ] unsigned char 
  3403 ;;  flags           1   34[BANK0 ] enum E16928
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;  propSeg         1   39[BANK0 ] unsigned char 
  3406 ;;  FilterConfig    1   41[BANK0 ] unsigned char 
  3407 ;;  FilterConfig    1   40[BANK0 ] unsigned char 
  3408 ;; Return value:  Size  Location     Type
  3409 ;;		None               void
  3410 ;; Registers used:
  3411 ;;		wreg, status,2, status,0, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3417 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3418 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3419 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3420 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3421 ;;Total ram usage:       12 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; Hardware stack levels required when called:    4
  3424 ;; This function calls:
  3425 ;;		_CANOperationMode
  3426 ;;		_CANSetFilter
  3427 ;;		_CANSetMask
  3428 ;; This function is called by:
  3429 ;;		_board_initialization
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text2
  3434  0141C4                     __ptext2:
  3435                           	opt stack 0
  3436  0141C4                     _CANInitialize:
  3437                           	opt stack 25
  3438                           
  3439                           ;incstack = 0
  3440                           ;CANInitialize@propSeg stored from wreg
  3441  0141C4  0100               	movlb	0	; () banked
  3442  0141C6  6F87               	movwf	CANInitialize@propSeg& (0+255),b
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3446                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3447                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3448  0141C8  0E80               	movlw	128
  3449  0141CA  EC74  F0AF         	call	_CANOperationMode
  3450                           
  3451                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3452  0141CE  0E00               	movlw	0
  3453  0141D0  6E70               	movwf	3952,c	;volatile
  3454                           
  3455                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3456  0141D2  0E00               	movlw	0
  3457  0141D4  6E71               	movwf	3953,c	;volatile
  3458                           
  3459                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3460  0141D6  0E00               	movlw	0
  3461  0141D8  6E72               	movwf	3954,c	;volatile
  3462                           
  3463                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3464  0141DA  0100               	movlb	0	; () banked
  3465  0141DC  4180               	rrncf	CANInitialize@SJW& (0+255),w,b
  3466  0141DE  42E8               	rrncf	wreg,f,c
  3467  0141E0  0BC0               	andlw	192
  3468  0141E2  0100               	movlb	0	; () banked
  3469  0141E4  6F80               	movwf	CANInitialize@SJW& (0+255),b
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3473  0141E6  0100               	movlb	0	; () banked
  3474  0141E8  5180               	movf	CANInitialize@SJW& (0+255),w,b
  3475  0141EA  1270               	iorwf	3952,f,c	;volatile
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3479  0141EC  0100               	movlb	0	; () banked
  3480  0141EE  5181               	movf	CANInitialize@BRP& (0+255),w,b
  3481  0141F0  1270               	iorwf	3952,f,c	;volatile
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3485  0141F2  0100               	movlb	0	; () banked
  3486  0141F4  5187               	movf	CANInitialize@propSeg& (0+255),w,b
  3487  0141F6  1271               	iorwf	3953,f,c	;volatile
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3491  0141F8  0100               	movlb	0	; () banked
  3492  0141FA  397E               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3493  0141FC  42E8               	rrncf	wreg,f,c
  3494  0141FE  0BF8               	andlw	248
  3495  014200  0100               	movlb	0	; () banked
  3496  014202  6F7E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3500  014204  0100               	movlb	0	; () banked
  3501  014206  517E               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3502  014208  1271               	iorwf	3953,f,c	;volatile
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3506  01420A  0100               	movlb	0	; () banked
  3507  01420C  A582               	btfss	CANInitialize@flags& (0+255),2,b
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3511  01420E  8C71               	bsf	3953,6,c	;volatile
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3515  014210  0100               	movlb	0	; () banked
  3516  014212  A182               	btfss	CANInitialize@flags& (0+255),0,b
  3517  014214  D002               	goto	l5666
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3521  014216  8E71               	bsf	3953,7,c	;volatile
  3522  014218  D000               	goto	l5666
  3523  01421A                     l5666:
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3527  01421A  0100               	movlb	0	; () banked
  3528  01421C  517F               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3529  01421E  1272               	iorwf	3954,f,c	;volatile
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3533  014220  0100               	movlb	0	; () banked
  3534  014222  A382               	btfss	CANInitialize@flags& (0+255),1,b
  3535  014224  D002               	goto	l5672
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3539  014226  8C72               	bsf	3954,6,c	;volatile
  3540  014228  D000               	goto	l5672
  3541  01422A                     l5672:
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3545  01422A  0100               	movlb	0	; () banked
  3546  01422C  5182               	movf	CANInitialize@flags& (0+255),w,b
  3547  01422E  0B60               	andlw	96
  3548  014230  6E60               	movwf	3936,c	;volatile
  3549                           
  3550                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3551  014232  0100               	movlb	0	; () banked
  3552  014234  5182               	movf	CANInitialize@flags& (0+255),w,b
  3553  014236  0B10               	andlw	16
  3554  014238  0AFF               	xorlw	255
  3555  01423A  B4D8               	btfsc	status,2,c
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3559  01423C  8460               	bsf	3936,2,c	;volatile
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3563  01423E  CF60 FF50          	movff	3936,3920	;volatile
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3567  014242  0E00               	movlw	0
  3568  014244  0100               	movlb	0	; () banked
  3569  014246  6F70               	movwf	CANSetMask@mask& (0+255),b
  3570  014248  0E00               	movlw	0
  3571  01424A  6F71               	movwf	(CANSetMask@mask+1)& (0+255),b
  3572  01424C  0E00               	movlw	0
  3573  01424E  6F72               	movwf	(CANSetMask@mask+2)& (0+255),b
  3574  014250  0E00               	movlw	0
  3575  014252  6F73               	movwf	(CANSetMask@mask+3)& (0+255),b
  3576  014254  0EF7               	movlw	247
  3577  014256  0100               	movlb	0	; () banked
  3578  014258  6F74               	movwf	CANSetMask@type& (0+255),b
  3579  01425A  0E01               	movlw	1
  3580  01425C  EC16  F09A         	call	_CANSetMask
  3581                           
  3582                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3583  014260  0E00               	movlw	0
  3584  014262  0100               	movlb	0	; () banked
  3585  014264  6F70               	movwf	CANSetMask@mask& (0+255),b
  3586  014266  0E00               	movlw	0
  3587  014268  6F71               	movwf	(CANSetMask@mask+1)& (0+255),b
  3588  01426A  0E00               	movlw	0
  3589  01426C  6F72               	movwf	(CANSetMask@mask+2)& (0+255),b
  3590  01426E  0E00               	movlw	0
  3591  014270  6F73               	movwf	(CANSetMask@mask+3)& (0+255),b
  3592  014272  0EF7               	movlw	247
  3593  014274  0100               	movlb	0	; () banked
  3594  014276  6F74               	movwf	CANSetMask@type& (0+255),b
  3595  014278  0E02               	movlw	2
  3596  01427A  EC16  F09A         	call	_CANSetMask
  3597                           
  3598                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3599  01427E  D00F               	goto	l5684
  3600  014280                     l5678:
  3601                           
  3602                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3603  014280  0EF7               	movlw	247
  3604  014282  0100               	movlb	0	; () banked
  3605  014284  6F88               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3606  014286  D007               	goto	l5680
  3607  014288                     l380:
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3611  014288  0100               	movlb	0	; () banked
  3612  01428A  6988               	setf	CANInitialize@FilterConfig1& (0+255),b
  3613                           
  3614                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3615  01428C  0100               	movlb	0	; () banked
  3616  01428E  6989               	setf	CANInitialize@FilterConfig2& (0+255),b
  3617                           
  3618                           ;inc\CANlib.h: 273: break;
  3619  014290  D028               	goto	l5686
  3620  014292                     l381:
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3624  014292  0100               	movlb	0	; () banked
  3625  014294  6988               	setf	CANInitialize@FilterConfig1& (0+255),b
  3626  014296                     l5680:
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3630  014296  0EF7               	movlw	247
  3631  014298  0100               	movlb	0	; () banked
  3632  01429A  6F89               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;inc\CANlib.h: 278: }
  3636                           
  3637                           ;inc\CANlib.h: 277: break;
  3638  01429C  D022               	goto	l5686
  3639  01429E                     l5684:
  3640  01429E  0E9F               	movlw	159
  3641  0142A0  0100               	movlb	0	; () banked
  3642  0142A2  6F83               	movwf	??_CANInitialize& (0+255),b
  3643  0142A4  0EFF               	movlw	255
  3644  0142A6  0100               	movlb	0	; () banked
  3645  0142A8  6F84               	movwf	(??_CANInitialize+1)& (0+255),b
  3646  0142AA  0100               	movlb	0	; () banked
  3647  0142AC  5182               	movf	CANInitialize@flags& (0+255),w,b
  3648  0142AE  0B60               	andlw	96
  3649  0142B0  0100               	movlb	0	; () banked
  3650  0142B2  6F85               	movwf	(??_CANInitialize+2)& (0+255),b
  3651  0142B4  6B86               	clrf	(??_CANInitialize+3)& (0+255),b
  3652  0142B6  0100               	movlb	0	; () banked
  3653  0142B8  5183               	movf	??_CANInitialize& (0+255),w,b
  3654  0142BA  0100               	movlb	0	; () banked
  3655  0142BC  1385               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3656  0142BE  0100               	movlb	0	; () banked
  3657  0142C0  5184               	movf	(??_CANInitialize+1)& (0+255),w,b
  3658  0142C2  0100               	movlb	0	; () banked
  3659  0142C4  1386               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3660                           
  3661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3662                           ; Switch size 1, requested type "space"
  3663                           ; Number of cases is 1, Range of values is 0 to 0
  3664                           ; switch strategies available:
  3665                           ; Name         Instructions Cycles
  3666                           ; simple_byte            4     3 (average)
  3667                           ;	Chosen strategy is simple_byte
  3668  0142C6  0100               	movlb	0	; () banked
  3669  0142C8  5186               	movf	(??_CANInitialize+3)& (0+255),w,b
  3670  0142CA  0A00               	xorlw	0	; case 0
  3671  0142CC  A4D8               	btfss	status,2,c
  3672  0142CE  D7E1               	goto	l381
  3673                           
  3674                           ; BSR set to: 0
  3675                           ; Switch size 1, requested type "space"
  3676                           ; Number of cases is 2, Range of values is 191 to 223
  3677                           ; switch strategies available:
  3678                           ; Name         Instructions Cycles
  3679                           ; simple_byte            7     4 (average)
  3680                           ;	Chosen strategy is simple_byte
  3681  0142D0  0100               	movlb	0	; () banked
  3682  0142D2  5185               	movf	(??_CANInitialize+2)& (0+255),w,b
  3683  0142D4  0ABF               	xorlw	191	; case 191
  3684  0142D6  B4D8               	btfsc	status,2,c
  3685  0142D8  D7D7               	goto	l380
  3686  0142DA  0A60               	xorlw	96	; case 223
  3687  0142DC  B4D8               	btfsc	status,2,c
  3688  0142DE  D7D0               	goto	l5678
  3689  0142E0  D7D8               	goto	l381
  3690  0142E2                     l5686:
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3694  0142E2  0E00               	movlw	0
  3695  0142E4  0100               	movlb	0	; () banked
  3696  0142E6  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3697  0142E8  0E00               	movlw	0
  3698  0142EA  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3699  0142EC  0E00               	movlw	0
  3700  0142EE  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3701  0142F0  0E00               	movlw	0
  3702  0142F2  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3703  0142F4  C088  F074         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3704  0142F8  0E00               	movlw	0
  3705  0142FA  EC00  F080         	call	_CANSetFilter
  3706                           
  3707                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3708  0142FE  0E00               	movlw	0
  3709  014300  0100               	movlb	0	; () banked
  3710  014302  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3711  014304  0E00               	movlw	0
  3712  014306  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3713  014308  0E00               	movlw	0
  3714  01430A  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3715  01430C  0E00               	movlw	0
  3716  01430E  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3717  014310  C088  F074         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3718  014314  0E01               	movlw	1
  3719  014316  EC00  F080         	call	_CANSetFilter
  3720                           
  3721                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3722  01431A  0E00               	movlw	0
  3723  01431C  0100               	movlb	0	; () banked
  3724  01431E  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3725  014320  0E00               	movlw	0
  3726  014322  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3727  014324  0E00               	movlw	0
  3728  014326  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3729  014328  0E00               	movlw	0
  3730  01432A  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3731  01432C  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3732  014330  0E02               	movlw	2
  3733  014332  EC00  F080         	call	_CANSetFilter
  3734                           
  3735                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3736  014336  0E00               	movlw	0
  3737  014338  0100               	movlb	0	; () banked
  3738  01433A  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3739  01433C  0E00               	movlw	0
  3740  01433E  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3741  014340  0E00               	movlw	0
  3742  014342  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3743  014344  0E00               	movlw	0
  3744  014346  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3745  014348  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3746  01434C  0E03               	movlw	3
  3747  01434E  EC00  F080         	call	_CANSetFilter
  3748                           
  3749                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3750  014352  0E00               	movlw	0
  3751  014354  0100               	movlb	0	; () banked
  3752  014356  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3753  014358  0E00               	movlw	0
  3754  01435A  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3755  01435C  0E00               	movlw	0
  3756  01435E  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3757  014360  0E00               	movlw	0
  3758  014362  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3759  014364  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3760  014368  0E04               	movlw	4
  3761  01436A  EC00  F080         	call	_CANSetFilter
  3762                           
  3763                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3764  01436E  0E00               	movlw	0
  3765  014370  0100               	movlb	0	; () banked
  3766  014372  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3767  014374  0E00               	movlw	0
  3768  014376  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3769  014378  0E00               	movlw	0
  3770  01437A  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3771  01437C  0E00               	movlw	0
  3772  01437E  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3773  014380  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3774  014384  0E05               	movlw	5
  3775  014386  EC00  F080         	call	_CANSetFilter
  3776                           
  3777                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3778  01438A  0E00               	movlw	0
  3779  01438C  EC74  F0AF         	call	_CANOperationMode
  3780  014390  0012               	return		;funcret
  3781  014392                     __end_of_CANInitialize:
  3782                           	opt stack 0
  3783                           tblptru	equ	0xFF8
  3784                           tblptrh	equ	0xFF7
  3785                           tblptrl	equ	0xFF6
  3786                           tablat	equ	0xFF5
  3787                           intcon	equ	0xFF2
  3788                           postinc0	equ	0xFEE
  3789                           wreg	equ	0xFE8
  3790                           status	equ	0xFD8
  3791                           
  3792 ;; *************** function _CANSetMask *****************
  3793 ;; Defined at:
  3794 ;;		line 640 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  numBuffer       1    wreg     enum E16962
  3797 ;;  mask            4   16[BANK0 ] unsigned long 
  3798 ;;  type            1   20[BANK0 ] enum E16928
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  numBuffer       1   25[BANK0 ] enum E16962
  3801 ;;  tamp            4   26[BANK0 ] unsigned long 
  3802 ;; Return value:  Size  Location     Type
  3803 ;;		None               void
  3804 ;; Registers used:
  3805 ;;		wreg, status,2, status,0
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3811 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3812 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3813 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3814 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3815 ;;Total ram usage:       14 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; Hardware stack levels required when called:    3
  3818 ;; This function calls:
  3819 ;;		Nothing
  3820 ;; This function is called by:
  3821 ;;		_CANInitialize
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	text3
  3826  01342C                     __ptext3:
  3827                           	opt stack 0
  3828  01342C                     _CANSetMask:
  3829                           	opt stack 25
  3830                           
  3831                           ;incstack = 0
  3832                           ;CANSetMask@numBuffer stored from wreg
  3833  01342C  0100               	movlb	0	; () banked
  3834  01342E  6F79               	movwf	CANSetMask@numBuffer& (0+255),b
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3838  013430  0100               	movlb	0	; () banked
  3839  013432  0579               	decf	CANSetMask@numBuffer& (0+255),w,b
  3840  013434  A4D8               	btfss	status,2,c
  3841  013436  D057               	goto	l4898
  3842                           
  3843                           ; BSR set to: 0
  3844  013438  0100               	movlb	0	; () banked
  3845  01343A  2974               	incf	CANSetMask@type& (0+255),w,b
  3846  01343C  A4D8               	btfss	status,2,c
  3847  01343E  D053               	goto	l4898
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;inc\CANlib.h: 644: {
  3851                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3852  013440  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  3853  013444  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3854  013448  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3855  01344C  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3856  013450  0E04               	movlw	4
  3857  013452  D006               	goto	u5150
  3858  013454                     u5155:
  3859  013454  0100               	movlb	0	; () banked
  3860  013456  90D8               	bcf	status,0,c
  3861  013458  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3862  01345A  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3863  01345C  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3864  01345E  3375               	rrcf	??_CANSetMask& (0+255),f,b
  3865  013460                     u5150:
  3866  013460  2EE8               	decfsz	wreg,f,c
  3867  013462  D7F8               	goto	u5155
  3868  013464  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3869  013468  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3870  01346C  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3871  013470  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3875  013474  0100               	movlb	0	; () banked
  3876  013476  517A               	movf	CANSetMask@tamp& (0+255),w,b
  3877  013478  0100               	movlb	0	; () banked
  3878  01347A  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3879  01347C  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3880  01347E  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3881  013480  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3885  013482  C07A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3889  013486  0E07               	movlw	7
  3890  013488  0100               	movlb	0	; () banked
  3891  01348A  1570               	andwf	CANSetMask@mask& (0+255),w,b
  3892  01348C  0100               	movlb	0	; () banked
  3893  01348E  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3894  013490  0E00               	movlw	0
  3895  013492  0100               	movlb	0	; () banked
  3896  013494  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3897  013496  0100               	movlb	0	; () banked
  3898  013498  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3899  01349A  0E00               	movlw	0
  3900  01349C  0100               	movlb	0	; () banked
  3901  01349E  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3902  0134A0  0100               	movlb	0	; () banked
  3903  0134A2  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3904  0134A4  0E00               	movlw	0
  3905  0134A6  0100               	movlb	0	; () banked
  3906  0134A8  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3907  0134AA  0100               	movlb	0	; () banked
  3908  0134AC  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3912  0134AE  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  3913  0134B2  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3914  0134B6  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3915  0134BA  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3916  0134BE  0E05               	movlw	5
  3917  0134C0                     u5165:
  3918  0134C0  90D8               	bcf	status,0,c
  3919  0134C2  0100               	movlb	0	; () banked
  3920  0134C4  3775               	rlcf	??_CANSetMask& (0+255),f,b
  3921  0134C6  3776               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3922  0134C8  3777               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3923  0134CA  3778               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3924  0134CC  2EE8               	decfsz	wreg,f,c
  3925  0134CE  D7F8               	goto	u5165
  3926  0134D0  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3927  0134D4  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3928  0134D8  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3929  0134DC  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3933  0134E0  C07A  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3934  0134E4  D000               	goto	l4898
  3935  0134E6                     l4898:
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;inc\CANlib.h: 652: }
  3939                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3940  0134E6  0E02               	movlw	2
  3941  0134E8  0100               	movlb	0	; () banked
  3942  0134EA  1979               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3943  0134EC  A4D8               	btfss	status,2,c
  3944  0134EE  D057               	goto	l4914
  3945                           
  3946                           ; BSR set to: 0
  3947  0134F0  0100               	movlb	0	; () banked
  3948  0134F2  2974               	incf	CANSetMask@type& (0+255),w,b
  3949  0134F4  A4D8               	btfss	status,2,c
  3950  0134F6  D053               	goto	l4914
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;inc\CANlib.h: 655: {
  3954                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3955  0134F8  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  3956  0134FC  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3957  013500  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3958  013504  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3959  013508  0E04               	movlw	4
  3960  01350A  D006               	goto	u5190
  3961  01350C                     u5195:
  3962  01350C  0100               	movlb	0	; () banked
  3963  01350E  90D8               	bcf	status,0,c
  3964  013510  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3965  013512  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3966  013514  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3967  013516  3375               	rrcf	??_CANSetMask& (0+255),f,b
  3968  013518                     u5190:
  3969  013518  2EE8               	decfsz	wreg,f,c
  3970  01351A  D7F8               	goto	u5195
  3971  01351C  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3972  013520  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3973  013524  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3974  013528  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3978  01352C  0100               	movlb	0	; () banked
  3979  01352E  517A               	movf	CANSetMask@tamp& (0+255),w,b
  3980  013530  0100               	movlb	0	; () banked
  3981  013532  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3982  013534  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3983  013536  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3984  013538  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3988  01353A  C07A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3992  01353E  0E07               	movlw	7
  3993  013540  0100               	movlb	0	; () banked
  3994  013542  1570               	andwf	CANSetMask@mask& (0+255),w,b
  3995  013544  0100               	movlb	0	; () banked
  3996  013546  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3997  013548  0E00               	movlw	0
  3998  01354A  0100               	movlb	0	; () banked
  3999  01354C  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4000  01354E  0100               	movlb	0	; () banked
  4001  013550  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4002  013552  0E00               	movlw	0
  4003  013554  0100               	movlb	0	; () banked
  4004  013556  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4005  013558  0100               	movlb	0	; () banked
  4006  01355A  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4007  01355C  0E00               	movlw	0
  4008  01355E  0100               	movlb	0	; () banked
  4009  013560  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4010  013562  0100               	movlb	0	; () banked
  4011  013564  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4015  013566  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  4016  01356A  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4017  01356E  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4018  013572  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4019  013576  0E05               	movlw	5
  4020  013578                     u5205:
  4021  013578  90D8               	bcf	status,0,c
  4022  01357A  0100               	movlb	0	; () banked
  4023  01357C  3775               	rlcf	??_CANSetMask& (0+255),f,b
  4024  01357E  3776               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4025  013580  3777               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4026  013582  3778               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4027  013584  2EE8               	decfsz	wreg,f,c
  4028  013586  D7F8               	goto	u5205
  4029  013588  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4030  01358C  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4031  013590  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4032  013594  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4036  013598  C07A  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4037  01359C  D000               	goto	l4914
  4038  01359E                     l4914:
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;inc\CANlib.h: 663: }
  4042                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4043  01359E  0100               	movlb	0	; () banked
  4044  0135A0  0579               	decf	CANSetMask@numBuffer& (0+255),w,b
  4045  0135A2  A4D8               	btfss	status,2,c
  4046  0135A4  D089               	goto	l4946
  4047                           
  4048                           ; BSR set to: 0
  4049  0135A6  0EF7               	movlw	247
  4050  0135A8  0100               	movlb	0	; () banked
  4051  0135AA  1974               	xorwf	CANSetMask@type& (0+255),w,b
  4052  0135AC  A4D8               	btfss	status,2,c
  4053  0135AE  D084               	goto	l4946
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;inc\CANlib.h: 666: {
  4057                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4058  0135B0  0100               	movlb	0	; () banked
  4059  0135B2  5170               	movf	CANSetMask@mask& (0+255),w,b
  4060  0135B4  0100               	movlb	0	; () banked
  4061  0135B6  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4062  0135B8  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4063  0135BA  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4064  0135BC  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4068  0135BE  C07A  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4072  0135C2  0E00               	movlw	0
  4073  0135C4  0100               	movlb	0	; () banked
  4074  0135C6  1570               	andwf	CANSetMask@mask& (0+255),w,b
  4075  0135C8  0100               	movlb	0	; () banked
  4076  0135CA  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4077  0135CC  0EFF               	movlw	255
  4078  0135CE  0100               	movlb	0	; () banked
  4079  0135D0  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4080  0135D2  0100               	movlb	0	; () banked
  4081  0135D4  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4082  0135D6  0E00               	movlw	0
  4083  0135D8  0100               	movlb	0	; () banked
  4084  0135DA  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4085  0135DC  0100               	movlb	0	; () banked
  4086  0135DE  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4087  0135E0  0E00               	movlw	0
  4088  0135E2  0100               	movlb	0	; () banked
  4089  0135E4  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4090  0135E6  0100               	movlb	0	; () banked
  4091  0135E8  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4095  0135EA  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  4096  0135EE  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4097  0135F2  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4098  0135F6  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4099  0135FA  C076  F075         	movff	??_CANSetMask+1,??_CANSetMask
  4100  0135FE  C077  F076         	movff	??_CANSetMask+2,??_CANSetMask+1
  4101  013602  C078  F077         	movff	??_CANSetMask+3,??_CANSetMask+2
  4102  013606  0100               	movlb	0	; () banked
  4103  013608  6B78               	clrf	(??_CANSetMask+3)& (0+255),b
  4104  01360A  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4105  01360E  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4106  013612  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4107  013616  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4111  01361A  C07A  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4115  01361E  0100               	movlb	0	; () banked
  4116  013620  A172               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4117  013622  D003               	goto	l454
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4121  013624  010F               	movlb	15	; () banked
  4122  013626  8119               	bsf	25,0,b	;volatile
  4123  013628  D002               	goto	l455
  4124  01362A                     l454:
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;inc\CANlib.h: 676: else
  4128                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4129  01362A  010F               	movlb	15	; () banked
  4130  01362C  9119               	bcf	25,0,b	;volatile
  4131  01362E                     l455:
  4132                           
  4133                           ; BSR set to: 15
  4134                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4135  01362E  0100               	movlb	0	; () banked
  4136  013630  A372               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4137  013632  D003               	goto	l456
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4141  013634  010F               	movlb	15	; () banked
  4142  013636  8319               	bsf	25,1,b	;volatile
  4143  013638  D002               	goto	l457
  4144  01363A                     l456:
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;inc\CANlib.h: 681: else
  4148                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4149  01363A  010F               	movlb	15	; () banked
  4150  01363C  9319               	bcf	25,1,b	;volatile
  4151  01363E                     l457:
  4152                           
  4153                           ; BSR set to: 15
  4154                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4155  01363E  0100               	movlb	0	; () banked
  4156  013640  A572               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4157  013642  D003               	goto	l458
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4161  013644  010F               	movlb	15	; () banked
  4162  013646  8B19               	bsf	25,5,b	;volatile
  4163  013648  D002               	goto	l459
  4164  01364A                     l458:
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;inc\CANlib.h: 686: else
  4168                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4169  01364A  010F               	movlb	15	; () banked
  4170  01364C  9B19               	bcf	25,5,b	;volatile
  4171  01364E                     l459:
  4172                           
  4173                           ; BSR set to: 15
  4174                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4175  01364E  0100               	movlb	0	; () banked
  4176  013650  A772               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4177  013652  D003               	goto	l460
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4181  013654  010F               	movlb	15	; () banked
  4182  013656  8D19               	bsf	25,6,b	;volatile
  4183  013658  D002               	goto	l461
  4184  01365A                     l460:
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;inc\CANlib.h: 691: else
  4188                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4189  01365A  010F               	movlb	15	; () banked
  4190  01365C  9D19               	bcf	25,6,b	;volatile
  4191  01365E                     l461:
  4192                           
  4193                           ; BSR set to: 15
  4194                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4195  01365E  0100               	movlb	0	; () banked
  4196  013660  A972               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4197  013662  D003               	goto	l462
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4201  013664  010F               	movlb	15	; () banked
  4202  013666  8F19               	bsf	25,7,b	;volatile
  4203  013668  D003               	goto	l4940
  4204  01366A                     l462:
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;inc\CANlib.h: 696: else
  4208                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4209  01366A  010F               	movlb	15	; () banked
  4210  01366C  9F19               	bcf	25,7,b	;volatile
  4211  01366E  D000               	goto	l4940
  4212  013670                     l4940:
  4213                           
  4214                           ; BSR set to: 15
  4215                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4216  013670  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  4217  013674  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4218  013678  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4219  01367C  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4220  013680  0E16               	movlw	22
  4221  013682  D006               	goto	u5280
  4222  013684                     u5285:
  4223  013684  0100               	movlb	0	; () banked
  4224  013686  90D8               	bcf	status,0,c
  4225  013688  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4226  01368A  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4227  01368C  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4228  01368E  3375               	rrcf	??_CANSetMask& (0+255),f,b
  4229  013690                     u5280:
  4230  013690  2EE8               	decfsz	wreg,f,c
  4231  013692  D7F8               	goto	u5285
  4232  013694  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4233  013698  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4234  01369C  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4235  0136A0  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4239  0136A4  0100               	movlb	0	; () banked
  4240  0136A6  517A               	movf	CANSetMask@tamp& (0+255),w,b
  4241  0136A8  0100               	movlb	0	; () banked
  4242  0136AA  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4243  0136AC  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4244  0136AE  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4245  0136B0  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4249  0136B2  C07A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4250  0136B6  D000               	goto	l4946
  4251  0136B8                     l4946:
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;inc\CANlib.h: 702: }
  4255                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4256  0136B8  0E02               	movlw	2
  4257  0136BA  0100               	movlb	0	; () banked
  4258  0136BC  1979               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4259  0136BE  A4D8               	btfss	status,2,c
  4260  0136C0  0012               	return	
  4261                           
  4262                           ; BSR set to: 0
  4263  0136C2  0EF7               	movlw	247
  4264  0136C4  0100               	movlb	0	; () banked
  4265  0136C6  1974               	xorwf	CANSetMask@type& (0+255),w,b
  4266  0136C8  A4D8               	btfss	status,2,c
  4267  0136CA  0012               	return	
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;inc\CANlib.h: 705: {
  4271                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4272  0136CC  0100               	movlb	0	; () banked
  4273  0136CE  5170               	movf	CANSetMask@mask& (0+255),w,b
  4274  0136D0  0100               	movlb	0	; () banked
  4275  0136D2  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4276  0136D4  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4277  0136D6  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4278  0136D8  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4282  0136DA  C07A  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4286  0136DE  0E00               	movlw	0
  4287  0136E0  0100               	movlb	0	; () banked
  4288  0136E2  1570               	andwf	CANSetMask@mask& (0+255),w,b
  4289  0136E4  0100               	movlb	0	; () banked
  4290  0136E6  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4291  0136E8  0EFF               	movlw	255
  4292  0136EA  0100               	movlb	0	; () banked
  4293  0136EC  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4294  0136EE  0100               	movlb	0	; () banked
  4295  0136F0  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4296  0136F2  0E00               	movlw	0
  4297  0136F4  0100               	movlb	0	; () banked
  4298  0136F6  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4299  0136F8  0100               	movlb	0	; () banked
  4300  0136FA  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4301  0136FC  0E00               	movlw	0
  4302  0136FE  0100               	movlb	0	; () banked
  4303  013700  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4304  013702  0100               	movlb	0	; () banked
  4305  013704  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4306                           
  4307                           ; BSR set to: 0
  4308                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4309  013706  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  4310  01370A  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4311  01370E  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4312  013712  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4313  013716  C076  F075         	movff	??_CANSetMask+1,??_CANSetMask
  4314  01371A  C077  F076         	movff	??_CANSetMask+2,??_CANSetMask+1
  4315  01371E  C078  F077         	movff	??_CANSetMask+3,??_CANSetMask+2
  4316  013722  0100               	movlb	0	; () banked
  4317  013724  6B78               	clrf	(??_CANSetMask+3)& (0+255),b
  4318  013726  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4319  01372A  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4320  01372E  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4321  013732  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4325  013736  C07A  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4329  01373A  0100               	movlb	0	; () banked
  4330  01373C  A172               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4331  01373E  D003               	goto	l465
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4335  013740  010F               	movlb	15	; () banked
  4336  013742  811D               	bsf	29,0,b	;volatile
  4337  013744  D002               	goto	l466
  4338  013746                     l465:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;inc\CANlib.h: 715: else
  4342                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4343  013746  010F               	movlb	15	; () banked
  4344  013748  911D               	bcf	29,0,b	;volatile
  4345  01374A                     l466:
  4346                           
  4347                           ; BSR set to: 15
  4348                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4349  01374A  0100               	movlb	0	; () banked
  4350  01374C  A372               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4351  01374E  D003               	goto	l467
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4355  013750  010F               	movlb	15	; () banked
  4356  013752  831D               	bsf	29,1,b	;volatile
  4357  013754  D002               	goto	l468
  4358  013756                     l467:
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;inc\CANlib.h: 720: else
  4362                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4363  013756  010F               	movlb	15	; () banked
  4364  013758  931D               	bcf	29,1,b	;volatile
  4365  01375A                     l468:
  4366                           
  4367                           ; BSR set to: 15
  4368                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4369  01375A  0100               	movlb	0	; () banked
  4370  01375C  A572               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4371  01375E  D003               	goto	l469
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4375  013760  010F               	movlb	15	; () banked
  4376  013762  8B1D               	bsf	29,5,b	;volatile
  4377  013764  D002               	goto	l470
  4378  013766                     l469:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;inc\CANlib.h: 725: else
  4382                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4383  013766  010F               	movlb	15	; () banked
  4384  013768  9B1D               	bcf	29,5,b	;volatile
  4385  01376A                     l470:
  4386                           
  4387                           ; BSR set to: 15
  4388                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4389  01376A  0100               	movlb	0	; () banked
  4390  01376C  A772               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4391  01376E  D003               	goto	l471
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4395  013770  010F               	movlb	15	; () banked
  4396  013772  8D1D               	bsf	29,6,b	;volatile
  4397  013774  D002               	goto	l472
  4398  013776                     l471:
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;inc\CANlib.h: 730: else
  4402                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4403  013776  010F               	movlb	15	; () banked
  4404  013778  9D1D               	bcf	29,6,b	;volatile
  4405  01377A                     l472:
  4406                           
  4407                           ; BSR set to: 15
  4408                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4409  01377A  0100               	movlb	0	; () banked
  4410  01377C  A972               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4411  01377E  D003               	goto	l473
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4415  013780  010F               	movlb	15	; () banked
  4416  013782  8F1D               	bsf	29,7,b	;volatile
  4417  013784  D003               	goto	l4972
  4418  013786                     l473:
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;inc\CANlib.h: 735: else
  4422                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4423  013786  010F               	movlb	15	; () banked
  4424  013788  9F1D               	bcf	29,7,b	;volatile
  4425  01378A  D000               	goto	l4972
  4426  01378C                     l4972:
  4427                           
  4428                           ; BSR set to: 15
  4429                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4430  01378C  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  4431  013790  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4432  013794  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4433  013798  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4434  01379C  0E16               	movlw	22
  4435  01379E  D006               	goto	u5360
  4436  0137A0                     u5365:
  4437  0137A0  0100               	movlb	0	; () banked
  4438  0137A2  90D8               	bcf	status,0,c
  4439  0137A4  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4440  0137A6  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4441  0137A8  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4442  0137AA  3375               	rrcf	??_CANSetMask& (0+255),f,b
  4443  0137AC                     u5360:
  4444  0137AC  2EE8               	decfsz	wreg,f,c
  4445  0137AE  D7F8               	goto	u5365
  4446  0137B0  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4447  0137B4  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4448  0137B8  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4449  0137BC  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4453  0137C0  0100               	movlb	0	; () banked
  4454  0137C2  517A               	movf	CANSetMask@tamp& (0+255),w,b
  4455  0137C4  0100               	movlb	0	; () banked
  4456  0137C6  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4457  0137C8  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4458  0137CA  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4459  0137CC  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4463  0137CE  C07A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4464  0137D2  0012               	return	
  4465                           
  4466                           ; BSR set to: 0
  4467                           
  4468                           ; BSR set to: 0
  4469  0137D4  0012               	return		;funcret
  4470  0137D6                     __end_of_CANSetMask:
  4471                           	opt stack 0
  4472                           tblptru	equ	0xFF8
  4473                           tblptrh	equ	0xFF7
  4474                           tblptrl	equ	0xFF6
  4475                           tablat	equ	0xFF5
  4476                           intcon	equ	0xFF2
  4477                           postinc0	equ	0xFEE
  4478                           wreg	equ	0xFE8
  4479                           status	equ	0xFD8
  4480                           
  4481 ;; *************** function _CANSetFilter *****************
  4482 ;; Defined at:
  4483 ;;		line 748 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  numBuffer       1    wreg     enum E16965
  4486 ;;  filter          4   16[BANK0 ] unsigned long 
  4487 ;;  type            1   20[BANK0 ] enum E16928
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;  numBuffer       1   25[BANK0 ] enum E16965
  4490 ;;  tamp            4   26[BANK0 ] unsigned long 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;		None               void
  4493 ;; Registers used:
  4494 ;;		wreg, status,2, status,0
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4500 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4501 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4502 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4503 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4504 ;;Total ram usage:       14 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; Hardware stack levels required when called:    3
  4507 ;; This function calls:
  4508 ;;		Nothing
  4509 ;; This function is called by:
  4510 ;;		_CANInitialize
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text4
  4515  010000                     __ptext4:
  4516                           	opt stack 0
  4517  010000                     _CANSetFilter:
  4518                           	opt stack 25
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;incstack = 0
  4522                           ;CANSetFilter@numBuffer stored from wreg
  4523  010000  0100               	movlb	0	; () banked
  4524  010002  6F79               	movwf	CANSetFilter@numBuffer& (0+255),b
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;inc\CANlib.h: 750: unsigned long tamp;
  4528                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4529  010004  0100               	movlb	0	; () banked
  4530  010006  5179               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4531  010008  0100               	movlb	0	; () banked
  4532  01000A  A4D8               	btfss	status,2,c
  4533  01000C  D059               	goto	l4996
  4534                           
  4535                           ; BSR set to: 0
  4536  01000E  0100               	movlb	0	; () banked
  4537  010010  2974               	incf	CANSetFilter@type& (0+255),w,b
  4538  010012  A4D8               	btfss	status,2,c
  4539  010014  D055               	goto	l4996
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;inc\CANlib.h: 753: {
  4543                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4544  010016  010F               	movlb	15	; () banked
  4545  010018  9701               	bcf	1,3,b	;volatile
  4546                           
  4547                           ; BSR set to: 15
  4548                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4549  01001A  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4550  01001E  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4551  010022  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4552  010026  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4553  01002A  0E04               	movlw	4
  4554  01002C  D006               	goto	u5390
  4555  01002E                     u5395:
  4556  01002E  0100               	movlb	0	; () banked
  4557  010030  90D8               	bcf	status,0,c
  4558  010032  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4559  010034  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4560  010036  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4561  010038  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4562  01003A                     u5390:
  4563  01003A  2EE8               	decfsz	wreg,f,c
  4564  01003C  D7F8               	goto	u5395
  4565  01003E  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4566  010042  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4567  010046  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4568  01004A  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4572  01004E  0100               	movlb	0	; () banked
  4573  010050  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4574  010052  0100               	movlb	0	; () banked
  4575  010054  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4576  010056  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4577  010058  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4578  01005A  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4582  01005C  C07A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4586  010060  0E07               	movlw	7
  4587  010062  0100               	movlb	0	; () banked
  4588  010064  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4589  010066  0100               	movlb	0	; () banked
  4590  010068  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4591  01006A  0E00               	movlw	0
  4592  01006C  0100               	movlb	0	; () banked
  4593  01006E  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4594  010070  0100               	movlb	0	; () banked
  4595  010072  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4596  010074  0E00               	movlw	0
  4597  010076  0100               	movlb	0	; () banked
  4598  010078  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4599  01007A  0100               	movlb	0	; () banked
  4600  01007C  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4601  01007E  0E00               	movlw	0
  4602  010080  0100               	movlb	0	; () banked
  4603  010082  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4604  010084  0100               	movlb	0	; () banked
  4605  010086  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4609  010088  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4610  01008C  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4611  010090  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4612  010094  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4613  010098  0E05               	movlw	5
  4614  01009A                     u5405:
  4615  01009A  90D8               	bcf	status,0,c
  4616  01009C  0100               	movlb	0	; () banked
  4617  01009E  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4618  0100A0  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4619  0100A2  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4620  0100A4  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4621  0100A6  2EE8               	decfsz	wreg,f,c
  4622  0100A8  D7F8               	goto	u5405
  4623  0100AA  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4624  0100AE  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4625  0100B2  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4626  0100B6  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4630  0100BA  C07A  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4631  0100BE  D000               	goto	l4996
  4632  0100C0                     l4996:
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;inc\CANlib.h: 763: }
  4636                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4637  0100C0  0100               	movlb	0	; () banked
  4638  0100C2  0579               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4639  0100C4  A4D8               	btfss	status,2,c
  4640  0100C6  D059               	goto	l5014
  4641                           
  4642                           ; BSR set to: 0
  4643  0100C8  0100               	movlb	0	; () banked
  4644  0100CA  2974               	incf	CANSetFilter@type& (0+255),w,b
  4645  0100CC  A4D8               	btfss	status,2,c
  4646  0100CE  D055               	goto	l5014
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;inc\CANlib.h: 766: {
  4650                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4651  0100D0  010F               	movlb	15	; () banked
  4652  0100D2  9705               	bcf	5,3,b	;volatile
  4653                           
  4654                           ; BSR set to: 15
  4655                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4656  0100D4  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4657  0100D8  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4658  0100DC  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4659  0100E0  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4660  0100E4  0E04               	movlw	4
  4661  0100E6  D006               	goto	u5430
  4662  0100E8                     u5435:
  4663  0100E8  0100               	movlb	0	; () banked
  4664  0100EA  90D8               	bcf	status,0,c
  4665  0100EC  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4666  0100EE  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4667  0100F0  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4668  0100F2  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4669  0100F4                     u5430:
  4670  0100F4  2EE8               	decfsz	wreg,f,c
  4671  0100F6  D7F8               	goto	u5435
  4672  0100F8  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4673  0100FC  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4674  010100  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4675  010104  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4679  010108  0100               	movlb	0	; () banked
  4680  01010A  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4681  01010C  0100               	movlb	0	; () banked
  4682  01010E  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4683  010110  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4684  010112  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4685  010114  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4689  010116  C07A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4690                           
  4691                           ; BSR set to: 0
  4692                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4693  01011A  0E07               	movlw	7
  4694  01011C  0100               	movlb	0	; () banked
  4695  01011E  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4696  010120  0100               	movlb	0	; () banked
  4697  010122  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4698  010124  0E00               	movlw	0
  4699  010126  0100               	movlb	0	; () banked
  4700  010128  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4701  01012A  0100               	movlb	0	; () banked
  4702  01012C  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4703  01012E  0E00               	movlw	0
  4704  010130  0100               	movlb	0	; () banked
  4705  010132  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4706  010134  0100               	movlb	0	; () banked
  4707  010136  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4708  010138  0E00               	movlw	0
  4709  01013A  0100               	movlb	0	; () banked
  4710  01013C  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4711  01013E  0100               	movlb	0	; () banked
  4712  010140  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4716  010142  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4717  010146  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4718  01014A  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4719  01014E  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4720  010152  0E05               	movlw	5
  4721  010154                     u5445:
  4722  010154  90D8               	bcf	status,0,c
  4723  010156  0100               	movlb	0	; () banked
  4724  010158  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4725  01015A  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4726  01015C  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4727  01015E  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4728  010160  2EE8               	decfsz	wreg,f,c
  4729  010162  D7F8               	goto	u5445
  4730  010164  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4731  010168  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4732  01016C  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4733  010170  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4737  010174  C07A  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4738  010178  D000               	goto	l5014
  4739  01017A                     l5014:
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;inc\CANlib.h: 776: }
  4743                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4744  01017A  0E02               	movlw	2
  4745  01017C  0100               	movlb	0	; () banked
  4746  01017E  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4747  010180  A4D8               	btfss	status,2,c
  4748  010182  D059               	goto	l5032
  4749                           
  4750                           ; BSR set to: 0
  4751  010184  0100               	movlb	0	; () banked
  4752  010186  2974               	incf	CANSetFilter@type& (0+255),w,b
  4753  010188  A4D8               	btfss	status,2,c
  4754  01018A  D055               	goto	l5032
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;inc\CANlib.h: 779: {
  4758                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4759  01018C  010F               	movlb	15	; () banked
  4760  01018E  9709               	bcf	9,3,b	;volatile
  4761                           
  4762                           ; BSR set to: 15
  4763                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4764  010190  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4765  010194  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4766  010198  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4767  01019C  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4768  0101A0  0E04               	movlw	4
  4769  0101A2  D006               	goto	u5470
  4770  0101A4                     u5475:
  4771  0101A4  0100               	movlb	0	; () banked
  4772  0101A6  90D8               	bcf	status,0,c
  4773  0101A8  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4774  0101AA  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4775  0101AC  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4776  0101AE  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4777  0101B0                     u5470:
  4778  0101B0  2EE8               	decfsz	wreg,f,c
  4779  0101B2  D7F8               	goto	u5475
  4780  0101B4  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4781  0101B8  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4782  0101BC  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4783  0101C0  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4787  0101C4  0100               	movlb	0	; () banked
  4788  0101C6  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4789  0101C8  0100               	movlb	0	; () banked
  4790  0101CA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4791  0101CC  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4792  0101CE  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4793  0101D0  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4797  0101D2  C07A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4801  0101D6  0E07               	movlw	7
  4802  0101D8  0100               	movlb	0	; () banked
  4803  0101DA  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4804  0101DC  0100               	movlb	0	; () banked
  4805  0101DE  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4806  0101E0  0E00               	movlw	0
  4807  0101E2  0100               	movlb	0	; () banked
  4808  0101E4  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4809  0101E6  0100               	movlb	0	; () banked
  4810  0101E8  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4811  0101EA  0E00               	movlw	0
  4812  0101EC  0100               	movlb	0	; () banked
  4813  0101EE  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4814  0101F0  0100               	movlb	0	; () banked
  4815  0101F2  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4816  0101F4  0E00               	movlw	0
  4817  0101F6  0100               	movlb	0	; () banked
  4818  0101F8  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4819  0101FA  0100               	movlb	0	; () banked
  4820  0101FC  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4824  0101FE  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4825  010202  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4826  010206  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4827  01020A  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4828  01020E  0E05               	movlw	5
  4829  010210                     u5485:
  4830  010210  90D8               	bcf	status,0,c
  4831  010212  0100               	movlb	0	; () banked
  4832  010214  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4833  010216  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4834  010218  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4835  01021A  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4836  01021C  2EE8               	decfsz	wreg,f,c
  4837  01021E  D7F8               	goto	u5485
  4838  010220  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4839  010224  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4840  010228  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4841  01022C  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4845  010230  C07A  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4846  010234  D000               	goto	l5032
  4847  010236                     l5032:
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;inc\CANlib.h: 789: }
  4851                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4852  010236  0E03               	movlw	3
  4853  010238  0100               	movlb	0	; () banked
  4854  01023A  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4855  01023C  A4D8               	btfss	status,2,c
  4856  01023E  D059               	goto	l5050
  4857                           
  4858                           ; BSR set to: 0
  4859  010240  0100               	movlb	0	; () banked
  4860  010242  2974               	incf	CANSetFilter@type& (0+255),w,b
  4861  010244  A4D8               	btfss	status,2,c
  4862  010246  D055               	goto	l5050
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;inc\CANlib.h: 792: {
  4866                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4867  010248  010F               	movlb	15	; () banked
  4868  01024A  970D               	bcf	13,3,b	;volatile
  4869                           
  4870                           ; BSR set to: 15
  4871                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4872  01024C  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4873  010250  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4874  010254  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4875  010258  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4876  01025C  0E04               	movlw	4
  4877  01025E  D006               	goto	u5510
  4878  010260                     u5515:
  4879  010260  0100               	movlb	0	; () banked
  4880  010262  90D8               	bcf	status,0,c
  4881  010264  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4882  010266  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4883  010268  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4884  01026A  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4885  01026C                     u5510:
  4886  01026C  2EE8               	decfsz	wreg,f,c
  4887  01026E  D7F8               	goto	u5515
  4888  010270  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4889  010274  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4890  010278  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4891  01027C  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4895  010280  0100               	movlb	0	; () banked
  4896  010282  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4897  010284  0100               	movlb	0	; () banked
  4898  010286  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4899  010288  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4900  01028A  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4901  01028C  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4905  01028E  C07A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4909  010292  0E07               	movlw	7
  4910  010294  0100               	movlb	0	; () banked
  4911  010296  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4912  010298  0100               	movlb	0	; () banked
  4913  01029A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4914  01029C  0E00               	movlw	0
  4915  01029E  0100               	movlb	0	; () banked
  4916  0102A0  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4917  0102A2  0100               	movlb	0	; () banked
  4918  0102A4  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4919  0102A6  0E00               	movlw	0
  4920  0102A8  0100               	movlb	0	; () banked
  4921  0102AA  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4922  0102AC  0100               	movlb	0	; () banked
  4923  0102AE  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4924  0102B0  0E00               	movlw	0
  4925  0102B2  0100               	movlb	0	; () banked
  4926  0102B4  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4927  0102B6  0100               	movlb	0	; () banked
  4928  0102B8  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4932  0102BA  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4933  0102BE  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4934  0102C2  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4935  0102C6  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4936  0102CA  0E05               	movlw	5
  4937  0102CC                     u5525:
  4938  0102CC  90D8               	bcf	status,0,c
  4939  0102CE  0100               	movlb	0	; () banked
  4940  0102D0  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4941  0102D2  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4942  0102D4  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4943  0102D6  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4944  0102D8  2EE8               	decfsz	wreg,f,c
  4945  0102DA  D7F8               	goto	u5525
  4946  0102DC  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4947  0102E0  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4948  0102E4  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4949  0102E8  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4953  0102EC  C07A  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4954  0102F0  D000               	goto	l5050
  4955  0102F2                     l5050:
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;inc\CANlib.h: 802: }
  4959                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4960  0102F2  0E04               	movlw	4
  4961  0102F4  0100               	movlb	0	; () banked
  4962  0102F6  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4963  0102F8  A4D8               	btfss	status,2,c
  4964  0102FA  D059               	goto	l5068
  4965                           
  4966                           ; BSR set to: 0
  4967  0102FC  0100               	movlb	0	; () banked
  4968  0102FE  2974               	incf	CANSetFilter@type& (0+255),w,b
  4969  010300  A4D8               	btfss	status,2,c
  4970  010302  D055               	goto	l5068
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;inc\CANlib.h: 805: {
  4974                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4975  010304  010F               	movlb	15	; () banked
  4976  010306  9711               	bcf	17,3,b	;volatile
  4977                           
  4978                           ; BSR set to: 15
  4979                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4980  010308  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4981  01030C  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4982  010310  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4983  010314  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4984  010318  0E04               	movlw	4
  4985  01031A  D006               	goto	u5550
  4986  01031C                     u5555:
  4987  01031C  0100               	movlb	0	; () banked
  4988  01031E  90D8               	bcf	status,0,c
  4989  010320  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4990  010322  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4991  010324  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4992  010326  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4993  010328                     u5550:
  4994  010328  2EE8               	decfsz	wreg,f,c
  4995  01032A  D7F8               	goto	u5555
  4996  01032C  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4997  010330  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4998  010334  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4999  010338  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5003  01033C  0100               	movlb	0	; () banked
  5004  01033E  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5005  010340  0100               	movlb	0	; () banked
  5006  010342  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5007  010344  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5008  010346  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5009  010348  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5013  01034A  C07A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5017  01034E  0E07               	movlw	7
  5018  010350  0100               	movlb	0	; () banked
  5019  010352  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5020  010354  0100               	movlb	0	; () banked
  5021  010356  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5022  010358  0E00               	movlw	0
  5023  01035A  0100               	movlb	0	; () banked
  5024  01035C  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5025  01035E  0100               	movlb	0	; () banked
  5026  010360  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5027  010362  0E00               	movlw	0
  5028  010364  0100               	movlb	0	; () banked
  5029  010366  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5030  010368  0100               	movlb	0	; () banked
  5031  01036A  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5032  01036C  0E00               	movlw	0
  5033  01036E  0100               	movlb	0	; () banked
  5034  010370  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5035  010372  0100               	movlb	0	; () banked
  5036  010374  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5040  010376  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5041  01037A  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5042  01037E  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5043  010382  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5044  010386  0E05               	movlw	5
  5045  010388                     u5565:
  5046  010388  90D8               	bcf	status,0,c
  5047  01038A  0100               	movlb	0	; () banked
  5048  01038C  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  5049  01038E  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5050  010390  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5051  010392  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5052  010394  2EE8               	decfsz	wreg,f,c
  5053  010396  D7F8               	goto	u5565
  5054  010398  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5055  01039C  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5056  0103A0  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5057  0103A4  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5061  0103A8  C07A  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5062  0103AC  D000               	goto	l5068
  5063  0103AE                     l5068:
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;inc\CANlib.h: 815: }
  5067                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5068  0103AE  0E05               	movlw	5
  5069  0103B0  0100               	movlb	0	; () banked
  5070  0103B2  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5071  0103B4  A4D8               	btfss	status,2,c
  5072  0103B6  D059               	goto	l5086
  5073                           
  5074                           ; BSR set to: 0
  5075  0103B8  0100               	movlb	0	; () banked
  5076  0103BA  2974               	incf	CANSetFilter@type& (0+255),w,b
  5077  0103BC  A4D8               	btfss	status,2,c
  5078  0103BE  D055               	goto	l5086
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;inc\CANlib.h: 818: {
  5082                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5083  0103C0  010F               	movlb	15	; () banked
  5084  0103C2  9715               	bcf	21,3,b	;volatile
  5085                           
  5086                           ; BSR set to: 15
  5087                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5088  0103C4  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5089  0103C8  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5090  0103CC  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5091  0103D0  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5092  0103D4  0E04               	movlw	4
  5093  0103D6  D006               	goto	u5590
  5094  0103D8                     u5595:
  5095  0103D8  0100               	movlb	0	; () banked
  5096  0103DA  90D8               	bcf	status,0,c
  5097  0103DC  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5098  0103DE  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5099  0103E0  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5100  0103E2  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5101  0103E4                     u5590:
  5102  0103E4  2EE8               	decfsz	wreg,f,c
  5103  0103E6  D7F8               	goto	u5595
  5104  0103E8  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5105  0103EC  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5106  0103F0  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5107  0103F4  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5111  0103F8  0100               	movlb	0	; () banked
  5112  0103FA  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5113  0103FC  0100               	movlb	0	; () banked
  5114  0103FE  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5115  010400  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5116  010402  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5117  010404  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5121  010406  C07A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5125  01040A  0E07               	movlw	7
  5126  01040C  0100               	movlb	0	; () banked
  5127  01040E  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5128  010410  0100               	movlb	0	; () banked
  5129  010412  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5130  010414  0E00               	movlw	0
  5131  010416  0100               	movlb	0	; () banked
  5132  010418  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5133  01041A  0100               	movlb	0	; () banked
  5134  01041C  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5135  01041E  0E00               	movlw	0
  5136  010420  0100               	movlb	0	; () banked
  5137  010422  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5138  010424  0100               	movlb	0	; () banked
  5139  010426  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5140  010428  0E00               	movlw	0
  5141  01042A  0100               	movlb	0	; () banked
  5142  01042C  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5143  01042E  0100               	movlb	0	; () banked
  5144  010430  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5148  010432  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5149  010436  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5150  01043A  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5151  01043E  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5152  010442  0E05               	movlw	5
  5153  010444                     u5605:
  5154  010444  90D8               	bcf	status,0,c
  5155  010446  0100               	movlb	0	; () banked
  5156  010448  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  5157  01044A  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5158  01044C  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5159  01044E  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5160  010450  2EE8               	decfsz	wreg,f,c
  5161  010452  D7F8               	goto	u5605
  5162  010454  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5163  010458  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5164  01045C  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5165  010460  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5169  010464  C07A  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5170  010468  D000               	goto	l5086
  5171  01046A                     l5086:
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;inc\CANlib.h: 828: }
  5175                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5176  01046A  0100               	movlb	0	; () banked
  5177  01046C  5179               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5178  01046E  0100               	movlb	0	; () banked
  5179  010470  A4D8               	btfss	status,2,c
  5180  010472  D08B               	goto	l5120
  5181                           
  5182                           ; BSR set to: 0
  5183  010474  0EF7               	movlw	247
  5184  010476  0100               	movlb	0	; () banked
  5185  010478  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5186  01047A  A4D8               	btfss	status,2,c
  5187  01047C  D086               	goto	l5120
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;inc\CANlib.h: 832: {
  5191                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5192  01047E  010F               	movlb	15	; () banked
  5193  010480  8701               	bsf	1,3,b	;volatile
  5194                           
  5195                           ; BSR set to: 15
  5196                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5197  010482  0100               	movlb	0	; () banked
  5198  010484  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5199  010486  0100               	movlb	0	; () banked
  5200  010488  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5201  01048A  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5202  01048C  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5203  01048E  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5207  010490  C07A  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5208                           
  5209                           ; BSR set to: 0
  5210                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5211  010494  0E00               	movlw	0
  5212  010496  0100               	movlb	0	; () banked
  5213  010498  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5214  01049A  0100               	movlb	0	; () banked
  5215  01049C  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5216  01049E  0EFF               	movlw	255
  5217  0104A0  0100               	movlb	0	; () banked
  5218  0104A2  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5219  0104A4  0100               	movlb	0	; () banked
  5220  0104A6  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5221  0104A8  0E00               	movlw	0
  5222  0104AA  0100               	movlb	0	; () banked
  5223  0104AC  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5224  0104AE  0100               	movlb	0	; () banked
  5225  0104B0  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5226  0104B2  0E00               	movlw	0
  5227  0104B4  0100               	movlb	0	; () banked
  5228  0104B6  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5229  0104B8  0100               	movlb	0	; () banked
  5230  0104BA  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5234  0104BC  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5235  0104C0  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5236  0104C4  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5237  0104C8  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5238  0104CC  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5239  0104D0  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5240  0104D4  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5241  0104D8  0100               	movlb	0	; () banked
  5242  0104DA  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5243  0104DC  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5244  0104E0  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5245  0104E4  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5246  0104E8  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5250  0104EC  C07A  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5251                           
  5252                           ; BSR set to: 0
  5253                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5254  0104F0  0100               	movlb	0	; () banked
  5255  0104F2  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5256  0104F4  D003               	goto	l485
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5260  0104F6  010F               	movlb	15	; () banked
  5261  0104F8  8101               	bsf	1,0,b	;volatile
  5262  0104FA  D002               	goto	l486
  5263  0104FC                     l485:
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;inc\CANlib.h: 844: else
  5267                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5268  0104FC  010F               	movlb	15	; () banked
  5269  0104FE  9101               	bcf	1,0,b	;volatile
  5270  010500                     l486:
  5271                           
  5272                           ; BSR set to: 15
  5273                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5274  010500  0100               	movlb	0	; () banked
  5275  010502  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5276  010504  D003               	goto	l487
  5277                           
  5278                           ; BSR set to: 0
  5279                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5280  010506  010F               	movlb	15	; () banked
  5281  010508  8301               	bsf	1,1,b	;volatile
  5282  01050A  D002               	goto	l488
  5283  01050C                     l487:
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;inc\CANlib.h: 849: else
  5287                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5288  01050C  010F               	movlb	15	; () banked
  5289  01050E  9301               	bcf	1,1,b	;volatile
  5290  010510                     l488:
  5291                           
  5292                           ; BSR set to: 15
  5293                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5294  010510  0100               	movlb	0	; () banked
  5295  010512  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5296  010514  D003               	goto	l489
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5300  010516  010F               	movlb	15	; () banked
  5301  010518  8B01               	bsf	1,5,b	;volatile
  5302  01051A  D002               	goto	l490
  5303  01051C                     l489:
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;inc\CANlib.h: 854: else
  5307                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5308  01051C  010F               	movlb	15	; () banked
  5309  01051E  9B01               	bcf	1,5,b	;volatile
  5310  010520                     l490:
  5311                           
  5312                           ; BSR set to: 15
  5313                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5314  010520  0100               	movlb	0	; () banked
  5315  010522  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5316  010524  D003               	goto	l491
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5320  010526  010F               	movlb	15	; () banked
  5321  010528  8D01               	bsf	1,6,b	;volatile
  5322  01052A  D002               	goto	l492
  5323  01052C                     l491:
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;inc\CANlib.h: 859: else
  5327                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5328  01052C  010F               	movlb	15	; () banked
  5329  01052E  9D01               	bcf	1,6,b	;volatile
  5330  010530                     l492:
  5331                           
  5332                           ; BSR set to: 15
  5333                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5334  010530  0100               	movlb	0	; () banked
  5335  010532  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5336  010534  D003               	goto	l493
  5337                           
  5338                           ; BSR set to: 0
  5339                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5340  010536  010F               	movlb	15	; () banked
  5341  010538  8F01               	bsf	1,7,b	;volatile
  5342  01053A  D003               	goto	l5114
  5343  01053C                     l493:
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;inc\CANlib.h: 864: else
  5347                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5348  01053C  010F               	movlb	15	; () banked
  5349  01053E  9F01               	bcf	1,7,b	;volatile
  5350  010540  D000               	goto	l5114
  5351  010542                     l5114:
  5352                           
  5353                           ; BSR set to: 15
  5354                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5355  010542  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5356  010546  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5357  01054A  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5358  01054E  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5359  010552  0E16               	movlw	22
  5360  010554  D006               	goto	u5680
  5361  010556                     u5685:
  5362  010556  0100               	movlb	0	; () banked
  5363  010558  90D8               	bcf	status,0,c
  5364  01055A  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5365  01055C  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5366  01055E  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5367  010560  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5368  010562                     u5680:
  5369  010562  2EE8               	decfsz	wreg,f,c
  5370  010564  D7F8               	goto	u5685
  5371  010566  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5372  01056A  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5373  01056E  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5374  010572  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5378  010576  0100               	movlb	0	; () banked
  5379  010578  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5380  01057A  0100               	movlb	0	; () banked
  5381  01057C  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5382  01057E  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5383  010580  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5384  010582  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5385                           
  5386                           ; BSR set to: 0
  5387                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5388  010584  C07A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5389  010588  D000               	goto	l5120
  5390  01058A                     l5120:
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;inc\CANlib.h: 870: }
  5394                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5395  01058A  0100               	movlb	0	; () banked
  5396  01058C  0579               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5397  01058E  A4D8               	btfss	status,2,c
  5398  010590  D08B               	goto	l5154
  5399                           
  5400                           ; BSR set to: 0
  5401  010592  0EF7               	movlw	247
  5402  010594  0100               	movlb	0	; () banked
  5403  010596  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5404  010598  A4D8               	btfss	status,2,c
  5405  01059A  D086               	goto	l5154
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;inc\CANlib.h: 873: {
  5409                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5410  01059C  010F               	movlb	15	; () banked
  5411  01059E  8705               	bsf	5,3,b	;volatile
  5412                           
  5413                           ; BSR set to: 15
  5414                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5415  0105A0  0100               	movlb	0	; () banked
  5416  0105A2  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5417  0105A4  0100               	movlb	0	; () banked
  5418  0105A6  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5419  0105A8  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5420  0105AA  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5421  0105AC  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5425  0105AE  C07A  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5429  0105B2  0E00               	movlw	0
  5430  0105B4  0100               	movlb	0	; () banked
  5431  0105B6  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5432  0105B8  0100               	movlb	0	; () banked
  5433  0105BA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5434  0105BC  0EFF               	movlw	255
  5435  0105BE  0100               	movlb	0	; () banked
  5436  0105C0  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5437  0105C2  0100               	movlb	0	; () banked
  5438  0105C4  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5439  0105C6  0E00               	movlw	0
  5440  0105C8  0100               	movlb	0	; () banked
  5441  0105CA  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5442  0105CC  0100               	movlb	0	; () banked
  5443  0105CE  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5444  0105D0  0E00               	movlw	0
  5445  0105D2  0100               	movlb	0	; () banked
  5446  0105D4  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5447  0105D6  0100               	movlb	0	; () banked
  5448  0105D8  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5452  0105DA  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5453  0105DE  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5454  0105E2  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5455  0105E6  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5456  0105EA  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5457  0105EE  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5458  0105F2  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5459  0105F6  0100               	movlb	0	; () banked
  5460  0105F8  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5461  0105FA  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5462  0105FE  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5463  010602  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5464  010606  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5468  01060A  C07A  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5472  01060E  0100               	movlb	0	; () banked
  5473  010610  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5474  010612  D003               	goto	l496
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5478  010614  010F               	movlb	15	; () banked
  5479  010616  8105               	bsf	5,0,b	;volatile
  5480  010618  D002               	goto	l497
  5481  01061A                     l496:
  5482                           
  5483                           ; BSR set to: 0
  5484                           ;inc\CANlib.h: 885: else
  5485                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5486  01061A  010F               	movlb	15	; () banked
  5487  01061C  9105               	bcf	5,0,b	;volatile
  5488  01061E                     l497:
  5489                           
  5490                           ; BSR set to: 15
  5491                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5492  01061E  0100               	movlb	0	; () banked
  5493  010620  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5494  010622  D003               	goto	l498
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5498  010624  010F               	movlb	15	; () banked
  5499  010626  8305               	bsf	5,1,b	;volatile
  5500  010628  D002               	goto	l499
  5501  01062A                     l498:
  5502                           
  5503                           ; BSR set to: 0
  5504                           ;inc\CANlib.h: 890: else
  5505                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5506  01062A  010F               	movlb	15	; () banked
  5507  01062C  9305               	bcf	5,1,b	;volatile
  5508  01062E                     l499:
  5509                           
  5510                           ; BSR set to: 15
  5511                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5512  01062E  0100               	movlb	0	; () banked
  5513  010630  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5514  010632  D003               	goto	l500
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5518  010634  010F               	movlb	15	; () banked
  5519  010636  8B05               	bsf	5,5,b	;volatile
  5520  010638  D002               	goto	l501
  5521  01063A                     l500:
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;inc\CANlib.h: 895: else
  5525                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5526  01063A  010F               	movlb	15	; () banked
  5527  01063C  9B05               	bcf	5,5,b	;volatile
  5528  01063E                     l501:
  5529                           
  5530                           ; BSR set to: 15
  5531                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5532  01063E  0100               	movlb	0	; () banked
  5533  010640  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5534  010642  D003               	goto	l502
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5538  010644  010F               	movlb	15	; () banked
  5539  010646  8D05               	bsf	5,6,b	;volatile
  5540  010648  D002               	goto	l503
  5541  01064A                     l502:
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;inc\CANlib.h: 900: else
  5545                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5546  01064A  010F               	movlb	15	; () banked
  5547  01064C  9D05               	bcf	5,6,b	;volatile
  5548  01064E                     l503:
  5549                           
  5550                           ; BSR set to: 15
  5551                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5552  01064E  0100               	movlb	0	; () banked
  5553  010650  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5554  010652  D003               	goto	l504
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5558  010654  010F               	movlb	15	; () banked
  5559  010656  8F05               	bsf	5,7,b	;volatile
  5560  010658  D003               	goto	l5148
  5561  01065A                     l504:
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;inc\CANlib.h: 905: else
  5565                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5566  01065A  010F               	movlb	15	; () banked
  5567  01065C  9F05               	bcf	5,7,b	;volatile
  5568  01065E  D000               	goto	l5148
  5569  010660                     l5148:
  5570                           
  5571                           ; BSR set to: 15
  5572                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5573  010660  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5574  010664  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5575  010668  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5576  01066C  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5577  010670  0E16               	movlw	22
  5578  010672  D006               	goto	u5760
  5579  010674                     u5765:
  5580  010674  0100               	movlb	0	; () banked
  5581  010676  90D8               	bcf	status,0,c
  5582  010678  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5583  01067A  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5584  01067C  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5585  01067E  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5586  010680                     u5760:
  5587  010680  2EE8               	decfsz	wreg,f,c
  5588  010682  D7F8               	goto	u5765
  5589  010684  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5590  010688  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5591  01068C  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5592  010690  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5596  010694  0100               	movlb	0	; () banked
  5597  010696  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5598  010698  0100               	movlb	0	; () banked
  5599  01069A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5600  01069C  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5601  01069E  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5602  0106A0  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5603                           
  5604                           ; BSR set to: 0
  5605                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5606  0106A2  C07A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5607  0106A6  D000               	goto	l5154
  5608  0106A8                     l5154:
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;inc\CANlib.h: 911: }
  5612                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5613  0106A8  0E02               	movlw	2
  5614  0106AA  0100               	movlb	0	; () banked
  5615  0106AC  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5616  0106AE  A4D8               	btfss	status,2,c
  5617  0106B0  D08B               	goto	l5188
  5618                           
  5619                           ; BSR set to: 0
  5620  0106B2  0EF7               	movlw	247
  5621  0106B4  0100               	movlb	0	; () banked
  5622  0106B6  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5623  0106B8  A4D8               	btfss	status,2,c
  5624  0106BA  D086               	goto	l5188
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;inc\CANlib.h: 915: {
  5628                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5629  0106BC  010F               	movlb	15	; () banked
  5630  0106BE  8709               	bsf	9,3,b	;volatile
  5631                           
  5632                           ; BSR set to: 15
  5633                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5634  0106C0  0100               	movlb	0	; () banked
  5635  0106C2  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5636  0106C4  0100               	movlb	0	; () banked
  5637  0106C6  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5638  0106C8  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5639  0106CA  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5640  0106CC  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5644  0106CE  C07A  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5648  0106D2  0E00               	movlw	0
  5649  0106D4  0100               	movlb	0	; () banked
  5650  0106D6  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5651  0106D8  0100               	movlb	0	; () banked
  5652  0106DA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5653  0106DC  0EFF               	movlw	255
  5654  0106DE  0100               	movlb	0	; () banked
  5655  0106E0  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5656  0106E2  0100               	movlb	0	; () banked
  5657  0106E4  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5658  0106E6  0E00               	movlw	0
  5659  0106E8  0100               	movlb	0	; () banked
  5660  0106EA  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5661  0106EC  0100               	movlb	0	; () banked
  5662  0106EE  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5663  0106F0  0E00               	movlw	0
  5664  0106F2  0100               	movlb	0	; () banked
  5665  0106F4  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5666  0106F6  0100               	movlb	0	; () banked
  5667  0106F8  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5671  0106FA  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5672  0106FE  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5673  010702  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5674  010706  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5675  01070A  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5676  01070E  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5677  010712  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5678  010716  0100               	movlb	0	; () banked
  5679  010718  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5680  01071A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5681  01071E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5682  010722  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5683  010726  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5687  01072A  C07A  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5688                           
  5689                           ; BSR set to: 0
  5690                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5691  01072E  0100               	movlb	0	; () banked
  5692  010730  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5693  010732  D003               	goto	l507
  5694                           
  5695                           ; BSR set to: 0
  5696                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5697  010734  010F               	movlb	15	; () banked
  5698  010736  8109               	bsf	9,0,b	;volatile
  5699  010738  D002               	goto	l508
  5700  01073A                     l507:
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;inc\CANlib.h: 927: else
  5704                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5705  01073A  010F               	movlb	15	; () banked
  5706  01073C  9109               	bcf	9,0,b	;volatile
  5707  01073E                     l508:
  5708                           
  5709                           ; BSR set to: 15
  5710                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5711  01073E  0100               	movlb	0	; () banked
  5712  010740  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5713  010742  D003               	goto	l509
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5717  010744  010F               	movlb	15	; () banked
  5718  010746  8309               	bsf	9,1,b	;volatile
  5719  010748  D002               	goto	l510
  5720  01074A                     l509:
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;inc\CANlib.h: 932: else
  5724                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5725  01074A  010F               	movlb	15	; () banked
  5726  01074C  9309               	bcf	9,1,b	;volatile
  5727  01074E                     l510:
  5728                           
  5729                           ; BSR set to: 15
  5730                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5731  01074E  0100               	movlb	0	; () banked
  5732  010750  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5733  010752  D003               	goto	l511
  5734                           
  5735                           ; BSR set to: 0
  5736                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5737  010754  010F               	movlb	15	; () banked
  5738  010756  8B09               	bsf	9,5,b	;volatile
  5739  010758  D002               	goto	l512
  5740  01075A                     l511:
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;inc\CANlib.h: 937: else
  5744                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5745  01075A  010F               	movlb	15	; () banked
  5746  01075C  9B09               	bcf	9,5,b	;volatile
  5747  01075E                     l512:
  5748                           
  5749                           ; BSR set to: 15
  5750                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5751  01075E  0100               	movlb	0	; () banked
  5752  010760  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5753  010762  D003               	goto	l513
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5757  010764  010F               	movlb	15	; () banked
  5758  010766  8D09               	bsf	9,6,b	;volatile
  5759  010768  D002               	goto	l514
  5760  01076A                     l513:
  5761                           
  5762                           ; BSR set to: 0
  5763                           ;inc\CANlib.h: 942: else
  5764                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5765  01076A  010F               	movlb	15	; () banked
  5766  01076C  9D09               	bcf	9,6,b	;volatile
  5767  01076E                     l514:
  5768                           
  5769                           ; BSR set to: 15
  5770                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5771  01076E  0100               	movlb	0	; () banked
  5772  010770  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5773  010772  D003               	goto	l515
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5777  010774  010F               	movlb	15	; () banked
  5778  010776  8F09               	bsf	9,7,b	;volatile
  5779  010778  D003               	goto	l5182
  5780  01077A                     l515:
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;inc\CANlib.h: 947: else
  5784                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5785  01077A  010F               	movlb	15	; () banked
  5786  01077C  9F09               	bcf	9,7,b	;volatile
  5787  01077E  D000               	goto	l5182
  5788  010780                     l5182:
  5789                           
  5790                           ; BSR set to: 15
  5791                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5792  010780  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5793  010784  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5794  010788  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5795  01078C  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5796  010790  0E16               	movlw	22
  5797  010792  D006               	goto	u5840
  5798  010794                     u5845:
  5799  010794  0100               	movlb	0	; () banked
  5800  010796  90D8               	bcf	status,0,c
  5801  010798  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5802  01079A  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5803  01079C  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5804  01079E  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5805  0107A0                     u5840:
  5806  0107A0  2EE8               	decfsz	wreg,f,c
  5807  0107A2  D7F8               	goto	u5845
  5808  0107A4  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5809  0107A8  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5810  0107AC  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5811  0107B0  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5815  0107B4  0100               	movlb	0	; () banked
  5816  0107B6  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5817  0107B8  0100               	movlb	0	; () banked
  5818  0107BA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5819  0107BC  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5820  0107BE  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5821  0107C0  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5825  0107C2  C07A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5826  0107C6  D000               	goto	l5188
  5827  0107C8                     l5188:
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;inc\CANlib.h: 953: }
  5831                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5832  0107C8  0E03               	movlw	3
  5833  0107CA  0100               	movlb	0	; () banked
  5834  0107CC  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5835  0107CE  A4D8               	btfss	status,2,c
  5836  0107D0  D08B               	goto	l5222
  5837                           
  5838                           ; BSR set to: 0
  5839  0107D2  0EF7               	movlw	247
  5840  0107D4  0100               	movlb	0	; () banked
  5841  0107D6  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5842  0107D8  A4D8               	btfss	status,2,c
  5843  0107DA  D086               	goto	l5222
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;inc\CANlib.h: 956: {
  5847                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5848  0107DC  010F               	movlb	15	; () banked
  5849  0107DE  870D               	bsf	13,3,b	;volatile
  5850                           
  5851                           ; BSR set to: 15
  5852                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5853  0107E0  0100               	movlb	0	; () banked
  5854  0107E2  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5855  0107E4  0100               	movlb	0	; () banked
  5856  0107E6  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5857  0107E8  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5858  0107EA  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5859  0107EC  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5860                           
  5861                           ; BSR set to: 0
  5862                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5863  0107EE  C07A  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5867  0107F2  0E00               	movlw	0
  5868  0107F4  0100               	movlb	0	; () banked
  5869  0107F6  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5870  0107F8  0100               	movlb	0	; () banked
  5871  0107FA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5872  0107FC  0EFF               	movlw	255
  5873  0107FE  0100               	movlb	0	; () banked
  5874  010800  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5875  010802  0100               	movlb	0	; () banked
  5876  010804  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5877  010806  0E00               	movlw	0
  5878  010808  0100               	movlb	0	; () banked
  5879  01080A  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5880  01080C  0100               	movlb	0	; () banked
  5881  01080E  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5882  010810  0E00               	movlw	0
  5883  010812  0100               	movlb	0	; () banked
  5884  010814  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5885  010816  0100               	movlb	0	; () banked
  5886  010818  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5887                           
  5888                           ; BSR set to: 0
  5889                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5890  01081A  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5891  01081E  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5892  010822  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5893  010826  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5894  01082A  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5895  01082E  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5896  010832  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5897  010836  0100               	movlb	0	; () banked
  5898  010838  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5899  01083A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5900  01083E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5901  010842  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5902  010846  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5903                           
  5904                           ; BSR set to: 0
  5905                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5906  01084A  C07A  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5907                           
  5908                           ; BSR set to: 0
  5909                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5910  01084E  0100               	movlb	0	; () banked
  5911  010850  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5912  010852  D003               	goto	l518
  5913                           
  5914                           ; BSR set to: 0
  5915                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5916  010854  010F               	movlb	15	; () banked
  5917  010856  810D               	bsf	13,0,b	;volatile
  5918  010858  D002               	goto	l519
  5919  01085A                     l518:
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;inc\CANlib.h: 968: else
  5923                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5924  01085A  010F               	movlb	15	; () banked
  5925  01085C  910D               	bcf	13,0,b	;volatile
  5926  01085E                     l519:
  5927                           
  5928                           ; BSR set to: 15
  5929                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5930  01085E  0100               	movlb	0	; () banked
  5931  010860  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5932  010862  D003               	goto	l520
  5933                           
  5934                           ; BSR set to: 0
  5935                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5936  010864  010F               	movlb	15	; () banked
  5937  010866  830D               	bsf	13,1,b	;volatile
  5938  010868  D002               	goto	l521
  5939  01086A                     l520:
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;inc\CANlib.h: 973: else
  5943                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5944  01086A  010F               	movlb	15	; () banked
  5945  01086C  930D               	bcf	13,1,b	;volatile
  5946  01086E                     l521:
  5947                           
  5948                           ; BSR set to: 15
  5949                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5950  01086E  0100               	movlb	0	; () banked
  5951  010870  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5952  010872  D003               	goto	l522
  5953                           
  5954                           ; BSR set to: 0
  5955                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5956  010874  010F               	movlb	15	; () banked
  5957  010876  8B0D               	bsf	13,5,b	;volatile
  5958  010878  D002               	goto	l523
  5959  01087A                     l522:
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;inc\CANlib.h: 978: else
  5963                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5964  01087A  010F               	movlb	15	; () banked
  5965  01087C  9B0D               	bcf	13,5,b	;volatile
  5966  01087E                     l523:
  5967                           
  5968                           ; BSR set to: 15
  5969                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5970  01087E  0100               	movlb	0	; () banked
  5971  010880  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5972  010882  D003               	goto	l524
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5976  010884  010F               	movlb	15	; () banked
  5977  010886  8D0D               	bsf	13,6,b	;volatile
  5978  010888  D002               	goto	l525
  5979  01088A                     l524:
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;inc\CANlib.h: 983: else
  5983                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5984  01088A  010F               	movlb	15	; () banked
  5985  01088C  9D0D               	bcf	13,6,b	;volatile
  5986  01088E                     l525:
  5987                           
  5988                           ; BSR set to: 15
  5989                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5990  01088E  0100               	movlb	0	; () banked
  5991  010890  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5992  010892  D003               	goto	l526
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5996  010894  010F               	movlb	15	; () banked
  5997  010896  8F0D               	bsf	13,7,b	;volatile
  5998  010898  D003               	goto	l5216
  5999  01089A                     l526:
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;inc\CANlib.h: 988: else
  6003                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6004  01089A  010F               	movlb	15	; () banked
  6005  01089C  9F0D               	bcf	13,7,b	;volatile
  6006  01089E  D000               	goto	l5216
  6007  0108A0                     l5216:
  6008                           
  6009                           ; BSR set to: 15
  6010                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6011  0108A0  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  6012  0108A4  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6013  0108A8  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6014  0108AC  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6015  0108B0  0E16               	movlw	22
  6016  0108B2  D006               	goto	u5920
  6017  0108B4                     u5925:
  6018  0108B4  0100               	movlb	0	; () banked
  6019  0108B6  90D8               	bcf	status,0,c
  6020  0108B8  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6021  0108BA  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6022  0108BC  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6023  0108BE  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  6024  0108C0                     u5920:
  6025  0108C0  2EE8               	decfsz	wreg,f,c
  6026  0108C2  D7F8               	goto	u5925
  6027  0108C4  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6028  0108C8  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6029  0108CC  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6030  0108D0  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6034  0108D4  0100               	movlb	0	; () banked
  6035  0108D6  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  6036  0108D8  0100               	movlb	0	; () banked
  6037  0108DA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6038  0108DC  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6039  0108DE  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6040  0108E0  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6044  0108E2  C07A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6045  0108E6  D000               	goto	l5222
  6046  0108E8                     l5222:
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;inc\CANlib.h: 994: }
  6050                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6051  0108E8  0E04               	movlw	4
  6052  0108EA  0100               	movlb	0	; () banked
  6053  0108EC  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6054  0108EE  A4D8               	btfss	status,2,c
  6055  0108F0  D08B               	goto	l5256
  6056                           
  6057                           ; BSR set to: 0
  6058  0108F2  0EF7               	movlw	247
  6059  0108F4  0100               	movlb	0	; () banked
  6060  0108F6  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  6061  0108F8  A4D8               	btfss	status,2,c
  6062  0108FA  D086               	goto	l5256
  6063                           
  6064                           ; BSR set to: 0
  6065                           ;inc\CANlib.h: 997: {
  6066                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6067  0108FC  010F               	movlb	15	; () banked
  6068  0108FE  8711               	bsf	17,3,b	;volatile
  6069                           
  6070                           ; BSR set to: 15
  6071                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6072  010900  0100               	movlb	0	; () banked
  6073  010902  5170               	movf	CANSetFilter@filter& (0+255),w,b
  6074  010904  0100               	movlb	0	; () banked
  6075  010906  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6076  010908  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6077  01090A  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6078  01090C  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6082  01090E  C07A  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6083                           
  6084                           ; BSR set to: 0
  6085                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6086  010912  0E00               	movlw	0
  6087  010914  0100               	movlb	0	; () banked
  6088  010916  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  6089  010918  0100               	movlb	0	; () banked
  6090  01091A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6091  01091C  0EFF               	movlw	255
  6092  01091E  0100               	movlb	0	; () banked
  6093  010920  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6094  010922  0100               	movlb	0	; () banked
  6095  010924  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6096  010926  0E00               	movlw	0
  6097  010928  0100               	movlb	0	; () banked
  6098  01092A  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6099  01092C  0100               	movlb	0	; () banked
  6100  01092E  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6101  010930  0E00               	movlw	0
  6102  010932  0100               	movlb	0	; () banked
  6103  010934  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6104  010936  0100               	movlb	0	; () banked
  6105  010938  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6109  01093A  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  6110  01093E  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6111  010942  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6112  010946  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6113  01094A  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  6114  01094E  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6115  010952  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6116  010956  0100               	movlb	0	; () banked
  6117  010958  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  6118  01095A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6119  01095E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6120  010962  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6121  010966  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6122                           
  6123                           ; BSR set to: 0
  6124                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6125  01096A  C07A  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6129  01096E  0100               	movlb	0	; () banked
  6130  010970  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6131  010972  D003               	goto	l529
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6135  010974  010F               	movlb	15	; () banked
  6136  010976  8111               	bsf	17,0,b	;volatile
  6137  010978  D002               	goto	l530
  6138  01097A                     l529:
  6139                           
  6140                           ; BSR set to: 0
  6141                           ;inc\CANlib.h: 1009: else
  6142                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6143  01097A  010F               	movlb	15	; () banked
  6144  01097C  9111               	bcf	17,0,b	;volatile
  6145  01097E                     l530:
  6146                           
  6147                           ; BSR set to: 15
  6148                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6149  01097E  0100               	movlb	0	; () banked
  6150  010980  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6151  010982  D003               	goto	l531
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6155  010984  010F               	movlb	15	; () banked
  6156  010986  8311               	bsf	17,1,b	;volatile
  6157  010988  D002               	goto	l532
  6158  01098A                     l531:
  6159                           
  6160                           ; BSR set to: 0
  6161                           ;inc\CANlib.h: 1014: else
  6162                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6163  01098A  010F               	movlb	15	; () banked
  6164  01098C  9311               	bcf	17,1,b	;volatile
  6165  01098E                     l532:
  6166                           
  6167                           ; BSR set to: 15
  6168                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6169  01098E  0100               	movlb	0	; () banked
  6170  010990  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6171  010992  D003               	goto	l533
  6172                           
  6173                           ; BSR set to: 0
  6174                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6175  010994  010F               	movlb	15	; () banked
  6176  010996  8B11               	bsf	17,5,b	;volatile
  6177  010998  D002               	goto	l534
  6178  01099A                     l533:
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;inc\CANlib.h: 1019: else
  6182                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6183  01099A  010F               	movlb	15	; () banked
  6184  01099C  9B11               	bcf	17,5,b	;volatile
  6185  01099E                     l534:
  6186                           
  6187                           ; BSR set to: 15
  6188                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6189  01099E  0100               	movlb	0	; () banked
  6190  0109A0  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6191  0109A2  D003               	goto	l535
  6192                           
  6193                           ; BSR set to: 0
  6194                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6195  0109A4  010F               	movlb	15	; () banked
  6196  0109A6  8D11               	bsf	17,6,b	;volatile
  6197  0109A8  D002               	goto	l536
  6198  0109AA                     l535:
  6199                           
  6200                           ; BSR set to: 0
  6201                           ;inc\CANlib.h: 1024: else
  6202                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6203  0109AA  010F               	movlb	15	; () banked
  6204  0109AC  9D11               	bcf	17,6,b	;volatile
  6205  0109AE                     l536:
  6206                           
  6207                           ; BSR set to: 15
  6208                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6209  0109AE  0100               	movlb	0	; () banked
  6210  0109B0  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6211  0109B2  D003               	goto	l537
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6215  0109B4  010F               	movlb	15	; () banked
  6216  0109B6  8F11               	bsf	17,7,b	;volatile
  6217  0109B8  D003               	goto	l5250
  6218  0109BA                     l537:
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;inc\CANlib.h: 1029: else
  6222                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6223  0109BA  010F               	movlb	15	; () banked
  6224  0109BC  9F11               	bcf	17,7,b	;volatile
  6225  0109BE  D000               	goto	l5250
  6226  0109C0                     l5250:
  6227                           
  6228                           ; BSR set to: 15
  6229                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6230  0109C0  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  6231  0109C4  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6232  0109C8  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6233  0109CC  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6234  0109D0  0E16               	movlw	22
  6235  0109D2  D006               	goto	u6000
  6236  0109D4                     u6005:
  6237  0109D4  0100               	movlb	0	; () banked
  6238  0109D6  90D8               	bcf	status,0,c
  6239  0109D8  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6240  0109DA  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6241  0109DC  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6242  0109DE  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  6243  0109E0                     u6000:
  6244  0109E0  2EE8               	decfsz	wreg,f,c
  6245  0109E2  D7F8               	goto	u6005
  6246  0109E4  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6247  0109E8  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6248  0109EC  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6249  0109F0  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6253  0109F4  0100               	movlb	0	; () banked
  6254  0109F6  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  6255  0109F8  0100               	movlb	0	; () banked
  6256  0109FA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6257  0109FC  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6258  0109FE  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6259  010A00  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6263  010A02  C07A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6264  010A06  D000               	goto	l5256
  6265  010A08                     l5256:
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;inc\CANlib.h: 1035: }
  6269                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6270  010A08  0E05               	movlw	5
  6271  010A0A  0100               	movlb	0	; () banked
  6272  010A0C  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6273  010A0E  A4D8               	btfss	status,2,c
  6274  010A10  0012               	return	
  6275                           
  6276                           ; BSR set to: 0
  6277  010A12  0EF7               	movlw	247
  6278  010A14  0100               	movlb	0	; () banked
  6279  010A16  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  6280  010A18  A4D8               	btfss	status,2,c
  6281  010A1A  0012               	return	
  6282                           
  6283                           ; BSR set to: 0
  6284                           ;inc\CANlib.h: 1038: {
  6285                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6286  010A1C  010F               	movlb	15	; () banked
  6287  010A1E  8715               	bsf	21,3,b	;volatile
  6288                           
  6289                           ; BSR set to: 15
  6290                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6291  010A20  0100               	movlb	0	; () banked
  6292  010A22  5170               	movf	CANSetFilter@filter& (0+255),w,b
  6293  010A24  0100               	movlb	0	; () banked
  6294  010A26  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6295  010A28  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6296  010A2A  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6297  010A2C  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6301  010A2E  C07A  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6305  010A32  0E00               	movlw	0
  6306  010A34  0100               	movlb	0	; () banked
  6307  010A36  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  6308  010A38  0100               	movlb	0	; () banked
  6309  010A3A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6310  010A3C  0EFF               	movlw	255
  6311  010A3E  0100               	movlb	0	; () banked
  6312  010A40  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6313  010A42  0100               	movlb	0	; () banked
  6314  010A44  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6315  010A46  0E00               	movlw	0
  6316  010A48  0100               	movlb	0	; () banked
  6317  010A4A  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6318  010A4C  0100               	movlb	0	; () banked
  6319  010A4E  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6320  010A50  0E00               	movlw	0
  6321  010A52  0100               	movlb	0	; () banked
  6322  010A54  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6323  010A56  0100               	movlb	0	; () banked
  6324  010A58  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6328  010A5A  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  6329  010A5E  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6330  010A62  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6331  010A66  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6332  010A6A  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  6333  010A6E  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6334  010A72  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6335  010A76  0100               	movlb	0	; () banked
  6336  010A78  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  6337  010A7A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6338  010A7E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6339  010A82  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6340  010A86  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6344  010A8A  C07A  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6345                           
  6346                           ; BSR set to: 0
  6347                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6348  010A8E  0100               	movlb	0	; () banked
  6349  010A90  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6350  010A92  D003               	goto	l540
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6354  010A94  010F               	movlb	15	; () banked
  6355  010A96  8115               	bsf	21,0,b	;volatile
  6356  010A98  D002               	goto	l541
  6357  010A9A                     l540:
  6358                           
  6359                           ; BSR set to: 0
  6360                           ;inc\CANlib.h: 1050: else
  6361                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6362  010A9A  010F               	movlb	15	; () banked
  6363  010A9C  9115               	bcf	21,0,b	;volatile
  6364  010A9E                     l541:
  6365                           
  6366                           ; BSR set to: 15
  6367                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6368  010A9E  0100               	movlb	0	; () banked
  6369  010AA0  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6370  010AA2  D003               	goto	l542
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6374  010AA4  010F               	movlb	15	; () banked
  6375  010AA6  8315               	bsf	21,1,b	;volatile
  6376  010AA8  D002               	goto	l543
  6377  010AAA                     l542:
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;inc\CANlib.h: 1055: else
  6381                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6382  010AAA  010F               	movlb	15	; () banked
  6383  010AAC  9315               	bcf	21,1,b	;volatile
  6384  010AAE                     l543:
  6385                           
  6386                           ; BSR set to: 15
  6387                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6388  010AAE  0100               	movlb	0	; () banked
  6389  010AB0  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6390  010AB2  D003               	goto	l544
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6394  010AB4  010F               	movlb	15	; () banked
  6395  010AB6  8B15               	bsf	21,5,b	;volatile
  6396  010AB8  D002               	goto	l545
  6397  010ABA                     l544:
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;inc\CANlib.h: 1060: else
  6401                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6402  010ABA  010F               	movlb	15	; () banked
  6403  010ABC  9B15               	bcf	21,5,b	;volatile
  6404  010ABE                     l545:
  6405                           
  6406                           ; BSR set to: 15
  6407                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6408  010ABE  0100               	movlb	0	; () banked
  6409  010AC0  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6410  010AC2  D003               	goto	l546
  6411                           
  6412                           ; BSR set to: 0
  6413                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6414  010AC4  010F               	movlb	15	; () banked
  6415  010AC6  8D15               	bsf	21,6,b	;volatile
  6416  010AC8  D002               	goto	l547
  6417  010ACA                     l546:
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;inc\CANlib.h: 1065: else
  6421                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6422  010ACA  010F               	movlb	15	; () banked
  6423  010ACC  9D15               	bcf	21,6,b	;volatile
  6424  010ACE                     l547:
  6425                           
  6426                           ; BSR set to: 15
  6427                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6428  010ACE  0100               	movlb	0	; () banked
  6429  010AD0  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6430  010AD2  D003               	goto	l548
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6434  010AD4  010F               	movlb	15	; () banked
  6435  010AD6  8F15               	bsf	21,7,b	;volatile
  6436  010AD8  D003               	goto	l5284
  6437  010ADA                     l548:
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;inc\CANlib.h: 1070: else
  6441                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6442  010ADA  010F               	movlb	15	; () banked
  6443  010ADC  9F15               	bcf	21,7,b	;volatile
  6444  010ADE  D000               	goto	l5284
  6445  010AE0                     l5284:
  6446                           
  6447                           ; BSR set to: 15
  6448                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6449  010AE0  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  6450  010AE4  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6451  010AE8  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6452  010AEC  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6453  010AF0  0E16               	movlw	22
  6454  010AF2  D006               	goto	u6080
  6455  010AF4                     u6085:
  6456  010AF4  0100               	movlb	0	; () banked
  6457  010AF6  90D8               	bcf	status,0,c
  6458  010AF8  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6459  010AFA  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6460  010AFC  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6461  010AFE  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  6462  010B00                     u6080:
  6463  010B00  2EE8               	decfsz	wreg,f,c
  6464  010B02  D7F8               	goto	u6085
  6465  010B04  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6466  010B08  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6467  010B0C  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6468  010B10  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6469                           
  6470                           ; BSR set to: 0
  6471                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6472  010B14  0100               	movlb	0	; () banked
  6473  010B16  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  6474  010B18  0100               	movlb	0	; () banked
  6475  010B1A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6476  010B1C  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6477  010B1E  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6478  010B20  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6482  010B22  C07A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6483  010B26  0012               	return	
  6484                           
  6485                           ; BSR set to: 0
  6486                           
  6487                           ; BSR set to: 0
  6488  010B28  0012               	return		;funcret
  6489  010B2A                     __end_of_CANSetFilter:
  6490                           	opt stack 0
  6491                           tblptru	equ	0xFF8
  6492                           tblptrh	equ	0xFF7
  6493                           tblptrl	equ	0xFF6
  6494                           tablat	equ	0xFF5
  6495                           intcon	equ	0xFF2
  6496                           postinc0	equ	0xFEE
  6497                           wreg	equ	0xFE8
  6498                           status	equ	0xFD8
  6499                           
  6500 ;; *************** function _CANOperationMode *****************
  6501 ;; Defined at:
  6502 ;;		line 206 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;  mode            1    wreg     enum E16922
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  mode            1   16[BANK0 ] enum E16922
  6507 ;; Return value:  Size  Location     Type
  6508 ;;		None               void
  6509 ;; Registers used:
  6510 ;;		wreg, status,2, status,0
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6517 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6519 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;Total ram usage:        1 bytes
  6521 ;; Hardware stack levels used:    1
  6522 ;; Hardware stack levels required when called:    3
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_CANInitialize
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text5
  6531  015EE8                     __ptext5:
  6532                           	opt stack 0
  6533  015EE8                     _CANOperationMode:
  6534                           	opt stack 25
  6535                           
  6536                           ; BSR set to: 0
  6537                           ;incstack = 0
  6538                           ;CANOperationMode@mode stored from wreg
  6539  015EE8  0100               	movlb	0	; () banked
  6540  015EEA  6F70               	movwf	CANOperationMode@mode& (0+255),b
  6541                           
  6542                           ; BSR set to: 0
  6543                           ;inc\CANlib.h: 208: CANCON = mode;
  6544  015EEC  C070  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6545                           
  6546                           ; BSR set to: 0
  6547                           
  6548                           ;inc\CANlib.h: 210: while((CANSTAT & 0b11100000) != mode );
  6549  015EF0  D000               	goto	l4880
  6550  015EF2                     l4880:
  6551                           
  6552                           ; BSR set to: 0
  6553  015EF2  506E               	movf	3950,w,c	;volatile
  6554  015EF4  0BE0               	andlw	224
  6555  015EF6  0100               	movlb	0	; () banked
  6556  015EF8  1970               	xorwf	CANOperationMode@mode& (0+255),w,b
  6557  015EFA  A4D8               	btfss	status,2,c
  6558  015EFC  D7FA               	goto	l4880
  6559                           
  6560                           ; BSR set to: 0
  6561                           
  6562                           ; BSR set to: 0
  6563  015EFE  0012               	return		;funcret
  6564  015F00                     __end_of_CANOperationMode:
  6565                           	opt stack 0
  6566                           tblptru	equ	0xFF8
  6567                           tblptrh	equ	0xFF7
  6568                           tblptrl	equ	0xFF6
  6569                           tablat	equ	0xFF5
  6570                           intcon	equ	0xFF2
  6571                           postinc0	equ	0xFEE
  6572                           wreg	equ	0xFE8
  6573                           status	equ	0xFD8
  6574                           
  6575 ;; *************** function ___lbtofl *****************
  6576 ;; Defined at:
  6577 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtofl.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;  c               1    wreg     unsigned char 
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;  c               1   30[BANK0 ] unsigned char 
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  4   26[BANK0 ] unsigned char 
  6584 ;; Registers used:
  6585 ;;		wreg, status,2, status,0, cstack
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6591 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6592 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6594 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6595 ;;Total ram usage:        5 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:    4
  6598 ;; This function calls:
  6599 ;;		___flpack
  6600 ;; This function is called by:
  6601 ;;		_main
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           	psect	text6
  6606  015CD8                     __ptext6:
  6607                           	opt stack 0
  6608  015CD8                     ___lbtofl:
  6609                           	opt stack 26
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;incstack = 0
  6613                           ;___lbtofl@c stored from wreg
  6614  015CD8  0100               	movlb	0	; () banked
  6615  015CDA  6F7E               	movwf	___lbtofl@c& (0+255),b
  6616                           
  6617                           ; BSR set to: 0
  6618  015CDC  0100               	movlb	0	; () banked
  6619  015CDE  517E               	movf	___lbtofl@c& (0+255),w,b
  6620  015CE0  0100               	movlb	0	; () banked
  6621  015CE2  6F70               	movwf	___flpack@arg& (0+255),b
  6622  015CE4  6B71               	clrf	(___flpack@arg+1)& (0+255),b
  6623  015CE6  6B72               	clrf	(___flpack@arg+2)& (0+255),b
  6624  015CE8  6B73               	clrf	(___flpack@arg+3)& (0+255),b
  6625  015CEA  0E96               	movlw	150
  6626  015CEC  0100               	movlb	0	; () banked
  6627  015CEE  6F74               	movwf	___flpack@exp& (0+255),b
  6628  015CF0  0E00               	movlw	0
  6629  015CF2  0100               	movlb	0	; () banked
  6630  015CF4  6F75               	movwf	___flpack@sign& (0+255),b
  6631  015CF6  EC4B  F0A4         	call	___flpack	;wreg free
  6632  015CFA  C070  F07A         	movff	?___flpack,?___lbtofl
  6633  015CFE  C071  F07B         	movff	?___flpack+1,?___lbtofl+1
  6634  015D02  C072  F07C         	movff	?___flpack+2,?___lbtofl+2
  6635  015D06  C073  F07D         	movff	?___flpack+3,?___lbtofl+3
  6636  015D0A  0012               	return	
  6637  015D0C  0012               	return		;funcret
  6638  015D0E                     __end_of___lbtofl:
  6639                           	opt stack 0
  6640                           tblptru	equ	0xFF8
  6641                           tblptrh	equ	0xFF7
  6642                           tblptrl	equ	0xFF6
  6643                           tablat	equ	0xFF5
  6644                           intcon	equ	0xFF2
  6645                           postinc0	equ	0xFEE
  6646                           wreg	equ	0xFE8
  6647                           status	equ	0xFD8
  6648                           
  6649 ;; *************** function ___awtofl *****************
  6650 ;; Defined at:
  6651 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtofl.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;  c               2   26[BANK0 ] int 
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;  f1              4    0        int 
  6656 ;;  sign            1   30[BANK0 ] unsigned char 
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  4   26[BANK0 ] unsigned char 
  6659 ;; Registers used:
  6660 ;;		wreg, status,2, status,0, cstack
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6666 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6667 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6669 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6670 ;;Total ram usage:        5 bytes
  6671 ;; Hardware stack levels used:    1
  6672 ;; Hardware stack levels required when called:    4
  6673 ;; This function calls:
  6674 ;;		___flpack
  6675 ;; This function is called by:
  6676 ;;		_main
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text7
  6681  015AD4                     __ptext7:
  6682                           	opt stack 0
  6683  015AD4                     ___awtofl:
  6684                           	opt stack 26
  6685                           
  6686                           ;incstack = 0
  6687  015AD4  0E00               	movlw	0
  6688  015AD6  0100               	movlb	0	; () banked
  6689  015AD8  6F7E               	movwf	___awtofl@sign& (0+255),b
  6690                           
  6691                           ; BSR set to: 0
  6692  015ADA  0100               	movlb	0	; () banked
  6693  015ADC  AF7B               	btfss	(___awtofl@c+1)& (0+255),7,b
  6694  015ADE  D008               	goto	l8436
  6695                           
  6696                           ; BSR set to: 0
  6697  015AE0  0100               	movlb	0	; () banked
  6698  015AE2  6D7A               	negf	___awtofl@c& (0+255),b
  6699  015AE4  1F7B               	comf	(___awtofl@c+1)& (0+255),f,b
  6700  015AE6  B0D8               	btfsc	status,0,c
  6701  015AE8  2B7B               	incf	(___awtofl@c+1)& (0+255),f,b
  6702  015AEA  0100               	movlb	0	; () banked
  6703  015AEC  2B7E               	incf	___awtofl@sign& (0+255),f,b
  6704  015AEE  D000               	goto	l8436
  6705  015AF0                     l8436:
  6706                           
  6707                           ; BSR set to: 0
  6708  015AF0  C07A  F070         	movff	___awtofl@c,___flpack@arg
  6709  015AF4  C07B  F071         	movff	___awtofl@c+1,___flpack@arg+1
  6710  015AF8  0100               	movlb	0	; () banked
  6711  015AFA  6B72               	clrf	(___flpack@arg+2)& (0+255),b
  6712  015AFC  6B73               	clrf	(___flpack@arg+3)& (0+255),b
  6713  015AFE  0E96               	movlw	150
  6714  015B00  0100               	movlb	0	; () banked
  6715  015B02  6F74               	movwf	___flpack@exp& (0+255),b
  6716  015B04  C07E  F075         	movff	___awtofl@sign,___flpack@sign
  6717  015B08  EC4B  F0A4         	call	___flpack	;wreg free
  6718  015B0C  C070  F07A         	movff	?___flpack,?___awtofl
  6719  015B10  C071  F07B         	movff	?___flpack+1,?___awtofl+1
  6720  015B14  C072  F07C         	movff	?___flpack+2,?___awtofl+2
  6721  015B18  C073  F07D         	movff	?___flpack+3,?___awtofl+3
  6722  015B1C  0012               	return	
  6723  015B1E  0012               	return		;funcret
  6724  015B20                     __end_of___awtofl:
  6725                           	opt stack 0
  6726                           tblptru	equ	0xFF8
  6727                           tblptrh	equ	0xFF7
  6728                           tblptrl	equ	0xFF6
  6729                           tablat	equ	0xFF5
  6730                           intcon	equ	0xFF2
  6731                           postinc0	equ	0xFEE
  6732                           wreg	equ	0xFE8
  6733                           status	equ	0xFD8
  6734                           
  6735 ;; *************** function _PWR_Button_Polling *****************
  6736 ;; Defined at:
  6737 ;;		line 574 in file "RemoteCan.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;		None
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;		None
  6742 ;; Return value:  Size  Location     Type
  6743 ;;		None               void
  6744 ;; Registers used:
  6745 ;;		None
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6755 ;;Total ram usage:        0 bytes
  6756 ;; Hardware stack levels used:    1
  6757 ;; Hardware stack levels required when called:    3
  6758 ;; This function calls:
  6759 ;;		Nothing
  6760 ;; This function is called by:
  6761 ;;		_main
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text8
  6766  015F18                     __ptext8:
  6767                           	opt stack 0
  6768  015F18                     _PWR_Button_Polling:
  6769                           	opt stack 27
  6770                           
  6771                           ;RemoteCan.c: 575: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  6772                           
  6773                           ;incstack = 0
  6774  015F18  AA81               	btfss	3969,5,c	;volatile
  6775  015F1A  D002               	goto	l928
  6776  015F1C  B44C               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6777  015F1E  0012               	return	
  6778  015F20                     l928:
  6779                           
  6780                           ;RemoteCan.c: 576: wait_low_1 = 0;
  6781  015F20  944C               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6782                           
  6783                           ;RemoteCan.c: 577: if (PORTBbits.RB5 == 1) {
  6784  015F22  AA81               	btfss	3969,5,c	;volatile
  6785  015F24  0012               	return	
  6786                           
  6787                           ;RemoteCan.c: 578: power_switch = ~power_switch;
  6788  015F26  7C4B               	btg	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6789                           
  6790                           ;RemoteCan.c: 579: wait_low_1 = 1;
  6791  015F28  844C               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6792  015F2A  0012               	return	
  6793  015F2C  0012               	return		;funcret
  6794  015F2E                     __end_of_PWR_Button_Polling:
  6795                           	opt stack 0
  6796                           tblptru	equ	0xFF8
  6797                           tblptrh	equ	0xFF7
  6798                           tblptrl	equ	0xFF6
  6799                           tablat	equ	0xFF5
  6800                           intcon	equ	0xFF2
  6801                           postinc0	equ	0xFEE
  6802                           wreg	equ	0xFE8
  6803                           status	equ	0xFD8
  6804                           
  6805 ;; *************** function _LCD_Parking *****************
  6806 ;; Defined at:
  6807 ;;		line 535 in file "RemoteCan.c"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;		None
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;		None
  6812 ;; Return value:  Size  Location     Type
  6813 ;;		None               void
  6814 ;; Registers used:
  6815 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6825 ;;Total ram usage:        0 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; Hardware stack levels required when called:    9
  6828 ;; This function calls:
  6829 ;;		_LCD_clear
  6830 ;;		_LCD_goto_line
  6831 ;;		_LCD_initialize
  6832 ;;		_LCD_write_message
  6833 ;; This function is called by:
  6834 ;;		_main
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text9
  6839  015832                     __ptext9:
  6840                           	opt stack 0
  6841  015832                     _LCD_Parking:
  6842                           	opt stack 21
  6843                           
  6844                           ;RemoteCan.c: 536: LCD_initialize(16);
  6845                           
  6846                           ;incstack = 0
  6847  015832  0E10               	movlw	16
  6848  015834  EC0B  F0A5         	call	_LCD_initialize
  6849                           
  6850                           ;RemoteCan.c: 537: LCD_clear();
  6851  015838  ECEE  F0AE         	call	_LCD_clear	;wreg free
  6852                           
  6853                           ;RemoteCan.c: 538: LCD_goto_line(1);
  6854  01583C  0E01               	movlw	1
  6855  01583E  EC18  F0A8         	call	_LCD_goto_line
  6856                           
  6857                           ;RemoteCan.c: 539: LCD_write_message("= PARKING MESSAGES =");
  6858  015842  0E40               	movlw	low STR_16
  6859  015844  0100               	movlb	0	; () banked
  6860  015846  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6861  015848  0EFF               	movlw	high STR_16
  6862  01584A  0100               	movlb	0	; () banked
  6863  01584C  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6864  01584E  EC87  F0AE         	call	_LCD_write_message	;wreg free
  6865                           
  6866                           ;RemoteCan.c: 540: LCD_goto_line(2);
  6867  015852  0E02               	movlw	2
  6868  015854  EC18  F0A8         	call	_LCD_goto_line
  6869                           
  6870                           ;RemoteCan.c: 541: LCD_write_message("=    Parking in    =");
  6871  015858  0E16               	movlw	low STR_25
  6872  01585A  0100               	movlb	0	; () banked
  6873  01585C  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6874  01585E  0EFF               	movlw	high STR_25
  6875  015860  0100               	movlb	0	; () banked
  6876  015862  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6877  015864  EC87  F0AE         	call	_LCD_write_message	;wreg free
  6878                           
  6879                           ;RemoteCan.c: 542: LCD_goto_line(3);
  6880  015868  0E03               	movlw	3
  6881  01586A  EC18  F0A8         	call	_LCD_goto_line
  6882                           
  6883                           ;RemoteCan.c: 543: LCD_write_message("=    progress...   =");
  6884  01586E  0E2B               	movlw	low STR_26
  6885  015870  0100               	movlb	0	; () banked
  6886  015872  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6887  015874  0EFF               	movlw	high STR_26
  6888  015876  0100               	movlb	0	; () banked
  6889  015878  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6890  01587A  EC87  F0AE         	call	_LCD_write_message	;wreg free
  6891                           
  6892                           ;RemoteCan.c: 544: LCD_goto_line(4);
  6893  01587E  0E04               	movlw	4
  6894  015880  EC18  F0A8         	call	_LCD_goto_line
  6895                           
  6896                           ;RemoteCan.c: 545: LCD_write_message("====================");
  6897  015884  0E7F               	movlw	low STR_1
  6898  015886  0100               	movlb	0	; () banked
  6899  015888  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6900  01588A  0EFF               	movlw	high STR_1
  6901  01588C  0100               	movlb	0	; () banked
  6902  01588E  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6903  015890  EC87  F0AE         	call	_LCD_write_message	;wreg free
  6904  015894  0012               	return		;funcret
  6905  015896                     __end_of_LCD_Parking:
  6906                           	opt stack 0
  6907                           tblptru	equ	0xFF8
  6908                           tblptrh	equ	0xFF7
  6909                           tblptrl	equ	0xFF6
  6910                           tablat	equ	0xFF5
  6911                           intcon	equ	0xFF2
  6912                           postinc0	equ	0xFEE
  6913                           wreg	equ	0xFE8
  6914                           status	equ	0xFD8
  6915                           
  6916 ;; *************** function _LCD_Park *****************
  6917 ;; Defined at:
  6918 ;;		line 522 in file "RemoteCan.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;		None
  6921 ;; Auto vars:     Size  Location     Type
  6922 ;;		None
  6923 ;; Return value:  Size  Location     Type
  6924 ;;		None               void
  6925 ;; Registers used:
  6926 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6927 ;; Tracked objects:
  6928 ;;		On entry : 0/0
  6929 ;;		On exit  : 0/0
  6930 ;;		Unchanged: 0/0
  6931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6936 ;;Total ram usage:        0 bytes
  6937 ;; Hardware stack levels used:    1
  6938 ;; Hardware stack levels required when called:    9
  6939 ;; This function calls:
  6940 ;;		_LCD_clear
  6941 ;;		_LCD_goto_line
  6942 ;;		_LCD_initialize
  6943 ;;		_LCD_write_message
  6944 ;; This function is called by:
  6945 ;;		_main
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text10
  6950  015896                     __ptext10:
  6951                           	opt stack 0
  6952  015896                     _LCD_Park:
  6953                           	opt stack 21
  6954                           
  6955                           ;RemoteCan.c: 523: LCD_initialize(16);
  6956                           
  6957                           ;incstack = 0
  6958  015896  0E10               	movlw	16
  6959  015898  EC0B  F0A5         	call	_LCD_initialize
  6960                           
  6961                           ;RemoteCan.c: 524: LCD_clear();
  6962  01589C  ECEE  F0AE         	call	_LCD_clear	;wreg free
  6963                           
  6964                           ;RemoteCan.c: 525: LCD_goto_line(1);
  6965  0158A0  0E01               	movlw	1
  6966  0158A2  EC18  F0A8         	call	_LCD_goto_line
  6967                           
  6968                           ;RemoteCan.c: 526: LCD_write_message("= PARKING MESSAGES =");
  6969  0158A6  0E40               	movlw	low STR_16
  6970  0158A8  0100               	movlb	0	; () banked
  6971  0158AA  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6972  0158AC  0EFF               	movlw	high STR_16
  6973  0158AE  0100               	movlb	0	; () banked
  6974  0158B0  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6975  0158B2  EC87  F0AE         	call	_LCD_write_message	;wreg free
  6976                           
  6977                           ;RemoteCan.c: 527: LCD_goto_line(2);
  6978  0158B6  0E02               	movlw	2
  6979  0158B8  EC18  F0A8         	call	_LCD_goto_line
  6980                           
  6981                           ;RemoteCan.c: 528: LCD_write_message("- Distance REACHED -");
  6982  0158BC  0EEC               	movlw	low STR_21
  6983  0158BE  0100               	movlb	0	; () banked
  6984  0158C0  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6985  0158C2  0EFE               	movlw	high STR_21
  6986  0158C4  0100               	movlb	0	; () banked
  6987  0158C6  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6988  0158C8  EC87  F0AE         	call	_LCD_write_message	;wreg free
  6989                           
  6990                           ;RemoteCan.c: 529: LCD_goto_line(3);
  6991  0158CC  0E03               	movlw	3
  6992  0158CE  EC18  F0A8         	call	_LCD_goto_line
  6993                           
  6994                           ;RemoteCan.c: 530: LCD_write_message("Press the BUTTON to ");
  6995  0158D2  0EC2               	movlw	low STR_22
  6996  0158D4  0100               	movlb	0	; () banked
  6997  0158D6  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6998  0158D8  0EFE               	movlw	high STR_22
  6999  0158DA  0100               	movlb	0	; () banked
  7000  0158DC  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7001  0158DE  EC87  F0AE         	call	_LCD_write_message	;wreg free
  7002                           
  7003                           ;RemoteCan.c: 531: LCD_goto_line(4);
  7004  0158E2  0E04               	movlw	4
  7005  0158E4  EC18  F0A8         	call	_LCD_goto_line
  7006                           
  7007                           ;RemoteCan.c: 532: LCD_write_message("   start parking    ");
  7008  0158E8  0E6E               	movlw	low STR_23
  7009  0158EA  0100               	movlb	0	; () banked
  7010  0158EC  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7011  0158EE  0EFE               	movlw	high STR_23
  7012  0158F0  0100               	movlb	0	; () banked
  7013  0158F2  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7014  0158F4  EC87  F0AE         	call	_LCD_write_message	;wreg free
  7015  0158F8  0012               	return		;funcret
  7016  0158FA                     __end_of_LCD_Park:
  7017                           	opt stack 0
  7018                           tblptru	equ	0xFF8
  7019                           tblptrh	equ	0xFF7
  7020                           tblptrl	equ	0xFF6
  7021                           tablat	equ	0xFF5
  7022                           intcon	equ	0xFF2
  7023                           postinc0	equ	0xFEE
  7024                           wreg	equ	0xFE8
  7025                           status	equ	0xFD8
  7026                           
  7027 ;; *************** function _LCD_Handler *****************
  7028 ;; Defined at:
  7029 ;;		line 451 in file "RemoteCan.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;		None
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;		None
  7034 ;; Return value:  Size  Location     Type
  7035 ;;		None               void
  7036 ;; Registers used:
  7037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7047 ;;Total ram usage:        0 bytes
  7048 ;; Hardware stack levels used:    1
  7049 ;; Hardware stack levels required when called:   10
  7050 ;; This function calls:
  7051 ;;		_CANisTxReady
  7052 ;;		_CANsendMessage
  7053 ;;		_LCD_clear
  7054 ;;		_LCD_goto_line
  7055 ;;		_LCD_goto_xy
  7056 ;;		_LCD_initialize
  7057 ;;		_LCD_write_integer
  7058 ;;		_LCD_write_message
  7059 ;;		_LCD_write_string
  7060 ;;		___fldiv
  7061 ;;		___lwtofl
  7062 ;;		_sprintf
  7063 ;; This function is called by:
  7064 ;;		_main
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           	psect	text11
  7069  013FC6                     __ptext11:
  7070                           	opt stack 0
  7071  013FC6                     _LCD_Handler:
  7072                           	opt stack 20
  7073                           
  7074                           ;RemoteCan.c: 453: while (CANisTxReady() != 1);
  7075                           
  7076                           ;incstack = 0
  7077  013FC6  D000               	goto	l8350
  7078  013FC8                     l8350:
  7079  013FC8  EC32  F0AF         	call	_CANisTxReady	;wreg free
  7080  013FCC  06E8               	decf	wreg,f,c
  7081  013FCE  A4D8               	btfss	status,2,c
  7082  013FD0  D7FB               	goto	l8350
  7083                           
  7084                           ;RemoteCan.c: 454: CANsendMessage(0b00000001000, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  7085  013FD2  0E08               	movlw	8
  7086  013FD4  0100               	movlb	0	; () banked
  7087  013FD6  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  7088  013FD8  0E00               	movlw	0
  7089  013FDA  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  7090  013FDC  0E00               	movlw	0
  7091  013FDE  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  7092  013FE0  0E00               	movlw	0
  7093  013FE2  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  7094  013FE4  0E25               	movlw	low _data_speed
  7095  013FE6  0100               	movlb	0	; () banked
  7096  013FE8  6F74               	movwf	CANsendMessage@data& (0+255),b
  7097  013FEA  0E01               	movlw	high _data_speed
  7098  013FEC  0100               	movlb	0	; () banked
  7099  013FEE  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  7100  013FF0  0E08               	movlw	8
  7101  013FF2  0100               	movlb	0	; () banked
  7102  013FF4  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  7103  013FF6  0EFC               	movlw	252
  7104  013FF8  0100               	movlb	0	; () banked
  7105  013FFA  6F77               	movwf	CANsendMessage@flags& (0+255),b
  7106  013FFC  EC1B  F08A         	call	_CANsendMessage	;wreg free
  7107                           
  7108                           ;RemoteCan.c: 456: actual_speed_kmh = ((actual_speed) / 278.0);
  7109  014000  C0E1  F07A         	movff	_actual_speed,___lwtofl@c	;volatile
  7110  014004  C0E2  F07B         	movff	_actual_speed+1,___lwtofl@c+1	;volatile
  7111  014008  ECBC  F0AE         	call	___lwtofl	;wreg free
  7112  01400C  C07A  F07E         	movff	?___lwtofl,___fldiv@f1
  7113  014010  C07B  F07F         	movff	?___lwtofl+1,___fldiv@f1+1
  7114  014014  C07C  F080         	movff	?___lwtofl+2,___fldiv@f1+2
  7115  014018  C07D  F081         	movff	?___lwtofl+3,___fldiv@f1+3
  7116  01401C  0E00               	movlw	0
  7117  01401E  0100               	movlb	0	; () banked
  7118  014020  6F82               	movwf	___fldiv@f2& (0+255),b
  7119  014022  0E00               	movlw	0
  7120  014024  6F83               	movwf	(___fldiv@f2+1)& (0+255),b
  7121  014026  0E8B               	movlw	139
  7122  014028  6F84               	movwf	(___fldiv@f2+2)& (0+255),b
  7123  01402A  0E43               	movlw	67
  7124  01402C  6F85               	movwf	(___fldiv@f2+3)& (0+255),b
  7125  01402E  EC74  F0A6         	call	___fldiv	;wreg free
  7126  014032  C07E  F0C3         	movff	?___fldiv,_actual_speed_kmh	;volatile
  7127  014036  C07F  F0C4         	movff	?___fldiv+1,_actual_speed_kmh+1	;volatile
  7128  01403A  C080  F0C5         	movff	?___fldiv+2,_actual_speed_kmh+2	;volatile
  7129  01403E  C081  F0C6         	movff	?___fldiv+3,_actual_speed_kmh+3	;volatile
  7130                           
  7131                           ;RemoteCan.c: 457: sprintf(str, "%.2f", actual_speed_kmh);
  7132  014042  0E11               	movlw	low _str
  7133  014044  0100               	movlb	0	; () banked
  7134  014046  6FB1               	movwf	sprintf@sp& (0+255),b
  7135  014048  0E01               	movlw	high _str
  7136  01404A  0100               	movlb	0	; () banked
  7137  01404C  6FB2               	movwf	(sprintf@sp+1)& (0+255),b
  7138  01404E  0EFA               	movlw	low STR_5
  7139  014050  0100               	movlb	0	; () banked
  7140  014052  6FB3               	movwf	sprintf@f& (0+255),b
  7141  014054  0EFF               	movlw	high STR_5
  7142  014056  0100               	movlb	0	; () banked
  7143  014058  6FB4               	movwf	(sprintf@f+1)& (0+255),b
  7144  01405A  C0C3  F0B5         	movff	_actual_speed_kmh,?_sprintf+4	;volatile
  7145  01405E  C0C4  F0B6         	movff	_actual_speed_kmh+1,?_sprintf+5	;volatile
  7146  014062  C0C5  F0B7         	movff	_actual_speed_kmh+2,?_sprintf+6	;volatile
  7147  014066  C0C6  F0B8         	movff	_actual_speed_kmh+3,?_sprintf+7	;volatile
  7148  01406A  EC95  F085         	call	_sprintf	;wreg free
  7149                           
  7150                           ;RemoteCan.c: 458: str[11] = '\0';
  7151  01406E  0E00               	movlw	0
  7152  014070  0101               	movlb	1	; () banked
  7153  014072  6F1C               	movwf	(_str+11)& (0+255),b	;volatile
  7154                           
  7155                           ; BSR set to: 1
  7156                           ;RemoteCan.c: 460: if (display_refresh == 1) {
  7157  014074  A44B               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  7158  014076  D03E               	goto	l8378
  7159                           
  7160                           ; BSR set to: 1
  7161                           ;RemoteCan.c: 461: LCD_initialize(16);
  7162  014078  0E10               	movlw	16
  7163  01407A  EC0B  F0A5         	call	_LCD_initialize
  7164                           
  7165                           ;RemoteCan.c: 462: LCD_clear();
  7166  01407E  ECEE  F0AE         	call	_LCD_clear	;wreg free
  7167                           
  7168                           ;RemoteCan.c: 463: LCD_goto_line(1);
  7169  014082  0E01               	movlw	1
  7170  014084  EC18  F0A8         	call	_LCD_goto_line
  7171                           
  7172                           ;RemoteCan.c: 464: LCD_write_message("=== VEHICLE DATA ===");
  7173  014088  0E6A               	movlw	low STR_6
  7174  01408A  0100               	movlb	0	; () banked
  7175  01408C  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7176  01408E  0EFF               	movlw	high STR_6
  7177  014090  0100               	movlb	0	; () banked
  7178  014092  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7179  014094  EC87  F0AE         	call	_LCD_write_message	;wreg free
  7180                           
  7181                           ;RemoteCan.c: 465: LCD_goto_line(2);
  7182  014098  0E02               	movlw	2
  7183  01409A  EC18  F0A8         	call	_LCD_goto_line
  7184                           
  7185                           ;RemoteCan.c: 466: LCD_write_message("Direction: ");
  7186  01409E  0EC8               	movlw	low STR_7
  7187  0140A0  0100               	movlb	0	; () banked
  7188  0140A2  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7189  0140A4  0EFF               	movlw	high STR_7
  7190  0140A6  0100               	movlb	0	; () banked
  7191  0140A8  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7192  0140AA  EC87  F0AE         	call	_LCD_write_message	;wreg free
  7193                           
  7194                           ;RemoteCan.c: 467: LCD_goto_line(3);
  7195  0140AE  0E03               	movlw	3
  7196  0140B0  EC18  F0A8         	call	_LCD_goto_line
  7197                           
  7198                           ;RemoteCan.c: 468: LCD_write_message("Speed: 0.00 Km/h");
  7199  0140B4  0EA9               	movlw	low STR_8
  7200  0140B6  0100               	movlb	0	; () banked
  7201  0140B8  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7202  0140BA  0EFF               	movlw	high STR_8
  7203  0140BC  0100               	movlb	0	; () banked
  7204  0140BE  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7205  0140C0  EC87  F0AE         	call	_LCD_write_message	;wreg free
  7206                           
  7207                           ;RemoteCan.c: 469: LCD_goto_line(4);
  7208  0140C4  0E04               	movlw	4
  7209  0140C6  EC18  F0A8         	call	_LCD_goto_line
  7210                           
  7211                           ;RemoteCan.c: 470: if (1 == 0) {
  7212  0140CA  D009               	goto	l8374
  7213                           
  7214                           ;RemoteCan.c: 471: LCD_write_message("Park assist: ");
  7215  0140CC  0EBA               	movlw	low STR_9
  7216  0140CE  0100               	movlb	0	; () banked
  7217  0140D0  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7218  0140D2  0EFF               	movlw	high STR_9
  7219  0140D4  0100               	movlb	0	; () banked
  7220  0140D6  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7221  0140D8  EC87  F0AE         	call	_LCD_write_message	;wreg free
  7222                           
  7223                           ;RemoteCan.c: 472: } else {
  7224  0140DC  D009               	goto	l8376
  7225  0140DE                     l8374:
  7226                           
  7227                           ;RemoteCan.c: 473: LCD_write_message("Data: ");
  7228  0140DE  0EE4               	movlw	low STR_10
  7229  0140E0  0100               	movlb	0	; () banked
  7230  0140E2  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7231  0140E4  0EFF               	movlw	high STR_10
  7232  0140E6  0100               	movlb	0	; () banked
  7233  0140E8  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7234  0140EA  EC87  F0AE         	call	_LCD_write_message	;wreg free
  7235  0140EE  D000               	goto	l8376
  7236  0140F0                     l8376:
  7237                           
  7238                           ;RemoteCan.c: 474: }
  7239                           ;RemoteCan.c: 475: display_refresh = 0;
  7240  0140F0  944B               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  7241  0140F2  D000               	goto	l8378
  7242  0140F4                     l8378:
  7243                           
  7244                           ;RemoteCan.c: 476: }
  7245                           ;RemoteCan.c: 479: LCD_goto_xy(12, 2);
  7246  0140F4  0E02               	movlw	2
  7247  0140F6  0100               	movlb	0	; () banked
  7248  0140F8  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  7249  0140FA  0E0C               	movlw	12
  7250  0140FC  EC66  F0AF         	call	_LCD_goto_xy
  7251                           
  7252                           ;RemoteCan.c: 480: if (switch_position != 0) {
  7253  014100  0100               	movlb	0	; () banked
  7254  014102  51EB               	movf	_switch_position& (0+255),w,b	;volatile
  7255  014104  B4D8               	btfsc	status,2,c
  7256  014106  D016               	goto	l8388
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;RemoteCan.c: 481: if (dir == 1) {
  7260  014108  0100               	movlb	0	; () banked
  7261  01410A  05E7               	decf	_dir& (0+255),w,b	;volatile
  7262  01410C  A4D8               	btfss	status,2,c
  7263  01410E  D009               	goto	l8386
  7264                           
  7265                           ; BSR set to: 0
  7266                           ;RemoteCan.c: 482: LCD_write_message("FWD ");
  7267  014110  0EF0               	movlw	low STR_11
  7268  014112  0100               	movlb	0	; () banked
  7269  014114  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7270  014116  0EFF               	movlw	high STR_11
  7271  014118  0100               	movlb	0	; () banked
  7272  01411A  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7273  01411C  EC87  F0AE         	call	_LCD_write_message	;wreg free
  7274                           
  7275                           ;RemoteCan.c: 483: } else {
  7276  014120  D012               	goto	l8390
  7277  014122                     l8386:
  7278                           
  7279                           ;RemoteCan.c: 484: LCD_write_message("BKWD");
  7280  014122  0EF5               	movlw	low STR_12
  7281  014124  0100               	movlb	0	; () banked
  7282  014126  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7283  014128  0EFF               	movlw	high STR_12
  7284  01412A  0100               	movlb	0	; () banked
  7285  01412C  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7286  01412E  EC87  F0AE         	call	_LCD_write_message	;wreg free
  7287                           
  7288                           ;RemoteCan.c: 485: }
  7289                           ;RemoteCan.c: 486: } else {
  7290  014132  D009               	goto	l8390
  7291  014134                     l8388:
  7292                           
  7293                           ;RemoteCan.c: 487: LCD_write_message("P   ");
  7294  014134  0EEB               	movlw	low STR_13
  7295  014136  0100               	movlb	0	; () banked
  7296  014138  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7297  01413A  0EFF               	movlw	high STR_13
  7298  01413C  0100               	movlb	0	; () banked
  7299  01413E  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7300  014140  EC87  F0AE         	call	_LCD_write_message	;wreg free
  7301  014144  D000               	goto	l8390
  7302  014146                     l8390:
  7303                           
  7304                           ;RemoteCan.c: 488: }
  7305                           ;RemoteCan.c: 491: LCD_goto_xy(8, 3);
  7306  014146  0E03               	movlw	3
  7307  014148  0100               	movlb	0	; () banked
  7308  01414A  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  7309  01414C  0E08               	movlw	8
  7310  01414E  EC66  F0AF         	call	_LCD_goto_xy
  7311                           
  7312                           ;RemoteCan.c: 492: LCD_write_string(str);
  7313  014152  0E11               	movlw	low _str
  7314  014154  0100               	movlb	0	; () banked
  7315  014156  6F81               	movwf	LCD_write_string@buffer& (0+255),b
  7316  014158  0E01               	movlw	high _str
  7317  01415A  0100               	movlb	0	; () banked
  7318  01415C  6F82               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  7319  01415E  EC1E  F0AF         	call	_LCD_write_string	;wreg free
  7320                           
  7321                           ;RemoteCan.c: 494: if (1 == 0) {
  7322  014162  D01C               	goto	l8402
  7323                           
  7324                           ;RemoteCan.c: 496: LCD_goto_xy(14, 4);
  7325  014164  0E04               	movlw	4
  7326  014166  0100               	movlb	0	; () banked
  7327  014168  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  7328  01416A  0E0E               	movlw	14
  7329  01416C  EC66  F0AF         	call	_LCD_goto_xy
  7330                           
  7331                           ;RemoteCan.c: 497: if (parking_state == 0) {
  7332  014170  0100               	movlb	0	; () banked
  7333  014172  51E9               	movf	_parking_state& (0+255),w,b	;volatile
  7334  014174  A4D8               	btfss	status,2,c
  7335  014176  D009               	goto	l8400
  7336                           
  7337                           ; BSR set to: 0
  7338                           ;RemoteCan.c: 498: LCD_write_message("OFF    ");
  7339  014178  0ED4               	movlw	low STR_14
  7340  01417A  0100               	movlb	0	; () banked
  7341  01417C  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7342  01417E  0EFF               	movlw	high STR_14
  7343  014180  0100               	movlb	0	; () banked
  7344  014182  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7345  014184  EC87  F0AE         	call	_LCD_write_message	;wreg free
  7346                           
  7347                           ;RemoteCan.c: 499: } else {
  7348  014188  0012               	return	
  7349  01418A                     l8400:
  7350                           
  7351                           ;RemoteCan.c: 500: LCD_write_message("SEARCH ");
  7352  01418A  0EDC               	movlw	low STR_15
  7353  01418C  0100               	movlb	0	; () banked
  7354  01418E  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  7355  014190  0EFF               	movlw	high STR_15
  7356  014192  0100               	movlb	0	; () banked
  7357  014194  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7358  014196  EC87  F0AE         	call	_LCD_write_message	;wreg free
  7359                           
  7360                           ;RemoteCan.c: 501: }
  7361                           ;RemoteCan.c: 502: } else {
  7362  01419A  0012               	return	
  7363  01419C                     l8402:
  7364                           
  7365                           ;RemoteCan.c: 504: LCD_goto_xy(7, 4);
  7366  01419C  0E04               	movlw	4
  7367  01419E  0100               	movlb	0	; () banked
  7368  0141A0  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  7369  0141A2  0E07               	movlw	7
  7370  0141A4  EC66  F0AF         	call	_LCD_goto_xy
  7371                           
  7372                           ;RemoteCan.c: 505: LCD_write_integer(user_data, 0, 0x01);
  7373  0141A8  C00D  F088         	movff	_user_data,LCD_write_integer@value	;volatile
  7374  0141AC  C00E  F089         	movff	_user_data+1,LCD_write_integer@value+1	;volatile
  7375  0141B0  0E00               	movlw	0
  7376  0141B2  0100               	movlb	0	; () banked
  7377  0141B4  6F8A               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  7378  0141B6  0E01               	movlw	1
  7379  0141B8  0100               	movlb	0	; () banked
  7380  0141BA  6F8B               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  7381  0141BC  ECC9  F0A1         	call	_LCD_write_integer	;wreg free
  7382  0141C0  0012               	return	
  7383  0141C2  0012               	return		;funcret
  7384  0141C4                     __end_of_LCD_Handler:
  7385                           	opt stack 0
  7386                           tblptru	equ	0xFF8
  7387                           tblptrh	equ	0xFF7
  7388                           tblptrl	equ	0xFF6
  7389                           tablat	equ	0xFF5
  7390                           intcon	equ	0xFF2
  7391                           postinc0	equ	0xFEE
  7392                           wreg	equ	0xFE8
  7393                           status	equ	0xFD8
  7394                           
  7395 ;; *************** function _sprintf *****************
  7396 ;; Defined at:
  7397 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  sp              2   81[BANK0 ] PTR unsigned char 
  7400 ;;		 -> str(12), 
  7401 ;;  f               2   83[BANK0 ] PTR const unsigned char 
  7402 ;;		 -> STR_5(5), 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  7405 ;;  tmpval          4   14[BANK1 ] struct .
  7406 ;;  val             4    8[BANK1 ] unsigned long 
  7407 ;;  cp              3    0        PTR const unsigned char 
  7408 ;;  prec            2   18[BANK1 ] int 
  7409 ;;  exp             2   12[BANK1 ] int 
  7410 ;;  flag            2    6[BANK1 ] unsigned short 
  7411 ;;  ap              2    4[BANK1 ] PTR void [1]
  7412 ;;		 -> ?_sprintf(2), 
  7413 ;;  len             2    0        unsigned int 
  7414 ;;  width           2    0        int 
  7415 ;;  c               1   24[BANK1 ] char 
  7416 ;;  d               1    0        unsigned char 
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  2   81[BANK0 ] int 
  7419 ;; Registers used:
  7420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7426 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7427 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7428 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7429 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7430 ;;Total ram usage:       35 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; Hardware stack levels required when called:    6
  7433 ;; This function calls:
  7434 ;;		___awdiv
  7435 ;;		___fladd
  7436 ;;		___flge
  7437 ;;		___flmul
  7438 ;;		___flneg
  7439 ;;		___flsub
  7440 ;;		___fltol
  7441 ;;		___lldiv
  7442 ;;		___llmod
  7443 ;;		___lltofl
  7444 ;;		___wmul
  7445 ;;		__div_to_l_
  7446 ;;		__tdiv_to_l_
  7447 ;;		_fround
  7448 ;;		_isdigit
  7449 ;;		_scale
  7450 ;; This function is called by:
  7451 ;;		_LCD_Handler
  7452 ;; This function uses a non-reentrant model
  7453 ;;
  7454                           
  7455                           	psect	text12
  7456  010B2A                     __ptext12:
  7457                           	opt stack 0
  7458  010B2A                     _sprintf:
  7459                           	opt stack 23
  7460                           
  7461                           ;doprnt.c: 494: va_list ap;
  7462                           ;doprnt.c: 499: signed char c;
  7463                           ;doprnt.c: 501: int width;
  7464                           ;doprnt.c: 504: int prec;
  7465                           ;doprnt.c: 508: unsigned short flag;
  7466                           ;doprnt.c: 515: char d;
  7467                           ;doprnt.c: 516: double fval;
  7468                           ;doprnt.c: 517: int exp;
  7469                           ;doprnt.c: 523: union {
  7470                           ;doprnt.c: 524: unsigned long vd;
  7471                           ;doprnt.c: 525: double integ;
  7472                           ;doprnt.c: 526: } tmpval;
  7473                           ;doprnt.c: 528: unsigned long val;
  7474                           ;doprnt.c: 529: unsigned len;
  7475                           ;doprnt.c: 530: const char * cp;
  7476                           ;doprnt.c: 533: *ap = __va_start();
  7477                           
  7478                           ;incstack = 0
  7479  010B2A  0EB5               	movlw	low (?_sprintf+4)
  7480  010B2C  0101               	movlb	1	; () banked
  7481  010B2E  6F41               	movwf	sprintf@ap& (0+255),b
  7482  010B30  0E00               	movlw	high (?_sprintf+4)
  7483  010B32  0101               	movlb	1	; () banked
  7484  010B34  6F42               	movwf	(sprintf@ap+1)& (0+255),b
  7485                           
  7486                           ;doprnt.c: 536: while(c = *f++) {
  7487  010B36  EF00  F08A         	goto	l8192
  7488  010B3A                     l7994:
  7489                           
  7490                           ; BSR set to: 1
  7491                           ;doprnt.c: 538: if(c != '%')
  7492  010B3A  0E25               	movlw	37
  7493  010B3C  0101               	movlb	1	; () banked
  7494  010B3E  1955               	xorwf	sprintf@c& (0+255),w,b
  7495  010B40  B4D8               	btfsc	status,2,c
  7496  010B42  D008               	goto	l8000
  7497                           
  7498                           ; BSR set to: 1
  7499                           ;doprnt.c: 540: {
  7500                           ;doprnt.c: 541: ((*sp++ = (c)));
  7501  010B44  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  7502  010B48  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  7503  010B4C  C155  FFDF         	movff	sprintf@c,indf2
  7504  010B50  EFFC  F089         	goto	l8190
  7505  010B54                     l8000:
  7506                           
  7507                           ;doprnt.c: 543: }
  7508                           ;doprnt.c: 548: flag = 0;
  7509  010B54  0E00               	movlw	0
  7510  010B56  0101               	movlb	1	; () banked
  7511  010B58  6F44               	movwf	(sprintf@flag+1)& (0+255),b
  7512  010B5A  0E00               	movlw	0
  7513  010B5C  6F43               	movwf	sprintf@flag& (0+255),b
  7514                           
  7515                           ; BSR set to: 1
  7516                           ;doprnt.c: 611: if(*f == '.') {
  7517  010B5E  C0B3  FFF6         	movff	sprintf@f,tblptrl
  7518  010B62  C0B4  FFF7         	movff	sprintf@f+1,tblptrh
  7519  010B66                     	if	0	;tblptru may be non-zero
  7520  010B66                     	endif
  7521  010B66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7522  010B66  0E00               	movlw	low (__mediumconst shr (0+16))
  7523  010B68  6EF8               	movwf	tblptru,c
  7524  010B6A                     	endif
  7525  010B6A  0008               	tblrd		*
  7526  010B6C  50F5               	movf	tablat,w,c
  7527  010B6E  0A2E               	xorlw	46
  7528  010B70  A4D8               	btfss	status,2,c
  7529  010B72  D03F               	goto	l8014
  7530                           
  7531                           ; BSR set to: 1
  7532                           ;doprnt.c: 612: flag |= 0x4000;
  7533  010B74  0101               	movlb	1	; () banked
  7534  010B76  8D44               	bsf	(sprintf@flag+1)& (0+255),6,b
  7535                           
  7536                           ;doprnt.c: 613: f++;
  7537  010B78  0100               	movlb	0	; () banked
  7538  010B7A  4BB3               	infsnz	sprintf@f& (0+255),f,b
  7539  010B7C  2BB4               	incf	(sprintf@f+1)& (0+255),f,b
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;doprnt.c: 620: {
  7543                           ;doprnt.c: 621: prec = 0;
  7544  010B7E  0E00               	movlw	0
  7545  010B80  0101               	movlb	1	; () banked
  7546  010B82  6F50               	movwf	(sprintf@prec+1)& (0+255),b
  7547  010B84  0E00               	movlw	0
  7548  010B86  6F4F               	movwf	sprintf@prec& (0+255),b
  7549                           
  7550                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  7551  010B88  D026               	goto	l8012
  7552  010B8A                     l8008:
  7553                           
  7554                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  7555  010B8A  C14F  F070         	movff	sprintf@prec,___wmul@multiplier
  7556  010B8E  C150  F071         	movff	sprintf@prec+1,___wmul@multiplier+1
  7557  010B92  0E00               	movlw	0
  7558  010B94  0100               	movlb	0	; () banked
  7559  010B96  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7560  010B98  0E0A               	movlw	10
  7561  010B9A  6F72               	movwf	___wmul@multiplicand& (0+255),b
  7562  010B9C  EC50  F0AE         	call	___wmul	;wreg free
  7563  010BA0  C0B3  FFF6         	movff	sprintf@f,tblptrl
  7564  010BA4  C0B4  FFF7         	movff	sprintf@f+1,tblptrh
  7565  010BA8                     	if	0	;tblptru may be non-zero
  7566  010BA8                     	endif
  7567  010BA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7568  010BA8  0E00               	movlw	low (__mediumconst shr (0+16))
  7569  010BAA  6EF8               	movwf	tblptru,c
  7570  010BAC                     	endif
  7571  010BAC  0008               	tblrd		*
  7572  010BAE  50F5               	movf	tablat,w,c
  7573  010BB0  0100               	movlb	0	; () banked
  7574  010BB2  2770               	addwf	?___wmul& (0+255),f,b
  7575  010BB4  0E00               	movlw	0
  7576  010BB6  0100               	movlb	0	; () banked
  7577  010BB8  2371               	addwfc	(?___wmul+1)& (0+255),f,b
  7578  010BBA  0ED0               	movlw	208
  7579  010BBC  0100               	movlb	0	; () banked
  7580  010BBE  2570               	addwf	?___wmul& (0+255),w,b
  7581  010BC0  0101               	movlb	1	; () banked
  7582  010BC2  6F4F               	movwf	sprintf@prec& (0+255),b
  7583  010BC4  0EFF               	movlw	255
  7584  010BC6  0100               	movlb	0	; () banked
  7585  010BC8  2171               	addwfc	(?___wmul+1)& (0+255),w,b
  7586  010BCA  0101               	movlb	1	; () banked
  7587  010BCC  6F50               	movwf	(sprintf@prec+1)& (0+255),b
  7588                           
  7589                           ; BSR set to: 1
  7590  010BCE  0100               	movlb	0	; () banked
  7591  010BD0  4BB3               	infsnz	sprintf@f& (0+255),f,b
  7592  010BD2  2BB4               	incf	(sprintf@f+1)& (0+255),f,b
  7593  010BD4  D000               	goto	l8012
  7594  010BD6                     l8012:
  7595  010BD6  C0B3  FFF6         	movff	sprintf@f,tblptrl
  7596  010BDA  C0B4  FFF7         	movff	sprintf@f+1,tblptrh
  7597  010BDE                     	if	0	;tblptru may be non-zero
  7598  010BDE                     	endif
  7599  010BDE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7600  010BDE  0E00               	movlw	low (__mediumconst shr (0+16))
  7601  010BE0  6EF8               	movwf	tblptru,c
  7602  010BE2                     	endif
  7603  010BE2  0008               	tblrd		*
  7604  010BE4  50F5               	movf	tablat,w,c
  7605  010BE6  EC07  F0AF         	call	_isdigit
  7606  010BEA  A0D8               	btfss	status,0,c
  7607  010BEC  D011               	goto	l8022
  7608  010BEE  D7CD               	goto	l8008
  7609                           
  7610                           ;doprnt.c: 624: }
  7611                           ;doprnt.c: 625: } else {
  7612  010BF0  D00F               	goto	l8022
  7613  010BF2                     l8014:
  7614                           
  7615                           ;doprnt.c: 626: prec = 0;
  7616  010BF2  0E00               	movlw	0
  7617  010BF4  0101               	movlb	1	; () banked
  7618  010BF6  6F50               	movwf	(sprintf@prec+1)& (0+255),b
  7619  010BF8  0E00               	movlw	0
  7620  010BFA  6F4F               	movwf	sprintf@prec& (0+255),b
  7621                           
  7622                           ; BSR set to: 1
  7623                           ;doprnt.c: 628: flag |= 0x1000;
  7624  010BFC  0101               	movlb	1	; () banked
  7625  010BFE  8944               	bsf	(sprintf@flag+1)& (0+255),4,b
  7626                           
  7627                           ; BSR set to: 1
  7628                           ;doprnt.c: 630: }
  7629                           ;doprnt.c: 635: switch(c = *f++) {
  7630  010C00  D007               	goto	l8022
  7631                           
  7632                           ; BSR set to: 1
  7633                           ;doprnt.c: 638: goto alldone;
  7634                           
  7635                           ;doprnt.c: 637: case 0:
  7636  010C02  EF13  F08A         	goto	l8194
  7637  010C06                     l8018:
  7638                           
  7639                           ; BSR set to: 1
  7640                           ;doprnt.c: 663: flag |= 0x400;
  7641  010C06  0101               	movlb	1	; () banked
  7642  010C08  8544               	bsf	(sprintf@flag+1)& (0+255),2,b
  7643                           
  7644                           ;doprnt.c: 664: break;
  7645  010C0A  D017               	goto	l8024
  7646                           
  7647                           ; BSR set to: 1
  7648                           ;doprnt.c: 813: continue;
  7649                           
  7650                           ;doprnt.c: 802: default:
  7651  010C0C  D3F9               	goto	l8192
  7652                           
  7653                           ; BSR set to: 1
  7654                           ;doprnt.c: 822: }
  7655  010C0E  D015               	goto	l8024
  7656  010C10                     l8022:
  7657  010C10  C0B3  FFF6         	movff	sprintf@f,tblptrl
  7658  010C14  C0B4  FFF7         	movff	sprintf@f+1,tblptrh
  7659  010C18  0100               	movlb	0	; () banked
  7660  010C1A  4BB3               	infsnz	sprintf@f& (0+255),f,b
  7661  010C1C  2BB4               	incf	(sprintf@f+1)& (0+255),f,b
  7662  010C1E                     	if	0	;tblptru may be non-zero
  7663  010C1E                     	endif
  7664  010C1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7665  010C1E  0E00               	movlw	low (__mediumconst shr (0+16))
  7666  010C20  6EF8               	movwf	tblptru,c
  7667  010C22                     	endif
  7668  010C22  0008               	tblrd		*
  7669  010C24  CFF5 F155          	movff	tablat,sprintf@c
  7670  010C28  0101               	movlb	1	; () banked
  7671  010C2A  5155               	movf	sprintf@c& (0+255),w,b
  7672                           
  7673                           ; Switch size 1, requested type "space"
  7674                           ; Number of cases is 2, Range of values is 0 to 102
  7675                           ; switch strategies available:
  7676                           ; Name         Instructions Cycles
  7677                           ; simple_byte            7     4 (average)
  7678                           ;	Chosen strategy is simple_byte
  7679  010C2C  0A00               	xorlw	0	; case 0
  7680  010C2E  B4D8               	btfsc	status,2,c
  7681  010C30  D3FA               	goto	l8194
  7682  010C32  0A66               	xorlw	102	; case 102
  7683  010C34  B4D8               	btfsc	status,2,c
  7684  010C36  D7E7               	goto	l8018
  7685  010C38  D3E3               	goto	l8192
  7686  010C3A                     l8024:
  7687                           
  7688                           ; BSR set to: 1
  7689                           ;doprnt.c: 825: if(flag & (0x700)) {
  7690  010C3A  0E07               	movlw	7
  7691  010C3C  0101               	movlb	1	; () banked
  7692  010C3E  1544               	andwf	(sprintf@flag+1)& (0+255),w,b
  7693  010C40  B4D8               	btfsc	status,2,c
  7694  010C42  D383               	goto	l8172
  7695                           
  7696                           ; BSR set to: 1
  7697                           ;doprnt.c: 827: if(flag & 0x1000)
  7698  010C44  0101               	movlb	1	; () banked
  7699  010C46  A944               	btfss	(sprintf@flag+1)& (0+255),4,b
  7700  010C48  D006               	goto	l8030
  7701                           
  7702                           ; BSR set to: 1
  7703                           ;doprnt.c: 829: prec = 6;
  7704  010C4A  0E00               	movlw	0
  7705  010C4C  0101               	movlb	1	; () banked
  7706  010C4E  6F50               	movwf	(sprintf@prec+1)& (0+255),b
  7707  010C50  0E06               	movlw	6
  7708  010C52  6F4F               	movwf	sprintf@prec& (0+255),b
  7709  010C54  D000               	goto	l8030
  7710  010C56                     l8030:
  7711                           
  7712                           ; BSR set to: 1
  7713                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7714  010C56  C141  FFD9         	movff	sprintf@ap,fsr2l
  7715  010C5A  C142  FFDA         	movff	sprintf@ap+1,fsr2h
  7716  010C5E  CFDE F151          	movff	postinc2,sprintf@fval
  7717  010C62  CFDE F152          	movff	postinc2,sprintf@fval+1
  7718  010C66  CFDE F153          	movff	postinc2,sprintf@fval+2
  7719  010C6A  CFDE F154          	movff	postinc2,sprintf@fval+3
  7720                           
  7721                           ; BSR set to: 1
  7722  010C6E  0E04               	movlw	4
  7723  010C70  0101               	movlb	1	; () banked
  7724  010C72  2741               	addwf	sprintf@ap& (0+255),f,b
  7725  010C74  0E00               	movlw	0
  7726  010C76  2342               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7727                           
  7728                           ; BSR set to: 1
  7729                           ;doprnt.c: 831: if(fval < 0.0) {
  7730  010C78  0101               	movlb	1	; () banked
  7731  010C7A  AF54               	btfss	(sprintf@fval+3)& (0+255),7,b
  7732  010C7C  D016               	goto	l8040
  7733                           
  7734                           ; BSR set to: 1
  7735                           ;doprnt.c: 832: fval = -fval;
  7736  010C7E  C151  F08E         	movff	sprintf@fval,___flneg@f1
  7737  010C82  C152  F08F         	movff	sprintf@fval+1,___flneg@f1+1
  7738  010C86  C153  F090         	movff	sprintf@fval+2,___flneg@f1+2
  7739  010C8A  C154  F091         	movff	sprintf@fval+3,___flneg@f1+3
  7740  010C8E  ECF8  F0AD         	call	___flneg	;wreg free
  7741  010C92  C08E  F151         	movff	?___flneg,sprintf@fval
  7742  010C96  C08F  F152         	movff	?___flneg+1,sprintf@fval+1
  7743  010C9A  C090  F153         	movff	?___flneg+2,sprintf@fval+2
  7744  010C9E  C091  F154         	movff	?___flneg+3,sprintf@fval+3
  7745                           
  7746                           ;doprnt.c: 833: flag |= 0x03;
  7747  010CA2  0E03               	movlw	3
  7748  010CA4  0101               	movlb	1	; () banked
  7749  010CA6  1343               	iorwf	sprintf@flag& (0+255),f,b
  7750  010CA8  D000               	goto	l8040
  7751  010CAA                     l8040:
  7752                           
  7753                           ; BSR set to: 1
  7754                           ;doprnt.c: 834: }
  7755                           ;doprnt.c: 835: exp = 0;
  7756  010CAA  0E00               	movlw	0
  7757  010CAC  0101               	movlb	1	; () banked
  7758  010CAE  6F4A               	movwf	(sprintf@exp+1)& (0+255),b
  7759  010CB0  0E00               	movlw	0
  7760  010CB2  6F49               	movwf	sprintf@exp& (0+255),b
  7761                           
  7762                           ; BSR set to: 1
  7763                           ;doprnt.c: 836: if( fval!=0) {
  7764  010CB4  0101               	movlb	1	; () banked
  7765  010CB6  5151               	movf	sprintf@fval& (0+255),w,b
  7766  010CB8  0101               	movlb	1	; () banked
  7767  010CBA  1152               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7768  010CBC  0101               	movlb	1	; () banked
  7769  010CBE  1153               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7770  010CC0  0101               	movlb	1	; () banked
  7771  010CC2  1154               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7772  010CC4  B4D8               	btfsc	status,2,c
  7773  010CC6  D090               	goto	l8068
  7774                           
  7775                           ; BSR set to: 1
  7776                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  7777  010CC8  0101               	movlb	1	; () banked
  7778  010CCA  3553               	rlcf	(sprintf@fval+2)& (0+255),w,b
  7779  010CCC  3554               	rlcf	(sprintf@fval+3)& (0+255),w,b
  7780  010CCE  0F82               	addlw	130
  7781  010CD0  0101               	movlb	1	; () banked
  7782  010CD2  6F49               	movwf	sprintf@exp& (0+255),b
  7783  010CD4  0101               	movlb	1	; () banked
  7784  010CD6  6B4A               	clrf	(sprintf@exp+1)& (0+255),b
  7785  010CD8  0EFF               	movlw	255
  7786  010CDA  234A               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7787                           
  7788                           ; BSR set to: 1
  7789                           ;doprnt.c: 838: exp--;
  7790  010CDC  0101               	movlb	1	; () banked
  7791  010CDE  0749               	decf	sprintf@exp& (0+255),f,b
  7792  010CE0  A0D8               	btfss	status,0,c
  7793  010CE2  074A               	decf	(sprintf@exp+1)& (0+255),f,b
  7794                           
  7795                           ; BSR set to: 1
  7796                           ;doprnt.c: 839: exp *= 3;
  7797  010CE4  C149  F070         	movff	sprintf@exp,___wmul@multiplier
  7798  010CE8  C14A  F071         	movff	sprintf@exp+1,___wmul@multiplier+1
  7799  010CEC  0E00               	movlw	0
  7800  010CEE  0100               	movlb	0	; () banked
  7801  010CF0  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7802  010CF2  0E03               	movlw	3
  7803  010CF4  6F72               	movwf	___wmul@multiplicand& (0+255),b
  7804  010CF6  EC50  F0AE         	call	___wmul	;wreg free
  7805  010CFA  C070  F149         	movff	?___wmul,sprintf@exp
  7806  010CFE  C071  F14A         	movff	?___wmul+1,sprintf@exp+1
  7807                           
  7808                           ;doprnt.c: 840: exp /= 10;
  7809  010D02  C149  F076         	movff	sprintf@exp,___awdiv@dividend
  7810  010D06  C14A  F077         	movff	sprintf@exp+1,___awdiv@dividend+1
  7811  010D0A  0E00               	movlw	0
  7812  010D0C  0100               	movlb	0	; () banked
  7813  010D0E  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  7814  010D10  0E0A               	movlw	10
  7815  010D12  6F78               	movwf	___awdiv@divisor& (0+255),b
  7816  010D14  EC8F  F0A8         	call	___awdiv	;wreg free
  7817  010D18  C076  F149         	movff	?___awdiv,sprintf@exp
  7818  010D1C  C077  F14A         	movff	?___awdiv+1,sprintf@exp+1
  7819                           
  7820                           ;doprnt.c: 841: if(exp < 0)
  7821  010D20  0101               	movlb	1	; () banked
  7822  010D22  AF4A               	btfss	(sprintf@exp+1)& (0+255),7,b
  7823  010D24  D005               	goto	l8056
  7824                           
  7825                           ; BSR set to: 1
  7826                           ;doprnt.c: 842: exp--;
  7827  010D26  0101               	movlb	1	; () banked
  7828  010D28  0749               	decf	sprintf@exp& (0+255),f,b
  7829  010D2A  A0D8               	btfss	status,0,c
  7830  010D2C  074A               	decf	(sprintf@exp+1)& (0+255),f,b
  7831  010D2E  D000               	goto	l8056
  7832  010D30                     l8056:
  7833                           
  7834                           ; BSR set to: 1
  7835                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7836  010D30  0101               	movlb	1	; () banked
  7837  010D32  5149               	movf	sprintf@exp& (0+255),w,b
  7838  010D34  0800               	sublw	0
  7839  010D36  EC82  F097         	call	_scale
  7840  010D3A  C08E  F14B         	movff	?_scale,sprintf@tmpval
  7841  010D3E  C08F  F14C         	movff	?_scale+1,sprintf@tmpval+1
  7842  010D42  C090  F14D         	movff	?_scale+2,sprintf@tmpval+2
  7843  010D46  C091  F14E         	movff	?_scale+3,sprintf@tmpval+3
  7844                           
  7845                           ;doprnt.c: 847: tmpval.integ *= fval;
  7846  010D4A  C14B  F07F         	movff	sprintf@tmpval,___flmul@f1
  7847  010D4E  C14C  F080         	movff	sprintf@tmpval+1,___flmul@f1+1
  7848  010D52  C14D  F081         	movff	sprintf@tmpval+2,___flmul@f1+2
  7849  010D56  C14E  F082         	movff	sprintf@tmpval+3,___flmul@f1+3
  7850  010D5A  C151  F083         	movff	sprintf@fval,___flmul@f2
  7851  010D5E  C152  F084         	movff	sprintf@fval+1,___flmul@f2+1
  7852  010D62  C153  F085         	movff	sprintf@fval+2,___flmul@f2+2
  7853  010D66  C154  F086         	movff	sprintf@fval+3,___flmul@f2+3
  7854  010D6A  ECC2  F0A5         	call	___flmul	;wreg free
  7855  010D6E  C07F  F14B         	movff	?___flmul,sprintf@tmpval
  7856  010D72  C080  F14C         	movff	?___flmul+1,sprintf@tmpval+1
  7857  010D76  C081  F14D         	movff	?___flmul+2,sprintf@tmpval+2
  7858  010D7A  C082  F14E         	movff	?___flmul+3,sprintf@tmpval+3
  7859                           
  7860                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7861  010D7E  C14B  F070         	movff	sprintf@tmpval,___flge@ff1
  7862  010D82  C14C  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  7863  010D86  C14D  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  7864  010D8A  C14E  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  7865  010D8E  0E00               	movlw	0
  7866  010D90  0100               	movlb	0	; () banked
  7867  010D92  6F74               	movwf	___flge@ff2& (0+255),b
  7868  010D94  0E00               	movlw	0
  7869  010D96  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  7870  010D98  0E80               	movlw	128
  7871  010D9A  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  7872  010D9C  0E3F               	movlw	63
  7873  010D9E  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  7874  010DA0  EC9C  F0A7         	call	___flge	;wreg free
  7875  010DA4  0100               	movlb	0	; () banked
  7876  010DA6  B0D8               	btfsc	status,0,c
  7877  010DA8  D005               	goto	l8064
  7878                           
  7879                           ; BSR set to: 0
  7880                           ;doprnt.c: 849: exp--;
  7881  010DAA  0101               	movlb	1	; () banked
  7882  010DAC  0749               	decf	sprintf@exp& (0+255),f,b
  7883  010DAE  A0D8               	btfss	status,0,c
  7884  010DB0  074A               	decf	(sprintf@exp+1)& (0+255),f,b
  7885  010DB2  D01A               	goto	l8068
  7886  010DB4                     l8064:
  7887                           
  7888                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7889  010DB4  C14B  F070         	movff	sprintf@tmpval,___flge@ff1
  7890  010DB8  C14C  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  7891  010DBC  C14D  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  7892  010DC0  C14E  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  7893  010DC4  0E00               	movlw	0
  7894  010DC6  0100               	movlb	0	; () banked
  7895  010DC8  6F74               	movwf	___flge@ff2& (0+255),b
  7896  010DCA  0E00               	movlw	0
  7897  010DCC  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  7898  010DCE  0E20               	movlw	32
  7899  010DD0  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  7900  010DD2  0E41               	movlw	65
  7901  010DD4  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  7902  010DD6  EC9C  F0A7         	call	___flge	;wreg free
  7903  010DDA  0100               	movlb	0	; () banked
  7904  010DDC  A0D8               	btfss	status,0,c
  7905  010DDE  D004               	goto	l8068
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;doprnt.c: 851: exp++;
  7909  010DE0  0101               	movlb	1	; () banked
  7910  010DE2  4B49               	infsnz	sprintf@exp& (0+255),f,b
  7911  010DE4  2B4A               	incf	(sprintf@exp+1)& (0+255),f,b
  7912                           
  7913                           ; BSR set to: 1
  7914                           
  7915                           ; BSR set to: 1
  7916  010DE6  D000               	goto	l8068
  7917  010DE8                     l8068:
  7918                           
  7919                           ;doprnt.c: 852: }
  7920                           ;doprnt.c: 1112: if(prec <= 12)
  7921  010DE8  0101               	movlb	1	; () banked
  7922  010DEA  BF50               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7923  010DEC  D008               	goto	l8070
  7924  010DEE  0101               	movlb	1	; () banked
  7925  010DF0  5150               	movf	(sprintf@prec+1)& (0+255),w,b
  7926  010DF2  E124               	bnz	l8072
  7927  010DF4  0E0D               	movlw	13
  7928  010DF6  0101               	movlb	1	; () banked
  7929  010DF8  5D4F               	subwf	sprintf@prec& (0+255),w,b
  7930  010DFA  B0D8               	btfsc	status,0,c
  7931  010DFC  D01F               	goto	l8072
  7932  010DFE                     l8070:
  7933                           
  7934                           ; BSR set to: 1
  7935                           ;doprnt.c: 1113: fval += fround(prec);
  7936  010DFE  C151  F09B         	movff	sprintf@fval,___fladd@f1
  7937  010E02  C152  F09C         	movff	sprintf@fval+1,___fladd@f1+1
  7938  010E06  C153  F09D         	movff	sprintf@fval+2,___fladd@f1+2
  7939  010E0A  C154  F09E         	movff	sprintf@fval+3,___fladd@f1+3
  7940  010E0E  0101               	movlb	1	; () banked
  7941  010E10  514F               	movf	sprintf@prec& (0+255),w,b
  7942  010E12  ECEB  F09B         	call	_fround
  7943  010E16  C08E  F09F         	movff	?_fround,___fladd@f2
  7944  010E1A  C08F  F0A0         	movff	?_fround+1,___fladd@f2+1
  7945  010E1E  C090  F0A1         	movff	?_fround+2,___fladd@f2+2
  7946  010E22  C091  F0A2         	movff	?_fround+3,___fladd@f2+3
  7947  010E26  ECAD  F09E         	call	___fladd	;wreg free
  7948  010E2A  C09B  F151         	movff	?___fladd,sprintf@fval
  7949  010E2E  C09C  F152         	movff	?___fladd+1,sprintf@fval+1
  7950  010E32  C09D  F153         	movff	?___fladd+2,sprintf@fval+2
  7951  010E36  C09E  F154         	movff	?___fladd+3,sprintf@fval+3
  7952  010E3A  D000               	goto	l8072
  7953  010E3C                     l8072:
  7954                           
  7955                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7956  010E3C  0101               	movlb	1	; () banked
  7957  010E3E  BF4A               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7958  010E40  D008               	goto	l8074
  7959  010E42  0101               	movlb	1	; () banked
  7960  010E44  514A               	movf	(sprintf@exp+1)& (0+255),w,b
  7961  010E46  E130               	bnz	l8080
  7962  010E48  0E0A               	movlw	10
  7963  010E4A  0101               	movlb	1	; () banked
  7964  010E4C  5D49               	subwf	sprintf@exp& (0+255),w,b
  7965  010E4E  B0D8               	btfsc	status,0,c
  7966  010E50  D02B               	goto	l8080
  7967  010E52                     l8074:
  7968                           
  7969                           ; BSR set to: 1
  7970  010E52  0101               	movlb	1	; () banked
  7971  010E54  5151               	movf	sprintf@fval& (0+255),w,b
  7972  010E56  0101               	movlb	1	; () banked
  7973  010E58  1152               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7974  010E5A  0101               	movlb	1	; () banked
  7975  010E5C  1153               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7976  010E5E  0101               	movlb	1	; () banked
  7977  010E60  1154               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7978  010E62  B4D8               	btfsc	status,2,c
  7979  010E64  D08C               	goto	l8094
  7980                           
  7981                           ; BSR set to: 1
  7982  010E66  C151  F0A7         	movff	sprintf@fval,___fltol@f1
  7983  010E6A  C152  F0A8         	movff	sprintf@fval+1,___fltol@f1+1
  7984  010E6E  C153  F0A9         	movff	sprintf@fval+2,___fltol@f1+2
  7985  010E72  C154  F0AA         	movff	sprintf@fval+3,___fltol@f1+3
  7986  010E76  EC0F  F0A7         	call	___fltol	;wreg free
  7987  010E7A  0100               	movlb	0	; () banked
  7988  010E7C  51A7               	movf	?___fltol& (0+255),w,b
  7989  010E7E  0100               	movlb	0	; () banked
  7990  010E80  11A8               	iorwf	(?___fltol+1)& (0+255),w,b
  7991  010E82  0100               	movlb	0	; () banked
  7992  010E84  11A9               	iorwf	(?___fltol+2)& (0+255),w,b
  7993  010E86  0100               	movlb	0	; () banked
  7994  010E88  11AA               	iorwf	(?___fltol+3)& (0+255),w,b
  7995  010E8A  A4D8               	btfss	status,2,c
  7996  010E8C  D078               	goto	l8094
  7997                           
  7998                           ; BSR set to: 0
  7999  010E8E  0101               	movlb	1	; () banked
  8000  010E90  BF4A               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8001  010E92  D075               	goto	l8094
  8002  010E94  0101               	movlb	1	; () banked
  8003  010E96  514A               	movf	(sprintf@exp+1)& (0+255),w,b
  8004  010E98  E107               	bnz	l8080
  8005  010E9A  0E02               	movlw	2
  8006  010E9C  0101               	movlb	1	; () banked
  8007  010E9E  5D49               	subwf	sprintf@exp& (0+255),w,b
  8008  010EA0  B0D8               	btfsc	status,0,c
  8009  010EA2  D002               	goto	l8080
  8010  010EA4  D06C               	goto	l8094
  8011  010EA6  D000               	goto	l8080
  8012  010EA8                     l8080:
  8013                           
  8014                           ; BSR set to: 1
  8015                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  8016  010EA8  C14B  F070         	movff	sprintf@tmpval,___flge@ff1
  8017  010EAC  C14C  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  8018  010EB0  C14D  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  8019  010EB4  C14E  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  8020  010EB8  0E5F               	movlw	95
  8021  010EBA  0100               	movlb	0	; () banked
  8022  010EBC  6F74               	movwf	___flge@ff2& (0+255),b
  8023  010EBE  0E70               	movlw	112
  8024  010EC0  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  8025  010EC2  0E89               	movlw	137
  8026  010EC4  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  8027  010EC6  0E40               	movlw	64
  8028  010EC8  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  8029  010ECA  EC9C  F0A7         	call	___flge	;wreg free
  8030  010ECE  0100               	movlb	0	; () banked
  8031  010ED0  B0D8               	btfsc	status,0,c
  8032  010ED2  D003               	goto	l8084
  8033                           
  8034                           ; BSR set to: 0
  8035                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  8036  010ED4  0101               	movlb	1	; () banked
  8037  010ED6  0EF7               	movlw	247
  8038  010ED8  D002               	goto	L4
  8039  010EDA                     l8084:
  8040                           
  8041                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  8042  010EDA  0101               	movlb	1	; () banked
  8043  010EDC  0EF8               	movlw	248
  8044  010EDE                     L4:
  8045  010EDE  2749               	addwf	sprintf@exp& (0+255),f,b
  8046  010EE0  0EFF               	movlw	255
  8047  010EE2  234A               	addwfc	(sprintf@exp+1)& (0+255),f,b
  8048  010EE4  D000               	goto	l8086
  8049  010EE6                     l8086:
  8050                           
  8051                           ; BSR set to: 1
  8052                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  8053  010EE6  0101               	movlb	1	; () banked
  8054  010EE8  5149               	movf	sprintf@exp& (0+255),w,b
  8055  010EEA  EC82  F097         	call	_scale
  8056  010EEE  C08E  F14B         	movff	?_scale,sprintf@tmpval
  8057  010EF2  C08F  F14C         	movff	?_scale+1,sprintf@tmpval+1
  8058  010EF6  C090  F14D         	movff	?_scale+2,sprintf@tmpval+2
  8059  010EFA  C091  F14E         	movff	?_scale+3,sprintf@tmpval+3
  8060  010EFE  C151  F070         	movff	sprintf@fval,__div_to_l_@f1
  8061  010F02  C152  F071         	movff	sprintf@fval+1,__div_to_l_@f1+1
  8062  010F06  C153  F072         	movff	sprintf@fval+2,__div_to_l_@f1+2
  8063  010F0A  C154  F073         	movff	sprintf@fval+3,__div_to_l_@f1+3
  8064  010F0E  C14B  F074         	movff	sprintf@tmpval,__div_to_l_@f2
  8065  010F12  C14C  F075         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  8066  010F16  C14D  F076         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  8067  010F1A  C14E  F077         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  8068  010F1E  EC81  F0A3         	call	__div_to_l_	;wreg free
  8069  010F22  C070  F145         	movff	?__div_to_l_,sprintf@val
  8070  010F26  C071  F146         	movff	?__div_to_l_+1,sprintf@val+1
  8071  010F2A  C072  F147         	movff	?__div_to_l_+2,sprintf@val+2
  8072  010F2E  C073  F148         	movff	?__div_to_l_+3,sprintf@val+3
  8073  010F32  D01B               	goto	l8092
  8074  010F34  C151  F070         	movff	sprintf@fval,__tdiv_to_l_@f1
  8075  010F38  C152  F071         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  8076  010F3C  C153  F072         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  8077  010F40  C154  F073         	movff	sprintf@fval+3,__tdiv_to_l_@f1+3
  8078  010F44  C14B  F074         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  8079  010F48  C14C  F075         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  8080  010F4C  C14D  F076         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  8081  010F50  C14E  F077         	movff	sprintf@tmpval+3,__tdiv_to_l_@f2+3
  8082  010F54  ECAE  F0A2         	call	__tdiv_to_l_	;wreg free
  8083  010F58  C070  F145         	movff	?__tdiv_to_l_,sprintf@val
  8084  010F5C  C071  F146         	movff	?__tdiv_to_l_+1,sprintf@val+1
  8085  010F60  C072  F147         	movff	?__tdiv_to_l_+2,sprintf@val+2
  8086  010F64  C073  F148         	movff	?__tdiv_to_l_+3,sprintf@val+3
  8087  010F68  D000               	goto	l8092
  8088  010F6A                     l8092:
  8089                           
  8090                           ;doprnt.c: 1129: fval = 0.0;
  8091  010F6A  0E00               	movlw	0
  8092  010F6C  0101               	movlb	1	; () banked
  8093  010F6E  6F51               	movwf	sprintf@fval& (0+255),b
  8094  010F70  0E00               	movlw	0
  8095  010F72  6F52               	movwf	(sprintf@fval+1)& (0+255),b
  8096  010F74  0E00               	movlw	0
  8097  010F76  6F53               	movwf	(sprintf@fval+2)& (0+255),b
  8098  010F78  0E00               	movlw	0
  8099  010F7A  6F54               	movwf	(sprintf@fval+3)& (0+255),b
  8100                           
  8101                           ;doprnt.c: 1130: } else {
  8102  010F7C  D03C               	goto	l8098
  8103  010F7E                     l8094:
  8104                           
  8105                           ;doprnt.c: 1131: val = (unsigned long)fval;
  8106  010F7E  C151  F0A7         	movff	sprintf@fval,___fltol@f1
  8107  010F82  C152  F0A8         	movff	sprintf@fval+1,___fltol@f1+1
  8108  010F86  C153  F0A9         	movff	sprintf@fval+2,___fltol@f1+2
  8109  010F8A  C154  F0AA         	movff	sprintf@fval+3,___fltol@f1+3
  8110  010F8E  EC0F  F0A7         	call	___fltol	;wreg free
  8111  010F92  C0A7  F145         	movff	?___fltol,sprintf@val
  8112  010F96  C0A8  F146         	movff	?___fltol+1,sprintf@val+1
  8113  010F9A  C0A9  F147         	movff	?___fltol+2,sprintf@val+2
  8114  010F9E  C0AA  F148         	movff	?___fltol+3,sprintf@val+3
  8115                           
  8116                           ;doprnt.c: 1132: fval -= (double)val;
  8117  010FA2  C151  F0A7         	movff	sprintf@fval,___flsub@f1
  8118  010FA6  C152  F0A8         	movff	sprintf@fval+1,___flsub@f1+1
  8119  010FAA  C153  F0A9         	movff	sprintf@fval+2,___flsub@f1+2
  8120  010FAE  C154  F0AA         	movff	sprintf@fval+3,___flsub@f1+3
  8121  010FB2  C145  F07A         	movff	sprintf@val,___lltofl@c
  8122  010FB6  C146  F07B         	movff	sprintf@val+1,___lltofl@c+1
  8123  010FBA  C147  F07C         	movff	sprintf@val+2,___lltofl@c+2
  8124  010FBE  C148  F07D         	movff	sprintf@val+3,___lltofl@c+3
  8125  010FC2  ECA2  F0AE         	call	___lltofl	;wreg free
  8126  010FC6  C07A  F0AB         	movff	?___lltofl,___flsub@f2
  8127  010FCA  C07B  F0AC         	movff	?___lltofl+1,___flsub@f2+1
  8128  010FCE  C07C  F0AD         	movff	?___lltofl+2,___flsub@f2+2
  8129  010FD2  C07D  F0AE         	movff	?___lltofl+3,___flsub@f2+3
  8130  010FD6  EC13  F0AD         	call	___flsub	;wreg free
  8131  010FDA  C0A7  F151         	movff	?___flsub,sprintf@fval
  8132  010FDE  C0A8  F152         	movff	?___flsub+1,sprintf@fval+1
  8133  010FE2  C0A9  F153         	movff	?___flsub+2,sprintf@fval+2
  8134  010FE6  C0AA  F154         	movff	?___flsub+3,sprintf@fval+3
  8135                           
  8136                           ;doprnt.c: 1133: exp = 0;
  8137  010FEA  0E00               	movlw	0
  8138  010FEC  0101               	movlb	1	; () banked
  8139  010FEE  6F4A               	movwf	(sprintf@exp+1)& (0+255),b
  8140  010FF0  0E00               	movlw	0
  8141  010FF2  6F49               	movwf	sprintf@exp& (0+255),b
  8142  010FF4  D000               	goto	l8098
  8143  010FF6                     l8098:
  8144                           
  8145                           ; BSR set to: 1
  8146                           ;doprnt.c: 1134: }
  8147                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8148  010FF6  0E01               	movlw	1
  8149  010FF8  0101               	movlb	1	; () banked
  8150  010FFA  6F55               	movwf	sprintf@c& (0+255),b
  8151  010FFC                     l8100:
  8152                           
  8153                           ; BSR set to: 1
  8154  010FFC  0E0A               	movlw	10
  8155  010FFE  0101               	movlb	1	; () banked
  8156  011000  1955               	xorwf	sprintf@c& (0+255),w,b
  8157  011002  B4D8               	btfsc	status,2,c
  8158  011004  D025               	goto	l8112
  8159  011006  D001               	goto	l8104
  8160                           
  8161                           ; BSR set to: 1
  8162  011008  D023               	goto	l8112
  8163  01100A                     l8104:
  8164                           
  8165                           ; BSR set to: 1
  8166                           ;doprnt.c: 1137: if(val < dpowers[c])
  8167  01100A  0101               	movlb	1	; () banked
  8168  01100C  5155               	movf	sprintf@c& (0+255),w,b
  8169  01100E  0D04               	mullw	4
  8170  011010  0E07               	movlw	low _dpowers
  8171  011012  24F3               	addwf	prodl,w,c
  8172  011014  6EF6               	movwf	tblptrl,c
  8173  011016  0EFE               	movlw	high _dpowers
  8174  011018  20F4               	addwfc	prodh,w,c
  8175  01101A  6EF7               	movwf	tblptrh,c
  8176  01101C                     	if	1	;There are 3 active tblptr bytes
  8177  01101C  6AF8               	clrf	tblptru,c
  8178  01101E  0E00               	movlw	low (__mediumconst shr (0+16))
  8179  011020  22F8               	addwfc	tblptru,f,c
  8180  011022                     	endif
  8181  011022  0009               	tblrd		*+
  8182  011024  50F5               	movf	tablat,w,c
  8183  011026  0101               	movlb	1	; () banked
  8184  011028  5D45               	subwf	sprintf@val& (0+255),w,b
  8185  01102A  0009               	tblrd		*+
  8186  01102C  50F5               	movf	tablat,w,c
  8187  01102E  0101               	movlb	1	; () banked
  8188  011030  5946               	subwfb	(sprintf@val+1)& (0+255),w,b
  8189  011032  0009               	tblrd		*+
  8190  011034  50F5               	movf	tablat,w,c
  8191  011036  0101               	movlb	1	; () banked
  8192  011038  5947               	subwfb	(sprintf@val+2)& (0+255),w,b
  8193  01103A  0009               	tblrd		*+
  8194  01103C  50F5               	movf	tablat,w,c
  8195  01103E  0101               	movlb	1	; () banked
  8196  011040  5948               	subwfb	(sprintf@val+3)& (0+255),w,b
  8197  011042  A0D8               	btfss	status,0,c
  8198  011044  D005               	goto	l8112
  8199  011046  D001               	goto	l8108
  8200                           
  8201                           ; BSR set to: 1
  8202                           ;doprnt.c: 1138: break;
  8203  011048  D003               	goto	l8112
  8204  01104A                     l8108:
  8205                           
  8206                           ; BSR set to: 1
  8207  01104A  0101               	movlb	1	; () banked
  8208  01104C  2B55               	incf	sprintf@c& (0+255),f,b
  8209  01104E  D7D6               	goto	l8100
  8210  011050                     l8112:
  8211                           
  8212                           ; BSR set to: 1
  8213                           ;doprnt.c: 1175: {
  8214                           ;doprnt.c: 1188: if(flag & 0x03)
  8215  011050  0E03               	movlw	3
  8216  011052  0101               	movlb	1	; () banked
  8217  011054  1543               	andwf	sprintf@flag& (0+255),w,b
  8218  011056  0100               	movlb	0	; () banked
  8219  011058  6FB9               	movwf	??_sprintf& (0+255),b
  8220  01105A  0E00               	movlw	0
  8221  01105C  0101               	movlb	1	; () banked
  8222  01105E  1544               	andwf	(sprintf@flag+1)& (0+255),w,b
  8223  011060  0100               	movlb	0	; () banked
  8224  011062  6FBA               	movwf	(??_sprintf+1)& (0+255),b
  8225  011064  0100               	movlb	0	; () banked
  8226  011066  51B9               	movf	??_sprintf& (0+255),w,b
  8227  011068  0100               	movlb	0	; () banked
  8228  01106A  11BA               	iorwf	(??_sprintf+1)& (0+255),w,b
  8229  01106C  B4D8               	btfsc	status,2,c
  8230  01106E  D058               	goto	l8126
  8231                           
  8232                           ; BSR set to: 0
  8233                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  8234  011070  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  8235  011074  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  8236  011078  0E2D               	movlw	45
  8237  01107A  D050               	goto	L5
  8238  01107C                     l8116:
  8239                           
  8240                           ; BSR set to: 0
  8241  01107C  0100               	movlb	0	; () banked
  8242  01107E  4BB1               	infsnz	sprintf@sp& (0+255),f,b
  8243  011080  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;doprnt.c: 1195: }
  8247                           ;doprnt.c: 1196: while(c--) {
  8248  011082  D04E               	goto	l8126
  8249  011084                     l8118:
  8250                           
  8251                           ;doprnt.c: 1200: {
  8252                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  8253  011084  C145  F070         	movff	sprintf@val,___lldiv@dividend
  8254  011088  C146  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  8255  01108C  C147  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  8256  011090  C148  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  8257  011094  0101               	movlb	1	; () banked
  8258  011096  5155               	movf	sprintf@c& (0+255),w,b
  8259  011098  0D04               	mullw	4
  8260  01109A  0E07               	movlw	low _dpowers
  8261  01109C  24F3               	addwf	prodl,w,c
  8262  01109E  6EF6               	movwf	tblptrl,c
  8263  0110A0  0EFE               	movlw	high _dpowers
  8264  0110A2  20F4               	addwfc	prodh,w,c
  8265  0110A4  6EF7               	movwf	tblptrh,c
  8266  0110A6                     	if	1	;There are 3 active tblptr bytes
  8267  0110A6  6AF8               	clrf	tblptru,c
  8268  0110A8  0E00               	movlw	low (__mediumconst shr (0+16))
  8269  0110AA  22F8               	addwfc	tblptru,f,c
  8270  0110AC                     	endif
  8271  0110AC  0009               	tblrd		*+
  8272  0110AE  CFF5 F074          	movff	tablat,___lldiv@divisor
  8273  0110B2  0009               	tblrd		*+
  8274  0110B4  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  8275  0110B8  0009               	tblrd		*+
  8276  0110BA  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  8277  0110BE  000A               	tblrd		*-
  8278  0110C0  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  8279  0110C4  ECF7  F0A8         	call	___lldiv	;wreg free
  8280  0110C8  C070  F14B         	movff	?___lldiv,sprintf@tmpval
  8281  0110CC  C071  F14C         	movff	?___lldiv+1,sprintf@tmpval+1
  8282  0110D0  C072  F14D         	movff	?___lldiv+2,sprintf@tmpval+2
  8283  0110D4  C073  F14E         	movff	?___lldiv+3,sprintf@tmpval+3
  8284                           
  8285                           ;doprnt.c: 1202: tmpval.vd %= 10;
  8286  0110D8  C14B  F070         	movff	sprintf@tmpval,___llmod@dividend
  8287  0110DC  C14C  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8288  0110E0  C14D  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8289  0110E4  C14E  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8290  0110E8  0E0A               	movlw	10
  8291  0110EA  0100               	movlb	0	; () banked
  8292  0110EC  6F74               	movwf	___llmod@divisor& (0+255),b
  8293  0110EE  0E00               	movlw	0
  8294  0110F0  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  8295  0110F2  0E00               	movlw	0
  8296  0110F4  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  8297  0110F6  0E00               	movlw	0
  8298  0110F8  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  8299  0110FA  ECC8  F0AA         	call	___llmod	;wreg free
  8300  0110FE  C070  F14B         	movff	?___llmod,sprintf@tmpval
  8301  011102  C071  F14C         	movff	?___llmod+1,sprintf@tmpval+1
  8302  011106  C072  F14D         	movff	?___llmod+2,sprintf@tmpval+2
  8303  01110A  C073  F14E         	movff	?___llmod+3,sprintf@tmpval+3
  8304                           
  8305                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  8306  01110E  0101               	movlb	1	; () banked
  8307  011110  514B               	movf	sprintf@tmpval& (0+255),w,b
  8308  011112  0F30               	addlw	48
  8309  011114  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  8310  011118  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  8311  01111C                     L5:
  8312  01111C  6EDF               	movwf	indf2,c
  8313  01111E  D7AE               	goto	l8116
  8314  011120                     l8126:
  8315                           
  8316                           ; BSR set to: 0
  8317  011120  0101               	movlb	1	; () banked
  8318  011122  0755               	decf	sprintf@c& (0+255),f,b
  8319  011124  0101               	movlb	1	; () banked
  8320  011126  2955               	incf	sprintf@c& (0+255),w,b
  8321  011128  B4D8               	btfsc	status,2,c
  8322  01112A  D010               	goto	l8134
  8323  01112C  D7AB               	goto	l8118
  8324                           
  8325                           ; BSR set to: 1
  8326                           ;doprnt.c: 1204: }
  8327                           ;doprnt.c: 1206: }
  8328                           ;doprnt.c: 1207: while(exp > 0) {
  8329  01112E  D00E               	goto	l8134
  8330  011130                     l8128:
  8331                           
  8332                           ; BSR set to: 1
  8333                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  8334  011130  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  8335  011134  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  8336  011138  0E30               	movlw	48
  8337  01113A  6EDF               	movwf	indf2,c
  8338                           
  8339                           ; BSR set to: 1
  8340  01113C  0100               	movlb	0	; () banked
  8341  01113E  4BB1               	infsnz	sprintf@sp& (0+255),f,b
  8342  011140  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;doprnt.c: 1209: exp--;
  8346  011142  0101               	movlb	1	; () banked
  8347  011144  0749               	decf	sprintf@exp& (0+255),f,b
  8348  011146  A0D8               	btfss	status,0,c
  8349  011148  074A               	decf	(sprintf@exp+1)& (0+255),f,b
  8350  01114A  D000               	goto	l8134
  8351  01114C                     l8134:
  8352                           
  8353                           ; BSR set to: 1
  8354  01114C  0101               	movlb	1	; () banked
  8355  01114E  BF4A               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8356  011150  D007               	goto	l8136
  8357  011152  0101               	movlb	1	; () banked
  8358  011154  514A               	movf	(sprintf@exp+1)& (0+255),w,b
  8359  011156  E1EC               	bnz	l8128
  8360  011158  0101               	movlb	1	; () banked
  8361  01115A  0549               	decf	sprintf@exp& (0+255),w,b
  8362  01115C  B0D8               	btfsc	status,0,c
  8363  01115E  D7E8               	goto	l8128
  8364  011160                     l8136:
  8365                           
  8366                           ; BSR set to: 1
  8367                           ;doprnt.c: 1210: }
  8368                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  8369  011160  0101               	movlb	1	; () banked
  8370  011162  BF50               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8371  011164  D00C               	goto	l1050
  8372  011166  0101               	movlb	1	; () banked
  8373  011168  5150               	movf	(sprintf@prec+1)& (0+255),w,b
  8374  01116A  E105               	bnz	u10300
  8375  01116C  0E09               	movlw	9
  8376  01116E  0101               	movlb	1	; () banked
  8377  011170  5D4F               	subwf	sprintf@prec& (0+255),w,b
  8378  011172  A0D8               	btfss	status,0,c
  8379  011174  D004               	goto	l1050
  8380  011176                     u10300:
  8381                           
  8382                           ; BSR set to: 1
  8383                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  8384  011176  0E08               	movlw	8
  8385  011178  0101               	movlb	1	; () banked
  8386  01117A  6F55               	movwf	sprintf@c& (0+255),b
  8387  01117C  D003               	goto	l8140
  8388  01117E                     l1050:
  8389                           
  8390                           ; BSR set to: 1
  8391                           ;doprnt.c: 1213: else
  8392                           ;doprnt.c: 1214: c = prec;
  8393  01117E  C14F  F155         	movff	sprintf@prec,sprintf@c
  8394  011182  D000               	goto	l8140
  8395  011184                     l8140:
  8396                           
  8397                           ; BSR set to: 1
  8398                           ;doprnt.c: 1215: prec -= c;
  8399  011184  0101               	movlb	1	; () banked
  8400  011186  5155               	movf	sprintf@c& (0+255),w,b
  8401  011188  0101               	movlb	1	; () banked
  8402  01118A  5F4F               	subwf	sprintf@prec& (0+255),f,b
  8403  01118C  0E00               	movlw	0
  8404  01118E  0101               	movlb	1	; () banked
  8405  011190  BF55               	btfsc	sprintf@c& (0+255),7,b
  8406  011192  0EFF               	movlw	255
  8407  011194  0101               	movlb	1	; () banked
  8408  011196  5B50               	subwfb	(sprintf@prec+1)& (0+255),f,b
  8409                           
  8410                           ; BSR set to: 1
  8411                           ;doprnt.c: 1219: if(c)
  8412  011198  0101               	movlb	1	; () banked
  8413  01119A  5155               	movf	sprintf@c& (0+255),w,b
  8414  01119C  0101               	movlb	1	; () banked
  8415  01119E  B4D8               	btfsc	status,2,c
  8416  0111A0  D00A               	goto	l8148
  8417                           
  8418                           ; BSR set to: 1
  8419                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  8420  0111A2  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  8421  0111A6  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  8422  0111AA  0E2E               	movlw	46
  8423  0111AC  6EDF               	movwf	indf2,c
  8424                           
  8425                           ; BSR set to: 1
  8426  0111AE  0100               	movlb	0	; () banked
  8427  0111B0  4BB1               	infsnz	sprintf@sp& (0+255),f,b
  8428  0111B2  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
  8429  0111B4  D000               	goto	l8148
  8430  0111B6                     l8148:
  8431                           
  8432                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8433  0111B6  0101               	movlb	1	; () banked
  8434  0111B8  5155               	movf	sprintf@c& (0+255),w,b
  8435  0111BA  EC82  F097         	call	_scale
  8436  0111BE  C08E  F13D         	movff	?_scale,_sprintf$4237
  8437  0111C2  C08F  F13E         	movff	?_scale+1,_sprintf$4237+1
  8438  0111C6  C090  F13F         	movff	?_scale+2,_sprintf$4237+2
  8439  0111CA  C091  F140         	movff	?_scale+3,_sprintf$4237+3
  8440                           
  8441                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8442  0111CE  C151  F083         	movff	sprintf@fval,___flmul@f2
  8443  0111D2  C152  F084         	movff	sprintf@fval+1,___flmul@f2+1
  8444  0111D6  C153  F085         	movff	sprintf@fval+2,___flmul@f2+2
  8445  0111DA  C154  F086         	movff	sprintf@fval+3,___flmul@f2+3
  8446  0111DE  C13D  F07F         	movff	_sprintf$4237,___flmul@f1
  8447  0111E2  C13E  F080         	movff	_sprintf$4237+1,___flmul@f1+1
  8448  0111E6  C13F  F081         	movff	_sprintf$4237+2,___flmul@f1+2
  8449  0111EA  C140  F082         	movff	_sprintf$4237+3,___flmul@f1+3
  8450  0111EE  ECC2  F0A5         	call	___flmul	;wreg free
  8451  0111F2  C07F  F0A7         	movff	?___flmul,___fltol@f1
  8452  0111F6  C080  F0A8         	movff	?___flmul+1,___fltol@f1+1
  8453  0111FA  C081  F0A9         	movff	?___flmul+2,___fltol@f1+2
  8454  0111FE  C082  F0AA         	movff	?___flmul+3,___fltol@f1+3
  8455  011202  EC0F  F0A7         	call	___fltol	;wreg free
  8456  011206  C0A7  F145         	movff	?___fltol,sprintf@val
  8457  01120A  C0A8  F146         	movff	?___fltol+1,sprintf@val+1
  8458  01120E  C0A9  F147         	movff	?___fltol+2,sprintf@val+2
  8459  011212  C0AA  F148         	movff	?___fltol+3,sprintf@val+3
  8460                           
  8461                           ;doprnt.c: 1228: while(c--) {
  8462  011216  D07B               	goto	l8162
  8463  011218                     l8152:
  8464                           
  8465                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  8466  011218  C145  F070         	movff	sprintf@val,___lldiv@dividend
  8467  01121C  C146  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  8468  011220  C147  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  8469  011224  C148  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  8470  011228  0101               	movlb	1	; () banked
  8471  01122A  5155               	movf	sprintf@c& (0+255),w,b
  8472  01122C  0D04               	mullw	4
  8473  01122E  0E07               	movlw	low _dpowers
  8474  011230  24F3               	addwf	prodl,w,c
  8475  011232  6EF6               	movwf	tblptrl,c
  8476  011234  0EFE               	movlw	high _dpowers
  8477  011236  20F4               	addwfc	prodh,w,c
  8478  011238  6EF7               	movwf	tblptrh,c
  8479  01123A                     	if	1	;There are 3 active tblptr bytes
  8480  01123A  6AF8               	clrf	tblptru,c
  8481  01123C  0E00               	movlw	low (__mediumconst shr (0+16))
  8482  01123E  22F8               	addwfc	tblptru,f,c
  8483  011240                     	endif
  8484  011240  0009               	tblrd		*+
  8485  011242  CFF5 F074          	movff	tablat,___lldiv@divisor
  8486  011246  0009               	tblrd		*+
  8487  011248  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  8488  01124C  0009               	tblrd		*+
  8489  01124E  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  8490  011252  000A               	tblrd		*-
  8491  011254  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  8492  011258  ECF7  F0A8         	call	___lldiv	;wreg free
  8493  01125C  C070  F14B         	movff	?___lldiv,sprintf@tmpval
  8494  011260  C071  F14C         	movff	?___lldiv+1,sprintf@tmpval+1
  8495  011264  C072  F14D         	movff	?___lldiv+2,sprintf@tmpval+2
  8496  011268  C073  F14E         	movff	?___lldiv+3,sprintf@tmpval+3
  8497                           
  8498                           ;doprnt.c: 1230: tmpval.vd %= 10;
  8499  01126C  C14B  F070         	movff	sprintf@tmpval,___llmod@dividend
  8500  011270  C14C  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8501  011274  C14D  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8502  011278  C14E  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8503  01127C  0E0A               	movlw	10
  8504  01127E  0100               	movlb	0	; () banked
  8505  011280  6F74               	movwf	___llmod@divisor& (0+255),b
  8506  011282  0E00               	movlw	0
  8507  011284  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  8508  011286  0E00               	movlw	0
  8509  011288  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  8510  01128A  0E00               	movlw	0
  8511  01128C  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  8512  01128E  ECC8  F0AA         	call	___llmod	;wreg free
  8513  011292  C070  F14B         	movff	?___llmod,sprintf@tmpval
  8514  011296  C071  F14C         	movff	?___llmod+1,sprintf@tmpval+1
  8515  01129A  C072  F14D         	movff	?___llmod+2,sprintf@tmpval+2
  8516  01129E  C073  F14E         	movff	?___llmod+3,sprintf@tmpval+3
  8517                           
  8518                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  8519  0112A2  0101               	movlb	1	; () banked
  8520  0112A4  514B               	movf	sprintf@tmpval& (0+255),w,b
  8521  0112A6  0F30               	addlw	48
  8522  0112A8  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  8523  0112AC  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  8524  0112B0  6EDF               	movwf	indf2,c
  8525                           
  8526                           ; BSR set to: 1
  8527  0112B2  0100               	movlb	0	; () banked
  8528  0112B4  4BB1               	infsnz	sprintf@sp& (0+255),f,b
  8529  0112B6  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;doprnt.c: 1232: val %= dpowers[c];
  8533  0112B8  C145  F070         	movff	sprintf@val,___llmod@dividend
  8534  0112BC  C146  F071         	movff	sprintf@val+1,___llmod@dividend+1
  8535  0112C0  C147  F072         	movff	sprintf@val+2,___llmod@dividend+2
  8536  0112C4  C148  F073         	movff	sprintf@val+3,___llmod@dividend+3
  8537  0112C8  0101               	movlb	1	; () banked
  8538  0112CA  5155               	movf	sprintf@c& (0+255),w,b
  8539  0112CC  0D04               	mullw	4
  8540  0112CE  0E07               	movlw	low _dpowers
  8541  0112D0  24F3               	addwf	prodl,w,c
  8542  0112D2  6EF6               	movwf	tblptrl,c
  8543  0112D4  0EFE               	movlw	high _dpowers
  8544  0112D6  20F4               	addwfc	prodh,w,c
  8545  0112D8  6EF7               	movwf	tblptrh,c
  8546  0112DA                     	if	1	;There are 3 active tblptr bytes
  8547  0112DA  6AF8               	clrf	tblptru,c
  8548  0112DC  0E00               	movlw	low (__mediumconst shr (0+16))
  8549  0112DE  22F8               	addwfc	tblptru,f,c
  8550  0112E0                     	endif
  8551  0112E0  0009               	tblrd		*+
  8552  0112E2  CFF5 F074          	movff	tablat,___llmod@divisor
  8553  0112E6  0009               	tblrd		*+
  8554  0112E8  CFF5 F075          	movff	tablat,___llmod@divisor+1
  8555  0112EC  0009               	tblrd		*+
  8556  0112EE  CFF5 F076          	movff	tablat,___llmod@divisor+2
  8557  0112F2  000A               	tblrd		*-
  8558  0112F4  CFF5 F077          	movff	tablat,___llmod@divisor+3
  8559  0112F8  ECC8  F0AA         	call	___llmod	;wreg free
  8560  0112FC  C070  F145         	movff	?___llmod,sprintf@val
  8561  011300  C071  F146         	movff	?___llmod+1,sprintf@val+1
  8562  011304  C072  F147         	movff	?___llmod+2,sprintf@val+2
  8563  011308  C073  F148         	movff	?___llmod+3,sprintf@val+3
  8564  01130C  D000               	goto	l8162
  8565  01130E                     l8162:
  8566  01130E  0101               	movlb	1	; () banked
  8567  011310  0755               	decf	sprintf@c& (0+255),f,b
  8568  011312  0101               	movlb	1	; () banked
  8569  011314  2955               	incf	sprintf@c& (0+255),w,b
  8570  011316  B4D8               	btfsc	status,2,c
  8571  011318  D010               	goto	l8170
  8572  01131A  D77E               	goto	l8152
  8573                           
  8574                           ; BSR set to: 1
  8575                           ;doprnt.c: 1233: }
  8576                           ;doprnt.c: 1235: while(prec) {
  8577  01131C  D00E               	goto	l8170
  8578  01131E                     l8164:
  8579                           
  8580                           ; BSR set to: 1
  8581                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  8582  01131E  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  8583  011322  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  8584  011326  0E30               	movlw	48
  8585  011328  6EDF               	movwf	indf2,c
  8586                           
  8587                           ; BSR set to: 1
  8588  01132A  0100               	movlb	0	; () banked
  8589  01132C  4BB1               	infsnz	sprintf@sp& (0+255),f,b
  8590  01132E  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;doprnt.c: 1237: prec--;
  8594  011330  0101               	movlb	1	; () banked
  8595  011332  074F               	decf	sprintf@prec& (0+255),f,b
  8596  011334  A0D8               	btfss	status,0,c
  8597  011336  0750               	decf	(sprintf@prec+1)& (0+255),f,b
  8598  011338  D000               	goto	l8170
  8599  01133A                     l8170:
  8600                           
  8601                           ; BSR set to: 1
  8602  01133A  0101               	movlb	1	; () banked
  8603  01133C  514F               	movf	sprintf@prec& (0+255),w,b
  8604  01133E  0101               	movlb	1	; () banked
  8605  011340  1150               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8606  011342  B4D8               	btfsc	status,2,c
  8607  011344  D05D               	goto	l8192
  8608  011346  D7EB               	goto	l8164
  8609                           
  8610                           ; BSR set to: 1
  8611                           ;doprnt.c: 1238: }
  8612                           ;doprnt.c: 1245: continue;
  8613  011348  D05B               	goto	l8192
  8614  01134A                     l8172:
  8615                           
  8616                           ; BSR set to: 1
  8617                           ;doprnt.c: 1246: }
  8618                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8619  01134A  0101               	movlb	1	; () banked
  8620  01134C  514F               	movf	sprintf@prec& (0+255),w,b
  8621  01134E  0101               	movlb	1	; () banked
  8622  011350  1150               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8623  011352  A4D8               	btfss	status,2,c
  8624  011354  D00E               	goto	l8178
  8625                           
  8626                           ; BSR set to: 1
  8627  011356  0101               	movlb	1	; () banked
  8628  011358  5145               	movf	sprintf@val& (0+255),w,b
  8629  01135A  0101               	movlb	1	; () banked
  8630  01135C  1146               	iorwf	(sprintf@val+1)& (0+255),w,b
  8631  01135E  0101               	movlb	1	; () banked
  8632  011360  1147               	iorwf	(sprintf@val+2)& (0+255),w,b
  8633  011362  0101               	movlb	1	; () banked
  8634  011364  1148               	iorwf	(sprintf@val+3)& (0+255),w,b
  8635  011366  A4D8               	btfss	status,2,c
  8636  011368  D004               	goto	l8178
  8637                           
  8638                           ; BSR set to: 1
  8639                           ;doprnt.c: 1291: prec++;
  8640  01136A  0101               	movlb	1	; () banked
  8641  01136C  4B4F               	infsnz	sprintf@prec& (0+255),f,b
  8642  01136E  2B50               	incf	(sprintf@prec+1)& (0+255),f,b
  8643  011370  D000               	goto	l8178
  8644  011372                     l8178:
  8645                           
  8646                           ; BSR set to: 1
  8647                           ;doprnt.c: 1339: if(c < prec)
  8648  011372  0E80               	movlw	128
  8649  011374  0101               	movlb	1	; () banked
  8650  011376  BF55               	btfsc	sprintf@c& (0+255),7,b
  8651  011378  0E7F               	movlw	127
  8652  01137A  0100               	movlb	0	; () banked
  8653  01137C  6FB9               	movwf	??_sprintf& (0+255),b
  8654  01137E  0101               	movlb	1	; () banked
  8655  011380  514F               	movf	sprintf@prec& (0+255),w,b
  8656  011382  0101               	movlb	1	; () banked
  8657  011384  5D55               	subwf	sprintf@c& (0+255),w,b
  8658  011386  0101               	movlb	1	; () banked
  8659  011388  5150               	movf	(sprintf@prec+1)& (0+255),w,b
  8660  01138A  0A80               	xorlw	128
  8661  01138C  0100               	movlb	0	; () banked
  8662  01138E  59B9               	subwfb	??_sprintf& (0+255),w,b
  8663  011390  B0D8               	btfsc	status,0,c
  8664  011392  D003               	goto	l8182
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;doprnt.c: 1340: c = prec;
  8668  011394  C14F  F155         	movff	sprintf@prec,sprintf@c
  8669  011398  D019               	goto	l8186
  8670  01139A                     l8182:
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;doprnt.c: 1341: else if(prec < c)
  8674  01139A  0101               	movlb	1	; () banked
  8675  01139C  5150               	movf	(sprintf@prec+1)& (0+255),w,b
  8676  01139E  0A80               	xorlw	128
  8677  0113A0  0100               	movlb	0	; () banked
  8678  0113A2  6FB9               	movwf	??_sprintf& (0+255),b
  8679  0113A4  0101               	movlb	1	; () banked
  8680  0113A6  5155               	movf	sprintf@c& (0+255),w,b
  8681  0113A8  0101               	movlb	1	; () banked
  8682  0113AA  5D4F               	subwf	sprintf@prec& (0+255),w,b
  8683  0113AC  0E80               	movlw	128
  8684  0113AE  0101               	movlb	1	; () banked
  8685  0113B0  BF55               	btfsc	sprintf@c& (0+255),7,b
  8686  0113B2  0E7F               	movlw	127
  8687  0113B4  0100               	movlb	0	; () banked
  8688  0113B6  59B9               	subwfb	??_sprintf& (0+255),w,b
  8689  0113B8  B0D8               	btfsc	status,0,c
  8690  0113BA  D008               	goto	l8186
  8691                           
  8692                           ; BSR set to: 0
  8693                           ;doprnt.c: 1342: prec = c;
  8694  0113BC  0101               	movlb	1	; () banked
  8695  0113BE  5155               	movf	sprintf@c& (0+255),w,b
  8696  0113C0  0101               	movlb	1	; () banked
  8697  0113C2  6F4F               	movwf	sprintf@prec& (0+255),b
  8698  0113C4  6B50               	clrf	(sprintf@prec+1)& (0+255),b
  8699  0113C6  BF4F               	btfsc	sprintf@prec& (0+255),7,b
  8700  0113C8  0750               	decf	(sprintf@prec+1)& (0+255),f,b
  8701                           
  8702                           ; BSR set to: 1
  8703  0113CA  D000               	goto	l8186
  8704  0113CC                     l8186:
  8705                           
  8706                           ;doprnt.c: 1422: {
  8707                           ;doprnt.c: 1438: if(flag & 0x03)
  8708  0113CC  0E03               	movlw	3
  8709  0113CE  0101               	movlb	1	; () banked
  8710  0113D0  1543               	andwf	sprintf@flag& (0+255),w,b
  8711  0113D2  0100               	movlb	0	; () banked
  8712  0113D4  6FB9               	movwf	??_sprintf& (0+255),b
  8713  0113D6  0E00               	movlw	0
  8714  0113D8  0101               	movlb	1	; () banked
  8715  0113DA  1544               	andwf	(sprintf@flag+1)& (0+255),w,b
  8716  0113DC  0100               	movlb	0	; () banked
  8717  0113DE  6FBA               	movwf	(??_sprintf+1)& (0+255),b
  8718  0113E0  0100               	movlb	0	; () banked
  8719  0113E2  51B9               	movf	??_sprintf& (0+255),w,b
  8720  0113E4  0100               	movlb	0	; () banked
  8721  0113E6  11BA               	iorwf	(??_sprintf+1)& (0+255),w,b
  8722  0113E8  B4D8               	btfsc	status,2,c
  8723  0113EA  D00A               	goto	l8192
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8727  0113EC  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  8728  0113F0  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  8729  0113F4  0E2D               	movlw	45
  8730  0113F6  6EDF               	movwf	indf2,c
  8731  0113F8                     l8190:
  8732                           
  8733                           ; BSR set to: 0
  8734  0113F8  0100               	movlb	0	; () banked
  8735  0113FA  4BB1               	infsnz	sprintf@sp& (0+255),f,b
  8736  0113FC  2BB2               	incf	(sprintf@sp+1)& (0+255),f,b
  8737                           
  8738                           ; BSR set to: 0
  8739  0113FE  D000               	goto	l8192
  8740  011400                     l8192:
  8741  011400  C0B3  FFF6         	movff	sprintf@f,tblptrl
  8742  011404  C0B4  FFF7         	movff	sprintf@f+1,tblptrh
  8743  011408  0100               	movlb	0	; () banked
  8744  01140A  4BB3               	infsnz	sprintf@f& (0+255),f,b
  8745  01140C  2BB4               	incf	(sprintf@f+1)& (0+255),f,b
  8746  01140E                     	if	0	;tblptru may be non-zero
  8747  01140E                     	endif
  8748  01140E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8749  01140E  0E00               	movlw	low (__mediumconst shr (0+16))
  8750  011410  6EF8               	movwf	tblptru,c
  8751  011412                     	endif
  8752  011412  0008               	tblrd		*
  8753  011414  CFF5 F155          	movff	tablat,sprintf@c
  8754  011418  0101               	movlb	1	; () banked
  8755  01141A  5155               	movf	sprintf@c& (0+255),w,b
  8756  01141C  B4D8               	btfsc	status,2,c
  8757  01141E  D003               	goto	l8194
  8758  011420  EF9D  F085         	goto	l7994
  8759                           
  8760                           ; BSR set to: 1
  8761  011424  D000               	goto	l8194
  8762  011426                     l8194:
  8763                           
  8764                           ; BSR set to: 1
  8765                           ;doprnt.c: 1538: *sp = 0;
  8766  011426  C0B1  FFD9         	movff	sprintf@sp,fsr2l
  8767  01142A  C0B2  FFDA         	movff	sprintf@sp+1,fsr2h
  8768  01142E  0E00               	movlw	0
  8769  011430  6EDF               	movwf	indf2,c
  8770  011432  0012               	return	
  8771                           
  8772                           ; BSR set to: 1
  8773                           
  8774                           ; BSR set to: 1
  8775                           ;doprnt.c: 1540: return 0;
  8776                           ;	Return value of _sprintf is never used
  8777  011434  0012               	return		;funcret
  8778  011436                     __end_of_sprintf:
  8779                           	opt stack 0
  8780                           tblptru	equ	0xFF8
  8781                           tblptrh	equ	0xFF7
  8782                           tblptrl	equ	0xFF6
  8783                           tablat	equ	0xFF5
  8784                           prodh	equ	0xFF4
  8785                           prodl	equ	0xFF3
  8786                           intcon	equ	0xFF2
  8787                           postinc0	equ	0xFEE
  8788                           wreg	equ	0xFE8
  8789                           indf2	equ	0xFDF
  8790                           postinc2	equ	0xFDE
  8791                           fsr2h	equ	0xFDA
  8792                           fsr2l	equ	0xFD9
  8793                           status	equ	0xFD8
  8794                           
  8795 ;; *************** function _scale *****************
  8796 ;; Defined at:
  8797 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;  scl             1    wreg     char 
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;  scl             1   54[BANK0 ] char 
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  4   46[BANK0 ] char 
  8804 ;; Registers used:
  8805 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8811 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8812 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8814 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8815 ;;Total ram usage:        9 bytes
  8816 ;; Hardware stack levels used:    1
  8817 ;; Hardware stack levels required when called:    5
  8818 ;; This function calls:
  8819 ;;		___awdiv
  8820 ;;		___awmod
  8821 ;;		___flmul
  8822 ;; This function is called by:
  8823 ;;		_sprintf
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           	psect	text13
  8828  012F04                     __ptext13:
  8829                           	opt stack 0
  8830  012F04                     _scale:
  8831                           	opt stack 23
  8832                           
  8833                           ; BSR set to: 1
  8834                           ;incstack = 0
  8835                           ;scale@scl stored from wreg
  8836  012F04  0100               	movlb	0	; () banked
  8837  012F06  6F96               	movwf	scale@scl& (0+255),b
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;doprnt.c: 428: if(scl < 0) {
  8841  012F08  0100               	movlb	0	; () banked
  8842  012F0A  AF96               	btfss	scale@scl& (0+255),7,b
  8843  012F0C  D148               	goto	l7646
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;doprnt.c: 429: scl = -scl;
  8847  012F0E  0100               	movlb	0	; () banked
  8848  012F10  6D96               	negf	scale@scl& (0+255),b
  8849                           
  8850                           ;doprnt.c: 430: if(scl>=110)
  8851  012F12  0100               	movlb	0	; () banked
  8852  012F14  5196               	movf	scale@scl& (0+255),w,b
  8853  012F16  0A80               	xorlw	128
  8854  012F18  0F12               	addlw	-238
  8855  012F1A  A0D8               	btfss	status,0,c
  8856  012F1C  D0BC               	goto	l7636
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8860  012F1E  0E00               	movlw	0
  8861  012F20  0100               	movlb	0	; () banked
  8862  012F22  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8863  012F24  0E0A               	movlw	10
  8864  012F26  6F78               	movwf	___awdiv@divisor& (0+255),b
  8865  012F28  0E00               	movlw	0
  8866  012F2A  0100               	movlb	0	; () banked
  8867  012F2C  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8868  012F2E  0E64               	movlw	100
  8869  012F30  6F72               	movwf	___awmod@divisor& (0+255),b
  8870  012F32  0100               	movlb	0	; () banked
  8871  012F34  5196               	movf	scale@scl& (0+255),w,b
  8872  012F36  0100               	movlb	0	; () banked
  8873  012F38  6F70               	movwf	___awmod@dividend& (0+255),b
  8874  012F3A  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8875  012F3C  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8876  012F3E  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8877  012F40  EC1C  F0AA         	call	___awmod	;wreg free
  8878  012F44  C070  F076         	movff	?___awmod,___awdiv@dividend
  8879  012F48  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  8880  012F4C  EC8F  F0A8         	call	___awdiv	;wreg free
  8881  012F50  0100               	movlb	0	; () banked
  8882  012F52  90D8               	bcf	status,0,c
  8883  012F54  3776               	rlcf	?___awdiv& (0+255),f,b
  8884  012F56  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8885  012F58  0100               	movlb	0	; () banked
  8886  012F5A  90D8               	bcf	status,0,c
  8887  012F5C  3776               	rlcf	?___awdiv& (0+255),f,b
  8888  012F5E  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8889  012F60  0E24               	movlw	36
  8890  012F62  0100               	movlb	0	; () banked
  8891  012F64  2776               	addwf	?___awdiv& (0+255),f,b
  8892  012F66  0E00               	movlw	0
  8893  012F68  0100               	movlb	0	; () banked
  8894  012F6A  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8895  012F6C  0E9F               	movlw	low __npowers_
  8896  012F6E  0100               	movlb	0	; () banked
  8897  012F70  2576               	addwf	?___awdiv& (0+255),w,b
  8898  012F72  6EF6               	movwf	tblptrl,c
  8899  012F74  0EFD               	movlw	high __npowers_
  8900  012F76  0100               	movlb	0	; () banked
  8901  012F78  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8902  012F7A  6EF7               	movwf	tblptrh,c
  8903  012F7C                     	if	1	;There are 3 active tblptr bytes
  8904  012F7C  6AF8               	clrf	tblptru,c
  8905  012F7E  0E00               	movlw	low (__mediumconst shr (0+16))
  8906  012F80  22F8               	addwfc	tblptru,f,c
  8907  012F82                     	endif
  8908  012F82  0009               	tblrd		*+
  8909  012F84  CFF5 F083          	movff	tablat,___flmul@f2
  8910  012F88  0009               	tblrd		*+
  8911  012F8A  CFF5 F084          	movff	tablat,___flmul@f2+1
  8912  012F8E  0009               	tblrd		*+
  8913  012F90  CFF5 F085          	movff	tablat,___flmul@f2+2
  8914  012F94  000A               	tblrd		*-
  8915  012F96  CFF5 F086          	movff	tablat,___flmul@f2+3
  8916  012F9A  0E00               	movlw	0
  8917  012F9C  0100               	movlb	0	; () banked
  8918  012F9E  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8919  012FA0  0E64               	movlw	100
  8920  012FA2  6F78               	movwf	___awdiv@divisor& (0+255),b
  8921  012FA4  0100               	movlb	0	; () banked
  8922  012FA6  5196               	movf	scale@scl& (0+255),w,b
  8923  012FA8  0100               	movlb	0	; () banked
  8924  012FAA  6F76               	movwf	___awdiv@dividend& (0+255),b
  8925  012FAC  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  8926  012FAE  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  8927  012FB0  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8928  012FB2  EC8F  F0A8         	call	___awdiv	;wreg free
  8929  012FB6  0100               	movlb	0	; () banked
  8930  012FB8  90D8               	bcf	status,0,c
  8931  012FBA  3776               	rlcf	?___awdiv& (0+255),f,b
  8932  012FBC  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8933  012FBE  0100               	movlb	0	; () banked
  8934  012FC0  90D8               	bcf	status,0,c
  8935  012FC2  3776               	rlcf	?___awdiv& (0+255),f,b
  8936  012FC4  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8937  012FC6  0E48               	movlw	72
  8938  012FC8  0100               	movlb	0	; () banked
  8939  012FCA  2776               	addwf	?___awdiv& (0+255),f,b
  8940  012FCC  0E00               	movlw	0
  8941  012FCE  0100               	movlb	0	; () banked
  8942  012FD0  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8943  012FD2  0E9F               	movlw	low __npowers_
  8944  012FD4  0100               	movlb	0	; () banked
  8945  012FD6  2576               	addwf	?___awdiv& (0+255),w,b
  8946  012FD8  6EF6               	movwf	tblptrl,c
  8947  012FDA  0EFD               	movlw	high __npowers_
  8948  012FDC  0100               	movlb	0	; () banked
  8949  012FDE  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8950  012FE0  6EF7               	movwf	tblptrh,c
  8951  012FE2                     	if	1	;There are 3 active tblptr bytes
  8952  012FE2  6AF8               	clrf	tblptru,c
  8953  012FE4  0E00               	movlw	low (__mediumconst shr (0+16))
  8954  012FE6  22F8               	addwfc	tblptru,f,c
  8955  012FE8                     	endif
  8956  012FE8  0009               	tblrd		*+
  8957  012FEA  CFF5 F07F          	movff	tablat,___flmul@f1
  8958  012FEE  0009               	tblrd		*+
  8959  012FF0  CFF5 F080          	movff	tablat,___flmul@f1+1
  8960  012FF4  0009               	tblrd		*+
  8961  012FF6  CFF5 F081          	movff	tablat,___flmul@f1+2
  8962  012FFA  000A               	tblrd		*-
  8963  012FFC  CFF5 F082          	movff	tablat,___flmul@f1+3
  8964  013000  ECC2  F0A5         	call	___flmul	;wreg free
  8965  013004  C07F  F092         	movff	?___flmul,_scale$4236
  8966  013008  C080  F093         	movff	?___flmul+1,_scale$4236+1
  8967  01300C  C081  F094         	movff	?___flmul+2,_scale$4236+2
  8968  013010  C082  F095         	movff	?___flmul+3,_scale$4236+3
  8969                           
  8970                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8971  013014  C092  F07F         	movff	_scale$4236,___flmul@f1
  8972  013018  C093  F080         	movff	_scale$4236+1,___flmul@f1+1
  8973  01301C  C094  F081         	movff	_scale$4236+2,___flmul@f1+2
  8974  013020  C095  F082         	movff	_scale$4236+3,___flmul@f1+3
  8975  013024  0E00               	movlw	0
  8976  013026  0100               	movlb	0	; () banked
  8977  013028  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8978  01302A  0E0A               	movlw	10
  8979  01302C  6F72               	movwf	___awmod@divisor& (0+255),b
  8980  01302E  0100               	movlb	0	; () banked
  8981  013030  5196               	movf	scale@scl& (0+255),w,b
  8982  013032  0100               	movlb	0	; () banked
  8983  013034  6F70               	movwf	___awmod@dividend& (0+255),b
  8984  013036  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8985  013038  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8986  01303A  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8987  01303C  EC1C  F0AA         	call	___awmod	;wreg free
  8988  013040  0100               	movlb	0	; () banked
  8989  013042  90D8               	bcf	status,0,c
  8990  013044  3770               	rlcf	?___awmod& (0+255),f,b
  8991  013046  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8992  013048  0100               	movlb	0	; () banked
  8993  01304A  90D8               	bcf	status,0,c
  8994  01304C  3770               	rlcf	?___awmod& (0+255),f,b
  8995  01304E  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8996  013050  0E9F               	movlw	low __npowers_
  8997  013052  0100               	movlb	0	; () banked
  8998  013054  2570               	addwf	?___awmod& (0+255),w,b
  8999  013056  6EF6               	movwf	tblptrl,c
  9000  013058  0EFD               	movlw	high __npowers_
  9001  01305A  0100               	movlb	0	; () banked
  9002  01305C  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9003  01305E  6EF7               	movwf	tblptrh,c
  9004  013060                     	if	1	;There are 3 active tblptr bytes
  9005  013060  6AF8               	clrf	tblptru,c
  9006  013062  0E00               	movlw	low (__mediumconst shr (0+16))
  9007  013064  22F8               	addwfc	tblptru,f,c
  9008  013066                     	endif
  9009  013066  0009               	tblrd		*+
  9010  013068  CFF5 F083          	movff	tablat,___flmul@f2
  9011  01306C  0009               	tblrd		*+
  9012  01306E  CFF5 F084          	movff	tablat,___flmul@f2+1
  9013  013072  0009               	tblrd		*+
  9014  013074  CFF5 F085          	movff	tablat,___flmul@f2+2
  9015  013078  000A               	tblrd		*-
  9016  01307A  CFF5 F086          	movff	tablat,___flmul@f2+3
  9017  01307E  ECC2  F0A5         	call	___flmul	;wreg free
  9018  013082  C07F  F08E         	movff	?___flmul,?_scale
  9019  013086  C080  F08F         	movff	?___flmul+1,?_scale+1
  9020  01308A  C081  F090         	movff	?___flmul+2,?_scale+2
  9021  01308E  C082  F091         	movff	?___flmul+3,?_scale+3
  9022  013092  0012               	return	
  9023  013094  D06B               	goto	l7642
  9024  013096                     l7636:
  9025                           
  9026                           ;doprnt.c: 432: else if(scl > 10)
  9027  013096  0100               	movlb	0	; () banked
  9028  013098  5196               	movf	scale@scl& (0+255),w,b
  9029  01309A  0A80               	xorlw	128
  9030  01309C  0F75               	addlw	-139
  9031  01309E  A0D8               	btfss	status,0,c
  9032  0130A0  D065               	goto	l7642
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  9036  0130A2  0E00               	movlw	0
  9037  0130A4  0100               	movlb	0	; () banked
  9038  0130A6  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9039  0130A8  0E0A               	movlw	10
  9040  0130AA  6F78               	movwf	___awdiv@divisor& (0+255),b
  9041  0130AC  0100               	movlb	0	; () banked
  9042  0130AE  5196               	movf	scale@scl& (0+255),w,b
  9043  0130B0  0100               	movlb	0	; () banked
  9044  0130B2  6F76               	movwf	___awdiv@dividend& (0+255),b
  9045  0130B4  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  9046  0130B6  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  9047  0130B8  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9048  0130BA  EC8F  F0A8         	call	___awdiv	;wreg free
  9049  0130BE  0100               	movlb	0	; () banked
  9050  0130C0  90D8               	bcf	status,0,c
  9051  0130C2  3776               	rlcf	?___awdiv& (0+255),f,b
  9052  0130C4  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9053  0130C6  0100               	movlb	0	; () banked
  9054  0130C8  90D8               	bcf	status,0,c
  9055  0130CA  3776               	rlcf	?___awdiv& (0+255),f,b
  9056  0130CC  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9057  0130CE  0E24               	movlw	36
  9058  0130D0  0100               	movlb	0	; () banked
  9059  0130D2  2776               	addwf	?___awdiv& (0+255),f,b
  9060  0130D4  0E00               	movlw	0
  9061  0130D6  0100               	movlb	0	; () banked
  9062  0130D8  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9063  0130DA  0E9F               	movlw	low __npowers_
  9064  0130DC  0100               	movlb	0	; () banked
  9065  0130DE  2576               	addwf	?___awdiv& (0+255),w,b
  9066  0130E0  6EF6               	movwf	tblptrl,c
  9067  0130E2  0EFD               	movlw	high __npowers_
  9068  0130E4  0100               	movlb	0	; () banked
  9069  0130E6  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9070  0130E8  6EF7               	movwf	tblptrh,c
  9071  0130EA                     	if	1	;There are 3 active tblptr bytes
  9072  0130EA  6AF8               	clrf	tblptru,c
  9073  0130EC  0E00               	movlw	low (__mediumconst shr (0+16))
  9074  0130EE  22F8               	addwfc	tblptru,f,c
  9075  0130F0                     	endif
  9076  0130F0  0009               	tblrd		*+
  9077  0130F2  CFF5 F07F          	movff	tablat,___flmul@f1
  9078  0130F6  0009               	tblrd		*+
  9079  0130F8  CFF5 F080          	movff	tablat,___flmul@f1+1
  9080  0130FC  0009               	tblrd		*+
  9081  0130FE  CFF5 F081          	movff	tablat,___flmul@f1+2
  9082  013102  000A               	tblrd		*-
  9083  013104  CFF5 F082          	movff	tablat,___flmul@f1+3
  9084  013108  0E00               	movlw	0
  9085  01310A  0100               	movlb	0	; () banked
  9086  01310C  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9087  01310E  0E0A               	movlw	10
  9088  013110  6F72               	movwf	___awmod@divisor& (0+255),b
  9089  013112  0100               	movlb	0	; () banked
  9090  013114  5196               	movf	scale@scl& (0+255),w,b
  9091  013116  0100               	movlb	0	; () banked
  9092  013118  6F70               	movwf	___awmod@dividend& (0+255),b
  9093  01311A  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9094  01311C  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  9095  01311E  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  9096  013120  EC1C  F0AA         	call	___awmod	;wreg free
  9097  013124  0100               	movlb	0	; () banked
  9098  013126  90D8               	bcf	status,0,c
  9099  013128  3770               	rlcf	?___awmod& (0+255),f,b
  9100  01312A  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9101  01312C  0100               	movlb	0	; () banked
  9102  01312E  90D8               	bcf	status,0,c
  9103  013130  3770               	rlcf	?___awmod& (0+255),f,b
  9104  013132  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9105  013134  0E9F               	movlw	low __npowers_
  9106  013136  0100               	movlb	0	; () banked
  9107  013138  2570               	addwf	?___awmod& (0+255),w,b
  9108  01313A  6EF6               	movwf	tblptrl,c
  9109  01313C  0EFD               	movlw	high __npowers_
  9110  01313E  0100               	movlb	0	; () banked
  9111  013140  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9112  013142  6EF7               	movwf	tblptrh,c
  9113  013144                     	if	1	;There are 3 active tblptr bytes
  9114  013144  6AF8               	clrf	tblptru,c
  9115  013146  0E00               	movlw	low (__mediumconst shr (0+16))
  9116  013148  22F8               	addwfc	tblptru,f,c
  9117  01314A                     	endif
  9118  01314A  0009               	tblrd		*+
  9119  01314C  CFF5 F083          	movff	tablat,___flmul@f2
  9120  013150  0009               	tblrd		*+
  9121  013152  CFF5 F084          	movff	tablat,___flmul@f2+1
  9122  013156  0009               	tblrd		*+
  9123  013158  CFF5 F085          	movff	tablat,___flmul@f2+2
  9124  01315C  000A               	tblrd		*-
  9125  01315E  CFF5 F086          	movff	tablat,___flmul@f2+3
  9126  013162  ECC2  F0A5         	call	___flmul	;wreg free
  9127  013166  D78D               	goto	L6
  9128  013168  0012               	return	
  9129  01316A  D000               	goto	l7642
  9130  01316C                     l7642:
  9131                           
  9132                           ;doprnt.c: 434: return _npowers_[scl];
  9133  01316C  0100               	movlb	0	; () banked
  9134  01316E  5196               	movf	scale@scl& (0+255),w,b
  9135  013170  0D04               	mullw	4
  9136  013172  0E9F               	movlw	low __npowers_
  9137  013174  24F3               	addwf	prodl,w,c
  9138  013176  6EF6               	movwf	tblptrl,c
  9139  013178  0EFD               	movlw	high __npowers_
  9140  01317A  20F4               	addwfc	prodh,w,c
  9141  01317C  6EF7               	movwf	tblptrh,c
  9142  01317E                     	if	1	;There are 3 active tblptr bytes
  9143  01317E  6AF8               	clrf	tblptru,c
  9144  013180  0E00               	movlw	low (__mediumconst shr (0+16))
  9145  013182  22F8               	addwfc	tblptru,f,c
  9146  013184                     	endif
  9147  013184  0009               	tblrd		*+
  9148  013186  CFF5 F08E          	movff	tablat,?_scale
  9149  01318A  0009               	tblrd		*+
  9150  01318C  CFF5 F08F          	movff	tablat,?_scale+1
  9151  013190  0009               	tblrd		*+
  9152  013192  CFF5 F090          	movff	tablat,?_scale+2
  9153  013196  000A               	tblrd		*-
  9154  013198  CFF5 F091          	movff	tablat,?_scale+3
  9155                           
  9156                           ; BSR set to: 0
  9157  01319C  0012               	return	
  9158  01319E                     l7646:
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;doprnt.c: 435: }
  9162                           ;doprnt.c: 436: if(scl>=110)
  9163  01319E  0100               	movlb	0	; () banked
  9164  0131A0  5196               	movf	scale@scl& (0+255),w,b
  9165  0131A2  0A80               	xorlw	128
  9166  0131A4  0F12               	addlw	-238
  9167  0131A6  A0D8               	btfss	status,0,c
  9168  0131A8  D0BC               	goto	l7654
  9169                           
  9170                           ; BSR set to: 0
  9171                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9172  0131AA  0E00               	movlw	0
  9173  0131AC  0100               	movlb	0	; () banked
  9174  0131AE  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9175  0131B0  0E0A               	movlw	10
  9176  0131B2  6F78               	movwf	___awdiv@divisor& (0+255),b
  9177  0131B4  0E00               	movlw	0
  9178  0131B6  0100               	movlb	0	; () banked
  9179  0131B8  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9180  0131BA  0E64               	movlw	100
  9181  0131BC  6F72               	movwf	___awmod@divisor& (0+255),b
  9182  0131BE  0100               	movlb	0	; () banked
  9183  0131C0  5196               	movf	scale@scl& (0+255),w,b
  9184  0131C2  0100               	movlb	0	; () banked
  9185  0131C4  6F70               	movwf	___awmod@dividend& (0+255),b
  9186  0131C6  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9187  0131C8  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  9188  0131CA  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  9189  0131CC  EC1C  F0AA         	call	___awmod	;wreg free
  9190  0131D0  C070  F076         	movff	?___awmod,___awdiv@dividend
  9191  0131D4  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  9192  0131D8  EC8F  F0A8         	call	___awdiv	;wreg free
  9193  0131DC  0100               	movlb	0	; () banked
  9194  0131DE  90D8               	bcf	status,0,c
  9195  0131E0  3776               	rlcf	?___awdiv& (0+255),f,b
  9196  0131E2  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9197  0131E4  0100               	movlb	0	; () banked
  9198  0131E6  90D8               	bcf	status,0,c
  9199  0131E8  3776               	rlcf	?___awdiv& (0+255),f,b
  9200  0131EA  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9201  0131EC  0E24               	movlw	36
  9202  0131EE  0100               	movlb	0	; () banked
  9203  0131F0  2776               	addwf	?___awdiv& (0+255),f,b
  9204  0131F2  0E00               	movlw	0
  9205  0131F4  0100               	movlb	0	; () banked
  9206  0131F6  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9207  0131F8  0ED3               	movlw	low __powers_
  9208  0131FA  0100               	movlb	0	; () banked
  9209  0131FC  2576               	addwf	?___awdiv& (0+255),w,b
  9210  0131FE  6EF6               	movwf	tblptrl,c
  9211  013200  0EFD               	movlw	high __powers_
  9212  013202  0100               	movlb	0	; () banked
  9213  013204  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9214  013206  6EF7               	movwf	tblptrh,c
  9215  013208                     	if	1	;There are 3 active tblptr bytes
  9216  013208  6AF8               	clrf	tblptru,c
  9217  01320A  0E00               	movlw	low (__mediumconst shr (0+16))
  9218  01320C  22F8               	addwfc	tblptru,f,c
  9219  01320E                     	endif
  9220  01320E  0009               	tblrd		*+
  9221  013210  CFF5 F083          	movff	tablat,___flmul@f2
  9222  013214  0009               	tblrd		*+
  9223  013216  CFF5 F084          	movff	tablat,___flmul@f2+1
  9224  01321A  0009               	tblrd		*+
  9225  01321C  CFF5 F085          	movff	tablat,___flmul@f2+2
  9226  013220  000A               	tblrd		*-
  9227  013222  CFF5 F086          	movff	tablat,___flmul@f2+3
  9228  013226  0E00               	movlw	0
  9229  013228  0100               	movlb	0	; () banked
  9230  01322A  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9231  01322C  0E64               	movlw	100
  9232  01322E  6F78               	movwf	___awdiv@divisor& (0+255),b
  9233  013230  0100               	movlb	0	; () banked
  9234  013232  5196               	movf	scale@scl& (0+255),w,b
  9235  013234  0100               	movlb	0	; () banked
  9236  013236  6F76               	movwf	___awdiv@dividend& (0+255),b
  9237  013238  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  9238  01323A  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  9239  01323C  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9240  01323E  EC8F  F0A8         	call	___awdiv	;wreg free
  9241  013242  0100               	movlb	0	; () banked
  9242  013244  90D8               	bcf	status,0,c
  9243  013246  3776               	rlcf	?___awdiv& (0+255),f,b
  9244  013248  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9245  01324A  0100               	movlb	0	; () banked
  9246  01324C  90D8               	bcf	status,0,c
  9247  01324E  3776               	rlcf	?___awdiv& (0+255),f,b
  9248  013250  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9249  013252  0E48               	movlw	72
  9250  013254  0100               	movlb	0	; () banked
  9251  013256  2776               	addwf	?___awdiv& (0+255),f,b
  9252  013258  0E00               	movlw	0
  9253  01325A  0100               	movlb	0	; () banked
  9254  01325C  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9255  01325E  0ED3               	movlw	low __powers_
  9256  013260  0100               	movlb	0	; () banked
  9257  013262  2576               	addwf	?___awdiv& (0+255),w,b
  9258  013264  6EF6               	movwf	tblptrl,c
  9259  013266  0EFD               	movlw	high __powers_
  9260  013268  0100               	movlb	0	; () banked
  9261  01326A  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9262  01326C  6EF7               	movwf	tblptrh,c
  9263  01326E                     	if	1	;There are 3 active tblptr bytes
  9264  01326E  6AF8               	clrf	tblptru,c
  9265  013270  0E00               	movlw	low (__mediumconst shr (0+16))
  9266  013272  22F8               	addwfc	tblptru,f,c
  9267  013274                     	endif
  9268  013274  0009               	tblrd		*+
  9269  013276  CFF5 F07F          	movff	tablat,___flmul@f1
  9270  01327A  0009               	tblrd		*+
  9271  01327C  CFF5 F080          	movff	tablat,___flmul@f1+1
  9272  013280  0009               	tblrd		*+
  9273  013282  CFF5 F081          	movff	tablat,___flmul@f1+2
  9274  013286  000A               	tblrd		*-
  9275  013288  CFF5 F082          	movff	tablat,___flmul@f1+3
  9276  01328C  ECC2  F0A5         	call	___flmul	;wreg free
  9277  013290  C07F  F092         	movff	?___flmul,_scale$4236
  9278  013294  C080  F093         	movff	?___flmul+1,_scale$4236+1
  9279  013298  C081  F094         	movff	?___flmul+2,_scale$4236+2
  9280  01329C  C082  F095         	movff	?___flmul+3,_scale$4236+3
  9281                           
  9282                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9283  0132A0  C092  F07F         	movff	_scale$4236,___flmul@f1
  9284  0132A4  C093  F080         	movff	_scale$4236+1,___flmul@f1+1
  9285  0132A8  C094  F081         	movff	_scale$4236+2,___flmul@f1+2
  9286  0132AC  C095  F082         	movff	_scale$4236+3,___flmul@f1+3
  9287  0132B0  0E00               	movlw	0
  9288  0132B2  0100               	movlb	0	; () banked
  9289  0132B4  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9290  0132B6  0E0A               	movlw	10
  9291  0132B8  6F72               	movwf	___awmod@divisor& (0+255),b
  9292  0132BA  0100               	movlb	0	; () banked
  9293  0132BC  5196               	movf	scale@scl& (0+255),w,b
  9294  0132BE  0100               	movlb	0	; () banked
  9295  0132C0  6F70               	movwf	___awmod@dividend& (0+255),b
  9296  0132C2  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9297  0132C4  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  9298  0132C6  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  9299  0132C8  EC1C  F0AA         	call	___awmod	;wreg free
  9300  0132CC  0100               	movlb	0	; () banked
  9301  0132CE  90D8               	bcf	status,0,c
  9302  0132D0  3770               	rlcf	?___awmod& (0+255),f,b
  9303  0132D2  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9304  0132D4  0100               	movlb	0	; () banked
  9305  0132D6  90D8               	bcf	status,0,c
  9306  0132D8  3770               	rlcf	?___awmod& (0+255),f,b
  9307  0132DA  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9308  0132DC  0ED3               	movlw	low __powers_
  9309  0132DE  0100               	movlb	0	; () banked
  9310  0132E0  2570               	addwf	?___awmod& (0+255),w,b
  9311  0132E2  6EF6               	movwf	tblptrl,c
  9312  0132E4  0EFD               	movlw	high __powers_
  9313  0132E6  0100               	movlb	0	; () banked
  9314  0132E8  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9315  0132EA  6EF7               	movwf	tblptrh,c
  9316  0132EC                     	if	1	;There are 3 active tblptr bytes
  9317  0132EC  6AF8               	clrf	tblptru,c
  9318  0132EE  0E00               	movlw	low (__mediumconst shr (0+16))
  9319  0132F0  22F8               	addwfc	tblptru,f,c
  9320  0132F2                     	endif
  9321  0132F2  0009               	tblrd		*+
  9322  0132F4  CFF5 F083          	movff	tablat,___flmul@f2
  9323  0132F8  0009               	tblrd		*+
  9324  0132FA  CFF5 F084          	movff	tablat,___flmul@f2+1
  9325  0132FE  0009               	tblrd		*+
  9326  013300  CFF5 F085          	movff	tablat,___flmul@f2+2
  9327  013304  000A               	tblrd		*-
  9328  013306  CFF5 F086          	movff	tablat,___flmul@f2+3
  9329  01330A  ECC2  F0A5         	call	___flmul	;wreg free
  9330  01330E  C07F  F08E         	movff	?___flmul,?_scale
  9331  013312  C080  F08F         	movff	?___flmul+1,?_scale+1
  9332  013316  C081  F090         	movff	?___flmul+2,?_scale+2
  9333  01331A  C082  F091         	movff	?___flmul+3,?_scale+3
  9334  01331E  0012               	return	
  9335  013320  D06B               	goto	l7660
  9336  013322                     l7654:
  9337                           
  9338                           ;doprnt.c: 438: else if(scl > 10)
  9339  013322  0100               	movlb	0	; () banked
  9340  013324  5196               	movf	scale@scl& (0+255),w,b
  9341  013326  0A80               	xorlw	128
  9342  013328  0F75               	addlw	-139
  9343  01332A  A0D8               	btfss	status,0,c
  9344  01332C  D065               	goto	l7660
  9345                           
  9346                           ; BSR set to: 0
  9347                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9348  01332E  0E00               	movlw	0
  9349  013330  0100               	movlb	0	; () banked
  9350  013332  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9351  013334  0E0A               	movlw	10
  9352  013336  6F78               	movwf	___awdiv@divisor& (0+255),b
  9353  013338  0100               	movlb	0	; () banked
  9354  01333A  5196               	movf	scale@scl& (0+255),w,b
  9355  01333C  0100               	movlb	0	; () banked
  9356  01333E  6F76               	movwf	___awdiv@dividend& (0+255),b
  9357  013340  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  9358  013342  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  9359  013344  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9360  013346  EC8F  F0A8         	call	___awdiv	;wreg free
  9361  01334A  0100               	movlb	0	; () banked
  9362  01334C  90D8               	bcf	status,0,c
  9363  01334E  3776               	rlcf	?___awdiv& (0+255),f,b
  9364  013350  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9365  013352  0100               	movlb	0	; () banked
  9366  013354  90D8               	bcf	status,0,c
  9367  013356  3776               	rlcf	?___awdiv& (0+255),f,b
  9368  013358  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9369  01335A  0E24               	movlw	36
  9370  01335C  0100               	movlb	0	; () banked
  9371  01335E  2776               	addwf	?___awdiv& (0+255),f,b
  9372  013360  0E00               	movlw	0
  9373  013362  0100               	movlb	0	; () banked
  9374  013364  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9375  013366  0ED3               	movlw	low __powers_
  9376  013368  0100               	movlb	0	; () banked
  9377  01336A  2576               	addwf	?___awdiv& (0+255),w,b
  9378  01336C  6EF6               	movwf	tblptrl,c
  9379  01336E  0EFD               	movlw	high __powers_
  9380  013370  0100               	movlb	0	; () banked
  9381  013372  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9382  013374  6EF7               	movwf	tblptrh,c
  9383  013376                     	if	1	;There are 3 active tblptr bytes
  9384  013376  6AF8               	clrf	tblptru,c
  9385  013378  0E00               	movlw	low (__mediumconst shr (0+16))
  9386  01337A  22F8               	addwfc	tblptru,f,c
  9387  01337C                     	endif
  9388  01337C  0009               	tblrd		*+
  9389  01337E  CFF5 F07F          	movff	tablat,___flmul@f1
  9390  013382  0009               	tblrd		*+
  9391  013384  CFF5 F080          	movff	tablat,___flmul@f1+1
  9392  013388  0009               	tblrd		*+
  9393  01338A  CFF5 F081          	movff	tablat,___flmul@f1+2
  9394  01338E  000A               	tblrd		*-
  9395  013390  CFF5 F082          	movff	tablat,___flmul@f1+3
  9396  013394  0E00               	movlw	0
  9397  013396  0100               	movlb	0	; () banked
  9398  013398  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9399  01339A  0E0A               	movlw	10
  9400  01339C  6F72               	movwf	___awmod@divisor& (0+255),b
  9401  01339E  0100               	movlb	0	; () banked
  9402  0133A0  5196               	movf	scale@scl& (0+255),w,b
  9403  0133A2  0100               	movlb	0	; () banked
  9404  0133A4  6F70               	movwf	___awmod@dividend& (0+255),b
  9405  0133A6  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9406  0133A8  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  9407  0133AA  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  9408  0133AC  EC1C  F0AA         	call	___awmod	;wreg free
  9409  0133B0  0100               	movlb	0	; () banked
  9410  0133B2  90D8               	bcf	status,0,c
  9411  0133B4  3770               	rlcf	?___awmod& (0+255),f,b
  9412  0133B6  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9413  0133B8  0100               	movlb	0	; () banked
  9414  0133BA  90D8               	bcf	status,0,c
  9415  0133BC  3770               	rlcf	?___awmod& (0+255),f,b
  9416  0133BE  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9417  0133C0  0ED3               	movlw	low __powers_
  9418  0133C2  0100               	movlb	0	; () banked
  9419  0133C4  2570               	addwf	?___awmod& (0+255),w,b
  9420  0133C6  6EF6               	movwf	tblptrl,c
  9421  0133C8  0EFD               	movlw	high __powers_
  9422  0133CA  0100               	movlb	0	; () banked
  9423  0133CC  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9424  0133CE  6EF7               	movwf	tblptrh,c
  9425  0133D0                     	if	1	;There are 3 active tblptr bytes
  9426  0133D0  6AF8               	clrf	tblptru,c
  9427  0133D2  0E00               	movlw	low (__mediumconst shr (0+16))
  9428  0133D4  22F8               	addwfc	tblptru,f,c
  9429  0133D6                     	endif
  9430  0133D6  0009               	tblrd		*+
  9431  0133D8  CFF5 F083          	movff	tablat,___flmul@f2
  9432  0133DC  0009               	tblrd		*+
  9433  0133DE  CFF5 F084          	movff	tablat,___flmul@f2+1
  9434  0133E2  0009               	tblrd		*+
  9435  0133E4  CFF5 F085          	movff	tablat,___flmul@f2+2
  9436  0133E8  000A               	tblrd		*-
  9437  0133EA  CFF5 F086          	movff	tablat,___flmul@f2+3
  9438  0133EE  ECC2  F0A5         	call	___flmul	;wreg free
  9439  0133F2  D78D               	goto	L7
  9440  0133F4  0012               	return	
  9441  0133F6  D000               	goto	l7660
  9442  0133F8                     l7660:
  9443                           
  9444                           ;doprnt.c: 440: return _powers_[scl];
  9445  0133F8  0100               	movlb	0	; () banked
  9446  0133FA  5196               	movf	scale@scl& (0+255),w,b
  9447  0133FC  0D04               	mullw	4
  9448  0133FE  0ED3               	movlw	low __powers_
  9449  013400  24F3               	addwf	prodl,w,c
  9450  013402  6EF6               	movwf	tblptrl,c
  9451  013404  0EFD               	movlw	high __powers_
  9452  013406  20F4               	addwfc	prodh,w,c
  9453  013408  6EF7               	movwf	tblptrh,c
  9454  01340A                     	if	1	;There are 3 active tblptr bytes
  9455  01340A  6AF8               	clrf	tblptru,c
  9456  01340C  0E00               	movlw	low (__mediumconst shr (0+16))
  9457  01340E  22F8               	addwfc	tblptru,f,c
  9458  013410                     	endif
  9459  013410  0009               	tblrd		*+
  9460  013412  CFF5 F08E          	movff	tablat,?_scale
  9461  013416  0009               	tblrd		*+
  9462  013418  CFF5 F08F          	movff	tablat,?_scale+1
  9463  01341C  0009               	tblrd		*+
  9464  01341E  CFF5 F090          	movff	tablat,?_scale+2
  9465  013422  000A               	tblrd		*-
  9466  013424  CFF5 F091          	movff	tablat,?_scale+3
  9467  013428  0012               	return	
  9468                           
  9469                           ; BSR set to: 0
  9470  01342A  0012               	return		;funcret
  9471  01342C                     __end_of_scale:
  9472                           	opt stack 0
  9473                           tblptru	equ	0xFF8
  9474                           tblptrh	equ	0xFF7
  9475                           tblptrl	equ	0xFF6
  9476                           tablat	equ	0xFF5
  9477                           prodh	equ	0xFF4
  9478                           prodl	equ	0xFF3
  9479                           intcon	equ	0xFF2
  9480                           postinc0	equ	0xFEE
  9481                           wreg	equ	0xFE8
  9482                           indf2	equ	0xFDF
  9483                           postinc2	equ	0xFDE
  9484                           fsr2h	equ	0xFDA
  9485                           fsr2l	equ	0xFD9
  9486                           status	equ	0xFD8
  9487                           
  9488 ;; *************** function _isdigit *****************
  9489 ;; Defined at:
  9490 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;  c               1    wreg     unsigned char 
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;  c               1   18[BANK0 ] unsigned char 
  9495 ;; Return value:  Size  Location     Type
  9496 ;;		None               void
  9497 ;; Registers used:
  9498 ;;		wreg, status,2, status,0
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9505 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9506 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9507 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9508 ;;Total ram usage:        3 bytes
  9509 ;; Hardware stack levels used:    1
  9510 ;; Hardware stack levels required when called:    3
  9511 ;; This function calls:
  9512 ;;		Nothing
  9513 ;; This function is called by:
  9514 ;;		_sprintf
  9515 ;; This function uses a non-reentrant model
  9516 ;;
  9517                           
  9518                           	psect	text14
  9519  015E0E                     __ptext14:
  9520                           	opt stack 0
  9521  015E0E                     _isdigit:
  9522                           	opt stack 25
  9523                           
  9524                           ;incstack = 0
  9525                           ;isdigit@c stored from wreg
  9526  015E0E  0100               	movlb	0	; () banked
  9527  015E10  6F72               	movwf	isdigit@c& (0+255),b
  9528                           
  9529                           ; BSR set to: 0
  9530  015E12  0E00               	movlw	0
  9531  015E14  0100               	movlb	0	; () banked
  9532  015E16  6F71               	movwf	_isdigit$3910& (0+255),b
  9533                           
  9534                           ; BSR set to: 0
  9535  015E18  0E3A               	movlw	58
  9536  015E1A  0100               	movlb	0	; () banked
  9537  015E1C  6172               	cpfslt	isdigit@c& (0+255),b
  9538  015E1E  D008               	goto	l7672
  9539                           
  9540                           ; BSR set to: 0
  9541  015E20  0E2F               	movlw	47
  9542  015E22  0100               	movlb	0	; () banked
  9543  015E24  6572               	cpfsgt	isdigit@c& (0+255),b
  9544  015E26  D004               	goto	l7672
  9545                           
  9546                           ; BSR set to: 0
  9547  015E28  0E01               	movlw	1
  9548  015E2A  0100               	movlb	0	; () banked
  9549  015E2C  6F71               	movwf	_isdigit$3910& (0+255),b
  9550  015E2E  D000               	goto	l7672
  9551  015E30                     l7672:
  9552                           
  9553                           ; BSR set to: 0
  9554  015E30  C071  F070         	movff	_isdigit$3910,??_isdigit
  9555  015E34  0100               	movlb	0	; () banked
  9556  015E36  3170               	rrcf	??_isdigit& (0+255),w,b
  9557  015E38  0012               	return	
  9558                           
  9559                           ; BSR set to: 0
  9560                           
  9561                           ; BSR set to: 0
  9562  015E3A  0012               	return		;funcret
  9563  015E3C                     __end_of_isdigit:
  9564                           	opt stack 0
  9565                           tblptru	equ	0xFF8
  9566                           tblptrh	equ	0xFF7
  9567                           tblptrl	equ	0xFF6
  9568                           tablat	equ	0xFF5
  9569                           prodh	equ	0xFF4
  9570                           prodl	equ	0xFF3
  9571                           intcon	equ	0xFF2
  9572                           postinc0	equ	0xFEE
  9573                           wreg	equ	0xFE8
  9574                           indf2	equ	0xFDF
  9575                           postinc2	equ	0xFDE
  9576                           fsr2h	equ	0xFDA
  9577                           fsr2l	equ	0xFD9
  9578                           status	equ	0xFD8
  9579                           
  9580 ;; *************** function _fround *****************
  9581 ;; Defined at:
  9582 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;  prec            1    wreg     unsigned char 
  9585 ;; Auto vars:     Size  Location     Type
  9586 ;;  prec            1   58[BANK0 ] unsigned char 
  9587 ;; Return value:  Size  Location     Type
  9588 ;;                  4   46[BANK0 ] unsigned char 
  9589 ;; Registers used:
  9590 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9591 ;; Tracked objects:
  9592 ;;		On entry : 0/0
  9593 ;;		On exit  : 0/0
  9594 ;;		Unchanged: 0/0
  9595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9596 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9597 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9599 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;Total ram usage:       13 bytes
  9601 ;; Hardware stack levels used:    1
  9602 ;; Hardware stack levels required when called:    5
  9603 ;; This function calls:
  9604 ;;		___awdiv
  9605 ;;		___awmod
  9606 ;;		___flmul
  9607 ;; This function is called by:
  9608 ;;		_sprintf
  9609 ;; This function uses a non-reentrant model
  9610 ;;
  9611                           
  9612                           	psect	text15
  9613  0137D6                     __ptext15:
  9614                           	opt stack 0
  9615  0137D6                     _fround:
  9616                           	opt stack 23
  9617                           
  9618                           ; BSR set to: 0
  9619                           ;incstack = 0
  9620                           ;fround@prec stored from wreg
  9621  0137D6  0100               	movlb	0	; () banked
  9622  0137D8  6F9A               	movwf	fround@prec& (0+255),b
  9623                           
  9624                           ; BSR set to: 0
  9625                           ;doprnt.c: 413: if(prec>=110)
  9626  0137DA  0E6D               	movlw	109
  9627  0137DC  0100               	movlb	0	; () banked
  9628  0137DE  659A               	cpfsgt	fround@prec& (0+255),b
  9629  0137E0  D0CE               	goto	l7614
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9633  0137E2  0E00               	movlw	0
  9634  0137E4  0100               	movlb	0	; () banked
  9635  0137E6  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9636  0137E8  0E0A               	movlw	10
  9637  0137EA  6F78               	movwf	___awdiv@divisor& (0+255),b
  9638  0137EC  0E00               	movlw	0
  9639  0137EE  0100               	movlb	0	; () banked
  9640  0137F0  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9641  0137F2  0E64               	movlw	100
  9642  0137F4  6F72               	movwf	___awmod@divisor& (0+255),b
  9643  0137F6  C09A  F070         	movff	fround@prec,___awmod@dividend
  9644  0137FA  0100               	movlb	0	; () banked
  9645  0137FC  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9646  0137FE  EC1C  F0AA         	call	___awmod	;wreg free
  9647  013802  C070  F076         	movff	?___awmod,___awdiv@dividend
  9648  013806  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  9649  01380A  EC8F  F0A8         	call	___awdiv	;wreg free
  9650  01380E  0100               	movlb	0	; () banked
  9651  013810  90D8               	bcf	status,0,c
  9652  013812  3776               	rlcf	?___awdiv& (0+255),f,b
  9653  013814  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9654  013816  0100               	movlb	0	; () banked
  9655  013818  90D8               	bcf	status,0,c
  9656  01381A  3776               	rlcf	?___awdiv& (0+255),f,b
  9657  01381C  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9658  01381E  0E24               	movlw	36
  9659  013820  0100               	movlb	0	; () banked
  9660  013822  2776               	addwf	?___awdiv& (0+255),f,b
  9661  013824  0E00               	movlw	0
  9662  013826  0100               	movlb	0	; () banked
  9663  013828  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9664  01382A  0E9F               	movlw	low __npowers_
  9665  01382C  0100               	movlb	0	; () banked
  9666  01382E  2576               	addwf	?___awdiv& (0+255),w,b
  9667  013830  6EF6               	movwf	tblptrl,c
  9668  013832  0EFD               	movlw	high __npowers_
  9669  013834  0100               	movlb	0	; () banked
  9670  013836  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9671  013838  6EF7               	movwf	tblptrh,c
  9672  01383A                     	if	1	;There are 3 active tblptr bytes
  9673  01383A  6AF8               	clrf	tblptru,c
  9674  01383C  0E00               	movlw	low (__mediumconst shr (0+16))
  9675  01383E  22F8               	addwfc	tblptru,f,c
  9676  013840                     	endif
  9677  013840  0009               	tblrd		*+
  9678  013842  CFF5 F083          	movff	tablat,___flmul@f2
  9679  013846  0009               	tblrd		*+
  9680  013848  CFF5 F084          	movff	tablat,___flmul@f2+1
  9681  01384C  0009               	tblrd		*+
  9682  01384E  CFF5 F085          	movff	tablat,___flmul@f2+2
  9683  013852  000A               	tblrd		*-
  9684  013854  CFF5 F086          	movff	tablat,___flmul@f2+3
  9685  013858  0E00               	movlw	0
  9686  01385A  0100               	movlb	0	; () banked
  9687  01385C  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9688  01385E  0E64               	movlw	100
  9689  013860  6F78               	movwf	___awdiv@divisor& (0+255),b
  9690  013862  C09A  F076         	movff	fround@prec,___awdiv@dividend
  9691  013866  0100               	movlb	0	; () banked
  9692  013868  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  9693  01386A  EC8F  F0A8         	call	___awdiv	;wreg free
  9694  01386E  0100               	movlb	0	; () banked
  9695  013870  90D8               	bcf	status,0,c
  9696  013872  3776               	rlcf	?___awdiv& (0+255),f,b
  9697  013874  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9698  013876  0100               	movlb	0	; () banked
  9699  013878  90D8               	bcf	status,0,c
  9700  01387A  3776               	rlcf	?___awdiv& (0+255),f,b
  9701  01387C  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9702  01387E  0E48               	movlw	72
  9703  013880  0100               	movlb	0	; () banked
  9704  013882  2776               	addwf	?___awdiv& (0+255),f,b
  9705  013884  0E00               	movlw	0
  9706  013886  0100               	movlb	0	; () banked
  9707  013888  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9708  01388A  0E9F               	movlw	low __npowers_
  9709  01388C  0100               	movlb	0	; () banked
  9710  01388E  2576               	addwf	?___awdiv& (0+255),w,b
  9711  013890  6EF6               	movwf	tblptrl,c
  9712  013892  0EFD               	movlw	high __npowers_
  9713  013894  0100               	movlb	0	; () banked
  9714  013896  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9715  013898  6EF7               	movwf	tblptrh,c
  9716  01389A                     	if	1	;There are 3 active tblptr bytes
  9717  01389A  6AF8               	clrf	tblptru,c
  9718  01389C  0E00               	movlw	low (__mediumconst shr (0+16))
  9719  01389E  22F8               	addwfc	tblptru,f,c
  9720  0138A0                     	endif
  9721  0138A0  0009               	tblrd		*+
  9722  0138A2  CFF5 F07F          	movff	tablat,___flmul@f1
  9723  0138A6  0009               	tblrd		*+
  9724  0138A8  CFF5 F080          	movff	tablat,___flmul@f1+1
  9725  0138AC  0009               	tblrd		*+
  9726  0138AE  CFF5 F081          	movff	tablat,___flmul@f1+2
  9727  0138B2  000A               	tblrd		*-
  9728  0138B4  CFF5 F082          	movff	tablat,___flmul@f1+3
  9729  0138B8  ECC2  F0A5         	call	___flmul	;wreg free
  9730  0138BC  C07F  F096         	movff	?___flmul,_fround$4234
  9731  0138C0  C080  F097         	movff	?___flmul+1,_fround$4234+1
  9732  0138C4  C081  F098         	movff	?___flmul+2,_fround$4234+2
  9733  0138C8  C082  F099         	movff	?___flmul+3,_fround$4234+3
  9734                           
  9735                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9736  0138CC  0E00               	movlw	0
  9737  0138CE  0100               	movlb	0	; () banked
  9738  0138D0  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9739  0138D2  0E0A               	movlw	10
  9740  0138D4  6F72               	movwf	___awmod@divisor& (0+255),b
  9741  0138D6  C09A  F070         	movff	fround@prec,___awmod@dividend
  9742  0138DA  0100               	movlb	0	; () banked
  9743  0138DC  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9744  0138DE  EC1C  F0AA         	call	___awmod	;wreg free
  9745  0138E2  0100               	movlb	0	; () banked
  9746  0138E4  90D8               	bcf	status,0,c
  9747  0138E6  3770               	rlcf	?___awmod& (0+255),f,b
  9748  0138E8  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9749  0138EA  0100               	movlb	0	; () banked
  9750  0138EC  90D8               	bcf	status,0,c
  9751  0138EE  3770               	rlcf	?___awmod& (0+255),f,b
  9752  0138F0  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9753  0138F2  0E9F               	movlw	low __npowers_
  9754  0138F4  0100               	movlb	0	; () banked
  9755  0138F6  2570               	addwf	?___awmod& (0+255),w,b
  9756  0138F8  6EF6               	movwf	tblptrl,c
  9757  0138FA  0EFD               	movlw	high __npowers_
  9758  0138FC  0100               	movlb	0	; () banked
  9759  0138FE  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9760  013900  6EF7               	movwf	tblptrh,c
  9761  013902                     	if	1	;There are 3 active tblptr bytes
  9762  013902  6AF8               	clrf	tblptru,c
  9763  013904  0E00               	movlw	low (__mediumconst shr (0+16))
  9764  013906  22F8               	addwfc	tblptru,f,c
  9765  013908                     	endif
  9766  013908  0009               	tblrd		*+
  9767  01390A  CFF5 F083          	movff	tablat,___flmul@f2
  9768  01390E  0009               	tblrd		*+
  9769  013910  CFF5 F084          	movff	tablat,___flmul@f2+1
  9770  013914  0009               	tblrd		*+
  9771  013916  CFF5 F085          	movff	tablat,___flmul@f2+2
  9772  01391A  000A               	tblrd		*-
  9773  01391C  CFF5 F086          	movff	tablat,___flmul@f2+3
  9774  013920  C096  F07F         	movff	_fround$4234,___flmul@f1
  9775  013924  C097  F080         	movff	_fround$4234+1,___flmul@f1+1
  9776  013928  C098  F081         	movff	_fround$4234+2,___flmul@f1+2
  9777  01392C  C099  F082         	movff	_fround$4234+3,___flmul@f1+3
  9778  013930  ECC2  F0A5         	call	___flmul	;wreg free
  9779  013934  C07F  F092         	movff	?___flmul,_fround$4235
  9780  013938  C080  F093         	movff	?___flmul+1,_fround$4235+1
  9781  01393C  C081  F094         	movff	?___flmul+2,_fround$4235+2
  9782  013940  C082  F095         	movff	?___flmul+3,_fround$4235+3
  9783                           
  9784                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9785  013944  C092  F07F         	movff	_fround$4235,___flmul@f1
  9786  013948  C093  F080         	movff	_fround$4235+1,___flmul@f1+1
  9787  01394C  C094  F081         	movff	_fround$4235+2,___flmul@f1+2
  9788  013950  C095  F082         	movff	_fround$4235+3,___flmul@f1+3
  9789  013954  0E00               	movlw	0
  9790  013956  0100               	movlb	0	; () banked
  9791  013958  6F83               	movwf	___flmul@f2& (0+255),b
  9792  01395A  0E00               	movlw	0
  9793  01395C  6F84               	movwf	(___flmul@f2+1)& (0+255),b
  9794  01395E  0E00               	movlw	0
  9795  013960  6F85               	movwf	(___flmul@f2+2)& (0+255),b
  9796  013962  0E3F               	movlw	63
  9797  013964  6F86               	movwf	(___flmul@f2+3)& (0+255),b
  9798  013966  ECC2  F0A5         	call	___flmul	;wreg free
  9799  01396A  C07F  F08E         	movff	?___flmul,?_fround
  9800  01396E  C080  F08F         	movff	?___flmul+1,?_fround+1
  9801  013972  C081  F090         	movff	?___flmul+2,?_fround+2
  9802  013976  C082  F091         	movff	?___flmul+3,?_fround+3
  9803  01397A  0012               	return	
  9804  01397C  D07E               	goto	l7622
  9805  01397E                     l7614:
  9806                           
  9807                           ;doprnt.c: 415: else if(prec > 10)
  9808  01397E  0E0A               	movlw	10
  9809  013980  0100               	movlb	0	; () banked
  9810  013982  659A               	cpfsgt	fround@prec& (0+255),b
  9811  013984  D07A               	goto	l7622
  9812                           
  9813                           ; BSR set to: 0
  9814                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9815  013986  0E00               	movlw	0
  9816  013988  0100               	movlb	0	; () banked
  9817  01398A  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9818  01398C  0E0A               	movlw	10
  9819  01398E  6F72               	movwf	___awmod@divisor& (0+255),b
  9820  013990  C09A  F070         	movff	fround@prec,___awmod@dividend
  9821  013994  0100               	movlb	0	; () banked
  9822  013996  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9823  013998  EC1C  F0AA         	call	___awmod	;wreg free
  9824  01399C  0100               	movlb	0	; () banked
  9825  01399E  90D8               	bcf	status,0,c
  9826  0139A0  3770               	rlcf	?___awmod& (0+255),f,b
  9827  0139A2  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9828  0139A4  0100               	movlb	0	; () banked
  9829  0139A6  90D8               	bcf	status,0,c
  9830  0139A8  3770               	rlcf	?___awmod& (0+255),f,b
  9831  0139AA  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9832  0139AC  0E9F               	movlw	low __npowers_
  9833  0139AE  0100               	movlb	0	; () banked
  9834  0139B0  2570               	addwf	?___awmod& (0+255),w,b
  9835  0139B2  6EF6               	movwf	tblptrl,c
  9836  0139B4  0EFD               	movlw	high __npowers_
  9837  0139B6  0100               	movlb	0	; () banked
  9838  0139B8  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9839  0139BA  6EF7               	movwf	tblptrh,c
  9840  0139BC                     	if	1	;There are 3 active tblptr bytes
  9841  0139BC  6AF8               	clrf	tblptru,c
  9842  0139BE  0E00               	movlw	low (__mediumconst shr (0+16))
  9843  0139C0  22F8               	addwfc	tblptru,f,c
  9844  0139C2                     	endif
  9845  0139C2  0009               	tblrd		*+
  9846  0139C4  CFF5 F083          	movff	tablat,___flmul@f2
  9847  0139C8  0009               	tblrd		*+
  9848  0139CA  CFF5 F084          	movff	tablat,___flmul@f2+1
  9849  0139CE  0009               	tblrd		*+
  9850  0139D0  CFF5 F085          	movff	tablat,___flmul@f2+2
  9851  0139D4  000A               	tblrd		*-
  9852  0139D6  CFF5 F086          	movff	tablat,___flmul@f2+3
  9853  0139DA  0E00               	movlw	0
  9854  0139DC  0100               	movlb	0	; () banked
  9855  0139DE  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9856  0139E0  0E0A               	movlw	10
  9857  0139E2  6F78               	movwf	___awdiv@divisor& (0+255),b
  9858  0139E4  C09A  F076         	movff	fround@prec,___awdiv@dividend
  9859  0139E8  0100               	movlb	0	; () banked
  9860  0139EA  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  9861  0139EC  EC8F  F0A8         	call	___awdiv	;wreg free
  9862  0139F0  0100               	movlb	0	; () banked
  9863  0139F2  90D8               	bcf	status,0,c
  9864  0139F4  3776               	rlcf	?___awdiv& (0+255),f,b
  9865  0139F6  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9866  0139F8  0100               	movlb	0	; () banked
  9867  0139FA  90D8               	bcf	status,0,c
  9868  0139FC  3776               	rlcf	?___awdiv& (0+255),f,b
  9869  0139FE  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9870  013A00  0E24               	movlw	36
  9871  013A02  0100               	movlb	0	; () banked
  9872  013A04  2776               	addwf	?___awdiv& (0+255),f,b
  9873  013A06  0E00               	movlw	0
  9874  013A08  0100               	movlb	0	; () banked
  9875  013A0A  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9876  013A0C  0E9F               	movlw	low __npowers_
  9877  013A0E  0100               	movlb	0	; () banked
  9878  013A10  2576               	addwf	?___awdiv& (0+255),w,b
  9879  013A12  6EF6               	movwf	tblptrl,c
  9880  013A14  0EFD               	movlw	high __npowers_
  9881  013A16  0100               	movlb	0	; () banked
  9882  013A18  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9883  013A1A  6EF7               	movwf	tblptrh,c
  9884  013A1C                     	if	1	;There are 3 active tblptr bytes
  9885  013A1C  6AF8               	clrf	tblptru,c
  9886  013A1E  0E00               	movlw	low (__mediumconst shr (0+16))
  9887  013A20  22F8               	addwfc	tblptru,f,c
  9888  013A22                     	endif
  9889  013A22  0009               	tblrd		*+
  9890  013A24  CFF5 F07F          	movff	tablat,___flmul@f1
  9891  013A28  0009               	tblrd		*+
  9892  013A2A  CFF5 F080          	movff	tablat,___flmul@f1+1
  9893  013A2E  0009               	tblrd		*+
  9894  013A30  CFF5 F081          	movff	tablat,___flmul@f1+2
  9895  013A34  000A               	tblrd		*-
  9896  013A36  CFF5 F082          	movff	tablat,___flmul@f1+3
  9897  013A3A  ECC2  F0A5         	call	___flmul	;wreg free
  9898  013A3E  C07F  F096         	movff	?___flmul,_fround$4234
  9899  013A42  C080  F097         	movff	?___flmul+1,_fround$4234+1
  9900  013A46  C081  F098         	movff	?___flmul+2,_fround$4234+2
  9901  013A4A  C082  F099         	movff	?___flmul+3,_fround$4234+3
  9902                           
  9903                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9904  013A4E  C096  F07F         	movff	_fround$4234,___flmul@f1
  9905  013A52  C097  F080         	movff	_fround$4234+1,___flmul@f1+1
  9906  013A56  C098  F081         	movff	_fround$4234+2,___flmul@f1+2
  9907  013A5A  C099  F082         	movff	_fround$4234+3,___flmul@f1+3
  9908  013A5E  0E00               	movlw	0
  9909  013A60  0100               	movlb	0	; () banked
  9910  013A62  6F83               	movwf	___flmul@f2& (0+255),b
  9911  013A64  0E00               	movlw	0
  9912  013A66  6F84               	movwf	(___flmul@f2+1)& (0+255),b
  9913  013A68  0E00               	movlw	0
  9914  013A6A  6F85               	movwf	(___flmul@f2+2)& (0+255),b
  9915  013A6C  0E3F               	movlw	63
  9916  013A6E  6F86               	movwf	(___flmul@f2+3)& (0+255),b
  9917  013A70  ECC2  F0A5         	call	___flmul	;wreg free
  9918  013A74  D77A               	goto	L8
  9919  013A76  0012               	return	
  9920  013A78  D000               	goto	l7622
  9921  013A7A                     l7622:
  9922                           
  9923                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9924  013A7A  0100               	movlb	0	; () banked
  9925  013A7C  519A               	movf	fround@prec& (0+255),w,b
  9926  013A7E  0D04               	mullw	4
  9927  013A80  0E9F               	movlw	low __npowers_
  9928  013A82  24F3               	addwf	prodl,w,c
  9929  013A84  6EF6               	movwf	tblptrl,c
  9930  013A86  0EFD               	movlw	high __npowers_
  9931  013A88  20F4               	addwfc	prodh,w,c
  9932  013A8A  6EF7               	movwf	tblptrh,c
  9933  013A8C                     	if	1	;There are 3 active tblptr bytes
  9934  013A8C  6AF8               	clrf	tblptru,c
  9935  013A8E  0E00               	movlw	low (__mediumconst shr (0+16))
  9936  013A90  22F8               	addwfc	tblptru,f,c
  9937  013A92                     	endif
  9938  013A92  0009               	tblrd		*+
  9939  013A94  CFF5 F07F          	movff	tablat,___flmul@f1
  9940  013A98  0009               	tblrd		*+
  9941  013A9A  CFF5 F080          	movff	tablat,___flmul@f1+1
  9942  013A9E  0009               	tblrd		*+
  9943  013AA0  CFF5 F081          	movff	tablat,___flmul@f1+2
  9944  013AA4  000A               	tblrd		*-
  9945  013AA6  CFF5 F082          	movff	tablat,___flmul@f1+3
  9946  013AAA  0E00               	movlw	0
  9947  013AAC  0100               	movlb	0	; () banked
  9948  013AAE  6F83               	movwf	___flmul@f2& (0+255),b
  9949  013AB0  0E00               	movlw	0
  9950  013AB2  6F84               	movwf	(___flmul@f2+1)& (0+255),b
  9951  013AB4  0E00               	movlw	0
  9952  013AB6  6F85               	movwf	(___flmul@f2+2)& (0+255),b
  9953  013AB8  0E3F               	movlw	63
  9954  013ABA  6F86               	movwf	(___flmul@f2+3)& (0+255),b
  9955  013ABC  ECC2  F0A5         	call	___flmul	;wreg free
  9956  013AC0  C07F  F08E         	movff	?___flmul,?_fround
  9957  013AC4  C080  F08F         	movff	?___flmul+1,?_fround+1
  9958  013AC8  C081  F090         	movff	?___flmul+2,?_fround+2
  9959  013ACC  C082  F091         	movff	?___flmul+3,?_fround+3
  9960  013AD0  0012               	return	
  9961  013AD2  0012               	return		;funcret
  9962  013AD4                     __end_of_fround:
  9963                           	opt stack 0
  9964                           tblptru	equ	0xFF8
  9965                           tblptrh	equ	0xFF7
  9966                           tblptrl	equ	0xFF6
  9967                           tablat	equ	0xFF5
  9968                           prodh	equ	0xFF4
  9969                           prodl	equ	0xFF3
  9970                           intcon	equ	0xFF2
  9971                           postinc0	equ	0xFEE
  9972                           wreg	equ	0xFE8
  9973                           indf2	equ	0xFDF
  9974                           postinc2	equ	0xFDE
  9975                           fsr2h	equ	0xFDA
  9976                           fsr2l	equ	0xFD9
  9977                           status	equ	0xFD8
  9978                           
  9979 ;; *************** function ___flmul *****************
  9980 ;; Defined at:
  9981 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flmul.c"
  9982 ;; Parameters:    Size  Location     Type
  9983 ;;  f1              4   31[BANK0 ] unsigned char 
  9984 ;;  f2              4   35[BANK0 ] unsigned char 
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;  f3_as_produc    4   40[BANK0 ] unsigned long 
  9987 ;;  sign            1   45[BANK0 ] unsigned char 
  9988 ;;  cntr            1   44[BANK0 ] unsigned char 
  9989 ;;  exp             1   39[BANK0 ] unsigned char 
  9990 ;; Return value:  Size  Location     Type
  9991 ;;                  4   31[BANK0 ] unsigned char 
  9992 ;; Registers used:
  9993 ;;		wreg, status,2, status,0, cstack
  9994 ;; Tracked objects:
  9995 ;;		On entry : 0/0
  9996 ;;		On exit  : 0/0
  9997 ;;		Unchanged: 0/0
  9998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9999 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10000 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10002 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10003 ;;Total ram usage:       15 bytes
 10004 ;; Hardware stack levels used:    1
 10005 ;; Hardware stack levels required when called:    4
 10006 ;; This function calls:
 10007 ;;		___flpack
 10008 ;; This function is called by:
 10009 ;;		_main
 10010 ;;		_fround
 10011 ;;		_scale
 10012 ;;		_sprintf
 10013 ;; This function uses a non-reentrant model
 10014 ;;
 10015                           
 10016                           	psect	text16
 10017  014B84                     __ptext16:
 10018                           	opt stack 0
 10019  014B84                     ___flmul:
 10020                           	opt stack 26
 10021                           
 10022                           ;incstack = 0
 10023  014B84  0100               	movlb	0	; () banked
 10024  014B86  3581               	rlcf	(___flmul@f1+2)& (0+255),w,b
 10025  014B88  3582               	rlcf	(___flmul@f1+3)& (0+255),w,b
 10026  014B8A  0100               	movlb	0	; () banked
 10027  014B8C  6F87               	movwf	___flmul@exp& (0+255),b
 10028  014B8E  0100               	movlb	0	; () banked
 10029  014B90  5187               	movf	___flmul@exp& (0+255),w,b
 10030  014B92  A4D8               	btfss	status,2,c
 10031  014B94  D00A               	goto	l7448
 10032                           
 10033                           ; BSR set to: 0
 10034  014B96  0E00               	movlw	0
 10035  014B98  0100               	movlb	0	; () banked
 10036  014B9A  6F7F               	movwf	?___flmul& (0+255),b
 10037  014B9C  0E00               	movlw	0
 10038  014B9E  6F80               	movwf	(?___flmul+1)& (0+255),b
 10039  014BA0  0E00               	movlw	0
 10040  014BA2  6F81               	movwf	(?___flmul+2)& (0+255),b
 10041  014BA4  0E00               	movlw	0
 10042  014BA6  6F82               	movwf	(?___flmul+3)& (0+255),b
 10043                           
 10044                           ; BSR set to: 0
 10045  014BA8  0012               	return	
 10046  014BAA                     l7448:
 10047                           
 10048                           ; BSR set to: 0
 10049  014BAA  0100               	movlb	0	; () banked
 10050  014BAC  3585               	rlcf	(___flmul@f2+2)& (0+255),w,b
 10051  014BAE  3586               	rlcf	(___flmul@f2+3)& (0+255),w,b
 10052  014BB0  0100               	movlb	0	; () banked
 10053  014BB2  6F8D               	movwf	___flmul@sign& (0+255),b
 10054  014BB4  0100               	movlb	0	; () banked
 10055  014BB6  518D               	movf	___flmul@sign& (0+255),w,b
 10056  014BB8  A4D8               	btfss	status,2,c
 10057  014BBA  D00A               	goto	l7454
 10058                           
 10059                           ; BSR set to: 0
 10060  014BBC  0E00               	movlw	0
 10061  014BBE  0100               	movlb	0	; () banked
 10062  014BC0  6F7F               	movwf	?___flmul& (0+255),b
 10063  014BC2  0E00               	movlw	0
 10064  014BC4  6F80               	movwf	(?___flmul+1)& (0+255),b
 10065  014BC6  0E00               	movlw	0
 10066  014BC8  6F81               	movwf	(?___flmul+2)& (0+255),b
 10067  014BCA  0E00               	movlw	0
 10068  014BCC  6F82               	movwf	(?___flmul+3)& (0+255),b
 10069                           
 10070                           ; BSR set to: 0
 10071  014BCE  0012               	return	
 10072  014BD0                     l7454:
 10073                           
 10074                           ; BSR set to: 0
 10075  014BD0  0100               	movlb	0	; () banked
 10076  014BD2  518D               	movf	___flmul@sign& (0+255),w,b
 10077  014BD4  0F7B               	addlw	123
 10078  014BD6  0100               	movlb	0	; () banked
 10079  014BD8  2787               	addwf	___flmul@exp& (0+255),f,b
 10080                           
 10081                           ; BSR set to: 0
 10082  014BDA  C082  F08D         	movff	___flmul@f1+3,___flmul@sign
 10083  014BDE  0100               	movlb	0	; () banked
 10084  014BE0  5186               	movf	(___flmul@f2+3)& (0+255),w,b
 10085  014BE2  0100               	movlb	0	; () banked
 10086  014BE4  1B8D               	xorwf	___flmul@sign& (0+255),f,b
 10087  014BE6  0E80               	movlw	128
 10088  014BE8  0100               	movlb	0	; () banked
 10089  014BEA  178D               	andwf	___flmul@sign& (0+255),f,b
 10090                           
 10091                           ; BSR set to: 0
 10092  014BEC  0100               	movlb	0	; () banked
 10093  014BEE  8F81               	bsf	(___flmul@f1+2)& (0+255),7,b
 10094                           
 10095                           ; BSR set to: 0
 10096  014BF0  0100               	movlb	0	; () banked
 10097  014BF2  8F85               	bsf	(___flmul@f2+2)& (0+255),7,b
 10098  014BF4  0EFF               	movlw	255
 10099  014BF6  0100               	movlb	0	; () banked
 10100  014BF8  1783               	andwf	___flmul@f2& (0+255),f,b
 10101  014BFA  0EFF               	movlw	255
 10102  014BFC  1784               	andwf	(___flmul@f2+1)& (0+255),f,b
 10103  014BFE  0EFF               	movlw	255
 10104  014C00  1785               	andwf	(___flmul@f2+2)& (0+255),f,b
 10105  014C02  0E00               	movlw	0
 10106  014C04  1786               	andwf	(___flmul@f2+3)& (0+255),f,b
 10107                           
 10108                           ; BSR set to: 0
 10109  014C06  0E00               	movlw	0
 10110  014C08  0100               	movlb	0	; () banked
 10111  014C0A  6F88               	movwf	___flmul@f3_as_product& (0+255),b
 10112  014C0C  0E00               	movlw	0
 10113  014C0E  6F89               	movwf	(___flmul@f3_as_product+1)& (0+255),b
 10114  014C10  0E00               	movlw	0
 10115  014C12  6F8A               	movwf	(___flmul@f3_as_product+2)& (0+255),b
 10116  014C14  0E00               	movlw	0
 10117  014C16  6F8B               	movwf	(___flmul@f3_as_product+3)& (0+255),b
 10118                           
 10119                           ; BSR set to: 0
 10120  014C18  0E07               	movlw	7
 10121  014C1A  0100               	movlb	0	; () banked
 10122  014C1C  6F8C               	movwf	___flmul@cntr& (0+255),b
 10123  014C1E  D000               	goto	l7466
 10124  014C20                     l7466:
 10125                           
 10126                           ; BSR set to: 0
 10127  014C20  0100               	movlb	0	; () banked
 10128  014C22  A17F               	btfss	___flmul@f1& (0+255),0,b
 10129  014C24  D011               	goto	l7470
 10130                           
 10131                           ; BSR set to: 0
 10132  014C26  0100               	movlb	0	; () banked
 10133  014C28  5183               	movf	___flmul@f2& (0+255),w,b
 10134  014C2A  0100               	movlb	0	; () banked
 10135  014C2C  2788               	addwf	___flmul@f3_as_product& (0+255),f,b
 10136  014C2E  0100               	movlb	0	; () banked
 10137  014C30  5184               	movf	(___flmul@f2+1)& (0+255),w,b
 10138  014C32  0100               	movlb	0	; () banked
 10139  014C34  2389               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
 10140  014C36  0100               	movlb	0	; () banked
 10141  014C38  5185               	movf	(___flmul@f2+2)& (0+255),w,b
 10142  014C3A  0100               	movlb	0	; () banked
 10143  014C3C  238A               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
 10144  014C3E  0100               	movlb	0	; () banked
 10145  014C40  5186               	movf	(___flmul@f2+3)& (0+255),w,b
 10146  014C42  0100               	movlb	0	; () banked
 10147  014C44  238B               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
 10148  014C46  D000               	goto	l7470
 10149  014C48                     l7470:
 10150                           
 10151                           ; BSR set to: 0
 10152  014C48  0100               	movlb	0	; () banked
 10153  014C4A  90D8               	bcf	status,0,c
 10154  014C4C  3382               	rrcf	(___flmul@f1+3)& (0+255),f,b
 10155  014C4E  3381               	rrcf	(___flmul@f1+2)& (0+255),f,b
 10156  014C50  3380               	rrcf	(___flmul@f1+1)& (0+255),f,b
 10157  014C52  337F               	rrcf	___flmul@f1& (0+255),f,b
 10158                           
 10159                           ; BSR set to: 0
 10160  014C54  0100               	movlb	0	; () banked
 10161  014C56  90D8               	bcf	status,0,c
 10162  014C58  3783               	rlcf	___flmul@f2& (0+255),f,b
 10163  014C5A  3784               	rlcf	(___flmul@f2+1)& (0+255),f,b
 10164  014C5C  3785               	rlcf	(___flmul@f2+2)& (0+255),f,b
 10165  014C5E  3786               	rlcf	(___flmul@f2+3)& (0+255),f,b
 10166                           
 10167                           ; BSR set to: 0
 10168  014C60  0100               	movlb	0	; () banked
 10169  014C62  2F8C               	decfsz	___flmul@cntr& (0+255),f,b
 10170  014C64  D7DD               	goto	l7466
 10171  014C66  D000               	goto	l7476
 10172  014C68                     l7476:
 10173                           
 10174                           ; BSR set to: 0
 10175  014C68  0E11               	movlw	17
 10176  014C6A  0100               	movlb	0	; () banked
 10177  014C6C  6F8C               	movwf	___flmul@cntr& (0+255),b
 10178  014C6E  D000               	goto	l7478
 10179  014C70                     l7478:
 10180                           
 10181                           ; BSR set to: 0
 10182  014C70  0100               	movlb	0	; () banked
 10183  014C72  A17F               	btfss	___flmul@f1& (0+255),0,b
 10184  014C74  D011               	goto	l7482
 10185                           
 10186                           ; BSR set to: 0
 10187  014C76  0100               	movlb	0	; () banked
 10188  014C78  5183               	movf	___flmul@f2& (0+255),w,b
 10189  014C7A  0100               	movlb	0	; () banked
 10190  014C7C  2788               	addwf	___flmul@f3_as_product& (0+255),f,b
 10191  014C7E  0100               	movlb	0	; () banked
 10192  014C80  5184               	movf	(___flmul@f2+1)& (0+255),w,b
 10193  014C82  0100               	movlb	0	; () banked
 10194  014C84  2389               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
 10195  014C86  0100               	movlb	0	; () banked
 10196  014C88  5185               	movf	(___flmul@f2+2)& (0+255),w,b
 10197  014C8A  0100               	movlb	0	; () banked
 10198  014C8C  238A               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
 10199  014C8E  0100               	movlb	0	; () banked
 10200  014C90  5186               	movf	(___flmul@f2+3)& (0+255),w,b
 10201  014C92  0100               	movlb	0	; () banked
 10202  014C94  238B               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
 10203  014C96  D000               	goto	l7482
 10204  014C98                     l7482:
 10205                           
 10206                           ; BSR set to: 0
 10207  014C98  0100               	movlb	0	; () banked
 10208  014C9A  90D8               	bcf	status,0,c
 10209  014C9C  3382               	rrcf	(___flmul@f1+3)& (0+255),f,b
 10210  014C9E  3381               	rrcf	(___flmul@f1+2)& (0+255),f,b
 10211  014CA0  3380               	rrcf	(___flmul@f1+1)& (0+255),f,b
 10212  014CA2  337F               	rrcf	___flmul@f1& (0+255),f,b
 10213                           
 10214                           ; BSR set to: 0
 10215  014CA4  0100               	movlb	0	; () banked
 10216  014CA6  90D8               	bcf	status,0,c
 10217  014CA8  338B               	rrcf	(___flmul@f3_as_product+3)& (0+255),f,b
 10218  014CAA  338A               	rrcf	(___flmul@f3_as_product+2)& (0+255),f,b
 10219  014CAC  3389               	rrcf	(___flmul@f3_as_product+1)& (0+255),f,b
 10220  014CAE  3388               	rrcf	___flmul@f3_as_product& (0+255),f,b
 10221                           
 10222                           ; BSR set to: 0
 10223  014CB0  0100               	movlb	0	; () banked
 10224  014CB2  2F8C               	decfsz	___flmul@cntr& (0+255),f,b
 10225  014CB4  D7DD               	goto	l7478
 10226  014CB6  D000               	goto	l7488
 10227  014CB8                     l7488:
 10228                           
 10229                           ; BSR set to: 0
 10230  014CB8  C088  F070         	movff	___flmul@f3_as_product,___flpack@arg
 10231  014CBC  C089  F071         	movff	___flmul@f3_as_product+1,___flpack@arg+1
 10232  014CC0  C08A  F072         	movff	___flmul@f3_as_product+2,___flpack@arg+2
 10233  014CC4  C08B  F073         	movff	___flmul@f3_as_product+3,___flpack@arg+3
 10234  014CC8  C087  F074         	movff	___flmul@exp,___flpack@exp
 10235  014CCC  C08D  F075         	movff	___flmul@sign,___flpack@sign
 10236  014CD0  EC4B  F0A4         	call	___flpack	;wreg free
 10237  014CD4  C070  F07F         	movff	?___flpack,?___flmul
 10238  014CD8  C071  F080         	movff	?___flpack+1,?___flmul+1
 10239  014CDC  C072  F081         	movff	?___flpack+2,?___flmul+2
 10240  014CE0  C073  F082         	movff	?___flpack+3,?___flmul+3
 10241  014CE4  0012               	return	
 10242  014CE6  0012               	return		;funcret
 10243  014CE8                     __end_of___flmul:
 10244                           	opt stack 0
 10245                           tblptru	equ	0xFF8
 10246                           tblptrh	equ	0xFF7
 10247                           tblptrl	equ	0xFF6
 10248                           tablat	equ	0xFF5
 10249                           prodh	equ	0xFF4
 10250                           prodl	equ	0xFF3
 10251                           intcon	equ	0xFF2
 10252                           postinc0	equ	0xFEE
 10253                           wreg	equ	0xFE8
 10254                           indf2	equ	0xFDF
 10255                           postinc2	equ	0xFDE
 10256                           fsr2h	equ	0xFDA
 10257                           fsr2l	equ	0xFD9
 10258                           status	equ	0xFD8
 10259                           
 10260 ;; *************** function ___awmod *****************
 10261 ;; Defined at:
 10262 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;  dividend        2   16[BANK0 ] int 
 10265 ;;  divisor         2   18[BANK0 ] int 
 10266 ;; Auto vars:     Size  Location     Type
 10267 ;;  sign            1   21[BANK0 ] unsigned char 
 10268 ;;  counter         1   20[BANK0 ] unsigned char 
 10269 ;; Return value:  Size  Location     Type
 10270 ;;                  2   16[BANK0 ] int 
 10271 ;; Registers used:
 10272 ;;		wreg, status,2, status,0
 10273 ;; Tracked objects:
 10274 ;;		On entry : 0/0
 10275 ;;		On exit  : 0/0
 10276 ;;		Unchanged: 0/0
 10277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10278 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10279 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10281 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10282 ;;Total ram usage:        6 bytes
 10283 ;; Hardware stack levels used:    1
 10284 ;; Hardware stack levels required when called:    3
 10285 ;; This function calls:
 10286 ;;		Nothing
 10287 ;; This function is called by:
 10288 ;;		_fround
 10289 ;;		_scale
 10290 ;; This function uses a non-reentrant model
 10291 ;;
 10292                           
 10293                           	psect	text17
 10294  015438                     __ptext17:
 10295                           	opt stack 0
 10296  015438                     ___awmod:
 10297                           	opt stack 24
 10298                           
 10299                           ;incstack = 0
 10300  015438  0E00               	movlw	0
 10301  01543A  0100               	movlb	0	; () banked
 10302  01543C  6F75               	movwf	___awmod@sign& (0+255),b
 10303                           
 10304                           ; BSR set to: 0
 10305  01543E  0100               	movlb	0	; () banked
 10306  015440  AF71               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10307  015442  D009               	goto	l7544
 10308                           
 10309                           ; BSR set to: 0
 10310  015444  0100               	movlb	0	; () banked
 10311  015446  6D70               	negf	___awmod@dividend& (0+255),b
 10312  015448  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
 10313  01544A  B0D8               	btfsc	status,0,c
 10314  01544C  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
 10315                           
 10316                           ; BSR set to: 0
 10317  01544E  0E01               	movlw	1
 10318  015450  0100               	movlb	0	; () banked
 10319  015452  6F75               	movwf	___awmod@sign& (0+255),b
 10320  015454  D000               	goto	l7544
 10321  015456                     l7544:
 10322                           
 10323                           ; BSR set to: 0
 10324  015456  0100               	movlb	0	; () banked
 10325  015458  AF73               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10326  01545A  D006               	goto	l7548
 10327                           
 10328                           ; BSR set to: 0
 10329  01545C  0100               	movlb	0	; () banked
 10330  01545E  6D72               	negf	___awmod@divisor& (0+255),b
 10331  015460  1F73               	comf	(___awmod@divisor+1)& (0+255),f,b
 10332  015462  B0D8               	btfsc	status,0,c
 10333  015464  2B73               	incf	(___awmod@divisor+1)& (0+255),f,b
 10334  015466  D000               	goto	l7548
 10335  015468                     l7548:
 10336                           
 10337                           ; BSR set to: 0
 10338  015468  0100               	movlb	0	; () banked
 10339  01546A  5172               	movf	___awmod@divisor& (0+255),w,b
 10340  01546C  0100               	movlb	0	; () banked
 10341  01546E  1173               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10342  015470  B4D8               	btfsc	status,2,c
 10343  015472  D02B               	goto	l7564
 10344                           
 10345                           ; BSR set to: 0
 10346  015474  0E01               	movlw	1
 10347  015476  0100               	movlb	0	; () banked
 10348  015478  6F74               	movwf	___awmod@counter& (0+255),b
 10349  01547A  D007               	goto	l7554
 10350  01547C                     l7552:
 10351                           
 10352                           ; BSR set to: 0
 10353  01547C  0100               	movlb	0	; () banked
 10354  01547E  90D8               	bcf	status,0,c
 10355  015480  3772               	rlcf	___awmod@divisor& (0+255),f,b
 10356  015482  3773               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10357  015484  0100               	movlb	0	; () banked
 10358  015486  2B74               	incf	___awmod@counter& (0+255),f,b
 10359  015488  D000               	goto	l7554
 10360  01548A                     l7554:
 10361                           
 10362                           ; BSR set to: 0
 10363  01548A  0100               	movlb	0	; () banked
 10364  01548C  BF73               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 10365  01548E  D002               	goto	l7556
 10366  015490  D7F5               	goto	l7552
 10367                           
 10368                           ; BSR set to: 0
 10369  015492  D000               	goto	l7556
 10370  015494                     l7556:
 10371                           
 10372                           ; BSR set to: 0
 10373  015494  0100               	movlb	0	; () banked
 10374  015496  5172               	movf	___awmod@divisor& (0+255),w,b
 10375  015498  0100               	movlb	0	; () banked
 10376  01549A  5D70               	subwf	___awmod@dividend& (0+255),w,b
 10377  01549C  0100               	movlb	0	; () banked
 10378  01549E  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
 10379  0154A0  0100               	movlb	0	; () banked
 10380  0154A2  5971               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10381  0154A4  A0D8               	btfss	status,0,c
 10382  0154A6  D009               	goto	l7560
 10383                           
 10384                           ; BSR set to: 0
 10385  0154A8  0100               	movlb	0	; () banked
 10386  0154AA  5172               	movf	___awmod@divisor& (0+255),w,b
 10387  0154AC  0100               	movlb	0	; () banked
 10388  0154AE  5F70               	subwf	___awmod@dividend& (0+255),f,b
 10389  0154B0  0100               	movlb	0	; () banked
 10390  0154B2  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
 10391  0154B4  0100               	movlb	0	; () banked
 10392  0154B6  5B71               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10393  0154B8  D000               	goto	l7560
 10394  0154BA                     l7560:
 10395                           
 10396                           ; BSR set to: 0
 10397  0154BA  0100               	movlb	0	; () banked
 10398  0154BC  90D8               	bcf	status,0,c
 10399  0154BE  3373               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10400  0154C0  3372               	rrcf	___awmod@divisor& (0+255),f,b
 10401                           
 10402                           ; BSR set to: 0
 10403  0154C2  0100               	movlb	0	; () banked
 10404  0154C4  2F74               	decfsz	___awmod@counter& (0+255),f,b
 10405  0154C6  D7E6               	goto	l7556
 10406                           
 10407                           ; BSR set to: 0
 10408  0154C8  D000               	goto	l7564
 10409  0154CA                     l7564:
 10410                           
 10411                           ; BSR set to: 0
 10412  0154CA  0100               	movlb	0	; () banked
 10413  0154CC  5175               	movf	___awmod@sign& (0+255),w,b
 10414  0154CE  0100               	movlb	0	; () banked
 10415  0154D0  B4D8               	btfsc	status,2,c
 10416  0154D2  D006               	goto	l7568
 10417                           
 10418                           ; BSR set to: 0
 10419  0154D4  0100               	movlb	0	; () banked
 10420  0154D6  6D70               	negf	___awmod@dividend& (0+255),b
 10421  0154D8  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
 10422  0154DA  B0D8               	btfsc	status,0,c
 10423  0154DC  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
 10424  0154DE  D000               	goto	l7568
 10425  0154E0                     l7568:
 10426                           
 10427                           ; BSR set to: 0
 10428  0154E0  C070  F070         	movff	___awmod@dividend,?___awmod
 10429  0154E4  C071  F071         	movff	___awmod@dividend+1,?___awmod+1
 10430  0154E8  0012               	return	
 10431                           
 10432                           ; BSR set to: 0
 10433                           
 10434                           ; BSR set to: 0
 10435  0154EA  0012               	return		;funcret
 10436  0154EC                     __end_of___awmod:
 10437                           	opt stack 0
 10438                           tblptru	equ	0xFF8
 10439                           tblptrh	equ	0xFF7
 10440                           tblptrl	equ	0xFF6
 10441                           tablat	equ	0xFF5
 10442                           prodh	equ	0xFF4
 10443                           prodl	equ	0xFF3
 10444                           intcon	equ	0xFF2
 10445                           postinc0	equ	0xFEE
 10446                           wreg	equ	0xFE8
 10447                           indf2	equ	0xFDF
 10448                           postinc2	equ	0xFDE
 10449                           fsr2h	equ	0xFDA
 10450                           fsr2l	equ	0xFD9
 10451                           status	equ	0xFD8
 10452                           
 10453 ;; *************** function ___awdiv *****************
 10454 ;; Defined at:
 10455 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 10456 ;; Parameters:    Size  Location     Type
 10457 ;;  dividend        2   22[BANK0 ] int 
 10458 ;;  divisor         2   24[BANK0 ] int 
 10459 ;; Auto vars:     Size  Location     Type
 10460 ;;  quotient        2   28[BANK0 ] int 
 10461 ;;  sign            1   27[BANK0 ] unsigned char 
 10462 ;;  counter         1   26[BANK0 ] unsigned char 
 10463 ;; Return value:  Size  Location     Type
 10464 ;;                  2   22[BANK0 ] int 
 10465 ;; Registers used:
 10466 ;;		wreg, status,2, status,0
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10472 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10473 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10475 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10476 ;;Total ram usage:        8 bytes
 10477 ;; Hardware stack levels used:    1
 10478 ;; Hardware stack levels required when called:    3
 10479 ;; This function calls:
 10480 ;;		Nothing
 10481 ;; This function is called by:
 10482 ;;		_fround
 10483 ;;		_scale
 10484 ;;		_sprintf
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text18
 10489  01511E                     __ptext18:
 10490                           	opt stack 0
 10491  01511E                     ___awdiv:
 10492                           	opt stack 24
 10493                           
 10494                           ; BSR set to: 0
 10495                           ;incstack = 0
 10496  01511E  0E00               	movlw	0
 10497  015120  0100               	movlb	0	; () banked
 10498  015122  6F7B               	movwf	___awdiv@sign& (0+255),b
 10499                           
 10500                           ; BSR set to: 0
 10501  015124  0100               	movlb	0	; () banked
 10502  015126  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10503  015128  D009               	goto	l7500
 10504                           
 10505                           ; BSR set to: 0
 10506  01512A  0100               	movlb	0	; () banked
 10507  01512C  6D78               	negf	___awdiv@divisor& (0+255),b
 10508  01512E  1F79               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10509  015130  B0D8               	btfsc	status,0,c
 10510  015132  2B79               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10511                           
 10512                           ; BSR set to: 0
 10513  015134  0E01               	movlw	1
 10514  015136  0100               	movlb	0	; () banked
 10515  015138  6F7B               	movwf	___awdiv@sign& (0+255),b
 10516  01513A  D000               	goto	l7500
 10517  01513C                     l7500:
 10518                           
 10519                           ; BSR set to: 0
 10520  01513C  0100               	movlb	0	; () banked
 10521  01513E  AF77               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10522  015140  D009               	goto	l7506
 10523                           
 10524                           ; BSR set to: 0
 10525  015142  0100               	movlb	0	; () banked
 10526  015144  6D76               	negf	___awdiv@dividend& (0+255),b
 10527  015146  1F77               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10528  015148  B0D8               	btfsc	status,0,c
 10529  01514A  2B77               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10530                           
 10531                           ; BSR set to: 0
 10532  01514C  0E01               	movlw	1
 10533  01514E  0100               	movlb	0	; () banked
 10534  015150  1B7B               	xorwf	___awdiv@sign& (0+255),f,b
 10535  015152  D000               	goto	l7506
 10536  015154                     l7506:
 10537                           
 10538                           ; BSR set to: 0
 10539  015154  0E00               	movlw	0
 10540  015156  0100               	movlb	0	; () banked
 10541  015158  6F7D               	movwf	(___awdiv@quotient+1)& (0+255),b
 10542  01515A  0E00               	movlw	0
 10543  01515C  6F7C               	movwf	___awdiv@quotient& (0+255),b
 10544                           
 10545                           ; BSR set to: 0
 10546  01515E  0100               	movlb	0	; () banked
 10547  015160  5178               	movf	___awdiv@divisor& (0+255),w,b
 10548  015162  0100               	movlb	0	; () banked
 10549  015164  1179               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10550  015166  B4D8               	btfsc	status,2,c
 10551  015168  D031               	goto	l7528
 10552                           
 10553                           ; BSR set to: 0
 10554  01516A  0E01               	movlw	1
 10555  01516C  0100               	movlb	0	; () banked
 10556  01516E  6F7A               	movwf	___awdiv@counter& (0+255),b
 10557  015170  D007               	goto	l7514
 10558  015172                     l7512:
 10559                           
 10560                           ; BSR set to: 0
 10561  015172  0100               	movlb	0	; () banked
 10562  015174  90D8               	bcf	status,0,c
 10563  015176  3778               	rlcf	___awdiv@divisor& (0+255),f,b
 10564  015178  3779               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10565  01517A  0100               	movlb	0	; () banked
 10566  01517C  2B7A               	incf	___awdiv@counter& (0+255),f,b
 10567  01517E  D000               	goto	l7514
 10568  015180                     l7514:
 10569                           
 10570                           ; BSR set to: 0
 10571  015180  0100               	movlb	0	; () banked
 10572  015182  BF79               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 10573  015184  D002               	goto	l7516
 10574  015186  D7F5               	goto	l7512
 10575                           
 10576                           ; BSR set to: 0
 10577  015188  D000               	goto	l7516
 10578  01518A                     l7516:
 10579                           
 10580                           ; BSR set to: 0
 10581  01518A  0100               	movlb	0	; () banked
 10582  01518C  90D8               	bcf	status,0,c
 10583  01518E  377C               	rlcf	___awdiv@quotient& (0+255),f,b
 10584  015190  377D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10585                           
 10586                           ; BSR set to: 0
 10587  015192  0100               	movlb	0	; () banked
 10588  015194  5178               	movf	___awdiv@divisor& (0+255),w,b
 10589  015196  0100               	movlb	0	; () banked
 10590  015198  5D76               	subwf	___awdiv@dividend& (0+255),w,b
 10591  01519A  0100               	movlb	0	; () banked
 10592  01519C  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10593  01519E  0100               	movlb	0	; () banked
 10594  0151A0  5977               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10595  0151A2  A0D8               	btfss	status,0,c
 10596  0151A4  D00B               	goto	l7524
 10597                           
 10598                           ; BSR set to: 0
 10599  0151A6  0100               	movlb	0	; () banked
 10600  0151A8  5178               	movf	___awdiv@divisor& (0+255),w,b
 10601  0151AA  0100               	movlb	0	; () banked
 10602  0151AC  5F76               	subwf	___awdiv@dividend& (0+255),f,b
 10603  0151AE  0100               	movlb	0	; () banked
 10604  0151B0  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10605  0151B2  0100               	movlb	0	; () banked
 10606  0151B4  5B77               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10607                           
 10608                           ; BSR set to: 0
 10609  0151B6  0100               	movlb	0	; () banked
 10610  0151B8  817C               	bsf	___awdiv@quotient& (0+255),0,b
 10611  0151BA  D000               	goto	l7524
 10612  0151BC                     l7524:
 10613                           
 10614                           ; BSR set to: 0
 10615  0151BC  0100               	movlb	0	; () banked
 10616  0151BE  90D8               	bcf	status,0,c
 10617  0151C0  3379               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10618  0151C2  3378               	rrcf	___awdiv@divisor& (0+255),f,b
 10619                           
 10620                           ; BSR set to: 0
 10621  0151C4  0100               	movlb	0	; () banked
 10622  0151C6  2F7A               	decfsz	___awdiv@counter& (0+255),f,b
 10623  0151C8  D7E0               	goto	l7516
 10624                           
 10625                           ; BSR set to: 0
 10626  0151CA  D000               	goto	l7528
 10627  0151CC                     l7528:
 10628                           
 10629                           ; BSR set to: 0
 10630  0151CC  0100               	movlb	0	; () banked
 10631  0151CE  517B               	movf	___awdiv@sign& (0+255),w,b
 10632  0151D0  0100               	movlb	0	; () banked
 10633  0151D2  B4D8               	btfsc	status,2,c
 10634  0151D4  D006               	goto	l7532
 10635                           
 10636                           ; BSR set to: 0
 10637  0151D6  0100               	movlb	0	; () banked
 10638  0151D8  6D7C               	negf	___awdiv@quotient& (0+255),b
 10639  0151DA  1F7D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10640  0151DC  B0D8               	btfsc	status,0,c
 10641  0151DE  2B7D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10642  0151E0  D000               	goto	l7532
 10643  0151E2                     l7532:
 10644                           
 10645                           ; BSR set to: 0
 10646  0151E2  C07C  F076         	movff	___awdiv@quotient,?___awdiv
 10647  0151E6  C07D  F077         	movff	___awdiv@quotient+1,?___awdiv+1
 10648  0151EA  0012               	return	
 10649                           
 10650                           ; BSR set to: 0
 10651                           
 10652                           ; BSR set to: 0
 10653  0151EC  0012               	return		;funcret
 10654  0151EE                     __end_of___awdiv:
 10655                           	opt stack 0
 10656                           tblptru	equ	0xFF8
 10657                           tblptrh	equ	0xFF7
 10658                           tblptrl	equ	0xFF6
 10659                           tablat	equ	0xFF5
 10660                           prodh	equ	0xFF4
 10661                           prodl	equ	0xFF3
 10662                           intcon	equ	0xFF2
 10663                           postinc0	equ	0xFEE
 10664                           wreg	equ	0xFE8
 10665                           indf2	equ	0xFDF
 10666                           postinc2	equ	0xFDE
 10667                           fsr2h	equ	0xFDA
 10668                           fsr2l	equ	0xFD9
 10669                           status	equ	0xFD8
 10670                           
 10671 ;; *************** function __tdiv_to_l_ *****************
 10672 ;; Defined at:
 10673 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
 10674 ;; Parameters:    Size  Location     Type
 10675 ;;  f1              4   16[BANK0 ] float 
 10676 ;;  f2              4   20[BANK0 ] float 
 10677 ;; Auto vars:     Size  Location     Type
 10678 ;;  quot            4   27[BANK0 ] unsigned long 
 10679 ;;  exp1            1   32[BANK0 ] unsigned char 
 10680 ;;  cntr            1   31[BANK0 ] unsigned char 
 10681 ;; Return value:  Size  Location     Type
 10682 ;;                  4   16[BANK0 ] unsigned long 
 10683 ;; Registers used:
 10684 ;;		wreg, status,2, status,0
 10685 ;; Tracked objects:
 10686 ;;		On entry : 0/0
 10687 ;;		On exit  : 0/0
 10688 ;;		Unchanged: 0/0
 10689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10690 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10691 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10692 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10693 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10694 ;;Total ram usage:       17 bytes
 10695 ;; Hardware stack levels used:    1
 10696 ;; Hardware stack levels required when called:    3
 10697 ;; This function calls:
 10698 ;;		Nothing
 10699 ;; This function is called by:
 10700 ;;		_sprintf
 10701 ;; This function uses a non-reentrant model
 10702 ;;
 10703                           
 10704                           	psect	text19
 10705  01455C                     __ptext19:
 10706                           	opt stack 0
 10707  01455C                     __tdiv_to_l_:
 10708                           	opt stack 25
 10709                           
 10710                           ; BSR set to: 0
 10711                           ;incstack = 0
 10712  01455C  C072  F078         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10713  014560  0100               	movlb	0	; () banked
 10714  014562  6B79               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10715  014564  6B7A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10716  014566  0100               	movlb	0	; () banked
 10717  014568  3571               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10718  01456A  0100               	movlb	0	; () banked
 10719  01456C  3778               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10720  01456E  E301               	bnc	u9661
 10721  014570  8179               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10722  014572                     u9661:
 10723  014572  0100               	movlb	0	; () banked
 10724  014574  5178               	movf	??__tdiv_to_l_& (0+255),w,b
 10725  014576  0100               	movlb	0	; () banked
 10726  014578  6F80               	movwf	__tdiv_to_l_@exp1& (0+255),b
 10727  01457A  0100               	movlb	0	; () banked
 10728  01457C  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10729  01457E  A4D8               	btfss	status,2,c
 10730  014580  D00A               	goto	l7682
 10731                           
 10732                           ; BSR set to: 0
 10733  014582  0E00               	movlw	0
 10734  014584  0100               	movlb	0	; () banked
 10735  014586  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10736  014588  0E00               	movlw	0
 10737  01458A  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10738  01458C  0E00               	movlw	0
 10739  01458E  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10740  014590  0E00               	movlw	0
 10741  014592  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10742                           
 10743                           ; BSR set to: 0
 10744  014594  0012               	return	
 10745  014596                     l7682:
 10746                           
 10747                           ; BSR set to: 0
 10748  014596  C076  F078         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10749  01459A  0100               	movlb	0	; () banked
 10750  01459C  6B79               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10751  01459E  6B7A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10752  0145A0  0100               	movlb	0	; () banked
 10753  0145A2  3575               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10754  0145A4  0100               	movlb	0	; () banked
 10755  0145A6  3778               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10756  0145A8  E301               	bnc	u9681
 10757  0145AA  8179               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10758  0145AC                     u9681:
 10759  0145AC  0100               	movlb	0	; () banked
 10760  0145AE  5178               	movf	??__tdiv_to_l_& (0+255),w,b
 10761  0145B0  0100               	movlb	0	; () banked
 10762  0145B2  6F7F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10763  0145B4  0100               	movlb	0	; () banked
 10764  0145B6  517F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10765  0145B8  A4D8               	btfss	status,2,c
 10766  0145BA  D00A               	goto	l7688
 10767                           
 10768                           ; BSR set to: 0
 10769  0145BC  0E00               	movlw	0
 10770  0145BE  0100               	movlb	0	; () banked
 10771  0145C0  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10772  0145C2  0E00               	movlw	0
 10773  0145C4  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10774  0145C6  0E00               	movlw	0
 10775  0145C8  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10776  0145CA  0E00               	movlw	0
 10777  0145CC  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10778                           
 10779                           ; BSR set to: 0
 10780  0145CE  0012               	return	
 10781  0145D0                     l7688:
 10782                           
 10783                           ; BSR set to: 0
 10784  0145D0  0100               	movlb	0	; () banked
 10785  0145D2  8F71               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10786                           
 10787                           ; BSR set to: 0
 10788  0145D4  0EFF               	movlw	255
 10789  0145D6  0100               	movlb	0	; () banked
 10790  0145D8  1770               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10791  0145DA  0EFF               	movlw	255
 10792  0145DC  0100               	movlb	0	; () banked
 10793  0145DE  1771               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10794  0145E0  0E00               	movlw	0
 10795  0145E2  0100               	movlb	0	; () banked
 10796  0145E4  1772               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10797  0145E6  0100               	movlb	0	; () banked
 10798  0145E8  8F75               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10799                           
 10800                           ; BSR set to: 0
 10801  0145EA  0EFF               	movlw	255
 10802  0145EC  0100               	movlb	0	; () banked
 10803  0145EE  1774               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10804  0145F0  0EFF               	movlw	255
 10805  0145F2  0100               	movlb	0	; () banked
 10806  0145F4  1775               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10807  0145F6  0E00               	movlw	0
 10808  0145F8  0100               	movlb	0	; () banked
 10809  0145FA  1776               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10810                           
 10811                           ; BSR set to: 0
 10812  0145FC  0E00               	movlw	0
 10813  0145FE  0100               	movlb	0	; () banked
 10814  014600  6F7B               	movwf	__tdiv_to_l_@quot& (0+255),b
 10815  014602  0E00               	movlw	0
 10816  014604  6F7C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 10817  014606  0E00               	movlw	0
 10818  014608  6F7D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 10819  01460A  0E00               	movlw	0
 10820  01460C  6F7E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 10821                           
 10822                           ; BSR set to: 0
 10823  01460E  0E7F               	movlw	127
 10824  014610  0100               	movlb	0	; () banked
 10825  014612  5F80               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10826                           
 10827                           ; BSR set to: 0
 10828  014614  0100               	movlb	0	; () banked
 10829  014616  517F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10830  014618  0F98               	addlw	152
 10831  01461A  0100               	movlb	0	; () banked
 10832  01461C  5F80               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10833                           
 10834                           ; BSR set to: 0
 10835  01461E  0E18               	movlw	24
 10836  014620  0100               	movlb	0	; () banked
 10837  014622  6F7F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10838  014624                     l1475:
 10839                           
 10840                           ; BSR set to: 0
 10841  014624  0100               	movlb	0	; () banked
 10842  014626  90D8               	bcf	status,0,c
 10843  014628  377B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10844  01462A  377C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10845  01462C  377D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10846  01462E  377E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10847                           
 10848                           ; BSR set to: 0
 10849  014630  0100               	movlb	0	; () banked
 10850  014632  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10851  014634  0100               	movlb	0	; () banked
 10852  014636  5D70               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10853  014638  0100               	movlb	0	; () banked
 10854  01463A  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10855  01463C  0100               	movlb	0	; () banked
 10856  01463E  5971               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10857  014640  0100               	movlb	0	; () banked
 10858  014642  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10859  014644  0100               	movlb	0	; () banked
 10860  014646  5972               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10861  014648  A0D8               	btfss	status,0,c
 10862  01464A  D00E               	goto	l1476
 10863                           
 10864                           ; BSR set to: 0
 10865  01464C  0100               	movlb	0	; () banked
 10866  01464E  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10867  014650  0100               	movlb	0	; () banked
 10868  014652  5F70               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10869  014654  0100               	movlb	0	; () banked
 10870  014656  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10871  014658  0100               	movlb	0	; () banked
 10872  01465A  5B71               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10873  01465C  0100               	movlb	0	; () banked
 10874  01465E  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10875  014660  0100               	movlb	0	; () banked
 10876  014662  5B72               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10877                           
 10878                           ; BSR set to: 0
 10879  014664  0100               	movlb	0	; () banked
 10880  014666  817B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10881  014668                     l1476:
 10882                           
 10883                           ; BSR set to: 0
 10884  014668  0100               	movlb	0	; () banked
 10885  01466A  90D8               	bcf	status,0,c
 10886  01466C  3770               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10887  01466E  3771               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10888  014670  3772               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10889                           
 10890                           ; BSR set to: 0
 10891  014672  0100               	movlb	0	; () banked
 10892  014674  2F7F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10893  014676  D7D6               	goto	l1475
 10894  014678  D000               	goto	l7710
 10895  01467A                     l7710:
 10896                           
 10897                           ; BSR set to: 0
 10898  01467A  0100               	movlb	0	; () banked
 10899  01467C  AF80               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10900  01467E  D01B               	goto	l7722
 10901                           
 10902                           ; BSR set to: 0
 10903  014680  0100               	movlb	0	; () banked
 10904  014682  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10905  014684  0A80               	xorlw	128
 10906  014686  0F97               	addlw	151
 10907  014688  B0D8               	btfsc	status,0,c
 10908  01468A  D00B               	goto	l7718
 10909                           
 10910                           ; BSR set to: 0
 10911  01468C  0E00               	movlw	0
 10912  01468E  0100               	movlb	0	; () banked
 10913  014690  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10914  014692  0E00               	movlw	0
 10915  014694  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10916  014696  0E00               	movlw	0
 10917  014698  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10918  01469A  0E00               	movlw	0
 10919  01469C  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10920                           
 10921                           ; BSR set to: 0
 10922  01469E  0012               	return	
 10923                           
 10924                           ; BSR set to: 0
 10925  0146A0  D000               	goto	l7718
 10926  0146A2                     l7718:
 10927                           
 10928                           ; BSR set to: 0
 10929  0146A2  0100               	movlb	0	; () banked
 10930  0146A4  90D8               	bcf	status,0,c
 10931  0146A6  337E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10932  0146A8  337D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10933  0146AA  337C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10934  0146AC  337B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10935                           
 10936                           ; BSR set to: 0
 10937  0146AE  0100               	movlb	0	; () banked
 10938  0146B0  3F80               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10939  0146B2  D7F7               	goto	l7718
 10940                           
 10941                           ; BSR set to: 0
 10942  0146B4  D01D               	goto	l1482
 10943  0146B6                     l7722:
 10944                           
 10945                           ; BSR set to: 0
 10946  0146B6  0E17               	movlw	23
 10947  0146B8  0100               	movlb	0	; () banked
 10948  0146BA  6580               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10949  0146BC  D014               	goto	l7730
 10950                           
 10951                           ; BSR set to: 0
 10952  0146BE  0E00               	movlw	0
 10953  0146C0  0100               	movlb	0	; () banked
 10954  0146C2  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10955  0146C4  0E00               	movlw	0
 10956  0146C6  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10957  0146C8  0E00               	movlw	0
 10958  0146CA  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10959  0146CC  0E00               	movlw	0
 10960  0146CE  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10961                           
 10962                           ; BSR set to: 0
 10963  0146D0  0012               	return	
 10964                           
 10965                           ; BSR set to: 0
 10966  0146D2  D009               	goto	l7730
 10967  0146D4                     l7728:
 10968                           
 10969                           ; BSR set to: 0
 10970  0146D4  0100               	movlb	0	; () banked
 10971  0146D6  90D8               	bcf	status,0,c
 10972  0146D8  377B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10973  0146DA  377C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10974  0146DC  377D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10975  0146DE  377E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10976  0146E0  0100               	movlb	0	; () banked
 10977  0146E2  0780               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10978  0146E4  D000               	goto	l7730
 10979  0146E6                     l7730:
 10980                           
 10981                           ; BSR set to: 0
 10982  0146E6  0100               	movlb	0	; () banked
 10983  0146E8  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10984  0146EA  0100               	movlb	0	; () banked
 10985  0146EC  A4D8               	btfss	status,2,c
 10986  0146EE  D7F2               	goto	l7728
 10987  0146F0                     l1482:
 10988                           
 10989                           ; BSR set to: 0
 10990  0146F0  C07B  F070         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10991  0146F4  C07C  F071         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10992  0146F8  C07D  F072         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10993  0146FC  C07E  F073         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10994                           
 10995                           ; BSR set to: 0
 10996  014700  0012               	return		;funcret
 10997  014702                     __end_of__tdiv_to_l_:
 10998                           	opt stack 0
 10999                           tblptru	equ	0xFF8
 11000                           tblptrh	equ	0xFF7
 11001                           tblptrl	equ	0xFF6
 11002                           tablat	equ	0xFF5
 11003                           prodh	equ	0xFF4
 11004                           prodl	equ	0xFF3
 11005                           intcon	equ	0xFF2
 11006                           postinc0	equ	0xFEE
 11007                           wreg	equ	0xFE8
 11008                           indf2	equ	0xFDF
 11009                           postinc2	equ	0xFDE
 11010                           fsr2h	equ	0xFDA
 11011                           fsr2l	equ	0xFD9
 11012                           status	equ	0xFD8
 11013                           
 11014 ;; *************** function __div_to_l_ *****************
 11015 ;; Defined at:
 11016 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
 11017 ;; Parameters:    Size  Location     Type
 11018 ;;  f1              4   16[BANK0 ] unsigned long 
 11019 ;;  f2              4   20[BANK0 ] unsigned long 
 11020 ;; Auto vars:     Size  Location     Type
 11021 ;;  quot            4   24[BANK0 ] unsigned long 
 11022 ;;  exp1            1   29[BANK0 ] unsigned char 
 11023 ;;  cntr            1   28[BANK0 ] unsigned char 
 11024 ;; Return value:  Size  Location     Type
 11025 ;;                  4   16[BANK0 ] unsigned long 
 11026 ;; Registers used:
 11027 ;;		wreg, status,2, status,0
 11028 ;; Tracked objects:
 11029 ;;		On entry : 0/0
 11030 ;;		On exit  : 0/0
 11031 ;;		Unchanged: 0/0
 11032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11033 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11034 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11036 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11037 ;;Total ram usage:       14 bytes
 11038 ;; Hardware stack levels used:    1
 11039 ;; Hardware stack levels required when called:    3
 11040 ;; This function calls:
 11041 ;;		Nothing
 11042 ;; This function is called by:
 11043 ;;		_sprintf
 11044 ;; This function uses a non-reentrant model
 11045 ;;
 11046                           
 11047                           	psect	text20
 11048  014702                     __ptext20:
 11049                           	opt stack 0
 11050  014702                     __div_to_l_:
 11051                           	opt stack 25
 11052                           
 11053                           ; BSR set to: 0
 11054                           ;incstack = 0
 11055  014702  0100               	movlb	0	; () banked
 11056  014704  3572               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 11057  014706  3573               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 11058  014708  0100               	movlb	0	; () banked
 11059  01470A  6F7D               	movwf	__div_to_l_@exp1& (0+255),b
 11060  01470C  0100               	movlb	0	; () banked
 11061  01470E  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 11062  014710  A4D8               	btfss	status,2,c
 11063  014712  D00A               	goto	l7738
 11064                           
 11065                           ; BSR set to: 0
 11066  014714  0E00               	movlw	0
 11067  014716  0100               	movlb	0	; () banked
 11068  014718  6F70               	movwf	?__div_to_l_& (0+255),b
 11069  01471A  0E00               	movlw	0
 11070  01471C  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 11071  01471E  0E00               	movlw	0
 11072  014720  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 11073  014722  0E00               	movlw	0
 11074  014724  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 11075                           
 11076                           ; BSR set to: 0
 11077  014726  0012               	return	
 11078  014728                     l7738:
 11079                           
 11080                           ; BSR set to: 0
 11081  014728  0100               	movlb	0	; () banked
 11082  01472A  3576               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 11083  01472C  3577               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 11084  01472E  0100               	movlb	0	; () banked
 11085  014730  6F7C               	movwf	__div_to_l_@cntr& (0+255),b
 11086  014732  0100               	movlb	0	; () banked
 11087  014734  517C               	movf	__div_to_l_@cntr& (0+255),w,b
 11088  014736  A4D8               	btfss	status,2,c
 11089  014738  D00A               	goto	l7744
 11090                           
 11091                           ; BSR set to: 0
 11092  01473A  0E00               	movlw	0
 11093  01473C  0100               	movlb	0	; () banked
 11094  01473E  6F70               	movwf	?__div_to_l_& (0+255),b
 11095  014740  0E00               	movlw	0
 11096  014742  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 11097  014744  0E00               	movlw	0
 11098  014746  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 11099  014748  0E00               	movlw	0
 11100  01474A  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 11101                           
 11102                           ; BSR set to: 0
 11103  01474C  0012               	return	
 11104  01474E                     l7744:
 11105                           
 11106                           ; BSR set to: 0
 11107  01474E  0100               	movlb	0	; () banked
 11108  014750  8F72               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 11109                           
 11110                           ; BSR set to: 0
 11111  014752  0EFF               	movlw	255
 11112  014754  0100               	movlb	0	; () banked
 11113  014756  1770               	andwf	__div_to_l_@f1& (0+255),f,b
 11114  014758  0EFF               	movlw	255
 11115  01475A  1771               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 11116  01475C  0EFF               	movlw	255
 11117  01475E  1772               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 11118  014760  0E00               	movlw	0
 11119  014762  1773               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 11120                           
 11121                           ; BSR set to: 0
 11122  014764  0100               	movlb	0	; () banked
 11123  014766  8F76               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 11124  014768  0EFF               	movlw	255
 11125  01476A  0100               	movlb	0	; () banked
 11126  01476C  1774               	andwf	__div_to_l_@f2& (0+255),f,b
 11127  01476E  0EFF               	movlw	255
 11128  014770  1775               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 11129  014772  0EFF               	movlw	255
 11130  014774  1776               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 11131  014776  0E00               	movlw	0
 11132  014778  1777               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 11133                           
 11134                           ; BSR set to: 0
 11135  01477A  0E00               	movlw	0
 11136  01477C  0100               	movlb	0	; () banked
 11137  01477E  6F78               	movwf	__div_to_l_@quot& (0+255),b
 11138  014780  0E00               	movlw	0
 11139  014782  6F79               	movwf	(__div_to_l_@quot+1)& (0+255),b
 11140  014784  0E00               	movlw	0
 11141  014786  6F7A               	movwf	(__div_to_l_@quot+2)& (0+255),b
 11142  014788  0E00               	movlw	0
 11143  01478A  6F7B               	movwf	(__div_to_l_@quot+3)& (0+255),b
 11144                           
 11145                           ; BSR set to: 0
 11146  01478C  0E7F               	movlw	127
 11147  01478E  0100               	movlb	0	; () banked
 11148  014790  5F7D               	subwf	__div_to_l_@exp1& (0+255),f,b
 11149                           
 11150                           ; BSR set to: 0
 11151  014792  0100               	movlb	0	; () banked
 11152  014794  517C               	movf	__div_to_l_@cntr& (0+255),w,b
 11153  014796  0FA0               	addlw	160
 11154  014798  0100               	movlb	0	; () banked
 11155  01479A  5F7D               	subwf	__div_to_l_@exp1& (0+255),f,b
 11156                           
 11157                           ; BSR set to: 0
 11158  01479C  0E20               	movlw	32
 11159  01479E  0100               	movlb	0	; () banked
 11160  0147A0  6F7C               	movwf	__div_to_l_@cntr& (0+255),b
 11161  0147A2  D000               	goto	l7758
 11162  0147A4                     l7758:
 11163                           
 11164                           ; BSR set to: 0
 11165  0147A4  0100               	movlb	0	; () banked
 11166  0147A6  90D8               	bcf	status,0,c
 11167  0147A8  3778               	rlcf	__div_to_l_@quot& (0+255),f,b
 11168  0147AA  3779               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11169  0147AC  377A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11170  0147AE  377B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11171                           
 11172                           ; BSR set to: 0
 11173  0147B0  0100               	movlb	0	; () banked
 11174  0147B2  5174               	movf	__div_to_l_@f2& (0+255),w,b
 11175  0147B4  0100               	movlb	0	; () banked
 11176  0147B6  5D70               	subwf	__div_to_l_@f1& (0+255),w,b
 11177  0147B8  0100               	movlb	0	; () banked
 11178  0147BA  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11179  0147BC  0100               	movlb	0	; () banked
 11180  0147BE  5971               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 11181  0147C0  0100               	movlb	0	; () banked
 11182  0147C2  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11183  0147C4  0100               	movlb	0	; () banked
 11184  0147C6  5972               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 11185  0147C8  0100               	movlb	0	; () banked
 11186  0147CA  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11187  0147CC  0100               	movlb	0	; () banked
 11188  0147CE  5973               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 11189  0147D0  A0D8               	btfss	status,0,c
 11190  0147D2  D013               	goto	l7766
 11191                           
 11192                           ; BSR set to: 0
 11193  0147D4  0100               	movlb	0	; () banked
 11194  0147D6  5174               	movf	__div_to_l_@f2& (0+255),w,b
 11195  0147D8  0100               	movlb	0	; () banked
 11196  0147DA  5F70               	subwf	__div_to_l_@f1& (0+255),f,b
 11197  0147DC  0100               	movlb	0	; () banked
 11198  0147DE  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11199  0147E0  0100               	movlb	0	; () banked
 11200  0147E2  5B71               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 11201  0147E4  0100               	movlb	0	; () banked
 11202  0147E6  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11203  0147E8  0100               	movlb	0	; () banked
 11204  0147EA  5B72               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 11205  0147EC  0100               	movlb	0	; () banked
 11206  0147EE  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11207  0147F0  0100               	movlb	0	; () banked
 11208  0147F2  5B73               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 11209                           
 11210                           ; BSR set to: 0
 11211  0147F4  0100               	movlb	0	; () banked
 11212  0147F6  8178               	bsf	__div_to_l_@quot& (0+255),0,b
 11213  0147F8  D000               	goto	l7766
 11214  0147FA                     l7766:
 11215                           
 11216                           ; BSR set to: 0
 11217  0147FA  0100               	movlb	0	; () banked
 11218  0147FC  90D8               	bcf	status,0,c
 11219  0147FE  3770               	rlcf	__div_to_l_@f1& (0+255),f,b
 11220  014800  3771               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 11221  014802  3772               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 11222  014804  3773               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 11223                           
 11224                           ; BSR set to: 0
 11225  014806  0100               	movlb	0	; () banked
 11226  014808  2F7C               	decfsz	__div_to_l_@cntr& (0+255),f,b
 11227  01480A  D7CC               	goto	l7758
 11228  01480C  D000               	goto	l7770
 11229  01480E                     l7770:
 11230                           
 11231                           ; BSR set to: 0
 11232  01480E  0100               	movlb	0	; () banked
 11233  014810  AF7D               	btfss	__div_to_l_@exp1& (0+255),7,b
 11234  014812  D01B               	goto	l7782
 11235                           
 11236                           ; BSR set to: 0
 11237  014814  0100               	movlb	0	; () banked
 11238  014816  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 11239  014818  0A80               	xorlw	128
 11240  01481A  0F9F               	addlw	159
 11241  01481C  B0D8               	btfsc	status,0,c
 11242  01481E  D00B               	goto	l7778
 11243                           
 11244                           ; BSR set to: 0
 11245  014820  0E00               	movlw	0
 11246  014822  0100               	movlb	0	; () banked
 11247  014824  6F70               	movwf	?__div_to_l_& (0+255),b
 11248  014826  0E00               	movlw	0
 11249  014828  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 11250  01482A  0E00               	movlw	0
 11251  01482C  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 11252  01482E  0E00               	movlw	0
 11253  014830  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 11254                           
 11255                           ; BSR set to: 0
 11256  014832  0012               	return	
 11257                           
 11258                           ; BSR set to: 0
 11259  014834  D000               	goto	l7778
 11260  014836                     l7778:
 11261                           
 11262                           ; BSR set to: 0
 11263  014836  0100               	movlb	0	; () banked
 11264  014838  90D8               	bcf	status,0,c
 11265  01483A  337B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 11266  01483C  337A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 11267  01483E  3379               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 11268  014840  3378               	rrcf	__div_to_l_@quot& (0+255),f,b
 11269                           
 11270                           ; BSR set to: 0
 11271  014842  0100               	movlb	0	; () banked
 11272  014844  3F7D               	incfsz	__div_to_l_@exp1& (0+255),f,b
 11273  014846  D7F7               	goto	l7778
 11274                           
 11275                           ; BSR set to: 0
 11276  014848  D01D               	goto	l1361
 11277  01484A                     l7782:
 11278                           
 11279                           ; BSR set to: 0
 11280  01484A  0E1F               	movlw	31
 11281  01484C  0100               	movlb	0	; () banked
 11282  01484E  657D               	cpfsgt	__div_to_l_@exp1& (0+255),b
 11283  014850  D014               	goto	l7790
 11284                           
 11285                           ; BSR set to: 0
 11286  014852  0E00               	movlw	0
 11287  014854  0100               	movlb	0	; () banked
 11288  014856  6F70               	movwf	?__div_to_l_& (0+255),b
 11289  014858  0E00               	movlw	0
 11290  01485A  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 11291  01485C  0E00               	movlw	0
 11292  01485E  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 11293  014860  0E00               	movlw	0
 11294  014862  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 11295                           
 11296                           ; BSR set to: 0
 11297  014864  0012               	return	
 11298                           
 11299                           ; BSR set to: 0
 11300  014866  D009               	goto	l7790
 11301  014868                     l7788:
 11302                           
 11303                           ; BSR set to: 0
 11304  014868  0100               	movlb	0	; () banked
 11305  01486A  90D8               	bcf	status,0,c
 11306  01486C  3778               	rlcf	__div_to_l_@quot& (0+255),f,b
 11307  01486E  3779               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11308  014870  377A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11309  014872  377B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11310  014874  0100               	movlb	0	; () banked
 11311  014876  077D               	decf	__div_to_l_@exp1& (0+255),f,b
 11312  014878  D000               	goto	l7790
 11313  01487A                     l7790:
 11314                           
 11315                           ; BSR set to: 0
 11316  01487A  0100               	movlb	0	; () banked
 11317  01487C  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 11318  01487E  0100               	movlb	0	; () banked
 11319  014880  A4D8               	btfss	status,2,c
 11320  014882  D7F2               	goto	l7788
 11321  014884                     l1361:
 11322                           
 11323                           ; BSR set to: 0
 11324  014884  C078  F070         	movff	__div_to_l_@quot,?__div_to_l_
 11325  014888  C079  F071         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11326  01488C  C07A  F072         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11327  014890  C07B  F073         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11328                           
 11329                           ; BSR set to: 0
 11330  014894  0012               	return		;funcret
 11331  014896                     __end_of__div_to_l_:
 11332                           	opt stack 0
 11333                           tblptru	equ	0xFF8
 11334                           tblptrh	equ	0xFF7
 11335                           tblptrl	equ	0xFF6
 11336                           tablat	equ	0xFF5
 11337                           prodh	equ	0xFF4
 11338                           prodl	equ	0xFF3
 11339                           intcon	equ	0xFF2
 11340                           postinc0	equ	0xFEE
 11341                           wreg	equ	0xFE8
 11342                           indf2	equ	0xFDF
 11343                           postinc2	equ	0xFDE
 11344                           fsr2h	equ	0xFDA
 11345                           fsr2l	equ	0xFD9
 11346                           status	equ	0xFD8
 11347                           
 11348 ;; *************** function ___lltofl *****************
 11349 ;; Defined at:
 11350 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltofl.c"
 11351 ;; Parameters:    Size  Location     Type
 11352 ;;  c               4   26[BANK0 ] unsigned long 
 11353 ;; Auto vars:     Size  Location     Type
 11354 ;;		None
 11355 ;; Return value:  Size  Location     Type
 11356 ;;                  4   26[BANK0 ] unsigned long 
 11357 ;; Registers used:
 11358 ;;		wreg, status,2, status,0, cstack
 11359 ;; Tracked objects:
 11360 ;;		On entry : 0/0
 11361 ;;		On exit  : 0/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11364 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11367 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11368 ;;Total ram usage:        4 bytes
 11369 ;; Hardware stack levels used:    1
 11370 ;; Hardware stack levels required when called:    4
 11371 ;; This function calls:
 11372 ;;		___flpack
 11373 ;; This function is called by:
 11374 ;;		_sprintf
 11375 ;; This function uses a non-reentrant model
 11376 ;;
 11377                           
 11378                           	psect	text21
 11379  015D44                     __ptext21:
 11380                           	opt stack 0
 11381  015D44                     ___lltofl:
 11382                           	opt stack 24
 11383                           
 11384                           ; BSR set to: 0
 11385                           ;incstack = 0
 11386  015D44  C07A  F070         	movff	___lltofl@c,___flpack@arg
 11387  015D48  C07B  F071         	movff	___lltofl@c+1,___flpack@arg+1
 11388  015D4C  C07C  F072         	movff	___lltofl@c+2,___flpack@arg+2
 11389  015D50  C07D  F073         	movff	___lltofl@c+3,___flpack@arg+3
 11390  015D54  0E96               	movlw	150
 11391  015D56  0100               	movlb	0	; () banked
 11392  015D58  6F74               	movwf	___flpack@exp& (0+255),b
 11393  015D5A  0E00               	movlw	0
 11394  015D5C  0100               	movlb	0	; () banked
 11395  015D5E  6F75               	movwf	___flpack@sign& (0+255),b
 11396  015D60  EC4B  F0A4         	call	___flpack	;wreg free
 11397  015D64  C070  F07A         	movff	?___flpack,?___lltofl
 11398  015D68  C071  F07B         	movff	?___flpack+1,?___lltofl+1
 11399  015D6C  C072  F07C         	movff	?___flpack+2,?___lltofl+2
 11400  015D70  C073  F07D         	movff	?___flpack+3,?___lltofl+3
 11401  015D74  0012               	return	
 11402  015D76  0012               	return		;funcret
 11403  015D78                     __end_of___lltofl:
 11404                           	opt stack 0
 11405                           tblptru	equ	0xFF8
 11406                           tblptrh	equ	0xFF7
 11407                           tblptrl	equ	0xFF6
 11408                           tablat	equ	0xFF5
 11409                           prodh	equ	0xFF4
 11410                           prodl	equ	0xFF3
 11411                           intcon	equ	0xFF2
 11412                           postinc0	equ	0xFEE
 11413                           wreg	equ	0xFE8
 11414                           indf2	equ	0xFDF
 11415                           postinc2	equ	0xFDE
 11416                           fsr2h	equ	0xFDA
 11417                           fsr2l	equ	0xFD9
 11418                           status	equ	0xFD8
 11419                           
 11420 ;; *************** function ___llmod *****************
 11421 ;; Defined at:
 11422 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 11423 ;; Parameters:    Size  Location     Type
 11424 ;;  dividend        4   16[BANK0 ] unsigned long 
 11425 ;;  divisor         4   20[BANK0 ] unsigned long 
 11426 ;; Auto vars:     Size  Location     Type
 11427 ;;  counter         1   24[BANK0 ] unsigned char 
 11428 ;; Return value:  Size  Location     Type
 11429 ;;                  4   16[BANK0 ] unsigned long 
 11430 ;; Registers used:
 11431 ;;		wreg, status,2, status,0
 11432 ;; Tracked objects:
 11433 ;;		On entry : 0/0
 11434 ;;		On exit  : 0/0
 11435 ;;		Unchanged: 0/0
 11436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11437 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11438 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11440 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;Total ram usage:        9 bytes
 11442 ;; Hardware stack levels used:    1
 11443 ;; Hardware stack levels required when called:    3
 11444 ;; This function calls:
 11445 ;;		Nothing
 11446 ;; This function is called by:
 11447 ;;		_sprintf
 11448 ;; This function uses a non-reentrant model
 11449 ;;
 11450                           
 11451                           	psect	text22
 11452  015590                     __ptext22:
 11453                           	opt stack 0
 11454  015590                     ___llmod:
 11455                           	opt stack 25
 11456                           
 11457                           ;incstack = 0
 11458  015590  0100               	movlb	0	; () banked
 11459  015592  5174               	movf	___llmod@divisor& (0+255),w,b
 11460  015594  0100               	movlb	0	; () banked
 11461  015596  1175               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11462  015598  0100               	movlb	0	; () banked
 11463  01559A  1176               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11464  01559C  0100               	movlb	0	; () banked
 11465  01559E  1177               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11466  0155A0  B4D8               	btfsc	status,2,c
 11467  0155A2  D03F               	goto	l1586
 11468                           
 11469                           ; BSR set to: 0
 11470  0155A4  0E01               	movlw	1
 11471  0155A6  0100               	movlb	0	; () banked
 11472  0155A8  6F78               	movwf	___llmod@counter& (0+255),b
 11473  0155AA  D009               	goto	l7894
 11474  0155AC                     l7892:
 11475                           
 11476                           ; BSR set to: 0
 11477  0155AC  0100               	movlb	0	; () banked
 11478  0155AE  90D8               	bcf	status,0,c
 11479  0155B0  3774               	rlcf	___llmod@divisor& (0+255),f,b
 11480  0155B2  3775               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11481  0155B4  3776               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11482  0155B6  3777               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11483  0155B8  0100               	movlb	0	; () banked
 11484  0155BA  2B78               	incf	___llmod@counter& (0+255),f,b
 11485  0155BC  D000               	goto	l7894
 11486  0155BE                     l7894:
 11487                           
 11488                           ; BSR set to: 0
 11489  0155BE  0100               	movlb	0	; () banked
 11490  0155C0  BF77               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 11491  0155C2  D002               	goto	l7896
 11492  0155C4  D7F3               	goto	l7892
 11493                           
 11494                           ; BSR set to: 0
 11495  0155C6  D000               	goto	l7896
 11496  0155C8                     l7896:
 11497                           
 11498                           ; BSR set to: 0
 11499  0155C8  0100               	movlb	0	; () banked
 11500  0155CA  5174               	movf	___llmod@divisor& (0+255),w,b
 11501  0155CC  0100               	movlb	0	; () banked
 11502  0155CE  5D70               	subwf	___llmod@dividend& (0+255),w,b
 11503  0155D0  0100               	movlb	0	; () banked
 11504  0155D2  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
 11505  0155D4  0100               	movlb	0	; () banked
 11506  0155D6  5971               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11507  0155D8  0100               	movlb	0	; () banked
 11508  0155DA  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
 11509  0155DC  0100               	movlb	0	; () banked
 11510  0155DE  5972               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11511  0155E0  0100               	movlb	0	; () banked
 11512  0155E2  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
 11513  0155E4  0100               	movlb	0	; () banked
 11514  0155E6  5973               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11515  0155E8  A0D8               	btfss	status,0,c
 11516  0155EA  D011               	goto	l7900
 11517                           
 11518                           ; BSR set to: 0
 11519  0155EC  0100               	movlb	0	; () banked
 11520  0155EE  5174               	movf	___llmod@divisor& (0+255),w,b
 11521  0155F0  0100               	movlb	0	; () banked
 11522  0155F2  5F70               	subwf	___llmod@dividend& (0+255),f,b
 11523  0155F4  0100               	movlb	0	; () banked
 11524  0155F6  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
 11525  0155F8  0100               	movlb	0	; () banked
 11526  0155FA  5B71               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11527  0155FC  0100               	movlb	0	; () banked
 11528  0155FE  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
 11529  015600  0100               	movlb	0	; () banked
 11530  015602  5B72               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11531  015604  0100               	movlb	0	; () banked
 11532  015606  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
 11533  015608  0100               	movlb	0	; () banked
 11534  01560A  5B73               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11535  01560C  D000               	goto	l7900
 11536  01560E                     l7900:
 11537                           
 11538                           ; BSR set to: 0
 11539  01560E  0100               	movlb	0	; () banked
 11540  015610  90D8               	bcf	status,0,c
 11541  015612  3377               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11542  015614  3376               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11543  015616  3375               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11544  015618  3374               	rrcf	___llmod@divisor& (0+255),f,b
 11545                           
 11546                           ; BSR set to: 0
 11547  01561A  0100               	movlb	0	; () banked
 11548  01561C  2F78               	decfsz	___llmod@counter& (0+255),f,b
 11549  01561E  D7D4               	goto	l7896
 11550  015620  D000               	goto	l1586
 11551  015622                     l1586:
 11552                           
 11553                           ; BSR set to: 0
 11554  015622  C070  F070         	movff	___llmod@dividend,?___llmod
 11555  015626  C071  F071         	movff	___llmod@dividend+1,?___llmod+1
 11556  01562A  C072  F072         	movff	___llmod@dividend+2,?___llmod+2
 11557  01562E  C073  F073         	movff	___llmod@dividend+3,?___llmod+3
 11558                           
 11559                           ; BSR set to: 0
 11560  015632  0012               	return		;funcret
 11561  015634                     __end_of___llmod:
 11562                           	opt stack 0
 11563                           tblptru	equ	0xFF8
 11564                           tblptrh	equ	0xFF7
 11565                           tblptrl	equ	0xFF6
 11566                           tablat	equ	0xFF5
 11567                           prodh	equ	0xFF4
 11568                           prodl	equ	0xFF3
 11569                           intcon	equ	0xFF2
 11570                           postinc0	equ	0xFEE
 11571                           wreg	equ	0xFE8
 11572                           indf2	equ	0xFDF
 11573                           postinc2	equ	0xFDE
 11574                           fsr2h	equ	0xFDA
 11575                           fsr2l	equ	0xFD9
 11576                           status	equ	0xFD8
 11577                           
 11578 ;; *************** function ___lldiv *****************
 11579 ;; Defined at:
 11580 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 11581 ;; Parameters:    Size  Location     Type
 11582 ;;  dividend        4   16[BANK0 ] unsigned long 
 11583 ;;  divisor         4   20[BANK0 ] unsigned long 
 11584 ;; Auto vars:     Size  Location     Type
 11585 ;;  quotient        4   24[BANK0 ] unsigned long 
 11586 ;;  counter         1   28[BANK0 ] unsigned char 
 11587 ;; Return value:  Size  Location     Type
 11588 ;;                  4   16[BANK0 ] unsigned long 
 11589 ;; Registers used:
 11590 ;;		wreg, status,2, status,0
 11591 ;; Tracked objects:
 11592 ;;		On entry : 0/0
 11593 ;;		On exit  : 0/0
 11594 ;;		Unchanged: 0/0
 11595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11596 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11597 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11599 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11600 ;;Total ram usage:       13 bytes
 11601 ;; Hardware stack levels used:    1
 11602 ;; Hardware stack levels required when called:    3
 11603 ;; This function calls:
 11604 ;;		Nothing
 11605 ;; This function is called by:
 11606 ;;		_sprintf
 11607 ;; This function uses a non-reentrant model
 11608 ;;
 11609                           
 11610                           	psect	text23
 11611  0151EE                     __ptext23:
 11612                           	opt stack 0
 11613  0151EE                     ___lldiv:
 11614                           	opt stack 25
 11615                           
 11616                           ; BSR set to: 0
 11617                           ;incstack = 0
 11618  0151EE  0E00               	movlw	0
 11619  0151F0  0100               	movlb	0	; () banked
 11620  0151F2  6F78               	movwf	___lldiv@quotient& (0+255),b
 11621  0151F4  0E00               	movlw	0
 11622  0151F6  6F79               	movwf	(___lldiv@quotient+1)& (0+255),b
 11623  0151F8  0E00               	movlw	0
 11624  0151FA  6F7A               	movwf	(___lldiv@quotient+2)& (0+255),b
 11625  0151FC  0E00               	movlw	0
 11626  0151FE  6F7B               	movwf	(___lldiv@quotient+3)& (0+255),b
 11627                           
 11628                           ; BSR set to: 0
 11629  015200  0100               	movlb	0	; () banked
 11630  015202  5174               	movf	___lldiv@divisor& (0+255),w,b
 11631  015204  0100               	movlb	0	; () banked
 11632  015206  1175               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11633  015208  0100               	movlb	0	; () banked
 11634  01520A  1176               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11635  01520C  0100               	movlb	0	; () banked
 11636  01520E  1177               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11637  015210  B4D8               	btfsc	status,2,c
 11638  015212  D047               	goto	l1576
 11639                           
 11640                           ; BSR set to: 0
 11641  015214  0E01               	movlw	1
 11642  015216  0100               	movlb	0	; () banked
 11643  015218  6F7C               	movwf	___lldiv@counter& (0+255),b
 11644  01521A  D009               	goto	l7874
 11645  01521C                     l7872:
 11646                           
 11647                           ; BSR set to: 0
 11648  01521C  0100               	movlb	0	; () banked
 11649  01521E  90D8               	bcf	status,0,c
 11650  015220  3774               	rlcf	___lldiv@divisor& (0+255),f,b
 11651  015222  3775               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11652  015224  3776               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11653  015226  3777               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11654  015228  0100               	movlb	0	; () banked
 11655  01522A  2B7C               	incf	___lldiv@counter& (0+255),f,b
 11656  01522C  D000               	goto	l7874
 11657  01522E                     l7874:
 11658                           
 11659                           ; BSR set to: 0
 11660  01522E  0100               	movlb	0	; () banked
 11661  015230  BF77               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 11662  015232  D002               	goto	l7876
 11663  015234  D7F3               	goto	l7872
 11664                           
 11665                           ; BSR set to: 0
 11666  015236  D000               	goto	l7876
 11667  015238                     l7876:
 11668                           
 11669                           ; BSR set to: 0
 11670  015238  0100               	movlb	0	; () banked
 11671  01523A  90D8               	bcf	status,0,c
 11672  01523C  3778               	rlcf	___lldiv@quotient& (0+255),f,b
 11673  01523E  3779               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11674  015240  377A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11675  015242  377B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11676                           
 11677                           ; BSR set to: 0
 11678  015244  0100               	movlb	0	; () banked
 11679  015246  5174               	movf	___lldiv@divisor& (0+255),w,b
 11680  015248  0100               	movlb	0	; () banked
 11681  01524A  5D70               	subwf	___lldiv@dividend& (0+255),w,b
 11682  01524C  0100               	movlb	0	; () banked
 11683  01524E  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11684  015250  0100               	movlb	0	; () banked
 11685  015252  5971               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11686  015254  0100               	movlb	0	; () banked
 11687  015256  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11688  015258  0100               	movlb	0	; () banked
 11689  01525A  5972               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11690  01525C  0100               	movlb	0	; () banked
 11691  01525E  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11692  015260  0100               	movlb	0	; () banked
 11693  015262  5973               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11694  015264  A0D8               	btfss	status,0,c
 11695  015266  D013               	goto	l7884
 11696                           
 11697                           ; BSR set to: 0
 11698  015268  0100               	movlb	0	; () banked
 11699  01526A  5174               	movf	___lldiv@divisor& (0+255),w,b
 11700  01526C  0100               	movlb	0	; () banked
 11701  01526E  5F70               	subwf	___lldiv@dividend& (0+255),f,b
 11702  015270  0100               	movlb	0	; () banked
 11703  015272  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11704  015274  0100               	movlb	0	; () banked
 11705  015276  5B71               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11706  015278  0100               	movlb	0	; () banked
 11707  01527A  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11708  01527C  0100               	movlb	0	; () banked
 11709  01527E  5B72               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11710  015280  0100               	movlb	0	; () banked
 11711  015282  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11712  015284  0100               	movlb	0	; () banked
 11713  015286  5B73               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11714                           
 11715                           ; BSR set to: 0
 11716  015288  0100               	movlb	0	; () banked
 11717  01528A  8178               	bsf	___lldiv@quotient& (0+255),0,b
 11718  01528C  D000               	goto	l7884
 11719  01528E                     l7884:
 11720                           
 11721                           ; BSR set to: 0
 11722  01528E  0100               	movlb	0	; () banked
 11723  015290  90D8               	bcf	status,0,c
 11724  015292  3377               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11725  015294  3376               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11726  015296  3375               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11727  015298  3374               	rrcf	___lldiv@divisor& (0+255),f,b
 11728                           
 11729                           ; BSR set to: 0
 11730  01529A  0100               	movlb	0	; () banked
 11731  01529C  2F7C               	decfsz	___lldiv@counter& (0+255),f,b
 11732  01529E  D7CC               	goto	l7876
 11733  0152A0  D000               	goto	l1576
 11734  0152A2                     l1576:
 11735                           
 11736                           ; BSR set to: 0
 11737  0152A2  C078  F070         	movff	___lldiv@quotient,?___lldiv
 11738  0152A6  C079  F071         	movff	___lldiv@quotient+1,?___lldiv+1
 11739  0152AA  C07A  F072         	movff	___lldiv@quotient+2,?___lldiv+2
 11740  0152AE  C07B  F073         	movff	___lldiv@quotient+3,?___lldiv+3
 11741                           
 11742                           ; BSR set to: 0
 11743  0152B2  0012               	return		;funcret
 11744  0152B4                     __end_of___lldiv:
 11745                           	opt stack 0
 11746                           tblptru	equ	0xFF8
 11747                           tblptrh	equ	0xFF7
 11748                           tblptrl	equ	0xFF6
 11749                           tablat	equ	0xFF5
 11750                           prodh	equ	0xFF4
 11751                           prodl	equ	0xFF3
 11752                           intcon	equ	0xFF2
 11753                           postinc0	equ	0xFEE
 11754                           wreg	equ	0xFE8
 11755                           indf2	equ	0xFDF
 11756                           postinc2	equ	0xFDE
 11757                           fsr2h	equ	0xFDA
 11758                           fsr2l	equ	0xFD9
 11759                           status	equ	0xFD8
 11760                           
 11761 ;; *************** function ___fltol *****************
 11762 ;; Defined at:
 11763 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fltol.c"
 11764 ;; Parameters:    Size  Location     Type
 11765 ;;  f1              4   71[BANK0 ] unsigned long 
 11766 ;; Auto vars:     Size  Location     Type
 11767 ;;  exp1            1   80[BANK0 ] unsigned char 
 11768 ;;  sign1           1   79[BANK0 ] unsigned char 
 11769 ;; Return value:  Size  Location     Type
 11770 ;;                  4   71[BANK0 ] long 
 11771 ;; Registers used:
 11772 ;;		wreg, status,2, status,0
 11773 ;; Tracked objects:
 11774 ;;		On entry : 0/0
 11775 ;;		On exit  : 0/0
 11776 ;;		Unchanged: 0/0
 11777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11778 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11779 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11780 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11781 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11782 ;;Total ram usage:       10 bytes
 11783 ;; Hardware stack levels used:    1
 11784 ;; Hardware stack levels required when called:    3
 11785 ;; This function calls:
 11786 ;;		Nothing
 11787 ;; This function is called by:
 11788 ;;		_main
 11789 ;;		_sprintf
 11790 ;; This function uses a non-reentrant model
 11791 ;;
 11792                           
 11793                           	psect	text24
 11794  014E1E                     __ptext24:
 11795                           	opt stack 0
 11796  014E1E                     ___fltol:
 11797                           	opt stack 27
 11798                           
 11799                           ; BSR set to: 0
 11800                           ;incstack = 0
 11801  014E1E  0100               	movlb	0	; () banked
 11802  014E20  35A9               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11803  014E22  35AA               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11804  014E24  0100               	movlb	0	; () banked
 11805  014E26  6FB0               	movwf	___fltol@exp1& (0+255),b
 11806  014E28  0100               	movlb	0	; () banked
 11807  014E2A  51B0               	movf	___fltol@exp1& (0+255),w,b
 11808  014E2C  A4D8               	btfss	status,2,c
 11809  014E2E  D00A               	goto	l7828
 11810                           
 11811                           ; BSR set to: 0
 11812  014E30  0E00               	movlw	0
 11813  014E32  0100               	movlb	0	; () banked
 11814  014E34  6FA7               	movwf	?___fltol& (0+255),b
 11815  014E36  0E00               	movlw	0
 11816  014E38  6FA8               	movwf	(?___fltol+1)& (0+255),b
 11817  014E3A  0E00               	movlw	0
 11818  014E3C  6FA9               	movwf	(?___fltol+2)& (0+255),b
 11819  014E3E  0E00               	movlw	0
 11820  014E40  6FAA               	movwf	(?___fltol+3)& (0+255),b
 11821                           
 11822                           ; BSR set to: 0
 11823  014E42  0012               	return	
 11824  014E44                     l7828:
 11825                           
 11826                           ; BSR set to: 0
 11827  014E44  C0A7  F0AB         	movff	___fltol@f1,??___fltol
 11828  014E48  C0A8  F0AC         	movff	___fltol@f1+1,??___fltol+1
 11829  014E4C  C0A9  F0AD         	movff	___fltol@f1+2,??___fltol+2
 11830  014E50  C0AA  F0AE         	movff	___fltol@f1+3,??___fltol+3
 11831  014E54  0E20               	movlw	32
 11832  014E56  D006               	goto	u9880
 11833  014E58                     u9885:
 11834  014E58  0100               	movlb	0	; () banked
 11835  014E5A  90D8               	bcf	status,0,c
 11836  014E5C  33AE               	rrcf	(??___fltol+3)& (0+255),f,b
 11837  014E5E  33AD               	rrcf	(??___fltol+2)& (0+255),f,b
 11838  014E60  33AC               	rrcf	(??___fltol+1)& (0+255),f,b
 11839  014E62  33AB               	rrcf	??___fltol& (0+255),f,b
 11840  014E64                     u9880:
 11841  014E64  2EE8               	decfsz	wreg,f,c
 11842  014E66  D7F8               	goto	u9885
 11843  014E68  0100               	movlb	0	; () banked
 11844  014E6A  51AB               	movf	??___fltol& (0+255),w,b
 11845  014E6C  0100               	movlb	0	; () banked
 11846  014E6E  6FAF               	movwf	___fltol@sign1& (0+255),b
 11847                           
 11848                           ; BSR set to: 0
 11849  014E70  0100               	movlb	0	; () banked
 11850  014E72  8FA9               	bsf	(___fltol@f1+2)& (0+255),7,b
 11851                           
 11852                           ; BSR set to: 0
 11853  014E74  0EFF               	movlw	255
 11854  014E76  0100               	movlb	0	; () banked
 11855  014E78  17A7               	andwf	___fltol@f1& (0+255),f,b
 11856  014E7A  0EFF               	movlw	255
 11857  014E7C  17A8               	andwf	(___fltol@f1+1)& (0+255),f,b
 11858  014E7E  0EFF               	movlw	255
 11859  014E80  17A9               	andwf	(___fltol@f1+2)& (0+255),f,b
 11860  014E82  0E00               	movlw	0
 11861  014E84  17AA               	andwf	(___fltol@f1+3)& (0+255),f,b
 11862                           
 11863                           ; BSR set to: 0
 11864  014E86  0E96               	movlw	150
 11865  014E88  0100               	movlb	0	; () banked
 11866  014E8A  5FB0               	subwf	___fltol@exp1& (0+255),f,b
 11867                           
 11868                           ; BSR set to: 0
 11869  014E8C  0100               	movlb	0	; () banked
 11870  014E8E  AFB0               	btfss	___fltol@exp1& (0+255),7,b
 11871  014E90  D01B               	goto	l7848
 11872                           
 11873                           ; BSR set to: 0
 11874  014E92  0100               	movlb	0	; () banked
 11875  014E94  51B0               	movf	___fltol@exp1& (0+255),w,b
 11876  014E96  0A80               	xorlw	128
 11877  014E98  0F97               	addlw	151
 11878  014E9A  B0D8               	btfsc	status,0,c
 11879  014E9C  D00B               	goto	l7844
 11880                           
 11881                           ; BSR set to: 0
 11882  014E9E  0E00               	movlw	0
 11883  014EA0  0100               	movlb	0	; () banked
 11884  014EA2  6FA7               	movwf	?___fltol& (0+255),b
 11885  014EA4  0E00               	movlw	0
 11886  014EA6  6FA8               	movwf	(?___fltol+1)& (0+255),b
 11887  014EA8  0E00               	movlw	0
 11888  014EAA  6FA9               	movwf	(?___fltol+2)& (0+255),b
 11889  014EAC  0E00               	movlw	0
 11890  014EAE  6FAA               	movwf	(?___fltol+3)& (0+255),b
 11891                           
 11892                           ; BSR set to: 0
 11893  014EB0  0012               	return	
 11894                           
 11895                           ; BSR set to: 0
 11896  014EB2  D000               	goto	l7844
 11897  014EB4                     l7844:
 11898                           
 11899                           ; BSR set to: 0
 11900  014EB4  0100               	movlb	0	; () banked
 11901  014EB6  90D8               	bcf	status,0,c
 11902  014EB8  33AA               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11903  014EBA  33A9               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11904  014EBC  33A8               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11905  014EBE  33A7               	rrcf	___fltol@f1& (0+255),f,b
 11906                           
 11907                           ; BSR set to: 0
 11908  014EC0  0100               	movlb	0	; () banked
 11909  014EC2  3FB0               	incfsz	___fltol@exp1& (0+255),f,b
 11910  014EC4  D7F7               	goto	l7844
 11911                           
 11912                           ; BSR set to: 0
 11913  014EC6  D01F               	goto	l7858
 11914  014EC8                     l7848:
 11915                           
 11916                           ; BSR set to: 0
 11917  014EC8  0E1F               	movlw	31
 11918  014ECA  0100               	movlb	0	; () banked
 11919  014ECC  65B0               	cpfsgt	___fltol@exp1& (0+255),b
 11920  014ECE  D014               	goto	l7856
 11921                           
 11922                           ; BSR set to: 0
 11923  014ED0  0E00               	movlw	0
 11924  014ED2  0100               	movlb	0	; () banked
 11925  014ED4  6FA7               	movwf	?___fltol& (0+255),b
 11926  014ED6  0E00               	movlw	0
 11927  014ED8  6FA8               	movwf	(?___fltol+1)& (0+255),b
 11928  014EDA  0E00               	movlw	0
 11929  014EDC  6FA9               	movwf	(?___fltol+2)& (0+255),b
 11930  014EDE  0E00               	movlw	0
 11931  014EE0  6FAA               	movwf	(?___fltol+3)& (0+255),b
 11932                           
 11933                           ; BSR set to: 0
 11934  014EE2  0012               	return	
 11935                           
 11936                           ; BSR set to: 0
 11937  014EE4  D009               	goto	l7856
 11938  014EE6                     l7854:
 11939                           
 11940                           ; BSR set to: 0
 11941  014EE6  0100               	movlb	0	; () banked
 11942  014EE8  90D8               	bcf	status,0,c
 11943  014EEA  37A7               	rlcf	___fltol@f1& (0+255),f,b
 11944  014EEC  37A8               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11945  014EEE  37A9               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11946  014EF0  37AA               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11947  014EF2  0100               	movlb	0	; () banked
 11948  014EF4  07B0               	decf	___fltol@exp1& (0+255),f,b
 11949  014EF6  D000               	goto	l7856
 11950  014EF8                     l7856:
 11951                           
 11952                           ; BSR set to: 0
 11953  014EF8  0100               	movlb	0	; () banked
 11954  014EFA  51B0               	movf	___fltol@exp1& (0+255),w,b
 11955  014EFC  0100               	movlb	0	; () banked
 11956  014EFE  B4D8               	btfsc	status,2,c
 11957  014F00  D002               	goto	l7858
 11958  014F02  D7F1               	goto	l7854
 11959                           
 11960                           ; BSR set to: 0
 11961  014F04  D000               	goto	l7858
 11962  014F06                     l7858:
 11963                           
 11964                           ; BSR set to: 0
 11965  014F06  0100               	movlb	0	; () banked
 11966  014F08  51AF               	movf	___fltol@sign1& (0+255),w,b
 11967  014F0A  0100               	movlb	0	; () banked
 11968  014F0C  B4D8               	btfsc	status,2,c
 11969  014F0E  D00A               	goto	l7862
 11970                           
 11971                           ; BSR set to: 0
 11972  014F10  0100               	movlb	0	; () banked
 11973  014F12  1FAA               	comf	(___fltol@f1+3)& (0+255),f,b
 11974  014F14  1FA9               	comf	(___fltol@f1+2)& (0+255),f,b
 11975  014F16  1FA8               	comf	(___fltol@f1+1)& (0+255),f,b
 11976  014F18  6DA7               	negf	___fltol@f1& (0+255),b
 11977  014F1A  0E00               	movlw	0
 11978  014F1C  23A8               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11979  014F1E  23A9               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11980  014F20  23AA               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11981  014F22  D000               	goto	l7862
 11982  014F24                     l7862:
 11983                           
 11984                           ; BSR set to: 0
 11985  014F24  C0A7  F0A7         	movff	___fltol@f1,?___fltol
 11986  014F28  C0A8  F0A8         	movff	___fltol@f1+1,?___fltol+1
 11987  014F2C  C0A9  F0A9         	movff	___fltol@f1+2,?___fltol+2
 11988  014F30  C0AA  F0AA         	movff	___fltol@f1+3,?___fltol+3
 11989  014F34  0012               	return	
 11990                           
 11991                           ; BSR set to: 0
 11992                           
 11993                           ; BSR set to: 0
 11994  014F36  0012               	return		;funcret
 11995  014F38                     __end_of___fltol:
 11996                           	opt stack 0
 11997                           tblptru	equ	0xFF8
 11998                           tblptrh	equ	0xFF7
 11999                           tblptrl	equ	0xFF6
 12000                           tablat	equ	0xFF5
 12001                           prodh	equ	0xFF4
 12002                           prodl	equ	0xFF3
 12003                           intcon	equ	0xFF2
 12004                           postinc0	equ	0xFEE
 12005                           wreg	equ	0xFE8
 12006                           indf2	equ	0xFDF
 12007                           postinc2	equ	0xFDE
 12008                           fsr2h	equ	0xFDA
 12009                           fsr2l	equ	0xFD9
 12010                           status	equ	0xFD8
 12011                           
 12012 ;; *************** function ___flsub *****************
 12013 ;; Defined at:
 12014 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flsub.c"
 12015 ;; Parameters:    Size  Location     Type
 12016 ;;  f1              4   71[BANK0 ] long 
 12017 ;;  f2              4   75[BANK0 ] long 
 12018 ;; Auto vars:     Size  Location     Type
 12019 ;;		None
 12020 ;; Return value:  Size  Location     Type
 12021 ;;                  4   71[BANK0 ] long 
 12022 ;; Registers used:
 12023 ;;		wreg, status,2, status,0, cstack
 12024 ;; Tracked objects:
 12025 ;;		On entry : 0/0
 12026 ;;		On exit  : 0/0
 12027 ;;		Unchanged: 0/0
 12028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12029 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12032 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12033 ;;Total ram usage:        8 bytes
 12034 ;; Hardware stack levels used:    1
 12035 ;; Hardware stack levels required when called:    5
 12036 ;; This function calls:
 12037 ;;		___fladd
 12038 ;; This function is called by:
 12039 ;;		_sprintf
 12040 ;; This function uses a non-reentrant model
 12041 ;;
 12042                           
 12043                           	psect	text25
 12044  015A26                     __ptext25:
 12045                           	opt stack 0
 12046  015A26                     ___flsub:
 12047                           	opt stack 23
 12048                           
 12049                           ; BSR set to: 0
 12050                           ;incstack = 0
 12051  015A26  0100               	movlb	0	; () banked
 12052  015A28  51AB               	movf	___flsub@f2& (0+255),w,b
 12053  015A2A  0100               	movlb	0	; () banked
 12054  015A2C  11AC               	iorwf	(___flsub@f2+1)& (0+255),w,b
 12055  015A2E  0100               	movlb	0	; () banked
 12056  015A30  11AD               	iorwf	(___flsub@f2+2)& (0+255),w,b
 12057  015A32  0100               	movlb	0	; () banked
 12058  015A34  11AE               	iorwf	(___flsub@f2+3)& (0+255),w,b
 12059  015A36  B4D8               	btfsc	status,2,c
 12060  015A38  D00A               	goto	l7796
 12061                           
 12062                           ; BSR set to: 0
 12063  015A3A  0E00               	movlw	0
 12064  015A3C  0100               	movlb	0	; () banked
 12065  015A3E  1BAB               	xorwf	___flsub@f2& (0+255),f,b
 12066  015A40  0E00               	movlw	0
 12067  015A42  1BAC               	xorwf	(___flsub@f2+1)& (0+255),f,b
 12068  015A44  0E00               	movlw	0
 12069  015A46  1BAD               	xorwf	(___flsub@f2+2)& (0+255),f,b
 12070  015A48  0E80               	movlw	128
 12071  015A4A  1BAE               	xorwf	(___flsub@f2+3)& (0+255),f,b
 12072  015A4C  D000               	goto	l7796
 12073  015A4E                     l7796:
 12074                           
 12075                           ; BSR set to: 0
 12076  015A4E  C0A7  F09B         	movff	___flsub@f1,___fladd@f1
 12077  015A52  C0A8  F09C         	movff	___flsub@f1+1,___fladd@f1+1
 12078  015A56  C0A9  F09D         	movff	___flsub@f1+2,___fladd@f1+2
 12079  015A5A  C0AA  F09E         	movff	___flsub@f1+3,___fladd@f1+3
 12080  015A5E  C0AB  F09F         	movff	___flsub@f2,___fladd@f2
 12081  015A62  C0AC  F0A0         	movff	___flsub@f2+1,___fladd@f2+1
 12082  015A66  C0AD  F0A1         	movff	___flsub@f2+2,___fladd@f2+2
 12083  015A6A  C0AE  F0A2         	movff	___flsub@f2+3,___fladd@f2+3
 12084  015A6E  ECAD  F09E         	call	___fladd	;wreg free
 12085  015A72  C09B  F0A7         	movff	?___fladd,?___flsub
 12086  015A76  C09C  F0A8         	movff	?___fladd+1,?___flsub+1
 12087  015A7A  C09D  F0A9         	movff	?___fladd+2,?___flsub+2
 12088  015A7E  C09E  F0AA         	movff	?___fladd+3,?___flsub+3
 12089  015A82  0012               	return	
 12090  015A84  0012               	return		;funcret
 12091  015A86                     __end_of___flsub:
 12092                           	opt stack 0
 12093                           tblptru	equ	0xFF8
 12094                           tblptrh	equ	0xFF7
 12095                           tblptrl	equ	0xFF6
 12096                           tablat	equ	0xFF5
 12097                           prodh	equ	0xFF4
 12098                           prodl	equ	0xFF3
 12099                           intcon	equ	0xFF2
 12100                           postinc0	equ	0xFEE
 12101                           wreg	equ	0xFE8
 12102                           indf2	equ	0xFDF
 12103                           postinc2	equ	0xFDE
 12104                           fsr2h	equ	0xFDA
 12105                           fsr2l	equ	0xFD9
 12106                           status	equ	0xFD8
 12107                           
 12108 ;; *************** function ___fladd *****************
 12109 ;; Defined at:
 12110 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fladd.c"
 12111 ;; Parameters:    Size  Location     Type
 12112 ;;  f1              4   59[BANK0 ] long 
 12113 ;;  f2              4   63[BANK0 ] long 
 12114 ;; Auto vars:     Size  Location     Type
 12115 ;;  exp1            1   70[BANK0 ] unsigned char 
 12116 ;;  exp2            1   69[BANK0 ] unsigned char 
 12117 ;;  sign            1   68[BANK0 ] unsigned char 
 12118 ;; Return value:  Size  Location     Type
 12119 ;;                  4   59[BANK0 ] unsigned char 
 12120 ;; Registers used:
 12121 ;;		wreg, status,2, status,0, cstack
 12122 ;; Tracked objects:
 12123 ;;		On entry : 0/0
 12124 ;;		On exit  : 0/0
 12125 ;;		Unchanged: 0/0
 12126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12127 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12128 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12129 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12130 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12131 ;;Total ram usage:       12 bytes
 12132 ;; Hardware stack levels used:    1
 12133 ;; Hardware stack levels required when called:    4
 12134 ;; This function calls:
 12135 ;;		___flpack
 12136 ;; This function is called by:
 12137 ;;		_main
 12138 ;;		_sprintf
 12139 ;;		___flsub
 12140 ;; This function uses a non-reentrant model
 12141 ;;
 12142                           
 12143                           	psect	text26
 12144  013D5A                     __ptext26:
 12145                           	opt stack 0
 12146  013D5A                     ___fladd:
 12147                           	opt stack 26
 12148                           
 12149                           ;incstack = 0
 12150  013D5A  0100               	movlb	0	; () banked
 12151  013D5C  359D               	rlcf	(___fladd@f1+2)& (0+255),w,b
 12152  013D5E  359E               	rlcf	(___fladd@f1+3)& (0+255),w,b
 12153  013D60  0100               	movlb	0	; () banked
 12154  013D62  6FA6               	movwf	___fladd@exp1& (0+255),b
 12155  013D64  0100               	movlb	0	; () banked
 12156  013D66  35A1               	rlcf	(___fladd@f2+2)& (0+255),w,b
 12157  013D68  35A2               	rlcf	(___fladd@f2+3)& (0+255),w,b
 12158  013D6A  0100               	movlb	0	; () banked
 12159  013D6C  6FA5               	movwf	___fladd@exp2& (0+255),b
 12160  013D6E  0100               	movlb	0	; () banked
 12161  013D70  51A6               	movf	___fladd@exp1& (0+255),w,b
 12162  013D72  0100               	movlb	0	; () banked
 12163  013D74  B4D8               	btfsc	status,2,c
 12164  013D76  D011               	goto	l1312
 12165                           
 12166                           ; BSR set to: 0
 12167  013D78  0100               	movlb	0	; () banked
 12168  013D7A  51A5               	movf	___fladd@exp2& (0+255),w,b
 12169  013D7C  0100               	movlb	0	; () banked
 12170  013D7E  5DA6               	subwf	___fladd@exp1& (0+255),w,b
 12171  013D80  B0D8               	btfsc	status,0,c
 12172  013D82  D014               	goto	l7380
 12173                           
 12174                           ; BSR set to: 0
 12175  013D84  0100               	movlb	0	; () banked
 12176  013D86  51A6               	movf	___fladd@exp1& (0+255),w,b
 12177  013D88  0800               	sublw	0
 12178  013D8A  0100               	movlb	0	; () banked
 12179  013D8C  25A5               	addwf	___fladd@exp2& (0+255),w,b
 12180  013D8E  0100               	movlb	0	; () banked
 12181  013D90  6FA3               	movwf	??___fladd& (0+255),b
 12182  013D92  0E20               	movlw	32
 12183  013D94  0100               	movlb	0	; () banked
 12184  013D96  65A3               	cpfsgt	??___fladd& (0+255),b
 12185  013D98  D009               	goto	l7380
 12186  013D9A                     l1312:
 12187                           
 12188                           ; BSR set to: 0
 12189  013D9A  C09F  F09B         	movff	___fladd@f2,?___fladd
 12190  013D9E  C0A0  F09C         	movff	___fladd@f2+1,?___fladd+1
 12191  013DA2  C0A1  F09D         	movff	___fladd@f2+2,?___fladd+2
 12192  013DA6  C0A2  F09E         	movff	___fladd@f2+3,?___fladd+3
 12193  013DAA  0012               	return	
 12194  013DAC                     l7380:
 12195                           
 12196                           ; BSR set to: 0
 12197  013DAC  0100               	movlb	0	; () banked
 12198  013DAE  51A5               	movf	___fladd@exp2& (0+255),w,b
 12199  013DB0  0100               	movlb	0	; () banked
 12200  013DB2  B4D8               	btfsc	status,2,c
 12201  013DB4  D011               	goto	l1316
 12202                           
 12203                           ; BSR set to: 0
 12204  013DB6  0100               	movlb	0	; () banked
 12205  013DB8  51A6               	movf	___fladd@exp1& (0+255),w,b
 12206  013DBA  0100               	movlb	0	; () banked
 12207  013DBC  5DA5               	subwf	___fladd@exp2& (0+255),w,b
 12208  013DBE  B0D8               	btfsc	status,0,c
 12209  013DC0  D014               	goto	l7386
 12210                           
 12211                           ; BSR set to: 0
 12212  013DC2  0100               	movlb	0	; () banked
 12213  013DC4  51A5               	movf	___fladd@exp2& (0+255),w,b
 12214  013DC6  0800               	sublw	0
 12215  013DC8  0100               	movlb	0	; () banked
 12216  013DCA  25A6               	addwf	___fladd@exp1& (0+255),w,b
 12217  013DCC  0100               	movlb	0	; () banked
 12218  013DCE  6FA3               	movwf	??___fladd& (0+255),b
 12219  013DD0  0E20               	movlw	32
 12220  013DD2  0100               	movlb	0	; () banked
 12221  013DD4  65A3               	cpfsgt	??___fladd& (0+255),b
 12222  013DD6  D009               	goto	l7386
 12223  013DD8                     l1316:
 12224                           
 12225                           ; BSR set to: 0
 12226  013DD8  C09B  F09B         	movff	___fladd@f1,?___fladd
 12227  013DDC  C09C  F09C         	movff	___fladd@f1+1,?___fladd+1
 12228  013DE0  C09D  F09D         	movff	___fladd@f1+2,?___fladd+2
 12229  013DE4  C09E  F09E         	movff	___fladd@f1+3,?___fladd+3
 12230  013DE8  0012               	return	
 12231  013DEA                     l7386:
 12232                           
 12233                           ; BSR set to: 0
 12234  013DEA  0E06               	movlw	6
 12235  013DEC  0100               	movlb	0	; () banked
 12236  013DEE  6FA4               	movwf	___fladd@sign& (0+255),b
 12237                           
 12238                           ; BSR set to: 0
 12239  013DF0  0100               	movlb	0	; () banked
 12240  013DF2  AF9E               	btfss	(___fladd@f1+3)& (0+255),7,b
 12241  013DF4  D003               	goto	l7392
 12242                           
 12243                           ; BSR set to: 0
 12244  013DF6  0100               	movlb	0	; () banked
 12245  013DF8  8FA4               	bsf	___fladd@sign& (0+255),7,b
 12246  013DFA  D000               	goto	l7392
 12247  013DFC                     l7392:
 12248                           
 12249                           ; BSR set to: 0
 12250  013DFC  0100               	movlb	0	; () banked
 12251  013DFE  AFA2               	btfss	(___fladd@f2+3)& (0+255),7,b
 12252  013E00  D002               	goto	l1318
 12253                           
 12254                           ; BSR set to: 0
 12255  013E02  0100               	movlb	0	; () banked
 12256  013E04  8DA4               	bsf	___fladd@sign& (0+255),6,b
 12257  013E06                     l1318:
 12258                           
 12259                           ; BSR set to: 0
 12260  013E06  0100               	movlb	0	; () banked
 12261  013E08  8F9D               	bsf	(___fladd@f1+2)& (0+255),7,b
 12262                           
 12263                           ; BSR set to: 0
 12264  013E0A  0EFF               	movlw	255
 12265  013E0C  0100               	movlb	0	; () banked
 12266  013E0E  179B               	andwf	___fladd@f1& (0+255),f,b
 12267  013E10  0EFF               	movlw	255
 12268  013E12  179C               	andwf	(___fladd@f1+1)& (0+255),f,b
 12269  013E14  0EFF               	movlw	255
 12270  013E16  179D               	andwf	(___fladd@f1+2)& (0+255),f,b
 12271  013E18  0E00               	movlw	0
 12272  013E1A  179E               	andwf	(___fladd@f1+3)& (0+255),f,b
 12273                           
 12274                           ; BSR set to: 0
 12275  013E1C  0100               	movlb	0	; () banked
 12276  013E1E  8FA1               	bsf	(___fladd@f2+2)& (0+255),7,b
 12277  013E20  0EFF               	movlw	255
 12278  013E22  0100               	movlb	0	; () banked
 12279  013E24  179F               	andwf	___fladd@f2& (0+255),f,b
 12280  013E26  0EFF               	movlw	255
 12281  013E28  17A0               	andwf	(___fladd@f2+1)& (0+255),f,b
 12282  013E2A  0EFF               	movlw	255
 12283  013E2C  17A1               	andwf	(___fladd@f2+2)& (0+255),f,b
 12284  013E2E  0E00               	movlw	0
 12285  013E30  17A2               	andwf	(___fladd@f2+3)& (0+255),f,b
 12286  013E32  0100               	movlb	0	; () banked
 12287  013E34  51A5               	movf	___fladd@exp2& (0+255),w,b
 12288  013E36  0100               	movlb	0	; () banked
 12289  013E38  5DA6               	subwf	___fladd@exp1& (0+255),w,b
 12290  013E3A  B0D8               	btfsc	status,0,c
 12291  013E3C  D02A               	goto	l7410
 12292  013E3E                     l7400:
 12293                           
 12294                           ; BSR set to: 0
 12295  013E3E  0100               	movlb	0	; () banked
 12296  013E40  90D8               	bcf	status,0,c
 12297  013E42  379F               	rlcf	___fladd@f2& (0+255),f,b
 12298  013E44  37A0               	rlcf	(___fladd@f2+1)& (0+255),f,b
 12299  013E46  37A1               	rlcf	(___fladd@f2+2)& (0+255),f,b
 12300  013E48  37A2               	rlcf	(___fladd@f2+3)& (0+255),f,b
 12301  013E4A  0100               	movlb	0	; () banked
 12302  013E4C  07A5               	decf	___fladd@exp2& (0+255),f,b
 12303                           
 12304                           ; BSR set to: 0
 12305  013E4E  0100               	movlb	0	; () banked
 12306  013E50  51A6               	movf	___fladd@exp1& (0+255),w,b
 12307  013E52  0100               	movlb	0	; () banked
 12308  013E54  19A5               	xorwf	___fladd@exp2& (0+255),w,b
 12309  013E56  B4D8               	btfsc	status,2,c
 12310  013E58  D014               	goto	l7408
 12311                           
 12312                           ; BSR set to: 0
 12313  013E5A  0100               	movlb	0	; () banked
 12314  013E5C  07A4               	decf	___fladd@sign& (0+255),f,b
 12315  013E5E  C0A4  F0A3         	movff	___fladd@sign,??___fladd
 12316  013E62  0E07               	movlw	7
 12317  013E64  0100               	movlb	0	; () banked
 12318  013E66  17A3               	andwf	??___fladd& (0+255),f,b
 12319  013E68  B4D8               	btfsc	status,2,c
 12320  013E6A  D00B               	goto	l7408
 12321  013E6C  D7E8               	goto	l7400
 12322                           
 12323                           ; BSR set to: 0
 12324                           
 12325                           ; BSR set to: 0
 12326  013E6E  D009               	goto	l7408
 12327  013E70                     l7406:
 12328                           
 12329                           ; BSR set to: 0
 12330  013E70  0100               	movlb	0	; () banked
 12331  013E72  90D8               	bcf	status,0,c
 12332  013E74  339E               	rrcf	(___fladd@f1+3)& (0+255),f,b
 12333  013E76  339D               	rrcf	(___fladd@f1+2)& (0+255),f,b
 12334  013E78  339C               	rrcf	(___fladd@f1+1)& (0+255),f,b
 12335  013E7A  339B               	rrcf	___fladd@f1& (0+255),f,b
 12336  013E7C  0100               	movlb	0	; () banked
 12337  013E7E  2BA6               	incf	___fladd@exp1& (0+255),f,b
 12338  013E80  D000               	goto	l7408
 12339  013E82                     l7408:
 12340                           
 12341                           ; BSR set to: 0
 12342  013E82  0100               	movlb	0	; () banked
 12343  013E84  51A5               	movf	___fladd@exp2& (0+255),w,b
 12344  013E86  0100               	movlb	0	; () banked
 12345  013E88  19A6               	xorwf	___fladd@exp1& (0+255),w,b
 12346  013E8A  B4D8               	btfsc	status,2,c
 12347  013E8C  D032               	goto	l1327
 12348  013E8E  D7F0               	goto	l7406
 12349                           
 12350                           ; BSR set to: 0
 12351  013E90  D030               	goto	l1327
 12352  013E92                     l7410:
 12353                           
 12354                           ; BSR set to: 0
 12355  013E92  0100               	movlb	0	; () banked
 12356  013E94  51A6               	movf	___fladd@exp1& (0+255),w,b
 12357  013E96  0100               	movlb	0	; () banked
 12358  013E98  5DA5               	subwf	___fladd@exp2& (0+255),w,b
 12359  013E9A  B0D8               	btfsc	status,0,c
 12360  013E9C  D02A               	goto	l1327
 12361  013E9E                     l7412:
 12362                           
 12363                           ; BSR set to: 0
 12364  013E9E  0100               	movlb	0	; () banked
 12365  013EA0  90D8               	bcf	status,0,c
 12366  013EA2  379B               	rlcf	___fladd@f1& (0+255),f,b
 12367  013EA4  379C               	rlcf	(___fladd@f1+1)& (0+255),f,b
 12368  013EA6  379D               	rlcf	(___fladd@f1+2)& (0+255),f,b
 12369  013EA8  379E               	rlcf	(___fladd@f1+3)& (0+255),f,b
 12370  013EAA  0100               	movlb	0	; () banked
 12371  013EAC  07A6               	decf	___fladd@exp1& (0+255),f,b
 12372                           
 12373                           ; BSR set to: 0
 12374  013EAE  0100               	movlb	0	; () banked
 12375  013EB0  51A6               	movf	___fladd@exp1& (0+255),w,b
 12376  013EB2  0100               	movlb	0	; () banked
 12377  013EB4  19A5               	xorwf	___fladd@exp2& (0+255),w,b
 12378  013EB6  B4D8               	btfsc	status,2,c
 12379  013EB8  D014               	goto	l7420
 12380                           
 12381                           ; BSR set to: 0
 12382  013EBA  0100               	movlb	0	; () banked
 12383  013EBC  07A4               	decf	___fladd@sign& (0+255),f,b
 12384  013EBE  C0A4  F0A3         	movff	___fladd@sign,??___fladd
 12385  013EC2  0E07               	movlw	7
 12386  013EC4  0100               	movlb	0	; () banked
 12387  013EC6  17A3               	andwf	??___fladd& (0+255),f,b
 12388  013EC8  B4D8               	btfsc	status,2,c
 12389  013ECA  D00B               	goto	l7420
 12390  013ECC  D7E8               	goto	l7412
 12391                           
 12392                           ; BSR set to: 0
 12393                           
 12394                           ; BSR set to: 0
 12395  013ECE  D009               	goto	l7420
 12396  013ED0                     l7418:
 12397                           
 12398                           ; BSR set to: 0
 12399  013ED0  0100               	movlb	0	; () banked
 12400  013ED2  90D8               	bcf	status,0,c
 12401  013ED4  33A2               	rrcf	(___fladd@f2+3)& (0+255),f,b
 12402  013ED6  33A1               	rrcf	(___fladd@f2+2)& (0+255),f,b
 12403  013ED8  33A0               	rrcf	(___fladd@f2+1)& (0+255),f,b
 12404  013EDA  339F               	rrcf	___fladd@f2& (0+255),f,b
 12405  013EDC  0100               	movlb	0	; () banked
 12406  013EDE  2BA5               	incf	___fladd@exp2& (0+255),f,b
 12407  013EE0  D000               	goto	l7420
 12408  013EE2                     l7420:
 12409                           
 12410                           ; BSR set to: 0
 12411  013EE2  0100               	movlb	0	; () banked
 12412  013EE4  51A5               	movf	___fladd@exp2& (0+255),w,b
 12413  013EE6  0100               	movlb	0	; () banked
 12414  013EE8  19A6               	xorwf	___fladd@exp1& (0+255),w,b
 12415  013EEA  B4D8               	btfsc	status,2,c
 12416  013EEC  D002               	goto	l1327
 12417  013EEE  D7F0               	goto	l7418
 12418                           
 12419                           ; BSR set to: 0
 12420  013EF0  D000               	goto	l1327
 12421  013EF2                     l1327:
 12422                           
 12423                           ; BSR set to: 0
 12424  013EF2  0100               	movlb	0	; () banked
 12425  013EF4  AFA4               	btfss	___fladd@sign& (0+255),7,b
 12426  013EF6  D011               	goto	l7424
 12427                           
 12428                           ; BSR set to: 0
 12429  013EF8  0EFF               	movlw	255
 12430  013EFA  0100               	movlb	0	; () banked
 12431  013EFC  1B9B               	xorwf	___fladd@f1& (0+255),f,b
 12432  013EFE  0EFF               	movlw	255
 12433  013F00  1B9C               	xorwf	(___fladd@f1+1)& (0+255),f,b
 12434  013F02  0EFF               	movlw	255
 12435  013F04  1B9D               	xorwf	(___fladd@f1+2)& (0+255),f,b
 12436  013F06  0EFF               	movlw	255
 12437  013F08  1B9E               	xorwf	(___fladd@f1+3)& (0+255),f,b
 12438  013F0A  0E01               	movlw	1
 12439  013F0C  0100               	movlb	0	; () banked
 12440  013F0E  279B               	addwf	___fladd@f1& (0+255),f,b
 12441  013F10  0E00               	movlw	0
 12442  013F12  239C               	addwfc	(___fladd@f1+1)& (0+255),f,b
 12443  013F14  239D               	addwfc	(___fladd@f1+2)& (0+255),f,b
 12444  013F16  239E               	addwfc	(___fladd@f1+3)& (0+255),f,b
 12445  013F18  D000               	goto	l7424
 12446  013F1A                     l7424:
 12447                           
 12448                           ; BSR set to: 0
 12449  013F1A  0100               	movlb	0	; () banked
 12450  013F1C  ADA4               	btfss	___fladd@sign& (0+255),6,b
 12451  013F1E  D011               	goto	l7428
 12452                           
 12453                           ; BSR set to: 0
 12454  013F20  0EFF               	movlw	255
 12455  013F22  0100               	movlb	0	; () banked
 12456  013F24  1B9F               	xorwf	___fladd@f2& (0+255),f,b
 12457  013F26  0EFF               	movlw	255
 12458  013F28  1BA0               	xorwf	(___fladd@f2+1)& (0+255),f,b
 12459  013F2A  0EFF               	movlw	255
 12460  013F2C  1BA1               	xorwf	(___fladd@f2+2)& (0+255),f,b
 12461  013F2E  0EFF               	movlw	255
 12462  013F30  1BA2               	xorwf	(___fladd@f2+3)& (0+255),f,b
 12463  013F32  0E01               	movlw	1
 12464  013F34  0100               	movlb	0	; () banked
 12465  013F36  279F               	addwf	___fladd@f2& (0+255),f,b
 12466  013F38  0E00               	movlw	0
 12467  013F3A  23A0               	addwfc	(___fladd@f2+1)& (0+255),f,b
 12468  013F3C  23A1               	addwfc	(___fladd@f2+2)& (0+255),f,b
 12469  013F3E  23A2               	addwfc	(___fladd@f2+3)& (0+255),f,b
 12470  013F40  D000               	goto	l7428
 12471  013F42                     l7428:
 12472                           
 12473                           ; BSR set to: 0
 12474  013F42  0E00               	movlw	0
 12475  013F44  0100               	movlb	0	; () banked
 12476  013F46  6FA4               	movwf	___fladd@sign& (0+255),b
 12477                           
 12478                           ; BSR set to: 0
 12479  013F48  0100               	movlb	0	; () banked
 12480  013F4A  519B               	movf	___fladd@f1& (0+255),w,b
 12481  013F4C  0100               	movlb	0	; () banked
 12482  013F4E  279F               	addwf	___fladd@f2& (0+255),f,b
 12483  013F50  0100               	movlb	0	; () banked
 12484  013F52  519C               	movf	(___fladd@f1+1)& (0+255),w,b
 12485  013F54  0100               	movlb	0	; () banked
 12486  013F56  23A0               	addwfc	(___fladd@f2+1)& (0+255),f,b
 12487  013F58  0100               	movlb	0	; () banked
 12488  013F5A  519D               	movf	(___fladd@f1+2)& (0+255),w,b
 12489  013F5C  0100               	movlb	0	; () banked
 12490  013F5E  23A1               	addwfc	(___fladd@f2+2)& (0+255),f,b
 12491  013F60  0100               	movlb	0	; () banked
 12492  013F62  519E               	movf	(___fladd@f1+3)& (0+255),w,b
 12493  013F64  0100               	movlb	0	; () banked
 12494  013F66  23A2               	addwfc	(___fladd@f2+3)& (0+255),f,b
 12495                           
 12496                           ; BSR set to: 0
 12497  013F68  0100               	movlb	0	; () banked
 12498  013F6A  AFA2               	btfss	(___fladd@f2+3)& (0+255),7,b
 12499  013F6C  D014               	goto	l7438
 12500                           
 12501                           ; BSR set to: 0
 12502  013F6E  0EFF               	movlw	255
 12503  013F70  0100               	movlb	0	; () banked
 12504  013F72  1B9F               	xorwf	___fladd@f2& (0+255),f,b
 12505  013F74  0EFF               	movlw	255
 12506  013F76  1BA0               	xorwf	(___fladd@f2+1)& (0+255),f,b
 12507  013F78  0EFF               	movlw	255
 12508  013F7A  1BA1               	xorwf	(___fladd@f2+2)& (0+255),f,b
 12509  013F7C  0EFF               	movlw	255
 12510  013F7E  1BA2               	xorwf	(___fladd@f2+3)& (0+255),f,b
 12511  013F80  0E01               	movlw	1
 12512  013F82  0100               	movlb	0	; () banked
 12513  013F84  279F               	addwf	___fladd@f2& (0+255),f,b
 12514  013F86  0E00               	movlw	0
 12515  013F88  23A0               	addwfc	(___fladd@f2+1)& (0+255),f,b
 12516  013F8A  23A1               	addwfc	(___fladd@f2+2)& (0+255),f,b
 12517  013F8C  23A2               	addwfc	(___fladd@f2+3)& (0+255),f,b
 12518                           
 12519                           ; BSR set to: 0
 12520  013F8E  0E01               	movlw	1
 12521  013F90  0100               	movlb	0	; () banked
 12522  013F92  6FA4               	movwf	___fladd@sign& (0+255),b
 12523  013F94  D000               	goto	l7438
 12524  013F96                     l7438:
 12525                           
 12526                           ; BSR set to: 0
 12527  013F96  C09F  F070         	movff	___fladd@f2,___flpack@arg
 12528  013F9A  C0A0  F071         	movff	___fladd@f2+1,___flpack@arg+1
 12529  013F9E  C0A1  F072         	movff	___fladd@f2+2,___flpack@arg+2
 12530  013FA2  C0A2  F073         	movff	___fladd@f2+3,___flpack@arg+3
 12531  013FA6  C0A6  F074         	movff	___fladd@exp1,___flpack@exp
 12532  013FAA  C0A4  F075         	movff	___fladd@sign,___flpack@sign
 12533  013FAE  EC4B  F0A4         	call	___flpack	;wreg free
 12534  013FB2  C070  F09B         	movff	?___flpack,?___fladd
 12535  013FB6  C071  F09C         	movff	?___flpack+1,?___fladd+1
 12536  013FBA  C072  F09D         	movff	?___flpack+2,?___fladd+2
 12537  013FBE  C073  F09E         	movff	?___flpack+3,?___fladd+3
 12538  013FC2  0012               	return	
 12539  013FC4  0012               	return		;funcret
 12540  013FC6                     __end_of___fladd:
 12541                           	opt stack 0
 12542                           tblptru	equ	0xFF8
 12543                           tblptrh	equ	0xFF7
 12544                           tblptrl	equ	0xFF6
 12545                           tablat	equ	0xFF5
 12546                           prodh	equ	0xFF4
 12547                           prodl	equ	0xFF3
 12548                           intcon	equ	0xFF2
 12549                           postinc0	equ	0xFEE
 12550                           wreg	equ	0xFE8
 12551                           indf2	equ	0xFDF
 12552                           postinc2	equ	0xFDE
 12553                           fsr2h	equ	0xFDA
 12554                           fsr2l	equ	0xFD9
 12555                           status	equ	0xFD8
 12556                           
 12557 ;; *************** function ___flneg *****************
 12558 ;; Defined at:
 12559 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flneg.c"
 12560 ;; Parameters:    Size  Location     Type
 12561 ;;  f1              4   46[BANK0 ] unsigned char 
 12562 ;; Auto vars:     Size  Location     Type
 12563 ;;		None
 12564 ;; Return value:  Size  Location     Type
 12565 ;;                  4   46[BANK0 ] unsigned char 
 12566 ;; Registers used:
 12567 ;;		wreg, status,2, status,0
 12568 ;; Tracked objects:
 12569 ;;		On entry : 0/0
 12570 ;;		On exit  : 0/0
 12571 ;;		Unchanged: 0/0
 12572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12573 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12576 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12577 ;;Total ram usage:        4 bytes
 12578 ;; Hardware stack levels used:    1
 12579 ;; Hardware stack levels required when called:    3
 12580 ;; This function calls:
 12581 ;;		Nothing
 12582 ;; This function is called by:
 12583 ;;		_main
 12584 ;;		_sprintf
 12585 ;; This function uses a non-reentrant model
 12586 ;;
 12587                           
 12588                           	psect	text27
 12589  015BF0                     __ptext27:
 12590                           	opt stack 0
 12591  015BF0                     ___flneg:
 12592                           	opt stack 27
 12593                           
 12594                           ;incstack = 0
 12595  015BF0  0100               	movlb	0	; () banked
 12596  015BF2  518E               	movf	___flneg@f1& (0+255),w,b
 12597  015BF4  0100               	movlb	0	; () banked
 12598  015BF6  118F               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12599  015BF8  0100               	movlb	0	; () banked
 12600  015BFA  1190               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12601  015BFC  0100               	movlb	0	; () banked
 12602  015BFE  1191               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12603  015C00  B4D8               	btfsc	status,2,c
 12604  015C02  D00A               	goto	l7818
 12605                           
 12606                           ; BSR set to: 0
 12607  015C04  0E00               	movlw	0
 12608  015C06  0100               	movlb	0	; () banked
 12609  015C08  1B8E               	xorwf	___flneg@f1& (0+255),f,b
 12610  015C0A  0E00               	movlw	0
 12611  015C0C  1B8F               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12612  015C0E  0E00               	movlw	0
 12613  015C10  1B90               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12614  015C12  0E80               	movlw	128
 12615  015C14  1B91               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12616  015C16  D000               	goto	l7818
 12617  015C18                     l7818:
 12618                           
 12619                           ; BSR set to: 0
 12620  015C18  C08E  F08E         	movff	___flneg@f1,?___flneg
 12621  015C1C  C08F  F08F         	movff	___flneg@f1+1,?___flneg+1
 12622  015C20  C090  F090         	movff	___flneg@f1+2,?___flneg+2
 12623  015C24  C091  F091         	movff	___flneg@f1+3,?___flneg+3
 12624  015C28  0012               	return	
 12625                           
 12626                           ; BSR set to: 0
 12627                           
 12628                           ; BSR set to: 0
 12629  015C2A  0012               	return		;funcret
 12630  015C2C                     __end_of___flneg:
 12631                           	opt stack 0
 12632                           tblptru	equ	0xFF8
 12633                           tblptrh	equ	0xFF7
 12634                           tblptrl	equ	0xFF6
 12635                           tablat	equ	0xFF5
 12636                           prodh	equ	0xFF4
 12637                           prodl	equ	0xFF3
 12638                           intcon	equ	0xFF2
 12639                           postinc0	equ	0xFEE
 12640                           wreg	equ	0xFE8
 12641                           indf2	equ	0xFDF
 12642                           postinc2	equ	0xFDE
 12643                           fsr2h	equ	0xFDA
 12644                           fsr2l	equ	0xFD9
 12645                           status	equ	0xFD8
 12646                           
 12647 ;; *************** function ___flge *****************
 12648 ;; Defined at:
 12649 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flge.c"
 12650 ;; Parameters:    Size  Location     Type
 12651 ;;  ff1             4   16[BANK0 ] unsigned char 
 12652 ;;  ff2             4   20[BANK0 ] unsigned char 
 12653 ;; Auto vars:     Size  Location     Type
 12654 ;;		None
 12655 ;; Return value:  Size  Location     Type
 12656 ;;		None               void
 12657 ;; Registers used:
 12658 ;;		wreg, status,2, status,0
 12659 ;; Tracked objects:
 12660 ;;		On entry : 0/0
 12661 ;;		On exit  : 0/0
 12662 ;;		Unchanged: 0/0
 12663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12664 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12666 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12667 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12668 ;;Total ram usage:       12 bytes
 12669 ;; Hardware stack levels used:    1
 12670 ;; Hardware stack levels required when called:    3
 12671 ;; This function calls:
 12672 ;;		Nothing
 12673 ;; This function is called by:
 12674 ;;		_sprintf
 12675 ;; This function uses a non-reentrant model
 12676 ;;
 12677                           
 12678                           	psect	text28
 12679  014F38                     __ptext28:
 12680                           	opt stack 0
 12681  014F38                     ___flge:
 12682                           	opt stack 25
 12683                           
 12684                           ; BSR set to: 0
 12685                           ;incstack = 0
 12686  014F38  0100               	movlb	0	; () banked
 12687  014F3A  AF73               	btfss	(___flge@ff1+3)& (0+255),7,b
 12688  014F3C  D027               	goto	l7804
 12689                           
 12690                           ; BSR set to: 0
 12691  014F3E  C070  F078         	movff	___flge@ff1,??___flge
 12692  014F42  C071  F079         	movff	___flge@ff1+1,??___flge+1
 12693  014F46  C072  F07A         	movff	___flge@ff1+2,??___flge+2
 12694  014F4A  C073  F07B         	movff	___flge@ff1+3,??___flge+3
 12695  014F4E  0100               	movlb	0	; () banked
 12696  014F50  1F78               	comf	??___flge& (0+255),f,b
 12697  014F52  1F79               	comf	(??___flge+1)& (0+255),f,b
 12698  014F54  1F7A               	comf	(??___flge+2)& (0+255),f,b
 12699  014F56  1F7B               	comf	(??___flge+3)& (0+255),f,b
 12700  014F58  2B78               	incf	??___flge& (0+255),f,b
 12701  014F5A  0E00               	movlw	0
 12702  014F5C  2379               	addwfc	(??___flge+1)& (0+255),f,b
 12703  014F5E  237A               	addwfc	(??___flge+2)& (0+255),f,b
 12704  014F60  237B               	addwfc	(??___flge+3)& (0+255),f,b
 12705  014F62  0E00               	movlw	0
 12706  014F64  0100               	movlb	0	; () banked
 12707  014F66  2578               	addwf	??___flge& (0+255),w,b
 12708  014F68  0100               	movlb	0	; () banked
 12709  014F6A  6F70               	movwf	___flge@ff1& (0+255),b
 12710  014F6C  0E00               	movlw	0
 12711  014F6E  0100               	movlb	0	; () banked
 12712  014F70  2179               	addwfc	(??___flge+1)& (0+255),w,b
 12713  014F72  0100               	movlb	0	; () banked
 12714  014F74  6F71               	movwf	(___flge@ff1+1)& (0+255),b
 12715  014F76  0E00               	movlw	0
 12716  014F78  0100               	movlb	0	; () banked
 12717  014F7A  217A               	addwfc	(??___flge+2)& (0+255),w,b
 12718  014F7C  0100               	movlb	0	; () banked
 12719  014F7E  6F72               	movwf	(___flge@ff1+2)& (0+255),b
 12720  014F80  0E80               	movlw	128
 12721  014F82  0100               	movlb	0	; () banked
 12722  014F84  217B               	addwfc	(??___flge+3)& (0+255),w,b
 12723  014F86  0100               	movlb	0	; () banked
 12724  014F88  6F73               	movwf	(___flge@ff1+3)& (0+255),b
 12725  014F8A  D000               	goto	l7804
 12726  014F8C                     l7804:
 12727                           
 12728                           ; BSR set to: 0
 12729  014F8C  0100               	movlb	0	; () banked
 12730  014F8E  AF77               	btfss	(___flge@ff2+3)& (0+255),7,b
 12731  014F90  D026               	goto	l1369
 12732                           
 12733                           ; BSR set to: 0
 12734  014F92  C074  F078         	movff	___flge@ff2,??___flge
 12735  014F96  C075  F079         	movff	___flge@ff2+1,??___flge+1
 12736  014F9A  C076  F07A         	movff	___flge@ff2+2,??___flge+2
 12737  014F9E  C077  F07B         	movff	___flge@ff2+3,??___flge+3
 12738  014FA2  0100               	movlb	0	; () banked
 12739  014FA4  1F78               	comf	??___flge& (0+255),f,b
 12740  014FA6  1F79               	comf	(??___flge+1)& (0+255),f,b
 12741  014FA8  1F7A               	comf	(??___flge+2)& (0+255),f,b
 12742  014FAA  1F7B               	comf	(??___flge+3)& (0+255),f,b
 12743  014FAC  2B78               	incf	??___flge& (0+255),f,b
 12744  014FAE  0E00               	movlw	0
 12745  014FB0  2379               	addwfc	(??___flge+1)& (0+255),f,b
 12746  014FB2  237A               	addwfc	(??___flge+2)& (0+255),f,b
 12747  014FB4  237B               	addwfc	(??___flge+3)& (0+255),f,b
 12748  014FB6  0E00               	movlw	0
 12749  014FB8  0100               	movlb	0	; () banked
 12750  014FBA  2578               	addwf	??___flge& (0+255),w,b
 12751  014FBC  0100               	movlb	0	; () banked
 12752  014FBE  6F74               	movwf	___flge@ff2& (0+255),b
 12753  014FC0  0E00               	movlw	0
 12754  014FC2  0100               	movlb	0	; () banked
 12755  014FC4  2179               	addwfc	(??___flge+1)& (0+255),w,b
 12756  014FC6  0100               	movlb	0	; () banked
 12757  014FC8  6F75               	movwf	(___flge@ff2+1)& (0+255),b
 12758  014FCA  0E00               	movlw	0
 12759  014FCC  0100               	movlb	0	; () banked
 12760  014FCE  217A               	addwfc	(??___flge+2)& (0+255),w,b
 12761  014FD0  0100               	movlb	0	; () banked
 12762  014FD2  6F76               	movwf	(___flge@ff2+2)& (0+255),b
 12763  014FD4  0E80               	movlw	128
 12764  014FD6  0100               	movlb	0	; () banked
 12765  014FD8  217B               	addwfc	(??___flge+3)& (0+255),w,b
 12766  014FDA  0100               	movlb	0	; () banked
 12767  014FDC  6F77               	movwf	(___flge@ff2+3)& (0+255),b
 12768  014FDE                     l1369:
 12769                           
 12770                           ; BSR set to: 0
 12771  014FDE  0E00               	movlw	0
 12772  014FE0  0100               	movlb	0	; () banked
 12773  014FE2  1B70               	xorwf	___flge@ff1& (0+255),f,b
 12774  014FE4  0E00               	movlw	0
 12775  014FE6  1B71               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12776  014FE8  0E00               	movlw	0
 12777  014FEA  1B72               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12778  014FEC  0E80               	movlw	128
 12779  014FEE  1B73               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12780  014FF0  0E00               	movlw	0
 12781  014FF2  0100               	movlb	0	; () banked
 12782  014FF4  1B74               	xorwf	___flge@ff2& (0+255),f,b
 12783  014FF6  0E00               	movlw	0
 12784  014FF8  1B75               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12785  014FFA  0E00               	movlw	0
 12786  014FFC  1B76               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12787  014FFE  0E80               	movlw	128
 12788  015000  1B77               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12789  015002  0100               	movlb	0	; () banked
 12790  015004  5174               	movf	___flge@ff2& (0+255),w,b
 12791  015006  0100               	movlb	0	; () banked
 12792  015008  5D70               	subwf	___flge@ff1& (0+255),w,b
 12793  01500A  0100               	movlb	0	; () banked
 12794  01500C  5175               	movf	(___flge@ff2+1)& (0+255),w,b
 12795  01500E  0100               	movlb	0	; () banked
 12796  015010  5971               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12797  015012  0100               	movlb	0	; () banked
 12798  015014  5176               	movf	(___flge@ff2+2)& (0+255),w,b
 12799  015016  0100               	movlb	0	; () banked
 12800  015018  5972               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12801  01501A  0100               	movlb	0	; () banked
 12802  01501C  5177               	movf	(___flge@ff2+3)& (0+255),w,b
 12803  01501E  0100               	movlb	0	; () banked
 12804  015020  5973               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12805  015022  B0D8               	btfsc	status,0,c
 12806  015024  D002               	goto	l7810
 12807                           
 12808                           ; BSR set to: 0
 12809  015026  90D8               	bcf	status,0,c
 12810  015028  0012               	return	
 12811  01502A                     l7810:
 12812                           
 12813                           ; BSR set to: 0
 12814  01502A  80D8               	bsf	status,0,c
 12815                           
 12816                           ; BSR set to: 0
 12817  01502C  0012               	return	
 12818                           
 12819                           ; BSR set to: 0
 12820                           
 12821                           ; BSR set to: 0
 12822  01502E  0012               	return		;funcret
 12823  015030                     __end_of___flge:
 12824                           	opt stack 0
 12825                           tblptru	equ	0xFF8
 12826                           tblptrh	equ	0xFF7
 12827                           tblptrl	equ	0xFF6
 12828                           tablat	equ	0xFF5
 12829                           prodh	equ	0xFF4
 12830                           prodl	equ	0xFF3
 12831                           intcon	equ	0xFF2
 12832                           postinc0	equ	0xFEE
 12833                           wreg	equ	0xFE8
 12834                           indf2	equ	0xFDF
 12835                           postinc2	equ	0xFDE
 12836                           fsr2h	equ	0xFDA
 12837                           fsr2l	equ	0xFD9
 12838                           status	equ	0xFD8
 12839                           
 12840 ;; *************** function ___lwtofl *****************
 12841 ;; Defined at:
 12842 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtofl.c"
 12843 ;; Parameters:    Size  Location     Type
 12844 ;;  c               2   26[BANK0 ] unsigned int 
 12845 ;; Auto vars:     Size  Location     Type
 12846 ;;		None
 12847 ;; Return value:  Size  Location     Type
 12848 ;;                  4   26[BANK0 ] unsigned int 
 12849 ;; Registers used:
 12850 ;;		wreg, status,2, status,0, cstack
 12851 ;; Tracked objects:
 12852 ;;		On entry : 0/0
 12853 ;;		On exit  : 0/0
 12854 ;;		Unchanged: 0/0
 12855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12856 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12859 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12860 ;;Total ram usage:        4 bytes
 12861 ;; Hardware stack levels used:    1
 12862 ;; Hardware stack levels required when called:    4
 12863 ;; This function calls:
 12864 ;;		___flpack
 12865 ;; This function is called by:
 12866 ;;		_LCD_Handler
 12867 ;; This function uses a non-reentrant model
 12868 ;;
 12869                           
 12870                           	psect	text29
 12871  015D78                     __ptext29:
 12872                           	opt stack 0
 12873  015D78                     ___lwtofl:
 12874                           	opt stack 25
 12875                           
 12876                           ; BSR set to: 0
 12877                           ;incstack = 0
 12878  015D78  C07A  F070         	movff	___lwtofl@c,___flpack@arg
 12879  015D7C  C07B  F071         	movff	___lwtofl@c+1,___flpack@arg+1
 12880  015D80  0100               	movlb	0	; () banked
 12881  015D82  6B72               	clrf	(___flpack@arg+2)& (0+255),b
 12882  015D84  6B73               	clrf	(___flpack@arg+3)& (0+255),b
 12883  015D86  0E96               	movlw	150
 12884  015D88  0100               	movlb	0	; () banked
 12885  015D8A  6F74               	movwf	___flpack@exp& (0+255),b
 12886  015D8C  0E00               	movlw	0
 12887  015D8E  0100               	movlb	0	; () banked
 12888  015D90  6F75               	movwf	___flpack@sign& (0+255),b
 12889  015D92  EC4B  F0A4         	call	___flpack	;wreg free
 12890  015D96  C070  F07A         	movff	?___flpack,?___lwtofl
 12891  015D9A  C071  F07B         	movff	?___flpack+1,?___lwtofl+1
 12892  015D9E  C072  F07C         	movff	?___flpack+2,?___lwtofl+2
 12893  015DA2  C073  F07D         	movff	?___flpack+3,?___lwtofl+3
 12894  015DA6  0012               	return	
 12895  015DA8  0012               	return		;funcret
 12896  015DAA                     __end_of___lwtofl:
 12897                           	opt stack 0
 12898                           tblptru	equ	0xFF8
 12899                           tblptrh	equ	0xFF7
 12900                           tblptrl	equ	0xFF6
 12901                           tablat	equ	0xFF5
 12902                           prodh	equ	0xFF4
 12903                           prodl	equ	0xFF3
 12904                           intcon	equ	0xFF2
 12905                           postinc0	equ	0xFEE
 12906                           wreg	equ	0xFE8
 12907                           indf2	equ	0xFDF
 12908                           postinc2	equ	0xFDE
 12909                           fsr2h	equ	0xFDA
 12910                           fsr2l	equ	0xFD9
 12911                           status	equ	0xFD8
 12912                           
 12913 ;; *************** function ___fldiv *****************
 12914 ;; Defined at:
 12915 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldiv.c"
 12916 ;; Parameters:    Size  Location     Type
 12917 ;;  f1              4   30[BANK0 ] unsigned int 
 12918 ;;  f2              4   34[BANK0 ] unsigned int 
 12919 ;; Auto vars:     Size  Location     Type
 12920 ;;  f3              4   38[BANK0 ] unsigned int 
 12921 ;;  sign            1   44[BANK0 ] unsigned char 
 12922 ;;  exp             1   43[BANK0 ] unsigned char 
 12923 ;;  cntr            1   42[BANK0 ] unsigned char 
 12924 ;; Return value:  Size  Location     Type
 12925 ;;                  4   30[BANK0 ] unsigned char 
 12926 ;; Registers used:
 12927 ;;		wreg, status,2, status,0, cstack
 12928 ;; Tracked objects:
 12929 ;;		On entry : 0/0
 12930 ;;		On exit  : 0/0
 12931 ;;		Unchanged: 0/0
 12932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12933 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12934 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12936 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12937 ;;Total ram usage:       15 bytes
 12938 ;; Hardware stack levels used:    1
 12939 ;; Hardware stack levels required when called:    4
 12940 ;; This function calls:
 12941 ;;		___flpack
 12942 ;; This function is called by:
 12943 ;;		_LCD_Handler
 12944 ;; This function uses a non-reentrant model
 12945 ;;
 12946                           
 12947                           	psect	text30
 12948  014CE8                     __ptext30:
 12949                           	opt stack 0
 12950  014CE8                     ___fldiv:
 12951                           	opt stack 25
 12952                           
 12953                           ;incstack = 0
 12954  014CE8  0100               	movlb	0	; () banked
 12955  014CEA  3580               	rlcf	(___fldiv@f1+2)& (0+255),w,b
 12956  014CEC  3581               	rlcf	(___fldiv@f1+3)& (0+255),w,b
 12957  014CEE  0100               	movlb	0	; () banked
 12958  014CF0  6F8B               	movwf	___fldiv@exp& (0+255),b
 12959  014CF2  0100               	movlb	0	; () banked
 12960  014CF4  518B               	movf	___fldiv@exp& (0+255),w,b
 12961  014CF6  A4D8               	btfss	status,2,c
 12962  014CF8  D00A               	goto	l8204
 12963                           
 12964                           ; BSR set to: 0
 12965  014CFA  0E00               	movlw	0
 12966  014CFC  0100               	movlb	0	; () banked
 12967  014CFE  6F7E               	movwf	?___fldiv& (0+255),b
 12968  014D00  0E00               	movlw	0
 12969  014D02  6F7F               	movwf	(?___fldiv+1)& (0+255),b
 12970  014D04  0E00               	movlw	0
 12971  014D06  6F80               	movwf	(?___fldiv+2)& (0+255),b
 12972  014D08  0E00               	movlw	0
 12973  014D0A  6F81               	movwf	(?___fldiv+3)& (0+255),b
 12974                           
 12975                           ; BSR set to: 0
 12976  014D0C  0012               	return	
 12977  014D0E                     l8204:
 12978                           
 12979                           ; BSR set to: 0
 12980  014D0E  0100               	movlb	0	; () banked
 12981  014D10  3584               	rlcf	(___fldiv@f2+2)& (0+255),w,b
 12982  014D12  3585               	rlcf	(___fldiv@f2+3)& (0+255),w,b
 12983  014D14  0100               	movlb	0	; () banked
 12984  014D16  6F8C               	movwf	___fldiv@sign& (0+255),b
 12985  014D18  0100               	movlb	0	; () banked
 12986  014D1A  518C               	movf	___fldiv@sign& (0+255),w,b
 12987  014D1C  A4D8               	btfss	status,2,c
 12988  014D1E  D00A               	goto	l8210
 12989                           
 12990                           ; BSR set to: 0
 12991  014D20  0E00               	movlw	0
 12992  014D22  0100               	movlb	0	; () banked
 12993  014D24  6F7E               	movwf	?___fldiv& (0+255),b
 12994  014D26  0E00               	movlw	0
 12995  014D28  6F7F               	movwf	(?___fldiv+1)& (0+255),b
 12996  014D2A  0E00               	movlw	0
 12997  014D2C  6F80               	movwf	(?___fldiv+2)& (0+255),b
 12998  014D2E  0E00               	movlw	0
 12999  014D30  6F81               	movwf	(?___fldiv+3)& (0+255),b
 13000                           
 13001                           ; BSR set to: 0
 13002  014D32  0012               	return	
 13003  014D34                     l8210:
 13004                           
 13005                           ; BSR set to: 0
 13006  014D34  0100               	movlb	0	; () banked
 13007  014D36  518C               	movf	___fldiv@sign& (0+255),w,b
 13008  014D38  0F89               	addlw	137
 13009  014D3A  0100               	movlb	0	; () banked
 13010  014D3C  5F8B               	subwf	___fldiv@exp& (0+255),f,b
 13011                           
 13012                           ; BSR set to: 0
 13013  014D3E  C081  F08C         	movff	___fldiv@f1+3,___fldiv@sign
 13014  014D42  0100               	movlb	0	; () banked
 13015  014D44  5185               	movf	(___fldiv@f2+3)& (0+255),w,b
 13016  014D46  0100               	movlb	0	; () banked
 13017  014D48  1B8C               	xorwf	___fldiv@sign& (0+255),f,b
 13018  014D4A  0E80               	movlw	128
 13019  014D4C  0100               	movlb	0	; () banked
 13020  014D4E  178C               	andwf	___fldiv@sign& (0+255),f,b
 13021                           
 13022                           ; BSR set to: 0
 13023  014D50  0100               	movlb	0	; () banked
 13024  014D52  8F80               	bsf	(___fldiv@f1+2)& (0+255),7,b
 13025                           
 13026                           ; BSR set to: 0
 13027  014D54  0EFF               	movlw	255
 13028  014D56  0100               	movlb	0	; () banked
 13029  014D58  177E               	andwf	___fldiv@f1& (0+255),f,b
 13030  014D5A  0EFF               	movlw	255
 13031  014D5C  177F               	andwf	(___fldiv@f1+1)& (0+255),f,b
 13032  014D5E  0EFF               	movlw	255
 13033  014D60  1780               	andwf	(___fldiv@f1+2)& (0+255),f,b
 13034  014D62  0E00               	movlw	0
 13035  014D64  1781               	andwf	(___fldiv@f1+3)& (0+255),f,b
 13036  014D66  0100               	movlb	0	; () banked
 13037  014D68  8F84               	bsf	(___fldiv@f2+2)& (0+255),7,b
 13038                           
 13039                           ; BSR set to: 0
 13040  014D6A  0EFF               	movlw	255
 13041  014D6C  0100               	movlb	0	; () banked
 13042  014D6E  1782               	andwf	___fldiv@f2& (0+255),f,b
 13043  014D70  0EFF               	movlw	255
 13044  014D72  1783               	andwf	(___fldiv@f2+1)& (0+255),f,b
 13045  014D74  0EFF               	movlw	255
 13046  014D76  1784               	andwf	(___fldiv@f2+2)& (0+255),f,b
 13047  014D78  0E00               	movlw	0
 13048  014D7A  1785               	andwf	(___fldiv@f2+3)& (0+255),f,b
 13049                           
 13050                           ; BSR set to: 0
 13051  014D7C  0E20               	movlw	32
 13052  014D7E  0100               	movlb	0	; () banked
 13053  014D80  6F8A               	movwf	___fldiv@cntr& (0+255),b
 13054  014D82  D000               	goto	l8222
 13055  014D84                     l8222:
 13056                           
 13057                           ; BSR set to: 0
 13058  014D84  0100               	movlb	0	; () banked
 13059  014D86  90D8               	bcf	status,0,c
 13060  014D88  3786               	rlcf	___fldiv@f3& (0+255),f,b
 13061  014D8A  3787               	rlcf	(___fldiv@f3+1)& (0+255),f,b
 13062  014D8C  3788               	rlcf	(___fldiv@f3+2)& (0+255),f,b
 13063  014D8E  3789               	rlcf	(___fldiv@f3+3)& (0+255),f,b
 13064                           
 13065                           ; BSR set to: 0
 13066  014D90  0100               	movlb	0	; () banked
 13067  014D92  5182               	movf	___fldiv@f2& (0+255),w,b
 13068  014D94  0100               	movlb	0	; () banked
 13069  014D96  5D7E               	subwf	___fldiv@f1& (0+255),w,b
 13070  014D98  0100               	movlb	0	; () banked
 13071  014D9A  5183               	movf	(___fldiv@f2+1)& (0+255),w,b
 13072  014D9C  0100               	movlb	0	; () banked
 13073  014D9E  597F               	subwfb	(___fldiv@f1+1)& (0+255),w,b
 13074  014DA0  0100               	movlb	0	; () banked
 13075  014DA2  5184               	movf	(___fldiv@f2+2)& (0+255),w,b
 13076  014DA4  0100               	movlb	0	; () banked
 13077  014DA6  5980               	subwfb	(___fldiv@f1+2)& (0+255),w,b
 13078  014DA8  0100               	movlb	0	; () banked
 13079  014DAA  5185               	movf	(___fldiv@f2+3)& (0+255),w,b
 13080  014DAC  0100               	movlb	0	; () banked
 13081  014DAE  5981               	subwfb	(___fldiv@f1+3)& (0+255),w,b
 13082  014DB0  A0D8               	btfss	status,0,c
 13083  014DB2  D013               	goto	l8230
 13084                           
 13085                           ; BSR set to: 0
 13086  014DB4  0100               	movlb	0	; () banked
 13087  014DB6  5182               	movf	___fldiv@f2& (0+255),w,b
 13088  014DB8  0100               	movlb	0	; () banked
 13089  014DBA  5F7E               	subwf	___fldiv@f1& (0+255),f,b
 13090  014DBC  0100               	movlb	0	; () banked
 13091  014DBE  5183               	movf	(___fldiv@f2+1)& (0+255),w,b
 13092  014DC0  0100               	movlb	0	; () banked
 13093  014DC2  5B7F               	subwfb	(___fldiv@f1+1)& (0+255),f,b
 13094  014DC4  0100               	movlb	0	; () banked
 13095  014DC6  5184               	movf	(___fldiv@f2+2)& (0+255),w,b
 13096  014DC8  0100               	movlb	0	; () banked
 13097  014DCA  5B80               	subwfb	(___fldiv@f1+2)& (0+255),f,b
 13098  014DCC  0100               	movlb	0	; () banked
 13099  014DCE  5185               	movf	(___fldiv@f2+3)& (0+255),w,b
 13100  014DD0  0100               	movlb	0	; () banked
 13101  014DD2  5B81               	subwfb	(___fldiv@f1+3)& (0+255),f,b
 13102                           
 13103                           ; BSR set to: 0
 13104  014DD4  0100               	movlb	0	; () banked
 13105  014DD6  8186               	bsf	___fldiv@f3& (0+255),0,b
 13106  014DD8  D000               	goto	l8230
 13107  014DDA                     l8230:
 13108                           
 13109                           ; BSR set to: 0
 13110  014DDA  0100               	movlb	0	; () banked
 13111  014DDC  90D8               	bcf	status,0,c
 13112  014DDE  377E               	rlcf	___fldiv@f1& (0+255),f,b
 13113  014DE0  377F               	rlcf	(___fldiv@f1+1)& (0+255),f,b
 13114  014DE2  3780               	rlcf	(___fldiv@f1+2)& (0+255),f,b
 13115  014DE4  3781               	rlcf	(___fldiv@f1+3)& (0+255),f,b
 13116                           
 13117                           ; BSR set to: 0
 13118  014DE6  0100               	movlb	0	; () banked
 13119  014DE8  2F8A               	decfsz	___fldiv@cntr& (0+255),f,b
 13120  014DEA  D7CC               	goto	l8222
 13121  014DEC  D000               	goto	l8234
 13122  014DEE                     l8234:
 13123                           
 13124                           ; BSR set to: 0
 13125  014DEE  C086  F070         	movff	___fldiv@f3,___flpack@arg
 13126  014DF2  C087  F071         	movff	___fldiv@f3+1,___flpack@arg+1
 13127  014DF6  C088  F072         	movff	___fldiv@f3+2,___flpack@arg+2
 13128  014DFA  C089  F073         	movff	___fldiv@f3+3,___flpack@arg+3
 13129  014DFE  C08B  F074         	movff	___fldiv@exp,___flpack@exp
 13130  014E02  C08C  F075         	movff	___fldiv@sign,___flpack@sign
 13131  014E06  EC4B  F0A4         	call	___flpack	;wreg free
 13132  014E0A  C070  F07E         	movff	?___flpack,?___fldiv
 13133  014E0E  C071  F07F         	movff	?___flpack+1,?___fldiv+1
 13134  014E12  C072  F080         	movff	?___flpack+2,?___fldiv+2
 13135  014E16  C073  F081         	movff	?___flpack+3,?___fldiv+3
 13136  014E1A  0012               	return	
 13137  014E1C  0012               	return		;funcret
 13138  014E1E                     __end_of___fldiv:
 13139                           	opt stack 0
 13140                           tblptru	equ	0xFF8
 13141                           tblptrh	equ	0xFF7
 13142                           tblptrl	equ	0xFF6
 13143                           tablat	equ	0xFF5
 13144                           prodh	equ	0xFF4
 13145                           prodl	equ	0xFF3
 13146                           intcon	equ	0xFF2
 13147                           postinc0	equ	0xFEE
 13148                           wreg	equ	0xFE8
 13149                           indf2	equ	0xFDF
 13150                           postinc2	equ	0xFDE
 13151                           fsr2h	equ	0xFDA
 13152                           fsr2l	equ	0xFD9
 13153                           status	equ	0xFD8
 13154                           
 13155 ;; *************** function ___flpack *****************
 13156 ;; Defined at:
 13157 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\double.c"
 13158 ;; Parameters:    Size  Location     Type
 13159 ;;  arg             4   16[BANK0 ] unsigned long 
 13160 ;;  exp             1   20[BANK0 ] unsigned char 
 13161 ;;  sign            1   21[BANK0 ] unsigned char 
 13162 ;; Auto vars:     Size  Location     Type
 13163 ;;		None
 13164 ;; Return value:  Size  Location     Type
 13165 ;;                  4   16[BANK0 ] unsigned char 
 13166 ;; Registers used:
 13167 ;;		wreg, status,2, status,0
 13168 ;; Tracked objects:
 13169 ;;		On entry : 0/0
 13170 ;;		On exit  : 0/0
 13171 ;;		Unchanged: 0/0
 13172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13173 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13175 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13176 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13177 ;;Total ram usage:       10 bytes
 13178 ;; Hardware stack levels used:    1
 13179 ;; Hardware stack levels required when called:    3
 13180 ;; This function calls:
 13181 ;;		Nothing
 13182 ;; This function is called by:
 13183 ;;		___awtofl
 13184 ;;		___fladd
 13185 ;;		___fldiv
 13186 ;;		___flmul
 13187 ;;		___lbtofl
 13188 ;;		___lltofl
 13189 ;;		___lwtofl
 13190 ;; This function uses a non-reentrant model
 13191 ;;
 13192                           
 13193                           	psect	text31
 13194  014896                     __ptext31:
 13195                           	opt stack 0
 13196  014896                     ___flpack:
 13197                           	opt stack 26
 13198                           
 13199                           ;incstack = 0
 13200  014896  0100               	movlb	0	; () banked
 13201  014898  5174               	movf	___flpack@exp& (0+255),w,b
 13202  01489A  0100               	movlb	0	; () banked
 13203  01489C  B4D8               	btfsc	status,2,c
 13204  01489E  D00A               	goto	l7326
 13205                           
 13206                           ; BSR set to: 0
 13207  0148A0  0100               	movlb	0	; () banked
 13208  0148A2  5170               	movf	___flpack@arg& (0+255),w,b
 13209  0148A4  0100               	movlb	0	; () banked
 13210  0148A6  1171               	iorwf	(___flpack@arg+1)& (0+255),w,b
 13211  0148A8  0100               	movlb	0	; () banked
 13212  0148AA  1172               	iorwf	(___flpack@arg+2)& (0+255),w,b
 13213  0148AC  0100               	movlb	0	; () banked
 13214  0148AE  1173               	iorwf	(___flpack@arg+3)& (0+255),w,b
 13215  0148B0  A4D8               	btfss	status,2,c
 13216  0148B2  D014               	goto	l7332
 13217  0148B4                     l7326:
 13218                           
 13219                           ; BSR set to: 0
 13220  0148B4  0E00               	movlw	0
 13221  0148B6  0100               	movlb	0	; () banked
 13222  0148B8  6F70               	movwf	?___flpack& (0+255),b
 13223  0148BA  0E00               	movlw	0
 13224  0148BC  6F71               	movwf	(?___flpack+1)& (0+255),b
 13225  0148BE  0E00               	movlw	0
 13226  0148C0  6F72               	movwf	(?___flpack+2)& (0+255),b
 13227  0148C2  0E00               	movlw	0
 13228  0148C4  6F73               	movwf	(?___flpack+3)& (0+255),b
 13229                           
 13230                           ; BSR set to: 0
 13231  0148C6  0012               	return	
 13232                           
 13233                           ; BSR set to: 0
 13234  0148C8  D009               	goto	l7332
 13235  0148CA                     l7330:
 13236                           
 13237                           ; BSR set to: 0
 13238  0148CA  0100               	movlb	0	; () banked
 13239  0148CC  2B74               	incf	___flpack@exp& (0+255),f,b
 13240  0148CE  0100               	movlb	0	; () banked
 13241  0148D0  90D8               	bcf	status,0,c
 13242  0148D2  3373               	rrcf	(___flpack@arg+3)& (0+255),f,b
 13243  0148D4  3372               	rrcf	(___flpack@arg+2)& (0+255),f,b
 13244  0148D6  3371               	rrcf	(___flpack@arg+1)& (0+255),f,b
 13245  0148D8  3370               	rrcf	___flpack@arg& (0+255),f,b
 13246  0148DA  D000               	goto	l7332
 13247  0148DC                     l7332:
 13248                           
 13249                           ; BSR set to: 0
 13250  0148DC  0E00               	movlw	0
 13251  0148DE  0100               	movlb	0	; () banked
 13252  0148E0  1570               	andwf	___flpack@arg& (0+255),w,b
 13253  0148E2  0100               	movlb	0	; () banked
 13254  0148E4  6F76               	movwf	??___flpack& (0+255),b
 13255  0148E6  0E00               	movlw	0
 13256  0148E8  0100               	movlb	0	; () banked
 13257  0148EA  1571               	andwf	(___flpack@arg+1)& (0+255),w,b
 13258  0148EC  0100               	movlb	0	; () banked
 13259  0148EE  6F77               	movwf	(??___flpack+1)& (0+255),b
 13260  0148F0  0E00               	movlw	0
 13261  0148F2  0100               	movlb	0	; () banked
 13262  0148F4  1572               	andwf	(___flpack@arg+2)& (0+255),w,b
 13263  0148F6  0100               	movlb	0	; () banked
 13264  0148F8  6F78               	movwf	(??___flpack+2)& (0+255),b
 13265  0148FA  0EFE               	movlw	254
 13266  0148FC  0100               	movlb	0	; () banked
 13267  0148FE  1573               	andwf	(___flpack@arg+3)& (0+255),w,b
 13268  014900  0100               	movlb	0	; () banked
 13269  014902  6F79               	movwf	(??___flpack+3)& (0+255),b
 13270  014904  0100               	movlb	0	; () banked
 13271  014906  5176               	movf	??___flpack& (0+255),w,b
 13272  014908  0100               	movlb	0	; () banked
 13273  01490A  1177               	iorwf	(??___flpack+1)& (0+255),w,b
 13274  01490C  0100               	movlb	0	; () banked
 13275  01490E  1178               	iorwf	(??___flpack+2)& (0+255),w,b
 13276  014910  0100               	movlb	0	; () banked
 13277  014912  1179               	iorwf	(??___flpack+3)& (0+255),w,b
 13278  014914  B4D8               	btfsc	status,2,c
 13279  014916  D011               	goto	l1296
 13280  014918  D7D8               	goto	l7330
 13281                           
 13282                           ; BSR set to: 0
 13283  01491A  D00F               	goto	l1296
 13284  01491C                     l7334:
 13285                           
 13286                           ; BSR set to: 0
 13287  01491C  0100               	movlb	0	; () banked
 13288  01491E  2B74               	incf	___flpack@exp& (0+255),f,b
 13289                           
 13290                           ; BSR set to: 0
 13291  014920  0E01               	movlw	1
 13292  014922  0100               	movlb	0	; () banked
 13293  014924  2770               	addwf	___flpack@arg& (0+255),f,b
 13294  014926  0E00               	movlw	0
 13295  014928  2371               	addwfc	(___flpack@arg+1)& (0+255),f,b
 13296  01492A  2372               	addwfc	(___flpack@arg+2)& (0+255),f,b
 13297  01492C  2373               	addwfc	(___flpack@arg+3)& (0+255),f,b
 13298                           
 13299                           ; BSR set to: 0
 13300  01492E  0100               	movlb	0	; () banked
 13301  014930  90D8               	bcf	status,0,c
 13302  014932  3373               	rrcf	(___flpack@arg+3)& (0+255),f,b
 13303  014934  3372               	rrcf	(___flpack@arg+2)& (0+255),f,b
 13304  014936  3371               	rrcf	(___flpack@arg+1)& (0+255),f,b
 13305  014938  3370               	rrcf	___flpack@arg& (0+255),f,b
 13306  01493A                     l1296:
 13307                           
 13308                           ; BSR set to: 0
 13309  01493A  0E00               	movlw	0
 13310  01493C  0100               	movlb	0	; () banked
 13311  01493E  1570               	andwf	___flpack@arg& (0+255),w,b
 13312  014940  0100               	movlb	0	; () banked
 13313  014942  6F76               	movwf	??___flpack& (0+255),b
 13314  014944  0E00               	movlw	0
 13315  014946  0100               	movlb	0	; () banked
 13316  014948  1571               	andwf	(___flpack@arg+1)& (0+255),w,b
 13317  01494A  0100               	movlb	0	; () banked
 13318  01494C  6F77               	movwf	(??___flpack+1)& (0+255),b
 13319  01494E  0E00               	movlw	0
 13320  014950  0100               	movlb	0	; () banked
 13321  014952  1572               	andwf	(___flpack@arg+2)& (0+255),w,b
 13322  014954  0100               	movlb	0	; () banked
 13323  014956  6F78               	movwf	(??___flpack+2)& (0+255),b
 13324  014958  0EFF               	movlw	255
 13325  01495A  0100               	movlb	0	; () banked
 13326  01495C  1573               	andwf	(___flpack@arg+3)& (0+255),w,b
 13327  01495E  0100               	movlb	0	; () banked
 13328  014960  6F79               	movwf	(??___flpack+3)& (0+255),b
 13329  014962  0100               	movlb	0	; () banked
 13330  014964  5176               	movf	??___flpack& (0+255),w,b
 13331  014966  0100               	movlb	0	; () banked
 13332  014968  1177               	iorwf	(??___flpack+1)& (0+255),w,b
 13333  01496A  0100               	movlb	0	; () banked
 13334  01496C  1178               	iorwf	(??___flpack+2)& (0+255),w,b
 13335  01496E  0100               	movlb	0	; () banked
 13336  014970  1179               	iorwf	(??___flpack+3)& (0+255),w,b
 13337  014972  B4D8               	btfsc	status,2,c
 13338  014974  D00B               	goto	l7342
 13339  014976  D7D2               	goto	l7334
 13340                           
 13341                           ; BSR set to: 0
 13342  014978  D009               	goto	l7342
 13343  01497A                     l7340:
 13344                           
 13345                           ; BSR set to: 0
 13346  01497A  0100               	movlb	0	; () banked
 13347  01497C  0774               	decf	___flpack@exp& (0+255),f,b
 13348  01497E  0100               	movlb	0	; () banked
 13349  014980  90D8               	bcf	status,0,c
 13350  014982  3770               	rlcf	___flpack@arg& (0+255),f,b
 13351  014984  3771               	rlcf	(___flpack@arg+1)& (0+255),f,b
 13352  014986  3772               	rlcf	(___flpack@arg+2)& (0+255),f,b
 13353  014988  3773               	rlcf	(___flpack@arg+3)& (0+255),f,b
 13354  01498A  D000               	goto	l7342
 13355  01498C                     l7342:
 13356                           
 13357                           ; BSR set to: 0
 13358  01498C  0100               	movlb	0	; () banked
 13359  01498E  BF72               	btfsc	(___flpack@arg+2)& (0+255),7,b
 13360  014990  D005               	goto	l1303
 13361                           
 13362                           ; BSR set to: 0
 13363  014992  0E02               	movlw	2
 13364  014994  0100               	movlb	0	; () banked
 13365  014996  6174               	cpfslt	___flpack@exp& (0+255),b
 13366  014998  D7F0               	goto	l7340
 13367  01499A  D000               	goto	l1303
 13368  01499C                     l1303:
 13369                           
 13370                           ; BSR set to: 0
 13371  01499C  0100               	movlb	0	; () banked
 13372  01499E  B174               	btfsc	___flpack@exp& (0+255),0,b
 13373  0149A0  D009               	goto	l1304
 13374                           
 13375                           ; BSR set to: 0
 13376  0149A2  0EFF               	movlw	255
 13377  0149A4  0100               	movlb	0	; () banked
 13378  0149A6  1770               	andwf	___flpack@arg& (0+255),f,b
 13379  0149A8  0EFF               	movlw	255
 13380  0149AA  1771               	andwf	(___flpack@arg+1)& (0+255),f,b
 13381  0149AC  0E7F               	movlw	127
 13382  0149AE  1772               	andwf	(___flpack@arg+2)& (0+255),f,b
 13383  0149B0  0EFF               	movlw	255
 13384  0149B2  1773               	andwf	(___flpack@arg+3)& (0+255),f,b
 13385  0149B4                     l1304:
 13386                           
 13387                           ; BSR set to: 0
 13388  0149B4  0100               	movlb	0	; () banked
 13389  0149B6  90D8               	bcf	status,0,c
 13390  0149B8  3374               	rrcf	___flpack@exp& (0+255),f,b
 13391  0149BA  C074  F076         	movff	___flpack@exp,??___flpack
 13392  0149BE  0100               	movlb	0	; () banked
 13393  0149C0  6B77               	clrf	(??___flpack+1)& (0+255),b
 13394  0149C2  6B78               	clrf	(??___flpack+2)& (0+255),b
 13395  0149C4  6B79               	clrf	(??___flpack+3)& (0+255),b
 13396  0149C6  C076  F079         	movff	??___flpack,??___flpack+3
 13397  0149CA  0100               	movlb	0	; () banked
 13398  0149CC  6B78               	clrf	(??___flpack+2)& (0+255),b
 13399  0149CE  6B77               	clrf	(??___flpack+1)& (0+255),b
 13400  0149D0  6B76               	clrf	??___flpack& (0+255),b
 13401  0149D2  0100               	movlb	0	; () banked
 13402  0149D4  5176               	movf	??___flpack& (0+255),w,b
 13403  0149D6  0100               	movlb	0	; () banked
 13404  0149D8  1370               	iorwf	___flpack@arg& (0+255),f,b
 13405  0149DA  0100               	movlb	0	; () banked
 13406  0149DC  5177               	movf	(??___flpack+1)& (0+255),w,b
 13407  0149DE  0100               	movlb	0	; () banked
 13408  0149E0  1371               	iorwf	(___flpack@arg+1)& (0+255),f,b
 13409  0149E2  0100               	movlb	0	; () banked
 13410  0149E4  5178               	movf	(??___flpack+2)& (0+255),w,b
 13411  0149E6  0100               	movlb	0	; () banked
 13412  0149E8  1372               	iorwf	(___flpack@arg+2)& (0+255),f,b
 13413  0149EA  0100               	movlb	0	; () banked
 13414  0149EC  5179               	movf	(??___flpack+3)& (0+255),w,b
 13415  0149EE  0100               	movlb	0	; () banked
 13416  0149F0  1373               	iorwf	(___flpack@arg+3)& (0+255),f,b
 13417                           
 13418                           ; BSR set to: 0
 13419  0149F2  0100               	movlb	0	; () banked
 13420  0149F4  5175               	movf	___flpack@sign& (0+255),w,b
 13421  0149F6  0100               	movlb	0	; () banked
 13422  0149F8  B4D8               	btfsc	status,2,c
 13423  0149FA  D003               	goto	l7352
 13424                           
 13425                           ; BSR set to: 0
 13426  0149FC  0100               	movlb	0	; () banked
 13427  0149FE  8F73               	bsf	(___flpack@arg+3)& (0+255),7,b
 13428  014A00  D000               	goto	l7352
 13429  014A02                     l7352:
 13430                           
 13431                           ; BSR set to: 0
 13432  014A02  C070  F070         	movff	___flpack@arg,?___flpack
 13433  014A06  C071  F071         	movff	___flpack@arg+1,?___flpack+1
 13434  014A0A  C072  F072         	movff	___flpack@arg+2,?___flpack+2
 13435  014A0E  C073  F073         	movff	___flpack@arg+3,?___flpack+3
 13436  014A12  0012               	return	
 13437                           
 13438                           ; BSR set to: 0
 13439                           
 13440                           ; BSR set to: 0
 13441  014A14  0012               	return		;funcret
 13442  014A16                     __end_of___flpack:
 13443                           	opt stack 0
 13444                           tblptru	equ	0xFF8
 13445                           tblptrh	equ	0xFF7
 13446                           tblptrl	equ	0xFF6
 13447                           tablat	equ	0xFF5
 13448                           prodh	equ	0xFF4
 13449                           prodl	equ	0xFF3
 13450                           intcon	equ	0xFF2
 13451                           postinc0	equ	0xFEE
 13452                           wreg	equ	0xFE8
 13453                           indf2	equ	0xFDF
 13454                           postinc2	equ	0xFDE
 13455                           fsr2h	equ	0xFDA
 13456                           fsr2l	equ	0xFD9
 13457                           status	equ	0xFD8
 13458                           
 13459 ;; *************** function _LCD_write_integer *****************
 13460 ;; Defined at:
 13461 ;;		line 210 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13462 ;; Parameters:    Size  Location     Type
 13463 ;;  value           2   40[BANK0 ] int 
 13464 ;;  number_of_di    1   42[BANK0 ] unsigned char 
 13465 ;;  zero_cleanin    1   43[BANK0 ] unsigned char 
 13466 ;; Auto vars:     Size  Location     Type
 13467 ;;  convertedInt    6   49[BANK0 ] unsigned char [6]
 13468 ;;  index           1   55[BANK0 ] unsigned char 
 13469 ;; Return value:  Size  Location     Type
 13470 ;;		None               void
 13471 ;; Registers used:
 13472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13473 ;; Tracked objects:
 13474 ;;		On entry : 0/0
 13475 ;;		On exit  : 0/0
 13476 ;;		Unchanged: 0/0
 13477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13478 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13479 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13480 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13481 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13482 ;;Total ram usage:       16 bytes
 13483 ;; Hardware stack levels used:    1
 13484 ;; Hardware stack levels required when called:    9
 13485 ;; This function calls:
 13486 ;;		_LCD_write_string
 13487 ;;		_itoa
 13488 ;; This function is called by:
 13489 ;;		_LCD_Handler
 13490 ;; This function uses a non-reentrant model
 13491 ;;
 13492                           
 13493                           	psect	text32
 13494  014392                     __ptext32:
 13495                           	opt stack 0
 13496  014392                     _LCD_write_integer:
 13497                           	opt stack 20
 13498                           
 13499                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 13500                           
 13501                           ; BSR set to: 0
 13502                           ;incstack = 0
 13503  014392  EE21  F007         	lfsr	2,LCD_write_integer@F17326
 13504  014396  EE10  F091         	lfsr	1,LCD_write_integer@convertedInt
 13505  01439A  0E05               	movlw	5
 13506  01439C                     u10011:
 13507  01439C  CFDB FFE3          	movff	plusw2,plusw1
 13508  0143A0  06E8               	decf	wreg,f,c
 13509  0143A2  E2FC               	bc	u10011
 13510                           
 13511                           ;src\LCD_44780.c: 216: unsigned char index;
 13512                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 13513  0143A4  0E91               	movlw	low LCD_write_integer@convertedInt
 13514  0143A6  0100               	movlb	0	; () banked
 13515  0143A8  6F80               	movwf	itoa@buf& (0+255),b
 13516  0143AA  0E00               	movlw	high LCD_write_integer@convertedInt
 13517  0143AC  0100               	movlb	0	; () banked
 13518  0143AE  6F81               	movwf	(itoa@buf+1)& (0+255),b
 13519  0143B0  C088  F082         	movff	LCD_write_integer@value,itoa@val
 13520  0143B4  C089  F083         	movff	LCD_write_integer@value+1,itoa@val+1
 13521  0143B8  0E00               	movlw	0
 13522  0143BA  0100               	movlb	0	; () banked
 13523  0143BC  6F85               	movwf	(itoa@base+1)& (0+255),b
 13524  0143BE  0E0A               	movlw	10
 13525  0143C0  6F84               	movwf	itoa@base& (0+255),b
 13526  0143C2  EC90  F0AD         	call	_itoa	;wreg free
 13527                           
 13528                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 13529  0143C6  0100               	movlb	0	; () banked
 13530  0143C8  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13531  0143CA  0100               	movlb	0	; () banked
 13532  0143CC  B4D8               	btfsc	status,2,c
 13533  0143CE  D0BD               	goto	l7948
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 13537  0143D0  0100               	movlb	0	; () banked
 13538  0143D2  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13539  0143D4  0D01               	mullw	1
 13540  0143D6  0E91               	movlw	low LCD_write_integer@convertedInt
 13541  0143D8  24F3               	addwf	prodl,w,c
 13542  0143DA  6ED9               	movwf	fsr2l,c
 13543  0143DC  0E00               	movlw	high LCD_write_integer@convertedInt
 13544  0143DE  20F4               	addwfc	prodh,w,c
 13545  0143E0  6EDA               	movwf	fsr2h,c
 13546  0143E2  0E00               	movlw	0
 13547  0143E4  6EDF               	movwf	indf2,c
 13548                           
 13549                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 13550  0143E6  D074               	goto	l7944
 13551  0143E8                     l7926:
 13552                           
 13553                           ; BSR set to: 0
 13554                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 13555  0143E8  0100               	movlb	0	; () banked
 13556  0143EA  058A               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 13557  0143EC  0100               	movlb	0	; () banked
 13558  0143EE  6F97               	movwf	LCD_write_integer@index& (0+255),b
 13559  0143F0                     l7928:
 13560                           
 13561                           ; BSR set to: 0
 13562  0143F0  0100               	movlb	0	; () banked
 13563  0143F2  5197               	movf	LCD_write_integer@index& (0+255),w,b
 13564  0143F4  0100               	movlb	0	; () banked
 13565  0143F6  B4D8               	btfsc	status,2,c
 13566  0143F8  D06B               	goto	l7944
 13567  0143FA  D001               	goto	l7932
 13568                           
 13569                           ; BSR set to: 0
 13570  0143FC  D069               	goto	l7944
 13571  0143FE                     l7932:
 13572                           
 13573                           ; BSR set to: 0
 13574                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 13575  0143FE  0EFF               	movlw	255
 13576  014400  0100               	movlb	0	; () banked
 13577  014402  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 13578  014404  0EFF               	movlw	255
 13579  014406  0100               	movlb	0	; () banked
 13580  014408  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13581  01440A  0100               	movlb	0	; () banked
 13582  01440C  5197               	movf	LCD_write_integer@index& (0+255),w,b
 13583  01440E  0100               	movlb	0	; () banked
 13584  014410  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13585  014412  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13586  014414  0100               	movlb	0	; () banked
 13587  014416  518C               	movf	??_LCD_write_integer& (0+255),w,b
 13588  014418  0100               	movlb	0	; () banked
 13589  01441A  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13590  01441C  0100               	movlb	0	; () banked
 13591  01441E  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13592  014420  0100               	movlb	0	; () banked
 13593  014422  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13594  014424  0E91               	movlw	low LCD_write_integer@convertedInt
 13595  014426  0100               	movlb	0	; () banked
 13596  014428  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13597  01442A  6ED9               	movwf	fsr2l,c
 13598  01442C  0E00               	movlw	high LCD_write_integer@convertedInt
 13599  01442E  0100               	movlb	0	; () banked
 13600  014430  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13601  014432  6EDA               	movwf	fsr2h,c
 13602  014434  0100               	movlb	0	; () banked
 13603  014436  5197               	movf	LCD_write_integer@index& (0+255),w,b
 13604  014438  0D01               	mullw	1
 13605  01443A  0E91               	movlw	low LCD_write_integer@convertedInt
 13606  01443C  24F3               	addwf	prodl,w,c
 13607  01443E  6EE1               	movwf	fsr1l,c
 13608  014440  0E00               	movlw	high LCD_write_integer@convertedInt
 13609  014442  20F4               	addwfc	prodh,w,c
 13610  014444  6EE2               	movwf	fsr1h,c
 13611  014446  CFDF FFE7          	movff	indf2,indf1
 13612                           
 13613                           ; BSR set to: 0
 13614                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 13615  01444A  0100               	movlb	0	; () banked
 13616  01444C  058B               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 13617  01444E  A4D8               	btfss	status,2,c
 13618  014450  D01D               	goto	l7938
 13619                           
 13620                           ; BSR set to: 0
 13621                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 13622  014452  0EFF               	movlw	255
 13623  014454  0100               	movlb	0	; () banked
 13624  014456  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 13625  014458  0EFF               	movlw	255
 13626  01445A  0100               	movlb	0	; () banked
 13627  01445C  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13628  01445E  0100               	movlb	0	; () banked
 13629  014460  5197               	movf	LCD_write_integer@index& (0+255),w,b
 13630  014462  0100               	movlb	0	; () banked
 13631  014464  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13632  014466  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13633  014468  0100               	movlb	0	; () banked
 13634  01446A  518C               	movf	??_LCD_write_integer& (0+255),w,b
 13635  01446C  0100               	movlb	0	; () banked
 13636  01446E  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13637  014470  0100               	movlb	0	; () banked
 13638  014472  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13639  014474  0100               	movlb	0	; () banked
 13640  014476  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13641  014478  0E91               	movlw	low LCD_write_integer@convertedInt
 13642  01447A  0100               	movlb	0	; () banked
 13643  01447C  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13644  01447E  6ED9               	movwf	fsr2l,c
 13645  014480  0E00               	movlw	high LCD_write_integer@convertedInt
 13646  014482  0100               	movlb	0	; () banked
 13647  014484  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13648  014486  6EDA               	movwf	fsr2h,c
 13649  014488  0E20               	movlw	32
 13650  01448A  D01C               	goto	L9
 13651  01448C                     l7938:
 13652                           
 13653                           ; BSR set to: 0
 13654                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 13655  01448C  0EFF               	movlw	255
 13656  01448E  0100               	movlb	0	; () banked
 13657  014490  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 13658  014492  0EFF               	movlw	255
 13659  014494  0100               	movlb	0	; () banked
 13660  014496  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13661  014498  0100               	movlb	0	; () banked
 13662  01449A  5197               	movf	LCD_write_integer@index& (0+255),w,b
 13663  01449C  0100               	movlb	0	; () banked
 13664  01449E  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13665  0144A0  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13666  0144A2  0100               	movlb	0	; () banked
 13667  0144A4  518C               	movf	??_LCD_write_integer& (0+255),w,b
 13668  0144A6  0100               	movlb	0	; () banked
 13669  0144A8  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13670  0144AA  0100               	movlb	0	; () banked
 13671  0144AC  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13672  0144AE  0100               	movlb	0	; () banked
 13673  0144B0  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13674  0144B2  0E91               	movlw	low LCD_write_integer@convertedInt
 13675  0144B4  0100               	movlb	0	; () banked
 13676  0144B6  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13677  0144B8  6ED9               	movwf	fsr2l,c
 13678  0144BA  0E00               	movlw	high LCD_write_integer@convertedInt
 13679  0144BC  0100               	movlb	0	; () banked
 13680  0144BE  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13681  0144C0  6EDA               	movwf	fsr2h,c
 13682  0144C2  0E30               	movlw	48
 13683  0144C4                     L9:
 13684  0144C4  6EDF               	movwf	indf2,c
 13685  0144C6  D000               	goto	l7940
 13686  0144C8                     l7940:
 13687                           
 13688                           ; BSR set to: 0
 13689  0144C8  0100               	movlb	0	; () banked
 13690  0144CA  0797               	decf	LCD_write_integer@index& (0+255),f,b
 13691  0144CC  D791               	goto	l7928
 13692                           
 13693                           ; BSR set to: 0
 13694                           
 13695                           ; BSR set to: 0
 13696  0144CE  D000               	goto	l7944
 13697  0144D0                     l7944:
 13698                           
 13699                           ; BSR set to: 0
 13700  0144D0  0EFF               	movlw	255
 13701  0144D2  0100               	movlb	0	; () banked
 13702  0144D4  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 13703  0144D6  0EFF               	movlw	255
 13704  0144D8  0100               	movlb	0	; () banked
 13705  0144DA  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13706  0144DC  0100               	movlb	0	; () banked
 13707  0144DE  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13708  0144E0  0100               	movlb	0	; () banked
 13709  0144E2  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13710  0144E4  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13711  0144E6  0100               	movlb	0	; () banked
 13712  0144E8  518C               	movf	??_LCD_write_integer& (0+255),w,b
 13713  0144EA  0100               	movlb	0	; () banked
 13714  0144EC  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13715  0144EE  0100               	movlb	0	; () banked
 13716  0144F0  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13717  0144F2  0100               	movlb	0	; () banked
 13718  0144F4  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13719  0144F6  0E91               	movlw	low LCD_write_integer@convertedInt
 13720  0144F8  0100               	movlb	0	; () banked
 13721  0144FA  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13722  0144FC  6ED9               	movwf	fsr2l,c
 13723  0144FE  0E00               	movlw	high LCD_write_integer@convertedInt
 13724  014500  0100               	movlb	0	; () banked
 13725  014502  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13726  014504  6EDA               	movwf	fsr2h,c
 13727  014506  0E3A               	movlw	58
 13728  014508  60DF               	cpfslt	indf2,c
 13729  01450A  D76E               	goto	l7926
 13730                           
 13731                           ; BSR set to: 0
 13732  01450C  0EFF               	movlw	255
 13733  01450E  0100               	movlb	0	; () banked
 13734  014510  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 13735  014512  0EFF               	movlw	255
 13736  014514  0100               	movlb	0	; () banked
 13737  014516  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13738  014518  0100               	movlb	0	; () banked
 13739  01451A  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13740  01451C  0100               	movlb	0	; () banked
 13741  01451E  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13742  014520  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13743  014522  0100               	movlb	0	; () banked
 13744  014524  518C               	movf	??_LCD_write_integer& (0+255),w,b
 13745  014526  0100               	movlb	0	; () banked
 13746  014528  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13747  01452A  0100               	movlb	0	; () banked
 13748  01452C  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13749  01452E  0100               	movlb	0	; () banked
 13750  014530  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13751  014532  0E91               	movlw	low LCD_write_integer@convertedInt
 13752  014534  0100               	movlb	0	; () banked
 13753  014536  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13754  014538  6ED9               	movwf	fsr2l,c
 13755  01453A  0E00               	movlw	high LCD_write_integer@convertedInt
 13756  01453C  0100               	movlb	0	; () banked
 13757  01453E  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13758  014540  6EDA               	movwf	fsr2h,c
 13759  014542  0E2F               	movlw	47
 13760  014544  64DF               	cpfsgt	indf2,c
 13761  014546  D750               	goto	l7926
 13762                           
 13763                           ; BSR set to: 0
 13764  014548  D000               	goto	l7948
 13765  01454A                     l7948:
 13766                           
 13767                           ; BSR set to: 0
 13768                           ;src\LCD_44780.c: 243: }
 13769                           ;src\LCD_44780.c: 245: }
 13770                           ;src\LCD_44780.c: 246: }
 13771                           ;src\LCD_44780.c: 247: }
 13772                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 13773  01454A  0E91               	movlw	low LCD_write_integer@convertedInt
 13774  01454C  0100               	movlb	0	; () banked
 13775  01454E  6F81               	movwf	LCD_write_string@buffer& (0+255),b
 13776  014550  0E00               	movlw	high LCD_write_integer@convertedInt
 13777  014552  0100               	movlb	0	; () banked
 13778  014554  6F82               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 13779  014556  EC1E  F0AF         	call	_LCD_write_string	;wreg free
 13780  01455A  0012               	return		;funcret
 13781  01455C                     __end_of_LCD_write_integer:
 13782                           	opt stack 0
 13783                           tblptru	equ	0xFF8
 13784                           tblptrh	equ	0xFF7
 13785                           tblptrl	equ	0xFF6
 13786                           tablat	equ	0xFF5
 13787                           prodh	equ	0xFF4
 13788                           prodl	equ	0xFF3
 13789                           intcon	equ	0xFF2
 13790                           postinc0	equ	0xFEE
 13791                           wreg	equ	0xFE8
 13792                           indf1	equ	0xFE7
 13793                           plusw1	equ	0xFE3
 13794                           fsr1h	equ	0xFE2
 13795                           fsr1l	equ	0xFE1
 13796                           indf2	equ	0xFDF
 13797                           postinc2	equ	0xFDE
 13798                           plusw2	equ	0xFDB
 13799                           fsr2h	equ	0xFDA
 13800                           fsr2l	equ	0xFD9
 13801                           status	equ	0xFD8
 13802                           
 13803 ;; *************** function _itoa *****************
 13804 ;; Defined at:
 13805 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\itoa.c"
 13806 ;; Parameters:    Size  Location     Type
 13807 ;;  buf             2   32[BANK0 ] PTR unsigned char 
 13808 ;;		 -> LCD_write_integer@convertedInt(6), 
 13809 ;;  val             2   34[BANK0 ] int 
 13810 ;;  base            2   36[BANK0 ] int 
 13811 ;; Auto vars:     Size  Location     Type
 13812 ;;  cp              2   38[BANK0 ] PTR unsigned char 
 13813 ;;		 -> LCD_write_integer@convertedInt(6), 
 13814 ;; Return value:  Size  Location     Type
 13815 ;;                  2   32[BANK0 ] PTR unsigned char 
 13816 ;; Registers used:
 13817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13818 ;; Tracked objects:
 13819 ;;		On entry : 0/0
 13820 ;;		On exit  : 0/0
 13821 ;;		Unchanged: 0/0
 13822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13823 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13824 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13826 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13827 ;;Total ram usage:        8 bytes
 13828 ;; Hardware stack levels used:    1
 13829 ;; Hardware stack levels required when called:    5
 13830 ;; This function calls:
 13831 ;;		_utoa
 13832 ;; This function is called by:
 13833 ;;		_LCD_write_integer
 13834 ;; This function uses a non-reentrant model
 13835 ;;
 13836                           
 13837                           	psect	text33
 13838  015B20                     __ptext33:
 13839                           	opt stack 0
 13840  015B20                     _itoa:
 13841                           	opt stack 23
 13842                           
 13843                           ;incstack = 0
 13844  015B20  C080  F086         	movff	itoa@buf,itoa@cp
 13845  015B24  C081  F087         	movff	itoa@buf+1,itoa@cp+1
 13846  015B28  0100               	movlb	0	; () banked
 13847  015B2A  AF83               	btfss	(itoa@val+1)& (0+255),7,b
 13848  015B2C  D00F               	goto	l5328
 13849                           
 13850                           ; BSR set to: 0
 13851  015B2E  C080  FFD9         	movff	itoa@buf,fsr2l
 13852  015B32  C081  FFDA         	movff	itoa@buf+1,fsr2h
 13853  015B36  0E2D               	movlw	45
 13854  015B38  6EDF               	movwf	indf2,c
 13855                           
 13856                           ; BSR set to: 0
 13857  015B3A  0100               	movlb	0	; () banked
 13858  015B3C  4B80               	infsnz	itoa@buf& (0+255),f,b
 13859  015B3E  2B81               	incf	(itoa@buf+1)& (0+255),f,b
 13860                           
 13861                           ; BSR set to: 0
 13862  015B40  0100               	movlb	0	; () banked
 13863  015B42  6D82               	negf	itoa@val& (0+255),b
 13864  015B44  1F83               	comf	(itoa@val+1)& (0+255),f,b
 13865  015B46  B0D8               	btfsc	status,0,c
 13866  015B48  2B83               	incf	(itoa@val+1)& (0+255),f,b
 13867  015B4A  D000               	goto	l5328
 13868  015B4C                     l5328:
 13869                           
 13870                           ; BSR set to: 0
 13871  015B4C  C080  F077         	movff	itoa@buf,utoa@buf
 13872  015B50  C081  F078         	movff	itoa@buf+1,utoa@buf+1
 13873  015B54  C082  F079         	movff	itoa@val,utoa@val
 13874  015B58  C083  F07A         	movff	itoa@val+1,utoa@val+1
 13875  015B5C  C084  F07B         	movff	itoa@base,utoa@base
 13876  015B60  C085  F07C         	movff	itoa@base+1,utoa@base+1
 13877  015B64  EC5A  F0A9         	call	_utoa	;wreg free
 13878  015B68  0012               	return	
 13879                           
 13880                           ;	Return value of _itoa is never used
 13881  015B6A  0012               	return		;funcret
 13882  015B6C                     __end_of_itoa:
 13883                           	opt stack 0
 13884                           tblptru	equ	0xFF8
 13885                           tblptrh	equ	0xFF7
 13886                           tblptrl	equ	0xFF6
 13887                           tablat	equ	0xFF5
 13888                           prodh	equ	0xFF4
 13889                           prodl	equ	0xFF3
 13890                           intcon	equ	0xFF2
 13891                           postinc0	equ	0xFEE
 13892                           wreg	equ	0xFE8
 13893                           indf1	equ	0xFE7
 13894                           plusw1	equ	0xFE3
 13895                           fsr1h	equ	0xFE2
 13896                           fsr1l	equ	0xFE1
 13897                           indf2	equ	0xFDF
 13898                           postinc2	equ	0xFDE
 13899                           plusw2	equ	0xFDB
 13900                           fsr2h	equ	0xFDA
 13901                           fsr2l	equ	0xFD9
 13902                           status	equ	0xFD8
 13903                           
 13904 ;; *************** function _utoa *****************
 13905 ;; Defined at:
 13906 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\itoa.c"
 13907 ;; Parameters:    Size  Location     Type
 13908 ;;  buf             2   23[BANK0 ] PTR unsigned char 
 13909 ;;		 -> LCD_write_integer@convertedInt(6), 
 13910 ;;  val             2   25[BANK0 ] unsigned int 
 13911 ;;  base            2   27[BANK0 ] int 
 13912 ;; Auto vars:     Size  Location     Type
 13913 ;;  v               2   29[BANK0 ] unsigned int 
 13914 ;;  c               1   31[BANK0 ] unsigned char 
 13915 ;; Return value:  Size  Location     Type
 13916 ;;                  2   23[BANK0 ] PTR unsigned char 
 13917 ;; Registers used:
 13918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13919 ;; Tracked objects:
 13920 ;;		On entry : 0/0
 13921 ;;		On exit  : 0/0
 13922 ;;		Unchanged: 0/0
 13923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13924 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13925 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13927 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13928 ;;Total ram usage:        9 bytes
 13929 ;; Hardware stack levels used:    1
 13930 ;; Hardware stack levels required when called:    4
 13931 ;; This function calls:
 13932 ;;		___lwdiv
 13933 ;;		___lwmod
 13934 ;; This function is called by:
 13935 ;;		_itoa
 13936 ;; This function uses a non-reentrant model
 13937 ;;
 13938                           
 13939                           	psect	text34
 13940  0152B4                     __ptext34:
 13941                           	opt stack 0
 13942  0152B4                     _utoa:
 13943                           	opt stack 23
 13944                           
 13945                           ;incstack = 0
 13946  0152B4  C079  F07D         	movff	utoa@val,utoa@v
 13947  0152B8  C07A  F07E         	movff	utoa@val+1,utoa@v+1
 13948  0152BC  D000               	goto	l4850
 13949  0152BE                     l4850:
 13950  0152BE  C07D  F070         	movff	utoa@v,___lwdiv@dividend
 13951  0152C2  C07E  F071         	movff	utoa@v+1,___lwdiv@dividend+1
 13952  0152C6  C07B  F072         	movff	utoa@base,___lwdiv@divisor
 13953  0152CA  C07C  F073         	movff	utoa@base+1,___lwdiv@divisor+1
 13954  0152CE  EC65  F0AB         	call	___lwdiv	;wreg free
 13955  0152D2  C070  F07D         	movff	?___lwdiv,utoa@v
 13956  0152D6  C071  F07E         	movff	?___lwdiv+1,utoa@v+1
 13957  0152DA  0100               	movlb	0	; () banked
 13958  0152DC  4B77               	infsnz	utoa@buf& (0+255),f,b
 13959  0152DE  2B78               	incf	(utoa@buf+1)& (0+255),f,b
 13960                           
 13961                           ; BSR set to: 0
 13962  0152E0  0100               	movlb	0	; () banked
 13963  0152E2  517D               	movf	utoa@v& (0+255),w,b
 13964  0152E4  0100               	movlb	0	; () banked
 13965  0152E6  117E               	iorwf	(utoa@v+1)& (0+255),w,b
 13966  0152E8  A4D8               	btfss	status,2,c
 13967  0152EA  D7E9               	goto	l4850
 13968                           
 13969                           ; BSR set to: 0
 13970                           
 13971                           ; BSR set to: 0
 13972  0152EC  C077  FFD9         	movff	utoa@buf,fsr2l
 13973  0152F0  C078  FFDA         	movff	utoa@buf+1,fsr2h
 13974  0152F4  0E00               	movlw	0
 13975  0152F6  6EDF               	movwf	indf2,c
 13976                           
 13977                           ; BSR set to: 0
 13978  0152F8  0100               	movlb	0	; () banked
 13979  0152FA  0777               	decf	utoa@buf& (0+255),f,b
 13980  0152FC  A0D8               	btfss	status,0,c
 13981  0152FE  0778               	decf	(utoa@buf+1)& (0+255),f,b
 13982  015300  D000               	goto	l4860
 13983  015302                     l4860:
 13984                           
 13985                           ; BSR set to: 0
 13986  015302  C079  F070         	movff	utoa@val,___lwmod@dividend
 13987  015306  C07A  F071         	movff	utoa@val+1,___lwmod@dividend+1
 13988  01530A  C07B  F072         	movff	utoa@base,___lwmod@divisor
 13989  01530E  C07C  F073         	movff	utoa@base+1,___lwmod@divisor+1
 13990  015312  ECE3  F0AB         	call	___lwmod	;wreg free
 13991  015316  0100               	movlb	0	; () banked
 13992  015318  5170               	movf	?___lwmod& (0+255),w,b
 13993  01531A  0100               	movlb	0	; () banked
 13994  01531C  6F7F               	movwf	utoa@c& (0+255),b
 13995                           
 13996                           ; BSR set to: 0
 13997  01531E  C079  F070         	movff	utoa@val,___lwdiv@dividend
 13998  015322  C07A  F071         	movff	utoa@val+1,___lwdiv@dividend+1
 13999  015326  C07B  F072         	movff	utoa@base,___lwdiv@divisor
 14000  01532A  C07C  F073         	movff	utoa@base+1,___lwdiv@divisor+1
 14001  01532E  EC65  F0AB         	call	___lwdiv	;wreg free
 14002  015332  C070  F079         	movff	?___lwdiv,utoa@val
 14003  015336  C071  F07A         	movff	?___lwdiv+1,utoa@val+1
 14004  01533A  0E09               	movlw	9
 14005  01533C  0100               	movlb	0	; () banked
 14006  01533E  657F               	cpfsgt	utoa@c& (0+255),b
 14007  015340  D003               	goto	l1545
 14008                           
 14009                           ; BSR set to: 0
 14010  015342  0E07               	movlw	7
 14011  015344  0100               	movlb	0	; () banked
 14012  015346  277F               	addwf	utoa@c& (0+255),f,b
 14013  015348                     l1545:
 14014                           
 14015                           ; BSR set to: 0
 14016  015348  0E30               	movlw	48
 14017  01534A  0100               	movlb	0	; () banked
 14018  01534C  277F               	addwf	utoa@c& (0+255),f,b
 14019                           
 14020                           ; BSR set to: 0
 14021  01534E  C077  FFD9         	movff	utoa@buf,fsr2l
 14022  015352  C078  FFDA         	movff	utoa@buf+1,fsr2h
 14023  015356  C07F  FFDF         	movff	utoa@c,indf2
 14024                           
 14025                           ; BSR set to: 0
 14026  01535A  0100               	movlb	0	; () banked
 14027  01535C  0777               	decf	utoa@buf& (0+255),f,b
 14028  01535E  A0D8               	btfss	status,0,c
 14029  015360  0778               	decf	(utoa@buf+1)& (0+255),f,b
 14030                           
 14031                           ; BSR set to: 0
 14032  015362  0100               	movlb	0	; () banked
 14033  015364  5179               	movf	utoa@val& (0+255),w,b
 14034  015366  0100               	movlb	0	; () banked
 14035  015368  117A               	iorwf	(utoa@val+1)& (0+255),w,b
 14036  01536A  A4D8               	btfss	status,2,c
 14037  01536C  D7CA               	goto	l4860
 14038                           
 14039                           ; BSR set to: 0
 14040                           ;	Return value of _utoa is never used
 14041                           
 14042                           ; BSR set to: 0
 14043  01536E  0100               	movlb	0	; () banked
 14044  015370  4B77               	infsnz	utoa@buf& (0+255),f,b
 14045  015372  2B78               	incf	(utoa@buf+1)& (0+255),f,b
 14046  015374  0012               	return	
 14047                           
 14048                           ; BSR set to: 0
 14049                           
 14050                           ; BSR set to: 0
 14051  015376  0012               	return		;funcret
 14052  015378                     __end_of_utoa:
 14053                           	opt stack 0
 14054                           tblptru	equ	0xFF8
 14055                           tblptrh	equ	0xFF7
 14056                           tblptrl	equ	0xFF6
 14057                           tablat	equ	0xFF5
 14058                           prodh	equ	0xFF4
 14059                           prodl	equ	0xFF3
 14060                           intcon	equ	0xFF2
 14061                           postinc0	equ	0xFEE
 14062                           wreg	equ	0xFE8
 14063                           indf1	equ	0xFE7
 14064                           plusw1	equ	0xFE3
 14065                           fsr1h	equ	0xFE2
 14066                           fsr1l	equ	0xFE1
 14067                           indf2	equ	0xFDF
 14068                           postinc2	equ	0xFDE
 14069                           plusw2	equ	0xFDB
 14070                           fsr2h	equ	0xFDA
 14071                           fsr2l	equ	0xFD9
 14072                           status	equ	0xFD8
 14073                           
 14074 ;; *************** function ___lwmod *****************
 14075 ;; Defined at:
 14076 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
 14077 ;; Parameters:    Size  Location     Type
 14078 ;;  dividend        2   16[BANK0 ] unsigned int 
 14079 ;;  divisor         2   18[BANK0 ] unsigned int 
 14080 ;; Auto vars:     Size  Location     Type
 14081 ;;  counter         1   20[BANK0 ] unsigned char 
 14082 ;; Return value:  Size  Location     Type
 14083 ;;                  2   16[BANK0 ] unsigned int 
 14084 ;; Registers used:
 14085 ;;		wreg, status,2, status,0
 14086 ;; Tracked objects:
 14087 ;;		On entry : 0/0
 14088 ;;		On exit  : 0/0
 14089 ;;		Unchanged: 0/0
 14090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14091 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14094 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14095 ;;Total ram usage:        5 bytes
 14096 ;; Hardware stack levels used:    1
 14097 ;; Hardware stack levels required when called:    3
 14098 ;; This function calls:
 14099 ;;		Nothing
 14100 ;; This function is called by:
 14101 ;;		_utoa
 14102 ;; This function uses a non-reentrant model
 14103 ;;
 14104                           
 14105                           	psect	text35
 14106  0157C6                     __ptext35:
 14107                           	opt stack 0
 14108  0157C6                     ___lwmod:
 14109                           	opt stack 23
 14110                           
 14111                           ; BSR set to: 0
 14112                           ;incstack = 0
 14113  0157C6  0100               	movlb	0	; () banked
 14114  0157C8  5172               	movf	___lwmod@divisor& (0+255),w,b
 14115  0157CA  0100               	movlb	0	; () banked
 14116  0157CC  1173               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14117  0157CE  B4D8               	btfsc	status,2,c
 14118  0157D0  D02B               	goto	l1649
 14119                           
 14120                           ; BSR set to: 0
 14121  0157D2  0E01               	movlw	1
 14122  0157D4  0100               	movlb	0	; () banked
 14123  0157D6  6F74               	movwf	___lwmod@counter& (0+255),b
 14124  0157D8  D007               	goto	l4622
 14125  0157DA                     l4620:
 14126                           
 14127                           ; BSR set to: 0
 14128  0157DA  0100               	movlb	0	; () banked
 14129  0157DC  90D8               	bcf	status,0,c
 14130  0157DE  3772               	rlcf	___lwmod@divisor& (0+255),f,b
 14131  0157E0  3773               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14132  0157E2  0100               	movlb	0	; () banked
 14133  0157E4  2B74               	incf	___lwmod@counter& (0+255),f,b
 14134  0157E6  D000               	goto	l4622
 14135  0157E8                     l4622:
 14136                           
 14137                           ; BSR set to: 0
 14138  0157E8  0100               	movlb	0	; () banked
 14139  0157EA  BF73               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
 14140  0157EC  D002               	goto	l4624
 14141  0157EE  D7F5               	goto	l4620
 14142                           
 14143                           ; BSR set to: 0
 14144  0157F0  D000               	goto	l4624
 14145  0157F2                     l4624:
 14146                           
 14147                           ; BSR set to: 0
 14148  0157F2  0100               	movlb	0	; () banked
 14149  0157F4  5172               	movf	___lwmod@divisor& (0+255),w,b
 14150  0157F6  0100               	movlb	0	; () banked
 14151  0157F8  5D70               	subwf	___lwmod@dividend& (0+255),w,b
 14152  0157FA  0100               	movlb	0	; () banked
 14153  0157FC  5173               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14154  0157FE  0100               	movlb	0	; () banked
 14155  015800  5971               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14156  015802  A0D8               	btfss	status,0,c
 14157  015804  D009               	goto	l4628
 14158                           
 14159                           ; BSR set to: 0
 14160  015806  0100               	movlb	0	; () banked
 14161  015808  5172               	movf	___lwmod@divisor& (0+255),w,b
 14162  01580A  0100               	movlb	0	; () banked
 14163  01580C  5F70               	subwf	___lwmod@dividend& (0+255),f,b
 14164  01580E  0100               	movlb	0	; () banked
 14165  015810  5173               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14166  015812  0100               	movlb	0	; () banked
 14167  015814  5B71               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14168  015816  D000               	goto	l4628
 14169  015818                     l4628:
 14170                           
 14171                           ; BSR set to: 0
 14172  015818  0100               	movlb	0	; () banked
 14173  01581A  90D8               	bcf	status,0,c
 14174  01581C  3373               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14175  01581E  3372               	rrcf	___lwmod@divisor& (0+255),f,b
 14176                           
 14177                           ; BSR set to: 0
 14178  015820  0100               	movlb	0	; () banked
 14179  015822  2F74               	decfsz	___lwmod@counter& (0+255),f,b
 14180  015824  D7E6               	goto	l4624
 14181  015826  D000               	goto	l1649
 14182  015828                     l1649:
 14183                           
 14184                           ; BSR set to: 0
 14185  015828  C070  F070         	movff	___lwmod@dividend,?___lwmod
 14186  01582C  C071  F071         	movff	___lwmod@dividend+1,?___lwmod+1
 14187                           
 14188                           ; BSR set to: 0
 14189  015830  0012               	return		;funcret
 14190  015832                     __end_of___lwmod:
 14191                           	opt stack 0
 14192                           tblptru	equ	0xFF8
 14193                           tblptrh	equ	0xFF7
 14194                           tblptrl	equ	0xFF6
 14195                           tablat	equ	0xFF5
 14196                           prodh	equ	0xFF4
 14197                           prodl	equ	0xFF3
 14198                           intcon	equ	0xFF2
 14199                           postinc0	equ	0xFEE
 14200                           wreg	equ	0xFE8
 14201                           indf1	equ	0xFE7
 14202                           plusw1	equ	0xFE3
 14203                           fsr1h	equ	0xFE2
 14204                           fsr1l	equ	0xFE1
 14205                           indf2	equ	0xFDF
 14206                           postinc2	equ	0xFDE
 14207                           plusw2	equ	0xFDB
 14208                           fsr2h	equ	0xFDA
 14209                           fsr2l	equ	0xFD9
 14210                           status	equ	0xFD8
 14211                           
 14212 ;; *************** function ___lwdiv *****************
 14213 ;; Defined at:
 14214 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
 14215 ;; Parameters:    Size  Location     Type
 14216 ;;  dividend        2   16[BANK0 ] unsigned int 
 14217 ;;  divisor         2   18[BANK0 ] unsigned int 
 14218 ;; Auto vars:     Size  Location     Type
 14219 ;;  quotient        2   20[BANK0 ] unsigned int 
 14220 ;;  counter         1   22[BANK0 ] unsigned char 
 14221 ;; Return value:  Size  Location     Type
 14222 ;;                  2   16[BANK0 ] unsigned int 
 14223 ;; Registers used:
 14224 ;;		wreg, status,2, status,0
 14225 ;; Tracked objects:
 14226 ;;		On entry : 0/0
 14227 ;;		On exit  : 0/0
 14228 ;;		Unchanged: 0/0
 14229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14230 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14231 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14233 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14234 ;;Total ram usage:        7 bytes
 14235 ;; Hardware stack levels used:    1
 14236 ;; Hardware stack levels required when called:    3
 14237 ;; This function calls:
 14238 ;;		Nothing
 14239 ;; This function is called by:
 14240 ;;		_utoa
 14241 ;; This function uses a non-reentrant model
 14242 ;;
 14243                           
 14244                           	psect	text36
 14245  0156CA                     __ptext36:
 14246                           	opt stack 0
 14247  0156CA                     ___lwdiv:
 14248                           	opt stack 23
 14249                           
 14250                           ; BSR set to: 0
 14251                           ;incstack = 0
 14252  0156CA  0E00               	movlw	0
 14253  0156CC  0100               	movlb	0	; () banked
 14254  0156CE  6F75               	movwf	(___lwdiv@quotient+1)& (0+255),b
 14255  0156D0  0E00               	movlw	0
 14256  0156D2  6F74               	movwf	___lwdiv@quotient& (0+255),b
 14257                           
 14258                           ; BSR set to: 0
 14259  0156D4  0100               	movlb	0	; () banked
 14260  0156D6  5172               	movf	___lwdiv@divisor& (0+255),w,b
 14261  0156D8  0100               	movlb	0	; () banked
 14262  0156DA  1173               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 14263  0156DC  B4D8               	btfsc	status,2,c
 14264  0156DE  D031               	goto	l1639
 14265                           
 14266                           ; BSR set to: 0
 14267  0156E0  0E01               	movlw	1
 14268  0156E2  0100               	movlb	0	; () banked
 14269  0156E4  6F76               	movwf	___lwdiv@counter& (0+255),b
 14270  0156E6  D007               	goto	l4602
 14271  0156E8                     l4600:
 14272                           
 14273                           ; BSR set to: 0
 14274  0156E8  0100               	movlb	0	; () banked
 14275  0156EA  90D8               	bcf	status,0,c
 14276  0156EC  3772               	rlcf	___lwdiv@divisor& (0+255),f,b
 14277  0156EE  3773               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 14278  0156F0  0100               	movlb	0	; () banked
 14279  0156F2  2B76               	incf	___lwdiv@counter& (0+255),f,b
 14280  0156F4  D000               	goto	l4602
 14281  0156F6                     l4602:
 14282                           
 14283                           ; BSR set to: 0
 14284  0156F6  0100               	movlb	0	; () banked
 14285  0156F8  BF73               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
 14286  0156FA  D002               	goto	l4604
 14287  0156FC  D7F5               	goto	l4600
 14288                           
 14289                           ; BSR set to: 0
 14290  0156FE  D000               	goto	l4604
 14291  015700                     l4604:
 14292                           
 14293                           ; BSR set to: 0
 14294  015700  0100               	movlb	0	; () banked
 14295  015702  90D8               	bcf	status,0,c
 14296  015704  3774               	rlcf	___lwdiv@quotient& (0+255),f,b
 14297  015706  3775               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 14298                           
 14299                           ; BSR set to: 0
 14300  015708  0100               	movlb	0	; () banked
 14301  01570A  5172               	movf	___lwdiv@divisor& (0+255),w,b
 14302  01570C  0100               	movlb	0	; () banked
 14303  01570E  5D70               	subwf	___lwdiv@dividend& (0+255),w,b
 14304  015710  0100               	movlb	0	; () banked
 14305  015712  5173               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14306  015714  0100               	movlb	0	; () banked
 14307  015716  5971               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 14308  015718  A0D8               	btfss	status,0,c
 14309  01571A  D00B               	goto	l4612
 14310                           
 14311                           ; BSR set to: 0
 14312  01571C  0100               	movlb	0	; () banked
 14313  01571E  5172               	movf	___lwdiv@divisor& (0+255),w,b
 14314  015720  0100               	movlb	0	; () banked
 14315  015722  5F70               	subwf	___lwdiv@dividend& (0+255),f,b
 14316  015724  0100               	movlb	0	; () banked
 14317  015726  5173               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14318  015728  0100               	movlb	0	; () banked
 14319  01572A  5B71               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 14320                           
 14321                           ; BSR set to: 0
 14322  01572C  0100               	movlb	0	; () banked
 14323  01572E  8174               	bsf	___lwdiv@quotient& (0+255),0,b
 14324  015730  D000               	goto	l4612
 14325  015732                     l4612:
 14326                           
 14327                           ; BSR set to: 0
 14328  015732  0100               	movlb	0	; () banked
 14329  015734  90D8               	bcf	status,0,c
 14330  015736  3373               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 14331  015738  3372               	rrcf	___lwdiv@divisor& (0+255),f,b
 14332                           
 14333                           ; BSR set to: 0
 14334  01573A  0100               	movlb	0	; () banked
 14335  01573C  2F76               	decfsz	___lwdiv@counter& (0+255),f,b
 14336  01573E  D7E0               	goto	l4604
 14337  015740  D000               	goto	l1639
 14338  015742                     l1639:
 14339                           
 14340                           ; BSR set to: 0
 14341  015742  C074  F070         	movff	___lwdiv@quotient,?___lwdiv
 14342  015746  C075  F071         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14343                           
 14344                           ; BSR set to: 0
 14345  01574A  0012               	return		;funcret
 14346  01574C                     __end_of___lwdiv:
 14347                           	opt stack 0
 14348                           tblptru	equ	0xFF8
 14349                           tblptrh	equ	0xFF7
 14350                           tblptrl	equ	0xFF6
 14351                           tablat	equ	0xFF5
 14352                           prodh	equ	0xFF4
 14353                           prodl	equ	0xFF3
 14354                           intcon	equ	0xFF2
 14355                           postinc0	equ	0xFEE
 14356                           wreg	equ	0xFE8
 14357                           indf1	equ	0xFE7
 14358                           plusw1	equ	0xFE3
 14359                           fsr1h	equ	0xFE2
 14360                           fsr1l	equ	0xFE1
 14361                           indf2	equ	0xFDF
 14362                           postinc2	equ	0xFDE
 14363                           plusw2	equ	0xFDB
 14364                           fsr2h	equ	0xFDA
 14365                           fsr2l	equ	0xFD9
 14366                           status	equ	0xFD8
 14367                           
 14368 ;; *************** function _LCD_write_string *****************
 14369 ;; Defined at:
 14370 ;;		line 194 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14371 ;; Parameters:    Size  Location     Type
 14372 ;;  buffer          2   33[BANK0 ] PTR unsigned char 
 14373 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 14374 ;; Auto vars:     Size  Location     Type
 14375 ;;		None
 14376 ;; Return value:  Size  Location     Type
 14377 ;;		None               void
 14378 ;; Registers used:
 14379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14380 ;; Tracked objects:
 14381 ;;		On entry : 0/0
 14382 ;;		On exit  : 0/0
 14383 ;;		Unchanged: 0/0
 14384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14385 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14388 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14389 ;;Total ram usage:        2 bytes
 14390 ;; Hardware stack levels used:    1
 14391 ;; Hardware stack levels required when called:    8
 14392 ;; This function calls:
 14393 ;;		_LCD_write_char
 14394 ;; This function is called by:
 14395 ;;		_LCD_write_integer
 14396 ;;		_LCD_Handler
 14397 ;; This function uses a non-reentrant model
 14398 ;;
 14399                           
 14400                           	psect	text37
 14401  015E3C                     __ptext37:
 14402                           	opt stack 0
 14403  015E3C                     _LCD_write_string:
 14404                           	opt stack 21
 14405                           
 14406                           ;src\LCD_44780.c: 197: while(*buffer){
 14407                           
 14408                           ; BSR set to: 0
 14409                           ;incstack = 0
 14410  015E3C  D00B               	goto	l7598
 14411  015E3E                     l7594:
 14412                           
 14413                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 14414  015E3E  C081  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14415  015E42  C082  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14416  015E46  50DF               	movf	indf2,w,c
 14417  015E48  EC1A  F0AB         	call	_LCD_write_char
 14418                           
 14419                           ;src\LCD_44780.c: 202: buffer++;
 14420  015E4C  0100               	movlb	0	; () banked
 14421  015E4E  4B81               	infsnz	LCD_write_string@buffer& (0+255),f,b
 14422  015E50  2B82               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 14423  015E52  D000               	goto	l7598
 14424  015E54                     l7598:
 14425  015E54  C081  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14426  015E58  C082  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14427  015E5C  50DF               	movf	indf2,w,c
 14428  015E5E  A4D8               	btfss	status,2,c
 14429  015E60  D7EE               	goto	l7594
 14430  015E62  0012               	return		;funcret
 14431  015E64                     __end_of_LCD_write_string:
 14432                           	opt stack 0
 14433                           tblptru	equ	0xFF8
 14434                           tblptrh	equ	0xFF7
 14435                           tblptrl	equ	0xFF6
 14436                           tablat	equ	0xFF5
 14437                           prodh	equ	0xFF4
 14438                           prodl	equ	0xFF3
 14439                           intcon	equ	0xFF2
 14440                           postinc0	equ	0xFEE
 14441                           wreg	equ	0xFE8
 14442                           indf1	equ	0xFE7
 14443                           plusw1	equ	0xFE3
 14444                           fsr1h	equ	0xFE2
 14445                           fsr1l	equ	0xFE1
 14446                           indf2	equ	0xFDF
 14447                           postinc2	equ	0xFDE
 14448                           plusw2	equ	0xFDB
 14449                           fsr2h	equ	0xFDA
 14450                           fsr2l	equ	0xFD9
 14451                           status	equ	0xFD8
 14452                           
 14453 ;; *************** function _LCD_goto_xy *****************
 14454 ;; Defined at:
 14455 ;;		line 136 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14456 ;; Parameters:    Size  Location     Type
 14457 ;;  x               1    wreg     unsigned char 
 14458 ;;  y               1   31[BANK0 ] unsigned char 
 14459 ;; Auto vars:     Size  Location     Type
 14460 ;;  x               1   32[BANK0 ] unsigned char 
 14461 ;; Return value:  Size  Location     Type
 14462 ;;		None               void
 14463 ;; Registers used:
 14464 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14465 ;; Tracked objects:
 14466 ;;		On entry : 0/0
 14467 ;;		On exit  : 0/0
 14468 ;;		Unchanged: 0/0
 14469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14470 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14471 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14473 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14474 ;;Total ram usage:        2 bytes
 14475 ;; Hardware stack levels used:    1
 14476 ;; Hardware stack levels required when called:    8
 14477 ;; This function calls:
 14478 ;;		_LCD_goto_line
 14479 ;;		_LCD_shift_cursor
 14480 ;; This function is called by:
 14481 ;;		_LCD_Handler
 14482 ;; This function uses a non-reentrant model
 14483 ;;
 14484                           
 14485                           	psect	text38
 14486  015ECC                     __ptext38:
 14487                           	opt stack 0
 14488  015ECC                     _LCD_goto_xy:
 14489                           	opt stack 21
 14490                           
 14491                           ;incstack = 0
 14492                           ;LCD_goto_xy@x stored from wreg
 14493  015ECC  0100               	movlb	0	; () banked
 14494  015ECE  6F80               	movwf	LCD_goto_xy@x& (0+255),b
 14495                           
 14496                           ; BSR set to: 0
 14497                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 14498  015ED0  0100               	movlb	0	; () banked
 14499  015ED2  517F               	movf	LCD_goto_xy@y& (0+255),w,b
 14500  015ED4  EC18  F0A8         	call	_LCD_goto_line
 14501                           
 14502                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 14503  015ED8  0100               	movlb	0	; () banked
 14504  015EDA  0580               	decf	LCD_goto_xy@x& (0+255),w,b
 14505  015EDC  0100               	movlb	0	; () banked
 14506  015EDE  6F7C               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 14507  015EE0  0E01               	movlw	1
 14508  015EE2  EC43  F0AD         	call	_LCD_shift_cursor
 14509  015EE6  0012               	return		;funcret
 14510  015EE8                     __end_of_LCD_goto_xy:
 14511                           	opt stack 0
 14512                           tblptru	equ	0xFF8
 14513                           tblptrh	equ	0xFF7
 14514                           tblptrl	equ	0xFF6
 14515                           tablat	equ	0xFF5
 14516                           prodh	equ	0xFF4
 14517                           prodl	equ	0xFF3
 14518                           intcon	equ	0xFF2
 14519                           postinc0	equ	0xFEE
 14520                           wreg	equ	0xFE8
 14521                           indf1	equ	0xFE7
 14522                           plusw1	equ	0xFE3
 14523                           fsr1h	equ	0xFE2
 14524                           fsr1l	equ	0xFE1
 14525                           indf2	equ	0xFDF
 14526                           postinc2	equ	0xFDE
 14527                           plusw2	equ	0xFDB
 14528                           fsr2h	equ	0xFDA
 14529                           fsr2l	equ	0xFD9
 14530                           status	equ	0xFD8
 14531                           
 14532 ;; *************** function _LCD_shift_cursor *****************
 14533 ;; Defined at:
 14534 ;;		line 98 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14535 ;; Parameters:    Size  Location     Type
 14536 ;;  shift           1    wreg     unsigned char 
 14537 ;;  number_of_sh    1   28[BANK0 ] unsigned char 
 14538 ;; Auto vars:     Size  Location     Type
 14539 ;;  shift           1   29[BANK0 ] unsigned char 
 14540 ;;  i               1   30[BANK0 ] unsigned char 
 14541 ;; Return value:  Size  Location     Type
 14542 ;;		None               void
 14543 ;; Registers used:
 14544 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14545 ;; Tracked objects:
 14546 ;;		On entry : 0/0
 14547 ;;		On exit  : 0/0
 14548 ;;		Unchanged: 0/0
 14549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14550 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14551 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14553 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14554 ;;Total ram usage:        3 bytes
 14555 ;; Hardware stack levels used:    1
 14556 ;; Hardware stack levels required when called:    7
 14557 ;; This function calls:
 14558 ;;		_LCD_send_command
 14559 ;; This function is called by:
 14560 ;;		_LCD_goto_xy
 14561 ;; This function uses a non-reentrant model
 14562 ;;
 14563                           
 14564                           	psect	text39
 14565  015A86                     __ptext39:
 14566                           	opt stack 0
 14567  015A86                     _LCD_shift_cursor:
 14568                           	opt stack 21
 14569                           
 14570                           ;incstack = 0
 14571                           ;LCD_shift_cursor@shift stored from wreg
 14572  015A86  0100               	movlb	0	; () banked
 14573  015A88  6F7D               	movwf	LCD_shift_cursor@shift& (0+255),b
 14574                           
 14575                           ; BSR set to: 0
 14576                           ;src\LCD_44780.c: 100: unsigned char i;
 14577                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 14578  015A8A  0E00               	movlw	0
 14579  015A8C  0100               	movlb	0	; () banked
 14580  015A8E  6F7E               	movwf	LCD_shift_cursor@i& (0+255),b
 14581  015A90  D01A               	goto	l7578
 14582  015A92                     l7574:
 14583                           
 14584                           ; BSR set to: 0
 14585                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 14586  015A92  0E00               	movlw	0
 14587  015A94  0100               	movlb	0	; () banked
 14588  015A96  6F78               	movwf	LCD_send_command@D2& (0+255),b
 14589  015A98  0E00               	movlw	0
 14590  015A9A  0100               	movlb	0	; () banked
 14591  015A9C  6F79               	movwf	LCD_send_command@D1& (0+255),b
 14592  015A9E  0E01               	movlw	1
 14593  015AA0  0100               	movlb	0	; () banked
 14594  015AA2  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 14595  015AA4  0E00               	movlw	0
 14596  015AA6  EC16  F0AE         	call	_LCD_send_command
 14597                           
 14598                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 14599  015AAA  C07D  F078         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 14600  015AAE  0E00               	movlw	0
 14601  015AB0  0100               	movlb	0	; () banked
 14602  015AB2  6F79               	movwf	LCD_send_command@D1& (0+255),b
 14603  015AB4  0E00               	movlw	0
 14604  015AB6  0100               	movlb	0	; () banked
 14605  015AB8  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 14606  015ABA  0E00               	movlw	0
 14607  015ABC  EC16  F0AE         	call	_LCD_send_command
 14608  015AC0  0100               	movlb	0	; () banked
 14609  015AC2  2B7E               	incf	LCD_shift_cursor@i& (0+255),f,b
 14610  015AC4  D000               	goto	l7578
 14611  015AC6                     l7578:
 14612                           
 14613                           ; BSR set to: 0
 14614  015AC6  0100               	movlb	0	; () banked
 14615  015AC8  517C               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 14616  015ACA  0100               	movlb	0	; () banked
 14617  015ACC  5D7E               	subwf	LCD_shift_cursor@i& (0+255),w,b
 14618  015ACE  A0D8               	btfss	status,0,c
 14619  015AD0  D7E0               	goto	l7574
 14620                           
 14621                           ; BSR set to: 0
 14622                           
 14623                           ; BSR set to: 0
 14624  015AD2  0012               	return		;funcret
 14625  015AD4                     __end_of_LCD_shift_cursor:
 14626                           	opt stack 0
 14627                           tblptru	equ	0xFF8
 14628                           tblptrh	equ	0xFF7
 14629                           tblptrl	equ	0xFF6
 14630                           tablat	equ	0xFF5
 14631                           prodh	equ	0xFF4
 14632                           prodl	equ	0xFF3
 14633                           intcon	equ	0xFF2
 14634                           postinc0	equ	0xFEE
 14635                           wreg	equ	0xFE8
 14636                           indf1	equ	0xFE7
 14637                           plusw1	equ	0xFE3
 14638                           fsr1h	equ	0xFE2
 14639                           fsr1l	equ	0xFE1
 14640                           indf2	equ	0xFDF
 14641                           postinc2	equ	0xFDE
 14642                           plusw2	equ	0xFDB
 14643                           fsr2h	equ	0xFDA
 14644                           fsr2l	equ	0xFD9
 14645                           status	equ	0xFD8
 14646                           
 14647 ;; *************** function _LCD_Gap *****************
 14648 ;; Defined at:
 14649 ;;		line 509 in file "RemoteCan.c"
 14650 ;; Parameters:    Size  Location     Type
 14651 ;;		None
 14652 ;; Auto vars:     Size  Location     Type
 14653 ;;		None
 14654 ;; Return value:  Size  Location     Type
 14655 ;;		None               void
 14656 ;; Registers used:
 14657 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14658 ;; Tracked objects:
 14659 ;;		On entry : 0/0
 14660 ;;		On exit  : 0/0
 14661 ;;		Unchanged: 0/0
 14662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14667 ;;Total ram usage:        0 bytes
 14668 ;; Hardware stack levels used:    1
 14669 ;; Hardware stack levels required when called:    9
 14670 ;; This function calls:
 14671 ;;		_LCD_clear
 14672 ;;		_LCD_goto_line
 14673 ;;		_LCD_initialize
 14674 ;;		_LCD_write_message
 14675 ;; This function is called by:
 14676 ;;		_main
 14677 ;; This function uses a non-reentrant model
 14678 ;;
 14679                           
 14680                           	psect	text40
 14681  0158FA                     __ptext40:
 14682                           	opt stack 0
 14683  0158FA                     _LCD_Gap:
 14684                           	opt stack 21
 14685                           
 14686                           ;RemoteCan.c: 510: LCD_initialize(16);
 14687                           
 14688                           ; BSR set to: 0
 14689                           ;incstack = 0
 14690  0158FA  0E10               	movlw	16
 14691  0158FC  EC0B  F0A5         	call	_LCD_initialize
 14692                           
 14693                           ;RemoteCan.c: 511: LCD_clear();
 14694  015900  ECEE  F0AE         	call	_LCD_clear	;wreg free
 14695                           
 14696                           ;RemoteCan.c: 512: LCD_goto_line(1);
 14697  015904  0E01               	movlw	1
 14698  015906  EC18  F0A8         	call	_LCD_goto_line
 14699                           
 14700                           ;RemoteCan.c: 513: LCD_write_message("= PARKING MESSAGES =");
 14701  01590A  0E40               	movlw	low STR_16
 14702  01590C  0100               	movlb	0	; () banked
 14703  01590E  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14704  015910  0EFF               	movlw	high STR_16
 14705  015912  0100               	movlb	0	; () banked
 14706  015914  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14707  015916  EC87  F0AE         	call	_LCD_write_message	;wreg free
 14708                           
 14709                           ;RemoteCan.c: 514: LCD_goto_line(2);
 14710  01591A  0E02               	movlw	2
 14711  01591C  EC18  F0A8         	call	_LCD_goto_line
 14712                           
 14713                           ;RemoteCan.c: 515: LCD_write_message(" Parking space FOUND");
 14714  015920  0E94               	movlw	low STR_17
 14715  015922  0100               	movlb	0	; () banked
 14716  015924  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14717  015926  0EFF               	movlw	high STR_17
 14718  015928  0100               	movlb	0	; () banked
 14719  01592A  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14720  01592C  EC87  F0AE         	call	_LCD_write_message	;wreg free
 14721                           
 14722                           ;RemoteCan.c: 516: LCD_goto_line(3);
 14723  015930  0E03               	movlw	3
 14724  015932  EC18  F0A8         	call	_LCD_goto_line
 14725                           
 14726                           ;RemoteCan.c: 517: LCD_write_message("->  KEEP MOVING   <-");
 14727  015936  0E01               	movlw	low STR_18
 14728  015938  0100               	movlb	0	; () banked
 14729  01593A  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14730  01593C  0EFF               	movlw	high STR_18
 14731  01593E  0100               	movlb	0	; () banked
 14732  015940  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14733  015942  EC87  F0AE         	call	_LCD_write_message	;wreg free
 14734                           
 14735                           ;RemoteCan.c: 518: LCD_goto_line(4);
 14736  015946  0E04               	movlw	4
 14737  015948  EC18  F0A8         	call	_LCD_goto_line
 14738                           
 14739                           ;RemoteCan.c: 519: LCD_write_message(" until next message ");
 14740  01594C  0EAD               	movlw	low STR_19
 14741  01594E  0100               	movlb	0	; () banked
 14742  015950  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14743  015952  0EFE               	movlw	high STR_19
 14744  015954  0100               	movlb	0	; () banked
 14745  015956  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14746  015958  EC87  F0AE         	call	_LCD_write_message	;wreg free
 14747  01595C  0012               	return		;funcret
 14748  01595E                     __end_of_LCD_Gap:
 14749                           	opt stack 0
 14750                           tblptru	equ	0xFF8
 14751                           tblptrh	equ	0xFF7
 14752                           tblptrl	equ	0xFF6
 14753                           tablat	equ	0xFF5
 14754                           prodh	equ	0xFF4
 14755                           prodl	equ	0xFF3
 14756                           intcon	equ	0xFF2
 14757                           postinc0	equ	0xFEE
 14758                           wreg	equ	0xFE8
 14759                           indf1	equ	0xFE7
 14760                           plusw1	equ	0xFE3
 14761                           fsr1h	equ	0xFE2
 14762                           fsr1l	equ	0xFE1
 14763                           indf2	equ	0xFDF
 14764                           postinc2	equ	0xFDE
 14765                           plusw2	equ	0xFDB
 14766                           fsr2h	equ	0xFDA
 14767                           fsr2l	equ	0xFD9
 14768                           status	equ	0xFD8
 14769                           
 14770 ;; *************** function _LCD_Error *****************
 14771 ;; Defined at:
 14772 ;;		line 561 in file "RemoteCan.c"
 14773 ;; Parameters:    Size  Location     Type
 14774 ;;		None
 14775 ;; Auto vars:     Size  Location     Type
 14776 ;;		None
 14777 ;; Return value:  Size  Location     Type
 14778 ;;		None               void
 14779 ;; Registers used:
 14780 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14781 ;; Tracked objects:
 14782 ;;		On entry : 0/0
 14783 ;;		On exit  : 0/0
 14784 ;;		Unchanged: 0/0
 14785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14790 ;;Total ram usage:        0 bytes
 14791 ;; Hardware stack levels used:    1
 14792 ;; Hardware stack levels required when called:    9
 14793 ;; This function calls:
 14794 ;;		_LCD_clear
 14795 ;;		_LCD_goto_line
 14796 ;;		_LCD_initialize
 14797 ;;		_LCD_write_message
 14798 ;; This function is called by:
 14799 ;;		_main
 14800 ;; This function uses a non-reentrant model
 14801 ;;
 14802                           
 14803                           	psect	text41
 14804  01595E                     __ptext41:
 14805                           	opt stack 0
 14806  01595E                     _LCD_Error:
 14807                           	opt stack 21
 14808                           
 14809                           ;RemoteCan.c: 562: LCD_initialize(16);
 14810                           
 14811                           ;incstack = 0
 14812  01595E  0E10               	movlw	16
 14813  015960  EC0B  F0A5         	call	_LCD_initialize
 14814                           
 14815                           ;RemoteCan.c: 563: LCD_clear();
 14816  015964  ECEE  F0AE         	call	_LCD_clear	;wreg free
 14817                           
 14818                           ;RemoteCan.c: 564: LCD_goto_line(1);
 14819  015968  0E01               	movlw	1
 14820  01596A  EC18  F0A8         	call	_LCD_goto_line
 14821                           
 14822                           ;RemoteCan.c: 565: LCD_write_message("= PARKING MESSAGES =");
 14823  01596E  0E40               	movlw	low STR_16
 14824  015970  0100               	movlb	0	; () banked
 14825  015972  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14826  015974  0EFF               	movlw	high STR_16
 14827  015976  0100               	movlb	0	; () banked
 14828  015978  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14829  01597A  EC87  F0AE         	call	_LCD_write_message	;wreg free
 14830                           
 14831                           ;RemoteCan.c: 566: LCD_goto_line(2);
 14832  01597E  0E02               	movlw	2
 14833  015980  EC18  F0A8         	call	_LCD_goto_line
 14834                           
 14835                           ;RemoteCan.c: 567: LCD_write_message(" Parking procedures ");
 14836  015984  0ED7               	movlw	low STR_29
 14837  015986  0100               	movlb	0	; () banked
 14838  015988  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14839  01598A  0EFE               	movlw	high STR_29
 14840  01598C  0100               	movlb	0	; () banked
 14841  01598E  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14842  015990  EC87  F0AE         	call	_LCD_write_message	;wreg free
 14843                           
 14844                           ;RemoteCan.c: 568: LCD_goto_line(3);
 14845  015994  0E03               	movlw	3
 14846  015996  EC18  F0A8         	call	_LCD_goto_line
 14847                           
 14848                           ;RemoteCan.c: 569: LCD_write_message("       FAILED!      ");
 14849  01599A  0E2F               	movlw	low STR_34
 14850  01599C  0100               	movlb	0	; () banked
 14851  01599E  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14852  0159A0  0EFE               	movlw	high STR_34
 14853  0159A2  0100               	movlb	0	; () banked
 14854  0159A4  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14855  0159A6  EC87  F0AE         	call	_LCD_write_message	;wreg free
 14856                           
 14857                           ;RemoteCan.c: 570: LCD_goto_line(4);
 14858  0159AA  0E04               	movlw	4
 14859  0159AC  EC18  F0A8         	call	_LCD_goto_line
 14860                           
 14861                           ;RemoteCan.c: 571: LCD_write_message("   due to an error  ");
 14862  0159B0  0E98               	movlw	low STR_35
 14863  0159B2  0100               	movlb	0	; () banked
 14864  0159B4  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14865  0159B6  0EFE               	movlw	high STR_35
 14866  0159B8  0100               	movlb	0	; () banked
 14867  0159BA  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14868  0159BC  EC87  F0AE         	call	_LCD_write_message	;wreg free
 14869  0159C0  0012               	return		;funcret
 14870  0159C2                     __end_of_LCD_Error:
 14871                           	opt stack 0
 14872                           tblptru	equ	0xFF8
 14873                           tblptrh	equ	0xFF7
 14874                           tblptrl	equ	0xFF6
 14875                           tablat	equ	0xFF5
 14876                           prodh	equ	0xFF4
 14877                           prodl	equ	0xFF3
 14878                           intcon	equ	0xFF2
 14879                           postinc0	equ	0xFEE
 14880                           wreg	equ	0xFE8
 14881                           indf1	equ	0xFE7
 14882                           plusw1	equ	0xFE3
 14883                           fsr1h	equ	0xFE2
 14884                           fsr1l	equ	0xFE1
 14885                           indf2	equ	0xFDF
 14886                           postinc2	equ	0xFDE
 14887                           plusw2	equ	0xFDB
 14888                           fsr2h	equ	0xFDA
 14889                           fsr2l	equ	0xFD9
 14890                           status	equ	0xFD8
 14891                           
 14892 ;; *************** function _LCD_End *****************
 14893 ;; Defined at:
 14894 ;;		line 548 in file "RemoteCan.c"
 14895 ;; Parameters:    Size  Location     Type
 14896 ;;		None
 14897 ;; Auto vars:     Size  Location     Type
 14898 ;;		None
 14899 ;; Return value:  Size  Location     Type
 14900 ;;		None               void
 14901 ;; Registers used:
 14902 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14903 ;; Tracked objects:
 14904 ;;		On entry : 0/0
 14905 ;;		On exit  : 0/0
 14906 ;;		Unchanged: 0/0
 14907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14912 ;;Total ram usage:        0 bytes
 14913 ;; Hardware stack levels used:    1
 14914 ;; Hardware stack levels required when called:    9
 14915 ;; This function calls:
 14916 ;;		_LCD_clear
 14917 ;;		_LCD_goto_line
 14918 ;;		_LCD_initialize
 14919 ;;		_LCD_write_message
 14920 ;; This function is called by:
 14921 ;;		_main
 14922 ;; This function uses a non-reentrant model
 14923 ;;
 14924                           
 14925                           	psect	text42
 14926  0159C2                     __ptext42:
 14927                           	opt stack 0
 14928  0159C2                     _LCD_End:
 14929                           	opt stack 21
 14930                           
 14931                           ;RemoteCan.c: 549: LCD_initialize(16);
 14932                           
 14933                           ;incstack = 0
 14934  0159C2  0E10               	movlw	16
 14935  0159C4  EC0B  F0A5         	call	_LCD_initialize
 14936                           
 14937                           ;RemoteCan.c: 550: LCD_clear();
 14938  0159C8  ECEE  F0AE         	call	_LCD_clear	;wreg free
 14939                           
 14940                           ;RemoteCan.c: 551: LCD_goto_line(1);
 14941  0159CC  0E01               	movlw	1
 14942  0159CE  EC18  F0A8         	call	_LCD_goto_line
 14943                           
 14944                           ;RemoteCan.c: 552: LCD_write_message("= PARKING MESSAGES =");
 14945  0159D2  0E40               	movlw	low STR_16
 14946  0159D4  0100               	movlb	0	; () banked
 14947  0159D6  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14948  0159D8  0EFF               	movlw	high STR_16
 14949  0159DA  0100               	movlb	0	; () banked
 14950  0159DC  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14951  0159DE  EC87  F0AE         	call	_LCD_write_message	;wreg free
 14952                           
 14953                           ;RemoteCan.c: 553: LCD_goto_line(2);
 14954  0159E2  0E02               	movlw	2
 14955  0159E4  EC18  F0A8         	call	_LCD_goto_line
 14956                           
 14957                           ;RemoteCan.c: 554: LCD_write_message(" Parking procedures ");
 14958  0159E8  0ED7               	movlw	low STR_29
 14959  0159EA  0100               	movlb	0	; () banked
 14960  0159EC  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14961  0159EE  0EFE               	movlw	high STR_29
 14962  0159F0  0100               	movlb	0	; () banked
 14963  0159F2  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14964  0159F4  EC87  F0AE         	call	_LCD_write_message	;wreg free
 14965                           
 14966                           ;RemoteCan.c: 555: LCD_goto_line(3);
 14967  0159F8  0E03               	movlw	3
 14968  0159FA  EC18  F0A8         	call	_LCD_goto_line
 14969                           
 14970                           ;RemoteCan.c: 556: LCD_write_message("    SUCCESSFULLY    ");
 14971  0159FE  0E59               	movlw	low STR_30
 14972  015A00  0100               	movlb	0	; () banked
 14973  015A02  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14974  015A04  0EFE               	movlw	high STR_30
 14975  015A06  0100               	movlb	0	; () banked
 14976  015A08  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14977  015A0A  EC87  F0AE         	call	_LCD_write_message	;wreg free
 14978                           
 14979                           ;RemoteCan.c: 557: LCD_goto_line(4);
 14980  015A0E  0E04               	movlw	4
 14981  015A10  EC18  F0A8         	call	_LCD_goto_line
 14982                           
 14983                           ;RemoteCan.c: 558: LCD_write_message("     COMPLETED!     ");
 14984  015A14  0E44               	movlw	low STR_31
 14985  015A16  0100               	movlb	0	; () banked
 14986  015A18  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 14987  015A1A  0EFE               	movlw	high STR_31
 14988  015A1C  0100               	movlb	0	; () banked
 14989  015A1E  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14990  015A20  EC87  F0AE         	call	_LCD_write_message	;wreg free
 14991  015A24  0012               	return		;funcret
 14992  015A26                     __end_of_LCD_End:
 14993                           	opt stack 0
 14994                           tblptru	equ	0xFF8
 14995                           tblptrh	equ	0xFF7
 14996                           tblptrl	equ	0xFF6
 14997                           tablat	equ	0xFF5
 14998                           prodh	equ	0xFF4
 14999                           prodl	equ	0xFF3
 15000                           intcon	equ	0xFF2
 15001                           postinc0	equ	0xFEE
 15002                           wreg	equ	0xFE8
 15003                           indf1	equ	0xFE7
 15004                           plusw1	equ	0xFE3
 15005                           fsr1h	equ	0xFE2
 15006                           fsr1l	equ	0xFE1
 15007                           indf2	equ	0xFDF
 15008                           postinc2	equ	0xFDE
 15009                           plusw2	equ	0xFDB
 15010                           fsr2h	equ	0xFDA
 15011                           fsr2l	equ	0xFD9
 15012                           status	equ	0xFD8
 15013                           
 15014 ;; *************** function _LCD_write_message *****************
 15015 ;; Defined at:
 15016 ;;		line 178 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15017 ;; Parameters:    Size  Location     Type
 15018 ;;  buffer          2   33[BANK0 ] PTR const unsigned char 
 15019 ;;		 -> STR_35(21), STR_34(21), STR_33(21), STR_32(21), 
 15020 ;;		 -> STR_31(21), STR_30(21), STR_29(21), STR_28(21), 
 15021 ;;		 -> STR_27(21), STR_26(21), STR_25(21), STR_24(21), 
 15022 ;;		 -> STR_23(21), STR_22(21), STR_21(21), STR_20(21), 
 15023 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(21), 
 15024 ;;		 -> STR_15(8), STR_14(8), STR_13(5), STR_12(5), 
 15025 ;;		 -> STR_11(5), STR_10(7), STR_9(14), STR_8(17), 
 15026 ;;		 -> STR_7(12), STR_6(21), STR_4(21), STR_3(21), 
 15027 ;;		 -> STR_2(21), STR_1(21), 
 15028 ;; Auto vars:     Size  Location     Type
 15029 ;;		None
 15030 ;; Return value:  Size  Location     Type
 15031 ;;		None               void
 15032 ;; Registers used:
 15033 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15034 ;; Tracked objects:
 15035 ;;		On entry : 0/0
 15036 ;;		On exit  : 0/0
 15037 ;;		Unchanged: 0/0
 15038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15039 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15042 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15043 ;;Total ram usage:        2 bytes
 15044 ;; Hardware stack levels used:    1
 15045 ;; Hardware stack levels required when called:    8
 15046 ;; This function calls:
 15047 ;;		_LCD_write_char
 15048 ;; This function is called by:
 15049 ;;		_main
 15050 ;;		_LCD_Handler
 15051 ;;		_LCD_Gap
 15052 ;;		_LCD_Park
 15053 ;;		_LCD_Parking
 15054 ;;		_LCD_End
 15055 ;;		_LCD_Error
 15056 ;; This function uses a non-reentrant model
 15057 ;;
 15058                           
 15059                           	psect	text43
 15060  015D0E                     __ptext43:
 15061                           	opt stack 0
 15062  015D0E                     _LCD_write_message:
 15063                           	opt stack 22
 15064                           
 15065                           ;src\LCD_44780.c: 181: while(*buffer) {
 15066                           
 15067                           ;incstack = 0
 15068  015D0E  D00E               	goto	l7916
 15069  015D10                     l7912:
 15070                           
 15071                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 15072  015D10  C081  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15073  015D14  C082  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15074  015D18                     	if	0	;tblptru may be non-zero
 15075  015D18                     	endif
 15076  015D18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15077  015D18  0E00               	movlw	low (__mediumconst shr (0+16))
 15078  015D1A  6EF8               	movwf	tblptru,c
 15079  015D1C                     	endif
 15080  015D1C  0008               	tblrd		*
 15081  015D1E  50F5               	movf	tablat,w,c
 15082  015D20  EC1A  F0AB         	call	_LCD_write_char
 15083                           
 15084                           ;src\LCD_44780.c: 186: buffer++;
 15085  015D24  0100               	movlb	0	; () banked
 15086  015D26  4B81               	infsnz	LCD_write_message@buffer& (0+255),f,b
 15087  015D28  2B82               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 15088  015D2A  D000               	goto	l7916
 15089  015D2C                     l7916:
 15090  015D2C  C081  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15091  015D30  C082  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15092  015D34                     	if	0	;tblptru may be non-zero
 15093  015D34                     	endif
 15094  015D34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15095  015D34  0E00               	movlw	low (__mediumconst shr (0+16))
 15096  015D36  6EF8               	movwf	tblptru,c
 15097  015D38                     	endif
 15098  015D38  0008               	tblrd		*
 15099  015D3A  50F5               	movf	tablat,w,c
 15100  015D3C  0900               	iorlw	0
 15101  015D3E  A4D8               	btfss	status,2,c
 15102  015D40  D7E7               	goto	l7912
 15103  015D42  0012               	return		;funcret
 15104  015D44                     __end_of_LCD_write_message:
 15105                           	opt stack 0
 15106                           tblptru	equ	0xFF8
 15107                           tblptrh	equ	0xFF7
 15108                           tblptrl	equ	0xFF6
 15109                           tablat	equ	0xFF5
 15110                           prodh	equ	0xFF4
 15111                           prodl	equ	0xFF3
 15112                           intcon	equ	0xFF2
 15113                           postinc0	equ	0xFEE
 15114                           wreg	equ	0xFE8
 15115                           indf1	equ	0xFE7
 15116                           plusw1	equ	0xFE3
 15117                           fsr1h	equ	0xFE2
 15118                           fsr1l	equ	0xFE1
 15119                           indf2	equ	0xFDF
 15120                           postinc2	equ	0xFDE
 15121                           plusw2	equ	0xFDB
 15122                           fsr2h	equ	0xFDA
 15123                           fsr2l	equ	0xFD9
 15124                           status	equ	0xFD8
 15125                           
 15126 ;; *************** function _LCD_write_char *****************
 15127 ;; Defined at:
 15128 ;;		line 145 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15129 ;; Parameters:    Size  Location     Type
 15130 ;;  value           1    wreg     unsigned char 
 15131 ;; Auto vars:     Size  Location     Type
 15132 ;;  value           1   32[BANK0 ] unsigned char 
 15133 ;;  D0              1   31[BANK0 ] unsigned char 
 15134 ;;  D1              1   30[BANK0 ] unsigned char 
 15135 ;;  D2              1   29[BANK0 ] unsigned char 
 15136 ;;  D3              1   28[BANK0 ] unsigned char 
 15137 ;; Return value:  Size  Location     Type
 15138 ;;		None               void
 15139 ;; Registers used:
 15140 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15141 ;; Tracked objects:
 15142 ;;		On entry : 0/0
 15143 ;;		On exit  : 0/0
 15144 ;;		Unchanged: 0/0
 15145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15147 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15149 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15150 ;;Total ram usage:        5 bytes
 15151 ;; Hardware stack levels used:    1
 15152 ;; Hardware stack levels required when called:    7
 15153 ;; This function calls:
 15154 ;;		_LCD_send_command
 15155 ;; This function is called by:
 15156 ;;		_LCD_write_message
 15157 ;;		_LCD_write_string
 15158 ;; This function uses a non-reentrant model
 15159 ;;
 15160                           
 15161                           	psect	text44
 15162  015634                     __ptext44:
 15163                           	opt stack 0
 15164  015634                     _LCD_write_char:
 15165                           	opt stack 22
 15166                           
 15167                           ;incstack = 0
 15168                           ;LCD_write_char@value stored from wreg
 15169  015634  0100               	movlb	0	; () banked
 15170  015636  6F80               	movwf	LCD_write_char@value& (0+255),b
 15171                           
 15172                           ; BSR set to: 0
 15173                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 15174                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 15175  015638  848D               	bsf	3981,2,c	;volatile
 15176                           
 15177                           ; BSR set to: 0
 15178                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 15179  01563A  0100               	movlb	0	; () banked
 15180  01563C  4580               	rlncf	LCD_write_char@value& (0+255),w,b
 15181  01563E  0B01               	andlw	1
 15182  015640  0100               	movlb	0	; () banked
 15183  015642  6F7C               	movwf	LCD_write_char@D3& (0+255),b
 15184                           
 15185                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 15186  015644  0100               	movlb	0	; () banked
 15187  015646  4580               	rlncf	LCD_write_char@value& (0+255),w,b
 15188  015648  46E8               	rlncf	wreg,f,c
 15189  01564A  0B03               	andlw	3
 15190  01564C  0B01               	andlw	1
 15191  01564E  0100               	movlb	0	; () banked
 15192  015650  6F7D               	movwf	LCD_write_char@D2& (0+255),b
 15193                           
 15194                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 15195  015652  0100               	movlb	0	; () banked
 15196  015654  3980               	swapf	LCD_write_char@value& (0+255),w,b
 15197  015656  42E8               	rrncf	wreg,f,c
 15198  015658  0B07               	andlw	7
 15199  01565A  0B01               	andlw	1
 15200  01565C  0100               	movlb	0	; () banked
 15201  01565E  6F7E               	movwf	LCD_write_char@D1& (0+255),b
 15202                           
 15203                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 15204  015660  0100               	movlb	0	; () banked
 15205  015662  3980               	swapf	LCD_write_char@value& (0+255),w,b
 15206  015664  0B0F               	andlw	15
 15207  015666  0B01               	andlw	1
 15208  015668  0100               	movlb	0	; () banked
 15209  01566A  6F7F               	movwf	LCD_write_char@D0& (0+255),b
 15210                           
 15211                           ; BSR set to: 0
 15212                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 15213  01566C  C07D  F078         	movff	LCD_write_char@D2,LCD_send_command@D2
 15214  015670  C07E  F079         	movff	LCD_write_char@D1,LCD_send_command@D1
 15215  015674  C07F  F07A         	movff	LCD_write_char@D0,LCD_send_command@D0
 15216  015678  0100               	movlb	0	; () banked
 15217  01567A  517C               	movf	LCD_write_char@D3& (0+255),w,b
 15218  01567C  EC16  F0AE         	call	_LCD_send_command
 15219                           
 15220                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 15221  015680  0100               	movlb	0	; () banked
 15222  015682  3980               	swapf	LCD_write_char@value& (0+255),w,b
 15223  015684  46E8               	rlncf	wreg,f,c
 15224  015686  0B1F               	andlw	31
 15225  015688  0B01               	andlw	1
 15226  01568A  0100               	movlb	0	; () banked
 15227  01568C  6F7C               	movwf	LCD_write_char@D3& (0+255),b
 15228                           
 15229                           ; BSR set to: 0
 15230                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 15231  01568E  0100               	movlb	0	; () banked
 15232  015690  4180               	rrncf	LCD_write_char@value& (0+255),w,b
 15233  015692  42E8               	rrncf	wreg,f,c
 15234  015694  0B3F               	andlw	63
 15235  015696  0B01               	andlw	1
 15236  015698  0100               	movlb	0	; () banked
 15237  01569A  6F7D               	movwf	LCD_write_char@D2& (0+255),b
 15238                           
 15239                           ; BSR set to: 0
 15240                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 15241  01569C  0100               	movlb	0	; () banked
 15242  01569E  90D8               	bcf	status,0,c
 15243  0156A0  3180               	rrcf	LCD_write_char@value& (0+255),w,b
 15244  0156A2  0B01               	andlw	1
 15245  0156A4  0100               	movlb	0	; () banked
 15246  0156A6  6F7E               	movwf	LCD_write_char@D1& (0+255),b
 15247                           
 15248                           ; BSR set to: 0
 15249                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 15250  0156A8  0100               	movlb	0	; () banked
 15251  0156AA  5180               	movf	LCD_write_char@value& (0+255),w,b
 15252  0156AC  0B01               	andlw	1
 15253  0156AE  0100               	movlb	0	; () banked
 15254  0156B0  6F7F               	movwf	LCD_write_char@D0& (0+255),b
 15255                           
 15256                           ; BSR set to: 0
 15257                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 15258  0156B2  C07D  F078         	movff	LCD_write_char@D2,LCD_send_command@D2
 15259  0156B6  C07E  F079         	movff	LCD_write_char@D1,LCD_send_command@D1
 15260  0156BA  C07F  F07A         	movff	LCD_write_char@D0,LCD_send_command@D0
 15261  0156BE  0100               	movlb	0	; () banked
 15262  0156C0  517C               	movf	LCD_write_char@D3& (0+255),w,b
 15263  0156C2  EC16  F0AE         	call	_LCD_send_command
 15264                           
 15265                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 15266  0156C6  948D               	bcf	3981,2,c	;volatile
 15267  0156C8  0012               	return		;funcret
 15268  0156CA                     __end_of_LCD_write_char:
 15269                           	opt stack 0
 15270                           tblptru	equ	0xFF8
 15271                           tblptrh	equ	0xFF7
 15272                           tblptrl	equ	0xFF6
 15273                           tablat	equ	0xFF5
 15274                           prodh	equ	0xFF4
 15275                           prodl	equ	0xFF3
 15276                           intcon	equ	0xFF2
 15277                           postinc0	equ	0xFEE
 15278                           wreg	equ	0xFE8
 15279                           indf1	equ	0xFE7
 15280                           plusw1	equ	0xFE3
 15281                           fsr1h	equ	0xFE2
 15282                           fsr1l	equ	0xFE1
 15283                           indf2	equ	0xFDF
 15284                           postinc2	equ	0xFDE
 15285                           plusw2	equ	0xFDB
 15286                           fsr2h	equ	0xFDA
 15287                           fsr2l	equ	0xFD9
 15288                           status	equ	0xFD8
 15289                           
 15290 ;; *************** function _LCD_initialize *****************
 15291 ;; Defined at:
 15292 ;;		line 283 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15293 ;; Parameters:    Size  Location     Type
 15294 ;;  quartz_frequ    1    wreg     unsigned char 
 15295 ;; Auto vars:     Size  Location     Type
 15296 ;;  quartz_frequ    1   30[BANK0 ] unsigned char 
 15297 ;; Return value:  Size  Location     Type
 15298 ;;		None               void
 15299 ;; Registers used:
 15300 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15301 ;; Tracked objects:
 15302 ;;		On entry : 0/0
 15303 ;;		On exit  : 0/0
 15304 ;;		Unchanged: 0/0
 15305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15307 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15309 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15310 ;;Total ram usage:        1 bytes
 15311 ;; Hardware stack levels used:    1
 15312 ;; Hardware stack levels required when called:    8
 15313 ;; This function calls:
 15314 ;;		_LCD_clear
 15315 ;;		_LCD_cursor
 15316 ;;		_LCD_send_command
 15317 ;;		_delay_ms
 15318 ;;		_delay_set_quartz
 15319 ;; This function is called by:
 15320 ;;		_main
 15321 ;;		_LCD_Handler
 15322 ;;		_LCD_Gap
 15323 ;;		_LCD_Park
 15324 ;;		_LCD_Parking
 15325 ;;		_LCD_End
 15326 ;;		_LCD_Error
 15327 ;;		_board_initialization
 15328 ;; This function uses a non-reentrant model
 15329 ;;
 15330                           
 15331                           	psect	text45
 15332  014A16                     __ptext45:
 15333                           	opt stack 0
 15334  014A16                     _LCD_initialize:
 15335                           	opt stack 21
 15336                           
 15337                           ;incstack = 0
 15338                           ;LCD_initialize@quartz_frequency stored from wreg
 15339  014A16  0100               	movlb	0	; () banked
 15340  014A18  6F7E               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 15341                           
 15342                           ; BSR set to: 0
 15343                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 15344  014A1A  0100               	movlb	0	; () banked
 15345  014A1C  517E               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 15346  014A1E  ECAD  F0AF         	call	_delay_set_quartz
 15347                           
 15348                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 15349  014A22  948D               	bcf	3981,2,c	;volatile
 15350                           
 15351                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 15352  014A24  928B               	bcf	3979,1,c	;volatile
 15353                           
 15354                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 15355  014A26  908B               	bcf	3979,0,c	;volatile
 15356                           
 15357                           ;src\LCD_44780.c: 291: delay_ms (100);
 15358  014A28  0E00               	movlw	0
 15359  014A2A  0100               	movlb	0	; () banked
 15360  014A2C  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15361  014A2E  0E64               	movlw	100
 15362  014A30  6F76               	movwf	delay_ms@value_ms& (0+255),b
 15363  014A32  EC33  F0AE         	call	_delay_ms	;wreg free
 15364                           
 15365                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 15366  014A36  0E00               	movlw	0
 15367  014A38  0100               	movlb	0	; () banked
 15368  014A3A  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15369  014A3C  0E01               	movlw	1
 15370  014A3E  0100               	movlb	0	; () banked
 15371  014A40  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15372  014A42  0E01               	movlw	1
 15373  014A44  0100               	movlb	0	; () banked
 15374  014A46  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15375  014A48  0E00               	movlw	0
 15376  014A4A  EC16  F0AE         	call	_LCD_send_command
 15377                           
 15378                           ;src\LCD_44780.c: 293: delay_ms (100);
 15379  014A4E  0E00               	movlw	0
 15380  014A50  0100               	movlb	0	; () banked
 15381  014A52  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15382  014A54  0E64               	movlw	100
 15383  014A56  6F76               	movwf	delay_ms@value_ms& (0+255),b
 15384  014A58  EC33  F0AE         	call	_delay_ms	;wreg free
 15385                           
 15386                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 15387  014A5C  0E00               	movlw	0
 15388  014A5E  0100               	movlb	0	; () banked
 15389  014A60  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15390  014A62  0E01               	movlw	1
 15391  014A64  0100               	movlb	0	; () banked
 15392  014A66  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15393  014A68  0E01               	movlw	1
 15394  014A6A  0100               	movlb	0	; () banked
 15395  014A6C  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15396  014A6E  0E00               	movlw	0
 15397  014A70  EC16  F0AE         	call	_LCD_send_command
 15398                           
 15399                           ;src\LCD_44780.c: 295: delay_ms (10);
 15400  014A74  0E00               	movlw	0
 15401  014A76  0100               	movlb	0	; () banked
 15402  014A78  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15403  014A7A  0E0A               	movlw	10
 15404  014A7C  6F76               	movwf	delay_ms@value_ms& (0+255),b
 15405  014A7E  EC33  F0AE         	call	_delay_ms	;wreg free
 15406                           
 15407                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 15408  014A82  0E00               	movlw	0
 15409  014A84  0100               	movlb	0	; () banked
 15410  014A86  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15411  014A88  0E01               	movlw	1
 15412  014A8A  0100               	movlb	0	; () banked
 15413  014A8C  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15414  014A8E  0E01               	movlw	1
 15415  014A90  0100               	movlb	0	; () banked
 15416  014A92  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15417  014A94  0E00               	movlw	0
 15418  014A96  EC16  F0AE         	call	_LCD_send_command
 15419                           
 15420                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 15421  014A9A  0E00               	movlw	0
 15422  014A9C  0100               	movlb	0	; () banked
 15423  014A9E  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15424  014AA0  0E01               	movlw	1
 15425  014AA2  0100               	movlb	0	; () banked
 15426  014AA4  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15427  014AA6  0E00               	movlw	0
 15428  014AA8  0100               	movlb	0	; () banked
 15429  014AAA  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15430  014AAC  0E00               	movlw	0
 15431  014AAE  EC16  F0AE         	call	_LCD_send_command
 15432                           
 15433                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 15434  014AB2  0E00               	movlw	0
 15435  014AB4  0100               	movlb	0	; () banked
 15436  014AB6  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15437  014AB8  0E01               	movlw	1
 15438  014ABA  0100               	movlb	0	; () banked
 15439  014ABC  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15440  014ABE  0E00               	movlw	0
 15441  014AC0  0100               	movlb	0	; () banked
 15442  014AC2  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15443  014AC4  0E00               	movlw	0
 15444  014AC6  EC16  F0AE         	call	_LCD_send_command
 15445                           
 15446                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 15447  014ACA  0E00               	movlw	0
 15448  014ACC  0100               	movlb	0	; () banked
 15449  014ACE  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15450  014AD0  0E00               	movlw	0
 15451  014AD2  0100               	movlb	0	; () banked
 15452  014AD4  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15453  014AD6  0E00               	movlw	0
 15454  014AD8  0100               	movlb	0	; () banked
 15455  014ADA  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15456  014ADC  0E01               	movlw	1
 15457  014ADE  EC16  F0AE         	call	_LCD_send_command
 15458                           
 15459                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 15460  014AE2  0E00               	movlw	0
 15461  014AE4  0100               	movlb	0	; () banked
 15462  014AE6  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15463  014AE8  0E00               	movlw	0
 15464  014AEA  0100               	movlb	0	; () banked
 15465  014AEC  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15466  014AEE  0E00               	movlw	0
 15467  014AF0  0100               	movlb	0	; () banked
 15468  014AF2  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15469  014AF4  0E00               	movlw	0
 15470  014AF6  EC16  F0AE         	call	_LCD_send_command
 15471                           
 15472                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 15473  014AFA  0E00               	movlw	0
 15474  014AFC  0100               	movlb	0	; () banked
 15475  014AFE  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15476  014B00  0E00               	movlw	0
 15477  014B02  0100               	movlb	0	; () banked
 15478  014B04  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15479  014B06  0E00               	movlw	0
 15480  014B08  0100               	movlb	0	; () banked
 15481  014B0A  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15482  014B0C  0E01               	movlw	1
 15483  014B0E  EC16  F0AE         	call	_LCD_send_command
 15484                           
 15485                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 15486  014B12  0E00               	movlw	0
 15487  014B14  0100               	movlb	0	; () banked
 15488  014B16  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15489  014B18  0E00               	movlw	0
 15490  014B1A  0100               	movlb	0	; () banked
 15491  014B1C  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15492  014B1E  0E00               	movlw	0
 15493  014B20  0100               	movlb	0	; () banked
 15494  014B22  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15495  014B24  0E00               	movlw	0
 15496  014B26  EC16  F0AE         	call	_LCD_send_command
 15497                           
 15498                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 15499  014B2A  0E00               	movlw	0
 15500  014B2C  0100               	movlb	0	; () banked
 15501  014B2E  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15502  014B30  0E00               	movlw	0
 15503  014B32  0100               	movlb	0	; () banked
 15504  014B34  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15505  014B36  0E01               	movlw	1
 15506  014B38  0100               	movlb	0	; () banked
 15507  014B3A  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15508  014B3C  0E00               	movlw	0
 15509  014B3E  EC16  F0AE         	call	_LCD_send_command
 15510                           
 15511                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 15512  014B42  0E00               	movlw	0
 15513  014B44  0100               	movlb	0	; () banked
 15514  014B46  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15515  014B48  0E00               	movlw	0
 15516  014B4A  0100               	movlb	0	; () banked
 15517  014B4C  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15518  014B4E  0E00               	movlw	0
 15519  014B50  0100               	movlb	0	; () banked
 15520  014B52  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15521  014B54  0E00               	movlw	0
 15522  014B56  EC16  F0AE         	call	_LCD_send_command
 15523                           
 15524                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 15525  014B5A  0E01               	movlw	1
 15526  014B5C  0100               	movlb	0	; () banked
 15527  014B5E  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15528  014B60  0E01               	movlw	1
 15529  014B62  0100               	movlb	0	; () banked
 15530  014B64  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15531  014B66  0E00               	movlw	0
 15532  014B68  0100               	movlb	0	; () banked
 15533  014B6A  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15534  014B6C  0E00               	movlw	0
 15535  014B6E  EC16  F0AE         	call	_LCD_send_command
 15536                           
 15537                           ;src\LCD_44780.c: 312: LCD_clear ();
 15538  014B72  ECEE  F0AE         	call	_LCD_clear	;wreg free
 15539                           
 15540                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 15541  014B76  0E00               	movlw	0
 15542  014B78  0100               	movlb	0	; () banked
 15543  014B7A  6F7C               	movwf	LCD_cursor@blinking& (0+255),b
 15544  014B7C  0E00               	movlw	0
 15545  014B7E  ECD5  F0AE         	call	_LCD_cursor
 15546  014B82  0012               	return		;funcret
 15547  014B84                     __end_of_LCD_initialize:
 15548                           	opt stack 0
 15549                           tblptru	equ	0xFF8
 15550                           tblptrh	equ	0xFF7
 15551                           tblptrl	equ	0xFF6
 15552                           tablat	equ	0xFF5
 15553                           prodh	equ	0xFF4
 15554                           prodl	equ	0xFF3
 15555                           intcon	equ	0xFF2
 15556                           postinc0	equ	0xFEE
 15557                           wreg	equ	0xFE8
 15558                           indf1	equ	0xFE7
 15559                           plusw1	equ	0xFE3
 15560                           fsr1h	equ	0xFE2
 15561                           fsr1l	equ	0xFE1
 15562                           indf2	equ	0xFDF
 15563                           postinc2	equ	0xFDE
 15564                           plusw2	equ	0xFDB
 15565                           fsr2h	equ	0xFDA
 15566                           fsr2l	equ	0xFD9
 15567                           status	equ	0xFD8
 15568                           
 15569 ;; *************** function _delay_set_quartz *****************
 15570 ;; Defined at:
 15571 ;;		line 115 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 15572 ;; Parameters:    Size  Location     Type
 15573 ;;  frequency       1    wreg     unsigned char 
 15574 ;; Auto vars:     Size  Location     Type
 15575 ;;  frequency       1   16[BANK0 ] unsigned char 
 15576 ;; Return value:  Size  Location     Type
 15577 ;;		None               void
 15578 ;; Registers used:
 15579 ;;		wreg
 15580 ;; Tracked objects:
 15581 ;;		On entry : 0/0
 15582 ;;		On exit  : 0/0
 15583 ;;		Unchanged: 0/0
 15584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15586 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15588 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15589 ;;Total ram usage:        1 bytes
 15590 ;; Hardware stack levels used:    1
 15591 ;; Hardware stack levels required when called:    3
 15592 ;; This function calls:
 15593 ;;		Nothing
 15594 ;; This function is called by:
 15595 ;;		_LCD_initialize
 15596 ;; This function uses a non-reentrant model
 15597 ;;
 15598                           
 15599                           	psect	text46
 15600  015F5A                     __ptext46:
 15601                           	opt stack 0
 15602  015F5A                     _delay_set_quartz:
 15603                           	opt stack 25
 15604                           
 15605                           ;incstack = 0
 15606                           ;delay_set_quartz@frequency stored from wreg
 15607  015F5A  0100               	movlb	0	; () banked
 15608  015F5C  6F70               	movwf	delay_set_quartz@frequency& (0+255),b
 15609                           
 15610                           ; BSR set to: 0
 15611                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 15612  015F5E  C070  F0EC         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 15613                           
 15614                           ; BSR set to: 0
 15615  015F62  0012               	return		;funcret
 15616  015F64                     __end_of_delay_set_quartz:
 15617                           	opt stack 0
 15618                           tblptru	equ	0xFF8
 15619                           tblptrh	equ	0xFF7
 15620                           tblptrl	equ	0xFF6
 15621                           tablat	equ	0xFF5
 15622                           prodh	equ	0xFF4
 15623                           prodl	equ	0xFF3
 15624                           intcon	equ	0xFF2
 15625                           postinc0	equ	0xFEE
 15626                           wreg	equ	0xFE8
 15627                           indf1	equ	0xFE7
 15628                           plusw1	equ	0xFE3
 15629                           fsr1h	equ	0xFE2
 15630                           fsr1l	equ	0xFE1
 15631                           indf2	equ	0xFDF
 15632                           postinc2	equ	0xFDE
 15633                           plusw2	equ	0xFDB
 15634                           fsr2h	equ	0xFDA
 15635                           fsr2l	equ	0xFD9
 15636                           status	equ	0xFD8
 15637                           
 15638 ;; *************** function _LCD_cursor *****************
 15639 ;; Defined at:
 15640 ;;		line 266 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15641 ;; Parameters:    Size  Location     Type
 15642 ;;  active          1    wreg     unsigned char 
 15643 ;;  blinking        1   28[BANK0 ] unsigned char 
 15644 ;; Auto vars:     Size  Location     Type
 15645 ;;  active          1   29[BANK0 ] unsigned char 
 15646 ;; Return value:  Size  Location     Type
 15647 ;;		None               void
 15648 ;; Registers used:
 15649 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15650 ;; Tracked objects:
 15651 ;;		On entry : 0/0
 15652 ;;		On exit  : 0/0
 15653 ;;		Unchanged: 0/0
 15654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15655 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15656 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15658 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15659 ;;Total ram usage:        2 bytes
 15660 ;; Hardware stack levels used:    1
 15661 ;; Hardware stack levels required when called:    7
 15662 ;; This function calls:
 15663 ;;		_LCD_send_command
 15664 ;; This function is called by:
 15665 ;;		_LCD_initialize
 15666 ;; This function uses a non-reentrant model
 15667 ;;
 15668                           
 15669                           	psect	text47
 15670  015DAA                     __ptext47:
 15671                           	opt stack 0
 15672  015DAA                     _LCD_cursor:
 15673                           	opt stack 21
 15674                           
 15675                           ; BSR set to: 0
 15676                           ;incstack = 0
 15677                           ;LCD_cursor@active stored from wreg
 15678  015DAA  0100               	movlb	0	; () banked
 15679  015DAC  6F7D               	movwf	LCD_cursor@active& (0+255),b
 15680                           
 15681                           ; BSR set to: 0
 15682                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 15683  015DAE  0E00               	movlw	0
 15684  015DB0  0100               	movlb	0	; () banked
 15685  015DB2  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15686  015DB4  0E00               	movlw	0
 15687  015DB6  0100               	movlb	0	; () banked
 15688  015DB8  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15689  015DBA  0E00               	movlw	0
 15690  015DBC  0100               	movlb	0	; () banked
 15691  015DBE  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15692  015DC0  0E00               	movlw	0
 15693  015DC2  EC16  F0AE         	call	_LCD_send_command
 15694                           
 15695                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 15696  015DC6  0E01               	movlw	1
 15697  015DC8  0100               	movlb	0	; () banked
 15698  015DCA  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15699  015DCC  C07D  F079         	movff	LCD_cursor@active,LCD_send_command@D1
 15700  015DD0  C07C  F07A         	movff	LCD_cursor@blinking,LCD_send_command@D0
 15701  015DD4  0E01               	movlw	1
 15702  015DD6  EC16  F0AE         	call	_LCD_send_command
 15703  015DDA  0012               	return		;funcret
 15704  015DDC                     __end_of_LCD_cursor:
 15705                           	opt stack 0
 15706                           tblptru	equ	0xFF8
 15707                           tblptrh	equ	0xFF7
 15708                           tblptrl	equ	0xFF6
 15709                           tablat	equ	0xFF5
 15710                           prodh	equ	0xFF4
 15711                           prodl	equ	0xFF3
 15712                           intcon	equ	0xFF2
 15713                           postinc0	equ	0xFEE
 15714                           wreg	equ	0xFE8
 15715                           indf1	equ	0xFE7
 15716                           plusw1	equ	0xFE3
 15717                           fsr1h	equ	0xFE2
 15718                           fsr1l	equ	0xFE1
 15719                           indf2	equ	0xFDF
 15720                           postinc2	equ	0xFDE
 15721                           plusw2	equ	0xFDB
 15722                           fsr2h	equ	0xFDA
 15723                           fsr2l	equ	0xFD9
 15724                           status	equ	0xFD8
 15725                           
 15726 ;; *************** function _LCD_clear *****************
 15727 ;; Defined at:
 15728 ;;		line 257 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15729 ;; Parameters:    Size  Location     Type
 15730 ;;		None
 15731 ;; Auto vars:     Size  Location     Type
 15732 ;;		None
 15733 ;; Return value:  Size  Location     Type
 15734 ;;		None               void
 15735 ;; Registers used:
 15736 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15737 ;; Tracked objects:
 15738 ;;		On entry : 0/0
 15739 ;;		On exit  : 0/0
 15740 ;;		Unchanged: 0/0
 15741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15746 ;;Total ram usage:        0 bytes
 15747 ;; Hardware stack levels used:    1
 15748 ;; Hardware stack levels required when called:    7
 15749 ;; This function calls:
 15750 ;;		_LCD_send_command
 15751 ;; This function is called by:
 15752 ;;		_LCD_initialize
 15753 ;;		_LCD_Handler
 15754 ;;		_LCD_Gap
 15755 ;;		_LCD_Park
 15756 ;;		_LCD_Parking
 15757 ;;		_LCD_End
 15758 ;;		_LCD_Error
 15759 ;;		_board_initialization
 15760 ;; This function uses a non-reentrant model
 15761 ;;
 15762                           
 15763                           	psect	text48
 15764  015DDC                     __ptext48:
 15765                           	opt stack 0
 15766  015DDC                     _LCD_clear:
 15767                           	opt stack 21
 15768                           
 15769                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 15770                           
 15771                           ;incstack = 0
 15772  015DDC  0E00               	movlw	0
 15773  015DDE  0100               	movlb	0	; () banked
 15774  015DE0  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15775  015DE2  0E00               	movlw	0
 15776  015DE4  0100               	movlb	0	; () banked
 15777  015DE6  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15778  015DE8  0E00               	movlw	0
 15779  015DEA  0100               	movlb	0	; () banked
 15780  015DEC  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15781  015DEE  0E00               	movlw	0
 15782  015DF0  EC16  F0AE         	call	_LCD_send_command
 15783                           
 15784                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 15785  015DF4  0E00               	movlw	0
 15786  015DF6  0100               	movlb	0	; () banked
 15787  015DF8  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15788  015DFA  0E00               	movlw	0
 15789  015DFC  0100               	movlb	0	; () banked
 15790  015DFE  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15791  015E00  0E01               	movlw	1
 15792  015E02  0100               	movlb	0	; () banked
 15793  015E04  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15794  015E06  0E00               	movlw	0
 15795  015E08  EC16  F0AE         	call	_LCD_send_command
 15796  015E0C  0012               	return		;funcret
 15797  015E0E                     __end_of_LCD_clear:
 15798                           	opt stack 0
 15799                           tblptru	equ	0xFF8
 15800                           tblptrh	equ	0xFF7
 15801                           tblptrl	equ	0xFF6
 15802                           tablat	equ	0xFF5
 15803                           prodh	equ	0xFF4
 15804                           prodl	equ	0xFF3
 15805                           intcon	equ	0xFF2
 15806                           postinc0	equ	0xFEE
 15807                           wreg	equ	0xFE8
 15808                           indf1	equ	0xFE7
 15809                           plusw1	equ	0xFE3
 15810                           fsr1h	equ	0xFE2
 15811                           fsr1l	equ	0xFE1
 15812                           indf2	equ	0xFDF
 15813                           postinc2	equ	0xFDE
 15814                           plusw2	equ	0xFDB
 15815                           fsr2h	equ	0xFDA
 15816                           fsr2l	equ	0xFD9
 15817                           status	equ	0xFD8
 15818                           
 15819 ;; *************** function _LCD_goto_line *****************
 15820 ;; Defined at:
 15821 ;;		line 111 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15822 ;; Parameters:    Size  Location     Type
 15823 ;;  line            1    wreg     unsigned char 
 15824 ;; Auto vars:     Size  Location     Type
 15825 ;;  line            1   28[BANK0 ] unsigned char 
 15826 ;; Return value:  Size  Location     Type
 15827 ;;		None               void
 15828 ;; Registers used:
 15829 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15830 ;; Tracked objects:
 15831 ;;		On entry : 0/0
 15832 ;;		On exit  : 0/0
 15833 ;;		Unchanged: 0/0
 15834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15838 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15839 ;;Total ram usage:        1 bytes
 15840 ;; Hardware stack levels used:    1
 15841 ;; Hardware stack levels required when called:    7
 15842 ;; This function calls:
 15843 ;;		_LCD_send_command
 15844 ;; This function is called by:
 15845 ;;		_LCD_goto_xy
 15846 ;;		_main
 15847 ;;		_LCD_Handler
 15848 ;;		_LCD_Gap
 15849 ;;		_LCD_Park
 15850 ;;		_LCD_Parking
 15851 ;;		_LCD_End
 15852 ;;		_LCD_Error
 15853 ;;		_board_initialization
 15854 ;; This function uses a non-reentrant model
 15855 ;;
 15856                           
 15857                           	psect	text49
 15858  015030                     __ptext49:
 15859                           	opt stack 0
 15860  015030                     _LCD_goto_line:
 15861                           	opt stack 22
 15862                           
 15863                           ;incstack = 0
 15864                           ;LCD_goto_line@line stored from wreg
 15865  015030  0100               	movlb	0	; () banked
 15866  015032  6F7C               	movwf	LCD_goto_line@line& (0+255),b
 15867                           
 15868                           ; BSR set to: 0
 15869                           ;src\LCD_44780.c: 113: switch(line) {
 15870  015034  D064               	goto	l7590
 15871  015036                     l7582:
 15872                           
 15873                           ; BSR set to: 0
 15874  015036  0E00               	movlw	0
 15875  015038  0100               	movlb	0	; () banked
 15876  01503A  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15877  01503C  0E00               	movlw	0
 15878  01503E  0100               	movlb	0	; () banked
 15879  015040  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15880  015042  0E00               	movlw	0
 15881  015044  0100               	movlb	0	; () banked
 15882  015046  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15883  015048  0E01               	movlw	1
 15884  01504A  EC16  F0AE         	call	_LCD_send_command
 15885                           
 15886                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 15887  01504E  0E00               	movlw	0
 15888  015050  0100               	movlb	0	; () banked
 15889  015052  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15890  015054  0E00               	movlw	0
 15891  015056  0100               	movlb	0	; () banked
 15892  015058  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15893  01505A  0E00               	movlw	0
 15894  01505C  0100               	movlb	0	; () banked
 15895  01505E  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15896  015060  0E00               	movlw	0
 15897  015062  EC16  F0AE         	call	_LCD_send_command
 15898                           
 15899                           ;src\LCD_44780.c: 117: break;
 15900  015066  0012               	return	
 15901  015068                     l7584:
 15902  015068  0E01               	movlw	1
 15903  01506A  0100               	movlb	0	; () banked
 15904  01506C  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15905  01506E  0E00               	movlw	0
 15906  015070  0100               	movlb	0	; () banked
 15907  015072  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15908  015074  0E00               	movlw	0
 15909  015076  0100               	movlb	0	; () banked
 15910  015078  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15911  01507A  0E01               	movlw	1
 15912  01507C  EC16  F0AE         	call	_LCD_send_command
 15913                           
 15914                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 15915  015080  0E00               	movlw	0
 15916  015082  0100               	movlb	0	; () banked
 15917  015084  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15918  015086  0E00               	movlw	0
 15919  015088  0100               	movlb	0	; () banked
 15920  01508A  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15921  01508C  0E00               	movlw	0
 15922  01508E  0100               	movlb	0	; () banked
 15923  015090  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15924  015092  0E00               	movlw	0
 15925  015094  EC16  F0AE         	call	_LCD_send_command
 15926                           
 15927                           ;src\LCD_44780.c: 121: break;
 15928  015098  0012               	return	
 15929  01509A                     l7586:
 15930  01509A  0E00               	movlw	0
 15931  01509C  0100               	movlb	0	; () banked
 15932  01509E  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15933  0150A0  0E00               	movlw	0
 15934  0150A2  0100               	movlb	0	; () banked
 15935  0150A4  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15936  0150A6  0E01               	movlw	1
 15937  0150A8  0100               	movlb	0	; () banked
 15938  0150AA  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15939  0150AC  0E01               	movlw	1
 15940  0150AE  EC16  F0AE         	call	_LCD_send_command
 15941                           
 15942                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 15943  0150B2  0E01               	movlw	1
 15944  0150B4  0100               	movlb	0	; () banked
 15945  0150B6  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15946  0150B8  0E00               	movlw	0
 15947  0150BA  0100               	movlb	0	; () banked
 15948  0150BC  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15949  0150BE  0E00               	movlw	0
 15950  0150C0  0100               	movlb	0	; () banked
 15951  0150C2  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15952  0150C4  0E00               	movlw	0
 15953  0150C6  EC16  F0AE         	call	_LCD_send_command
 15954                           
 15955                           ;src\LCD_44780.c: 125: break;
 15956  0150CA  0012               	return	
 15957  0150CC                     l7588:
 15958  0150CC  0E01               	movlw	1
 15959  0150CE  0100               	movlb	0	; () banked
 15960  0150D0  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15961  0150D2  0E00               	movlw	0
 15962  0150D4  0100               	movlb	0	; () banked
 15963  0150D6  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15964  0150D8  0E01               	movlw	1
 15965  0150DA  0100               	movlb	0	; () banked
 15966  0150DC  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15967  0150DE  0E01               	movlw	1
 15968  0150E0  EC16  F0AE         	call	_LCD_send_command
 15969                           
 15970                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 15971  0150E4  0E01               	movlw	1
 15972  0150E6  0100               	movlb	0	; () banked
 15973  0150E8  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15974  0150EA  0E00               	movlw	0
 15975  0150EC  0100               	movlb	0	; () banked
 15976  0150EE  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15977  0150F0  0E00               	movlw	0
 15978  0150F2  0100               	movlb	0	; () banked
 15979  0150F4  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15980  0150F6  0E00               	movlw	0
 15981  0150F8  EC16  F0AE         	call	_LCD_send_command
 15982                           
 15983                           ;src\LCD_44780.c: 129: }
 15984  0150FC  0012               	return	
 15985  0150FE                     l7590:
 15986  0150FE  0100               	movlb	0	; () banked
 15987  015100  517C               	movf	LCD_goto_line@line& (0+255),w,b
 15988                           
 15989                           ; Switch size 1, requested type "space"
 15990                           ; Number of cases is 4, Range of values is 1 to 4
 15991                           ; switch strategies available:
 15992                           ; Name         Instructions Cycles
 15993                           ; simple_byte           13     7 (average)
 15994                           ;	Chosen strategy is simple_byte
 15995  015102  0A01               	xorlw	1	; case 1
 15996  015104  B4D8               	btfsc	status,2,c
 15997  015106  D797               	goto	l7582
 15998  015108  0A03               	xorlw	3	; case 2
 15999  01510A  B4D8               	btfsc	status,2,c
 16000  01510C  D7AD               	goto	l7584
 16001  01510E  0A01               	xorlw	1	; case 3
 16002  015110  B4D8               	btfsc	status,2,c
 16003  015112  D7C3               	goto	l7586
 16004  015114  0A07               	xorlw	7	; case 4
 16005  015116  A4D8               	btfss	status,2,c
 16006  015118  0012               	return	
 16007  01511A  D7D8               	goto	l7588
 16008                           
 16009                           ; BSR set to: 0
 16010  01511C  0012               	return		;funcret
 16011  01511E                     __end_of_LCD_goto_line:
 16012                           	opt stack 0
 16013                           tblptru	equ	0xFF8
 16014                           tblptrh	equ	0xFF7
 16015                           tblptrl	equ	0xFF6
 16016                           tablat	equ	0xFF5
 16017                           prodh	equ	0xFF4
 16018                           prodl	equ	0xFF3
 16019                           intcon	equ	0xFF2
 16020                           postinc0	equ	0xFEE
 16021                           wreg	equ	0xFE8
 16022                           indf1	equ	0xFE7
 16023                           plusw1	equ	0xFE3
 16024                           fsr1h	equ	0xFE2
 16025                           fsr1l	equ	0xFE1
 16026                           indf2	equ	0xFDF
 16027                           postinc2	equ	0xFDE
 16028                           plusw2	equ	0xFDB
 16029                           fsr2h	equ	0xFDA
 16030                           fsr2l	equ	0xFD9
 16031                           status	equ	0xFD8
 16032                           
 16033 ;; *************** function _LCD_send_command *****************
 16034 ;; Defined at:
 16035 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16036 ;; Parameters:    Size  Location     Type
 16037 ;;  D3              1    wreg     unsigned char 
 16038 ;;  D2              1   24[BANK0 ] unsigned char 
 16039 ;;  D1              1   25[BANK0 ] unsigned char 
 16040 ;;  D0              1   26[BANK0 ] unsigned char 
 16041 ;; Auto vars:     Size  Location     Type
 16042 ;;  D3              1   27[BANK0 ] unsigned char 
 16043 ;; Return value:  Size  Location     Type
 16044 ;;		None               void
 16045 ;; Registers used:
 16046 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16047 ;; Tracked objects:
 16048 ;;		On entry : 0/0
 16049 ;;		On exit  : 0/0
 16050 ;;		Unchanged: 0/0
 16051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16052 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16053 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16055 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16056 ;;Total ram usage:        4 bytes
 16057 ;; Hardware stack levels used:    1
 16058 ;; Hardware stack levels required when called:    6
 16059 ;; This function calls:
 16060 ;;		_LCD_enable_pulse
 16061 ;; This function is called by:
 16062 ;;		_LCD_shift_cursor
 16063 ;;		_LCD_goto_line
 16064 ;;		_LCD_write_char
 16065 ;;		_LCD_clear
 16066 ;;		_LCD_cursor
 16067 ;;		_LCD_initialize
 16068 ;;		_LCD_home
 16069 ;;		_LCD_shift
 16070 ;; This function uses a non-reentrant model
 16071 ;;
 16072                           
 16073                           	psect	text50
 16074  015C2C                     __ptext50:
 16075                           	opt stack 0
 16076  015C2C                     _LCD_send_command:
 16077                           	opt stack 22
 16078                           
 16079                           ;incstack = 0
 16080                           ;LCD_send_command@D3 stored from wreg
 16081  015C2C  0100               	movlb	0	; () banked
 16082  015C2E  6F7B               	movwf	LCD_send_command@D3& (0+255),b
 16083                           
 16084                           ; BSR set to: 0
 16085                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 16086  015C30  0100               	movlb	0	; () banked
 16087  015C32  B17A               	btfsc	LCD_send_command@D0& (0+255),0,b
 16088  015C34  D002               	bra	u9085
 16089  015C36  948B               	bcf	3979,2,c	;volatile
 16090  015C38  D001               	bra	u9086
 16091  015C3A                     u9085:
 16092  015C3A  848B               	bsf	3979,2,c	;volatile
 16093  015C3C                     u9086:
 16094                           
 16095                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 16096  015C3C  0100               	movlb	0	; () banked
 16097  015C3E  B179               	btfsc	LCD_send_command@D1& (0+255),0,b
 16098  015C40  D002               	bra	u9095
 16099  015C42  968B               	bcf	3979,3,c	;volatile
 16100  015C44  D001               	bra	u9096
 16101  015C46                     u9095:
 16102  015C46  868B               	bsf	3979,3,c	;volatile
 16103  015C48                     u9096:
 16104                           
 16105                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 16106  015C48  0100               	movlb	0	; () banked
 16107  015C4A  B178               	btfsc	LCD_send_command@D2& (0+255),0,b
 16108  015C4C  D002               	bra	u9105
 16109  015C4E  908C               	bcf	3980,0,c	;volatile
 16110  015C50  D001               	bra	u9106
 16111  015C52                     u9105:
 16112  015C52  808C               	bsf	3980,0,c	;volatile
 16113  015C54                     u9106:
 16114                           
 16115                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 16116  015C54  0100               	movlb	0	; () banked
 16117  015C56  B17B               	btfsc	LCD_send_command@D3& (0+255),0,b
 16118  015C58  D002               	bra	u9115
 16119  015C5A  928C               	bcf	3980,1,c	;volatile
 16120  015C5C  D001               	bra	u9116
 16121  015C5E                     u9115:
 16122  015C5E  828C               	bsf	3980,1,c	;volatile
 16123  015C60                     u9116:
 16124                           
 16125                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 16126  015C60  EC45  F0AF         	call	_LCD_enable_pulse	;wreg free
 16127  015C64  0012               	return		;funcret
 16128  015C66                     __end_of_LCD_send_command:
 16129                           	opt stack 0
 16130                           tblptru	equ	0xFF8
 16131                           tblptrh	equ	0xFF7
 16132                           tblptrl	equ	0xFF6
 16133                           tablat	equ	0xFF5
 16134                           prodh	equ	0xFF4
 16135                           prodl	equ	0xFF3
 16136                           intcon	equ	0xFF2
 16137                           postinc0	equ	0xFEE
 16138                           wreg	equ	0xFE8
 16139                           indf1	equ	0xFE7
 16140                           plusw1	equ	0xFE3
 16141                           fsr1h	equ	0xFE2
 16142                           fsr1l	equ	0xFE1
 16143                           indf2	equ	0xFDF
 16144                           postinc2	equ	0xFDE
 16145                           plusw2	equ	0xFDB
 16146                           fsr2h	equ	0xFDA
 16147                           fsr2l	equ	0xFD9
 16148                           status	equ	0xFD8
 16149                           
 16150 ;; *************** function _LCD_enable_pulse *****************
 16151 ;; Defined at:
 16152 ;;		line 49 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16153 ;; Parameters:    Size  Location     Type
 16154 ;;		None
 16155 ;; Auto vars:     Size  Location     Type
 16156 ;;		None
 16157 ;; Return value:  Size  Location     Type
 16158 ;;		None               void
 16159 ;; Registers used:
 16160 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16161 ;; Tracked objects:
 16162 ;;		On entry : 0/0
 16163 ;;		On exit  : 0/0
 16164 ;;		Unchanged: 0/0
 16165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16170 ;;Total ram usage:        0 bytes
 16171 ;; Hardware stack levels used:    1
 16172 ;; Hardware stack levels required when called:    5
 16173 ;; This function calls:
 16174 ;;		_delay_ms
 16175 ;; This function is called by:
 16176 ;;		_LCD_send_command
 16177 ;; This function uses a non-reentrant model
 16178 ;;
 16179                           
 16180                           	psect	text51
 16181  015E8A                     __ptext51:
 16182                           	opt stack 0
 16183  015E8A                     _LCD_enable_pulse:
 16184                           	opt stack 22
 16185                           
 16186                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 16187                           
 16188                           ;incstack = 0
 16189  015E8A  828B               	bsf	3979,1,c	;volatile
 16190                           
 16191                           ;src\LCD_44780.c: 52: delay_ms (1);
 16192  015E8C  0E00               	movlw	0
 16193  015E8E  0100               	movlb	0	; () banked
 16194  015E90  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16195  015E92  0E01               	movlw	1
 16196  015E94  6F76               	movwf	delay_ms@value_ms& (0+255),b
 16197  015E96  EC33  F0AE         	call	_delay_ms	;wreg free
 16198                           
 16199                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 16200  015E9A  928B               	bcf	3979,1,c	;volatile
 16201                           
 16202                           ;src\LCD_44780.c: 54: delay_ms (1);
 16203  015E9C  0E00               	movlw	0
 16204  015E9E  0100               	movlb	0	; () banked
 16205  015EA0  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16206  015EA2  0E01               	movlw	1
 16207  015EA4  6F76               	movwf	delay_ms@value_ms& (0+255),b
 16208  015EA6  EC33  F0AE         	call	_delay_ms	;wreg free
 16209  015EAA  0012               	return		;funcret
 16210  015EAC                     __end_of_LCD_enable_pulse:
 16211                           	opt stack 0
 16212                           tblptru	equ	0xFF8
 16213                           tblptrh	equ	0xFF7
 16214                           tblptrl	equ	0xFF6
 16215                           tablat	equ	0xFF5
 16216                           prodh	equ	0xFF4
 16217                           prodl	equ	0xFF3
 16218                           intcon	equ	0xFF2
 16219                           postinc0	equ	0xFEE
 16220                           wreg	equ	0xFE8
 16221                           indf1	equ	0xFE7
 16222                           plusw1	equ	0xFE3
 16223                           fsr1h	equ	0xFE2
 16224                           fsr1l	equ	0xFE1
 16225                           indf2	equ	0xFDF
 16226                           postinc2	equ	0xFDE
 16227                           plusw2	equ	0xFDB
 16228                           fsr2h	equ	0xFDA
 16229                           fsr2l	equ	0xFD9
 16230                           status	equ	0xFD8
 16231                           
 16232 ;; *************** function _delay_ms *****************
 16233 ;; Defined at:
 16234 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 16235 ;; Parameters:    Size  Location     Type
 16236 ;;  value_ms        2   22[BANK0 ] unsigned int 
 16237 ;; Auto vars:     Size  Location     Type
 16238 ;;		None
 16239 ;; Return value:  Size  Location     Type
 16240 ;;		None               void
 16241 ;; Registers used:
 16242 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16243 ;; Tracked objects:
 16244 ;;		On entry : 0/0
 16245 ;;		On exit  : 0/0
 16246 ;;		Unchanged: 0/0
 16247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16248 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16251 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16252 ;;Total ram usage:        2 bytes
 16253 ;; Hardware stack levels used:    1
 16254 ;; Hardware stack levels required when called:    4
 16255 ;; This function calls:
 16256 ;;		___wmul
 16257 ;; This function is called by:
 16258 ;;		_LCD_enable_pulse
 16259 ;;		_LCD_initialize
 16260 ;;		_main
 16261 ;;		_delay_s
 16262 ;; This function uses a non-reentrant model
 16263 ;;
 16264                           
 16265                           	psect	text52
 16266  015C66                     __ptext52:
 16267                           	opt stack 0
 16268  015C66                     _delay_ms:
 16269                           	opt stack 26
 16270                           
 16271                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 16272                           
 16273                           ;incstack = 0
 16274  015C66  C0EC  F070         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 16275  015C6A  0100               	movlb	0	; () banked
 16276  015C6C  6B71               	clrf	(___wmul@multiplier+1)& (0+255),b
 16277  015C6E  C076  F072         	movff	delay_ms@value_ms,___wmul@multiplicand
 16278  015C72  C077  F073         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 16279  015C76  EC50  F0AE         	call	___wmul	;wreg free
 16280  015C7A  C070  F0E3         	movff	?___wmul,_clock_counter_reference	;volatile
 16281  015C7E  C071  F0E4         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 16282                           
 16283                           ;src\delay.c: 75: while (clock_counter_reference) {
 16284  015C82  D007               	goto	l591
 16285  015C84                     l7306:
 16286                           
 16287                           ;src\delay.c: 85: _delay(240);
 16288  015C84  0E50               	movlw	80
 16289  015C86                     u11207:
 16290  015C86  2EE8               	decfsz	wreg,f,c
 16291  015C88  D7FE               	goto	u11207
 16292                           
 16293                           ;src\delay.c: 88: clock_counter_reference--;
 16294  015C8A  0100               	movlb	0	; () banked
 16295  015C8C  07E3               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 16296  015C8E  A0D8               	btfss	status,0,c
 16297  015C90  07E4               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 16298  015C92                     l591:
 16299  015C92  0100               	movlb	0	; () banked
 16300  015C94  51E3               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 16301  015C96  0100               	movlb	0	; () banked
 16302  015C98  11E4               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 16303  015C9A  A4D8               	btfss	status,2,c
 16304  015C9C  D7F3               	goto	l7306
 16305                           
 16306                           ; BSR set to: 0
 16307                           
 16308                           ; BSR set to: 0
 16309  015C9E  0012               	return		;funcret
 16310  015CA0                     __end_of_delay_ms:
 16311                           	opt stack 0
 16312                           tblptru	equ	0xFF8
 16313                           tblptrh	equ	0xFF7
 16314                           tblptrl	equ	0xFF6
 16315                           tablat	equ	0xFF5
 16316                           prodh	equ	0xFF4
 16317                           prodl	equ	0xFF3
 16318                           intcon	equ	0xFF2
 16319                           postinc0	equ	0xFEE
 16320                           wreg	equ	0xFE8
 16321                           indf1	equ	0xFE7
 16322                           plusw1	equ	0xFE3
 16323                           fsr1h	equ	0xFE2
 16324                           fsr1l	equ	0xFE1
 16325                           indf2	equ	0xFDF
 16326                           postinc2	equ	0xFDE
 16327                           plusw2	equ	0xFDB
 16328                           fsr2h	equ	0xFDA
 16329                           fsr2l	equ	0xFD9
 16330                           status	equ	0xFD8
 16331                           
 16332 ;; *************** function ___wmul *****************
 16333 ;; Defined at:
 16334 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 16335 ;; Parameters:    Size  Location     Type
 16336 ;;  multiplier      2   16[BANK0 ] unsigned int 
 16337 ;;  multiplicand    2   18[BANK0 ] unsigned int 
 16338 ;; Auto vars:     Size  Location     Type
 16339 ;;  product         2   20[BANK0 ] unsigned int 
 16340 ;; Return value:  Size  Location     Type
 16341 ;;                  2   16[BANK0 ] unsigned int 
 16342 ;; Registers used:
 16343 ;;		wreg, status,2, status,0, prodl, prodh
 16344 ;; Tracked objects:
 16345 ;;		On entry : 0/0
 16346 ;;		On exit  : 0/0
 16347 ;;		Unchanged: 0/0
 16348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16349 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16350 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16352 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16353 ;;Total ram usage:        6 bytes
 16354 ;; Hardware stack levels used:    1
 16355 ;; Hardware stack levels required when called:    3
 16356 ;; This function calls:
 16357 ;;		Nothing
 16358 ;; This function is called by:
 16359 ;;		_delay_ms
 16360 ;;		_sprintf
 16361 ;; This function uses a non-reentrant model
 16362 ;;
 16363                           
 16364                           	psect	text53
 16365  015CA0                     __ptext53:
 16366                           	opt stack 0
 16367  015CA0                     ___wmul:
 16368                           	opt stack 26
 16369                           
 16370                           ; BSR set to: 0
 16371                           ;incstack = 0
 16372  015CA0  0100               	movlb	0	; () banked
 16373  015CA2  5170               	movf	___wmul@multiplier& (0+255),w,b
 16374  015CA4  0100               	movlb	0	; () banked
 16375  015CA6  0372               	mulwf	___wmul@multiplicand& (0+255),b
 16376  015CA8  CFF3 F074          	movff	prodl,___wmul@product
 16377  015CAC  CFF4 F075          	movff	prodh,___wmul@product+1
 16378  015CB0  0100               	movlb	0	; () banked
 16379  015CB2  5170               	movf	___wmul@multiplier& (0+255),w,b
 16380  015CB4  0100               	movlb	0	; () banked
 16381  015CB6  0373               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16382  015CB8  50F3               	movf	prodl,w,c
 16383  015CBA  0100               	movlb	0	; () banked
 16384  015CBC  2775               	addwf	(___wmul@product+1)& (0+255),f,b
 16385  015CBE  0100               	movlb	0	; () banked
 16386  015CC0  5171               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16387  015CC2  0100               	movlb	0	; () banked
 16388  015CC4  0372               	mulwf	___wmul@multiplicand& (0+255),b
 16389  015CC6  50F3               	movf	prodl,w,c
 16390  015CC8  0100               	movlb	0	; () banked
 16391  015CCA  2775               	addwf	(___wmul@product+1)& (0+255),f,b
 16392                           
 16393                           ; BSR set to: 0
 16394  015CCC  C074  F070         	movff	___wmul@product,?___wmul
 16395  015CD0  C075  F071         	movff	___wmul@product+1,?___wmul+1
 16396  015CD4  0012               	return	
 16397                           
 16398                           ; BSR set to: 0
 16399                           
 16400                           ; BSR set to: 0
 16401  015CD6  0012               	return		;funcret
 16402  015CD8                     __end_of___wmul:
 16403                           	opt stack 0
 16404                           tblptru	equ	0xFF8
 16405                           tblptrh	equ	0xFF7
 16406                           tblptrl	equ	0xFF6
 16407                           tablat	equ	0xFF5
 16408                           prodh	equ	0xFF4
 16409                           prodl	equ	0xFF3
 16410                           intcon	equ	0xFF2
 16411                           postinc0	equ	0xFEE
 16412                           wreg	equ	0xFE8
 16413                           indf1	equ	0xFE7
 16414                           plusw1	equ	0xFE3
 16415                           fsr1h	equ	0xFE2
 16416                           fsr1l	equ	0xFE1
 16417                           indf2	equ	0xFDF
 16418                           postinc2	equ	0xFDE
 16419                           plusw2	equ	0xFDB
 16420                           fsr2h	equ	0xFDA
 16421                           fsr2l	equ	0xFD9
 16422                           status	equ	0xFD8
 16423                           
 16424 ;; *************** function _Joystick_Polling *****************
 16425 ;; Defined at:
 16426 ;;		line 604 in file "RemoteCan.c"
 16427 ;; Parameters:    Size  Location     Type
 16428 ;;		None
 16429 ;; Auto vars:     Size  Location     Type
 16430 ;;  i               1   16[BANK0 ] unsigned char 
 16431 ;; Return value:  Size  Location     Type
 16432 ;;		None               void
 16433 ;; Registers used:
 16434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16435 ;; Tracked objects:
 16436 ;;		On entry : 0/0
 16437 ;;		On exit  : 0/0
 16438 ;;		Unchanged: 0/0
 16439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16441 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16443 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16444 ;;Total ram usage:        1 bytes
 16445 ;; Hardware stack levels used:    1
 16446 ;; Hardware stack levels required when called:    3
 16447 ;; This function calls:
 16448 ;;		Nothing
 16449 ;; This function is called by:
 16450 ;;		_main
 16451 ;; This function uses a non-reentrant model
 16452 ;;
 16453                           
 16454                           	psect	text54
 16455  015BAE                     __ptext54:
 16456                           	opt stack 0
 16457  015BAE                     _Joystick_Polling:
 16458                           	opt stack 27
 16459                           
 16460                           ;RemoteCan.c: 605: for (unsigned char i = 0; i < 2; i++) {
 16461                           
 16462                           ; BSR set to: 0
 16463                           ;incstack = 0
 16464  015BAE  0E00               	movlw	0
 16465  015BB0  0100               	movlb	0	; () banked
 16466  015BB2  6F70               	movwf	Joystick_Polling@i& (0+255),b
 16467                           
 16468                           ; BSR set to: 0
 16469  015BB4  0E01               	movlw	1
 16470  015BB6  0100               	movlb	0	; () banked
 16471  015BB8  6570               	cpfsgt	Joystick_Polling@i& (0+255),b
 16472  015BBA  D002               	goto	l947
 16473  015BBC  0012               	return	
 16474                           
 16475                           ; BSR set to: 0
 16476  015BBE  0012               	return	
 16477  015BC0                     l947:
 16478                           
 16479                           ; BSR set to: 0
 16480                           ;RemoteCan.c: 606: ADCON0bits.GO = 1;
 16481  015BC0  82C2               	bsf	4034,1,c	;volatile
 16482                           
 16483                           ;RemoteCan.c: 607: while (ADCON0bits.GO);
 16484  015BC2  D000               	goto	l949
 16485  015BC4                     l949:
 16486  015BC4  B2C2               	btfsc	4034,1,c	;volatile
 16487  015BC6  D7FE               	goto	l949
 16488                           
 16489                           ;RemoteCan.c: 608: JoystickValues[i] = ADRESH;
 16490  015BC8  0100               	movlb	0	; () banked
 16491  015BCA  5170               	movf	Joystick_Polling@i& (0+255),w,b
 16492  015BCC  0D01               	mullw	1
 16493  015BCE  0EDF               	movlw	low _JoystickValues
 16494  015BD0  24F3               	addwf	prodl,w,c
 16495  015BD2  6ED9               	movwf	fsr2l,c
 16496  015BD4  0E00               	movlw	high _JoystickValues
 16497  015BD6  20F4               	addwfc	prodh,w,c
 16498  015BD8  6EDA               	movwf	fsr2h,c
 16499  015BDA  CFC4 FFDF          	movff	4036,indf2	;volatile
 16500                           
 16501                           ; BSR set to: 0
 16502                           ;RemoteCan.c: 609: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 16503  015BDE  74C2               	btg	4034,2,c	;volatile
 16504                           
 16505                           ; BSR set to: 0
 16506  015BE0  0100               	movlb	0	; () banked
 16507  015BE2  2B70               	incf	Joystick_Polling@i& (0+255),f,b
 16508                           
 16509                           ; BSR set to: 0
 16510  015BE4  0E01               	movlw	1
 16511  015BE6  0100               	movlb	0	; () banked
 16512  015BE8  6570               	cpfsgt	Joystick_Polling@i& (0+255),b
 16513  015BEA  D7EA               	goto	l947
 16514  015BEC  0012               	return	
 16515                           
 16516                           ; BSR set to: 0
 16517                           
 16518                           ; BSR set to: 0
 16519  015BEE  0012               	return		;funcret
 16520  015BF0                     __end_of_Joystick_Polling:
 16521                           	opt stack 0
 16522                           tblptru	equ	0xFF8
 16523                           tblptrh	equ	0xFF7
 16524                           tblptrl	equ	0xFF6
 16525                           tablat	equ	0xFF5
 16526                           prodh	equ	0xFF4
 16527                           prodl	equ	0xFF3
 16528                           intcon	equ	0xFF2
 16529                           postinc0	equ	0xFEE
 16530                           wreg	equ	0xFE8
 16531                           indf1	equ	0xFE7
 16532                           plusw1	equ	0xFE3
 16533                           fsr1h	equ	0xFE2
 16534                           fsr1l	equ	0xFE1
 16535                           indf2	equ	0xFDF
 16536                           postinc2	equ	0xFDE
 16537                           plusw2	equ	0xFDB
 16538                           fsr2h	equ	0xFDA
 16539                           fsr2l	equ	0xFD9
 16540                           status	equ	0xFD8
 16541                           
 16542 ;; *************** function _F2_Button_Polling *****************
 16543 ;; Defined at:
 16544 ;;		line 594 in file "RemoteCan.c"
 16545 ;; Parameters:    Size  Location     Type
 16546 ;;		None
 16547 ;; Auto vars:     Size  Location     Type
 16548 ;;		None
 16549 ;; Return value:  Size  Location     Type
 16550 ;;		None               void
 16551 ;; Registers used:
 16552 ;;		None
 16553 ;; Tracked objects:
 16554 ;;		On entry : 0/0
 16555 ;;		On exit  : 0/0
 16556 ;;		Unchanged: 0/0
 16557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16562 ;;Total ram usage:        0 bytes
 16563 ;; Hardware stack levels used:    1
 16564 ;; Hardware stack levels required when called:    3
 16565 ;; This function calls:
 16566 ;;		Nothing
 16567 ;; This function is called by:
 16568 ;;		_main
 16569 ;; This function uses a non-reentrant model
 16570 ;;
 16571                           
 16572                           	psect	text55
 16573  015F2E                     __ptext55:
 16574                           	opt stack 0
 16575  015F2E                     _F2_Button_Polling:
 16576                           	opt stack 27
 16577                           
 16578                           ;RemoteCan.c: 595: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 16579                           
 16580                           ; BSR set to: 0
 16581                           ;incstack = 0
 16582  015F2E  A281               	btfss	3969,1,c	;volatile
 16583  015F30  D002               	goto	l942
 16584  015F32  B84C               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16585  015F34  0012               	return	
 16586  015F36                     l942:
 16587                           
 16588                           ;RemoteCan.c: 596: wait_low_3 = 0;
 16589  015F36  984C               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16590                           
 16591                           ;RemoteCan.c: 597: if (PORTBbits.RB1 == 1) {
 16592  015F38  A281               	btfss	3969,1,c	;volatile
 16593  015F3A  0012               	return	
 16594                           
 16595                           ;RemoteCan.c: 598: F2_switch = ~F2_switch;
 16596  015F3C  784A               	btg	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16597                           
 16598                           ;RemoteCan.c: 599: wait_low_3 = 1;
 16599  015F3E  884C               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16600  015F40  0012               	return	
 16601  015F42  0012               	return		;funcret
 16602  015F44                     __end_of_F2_Button_Polling:
 16603                           	opt stack 0
 16604                           tblptru	equ	0xFF8
 16605                           tblptrh	equ	0xFF7
 16606                           tblptrl	equ	0xFF6
 16607                           tablat	equ	0xFF5
 16608                           prodh	equ	0xFF4
 16609                           prodl	equ	0xFF3
 16610                           intcon	equ	0xFF2
 16611                           postinc0	equ	0xFEE
 16612                           wreg	equ	0xFE8
 16613                           indf1	equ	0xFE7
 16614                           plusw1	equ	0xFE3
 16615                           fsr1h	equ	0xFE2
 16616                           fsr1l	equ	0xFE1
 16617                           indf2	equ	0xFDF
 16618                           postinc2	equ	0xFDE
 16619                           plusw2	equ	0xFDB
 16620                           fsr2h	equ	0xFDA
 16621                           fsr2l	equ	0xFD9
 16622                           status	equ	0xFD8
 16623                           
 16624 ;; *************** function _F1_Button_Polling *****************
 16625 ;; Defined at:
 16626 ;;		line 584 in file "RemoteCan.c"
 16627 ;; Parameters:    Size  Location     Type
 16628 ;;		None
 16629 ;; Auto vars:     Size  Location     Type
 16630 ;;		None
 16631 ;; Return value:  Size  Location     Type
 16632 ;;		None               void
 16633 ;; Registers used:
 16634 ;;		None
 16635 ;; Tracked objects:
 16636 ;;		On entry : 0/0
 16637 ;;		On exit  : 0/0
 16638 ;;		Unchanged: 0/0
 16639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16644 ;;Total ram usage:        0 bytes
 16645 ;; Hardware stack levels used:    1
 16646 ;; Hardware stack levels required when called:    3
 16647 ;; This function calls:
 16648 ;;		Nothing
 16649 ;; This function is called by:
 16650 ;;		_main
 16651 ;; This function uses a non-reentrant model
 16652 ;;
 16653                           
 16654                           	psect	text56
 16655  015F44                     __ptext56:
 16656                           	opt stack 0
 16657  015F44                     _F1_Button_Polling:
 16658                           	opt stack 27
 16659                           
 16660                           ;RemoteCan.c: 585: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 16661                           
 16662                           ;incstack = 0
 16663  015F44  A881               	btfss	3969,4,c	;volatile
 16664  015F46  D002               	goto	l935
 16665  015F48  B64C               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16666  015F4A  0012               	return	
 16667  015F4C                     l935:
 16668                           
 16669                           ;RemoteCan.c: 586: wait_low_2 = 0;
 16670  015F4C  964C               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16671                           
 16672                           ;RemoteCan.c: 587: if (PORTBbits.RB4 == 1) {
 16673  015F4E  A881               	btfss	3969,4,c	;volatile
 16674  015F50  0012               	return	
 16675                           
 16676                           ;RemoteCan.c: 588: F1_switch = ~F1_switch;
 16677  015F52  764A               	btg	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16678                           
 16679                           ;RemoteCan.c: 589: wait_low_2 = 1;
 16680  015F54  864C               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16681  015F56  0012               	return	
 16682  015F58  0012               	return		;funcret
 16683  015F5A                     __end_of_F1_Button_Polling:
 16684                           	opt stack 0
 16685                           tblptru	equ	0xFF8
 16686                           tblptrh	equ	0xFF7
 16687                           tblptrl	equ	0xFF6
 16688                           tablat	equ	0xFF5
 16689                           prodh	equ	0xFF4
 16690                           prodl	equ	0xFF3
 16691                           intcon	equ	0xFF2
 16692                           postinc0	equ	0xFEE
 16693                           wreg	equ	0xFE8
 16694                           indf1	equ	0xFE7
 16695                           plusw1	equ	0xFE3
 16696                           fsr1h	equ	0xFE2
 16697                           fsr1l	equ	0xFE1
 16698                           indf2	equ	0xFDF
 16699                           postinc2	equ	0xFDE
 16700                           plusw2	equ	0xFDB
 16701                           fsr2h	equ	0xFDA
 16702                           fsr2l	equ	0xFD9
 16703                           status	equ	0xFD8
 16704                           
 16705 ;; *************** function _CAN_Tx *****************
 16706 ;; Defined at:
 16707 ;;		line 613 in file "RemoteCan.c"
 16708 ;; Parameters:    Size  Location     Type
 16709 ;;		None
 16710 ;; Auto vars:     Size  Location     Type
 16711 ;;		None
 16712 ;; Return value:  Size  Location     Type
 16713 ;;		None               void
 16714 ;; Registers used:
 16715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16716 ;; Tracked objects:
 16717 ;;		On entry : 0/0
 16718 ;;		On exit  : 0/0
 16719 ;;		Unchanged: 0/0
 16720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16725 ;;Total ram usage:        0 bytes
 16726 ;; Hardware stack levels used:    1
 16727 ;; Hardware stack levels required when called:    4
 16728 ;; This function calls:
 16729 ;;		_CANisTxReady
 16730 ;;		_CANsendMessage
 16731 ;; This function is called by:
 16732 ;;		_main
 16733 ;; This function uses a non-reentrant model
 16734 ;;
 16735                           
 16736                           	psect	text57
 16737  015378                     __ptext57:
 16738                           	opt stack 0
 16739  015378                     _CAN_Tx:
 16740                           	opt stack 26
 16741                           
 16742                           ;RemoteCan.c: 615: while (CANisTxReady() != 1);
 16743                           
 16744                           ;incstack = 0
 16745  015378  D000               	goto	l6504
 16746  01537A                     l6504:
 16747  01537A  EC32  F0AF         	call	_CANisTxReady	;wreg free
 16748  01537E  06E8               	decf	wreg,f,c
 16749  015380  A4D8               	btfss	status,2,c
 16750  015382  D7FB               	goto	l6504
 16751                           
 16752                           ;RemoteCan.c: 616: CANsendMessage(0b00000000111, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 16753  015384  0E07               	movlw	7
 16754  015386  0100               	movlb	0	; () banked
 16755  015388  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 16756  01538A  0E00               	movlw	0
 16757  01538C  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16758  01538E  0E00               	movlw	0
 16759  015390  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16760  015392  0E00               	movlw	0
 16761  015394  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16762  015396  0E2D               	movlw	low _data_steering
 16763  015398  0100               	movlb	0	; () banked
 16764  01539A  6F74               	movwf	CANsendMessage@data& (0+255),b
 16765  01539C  0E01               	movlw	high _data_steering
 16766  01539E  0100               	movlb	0	; () banked
 16767  0153A0  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 16768  0153A2  0E08               	movlw	8
 16769  0153A4  0100               	movlb	0	; () banked
 16770  0153A6  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 16771  0153A8  0EBC               	movlw	188
 16772  0153AA  0100               	movlb	0	; () banked
 16773  0153AC  6F77               	movwf	CANsendMessage@flags& (0+255),b
 16774  0153AE  EC1B  F08A         	call	_CANsendMessage	;wreg free
 16775                           
 16776                           ;RemoteCan.c: 619: data_speed[0] = set_speed;
 16777  0153B2  C0E5  F125         	movff	_set_speed,_data_speed	;volatile
 16778                           
 16779                           ;RemoteCan.c: 620: data_speed[1] = (set_speed >> 8);
 16780  0153B6  0100               	movlb	0	; () banked
 16781  0153B8  51E6               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 16782  0153BA  0101               	movlb	1	; () banked
 16783  0153BC  6F26               	movwf	(_data_speed+1)& (0+255),b
 16784                           
 16785                           ; BSR set to: 1
 16786                           ;RemoteCan.c: 621: data_speed[2] = dir;
 16787  0153BE  C0E7  F127         	movff	_dir,_data_speed+2	;volatile
 16788                           
 16789                           ; BSR set to: 1
 16790                           
 16791                           ;RemoteCan.c: 622: while (CANisTxReady() != 1);
 16792  0153C2  D000               	goto	l6514
 16793  0153C4                     l6514:
 16794  0153C4  EC32  F0AF         	call	_CANisTxReady	;wreg free
 16795  0153C8  06E8               	decf	wreg,f,c
 16796  0153CA  A4D8               	btfss	status,2,c
 16797  0153CC  D7FB               	goto	l6514
 16798                           
 16799                           ;RemoteCan.c: 623: CANsendMessage(0b00000000101, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 16800  0153CE  0E05               	movlw	5
 16801  0153D0  0100               	movlb	0	; () banked
 16802  0153D2  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 16803  0153D4  0E00               	movlw	0
 16804  0153D6  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16805  0153D8  0E00               	movlw	0
 16806  0153DA  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16807  0153DC  0E00               	movlw	0
 16808  0153DE  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16809  0153E0  0E25               	movlw	low _data_speed
 16810  0153E2  0100               	movlb	0	; () banked
 16811  0153E4  6F74               	movwf	CANsendMessage@data& (0+255),b
 16812  0153E6  0E01               	movlw	high _data_speed
 16813  0153E8  0100               	movlb	0	; () banked
 16814  0153EA  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 16815  0153EC  0E08               	movlw	8
 16816  0153EE  0100               	movlb	0	; () banked
 16817  0153F0  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 16818  0153F2  0EBC               	movlw	188
 16819  0153F4  0100               	movlb	0	; () banked
 16820  0153F6  6F77               	movwf	CANsendMessage@flags& (0+255),b
 16821  0153F8  EC1B  F08A         	call	_CANsendMessage	;wreg free
 16822                           
 16823                           ;RemoteCan.c: 626: while (CANisTxReady() != 1);
 16824  0153FC  D000               	goto	l6518
 16825  0153FE                     l6518:
 16826  0153FE  EC32  F0AF         	call	_CANisTxReady	;wreg free
 16827  015402  06E8               	decf	wreg,f,c
 16828  015404  A4D8               	btfss	status,2,c
 16829  015406  D7FB               	goto	l6518
 16830                           
 16831                           ;RemoteCan.c: 627: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 16832  015408  0E06               	movlw	6
 16833  01540A  0100               	movlb	0	; () banked
 16834  01540C  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 16835  01540E  0E00               	movlw	0
 16836  015410  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16837  015412  0E00               	movlw	0
 16838  015414  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16839  015416  0E00               	movlw	0
 16840  015418  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16841  01541A  0E20               	movlw	low _data_brake
 16842  01541C  0100               	movlb	0	; () banked
 16843  01541E  6F74               	movwf	CANsendMessage@data& (0+255),b
 16844  015420  0E00               	movlw	high _data_brake
 16845  015422  0100               	movlb	0	; () banked
 16846  015424  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 16847  015426  0E08               	movlw	8
 16848  015428  0100               	movlb	0	; () banked
 16849  01542A  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 16850  01542C  0EBC               	movlw	188
 16851  01542E  0100               	movlb	0	; () banked
 16852  015430  6F77               	movwf	CANsendMessage@flags& (0+255),b
 16853  015432  EC1B  F08A         	call	_CANsendMessage	;wreg free
 16854  015436  0012               	return		;funcret
 16855  015438                     __end_of_CAN_Tx:
 16856                           	opt stack 0
 16857                           tblptru	equ	0xFF8
 16858                           tblptrh	equ	0xFF7
 16859                           tblptrl	equ	0xFF6
 16860                           tablat	equ	0xFF5
 16861                           prodh	equ	0xFF4
 16862                           prodl	equ	0xFF3
 16863                           intcon	equ	0xFF2
 16864                           postinc0	equ	0xFEE
 16865                           wreg	equ	0xFE8
 16866                           indf1	equ	0xFE7
 16867                           plusw1	equ	0xFE3
 16868                           fsr1h	equ	0xFE2
 16869                           fsr1l	equ	0xFE1
 16870                           indf2	equ	0xFDF
 16871                           postinc2	equ	0xFDE
 16872                           plusw2	equ	0xFDB
 16873                           fsr2h	equ	0xFDA
 16874                           fsr2l	equ	0xFD9
 16875                           status	equ	0xFD8
 16876                           
 16877 ;; *************** function _CANsendMessage *****************
 16878 ;; Defined at:
 16879 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 16880 ;; Parameters:    Size  Location     Type
 16881 ;;  identifier      4   16[BANK0 ] unsigned long 
 16882 ;;  data            2   20[BANK0 ] PTR unsigned char 
 16883 ;;		 -> data_speed(8), park_assist_state(8), data_steering(8), data_brake(8), 
 16884 ;;		 -> data(8), 
 16885 ;;  dataLength      1   22[BANK0 ] unsigned char 
 16886 ;;  flags           1   23[BANK0 ] enum E16950
 16887 ;; Auto vars:     Size  Location     Type
 16888 ;;  tamp            4   28[BANK0 ] unsigned long 
 16889 ;; Return value:  Size  Location     Type
 16890 ;;		None               void
 16891 ;; Registers used:
 16892 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16893 ;; Tracked objects:
 16894 ;;		On entry : 0/0
 16895 ;;		On exit  : 0/0
 16896 ;;		Unchanged: 0/0
 16897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16898 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16899 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16900 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16901 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16902 ;;Total ram usage:       16 bytes
 16903 ;; Hardware stack levels used:    1
 16904 ;; Hardware stack levels required when called:    3
 16905 ;; This function calls:
 16906 ;;		Nothing
 16907 ;; This function is called by:
 16908 ;;		_main
 16909 ;;		_LCD_Handler
 16910 ;;		_CAN_Tx
 16911 ;; This function uses a non-reentrant model
 16912 ;;
 16913                           
 16914                           	psect	text58
 16915  011436                     __ptext58:
 16916                           	opt stack 0
 16917  011436                     _CANsendMessage:
 16918                           	opt stack 26
 16919                           
 16920                           ;inc\CANlib.h: 296: unsigned long tamp;
 16921                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 16922                           
 16923                           ;incstack = 0
 16924  011436  010F               	movlb	15	; () banked
 16925  011438  B740               	btfsc	64,3,b	;volatile
 16926  01143A  D142               	goto	l385
 16927                           
 16928                           ; BSR set to: 15
 16929                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 16930  01143C  C076  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 16931                           
 16932                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 16933  011440  0100               	movlb	0	; () banked
 16934  011442  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 16935  011444  D003               	goto	l386
 16936                           
 16937                           ; BSR set to: 0
 16938                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 16939  011446  010F               	movlb	15	; () banked
 16940  011448  8D45               	bsf	69,6,b	;volatile
 16941  01144A  D002               	goto	l387
 16942  01144C                     l386:
 16943                           
 16944                           ; BSR set to: 0
 16945                           ;inc\CANlib.h: 302: else
 16946                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 16947  01144C  010F               	movlb	15	; () banked
 16948  01144E  9D45               	bcf	69,6,b	;volatile
 16949  011450                     l387:
 16950                           
 16951                           ; BSR set to: 15
 16952                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 16953  011450  0100               	movlb	0	; () banked
 16954  011452  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 16955  011454  D07A               	goto	l388
 16956                           
 16957                           ; BSR set to: 0
 16958                           ;inc\CANlib.h: 306: {
 16959                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 16960  011456  0100               	movlb	0	; () banked
 16961  011458  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 16962  01145A  0100               	movlb	0	; () banked
 16963  01145C  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 16964  01145E  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16965  011460  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16966  011462  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16967                           
 16968                           ; BSR set to: 0
 16969                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 16970  011464  C07C  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 16971                           
 16972                           ; BSR set to: 0
 16973                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 16974  011468  0E00               	movlw	0
 16975  01146A  0100               	movlb	0	; () banked
 16976  01146C  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 16977  01146E  0100               	movlb	0	; () banked
 16978  011470  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 16979  011472  0EFF               	movlw	255
 16980  011474  0100               	movlb	0	; () banked
 16981  011476  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16982  011478  0100               	movlb	0	; () banked
 16983  01147A  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16984  01147C  0E00               	movlw	0
 16985  01147E  0100               	movlb	0	; () banked
 16986  011480  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16987  011482  0100               	movlb	0	; () banked
 16988  011484  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16989  011486  0E00               	movlw	0
 16990  011488  0100               	movlb	0	; () banked
 16991  01148A  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16992  01148C  0100               	movlb	0	; () banked
 16993  01148E  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16994                           
 16995                           ; BSR set to: 0
 16996                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 16997  011490  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 16998  011494  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16999  011498  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17000  01149C  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17001  0114A0  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 17002  0114A4  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17003  0114A8  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17004  0114AC  0100               	movlb	0	; () banked
 17005  0114AE  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 17006  0114B0  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17007  0114B4  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17008  0114B8  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17009  0114BC  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17010                           
 17011                           ; BSR set to: 0
 17012                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 17013  0114C0  C07C  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 17014                           
 17015                           ; BSR set to: 0
 17016                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 17017  0114C4  0E00               	movlw	0
 17018  0114C6  010F               	movlb	15	; () banked
 17019  0114C8  6F42               	movwf	66,b	;volatile
 17020                           
 17021                           ; BSR set to: 15
 17022                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 17023  0114CA  010F               	movlb	15	; () banked
 17024  0114CC  8742               	bsf	66,3,b	;volatile
 17025                           
 17026                           ; BSR set to: 15
 17027                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 17028  0114CE  0100               	movlb	0	; () banked
 17029  0114D0  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17030  0114D2  D002               	goto	l389
 17031                           
 17032                           ; BSR set to: 0
 17033                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 17034  0114D4  010F               	movlb	15	; () banked
 17035  0114D6  8142               	bsf	66,0,b	;volatile
 17036  0114D8                     l389:
 17037                           
 17038                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 17039  0114D8  0100               	movlb	0	; () banked
 17040  0114DA  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17041  0114DC  D002               	goto	l390
 17042                           
 17043                           ; BSR set to: 0
 17044                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 17045  0114DE  010F               	movlb	15	; () banked
 17046  0114E0  8342               	bsf	66,1,b	;volatile
 17047  0114E2                     l390:
 17048                           
 17049                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 17050  0114E2  0100               	movlb	0	; () banked
 17051  0114E4  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17052  0114E6  D002               	goto	l391
 17053                           
 17054                           ; BSR set to: 0
 17055                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 17056  0114E8  010F               	movlb	15	; () banked
 17057  0114EA  8B42               	bsf	66,5,b	;volatile
 17058  0114EC                     l391:
 17059                           
 17060                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 17061  0114EC  0100               	movlb	0	; () banked
 17062  0114EE  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17063  0114F0  D002               	goto	l392
 17064                           
 17065                           ; BSR set to: 0
 17066                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 17067  0114F2  010F               	movlb	15	; () banked
 17068  0114F4  8D42               	bsf	66,6,b	;volatile
 17069  0114F6                     l392:
 17070                           
 17071                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 17072  0114F6  0100               	movlb	0	; () banked
 17073  0114F8  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17074  0114FA  D003               	goto	l5724
 17075                           
 17076                           ; BSR set to: 0
 17077                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 17078  0114FC  010F               	movlb	15	; () banked
 17079  0114FE  8F42               	bsf	66,7,b	;volatile
 17080  011500  D000               	goto	l5724
 17081  011502                     l5724:
 17082                           
 17083                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 17084  011502  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17085  011506  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17086  01150A  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17087  01150E  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17088  011512  0E16               	movlw	22
 17089  011514  D006               	goto	u6670
 17090  011516                     u6675:
 17091  011516  0100               	movlb	0	; () banked
 17092  011518  90D8               	bcf	status,0,c
 17093  01151A  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17094  01151C  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17095  01151E  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17096  011520  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17097  011522                     u6670:
 17098  011522  2EE8               	decfsz	wreg,f,c
 17099  011524  D7F8               	goto	u6675
 17100  011526  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17101  01152A  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17102  01152E  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17103  011532  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17104                           
 17105                           ; BSR set to: 0
 17106                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17107  011536  0100               	movlb	0	; () banked
 17108  011538  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17109  01153A  0100               	movlb	0	; () banked
 17110  01153C  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17111  01153E  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17112  011540  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17113  011542  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17114                           
 17115                           ; BSR set to: 0
 17116                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17117  011544  C07C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17118                           
 17119                           ;inc\CANlib.h: 332: }
 17120  011548  D05A               	goto	l5744
 17121  01154A                     l388:
 17122                           
 17123                           ; BSR set to: 0
 17124                           ;inc\CANlib.h: 334: else
 17125                           ;inc\CANlib.h: 336: {
 17126                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17127  01154A  010F               	movlb	15	; () banked
 17128  01154C  9742               	bcf	66,3,b	;volatile
 17129                           
 17130                           ; BSR set to: 15
 17131                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17132  01154E  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17133  011552  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17134  011556  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17135  01155A  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17136  01155E  0E04               	movlw	4
 17137  011560  D006               	goto	u6680
 17138  011562                     u6685:
 17139  011562  0100               	movlb	0	; () banked
 17140  011564  90D8               	bcf	status,0,c
 17141  011566  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17142  011568  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17143  01156A  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17144  01156C  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17145  01156E                     u6680:
 17146  01156E  2EE8               	decfsz	wreg,f,c
 17147  011570  D7F8               	goto	u6685
 17148  011572  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17149  011576  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17150  01157A  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17151  01157E  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17152                           
 17153                           ; BSR set to: 0
 17154                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17155  011582  0100               	movlb	0	; () banked
 17156  011584  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17157  011586  0100               	movlb	0	; () banked
 17158  011588  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17159  01158A  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17160  01158C  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17161  01158E  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17162                           
 17163                           ; BSR set to: 0
 17164                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17165  011590  C07C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17166                           
 17167                           ; BSR set to: 0
 17168                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17169  011594  0E07               	movlw	7
 17170  011596  0100               	movlb	0	; () banked
 17171  011598  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17172  01159A  0100               	movlb	0	; () banked
 17173  01159C  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17174  01159E  0E00               	movlw	0
 17175  0115A0  0100               	movlb	0	; () banked
 17176  0115A2  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17177  0115A4  0100               	movlb	0	; () banked
 17178  0115A6  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17179  0115A8  0E00               	movlw	0
 17180  0115AA  0100               	movlb	0	; () banked
 17181  0115AC  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17182  0115AE  0100               	movlb	0	; () banked
 17183  0115B0  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17184  0115B2  0E00               	movlw	0
 17185  0115B4  0100               	movlb	0	; () banked
 17186  0115B6  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17187  0115B8  0100               	movlb	0	; () banked
 17188  0115BA  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17189                           
 17190                           ; BSR set to: 0
 17191                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17192  0115BC  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17193  0115C0  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17194  0115C4  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17195  0115C8  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17196  0115CC  0E05               	movlw	5
 17197  0115CE                     u6695:
 17198  0115CE  90D8               	bcf	status,0,c
 17199  0115D0  0100               	movlb	0	; () banked
 17200  0115D2  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 17201  0115D4  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17202  0115D6  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17203  0115D8  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17204  0115DA  2EE8               	decfsz	wreg,f,c
 17205  0115DC  D7F8               	goto	u6695
 17206  0115DE  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17207  0115E2  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17208  0115E6  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17209  0115EA  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17210                           
 17211                           ; BSR set to: 0
 17212                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17213  0115EE  010F               	movlb	15	; () banked
 17214  0115F0  5142               	movf	66,w,b	;volatile
 17215  0115F2  0B1F               	andlw	31
 17216  0115F4  010F               	movlb	15	; () banked
 17217  0115F6  6F42               	movwf	66,b	;volatile
 17218                           
 17219                           ; BSR set to: 15
 17220                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17221  0115F8  C07C  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 17222  0115FC  D000               	goto	l5744
 17223  0115FE                     l5744:
 17224                           
 17225                           ;inc\CANlib.h: 347: }
 17226                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17227  0115FE  0100               	movlb	0	; () banked
 17228  011600  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 17229  011602  D003               	goto	l395
 17230                           
 17231                           ; BSR set to: 0
 17232                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17233  011604  010F               	movlb	15	; () banked
 17234  011606  8140               	bsf	64,0,b	;volatile
 17235  011608  D002               	goto	l396
 17236  01160A                     l395:
 17237                           
 17238                           ; BSR set to: 0
 17239                           ;inc\CANlib.h: 351: else
 17240                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17241  01160A  010F               	movlb	15	; () banked
 17242  01160C  9140               	bcf	64,0,b	;volatile
 17243  01160E                     l396:
 17244                           
 17245                           ; BSR set to: 15
 17246                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17247  01160E  0100               	movlb	0	; () banked
 17248  011610  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 17249  011612  D003               	goto	l397
 17250                           
 17251                           ; BSR set to: 0
 17252                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 17253  011614  010F               	movlb	15	; () banked
 17254  011616  8340               	bsf	64,1,b	;volatile
 17255  011618  D003               	goto	l5750
 17256  01161A                     l397:
 17257                           
 17258                           ; BSR set to: 0
 17259                           ;inc\CANlib.h: 355: else
 17260                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 17261  01161A  010F               	movlb	15	; () banked
 17262  01161C  9340               	bcf	64,1,b	;volatile
 17263  01161E  D000               	goto	l5750
 17264  011620                     l5750:
 17265                           
 17266                           ; BSR set to: 15
 17267                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 17268  011620  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 17269  011624  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17270  011628  50DF               	movf	indf2,w,c
 17271  01162A  010F               	movlb	15	; () banked
 17272  01162C  6F46               	movwf	70,b	;volatile
 17273                           
 17274                           ; BSR set to: 15
 17275                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 17276  01162E  0100               	movlb	0	; () banked
 17277  011630  EE20 F001          	lfsr	2,1
 17278  011634  5174               	movf	CANsendMessage@data& (0+255),w,b
 17279  011636  26D9               	addwf	fsr2l,f,c
 17280  011638  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17281  01163A  22DA               	addwfc	fsr2h,f,c
 17282  01163C  50DF               	movf	indf2,w,c
 17283  01163E  010F               	movlb	15	; () banked
 17284  011640  6F47               	movwf	71,b	;volatile
 17285                           
 17286                           ; BSR set to: 15
 17287                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 17288  011642  0100               	movlb	0	; () banked
 17289  011644  EE20 F002          	lfsr	2,2
 17290  011648  5174               	movf	CANsendMessage@data& (0+255),w,b
 17291  01164A  26D9               	addwf	fsr2l,f,c
 17292  01164C  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17293  01164E  22DA               	addwfc	fsr2h,f,c
 17294  011650  50DF               	movf	indf2,w,c
 17295  011652  010F               	movlb	15	; () banked
 17296  011654  6F48               	movwf	72,b	;volatile
 17297                           
 17298                           ; BSR set to: 15
 17299                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 17300  011656  0100               	movlb	0	; () banked
 17301  011658  EE20 F003          	lfsr	2,3
 17302  01165C  5174               	movf	CANsendMessage@data& (0+255),w,b
 17303  01165E  26D9               	addwf	fsr2l,f,c
 17304  011660  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17305  011662  22DA               	addwfc	fsr2h,f,c
 17306  011664  50DF               	movf	indf2,w,c
 17307  011666  010F               	movlb	15	; () banked
 17308  011668  6F49               	movwf	73,b	;volatile
 17309                           
 17310                           ; BSR set to: 15
 17311                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 17312  01166A  0100               	movlb	0	; () banked
 17313  01166C  EE20 F004          	lfsr	2,4
 17314  011670  5174               	movf	CANsendMessage@data& (0+255),w,b
 17315  011672  26D9               	addwf	fsr2l,f,c
 17316  011674  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17317  011676  22DA               	addwfc	fsr2h,f,c
 17318  011678  50DF               	movf	indf2,w,c
 17319  01167A  010F               	movlb	15	; () banked
 17320  01167C  6F4A               	movwf	74,b	;volatile
 17321                           
 17322                           ; BSR set to: 15
 17323                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17324  01167E  0100               	movlb	0	; () banked
 17325  011680  EE20 F005          	lfsr	2,5
 17326  011684  5174               	movf	CANsendMessage@data& (0+255),w,b
 17327  011686  26D9               	addwf	fsr2l,f,c
 17328  011688  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17329  01168A  22DA               	addwfc	fsr2h,f,c
 17330  01168C  50DF               	movf	indf2,w,c
 17331  01168E  010F               	movlb	15	; () banked
 17332  011690  6F4B               	movwf	75,b	;volatile
 17333                           
 17334                           ; BSR set to: 15
 17335                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17336  011692  0100               	movlb	0	; () banked
 17337  011694  EE20 F006          	lfsr	2,6
 17338  011698  5174               	movf	CANsendMessage@data& (0+255),w,b
 17339  01169A  26D9               	addwf	fsr2l,f,c
 17340  01169C  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17341  01169E  22DA               	addwfc	fsr2h,f,c
 17342  0116A0  50DF               	movf	indf2,w,c
 17343  0116A2  010F               	movlb	15	; () banked
 17344  0116A4  6F4C               	movwf	76,b	;volatile
 17345                           
 17346                           ; BSR set to: 15
 17347                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17348  0116A6  0100               	movlb	0	; () banked
 17349  0116A8  EE20 F007          	lfsr	2,7
 17350  0116AC  5174               	movf	CANsendMessage@data& (0+255),w,b
 17351  0116AE  26D9               	addwf	fsr2l,f,c
 17352  0116B0  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17353  0116B2  22DA               	addwfc	fsr2h,f,c
 17354  0116B4  50DF               	movf	indf2,w,c
 17355  0116B6  010F               	movlb	15	; () banked
 17356  0116B8  6F4D               	movwf	77,b	;volatile
 17357                           
 17358                           ; BSR set to: 15
 17359                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17360  0116BA  010F               	movlb	15	; () banked
 17361  0116BC  8740               	bsf	64,3,b	;volatile
 17362                           
 17363                           ; BSR set to: 15
 17364                           ;inc\CANlib.h: 368: return;
 17365  0116BE  0012               	return	
 17366  0116C0                     l385:
 17367                           
 17368                           ; BSR set to: 15
 17369                           ;inc\CANlib.h: 369: }
 17370                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17371  0116C0  010F               	movlb	15	; () banked
 17372  0116C2  B730               	btfsc	48,3,b	;volatile
 17373  0116C4  D142               	goto	l400
 17374                           
 17375                           ; BSR set to: 15
 17376                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17377  0116C6  C076  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 17378                           
 17379                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17380  0116CA  0100               	movlb	0	; () banked
 17381  0116CC  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 17382  0116CE  D003               	goto	l401
 17383                           
 17384                           ; BSR set to: 0
 17385                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17386  0116D0  010F               	movlb	15	; () banked
 17387  0116D2  8D35               	bsf	53,6,b	;volatile
 17388  0116D4  D002               	goto	l402
 17389  0116D6                     l401:
 17390                           
 17391                           ; BSR set to: 0
 17392                           ;inc\CANlib.h: 378: else
 17393                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17394  0116D6  010F               	movlb	15	; () banked
 17395  0116D8  9D35               	bcf	53,6,b	;volatile
 17396  0116DA                     l402:
 17397                           
 17398                           ; BSR set to: 15
 17399                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 17400  0116DA  0100               	movlb	0	; () banked
 17401  0116DC  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 17402  0116DE  D07A               	goto	l403
 17403                           
 17404                           ; BSR set to: 0
 17405                           ;inc\CANlib.h: 382: {
 17406                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 17407  0116E0  0100               	movlb	0	; () banked
 17408  0116E2  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 17409  0116E4  0100               	movlb	0	; () banked
 17410  0116E6  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17411  0116E8  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17412  0116EA  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17413  0116EC  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17414                           
 17415                           ; BSR set to: 0
 17416                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 17417  0116EE  C07C  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 17418                           
 17419                           ; BSR set to: 0
 17420                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 17421  0116F2  0E00               	movlw	0
 17422  0116F4  0100               	movlb	0	; () banked
 17423  0116F6  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17424  0116F8  0100               	movlb	0	; () banked
 17425  0116FA  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17426  0116FC  0EFF               	movlw	255
 17427  0116FE  0100               	movlb	0	; () banked
 17428  011700  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17429  011702  0100               	movlb	0	; () banked
 17430  011704  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17431  011706  0E00               	movlw	0
 17432  011708  0100               	movlb	0	; () banked
 17433  01170A  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17434  01170C  0100               	movlb	0	; () banked
 17435  01170E  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17436  011710  0E00               	movlw	0
 17437  011712  0100               	movlb	0	; () banked
 17438  011714  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17439  011716  0100               	movlb	0	; () banked
 17440  011718  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17441                           
 17442                           ; BSR set to: 0
 17443                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 17444  01171A  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17445  01171E  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17446  011722  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17447  011726  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17448  01172A  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 17449  01172E  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17450  011732  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17451  011736  0100               	movlb	0	; () banked
 17452  011738  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 17453  01173A  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17454  01173E  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17455  011742  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17456  011746  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17457                           
 17458                           ; BSR set to: 0
 17459                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 17460  01174A  C07C  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 17461                           
 17462                           ; BSR set to: 0
 17463                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 17464  01174E  0E00               	movlw	0
 17465  011750  010F               	movlb	15	; () banked
 17466  011752  6F32               	movwf	50,b	;volatile
 17467                           
 17468                           ; BSR set to: 15
 17469                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 17470  011754  010F               	movlb	15	; () banked
 17471  011756  8732               	bsf	50,3,b	;volatile
 17472                           
 17473                           ; BSR set to: 15
 17474                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 17475  011758  0100               	movlb	0	; () banked
 17476  01175A  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17477  01175C  D002               	goto	l404
 17478                           
 17479                           ; BSR set to: 0
 17480                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 17481  01175E  010F               	movlb	15	; () banked
 17482  011760  8132               	bsf	50,0,b	;volatile
 17483  011762                     l404:
 17484                           
 17485                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 17486  011762  0100               	movlb	0	; () banked
 17487  011764  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17488  011766  D002               	goto	l405
 17489                           
 17490                           ; BSR set to: 0
 17491                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 17492  011768  010F               	movlb	15	; () banked
 17493  01176A  8332               	bsf	50,1,b	;volatile
 17494  01176C                     l405:
 17495                           
 17496                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 17497  01176C  0100               	movlb	0	; () banked
 17498  01176E  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17499  011770  D002               	goto	l406
 17500                           
 17501                           ; BSR set to: 0
 17502                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 17503  011772  010F               	movlb	15	; () banked
 17504  011774  8B32               	bsf	50,5,b	;volatile
 17505  011776                     l406:
 17506                           
 17507                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 17508  011776  0100               	movlb	0	; () banked
 17509  011778  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17510  01177A  D002               	goto	l407
 17511                           
 17512                           ; BSR set to: 0
 17513                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 17514  01177C  010F               	movlb	15	; () banked
 17515  01177E  8D32               	bsf	50,6,b	;volatile
 17516  011780                     l407:
 17517                           
 17518                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 17519  011780  0100               	movlb	0	; () banked
 17520  011782  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17521  011784  D003               	goto	l5800
 17522                           
 17523                           ; BSR set to: 0
 17524                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 17525  011786  010F               	movlb	15	; () banked
 17526  011788  8F32               	bsf	50,7,b	;volatile
 17527  01178A  D000               	goto	l5800
 17528  01178C                     l5800:
 17529                           
 17530                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 17531  01178C  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17532  011790  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17533  011794  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17534  011798  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17535  01179C  0E16               	movlw	22
 17536  01179E  D006               	goto	u6800
 17537  0117A0                     u6805:
 17538  0117A0  0100               	movlb	0	; () banked
 17539  0117A2  90D8               	bcf	status,0,c
 17540  0117A4  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17541  0117A6  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17542  0117A8  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17543  0117AA  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17544  0117AC                     u6800:
 17545  0117AC  2EE8               	decfsz	wreg,f,c
 17546  0117AE  D7F8               	goto	u6805
 17547  0117B0  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17548  0117B4  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17549  0117B8  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17550  0117BC  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17551                           
 17552                           ; BSR set to: 0
 17553                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 17554  0117C0  0100               	movlb	0	; () banked
 17555  0117C2  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17556  0117C4  0100               	movlb	0	; () banked
 17557  0117C6  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17558  0117C8  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17559  0117CA  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17560  0117CC  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17561                           
 17562                           ; BSR set to: 0
 17563                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 17564  0117CE  C07C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 17565                           
 17566                           ;inc\CANlib.h: 407: }
 17567  0117D2  D05A               	goto	l5820
 17568  0117D4                     l403:
 17569                           
 17570                           ; BSR set to: 0
 17571                           ;inc\CANlib.h: 409: else
 17572                           ;inc\CANlib.h: 411: {
 17573                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 17574  0117D4  010F               	movlb	15	; () banked
 17575  0117D6  9732               	bcf	50,3,b	;volatile
 17576                           
 17577                           ; BSR set to: 15
 17578                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 17579  0117D8  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17580  0117DC  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17581  0117E0  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17582  0117E4  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17583  0117E8  0E04               	movlw	4
 17584  0117EA  D006               	goto	u6810
 17585  0117EC                     u6815:
 17586  0117EC  0100               	movlb	0	; () banked
 17587  0117EE  90D8               	bcf	status,0,c
 17588  0117F0  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17589  0117F2  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17590  0117F4  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17591  0117F6  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17592  0117F8                     u6810:
 17593  0117F8  2EE8               	decfsz	wreg,f,c
 17594  0117FA  D7F8               	goto	u6815
 17595  0117FC  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17596  011800  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17597  011804  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17598  011808  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17599                           
 17600                           ; BSR set to: 0
 17601                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 17602  01180C  0100               	movlb	0	; () banked
 17603  01180E  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17604  011810  0100               	movlb	0	; () banked
 17605  011812  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17606  011814  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17607  011816  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17608  011818  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17609                           
 17610                           ; BSR set to: 0
 17611                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 17612  01181A  C07C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 17613                           
 17614                           ; BSR set to: 0
 17615                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 17616  01181E  0E07               	movlw	7
 17617  011820  0100               	movlb	0	; () banked
 17618  011822  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17619  011824  0100               	movlb	0	; () banked
 17620  011826  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17621  011828  0E00               	movlw	0
 17622  01182A  0100               	movlb	0	; () banked
 17623  01182C  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17624  01182E  0100               	movlb	0	; () banked
 17625  011830  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17626  011832  0E00               	movlw	0
 17627  011834  0100               	movlb	0	; () banked
 17628  011836  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17629  011838  0100               	movlb	0	; () banked
 17630  01183A  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17631  01183C  0E00               	movlw	0
 17632  01183E  0100               	movlb	0	; () banked
 17633  011840  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17634  011842  0100               	movlb	0	; () banked
 17635  011844  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17636                           
 17637                           ; BSR set to: 0
 17638                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 17639  011846  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17640  01184A  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17641  01184E  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17642  011852  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17643  011856  0E05               	movlw	5
 17644  011858                     u6825:
 17645  011858  90D8               	bcf	status,0,c
 17646  01185A  0100               	movlb	0	; () banked
 17647  01185C  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 17648  01185E  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17649  011860  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17650  011862  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17651  011864  2EE8               	decfsz	wreg,f,c
 17652  011866  D7F8               	goto	u6825
 17653  011868  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17654  01186C  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17655  011870  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17656  011874  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17657                           
 17658                           ; BSR set to: 0
 17659                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 17660  011878  010F               	movlb	15	; () banked
 17661  01187A  5132               	movf	50,w,b	;volatile
 17662  01187C  0B1F               	andlw	31
 17663  01187E  010F               	movlb	15	; () banked
 17664  011880  6F32               	movwf	50,b	;volatile
 17665                           
 17666                           ; BSR set to: 15
 17667                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 17668  011882  C07C  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 17669  011886  D000               	goto	l5820
 17670  011888                     l5820:
 17671                           
 17672                           ;inc\CANlib.h: 422: }
 17673                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 17674  011888  0100               	movlb	0	; () banked
 17675  01188A  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 17676  01188C  D003               	goto	l410
 17677                           
 17678                           ; BSR set to: 0
 17679                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 17680  01188E  010F               	movlb	15	; () banked
 17681  011890  8130               	bsf	48,0,b	;volatile
 17682  011892  D002               	goto	l411
 17683  011894                     l410:
 17684                           
 17685                           ; BSR set to: 0
 17686                           ;inc\CANlib.h: 426: else
 17687                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 17688  011894  010F               	movlb	15	; () banked
 17689  011896  9130               	bcf	48,0,b	;volatile
 17690  011898                     l411:
 17691                           
 17692                           ; BSR set to: 15
 17693                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 17694  011898  0100               	movlb	0	; () banked
 17695  01189A  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 17696  01189C  D003               	goto	l412
 17697                           
 17698                           ; BSR set to: 0
 17699                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 17700  01189E  010F               	movlb	15	; () banked
 17701  0118A0  8330               	bsf	48,1,b	;volatile
 17702  0118A2  D003               	goto	l5826
 17703  0118A4                     l412:
 17704                           
 17705                           ; BSR set to: 0
 17706                           ;inc\CANlib.h: 430: else
 17707                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 17708  0118A4  010F               	movlb	15	; () banked
 17709  0118A6  9330               	bcf	48,1,b	;volatile
 17710  0118A8  D000               	goto	l5826
 17711  0118AA                     l5826:
 17712                           
 17713                           ; BSR set to: 15
 17714                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 17715  0118AA  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 17716  0118AE  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17717  0118B2  50DF               	movf	indf2,w,c
 17718  0118B4  010F               	movlb	15	; () banked
 17719  0118B6  6F36               	movwf	54,b	;volatile
 17720                           
 17721                           ; BSR set to: 15
 17722                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 17723  0118B8  0100               	movlb	0	; () banked
 17724  0118BA  EE20 F001          	lfsr	2,1
 17725  0118BE  5174               	movf	CANsendMessage@data& (0+255),w,b
 17726  0118C0  26D9               	addwf	fsr2l,f,c
 17727  0118C2  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17728  0118C4  22DA               	addwfc	fsr2h,f,c
 17729  0118C6  50DF               	movf	indf2,w,c
 17730  0118C8  010F               	movlb	15	; () banked
 17731  0118CA  6F37               	movwf	55,b	;volatile
 17732                           
 17733                           ; BSR set to: 15
 17734                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 17735  0118CC  0100               	movlb	0	; () banked
 17736  0118CE  EE20 F002          	lfsr	2,2
 17737  0118D2  5174               	movf	CANsendMessage@data& (0+255),w,b
 17738  0118D4  26D9               	addwf	fsr2l,f,c
 17739  0118D6  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17740  0118D8  22DA               	addwfc	fsr2h,f,c
 17741  0118DA  50DF               	movf	indf2,w,c
 17742  0118DC  010F               	movlb	15	; () banked
 17743  0118DE  6F38               	movwf	56,b	;volatile
 17744                           
 17745                           ; BSR set to: 15
 17746                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 17747  0118E0  0100               	movlb	0	; () banked
 17748  0118E2  EE20 F003          	lfsr	2,3
 17749  0118E6  5174               	movf	CANsendMessage@data& (0+255),w,b
 17750  0118E8  26D9               	addwf	fsr2l,f,c
 17751  0118EA  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17752  0118EC  22DA               	addwfc	fsr2h,f,c
 17753  0118EE  50DF               	movf	indf2,w,c
 17754  0118F0  010F               	movlb	15	; () banked
 17755  0118F2  6F39               	movwf	57,b	;volatile
 17756                           
 17757                           ; BSR set to: 15
 17758                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 17759  0118F4  0100               	movlb	0	; () banked
 17760  0118F6  EE20 F004          	lfsr	2,4
 17761  0118FA  5174               	movf	CANsendMessage@data& (0+255),w,b
 17762  0118FC  26D9               	addwf	fsr2l,f,c
 17763  0118FE  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17764  011900  22DA               	addwfc	fsr2h,f,c
 17765  011902  50DF               	movf	indf2,w,c
 17766  011904  010F               	movlb	15	; () banked
 17767  011906  6F3A               	movwf	58,b	;volatile
 17768                           
 17769                           ; BSR set to: 15
 17770                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 17771  011908  0100               	movlb	0	; () banked
 17772  01190A  EE20 F005          	lfsr	2,5
 17773  01190E  5174               	movf	CANsendMessage@data& (0+255),w,b
 17774  011910  26D9               	addwf	fsr2l,f,c
 17775  011912  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17776  011914  22DA               	addwfc	fsr2h,f,c
 17777  011916  50DF               	movf	indf2,w,c
 17778  011918  010F               	movlb	15	; () banked
 17779  01191A  6F3B               	movwf	59,b	;volatile
 17780                           
 17781                           ; BSR set to: 15
 17782                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 17783  01191C  0100               	movlb	0	; () banked
 17784  01191E  EE20 F006          	lfsr	2,6
 17785  011922  5174               	movf	CANsendMessage@data& (0+255),w,b
 17786  011924  26D9               	addwf	fsr2l,f,c
 17787  011926  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17788  011928  22DA               	addwfc	fsr2h,f,c
 17789  01192A  50DF               	movf	indf2,w,c
 17790  01192C  010F               	movlb	15	; () banked
 17791  01192E  6F3C               	movwf	60,b	;volatile
 17792                           
 17793                           ; BSR set to: 15
 17794                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 17795  011930  0100               	movlb	0	; () banked
 17796  011932  EE20 F007          	lfsr	2,7
 17797  011936  5174               	movf	CANsendMessage@data& (0+255),w,b
 17798  011938  26D9               	addwf	fsr2l,f,c
 17799  01193A  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17800  01193C  22DA               	addwfc	fsr2h,f,c
 17801  01193E  50DF               	movf	indf2,w,c
 17802  011940  010F               	movlb	15	; () banked
 17803  011942  6F3D               	movwf	61,b	;volatile
 17804                           
 17805                           ; BSR set to: 15
 17806                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 17807  011944  010F               	movlb	15	; () banked
 17808  011946  8730               	bsf	48,3,b	;volatile
 17809                           
 17810                           ; BSR set to: 15
 17811                           ;inc\CANlib.h: 444: return;
 17812  011948  0012               	return	
 17813  01194A                     l400:
 17814                           
 17815                           ; BSR set to: 15
 17816                           ;inc\CANlib.h: 445: }
 17817                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 17818  01194A  010F               	movlb	15	; () banked
 17819  01194C  B720               	btfsc	32,3,b	;volatile
 17820  01194E  0012               	return	
 17821                           
 17822                           ; BSR set to: 15
 17823                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 17824  011950  C076  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 17825                           
 17826                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 17827  011954  0100               	movlb	0	; () banked
 17828  011956  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 17829  011958  D003               	goto	l415
 17830                           
 17831                           ; BSR set to: 0
 17832                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 17833  01195A  010F               	movlb	15	; () banked
 17834  01195C  8D25               	bsf	37,6,b	;volatile
 17835  01195E  D002               	goto	l416
 17836  011960                     l415:
 17837                           
 17838                           ; BSR set to: 0
 17839                           ;inc\CANlib.h: 454: else
 17840                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 17841  011960  010F               	movlb	15	; () banked
 17842  011962  9D25               	bcf	37,6,b	;volatile
 17843  011964                     l416:
 17844                           
 17845                           ; BSR set to: 15
 17846                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 17847  011964  0100               	movlb	0	; () banked
 17848  011966  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 17849  011968  D07A               	goto	l417
 17850                           
 17851                           ; BSR set to: 0
 17852                           ;inc\CANlib.h: 458: {
 17853                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 17854  01196A  0100               	movlb	0	; () banked
 17855  01196C  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 17856  01196E  0100               	movlb	0	; () banked
 17857  011970  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17858  011972  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17859  011974  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17860  011976  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17861                           
 17862                           ; BSR set to: 0
 17863                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 17864  011978  C07C  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 17865                           
 17866                           ; BSR set to: 0
 17867                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 17868  01197C  0E00               	movlw	0
 17869  01197E  0100               	movlb	0	; () banked
 17870  011980  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17871  011982  0100               	movlb	0	; () banked
 17872  011984  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17873  011986  0EFF               	movlw	255
 17874  011988  0100               	movlb	0	; () banked
 17875  01198A  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17876  01198C  0100               	movlb	0	; () banked
 17877  01198E  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17878  011990  0E00               	movlw	0
 17879  011992  0100               	movlb	0	; () banked
 17880  011994  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17881  011996  0100               	movlb	0	; () banked
 17882  011998  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17883  01199A  0E00               	movlw	0
 17884  01199C  0100               	movlb	0	; () banked
 17885  01199E  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17886  0119A0  0100               	movlb	0	; () banked
 17887  0119A2  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17888                           
 17889                           ; BSR set to: 0
 17890                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 17891  0119A4  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17892  0119A8  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17893  0119AC  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17894  0119B0  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17895  0119B4  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 17896  0119B8  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17897  0119BC  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17898  0119C0  0100               	movlb	0	; () banked
 17899  0119C2  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 17900  0119C4  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17901  0119C8  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17902  0119CC  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17903  0119D0  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17904                           
 17905                           ; BSR set to: 0
 17906                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 17907  0119D4  C07C  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 17908                           
 17909                           ; BSR set to: 0
 17910                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 17911  0119D8  0E00               	movlw	0
 17912  0119DA  010F               	movlb	15	; () banked
 17913  0119DC  6F22               	movwf	34,b	;volatile
 17914                           
 17915                           ; BSR set to: 15
 17916                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 17917  0119DE  010F               	movlb	15	; () banked
 17918  0119E0  8722               	bsf	34,3,b	;volatile
 17919                           
 17920                           ; BSR set to: 15
 17921                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 17922  0119E2  0100               	movlb	0	; () banked
 17923  0119E4  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17924  0119E6  D002               	goto	l418
 17925                           
 17926                           ; BSR set to: 0
 17927                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 17928  0119E8  010F               	movlb	15	; () banked
 17929  0119EA  8122               	bsf	34,0,b	;volatile
 17930  0119EC                     l418:
 17931                           
 17932                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 17933  0119EC  0100               	movlb	0	; () banked
 17934  0119EE  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17935  0119F0  D002               	goto	l419
 17936                           
 17937                           ; BSR set to: 0
 17938                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 17939  0119F2  010F               	movlb	15	; () banked
 17940  0119F4  8322               	bsf	34,1,b	;volatile
 17941  0119F6                     l419:
 17942                           
 17943                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 17944  0119F6  0100               	movlb	0	; () banked
 17945  0119F8  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17946  0119FA  D002               	goto	l420
 17947                           
 17948                           ; BSR set to: 0
 17949                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 17950  0119FC  010F               	movlb	15	; () banked
 17951  0119FE  8B22               	bsf	34,5,b	;volatile
 17952  011A00                     l420:
 17953                           
 17954                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 17955  011A00  0100               	movlb	0	; () banked
 17956  011A02  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17957  011A04  D002               	goto	l421
 17958                           
 17959                           ; BSR set to: 0
 17960                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 17961  011A06  010F               	movlb	15	; () banked
 17962  011A08  8D22               	bsf	34,6,b	;volatile
 17963  011A0A                     l421:
 17964                           
 17965                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 17966  011A0A  0100               	movlb	0	; () banked
 17967  011A0C  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17968  011A0E  D003               	goto	l5876
 17969                           
 17970                           ; BSR set to: 0
 17971                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 17972  011A10  010F               	movlb	15	; () banked
 17973  011A12  8F22               	bsf	34,7,b	;volatile
 17974  011A14  D000               	goto	l5876
 17975  011A16                     l5876:
 17976                           
 17977                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 17978  011A16  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17979  011A1A  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17980  011A1E  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17981  011A22  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17982  011A26  0E16               	movlw	22
 17983  011A28  D006               	goto	u6930
 17984  011A2A                     u6935:
 17985  011A2A  0100               	movlb	0	; () banked
 17986  011A2C  90D8               	bcf	status,0,c
 17987  011A2E  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17988  011A30  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17989  011A32  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17990  011A34  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17991  011A36                     u6930:
 17992  011A36  2EE8               	decfsz	wreg,f,c
 17993  011A38  D7F8               	goto	u6935
 17994  011A3A  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17995  011A3E  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17996  011A42  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17997  011A46  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17998                           
 17999                           ; BSR set to: 0
 18000                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 18001  011A4A  0100               	movlb	0	; () banked
 18002  011A4C  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 18003  011A4E  0100               	movlb	0	; () banked
 18004  011A50  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18005  011A52  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18006  011A54  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18007  011A56  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18008                           
 18009                           ; BSR set to: 0
 18010                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 18011  011A58  C07C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18012                           
 18013                           ;inc\CANlib.h: 483: }
 18014  011A5C  D05A               	goto	l5896
 18015  011A5E                     l417:
 18016                           
 18017                           ; BSR set to: 0
 18018                           ;inc\CANlib.h: 485: else
 18019                           ;inc\CANlib.h: 487: {
 18020                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 18021  011A5E  010F               	movlb	15	; () banked
 18022  011A60  9722               	bcf	34,3,b	;volatile
 18023                           
 18024                           ; BSR set to: 15
 18025                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 18026  011A62  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 18027  011A66  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18028  011A6A  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18029  011A6E  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18030  011A72  0E04               	movlw	4
 18031  011A74  D006               	goto	u6940
 18032  011A76                     u6945:
 18033  011A76  0100               	movlb	0	; () banked
 18034  011A78  90D8               	bcf	status,0,c
 18035  011A7A  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18036  011A7C  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18037  011A7E  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18038  011A80  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 18039  011A82                     u6940:
 18040  011A82  2EE8               	decfsz	wreg,f,c
 18041  011A84  D7F8               	goto	u6945
 18042  011A86  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18043  011A8A  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18044  011A8E  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18045  011A92  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18046                           
 18047                           ; BSR set to: 0
 18048                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 18049  011A96  0100               	movlb	0	; () banked
 18050  011A98  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 18051  011A9A  0100               	movlb	0	; () banked
 18052  011A9C  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18053  011A9E  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18054  011AA0  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18055  011AA2  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18056                           
 18057                           ; BSR set to: 0
 18058                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 18059  011AA4  C07C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18060                           
 18061                           ; BSR set to: 0
 18062                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 18063  011AA8  0E07               	movlw	7
 18064  011AAA  0100               	movlb	0	; () banked
 18065  011AAC  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 18066  011AAE  0100               	movlb	0	; () banked
 18067  011AB0  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18068  011AB2  0E00               	movlw	0
 18069  011AB4  0100               	movlb	0	; () banked
 18070  011AB6  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18071  011AB8  0100               	movlb	0	; () banked
 18072  011ABA  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18073  011ABC  0E00               	movlw	0
 18074  011ABE  0100               	movlb	0	; () banked
 18075  011AC0  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18076  011AC2  0100               	movlb	0	; () banked
 18077  011AC4  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18078  011AC6  0E00               	movlw	0
 18079  011AC8  0100               	movlb	0	; () banked
 18080  011ACA  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18081  011ACC  0100               	movlb	0	; () banked
 18082  011ACE  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18083                           
 18084                           ; BSR set to: 0
 18085                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 18086  011AD0  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 18087  011AD4  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18088  011AD8  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18089  011ADC  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18090  011AE0  0E05               	movlw	5
 18091  011AE2                     u6955:
 18092  011AE2  90D8               	bcf	status,0,c
 18093  011AE4  0100               	movlb	0	; () banked
 18094  011AE6  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 18095  011AE8  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18096  011AEA  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18097  011AEC  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18098  011AEE  2EE8               	decfsz	wreg,f,c
 18099  011AF0  D7F8               	goto	u6955
 18100  011AF2  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18101  011AF6  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18102  011AFA  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18103  011AFE  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18104                           
 18105                           ; BSR set to: 0
 18106                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 18107  011B02  010F               	movlb	15	; () banked
 18108  011B04  5122               	movf	34,w,b	;volatile
 18109  011B06  0B1F               	andlw	31
 18110  011B08  010F               	movlb	15	; () banked
 18111  011B0A  6F22               	movwf	34,b	;volatile
 18112                           
 18113                           ; BSR set to: 15
 18114                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18115  011B0C  C07C  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 18116  011B10  D000               	goto	l5896
 18117  011B12                     l5896:
 18118                           
 18119                           ;inc\CANlib.h: 498: }
 18120                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18121  011B12  0100               	movlb	0	; () banked
 18122  011B14  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 18123  011B16  D003               	goto	l424
 18124                           
 18125                           ; BSR set to: 0
 18126                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18127  011B18  010F               	movlb	15	; () banked
 18128  011B1A  8120               	bsf	32,0,b	;volatile
 18129  011B1C  D002               	goto	l425
 18130  011B1E                     l424:
 18131                           
 18132                           ; BSR set to: 0
 18133                           ;inc\CANlib.h: 502: else
 18134                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18135  011B1E  010F               	movlb	15	; () banked
 18136  011B20  9120               	bcf	32,0,b	;volatile
 18137  011B22                     l425:
 18138                           
 18139                           ; BSR set to: 15
 18140                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18141  011B22  0100               	movlb	0	; () banked
 18142  011B24  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 18143  011B26  D003               	goto	l426
 18144                           
 18145                           ; BSR set to: 0
 18146                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18147  011B28  010F               	movlb	15	; () banked
 18148  011B2A  8320               	bsf	32,1,b	;volatile
 18149  011B2C  D003               	goto	l5902
 18150  011B2E                     l426:
 18151                           
 18152                           ; BSR set to: 0
 18153                           ;inc\CANlib.h: 506: else
 18154                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18155  011B2E  010F               	movlb	15	; () banked
 18156  011B30  9320               	bcf	32,1,b	;volatile
 18157  011B32  D000               	goto	l5902
 18158  011B34                     l5902:
 18159                           
 18160                           ; BSR set to: 15
 18161                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18162  011B34  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 18163  011B38  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18164  011B3C  50DF               	movf	indf2,w,c
 18165  011B3E  010F               	movlb	15	; () banked
 18166  011B40  6F26               	movwf	38,b	;volatile
 18167                           
 18168                           ; BSR set to: 15
 18169                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18170  011B42  0100               	movlb	0	; () banked
 18171  011B44  EE20 F001          	lfsr	2,1
 18172  011B48  5174               	movf	CANsendMessage@data& (0+255),w,b
 18173  011B4A  26D9               	addwf	fsr2l,f,c
 18174  011B4C  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18175  011B4E  22DA               	addwfc	fsr2h,f,c
 18176  011B50  50DF               	movf	indf2,w,c
 18177  011B52  010F               	movlb	15	; () banked
 18178  011B54  6F27               	movwf	39,b	;volatile
 18179                           
 18180                           ; BSR set to: 15
 18181                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18182  011B56  0100               	movlb	0	; () banked
 18183  011B58  EE20 F002          	lfsr	2,2
 18184  011B5C  5174               	movf	CANsendMessage@data& (0+255),w,b
 18185  011B5E  26D9               	addwf	fsr2l,f,c
 18186  011B60  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18187  011B62  22DA               	addwfc	fsr2h,f,c
 18188  011B64  50DF               	movf	indf2,w,c
 18189  011B66  010F               	movlb	15	; () banked
 18190  011B68  6F28               	movwf	40,b	;volatile
 18191                           
 18192                           ; BSR set to: 15
 18193                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18194  011B6A  0100               	movlb	0	; () banked
 18195  011B6C  EE20 F003          	lfsr	2,3
 18196  011B70  5174               	movf	CANsendMessage@data& (0+255),w,b
 18197  011B72  26D9               	addwf	fsr2l,f,c
 18198  011B74  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18199  011B76  22DA               	addwfc	fsr2h,f,c
 18200  011B78  50DF               	movf	indf2,w,c
 18201  011B7A  010F               	movlb	15	; () banked
 18202  011B7C  6F29               	movwf	41,b	;volatile
 18203                           
 18204                           ; BSR set to: 15
 18205                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18206  011B7E  0100               	movlb	0	; () banked
 18207  011B80  EE20 F004          	lfsr	2,4
 18208  011B84  5174               	movf	CANsendMessage@data& (0+255),w,b
 18209  011B86  26D9               	addwf	fsr2l,f,c
 18210  011B88  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18211  011B8A  22DA               	addwfc	fsr2h,f,c
 18212  011B8C  50DF               	movf	indf2,w,c
 18213  011B8E  010F               	movlb	15	; () banked
 18214  011B90  6F2A               	movwf	42,b	;volatile
 18215                           
 18216                           ; BSR set to: 15
 18217                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18218  011B92  0100               	movlb	0	; () banked
 18219  011B94  EE20 F005          	lfsr	2,5
 18220  011B98  5174               	movf	CANsendMessage@data& (0+255),w,b
 18221  011B9A  26D9               	addwf	fsr2l,f,c
 18222  011B9C  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18223  011B9E  22DA               	addwfc	fsr2h,f,c
 18224  011BA0  50DF               	movf	indf2,w,c
 18225  011BA2  010F               	movlb	15	; () banked
 18226  011BA4  6F2B               	movwf	43,b	;volatile
 18227                           
 18228                           ; BSR set to: 15
 18229                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18230  011BA6  0100               	movlb	0	; () banked
 18231  011BA8  EE20 F006          	lfsr	2,6
 18232  011BAC  5174               	movf	CANsendMessage@data& (0+255),w,b
 18233  011BAE  26D9               	addwf	fsr2l,f,c
 18234  011BB0  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18235  011BB2  22DA               	addwfc	fsr2h,f,c
 18236  011BB4  50DF               	movf	indf2,w,c
 18237  011BB6  010F               	movlb	15	; () banked
 18238  011BB8  6F2C               	movwf	44,b	;volatile
 18239                           
 18240                           ; BSR set to: 15
 18241                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18242  011BBA  0100               	movlb	0	; () banked
 18243  011BBC  EE20 F007          	lfsr	2,7
 18244  011BC0  5174               	movf	CANsendMessage@data& (0+255),w,b
 18245  011BC2  26D9               	addwf	fsr2l,f,c
 18246  011BC4  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18247  011BC6  22DA               	addwfc	fsr2h,f,c
 18248  011BC8  50DF               	movf	indf2,w,c
 18249  011BCA  010F               	movlb	15	; () banked
 18250  011BCC  6F2D               	movwf	45,b	;volatile
 18251                           
 18252                           ; BSR set to: 15
 18253                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 18254  011BCE  010F               	movlb	15	; () banked
 18255  011BD0  8720               	bsf	32,3,b	;volatile
 18256                           
 18257                           ; BSR set to: 15
 18258                           ;inc\CANlib.h: 520: return;
 18259  011BD2  0012               	return	
 18260                           
 18261                           ; BSR set to: 15
 18262                           
 18263                           ; BSR set to: 15
 18264  011BD4  0012               	return		;funcret
 18265  011BD6                     __end_of_CANsendMessage:
 18266                           	opt stack 0
 18267                           tblptru	equ	0xFF8
 18268                           tblptrh	equ	0xFF7
 18269                           tblptrl	equ	0xFF6
 18270                           tablat	equ	0xFF5
 18271                           prodh	equ	0xFF4
 18272                           prodl	equ	0xFF3
 18273                           intcon	equ	0xFF2
 18274                           postinc0	equ	0xFEE
 18275                           wreg	equ	0xFE8
 18276                           indf1	equ	0xFE7
 18277                           plusw1	equ	0xFE3
 18278                           fsr1h	equ	0xFE2
 18279                           fsr1l	equ	0xFE1
 18280                           indf2	equ	0xFDF
 18281                           postinc2	equ	0xFDE
 18282                           plusw2	equ	0xFDB
 18283                           fsr2h	equ	0xFDA
 18284                           fsr2l	equ	0xFD9
 18285                           status	equ	0xFD8
 18286                           
 18287 ;; *************** function _CANisTxReady *****************
 18288 ;; Defined at:
 18289 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 18290 ;; Parameters:    Size  Location     Type
 18291 ;;		None
 18292 ;; Auto vars:     Size  Location     Type
 18293 ;;		None
 18294 ;; Return value:  Size  Location     Type
 18295 ;;                  1    wreg      unsigned char 
 18296 ;; Registers used:
 18297 ;;		wreg, status,2
 18298 ;; Tracked objects:
 18299 ;;		On entry : 0/0
 18300 ;;		On exit  : 0/0
 18301 ;;		Unchanged: 0/0
 18302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18304 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18306 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18307 ;;Total ram usage:        1 bytes
 18308 ;; Hardware stack levels used:    1
 18309 ;; Hardware stack levels required when called:    3
 18310 ;; This function calls:
 18311 ;;		Nothing
 18312 ;; This function is called by:
 18313 ;;		_main
 18314 ;;		_LCD_Handler
 18315 ;;		_CAN_Tx
 18316 ;; This function uses a non-reentrant model
 18317 ;;
 18318                           
 18319                           	psect	text59
 18320  015E64                     __ptext59:
 18321                           	opt stack 0
 18322  015E64                     _CANisTxReady:
 18323                           	opt stack 26
 18324                           
 18325                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 18326                           
 18327                           ; BSR set to: 15
 18328                           ;incstack = 0
 18329  015E64  0E01               	movlw	1
 18330  015E66  0100               	movlb	0	; () banked
 18331  015E68  6F70               	movwf	_CANisTxReady$3255& (0+255),b
 18332                           
 18333                           ; BSR set to: 0
 18334  015E6A  010F               	movlb	15	; () banked
 18335  015E6C  A740               	btfss	64,3,b	;volatile
 18336  015E6E  D009               	goto	l578
 18337                           
 18338                           ; BSR set to: 15
 18339  015E70  010F               	movlb	15	; () banked
 18340  015E72  A730               	btfss	48,3,b	;volatile
 18341  015E74  D006               	goto	l578
 18342                           
 18343                           ; BSR set to: 15
 18344  015E76  010F               	movlb	15	; () banked
 18345  015E78  A720               	btfss	32,3,b	;volatile
 18346  015E7A  D003               	goto	l578
 18347                           
 18348                           ; BSR set to: 15
 18349  015E7C  0E00               	movlw	0
 18350  015E7E  0100               	movlb	0	; () banked
 18351  015E80  6F70               	movwf	_CANisTxReady$3255& (0+255),b
 18352  015E82                     l578:
 18353  015E82  0100               	movlb	0	; () banked
 18354  015E84  5170               	movf	_CANisTxReady$3255& (0+255),w,b
 18355  015E86  0012               	return	
 18356                           
 18357                           ; BSR set to: 0
 18358                           
 18359                           ; BSR set to: 0
 18360  015E88  0012               	return		;funcret
 18361  015E8A                     __end_of_CANisTxReady:
 18362                           	opt stack 0
 18363                           tblptru	equ	0xFF8
 18364                           tblptrh	equ	0xFF7
 18365                           tblptrl	equ	0xFF6
 18366                           tablat	equ	0xFF5
 18367                           prodh	equ	0xFF4
 18368                           prodl	equ	0xFF3
 18369                           intcon	equ	0xFF2
 18370                           postinc0	equ	0xFEE
 18371                           wreg	equ	0xFE8
 18372                           indf1	equ	0xFE7
 18373                           plusw1	equ	0xFE3
 18374                           fsr1h	equ	0xFE2
 18375                           fsr1l	equ	0xFE1
 18376                           indf2	equ	0xFDF
 18377                           postinc2	equ	0xFDE
 18378                           plusw2	equ	0xFDB
 18379                           fsr2h	equ	0xFDA
 18380                           fsr2l	equ	0xFD9
 18381                           status	equ	0xFD8
 18382                           
 18383 ;; *************** function _CAN_Rx *****************
 18384 ;; Defined at:
 18385 ;;		line 631 in file "RemoteCan.c"
 18386 ;; Parameters:    Size  Location     Type
 18387 ;;		None
 18388 ;; Auto vars:     Size  Location     Type
 18389 ;;		None
 18390 ;; Return value:  Size  Location     Type
 18391 ;;		None               void
 18392 ;; Registers used:
 18393 ;;		wreg, status,2, status,0
 18394 ;; Tracked objects:
 18395 ;;		On entry : 0/0
 18396 ;;		On exit  : 0/0
 18397 ;;		Unchanged: 0/0
 18398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18401 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18402 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18403 ;;Total ram usage:        4 bytes
 18404 ;; Hardware stack levels used:    1
 18405 ;; Hardware stack levels required when called:    3
 18406 ;; This function calls:
 18407 ;;		Nothing
 18408 ;; This function is called by:
 18409 ;;		_main
 18410 ;; This function uses a non-reentrant model
 18411 ;;
 18412                           
 18413                           	psect	text60
 18414  01574C                     __ptext60:
 18415                           	opt stack 0
 18416  01574C                     _CAN_Rx:
 18417                           	opt stack 27
 18418                           
 18419                           ;RemoteCan.c: 652: if ((id == 0b00000001000)&&(RTR_Flag == 0)) {
 18420                           
 18421                           ; BSR set to: 0
 18422                           ;incstack = 0
 18423  01574C  0E08               	movlw	8
 18424  01574E  1801               	xorwf	_id,w,c	;volatile
 18425  015750  1002               	iorwf	_id+1,w,c	;volatile
 18426  015752  1003               	iorwf	_id+2,w,c	;volatile
 18427  015754  1004               	iorwf	_id+3,w,c	;volatile
 18428  015756  B4D8               	btfsc	status,2,c
 18429  015758  BE4A               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18430  01575A  D02A               	goto	l6548
 18431                           
 18432                           ;RemoteCan.c: 653: left_speed = data_speed_rx[1];
 18433  01575C  C101  F009         	movff	_data_speed_rx+1,_left_speed	;volatile
 18434  015760  6A0A               	clrf	_left_speed+1,c	;volatile
 18435                           
 18436                           ;RemoteCan.c: 654: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 18437  015762  5009               	movf	_left_speed,w,c	;volatile
 18438  015764  0100               	movlb	0	; () banked
 18439  015766  6F70               	movwf	??_CAN_Rx& (0+255),b
 18440  015768  0101               	movlb	1	; () banked
 18441  01576A  5100               	movf	_data_speed_rx& (0+255),w,b
 18442  01576C  6E09               	movwf	_left_speed,c	;volatile
 18443  01576E  C070  F00A         	movff	??_CAN_Rx,_left_speed+1	;volatile
 18444                           
 18445                           ; BSR set to: 1
 18446                           ;RemoteCan.c: 655: right_speed = data_speed_rx[3];
 18447  015772  C103  F00B         	movff	_data_speed_rx+3,_right_speed	;volatile
 18448  015776  6A0C               	clrf	_right_speed+1,c	;volatile
 18449                           
 18450                           ;RemoteCan.c: 656: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 18451  015778  500B               	movf	_right_speed,w,c	;volatile
 18452  01577A  0100               	movlb	0	; () banked
 18453  01577C  6F70               	movwf	??_CAN_Rx& (0+255),b
 18454  01577E  0101               	movlb	1	; () banked
 18455  015780  5102               	movf	(_data_speed_rx+2)& (0+255),w,b
 18456  015782  6E0B               	movwf	_right_speed,c	;volatile
 18457  015784  C070  F00C         	movff	??_CAN_Rx,_right_speed+1	;volatile
 18458                           
 18459                           ; BSR set to: 1
 18460                           ;RemoteCan.c: 657: actual_speed = (right_speed + left_speed) / 2;
 18461  015788  5009               	movf	_left_speed,w,c	;volatile
 18462  01578A  240B               	addwf	_right_speed,w,c	;volatile
 18463  01578C  0100               	movlb	0	; () banked
 18464  01578E  6F70               	movwf	??_CAN_Rx& (0+255),b
 18465  015790  500A               	movf	_left_speed+1,w,c	;volatile
 18466  015792  200C               	addwfc	_right_speed+1,w,c	;volatile
 18467  015794  0100               	movlb	0	; () banked
 18468  015796  6F71               	movwf	(??_CAN_Rx+1)& (0+255),b
 18469  015798  90D8               	bcf	status,0,c
 18470  01579A  0100               	movlb	0	; () banked
 18471  01579C  3171               	rrcf	(??_CAN_Rx+1)& (0+255),w,b
 18472  01579E  0100               	movlb	0	; () banked
 18473  0157A0  6F72               	movwf	(??_CAN_Rx+2)& (0+255),b
 18474  0157A2  0100               	movlb	0	; () banked
 18475  0157A4  3170               	rrcf	??_CAN_Rx& (0+255),w,b
 18476  0157A6  0100               	movlb	0	; () banked
 18477  0157A8  6FE1               	movwf	_actual_speed& (0+255),b	;volatile
 18478  0157AA  C072  F0E2         	movff	??_CAN_Rx+2,_actual_speed+1	;volatile
 18479  0157AE  D000               	goto	l6548
 18480  0157B0                     l6548:
 18481                           
 18482                           ;RemoteCan.c: 658: }
 18483                           ;RemoteCan.c: 660: if (id == 0b00000001011) {
 18484  0157B0  0E0B               	movlw	11
 18485  0157B2  1801               	xorwf	_id,w,c	;volatile
 18486  0157B4  1002               	iorwf	_id+1,w,c	;volatile
 18487  0157B6  1003               	iorwf	_id+2,w,c	;volatile
 18488  0157B8  1004               	iorwf	_id+3,w,c	;volatile
 18489  0157BA  A4D8               	btfss	status,2,c
 18490  0157BC  0012               	return	
 18491                           
 18492                           ;RemoteCan.c: 661: battery = data[0];
 18493  0157BE  C11D  F00F         	movff	_data,_battery	;volatile
 18494  0157C2  0012               	return	
 18495  0157C4  0012               	return		;funcret
 18496  0157C6                     __end_of_CAN_Rx:
 18497                           	opt stack 0
 18498                           tblptru	equ	0xFF8
 18499                           tblptrh	equ	0xFF7
 18500                           tblptrl	equ	0xFF6
 18501                           tablat	equ	0xFF5
 18502                           prodh	equ	0xFF4
 18503                           prodl	equ	0xFF3
 18504                           intcon	equ	0xFF2
 18505                           postinc0	equ	0xFEE
 18506                           wreg	equ	0xFE8
 18507                           indf1	equ	0xFE7
 18508                           plusw1	equ	0xFE3
 18509                           fsr1h	equ	0xFE2
 18510                           fsr1l	equ	0xFE1
 18511                           indf2	equ	0xFDF
 18512                           postinc2	equ	0xFDE
 18513                           plusw2	equ	0xFDB
 18514                           fsr2h	equ	0xFDA
 18515                           fsr2l	equ	0xFD9
 18516                           status	equ	0xFD8
 18517                           
 18518 ;; *************** function _ISR_bassa *****************
 18519 ;; Defined at:
 18520 ;;		line 200 in file "RemoteCan.c"
 18521 ;; Parameters:    Size  Location     Type
 18522 ;;		None
 18523 ;; Auto vars:     Size  Location     Type
 18524 ;;		None
 18525 ;; Return value:  Size  Location     Type
 18526 ;;		None               void
 18527 ;; Registers used:
 18528 ;;		wreg, status,2, status,0
 18529 ;; Tracked objects:
 18530 ;;		On entry : 0/0
 18531 ;;		On exit  : 0/0
 18532 ;;		Unchanged: 0/0
 18533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18536 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18537 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18538 ;;Total ram usage:       17 bytes
 18539 ;; Hardware stack levels used:    1
 18540 ;; Hardware stack levels required when called:    2
 18541 ;; This function calls:
 18542 ;;		Nothing
 18543 ;; This function is called by:
 18544 ;;		Interrupt level 1
 18545 ;; This function uses a non-reentrant model
 18546 ;;
 18547                           
 18548                           	psect	intcodelo
 18549  000018                     __pintcodelo:
 18550                           	opt stack 0
 18551  000018                     _ISR_bassa:
 18552                           	opt stack 20
 18553                           
 18554                           ;incstack = 0
 18555  000018  CFD8 F028          	movff	status,??_ISR_bassa
 18556  00001C  CFE8 F029          	movff	wreg,??_ISR_bassa+1
 18557  000020  CFE0 F02A          	movff	bsr,??_ISR_bassa+2
 18558  000024  CFFA F02B          	movff	pclath,??_ISR_bassa+3
 18559  000028  CFFB F02C          	movff	pclatu,??_ISR_bassa+4
 18560  00002C  CFE9 F02D          	movff	fsr0l,??_ISR_bassa+5
 18561  000030  CFEA F02E          	movff	fsr0h,??_ISR_bassa+6
 18562  000034  CFE1 F02F          	movff	fsr1l,??_ISR_bassa+7
 18563  000038  CFE2 F030          	movff	fsr1h,??_ISR_bassa+8
 18564  00003C  CFD9 F031          	movff	fsr2l,??_ISR_bassa+9
 18565  000040  CFDA F032          	movff	fsr2h,??_ISR_bassa+10
 18566  000044  CFF3 F033          	movff	prodl,??_ISR_bassa+11
 18567  000048  CFF4 F034          	movff	prodh,??_ISR_bassa+12
 18568  00004C  CFF6 F035          	movff	tblptrl,??_ISR_bassa+13
 18569  000050  CFF7 F036          	movff	tblptrh,??_ISR_bassa+14
 18570  000054  CFF8 F037          	movff	tblptru,??_ISR_bassa+15
 18571  000058  CFF5 F038          	movff	tablat,??_ISR_bassa+16
 18572                           
 18573                           ;RemoteCan.c: 201: if (PIR2bits.TMR3IF == 1) {
 18574  00005C  A2A1               	btfss	4001,1,c	;volatile
 18575  00005E  D00C               	goto	i1l815
 18576                           
 18577                           ;RemoteCan.c: 202: time_counter++;
 18578  000060  0E01               	movlw	1
 18579  000062  2605               	addwf	_time_counter,f,c	;volatile
 18580  000064  0E00               	movlw	0
 18581  000066  2206               	addwfc	_time_counter+1,f,c	;volatile
 18582  000068  2207               	addwfc	_time_counter+2,f,c	;volatile
 18583  00006A  2208               	addwfc	_time_counter+3,f,c	;volatile
 18584                           
 18585                           ;RemoteCan.c: 203: TMR3H = 0x63;
 18586  00006C  0E63               	movlw	99
 18587  00006E  6EB3               	movwf	4019,c	;volatile
 18588                           
 18589                           ;RemoteCan.c: 204: TMR3L = 0xC0;
 18590  000070  0EC0               	movlw	192
 18591  000072  6EB2               	movwf	4018,c	;volatile
 18592                           
 18593                           ;RemoteCan.c: 205: PIR2bits.TMR3IF = 0;
 18594  000074  92A1               	bcf	4001,1,c	;volatile
 18595  000076  D000               	goto	i1l815
 18596  000078                     i1l815:
 18597  000078  C038  FFF5         	movff	??_ISR_bassa+16,tablat
 18598  00007C  C037  FFF8         	movff	??_ISR_bassa+15,tblptru
 18599  000080  C036  FFF7         	movff	??_ISR_bassa+14,tblptrh
 18600  000084  C035  FFF6         	movff	??_ISR_bassa+13,tblptrl
 18601  000088  C034  FFF4         	movff	??_ISR_bassa+12,prodh
 18602  00008C  C033  FFF3         	movff	??_ISR_bassa+11,prodl
 18603  000090  C032  FFDA         	movff	??_ISR_bassa+10,fsr2h
 18604  000094  C031  FFD9         	movff	??_ISR_bassa+9,fsr2l
 18605  000098  C030  FFE2         	movff	??_ISR_bassa+8,fsr1h
 18606  00009C  C02F  FFE1         	movff	??_ISR_bassa+7,fsr1l
 18607  0000A0  C02E  FFEA         	movff	??_ISR_bassa+6,fsr0h
 18608  0000A4  C02D  FFE9         	movff	??_ISR_bassa+5,fsr0l
 18609  0000A8  C02C  FFFB         	movff	??_ISR_bassa+4,pclatu
 18610  0000AC  C02B  FFFA         	movff	??_ISR_bassa+3,pclath
 18611  0000B0  C02A  FFE0         	movff	??_ISR_bassa+2,bsr
 18612  0000B4  C029  FFE8         	movff	??_ISR_bassa+1,wreg
 18613  0000B8  C028  FFD8         	movff	??_ISR_bassa,status
 18614  0000BC  0010               	retfie	
 18615  0000BE                     __end_of_ISR_bassa:
 18616                           	opt stack 0
 18617                           pclatu	equ	0xFFB
 18618                           pclath	equ	0xFFA
 18619                           tblptru	equ	0xFF8
 18620                           tblptrh	equ	0xFF7
 18621                           tblptrl	equ	0xFF6
 18622                           tablat	equ	0xFF5
 18623                           prodh	equ	0xFF4
 18624                           prodl	equ	0xFF3
 18625                           intcon	equ	0xFF2
 18626                           postinc0	equ	0xFEE
 18627                           fsr0h	equ	0xFEA
 18628                           fsr0l	equ	0xFE9
 18629                           wreg	equ	0xFE8
 18630                           indf1	equ	0xFE7
 18631                           plusw1	equ	0xFE3
 18632                           fsr1h	equ	0xFE2
 18633                           fsr1l	equ	0xFE1
 18634                           bsr	equ	0xFE0
 18635                           indf2	equ	0xFDF
 18636                           postinc2	equ	0xFDE
 18637                           plusw2	equ	0xFDB
 18638                           fsr2h	equ	0xFDA
 18639                           fsr2l	equ	0xFD9
 18640                           status	equ	0xFD8
 18641                           
 18642 ;; *************** function _ISR_alta *****************
 18643 ;; Defined at:
 18644 ;;		line 124 in file "RemoteCan.c"
 18645 ;; Parameters:    Size  Location     Type
 18646 ;;		None
 18647 ;; Auto vars:     Size  Location     Type
 18648 ;;  i               1   33[COMRAM] unsigned char 
 18649 ;; Return value:  Size  Location     Type
 18650 ;;		None               void
 18651 ;; Registers used:
 18652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18653 ;; Tracked objects:
 18654 ;;		On entry : 0/0
 18655 ;;		On exit  : 0/0
 18656 ;;		Unchanged: 0/0
 18657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18659 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18660 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18661 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18662 ;;Total ram usage:       17 bytes
 18663 ;; Hardware stack levels used:    1
 18664 ;; Hardware stack levels required when called:    1
 18665 ;; This function calls:
 18666 ;;		_CANisRxReady
 18667 ;;		_CANreceiveMessage
 18668 ;;		i2_CANisTxReady
 18669 ;;		i2_CANsendMessage
 18670 ;; This function is called by:
 18671 ;;		Interrupt level 2
 18672 ;; This function uses a non-reentrant model
 18673 ;;
 18674                           
 18675                           	psect	intcode
 18676  000008                     __pintcode:
 18677                           	opt stack 0
 18678  000008                     _ISR_alta:
 18679                           	opt stack 20
 18680                           
 18681                           ;incstack = 0
 18682  000008  CFFA F062          	movff	pclath,??_ISR_alta+2
 18683  00000C  CFFB F063          	movff	pclatu,??_ISR_alta+3
 18684  000010  CFE9 F064          	movff	fsr0l,??_ISR_alta+4
 18685  000014  EF6A  F09D         	goto	int_func
 18686                           pclatu	equ	0xFFB
 18687                           pclath	equ	0xFFA
 18688                           tblptru	equ	0xFF8
 18689                           tblptrh	equ	0xFF7
 18690                           tblptrl	equ	0xFF6
 18691                           tablat	equ	0xFF5
 18692                           prodh	equ	0xFF4
 18693                           prodl	equ	0xFF3
 18694                           intcon	equ	0xFF2
 18695                           postinc0	equ	0xFEE
 18696                           fsr0h	equ	0xFEA
 18697                           fsr0l	equ	0xFE9
 18698                           wreg	equ	0xFE8
 18699                           indf1	equ	0xFE7
 18700                           plusw1	equ	0xFE3
 18701                           fsr1h	equ	0xFE2
 18702                           fsr1l	equ	0xFE1
 18703                           bsr	equ	0xFE0
 18704                           indf2	equ	0xFDF
 18705                           postinc2	equ	0xFDE
 18706                           plusw2	equ	0xFDB
 18707                           fsr2h	equ	0xFDA
 18708                           fsr2l	equ	0xFD9
 18709                           status	equ	0xFD8
 18710                           
 18711                           	psect	intcode_body
 18712  013AD4                     __pintcode_body:
 18713                           	opt stack 20
 18714  013AD4                     int_func:
 18715                           	opt stack 20
 18716  013AD4  CFEA F065          	movff	fsr0h,??_ISR_alta+5
 18717  013AD8  CFE1 F066          	movff	fsr1l,??_ISR_alta+6
 18718  013ADC  CFE2 F067          	movff	fsr1h,??_ISR_alta+7
 18719  013AE0  CFD9 F068          	movff	fsr2l,??_ISR_alta+8
 18720  013AE4  CFDA F069          	movff	fsr2h,??_ISR_alta+9
 18721  013AE8  CFF3 F06A          	movff	prodl,??_ISR_alta+10
 18722  013AEC  CFF4 F06B          	movff	prodh,??_ISR_alta+11
 18723  013AF0  CFF6 F06C          	movff	tblptrl,??_ISR_alta+12
 18724  013AF4  CFF7 F06D          	movff	tblptrh,??_ISR_alta+13
 18725  013AF8  CFF8 F06E          	movff	tblptru,??_ISR_alta+14
 18726  013AFC  CFF5 F06F          	movff	tablat,??_ISR_alta+15
 18727                           
 18728                           ;RemoteCan.c: 125: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 18729  013B00  B2A4               	btfsc	4004,1,c	;volatile
 18730  013B02  D002               	goto	i2l8466
 18731  013B04  A0A4               	btfss	4004,0,c	;volatile
 18732  013B06  D10C               	goto	i2l811
 18733  013B08                     i2l8466:
 18734                           
 18735                           ;RemoteCan.c: 126: if (CANisRxReady()) {
 18736  013B08  EC80  F0AF         	call	_CANisRxReady	;wreg free
 18737  013B0C  0900               	iorlw	0
 18738  013B0E  B4D8               	btfsc	status,2,c
 18739  013B10  D104               	goto	i2l8548
 18740                           
 18741                           ;RemoteCan.c: 127: CANreceiveMessage(&msg);
 18742  013B12  0E11               	movlw	low _msg
 18743  013B14  6E39               	movwf	CANreceiveMessage@msg,c
 18744  013B16  0E00               	movlw	high _msg
 18745  013B18  6E3A               	movwf	CANreceiveMessage@msg+1,c
 18746  013B1A  ECEB  F094         	call	_CANreceiveMessage	;wreg free
 18747                           
 18748                           ;RemoteCan.c: 128: RTR_Flag = msg.RTR;
 18749  013B1E  B01F               	btfsc	_msg+14,0,c
 18750  013B20  D002               	bra	i2u1054_45
 18751  013B22  9E4A               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18752  013B24  D001               	bra	i2u1054_46
 18753  013B26                     i2u1054_45:
 18754  013B26  8E4A               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18755  013B28                     i2u1054_46:
 18756                           
 18757                           ;RemoteCan.c: 129: id = msg.identifier;
 18758  013B28  C011  F001         	movff	_msg,_id	;volatile
 18759  013B2C  C012  F002         	movff	_msg+1,_id+1	;volatile
 18760  013B30  C013  F003         	movff	_msg+2,_id+2	;volatile
 18761  013B34  C014  F004         	movff	_msg+3,_id+3	;volatile
 18762                           
 18763                           ;RemoteCan.c: 130: newMessageCan = 1;
 18764  013B38  864B               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 18765                           
 18766                           ;RemoteCan.c: 131: if (id == 0b00000001000) {
 18767  013B3A  0E08               	movlw	8
 18768  013B3C  1801               	xorwf	_id,w,c	;volatile
 18769  013B3E  1002               	iorwf	_id+1,w,c	;volatile
 18770  013B40  1003               	iorwf	_id+2,w,c	;volatile
 18771  013B42  1004               	iorwf	_id+3,w,c	;volatile
 18772  013B44  A4D8               	btfss	status,2,c
 18773  013B46  D01B               	goto	i2l8490
 18774                           
 18775                           ;RemoteCan.c: 132: for (unsigned char i = 0; i < 8; i++) {
 18776  013B48  0E00               	movlw	0
 18777  013B4A  6E49               	movwf	ISR_alta@i,c
 18778  013B4C                     i2l8480:
 18779  013B4C  0E07               	movlw	7
 18780  013B4E  6449               	cpfsgt	ISR_alta@i,c
 18781  013B50  D001               	goto	i2l8484
 18782  013B52  D015               	goto	i2l8490
 18783  013B54                     i2l8484:
 18784                           
 18785                           ;RemoteCan.c: 133: data_speed_rx[i] = msg.data[i];
 18786  013B54  5049               	movf	ISR_alta@i,w,c
 18787  013B56  0D01               	mullw	1
 18788  013B58  0E15               	movlw	low (_msg+4)
 18789  013B5A  24F3               	addwf	prodl,w,c
 18790  013B5C  6ED9               	movwf	fsr2l,c
 18791  013B5E  0E00               	movlw	high (_msg+4)
 18792  013B60  20F4               	addwfc	prodh,w,c
 18793  013B62  6EDA               	movwf	fsr2h,c
 18794  013B64  5049               	movf	ISR_alta@i,w,c
 18795  013B66  0D01               	mullw	1
 18796  013B68  0E00               	movlw	low _data_speed_rx
 18797  013B6A  24F3               	addwf	prodl,w,c
 18798  013B6C  6EE1               	movwf	fsr1l,c
 18799  013B6E  0E01               	movlw	high _data_speed_rx
 18800  013B70  20F4               	addwfc	prodh,w,c
 18801  013B72  6EE2               	movwf	fsr1h,c
 18802  013B74  CFDF FFE7          	movff	indf2,indf1
 18803  013B78  2A49               	incf	ISR_alta@i,f,c
 18804  013B7A  D7E8               	goto	i2l8480
 18805  013B7C  D000               	goto	i2l8490
 18806  013B7E                     i2l8490:
 18807                           
 18808                           ;RemoteCan.c: 134: }
 18809                           ;RemoteCan.c: 135: }
 18810                           ;RemoteCan.c: 137: if (id == 0b00000001101) {
 18811  013B7E  0E0D               	movlw	13
 18812  013B80  1801               	xorwf	_id,w,c	;volatile
 18813  013B82  1002               	iorwf	_id+1,w,c	;volatile
 18814  013B84  1003               	iorwf	_id+2,w,c	;volatile
 18815  013B86  1004               	iorwf	_id+3,w,c	;volatile
 18816  013B88  A4D8               	btfss	status,2,c
 18817  013B8A  D049               	goto	i2l8522
 18818                           
 18819                           ;RemoteCan.c: 138: if (msg.data[0] == 1) {
 18820  013B8C  0415               	decf	_msg+4,w,c
 18821  013B8E  A4D8               	btfss	status,2,c
 18822  013B90  D008               	goto	i2l8498
 18823                           
 18824                           ;RemoteCan.c: 139: space_available = 1;
 18825  013B92  8E4B               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 18826                           
 18827                           ;RemoteCan.c: 140: space_gap_reached = 0;
 18828  013B94  904C               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 18829                           
 18830                           ;RemoteCan.c: 141: F2_switch = 0;
 18831  013B96  984A               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 18832                           
 18833                           ;RemoteCan.c: 142: parking_message_E = 1;
 18834  013B98  8A4B               	bsf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
 18835                           
 18836                           ;RemoteCan.c: 143: parking_message_ID = 0;
 18837  013B9A  0E00               	movlw	0
 18838  013B9C  0100               	movlb	0	; () banked
 18839  013B9E  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
 18840  013BA0  D000               	goto	i2l8498
 18841  013BA2                     i2l8498:
 18842                           
 18843                           ;RemoteCan.c: 144: }
 18844                           ;RemoteCan.c: 146: if (msg.data[0] == 2) {
 18845  013BA2  0E02               	movlw	2
 18846  013BA4  1815               	xorwf	_msg+4,w,c
 18847  013BA6  A4D8               	btfss	status,2,c
 18848  013BA8  D007               	goto	i2l8504
 18849                           
 18850                           ;RemoteCan.c: 147: space_available = 1;
 18851  013BAA  8E4B               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 18852                           
 18853                           ;RemoteCan.c: 148: space_gap_reached = 1;
 18854  013BAC  804C               	bsf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 18855                           
 18856                           ;RemoteCan.c: 149: Can_Tx_Force = 1;
 18857  013BAE  844A               	bsf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
 18858                           
 18859                           ;RemoteCan.c: 150: parking_message_ID = 2;
 18860  013BB0  0E02               	movlw	2
 18861  013BB2  0100               	movlb	0	; () banked
 18862  013BB4  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
 18863  013BB6  D000               	goto	i2l8504
 18864  013BB8                     i2l8504:
 18865                           
 18866                           ;RemoteCan.c: 151: }
 18867                           ;RemoteCan.c: 153: if (msg.data[0] == 3) {
 18868  013BB8  0E03               	movlw	3
 18869  013BBA  1815               	xorwf	_msg+4,w,c
 18870  013BBC  A4D8               	btfss	status,2,c
 18871  013BBE  D015               	goto	i2l8512
 18872                           
 18873                           ;RemoteCan.c: 154: parking_message_ID = 6;
 18874  013BC0  0E06               	movlw	6
 18875  013BC2  0100               	movlb	0	; () banked
 18876  013BC4  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
 18877                           
 18878                           ; BSR set to: 0
 18879                           ;RemoteCan.c: 155: F1_switch = 0;
 18880  013BC6  964A               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 18881                           
 18882                           ; BSR set to: 0
 18883                           ;RemoteCan.c: 156: pr_time_6 = time_counter + (2000 / 10);
 18884  013BC8  0EC8               	movlw	200
 18885  013BCA  2405               	addwf	_time_counter,w,c	;volatile
 18886  013BCC  0100               	movlb	0	; () banked
 18887  013BCE  6FDB               	movwf	_pr_time_6& (0+255),b	;volatile
 18888  013BD0  0E00               	movlw	0
 18889  013BD2  2006               	addwfc	_time_counter+1,w,c	;volatile
 18890  013BD4  0100               	movlb	0	; () banked
 18891  013BD6  6FDC               	movwf	(_pr_time_6+1)& (0+255),b	;volatile
 18892  013BD8  0E00               	movlw	0
 18893  013BDA  2007               	addwfc	_time_counter+2,w,c	;volatile
 18894  013BDC  0100               	movlb	0	; () banked
 18895  013BDE  6FDD               	movwf	(_pr_time_6+2)& (0+255),b	;volatile
 18896  013BE0  0E00               	movlw	0
 18897  013BE2  2008               	addwfc	_time_counter+3,w,c	;volatile
 18898  013BE4  0100               	movlb	0	; () banked
 18899  013BE6  6FDE               	movwf	(_pr_time_6+3)& (0+255),b	;volatile
 18900  013BE8  D000               	goto	i2l8512
 18901  013BEA                     i2l8512:
 18902                           
 18903                           ;RemoteCan.c: 157: }
 18904                           ;RemoteCan.c: 158: if (msg.data[0] == 4) {
 18905  013BEA  0E04               	movlw	4
 18906  013BEC  1815               	xorwf	_msg+4,w,c
 18907  013BEE  A4D8               	btfss	status,2,c
 18908  013BF0  D016               	goto	i2l8522
 18909                           
 18910                           ;RemoteCan.c: 159: parking_message_ID = 6;
 18911  013BF2  0E06               	movlw	6
 18912  013BF4  0100               	movlb	0	; () banked
 18913  013BF6  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
 18914                           
 18915                           ; BSR set to: 0
 18916                           ;RemoteCan.c: 160: parking_error = 1;
 18917  013BF8  884B               	bsf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
 18918                           
 18919                           ; BSR set to: 0
 18920                           ;RemoteCan.c: 161: F1_switch = 0;
 18921  013BFA  964A               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 18922                           
 18923                           ; BSR set to: 0
 18924                           ;RemoteCan.c: 162: pr_time_6 = time_counter + (2000 / 10);
 18925  013BFC  0EC8               	movlw	200
 18926  013BFE  2405               	addwf	_time_counter,w,c	;volatile
 18927  013C00  0100               	movlb	0	; () banked
 18928  013C02  6FDB               	movwf	_pr_time_6& (0+255),b	;volatile
 18929  013C04  0E00               	movlw	0
 18930  013C06  2006               	addwfc	_time_counter+1,w,c	;volatile
 18931  013C08  0100               	movlb	0	; () banked
 18932  013C0A  6FDC               	movwf	(_pr_time_6+1)& (0+255),b	;volatile
 18933  013C0C  0E00               	movlw	0
 18934  013C0E  2007               	addwfc	_time_counter+2,w,c	;volatile
 18935  013C10  0100               	movlb	0	; () banked
 18936  013C12  6FDD               	movwf	(_pr_time_6+2)& (0+255),b	;volatile
 18937  013C14  0E00               	movlw	0
 18938  013C16  2008               	addwfc	_time_counter+3,w,c	;volatile
 18939  013C18  0100               	movlb	0	; () banked
 18940  013C1A  6FDE               	movwf	(_pr_time_6+3)& (0+255),b	;volatile
 18941                           
 18942                           ; BSR set to: 0
 18943  013C1C  D000               	goto	i2l8522
 18944  013C1E                     i2l8522:
 18945                           
 18946                           ;RemoteCan.c: 163: }
 18947                           ;RemoteCan.c: 164: }
 18948                           ;RemoteCan.c: 166: if (id == 0b00000010000) {
 18949  013C1E  0E10               	movlw	16
 18950  013C20  1801               	xorwf	_id,w,c	;volatile
 18951  013C22  1002               	iorwf	_id+1,w,c	;volatile
 18952  013C24  1003               	iorwf	_id+2,w,c	;volatile
 18953  013C26  1004               	iorwf	_id+3,w,c	;volatile
 18954  013C28  A4D8               	btfss	status,2,c
 18955  013C2A  D008               	goto	i2l8526
 18956                           
 18957                           ;RemoteCan.c: 167: steering_correction_dir = msg.data[1];
 18958  013C2C  B016               	btfsc	_msg+5,0,c
 18959  013C2E  D002               	bra	i2u1064_45
 18960  013C30  924C               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 18961  013C32  D001               	bra	i2u1064_46
 18962  013C34                     i2u1064_45:
 18963  013C34  824C               	bsf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 18964  013C36                     i2u1064_46:
 18965                           
 18966                           ;RemoteCan.c: 168: steering_correction = msg.data[0];
 18967  013C36  C015  F0EA         	movff	_msg+4,_steering_correction	;volatile
 18968  013C3A  D000               	goto	i2l8526
 18969  013C3C                     i2l8526:
 18970                           
 18971                           ;RemoteCan.c: 169: }
 18972                           ;RemoteCan.c: 171: if (id == 0b00000010001) {
 18973  013C3C  0E11               	movlw	17
 18974  013C3E  1801               	xorwf	_id,w,c	;volatile
 18975  013C40  1002               	iorwf	_id+1,w,c	;volatile
 18976  013C42  1003               	iorwf	_id+2,w,c	;volatile
 18977  013C44  1004               	iorwf	_id+3,w,c	;volatile
 18978  013C46  A4D8               	btfss	status,2,c
 18979  013C48  D026               	goto	i2l804
 18980                           
 18981                           ;RemoteCan.c: 172: FWD_sensor = (msg.data[0] & 0b01000000) >> 6;
 18982  013C4A  C015  F060         	movff	_msg+4,??_ISR_alta
 18983  013C4E  0E06               	movlw	6
 18984  013C50  0100               	movlb	0	; () banked
 18985  013C52  6F61               	movwf	(??_ISR_alta+1)& (0+255),b
 18986  013C54                     i2u1066_45:
 18987  013C54  0100               	movlb	0	; () banked
 18988  013C56  90D8               	bcf	status,0,c
 18989  013C58  3360               	rrcf	??_ISR_alta& (0+255),f,b
 18990  013C5A  0100               	movlb	0	; () banked
 18991  013C5C  2F61               	decfsz	(??_ISR_alta+1)& (0+255),f,b
 18992  013C5E  D7FA               	goto	i2u1066_45
 18993  013C60  0100               	movlb	0	; () banked
 18994  013C62  3160               	rrcf	??_ISR_alta& (0+255),w,b
 18995  013C64  0100               	movlb	0	; () banked
 18996  013C66  B0D8               	btfsc	status,0,c
 18997  013C68  D002               	bra	i2u1067_45
 18998  013C6A  9A4A               	bcf	_FWD_sensor/(0+8),_FWD_sensor& (0+7),c	;volatile
 18999  013C6C  D001               	bra	i2u1067_46
 19000  013C6E                     i2u1067_45:
 19001  013C6E  8A4A               	bsf	_FWD_sensor/(0+8),_FWD_sensor& (0+7),c	;volatile
 19002  013C70                     i2u1067_46:
 19003                           
 19004                           ;RemoteCan.c: 173: BKWD_sensor = (msg.data[0] & 0b00001000) >> 3;
 19005  013C70  C015  F060         	movff	_msg+4,??_ISR_alta
 19006  013C74  0100               	movlb	0	; () banked
 19007  013C76  90D8               	bcf	status,0,c
 19008  013C78  3360               	rrcf	??_ISR_alta& (0+255),f,b
 19009  013C7A  0100               	movlb	0	; () banked
 19010  013C7C  90D8               	bcf	status,0,c
 19011  013C7E  3360               	rrcf	??_ISR_alta& (0+255),f,b
 19012  013C80  0100               	movlb	0	; () banked
 19013  013C82  90D8               	bcf	status,0,c
 19014  013C84  3360               	rrcf	??_ISR_alta& (0+255),f,b
 19015  013C86  0100               	movlb	0	; () banked
 19016  013C88  3160               	rrcf	??_ISR_alta& (0+255),w,b
 19017  013C8A  0100               	movlb	0	; () banked
 19018  013C8C  B0D8               	btfsc	status,0,c
 19019  013C8E  D002               	bra	i2u1068_45
 19020  013C90  924A               	bcf	_BKWD_sensor/(0+8),_BKWD_sensor& (0+7),c	;volatile
 19021  013C92  D001               	bra	i2u1068_46
 19022  013C94                     i2u1068_45:
 19023  013C94  824A               	bsf	_BKWD_sensor/(0+8),_BKWD_sensor& (0+7),c	;volatile
 19024  013C96                     i2u1068_46:
 19025  013C96                     i2l804:
 19026                           
 19027                           ;RemoteCan.c: 174: }
 19028                           ;RemoteCan.c: 175: if (id == 0xAA) {
 19029  013C96  0EAA               	movlw	170
 19030  013C98  1801               	xorwf	_id,w,c	;volatile
 19031  013C9A  1002               	iorwf	_id+1,w,c	;volatile
 19032  013C9C  1003               	iorwf	_id+2,w,c	;volatile
 19033  013C9E  1004               	iorwf	_id+3,w,c	;volatile
 19034  013CA0  A4D8               	btfss	status,2,c
 19035  013CA2  D00B               	goto	i2l8534
 19036                           
 19037                           ;RemoteCan.c: 176: user_data = msg.data[1];
 19038  013CA4  C016  F00D         	movff	_msg+5,_user_data	;volatile
 19039  013CA8  6A0E               	clrf	_user_data+1,c	;volatile
 19040                           
 19041                           ;RemoteCan.c: 177: user_data = ((user_data << 8) | msg.data[0]);
 19042  013CAA  500D               	movf	_user_data,w,c	;volatile
 19043  013CAC  0100               	movlb	0	; () banked
 19044  013CAE  6F60               	movwf	??_ISR_alta& (0+255),b
 19045  013CB0  5015               	movf	_msg+4,w,c
 19046  013CB2  6E0D               	movwf	_user_data,c	;volatile
 19047  013CB4  C060  F00E         	movff	??_ISR_alta,_user_data+1	;volatile
 19048  013CB8  D000               	goto	i2l8534
 19049  013CBA                     i2l8534:
 19050                           
 19051                           ;RemoteCan.c: 178: }
 19052                           ;RemoteCan.c: 180: if (id == 0b00000000100) {
 19053  013CBA  0E04               	movlw	4
 19054  013CBC  1801               	xorwf	_id,w,c	;volatile
 19055  013CBE  1002               	iorwf	_id+1,w,c	;volatile
 19056  013CC0  1003               	iorwf	_id+2,w,c	;volatile
 19057  013CC2  1004               	iorwf	_id+3,w,c	;volatile
 19058  013CC4  B4D8               	btfsc	status,2,c
 19059                           
 19060                           ;RemoteCan.c: 181: if (RTR_Flag == 1) {
 19061  013CC6  AE4A               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19062  013CC8  D028               	goto	i2l8548
 19063                           
 19064                           ;RemoteCan.c: 182: pr_time_4 = time_counter;
 19065  013CCA  C005  F10D         	movff	_time_counter,_pr_time_4	;volatile
 19066  013CCE  C006  F10E         	movff	_time_counter+1,_pr_time_4+1	;volatile
 19067  013CD2  C007  F10F         	movff	_time_counter+2,_pr_time_4+2	;volatile
 19068  013CD6  C008  F110         	movff	_time_counter+3,_pr_time_4+3	;volatile
 19069                           
 19070                           ;RemoteCan.c: 183: data[0] = 0x03;
 19071  013CDA  0E03               	movlw	3
 19072  013CDC  0101               	movlb	1	; () banked
 19073  013CDE  6F1D               	movwf	_data& (0+255),b
 19074                           
 19075                           ; BSR set to: 1
 19076                           ;RemoteCan.c: 184: _delay((unsigned long)((10)*(16000000/4000000.0)));
 19077  013CE0  0E0D               	movlw	13
 19078  013CE2                     i2u1121_47:
 19079  013CE2  2EE8               	decfsz	wreg,f,c
 19080  013CE4  D7FE               	goto	i2u1121_47
 19081  013CE6  F000               	nop	
 19082                           
 19083                           ;RemoteCan.c: 185: while (CANisTxReady() != 1);
 19084  013CE8  D000               	goto	i2l8544
 19085  013CEA                     i2l8544:
 19086  013CEA  EC56  F0AF         	call	i2_CANisTxReady	;wreg free
 19087  013CEE  06E8               	decf	wreg,f,c
 19088  013CF0  A4D8               	btfss	status,2,c
 19089  013CF2  D7FB               	goto	i2l8544
 19090                           
 19091                           ;RemoteCan.c: 186: CANsendMessage(0b00000000100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 19092  013CF4  0E04               	movlw	4
 19093  013CF6  6E39               	movwf	i2CANsendMessage@identifier,c
 19094  013CF8  0E00               	movlw	0
 19095  013CFA  6E3A               	movwf	i2CANsendMessage@identifier+1,c
 19096  013CFC  0E00               	movlw	0
 19097  013CFE  6E3B               	movwf	i2CANsendMessage@identifier+2,c
 19098  013D00  0E00               	movlw	0
 19099  013D02  6E3C               	movwf	i2CANsendMessage@identifier+3,c
 19100  013D04  0E1D               	movlw	low _data
 19101  013D06  6E3D               	movwf	i2CANsendMessage@data,c
 19102  013D08  0E01               	movlw	high _data
 19103  013D0A  6E3E               	movwf	i2CANsendMessage@data+1,c
 19104  013D0C  0E08               	movlw	8
 19105  013D0E  6E3F               	movwf	i2CANsendMessage@dataLength,c
 19106  013D10  0EBC               	movlw	188
 19107  013D12  6E40               	movwf	i2CANsendMessage@flags,c
 19108  013D14  EC99  F091         	call	i2_CANsendMessage	;wreg free
 19109  013D18  D000               	goto	i2l8548
 19110  013D1A                     i2l8548:
 19111                           
 19112                           ;RemoteCan.c: 192: }
 19113                           ;RemoteCan.c: 193: }
 19114                           ;RemoteCan.c: 194: }
 19115                           ;RemoteCan.c: 195: PIR3bits.RXB1IF = 0;
 19116  013D1A  92A4               	bcf	4004,1,c	;volatile
 19117                           
 19118                           ;RemoteCan.c: 196: PIR3bits.RXB0IF = 0;
 19119  013D1C  90A4               	bcf	4004,0,c	;volatile
 19120  013D1E  D000               	goto	i2l811
 19121  013D20                     i2l811:
 19122  013D20  C06F  FFF5         	movff	??_ISR_alta+15,tablat
 19123  013D24  C06E  FFF8         	movff	??_ISR_alta+14,tblptru
 19124  013D28  C06D  FFF7         	movff	??_ISR_alta+13,tblptrh
 19125  013D2C  C06C  FFF6         	movff	??_ISR_alta+12,tblptrl
 19126  013D30  C06B  FFF4         	movff	??_ISR_alta+11,prodh
 19127  013D34  C06A  FFF3         	movff	??_ISR_alta+10,prodl
 19128  013D38  C069  FFDA         	movff	??_ISR_alta+9,fsr2h
 19129  013D3C  C068  FFD9         	movff	??_ISR_alta+8,fsr2l
 19130  013D40  C067  FFE2         	movff	??_ISR_alta+7,fsr1h
 19131  013D44  C066  FFE1         	movff	??_ISR_alta+6,fsr1l
 19132  013D48  C065  FFEA         	movff	??_ISR_alta+5,fsr0h
 19133  013D4C  C064  FFE9         	movff	??_ISR_alta+4,fsr0l
 19134  013D50  C063  FFFB         	movff	??_ISR_alta+3,pclatu
 19135  013D54  C062  FFFA         	movff	??_ISR_alta+2,pclath
 19136  013D58  0011               	retfie		f
 19137  013D5A                     __end_of_ISR_alta:
 19138                           	opt stack 0
 19139                           pclatu	equ	0xFFB
 19140                           pclath	equ	0xFFA
 19141                           tblptru	equ	0xFF8
 19142                           tblptrh	equ	0xFF7
 19143                           tblptrl	equ	0xFF6
 19144                           tablat	equ	0xFF5
 19145                           prodh	equ	0xFF4
 19146                           prodl	equ	0xFF3
 19147                           intcon	equ	0xFF2
 19148                           postinc0	equ	0xFEE
 19149                           fsr0h	equ	0xFEA
 19150                           fsr0l	equ	0xFE9
 19151                           wreg	equ	0xFE8
 19152                           indf1	equ	0xFE7
 19153                           plusw1	equ	0xFE3
 19154                           fsr1h	equ	0xFE2
 19155                           fsr1l	equ	0xFE1
 19156                           bsr	equ	0xFE0
 19157                           indf2	equ	0xFDF
 19158                           postinc2	equ	0xFDE
 19159                           plusw2	equ	0xFDB
 19160                           fsr2h	equ	0xFDA
 19161                           fsr2l	equ	0xFD9
 19162                           status	equ	0xFD8
 19163                           
 19164 ;; *************** function i2_CANsendMessage *****************
 19165 ;; Defined at:
 19166 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 19167 ;; Parameters:    Size  Location     Type
 19168 ;;  identifier      4   17[COMRAM] unsigned long 
 19169 ;;  data            2   21[COMRAM] PTR unsigned char 
 19170 ;;		 -> data_speed(8), park_assist_state(8), data_steering(8), data_brake(8), 
 19171 ;;		 -> data(8), 
 19172 ;;  dataLength      1   23[COMRAM] unsigned char 
 19173 ;;  flags           1   24[COMRAM] enum E16950
 19174 ;; Auto vars:     Size  Location     Type
 19175 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 19176 ;; Return value:  Size  Location     Type
 19177 ;;		None               void
 19178 ;; Registers used:
 19179 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19180 ;; Tracked objects:
 19181 ;;		On entry : 0/0
 19182 ;;		On exit  : 0/0
 19183 ;;		Unchanged: 0/0
 19184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19185 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19186 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19187 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19188 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19189 ;;Total ram usage:       16 bytes
 19190 ;; Hardware stack levels used:    1
 19191 ;; This function calls:
 19192 ;;		Nothing
 19193 ;; This function is called by:
 19194 ;;		_ISR_alta
 19195 ;; This function uses a non-reentrant model
 19196 ;;
 19197                           
 19198                           	psect	text63
 19199  012332                     __ptext63:
 19200                           	opt stack 0
 19201  012332                     i2_CANsendMessage:
 19202                           	opt stack 20
 19203                           
 19204                           ;inc\CANlib.h: 296: unsigned long tamp;
 19205                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 19206                           
 19207                           ;incstack = 0
 19208  012332  010F               	movlb	15	; () banked
 19209  012334  B740               	btfsc	64,3,b	;volatile
 19210  012336  D118               	goto	i2l385
 19211                           
 19212                           ; BSR set to: 15
 19213                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 19214  012338  C03F  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 19215                           
 19216                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 19217  01233C  AC40               	btfss	i2CANsendMessage@flags,6,c
 19218  01233E  D003               	goto	i2l386
 19219                           
 19220                           ; BSR set to: 15
 19221                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 19222  012340  010F               	movlb	15	; () banked
 19223  012342  8D45               	bsf	69,6,b	;volatile
 19224  012344  D002               	goto	i2l387
 19225  012346                     i2l386:
 19226                           
 19227                           ; BSR set to: 15
 19228                           ;inc\CANlib.h: 302: else
 19229                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 19230  012346  010F               	movlb	15	; () banked
 19231  012348  9D45               	bcf	69,6,b	;volatile
 19232  01234A                     i2l387:
 19233                           
 19234                           ; BSR set to: 15
 19235                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 19236  01234A  A640               	btfss	i2CANsendMessage@flags,3,c
 19237  01234C  D067               	goto	i2l388
 19238                           
 19239                           ; BSR set to: 15
 19240                           ;inc\CANlib.h: 306: {
 19241                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 19242  01234E  5039               	movf	i2CANsendMessage@identifier,w,c
 19243  012350  6E45               	movwf	i2CANsendMessage@tamp,c
 19244  012352  6A46               	clrf	i2CANsendMessage@tamp+1,c
 19245  012354  6A47               	clrf	i2CANsendMessage@tamp+2,c
 19246  012356  6A48               	clrf	i2CANsendMessage@tamp+3,c
 19247                           
 19248                           ; BSR set to: 15
 19249                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 19250  012358  C045  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 19251                           
 19252                           ; BSR set to: 15
 19253                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 19254  01235C  0E00               	movlw	0
 19255  01235E  1439               	andwf	i2CANsendMessage@identifier,w,c
 19256  012360  6E45               	movwf	i2CANsendMessage@tamp,c
 19257  012362  0EFF               	movlw	255
 19258  012364  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 19259  012366  6E46               	movwf	i2CANsendMessage@tamp+1,c
 19260  012368  0E00               	movlw	0
 19261  01236A  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 19262  01236C  6E47               	movwf	i2CANsendMessage@tamp+2,c
 19263  01236E  0E00               	movlw	0
 19264  012370  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 19265  012372  6E48               	movwf	i2CANsendMessage@tamp+3,c
 19266                           
 19267                           ; BSR set to: 15
 19268                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 19269  012374  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19270  012378  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19271  01237C  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19272  012380  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19273  012384  C042  F041         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19274  012388  C043  F042         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19275  01238C  C044  F043         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19276  012390  6A44               	clrf	??i2_CANsendMessage+3,c
 19277  012392  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19278  012396  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19279  01239A  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19280  01239E  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19281                           
 19282                           ; BSR set to: 15
 19283                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 19284  0123A2  C045  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 19285                           
 19286                           ; BSR set to: 15
 19287                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 19288  0123A6  0E00               	movlw	0
 19289  0123A8  010F               	movlb	15	; () banked
 19290  0123AA  6F42               	movwf	66,b	;volatile
 19291                           
 19292                           ; BSR set to: 15
 19293                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 19294  0123AC  010F               	movlb	15	; () banked
 19295  0123AE  8742               	bsf	66,3,b	;volatile
 19296                           
 19297                           ; BSR set to: 15
 19298                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 19299  0123B0  A03B               	btfss	i2CANsendMessage@identifier+2,0,c
 19300  0123B2  D002               	goto	i2l389
 19301                           
 19302                           ; BSR set to: 15
 19303                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 19304  0123B4  010F               	movlb	15	; () banked
 19305  0123B6  8142               	bsf	66,0,b	;volatile
 19306  0123B8                     i2l389:
 19307                           
 19308                           ; BSR set to: 15
 19309                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 19310  0123B8  A23B               	btfss	i2CANsendMessage@identifier+2,1,c
 19311  0123BA  D002               	goto	i2l390
 19312                           
 19313                           ; BSR set to: 15
 19314                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 19315  0123BC  010F               	movlb	15	; () banked
 19316  0123BE  8342               	bsf	66,1,b	;volatile
 19317  0123C0                     i2l390:
 19318                           
 19319                           ; BSR set to: 15
 19320                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 19321  0123C0  A43B               	btfss	i2CANsendMessage@identifier+2,2,c
 19322  0123C2  D002               	goto	i2l391
 19323                           
 19324                           ; BSR set to: 15
 19325                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 19326  0123C4  010F               	movlb	15	; () banked
 19327  0123C6  8B42               	bsf	66,5,b	;volatile
 19328  0123C8                     i2l391:
 19329                           
 19330                           ; BSR set to: 15
 19331                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 19332  0123C8  A63B               	btfss	i2CANsendMessage@identifier+2,3,c
 19333  0123CA  D002               	goto	i2l392
 19334                           
 19335                           ; BSR set to: 15
 19336                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 19337  0123CC  010F               	movlb	15	; () banked
 19338  0123CE  8D42               	bsf	66,6,b	;volatile
 19339  0123D0                     i2l392:
 19340                           
 19341                           ; BSR set to: 15
 19342                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 19343  0123D0  A83B               	btfss	i2CANsendMessage@identifier+2,4,c
 19344  0123D2  D003               	goto	i2l6716
 19345                           
 19346                           ; BSR set to: 15
 19347                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 19348  0123D4  010F               	movlb	15	; () banked
 19349  0123D6  8F42               	bsf	66,7,b	;volatile
 19350  0123D8  D000               	goto	i2l6716
 19351  0123DA                     i2l6716:
 19352                           
 19353                           ; BSR set to: 15
 19354                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 19355  0123DA  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19356  0123DE  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19357  0123E2  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19358  0123E6  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19359  0123EA  0E16               	movlw	22
 19360  0123EC  D005               	goto	i2u802_40
 19361  0123EE                     i2u802_45:
 19362  0123EE  90D8               	bcf	status,0,c
 19363  0123F0  3244               	rrcf	??i2_CANsendMessage+3,f,c
 19364  0123F2  3243               	rrcf	??i2_CANsendMessage+2,f,c
 19365  0123F4  3242               	rrcf	??i2_CANsendMessage+1,f,c
 19366  0123F6  3241               	rrcf	??i2_CANsendMessage,f,c
 19367  0123F8                     i2u802_40:
 19368  0123F8  2EE8               	decfsz	wreg,f,c
 19369  0123FA  D7F9               	goto	i2u802_45
 19370  0123FC  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19371  012400  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19372  012404  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19373  012408  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19374                           
 19375                           ; BSR set to: 15
 19376                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 19377  01240C  5045               	movf	i2CANsendMessage@tamp,w,c
 19378  01240E  6E45               	movwf	i2CANsendMessage@tamp,c
 19379  012410  6A46               	clrf	i2CANsendMessage@tamp+1,c
 19380  012412  6A47               	clrf	i2CANsendMessage@tamp+2,c
 19381  012414  6A48               	clrf	i2CANsendMessage@tamp+3,c
 19382                           
 19383                           ; BSR set to: 15
 19384                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 19385  012416  C045  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19386                           
 19387                           ;inc\CANlib.h: 332: }
 19388  01241A  D04E               	goto	i2l6736
 19389  01241C                     i2l388:
 19390                           
 19391                           ; BSR set to: 15
 19392                           ;inc\CANlib.h: 334: else
 19393                           ;inc\CANlib.h: 336: {
 19394                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 19395  01241C  010F               	movlb	15	; () banked
 19396  01241E  9742               	bcf	66,3,b	;volatile
 19397                           
 19398                           ; BSR set to: 15
 19399                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 19400  012420  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19401  012424  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19402  012428  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19403  01242C  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19404  012430  0E04               	movlw	4
 19405  012432  D005               	goto	i2u803_40
 19406  012434                     i2u803_45:
 19407  012434  90D8               	bcf	status,0,c
 19408  012436  3244               	rrcf	??i2_CANsendMessage+3,f,c
 19409  012438  3243               	rrcf	??i2_CANsendMessage+2,f,c
 19410  01243A  3242               	rrcf	??i2_CANsendMessage+1,f,c
 19411  01243C  3241               	rrcf	??i2_CANsendMessage,f,c
 19412  01243E                     i2u803_40:
 19413  01243E  2EE8               	decfsz	wreg,f,c
 19414  012440  D7F9               	goto	i2u803_45
 19415  012442  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19416  012446  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19417  01244A  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19418  01244E  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19419                           
 19420                           ; BSR set to: 15
 19421                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 19422  012452  5045               	movf	i2CANsendMessage@tamp,w,c
 19423  012454  6E45               	movwf	i2CANsendMessage@tamp,c
 19424  012456  6A46               	clrf	i2CANsendMessage@tamp+1,c
 19425  012458  6A47               	clrf	i2CANsendMessage@tamp+2,c
 19426  01245A  6A48               	clrf	i2CANsendMessage@tamp+3,c
 19427                           
 19428                           ; BSR set to: 15
 19429                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 19430  01245C  C045  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19431                           
 19432                           ; BSR set to: 15
 19433                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 19434  012460  0E07               	movlw	7
 19435  012462  1439               	andwf	i2CANsendMessage@identifier,w,c
 19436  012464  6E45               	movwf	i2CANsendMessage@tamp,c
 19437  012466  0E00               	movlw	0
 19438  012468  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 19439  01246A  6E46               	movwf	i2CANsendMessage@tamp+1,c
 19440  01246C  0E00               	movlw	0
 19441  01246E  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 19442  012470  6E47               	movwf	i2CANsendMessage@tamp+2,c
 19443  012472  0E00               	movlw	0
 19444  012474  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 19445  012476  6E48               	movwf	i2CANsendMessage@tamp+3,c
 19446                           
 19447                           ; BSR set to: 15
 19448                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 19449  012478  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19450  01247C  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19451  012480  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19452  012484  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19453  012488  0E05               	movlw	5
 19454  01248A                     i2u804_45:
 19455  01248A  90D8               	bcf	status,0,c
 19456  01248C  3641               	rlcf	??i2_CANsendMessage,f,c
 19457  01248E  3642               	rlcf	??i2_CANsendMessage+1,f,c
 19458  012490  3643               	rlcf	??i2_CANsendMessage+2,f,c
 19459  012492  3644               	rlcf	??i2_CANsendMessage+3,f,c
 19460  012494  2EE8               	decfsz	wreg,f,c
 19461  012496  D7F9               	goto	i2u804_45
 19462  012498  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19463  01249C  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19464  0124A0  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19465  0124A4  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19466                           
 19467                           ; BSR set to: 15
 19468                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 19469  0124A8  010F               	movlb	15	; () banked
 19470  0124AA  5142               	movf	66,w,b	;volatile
 19471  0124AC  0B1F               	andlw	31
 19472  0124AE  010F               	movlb	15	; () banked
 19473  0124B0  6F42               	movwf	66,b	;volatile
 19474                           
 19475                           ; BSR set to: 15
 19476                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 19477  0124B2  C045  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 19478  0124B6  D000               	goto	i2l6736
 19479  0124B8                     i2l6736:
 19480                           
 19481                           ; BSR set to: 15
 19482                           ;inc\CANlib.h: 347: }
 19483                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 19484  0124B8  A040               	btfss	i2CANsendMessage@flags,0,c
 19485  0124BA  D003               	goto	i2l395
 19486                           
 19487                           ; BSR set to: 15
 19488                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 19489  0124BC  010F               	movlb	15	; () banked
 19490  0124BE  8140               	bsf	64,0,b	;volatile
 19491  0124C0  D002               	goto	i2l396
 19492  0124C2                     i2l395:
 19493                           
 19494                           ; BSR set to: 15
 19495                           ;inc\CANlib.h: 351: else
 19496                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 19497  0124C2  010F               	movlb	15	; () banked
 19498  0124C4  9140               	bcf	64,0,b	;volatile
 19499  0124C6                     i2l396:
 19500                           
 19501                           ; BSR set to: 15
 19502                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 19503  0124C6  A240               	btfss	i2CANsendMessage@flags,1,c
 19504  0124C8  D003               	goto	i2l397
 19505                           
 19506                           ; BSR set to: 15
 19507                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 19508  0124CA  010F               	movlb	15	; () banked
 19509  0124CC  8340               	bsf	64,1,b	;volatile
 19510  0124CE  D003               	goto	i2l6742
 19511  0124D0                     i2l397:
 19512                           
 19513                           ; BSR set to: 15
 19514                           ;inc\CANlib.h: 355: else
 19515                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 19516  0124D0  010F               	movlb	15	; () banked
 19517  0124D2  9340               	bcf	64,1,b	;volatile
 19518  0124D4  D000               	goto	i2l6742
 19519  0124D6                     i2l6742:
 19520                           
 19521                           ; BSR set to: 15
 19522                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 19523  0124D6  C03D  FFD9         	movff	i2CANsendMessage@data,fsr2l
 19524  0124DA  C03E  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 19525  0124DE  50DF               	movf	indf2,w,c
 19526  0124E0  010F               	movlb	15	; () banked
 19527  0124E2  6F46               	movwf	70,b	;volatile
 19528                           
 19529                           ; BSR set to: 15
 19530                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 19531  0124E4  EE20 F001          	lfsr	2,1
 19532  0124E8  503D               	movf	i2CANsendMessage@data,w,c
 19533  0124EA  26D9               	addwf	fsr2l,f,c
 19534  0124EC  503E               	movf	i2CANsendMessage@data+1,w,c
 19535  0124EE  22DA               	addwfc	fsr2h,f,c
 19536  0124F0  50DF               	movf	indf2,w,c
 19537  0124F2  010F               	movlb	15	; () banked
 19538  0124F4  6F47               	movwf	71,b	;volatile
 19539                           
 19540                           ; BSR set to: 15
 19541                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 19542  0124F6  EE20 F002          	lfsr	2,2
 19543  0124FA  503D               	movf	i2CANsendMessage@data,w,c
 19544  0124FC  26D9               	addwf	fsr2l,f,c
 19545  0124FE  503E               	movf	i2CANsendMessage@data+1,w,c
 19546  012500  22DA               	addwfc	fsr2h,f,c
 19547  012502  50DF               	movf	indf2,w,c
 19548  012504  010F               	movlb	15	; () banked
 19549  012506  6F48               	movwf	72,b	;volatile
 19550                           
 19551                           ; BSR set to: 15
 19552                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 19553  012508  EE20 F003          	lfsr	2,3
 19554  01250C  503D               	movf	i2CANsendMessage@data,w,c
 19555  01250E  26D9               	addwf	fsr2l,f,c
 19556  012510  503E               	movf	i2CANsendMessage@data+1,w,c
 19557  012512  22DA               	addwfc	fsr2h,f,c
 19558  012514  50DF               	movf	indf2,w,c
 19559  012516  010F               	movlb	15	; () banked
 19560  012518  6F49               	movwf	73,b	;volatile
 19561                           
 19562                           ; BSR set to: 15
 19563                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 19564  01251A  EE20 F004          	lfsr	2,4
 19565  01251E  503D               	movf	i2CANsendMessage@data,w,c
 19566  012520  26D9               	addwf	fsr2l,f,c
 19567  012522  503E               	movf	i2CANsendMessage@data+1,w,c
 19568  012524  22DA               	addwfc	fsr2h,f,c
 19569  012526  50DF               	movf	indf2,w,c
 19570  012528  010F               	movlb	15	; () banked
 19571  01252A  6F4A               	movwf	74,b	;volatile
 19572                           
 19573                           ; BSR set to: 15
 19574                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 19575  01252C  EE20 F005          	lfsr	2,5
 19576  012530  503D               	movf	i2CANsendMessage@data,w,c
 19577  012532  26D9               	addwf	fsr2l,f,c
 19578  012534  503E               	movf	i2CANsendMessage@data+1,w,c
 19579  012536  22DA               	addwfc	fsr2h,f,c
 19580  012538  50DF               	movf	indf2,w,c
 19581  01253A  010F               	movlb	15	; () banked
 19582  01253C  6F4B               	movwf	75,b	;volatile
 19583                           
 19584                           ; BSR set to: 15
 19585                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 19586  01253E  EE20 F006          	lfsr	2,6
 19587  012542  503D               	movf	i2CANsendMessage@data,w,c
 19588  012544  26D9               	addwf	fsr2l,f,c
 19589  012546  503E               	movf	i2CANsendMessage@data+1,w,c
 19590  012548  22DA               	addwfc	fsr2h,f,c
 19591  01254A  50DF               	movf	indf2,w,c
 19592  01254C  010F               	movlb	15	; () banked
 19593  01254E  6F4C               	movwf	76,b	;volatile
 19594                           
 19595                           ; BSR set to: 15
 19596                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 19597  012550  EE20 F007          	lfsr	2,7
 19598  012554  503D               	movf	i2CANsendMessage@data,w,c
 19599  012556  26D9               	addwf	fsr2l,f,c
 19600  012558  503E               	movf	i2CANsendMessage@data+1,w,c
 19601  01255A  22DA               	addwfc	fsr2h,f,c
 19602  01255C  50DF               	movf	indf2,w,c
 19603  01255E  010F               	movlb	15	; () banked
 19604  012560  6F4D               	movwf	77,b	;volatile
 19605                           
 19606                           ; BSR set to: 15
 19607                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 19608  012562  010F               	movlb	15	; () banked
 19609  012564  8740               	bsf	64,3,b	;volatile
 19610                           
 19611                           ; BSR set to: 15
 19612                           ;inc\CANlib.h: 368: return;
 19613  012566  0012               	return	
 19614  012568                     i2l385:
 19615                           
 19616                           ; BSR set to: 15
 19617                           ;inc\CANlib.h: 369: }
 19618                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 19619  012568  010F               	movlb	15	; () banked
 19620  01256A  B730               	btfsc	48,3,b	;volatile
 19621  01256C  D118               	goto	i2l400
 19622                           
 19623                           ; BSR set to: 15
 19624                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 19625  01256E  C03F  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 19626                           
 19627                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 19628  012572  AC40               	btfss	i2CANsendMessage@flags,6,c
 19629  012574  D003               	goto	i2l401
 19630                           
 19631                           ; BSR set to: 15
 19632                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 19633  012576  010F               	movlb	15	; () banked
 19634  012578  8D35               	bsf	53,6,b	;volatile
 19635  01257A  D002               	goto	i2l402
 19636  01257C                     i2l401:
 19637                           
 19638                           ; BSR set to: 15
 19639                           ;inc\CANlib.h: 378: else
 19640                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 19641  01257C  010F               	movlb	15	; () banked
 19642  01257E  9D35               	bcf	53,6,b	;volatile
 19643  012580                     i2l402:
 19644                           
 19645                           ; BSR set to: 15
 19646                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 19647  012580  A640               	btfss	i2CANsendMessage@flags,3,c
 19648  012582  D067               	goto	i2l403
 19649                           
 19650                           ; BSR set to: 15
 19651                           ;inc\CANlib.h: 382: {
 19652                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 19653  012584  5039               	movf	i2CANsendMessage@identifier,w,c
 19654  012586  6E45               	movwf	i2CANsendMessage@tamp,c
 19655  012588  6A46               	clrf	i2CANsendMessage@tamp+1,c
 19656  01258A  6A47               	clrf	i2CANsendMessage@tamp+2,c
 19657  01258C  6A48               	clrf	i2CANsendMessage@tamp+3,c
 19658                           
 19659                           ; BSR set to: 15
 19660                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 19661  01258E  C045  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 19662                           
 19663                           ; BSR set to: 15
 19664                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 19665  012592  0E00               	movlw	0
 19666  012594  1439               	andwf	i2CANsendMessage@identifier,w,c
 19667  012596  6E45               	movwf	i2CANsendMessage@tamp,c
 19668  012598  0EFF               	movlw	255
 19669  01259A  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 19670  01259C  6E46               	movwf	i2CANsendMessage@tamp+1,c
 19671  01259E  0E00               	movlw	0
 19672  0125A0  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 19673  0125A2  6E47               	movwf	i2CANsendMessage@tamp+2,c
 19674  0125A4  0E00               	movlw	0
 19675  0125A6  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 19676  0125A8  6E48               	movwf	i2CANsendMessage@tamp+3,c
 19677                           
 19678                           ; BSR set to: 15
 19679                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 19680  0125AA  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19681  0125AE  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19682  0125B2  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19683  0125B6  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19684  0125BA  C042  F041         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19685  0125BE  C043  F042         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19686  0125C2  C044  F043         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19687  0125C6  6A44               	clrf	??i2_CANsendMessage+3,c
 19688  0125C8  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19689  0125CC  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19690  0125D0  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19691  0125D4  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19692                           
 19693                           ; BSR set to: 15
 19694                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 19695  0125D8  C045  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 19696                           
 19697                           ; BSR set to: 15
 19698                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 19699  0125DC  0E00               	movlw	0
 19700  0125DE  010F               	movlb	15	; () banked
 19701  0125E0  6F32               	movwf	50,b	;volatile
 19702                           
 19703                           ; BSR set to: 15
 19704                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 19705  0125E2  010F               	movlb	15	; () banked
 19706  0125E4  8732               	bsf	50,3,b	;volatile
 19707                           
 19708                           ; BSR set to: 15
 19709                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 19710  0125E6  A03B               	btfss	i2CANsendMessage@identifier+2,0,c
 19711  0125E8  D002               	goto	i2l404
 19712                           
 19713                           ; BSR set to: 15
 19714                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 19715  0125EA  010F               	movlb	15	; () banked
 19716  0125EC  8132               	bsf	50,0,b	;volatile
 19717  0125EE                     i2l404:
 19718                           
 19719                           ; BSR set to: 15
 19720                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 19721  0125EE  A23B               	btfss	i2CANsendMessage@identifier+2,1,c
 19722  0125F0  D002               	goto	i2l405
 19723                           
 19724                           ; BSR set to: 15
 19725                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 19726  0125F2  010F               	movlb	15	; () banked
 19727  0125F4  8332               	bsf	50,1,b	;volatile
 19728  0125F6                     i2l405:
 19729                           
 19730                           ; BSR set to: 15
 19731                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 19732  0125F6  A43B               	btfss	i2CANsendMessage@identifier+2,2,c
 19733  0125F8  D002               	goto	i2l406
 19734                           
 19735                           ; BSR set to: 15
 19736                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 19737  0125FA  010F               	movlb	15	; () banked
 19738  0125FC  8B32               	bsf	50,5,b	;volatile
 19739  0125FE                     i2l406:
 19740                           
 19741                           ; BSR set to: 15
 19742                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 19743  0125FE  A63B               	btfss	i2CANsendMessage@identifier+2,3,c
 19744  012600  D002               	goto	i2l407
 19745                           
 19746                           ; BSR set to: 15
 19747                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 19748  012602  010F               	movlb	15	; () banked
 19749  012604  8D32               	bsf	50,6,b	;volatile
 19750  012606                     i2l407:
 19751                           
 19752                           ; BSR set to: 15
 19753                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 19754  012606  A83B               	btfss	i2CANsendMessage@identifier+2,4,c
 19755  012608  D003               	goto	i2l6792
 19756                           
 19757                           ; BSR set to: 15
 19758                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 19759  01260A  010F               	movlb	15	; () banked
 19760  01260C  8F32               	bsf	50,7,b	;volatile
 19761  01260E  D000               	goto	i2l6792
 19762  012610                     i2l6792:
 19763                           
 19764                           ; BSR set to: 15
 19765                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 19766  012610  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19767  012614  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19768  012618  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19769  01261C  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19770  012620  0E16               	movlw	22
 19771  012622  D005               	goto	i2u815_40
 19772  012624                     i2u815_45:
 19773  012624  90D8               	bcf	status,0,c
 19774  012626  3244               	rrcf	??i2_CANsendMessage+3,f,c
 19775  012628  3243               	rrcf	??i2_CANsendMessage+2,f,c
 19776  01262A  3242               	rrcf	??i2_CANsendMessage+1,f,c
 19777  01262C  3241               	rrcf	??i2_CANsendMessage,f,c
 19778  01262E                     i2u815_40:
 19779  01262E  2EE8               	decfsz	wreg,f,c
 19780  012630  D7F9               	goto	i2u815_45
 19781  012632  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19782  012636  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19783  01263A  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19784  01263E  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19785                           
 19786                           ; BSR set to: 15
 19787                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 19788  012642  5045               	movf	i2CANsendMessage@tamp,w,c
 19789  012644  6E45               	movwf	i2CANsendMessage@tamp,c
 19790  012646  6A46               	clrf	i2CANsendMessage@tamp+1,c
 19791  012648  6A47               	clrf	i2CANsendMessage@tamp+2,c
 19792  01264A  6A48               	clrf	i2CANsendMessage@tamp+3,c
 19793                           
 19794                           ; BSR set to: 15
 19795                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 19796  01264C  C045  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 19797                           
 19798                           ;inc\CANlib.h: 407: }
 19799  012650  D04E               	goto	i2l6812
 19800  012652                     i2l403:
 19801                           
 19802                           ; BSR set to: 15
 19803                           ;inc\CANlib.h: 409: else
 19804                           ;inc\CANlib.h: 411: {
 19805                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 19806  012652  010F               	movlb	15	; () banked
 19807  012654  9732               	bcf	50,3,b	;volatile
 19808                           
 19809                           ; BSR set to: 15
 19810                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 19811  012656  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19812  01265A  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19813  01265E  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19814  012662  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19815  012666  0E04               	movlw	4
 19816  012668  D005               	goto	i2u816_40
 19817  01266A                     i2u816_45:
 19818  01266A  90D8               	bcf	status,0,c
 19819  01266C  3244               	rrcf	??i2_CANsendMessage+3,f,c
 19820  01266E  3243               	rrcf	??i2_CANsendMessage+2,f,c
 19821  012670  3242               	rrcf	??i2_CANsendMessage+1,f,c
 19822  012672  3241               	rrcf	??i2_CANsendMessage,f,c
 19823  012674                     i2u816_40:
 19824  012674  2EE8               	decfsz	wreg,f,c
 19825  012676  D7F9               	goto	i2u816_45
 19826  012678  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19827  01267C  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19828  012680  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19829  012684  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19830                           
 19831                           ; BSR set to: 15
 19832                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 19833  012688  5045               	movf	i2CANsendMessage@tamp,w,c
 19834  01268A  6E45               	movwf	i2CANsendMessage@tamp,c
 19835  01268C  6A46               	clrf	i2CANsendMessage@tamp+1,c
 19836  01268E  6A47               	clrf	i2CANsendMessage@tamp+2,c
 19837  012690  6A48               	clrf	i2CANsendMessage@tamp+3,c
 19838                           
 19839                           ; BSR set to: 15
 19840                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 19841  012692  C045  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 19842                           
 19843                           ; BSR set to: 15
 19844                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 19845  012696  0E07               	movlw	7
 19846  012698  1439               	andwf	i2CANsendMessage@identifier,w,c
 19847  01269A  6E45               	movwf	i2CANsendMessage@tamp,c
 19848  01269C  0E00               	movlw	0
 19849  01269E  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 19850  0126A0  6E46               	movwf	i2CANsendMessage@tamp+1,c
 19851  0126A2  0E00               	movlw	0
 19852  0126A4  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 19853  0126A6  6E47               	movwf	i2CANsendMessage@tamp+2,c
 19854  0126A8  0E00               	movlw	0
 19855  0126AA  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 19856  0126AC  6E48               	movwf	i2CANsendMessage@tamp+3,c
 19857                           
 19858                           ; BSR set to: 15
 19859                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 19860  0126AE  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19861  0126B2  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19862  0126B6  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19863  0126BA  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19864  0126BE  0E05               	movlw	5
 19865  0126C0                     i2u817_45:
 19866  0126C0  90D8               	bcf	status,0,c
 19867  0126C2  3641               	rlcf	??i2_CANsendMessage,f,c
 19868  0126C4  3642               	rlcf	??i2_CANsendMessage+1,f,c
 19869  0126C6  3643               	rlcf	??i2_CANsendMessage+2,f,c
 19870  0126C8  3644               	rlcf	??i2_CANsendMessage+3,f,c
 19871  0126CA  2EE8               	decfsz	wreg,f,c
 19872  0126CC  D7F9               	goto	i2u817_45
 19873  0126CE  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19874  0126D2  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19875  0126D6  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19876  0126DA  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19877                           
 19878                           ; BSR set to: 15
 19879                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 19880  0126DE  010F               	movlb	15	; () banked
 19881  0126E0  5132               	movf	50,w,b	;volatile
 19882  0126E2  0B1F               	andlw	31
 19883  0126E4  010F               	movlb	15	; () banked
 19884  0126E6  6F32               	movwf	50,b	;volatile
 19885                           
 19886                           ; BSR set to: 15
 19887                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 19888  0126E8  C045  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 19889  0126EC  D000               	goto	i2l6812
 19890  0126EE                     i2l6812:
 19891                           
 19892                           ; BSR set to: 15
 19893                           ;inc\CANlib.h: 422: }
 19894                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 19895  0126EE  A040               	btfss	i2CANsendMessage@flags,0,c
 19896  0126F0  D003               	goto	i2l410
 19897                           
 19898                           ; BSR set to: 15
 19899                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 19900  0126F2  010F               	movlb	15	; () banked
 19901  0126F4  8130               	bsf	48,0,b	;volatile
 19902  0126F6  D002               	goto	i2l411
 19903  0126F8                     i2l410:
 19904                           
 19905                           ; BSR set to: 15
 19906                           ;inc\CANlib.h: 426: else
 19907                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 19908  0126F8  010F               	movlb	15	; () banked
 19909  0126FA  9130               	bcf	48,0,b	;volatile
 19910  0126FC                     i2l411:
 19911                           
 19912                           ; BSR set to: 15
 19913                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 19914  0126FC  A240               	btfss	i2CANsendMessage@flags,1,c
 19915  0126FE  D003               	goto	i2l412
 19916                           
 19917                           ; BSR set to: 15
 19918                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 19919  012700  010F               	movlb	15	; () banked
 19920  012702  8330               	bsf	48,1,b	;volatile
 19921  012704  D003               	goto	i2l6818
 19922  012706                     i2l412:
 19923                           
 19924                           ; BSR set to: 15
 19925                           ;inc\CANlib.h: 430: else
 19926                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 19927  012706  010F               	movlb	15	; () banked
 19928  012708  9330               	bcf	48,1,b	;volatile
 19929  01270A  D000               	goto	i2l6818
 19930  01270C                     i2l6818:
 19931                           
 19932                           ; BSR set to: 15
 19933                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 19934  01270C  C03D  FFD9         	movff	i2CANsendMessage@data,fsr2l
 19935  012710  C03E  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 19936  012714  50DF               	movf	indf2,w,c
 19937  012716  010F               	movlb	15	; () banked
 19938  012718  6F36               	movwf	54,b	;volatile
 19939                           
 19940                           ; BSR set to: 15
 19941                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 19942  01271A  EE20 F001          	lfsr	2,1
 19943  01271E  503D               	movf	i2CANsendMessage@data,w,c
 19944  012720  26D9               	addwf	fsr2l,f,c
 19945  012722  503E               	movf	i2CANsendMessage@data+1,w,c
 19946  012724  22DA               	addwfc	fsr2h,f,c
 19947  012726  50DF               	movf	indf2,w,c
 19948  012728  010F               	movlb	15	; () banked
 19949  01272A  6F37               	movwf	55,b	;volatile
 19950                           
 19951                           ; BSR set to: 15
 19952                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 19953  01272C  EE20 F002          	lfsr	2,2
 19954  012730  503D               	movf	i2CANsendMessage@data,w,c
 19955  012732  26D9               	addwf	fsr2l,f,c
 19956  012734  503E               	movf	i2CANsendMessage@data+1,w,c
 19957  012736  22DA               	addwfc	fsr2h,f,c
 19958  012738  50DF               	movf	indf2,w,c
 19959  01273A  010F               	movlb	15	; () banked
 19960  01273C  6F38               	movwf	56,b	;volatile
 19961                           
 19962                           ; BSR set to: 15
 19963                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 19964  01273E  EE20 F003          	lfsr	2,3
 19965  012742  503D               	movf	i2CANsendMessage@data,w,c
 19966  012744  26D9               	addwf	fsr2l,f,c
 19967  012746  503E               	movf	i2CANsendMessage@data+1,w,c
 19968  012748  22DA               	addwfc	fsr2h,f,c
 19969  01274A  50DF               	movf	indf2,w,c
 19970  01274C  010F               	movlb	15	; () banked
 19971  01274E  6F39               	movwf	57,b	;volatile
 19972                           
 19973                           ; BSR set to: 15
 19974                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 19975  012750  EE20 F004          	lfsr	2,4
 19976  012754  503D               	movf	i2CANsendMessage@data,w,c
 19977  012756  26D9               	addwf	fsr2l,f,c
 19978  012758  503E               	movf	i2CANsendMessage@data+1,w,c
 19979  01275A  22DA               	addwfc	fsr2h,f,c
 19980  01275C  50DF               	movf	indf2,w,c
 19981  01275E  010F               	movlb	15	; () banked
 19982  012760  6F3A               	movwf	58,b	;volatile
 19983                           
 19984                           ; BSR set to: 15
 19985                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 19986  012762  EE20 F005          	lfsr	2,5
 19987  012766  503D               	movf	i2CANsendMessage@data,w,c
 19988  012768  26D9               	addwf	fsr2l,f,c
 19989  01276A  503E               	movf	i2CANsendMessage@data+1,w,c
 19990  01276C  22DA               	addwfc	fsr2h,f,c
 19991  01276E  50DF               	movf	indf2,w,c
 19992  012770  010F               	movlb	15	; () banked
 19993  012772  6F3B               	movwf	59,b	;volatile
 19994                           
 19995                           ; BSR set to: 15
 19996                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 19997  012774  EE20 F006          	lfsr	2,6
 19998  012778  503D               	movf	i2CANsendMessage@data,w,c
 19999  01277A  26D9               	addwf	fsr2l,f,c
 20000  01277C  503E               	movf	i2CANsendMessage@data+1,w,c
 20001  01277E  22DA               	addwfc	fsr2h,f,c
 20002  012780  50DF               	movf	indf2,w,c
 20003  012782  010F               	movlb	15	; () banked
 20004  012784  6F3C               	movwf	60,b	;volatile
 20005                           
 20006                           ; BSR set to: 15
 20007                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 20008  012786  EE20 F007          	lfsr	2,7
 20009  01278A  503D               	movf	i2CANsendMessage@data,w,c
 20010  01278C  26D9               	addwf	fsr2l,f,c
 20011  01278E  503E               	movf	i2CANsendMessage@data+1,w,c
 20012  012790  22DA               	addwfc	fsr2h,f,c
 20013  012792  50DF               	movf	indf2,w,c
 20014  012794  010F               	movlb	15	; () banked
 20015  012796  6F3D               	movwf	61,b	;volatile
 20016                           
 20017                           ; BSR set to: 15
 20018                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 20019  012798  010F               	movlb	15	; () banked
 20020  01279A  8730               	bsf	48,3,b	;volatile
 20021                           
 20022                           ; BSR set to: 15
 20023                           ;inc\CANlib.h: 444: return;
 20024  01279C  0012               	return	
 20025  01279E                     i2l400:
 20026                           
 20027                           ; BSR set to: 15
 20028                           ;inc\CANlib.h: 445: }
 20029                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 20030  01279E  010F               	movlb	15	; () banked
 20031  0127A0  B720               	btfsc	32,3,b	;volatile
 20032  0127A2  0012               	return	
 20033                           
 20034                           ; BSR set to: 15
 20035                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 20036  0127A4  C03F  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 20037                           
 20038                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 20039  0127A8  AC40               	btfss	i2CANsendMessage@flags,6,c
 20040  0127AA  D003               	goto	i2l415
 20041                           
 20042                           ; BSR set to: 15
 20043                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 20044  0127AC  010F               	movlb	15	; () banked
 20045  0127AE  8D25               	bsf	37,6,b	;volatile
 20046  0127B0  D002               	goto	i2l416
 20047  0127B2                     i2l415:
 20048                           
 20049                           ; BSR set to: 15
 20050                           ;inc\CANlib.h: 454: else
 20051                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 20052  0127B2  010F               	movlb	15	; () banked
 20053  0127B4  9D25               	bcf	37,6,b	;volatile
 20054  0127B6                     i2l416:
 20055                           
 20056                           ; BSR set to: 15
 20057                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 20058  0127B6  A640               	btfss	i2CANsendMessage@flags,3,c
 20059  0127B8  D067               	goto	i2l417
 20060                           
 20061                           ; BSR set to: 15
 20062                           ;inc\CANlib.h: 458: {
 20063                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 20064  0127BA  5039               	movf	i2CANsendMessage@identifier,w,c
 20065  0127BC  6E45               	movwf	i2CANsendMessage@tamp,c
 20066  0127BE  6A46               	clrf	i2CANsendMessage@tamp+1,c
 20067  0127C0  6A47               	clrf	i2CANsendMessage@tamp+2,c
 20068  0127C2  6A48               	clrf	i2CANsendMessage@tamp+3,c
 20069                           
 20070                           ; BSR set to: 15
 20071                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 20072  0127C4  C045  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 20073                           
 20074                           ; BSR set to: 15
 20075                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 20076  0127C8  0E00               	movlw	0
 20077  0127CA  1439               	andwf	i2CANsendMessage@identifier,w,c
 20078  0127CC  6E45               	movwf	i2CANsendMessage@tamp,c
 20079  0127CE  0EFF               	movlw	255
 20080  0127D0  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 20081  0127D2  6E46               	movwf	i2CANsendMessage@tamp+1,c
 20082  0127D4  0E00               	movlw	0
 20083  0127D6  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 20084  0127D8  6E47               	movwf	i2CANsendMessage@tamp+2,c
 20085  0127DA  0E00               	movlw	0
 20086  0127DC  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 20087  0127DE  6E48               	movwf	i2CANsendMessage@tamp+3,c
 20088                           
 20089                           ; BSR set to: 15
 20090                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 20091  0127E0  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20092  0127E4  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20093  0127E8  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20094  0127EC  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20095  0127F0  C042  F041         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20096  0127F4  C043  F042         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20097  0127F8  C044  F043         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20098  0127FC  6A44               	clrf	??i2_CANsendMessage+3,c
 20099  0127FE  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20100  012802  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20101  012806  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20102  01280A  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20103                           
 20104                           ; BSR set to: 15
 20105                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 20106  01280E  C045  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 20107                           
 20108                           ; BSR set to: 15
 20109                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 20110  012812  0E00               	movlw	0
 20111  012814  010F               	movlb	15	; () banked
 20112  012816  6F22               	movwf	34,b	;volatile
 20113                           
 20114                           ; BSR set to: 15
 20115                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 20116  012818  010F               	movlb	15	; () banked
 20117  01281A  8722               	bsf	34,3,b	;volatile
 20118                           
 20119                           ; BSR set to: 15
 20120                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 20121  01281C  A03B               	btfss	i2CANsendMessage@identifier+2,0,c
 20122  01281E  D002               	goto	i2l418
 20123                           
 20124                           ; BSR set to: 15
 20125                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 20126  012820  010F               	movlb	15	; () banked
 20127  012822  8122               	bsf	34,0,b	;volatile
 20128  012824                     i2l418:
 20129                           
 20130                           ; BSR set to: 15
 20131                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 20132  012824  A23B               	btfss	i2CANsendMessage@identifier+2,1,c
 20133  012826  D002               	goto	i2l419
 20134                           
 20135                           ; BSR set to: 15
 20136                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 20137  012828  010F               	movlb	15	; () banked
 20138  01282A  8322               	bsf	34,1,b	;volatile
 20139  01282C                     i2l419:
 20140                           
 20141                           ; BSR set to: 15
 20142                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 20143  01282C  A43B               	btfss	i2CANsendMessage@identifier+2,2,c
 20144  01282E  D002               	goto	i2l420
 20145                           
 20146                           ; BSR set to: 15
 20147                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 20148  012830  010F               	movlb	15	; () banked
 20149  012832  8B22               	bsf	34,5,b	;volatile
 20150  012834                     i2l420:
 20151                           
 20152                           ; BSR set to: 15
 20153                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 20154  012834  A63B               	btfss	i2CANsendMessage@identifier+2,3,c
 20155  012836  D002               	goto	i2l421
 20156                           
 20157                           ; BSR set to: 15
 20158                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 20159  012838  010F               	movlb	15	; () banked
 20160  01283A  8D22               	bsf	34,6,b	;volatile
 20161  01283C                     i2l421:
 20162                           
 20163                           ; BSR set to: 15
 20164                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 20165  01283C  A83B               	btfss	i2CANsendMessage@identifier+2,4,c
 20166  01283E  D003               	goto	i2l6868
 20167                           
 20168                           ; BSR set to: 15
 20169                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 20170  012840  010F               	movlb	15	; () banked
 20171  012842  8F22               	bsf	34,7,b	;volatile
 20172  012844  D000               	goto	i2l6868
 20173  012846                     i2l6868:
 20174                           
 20175                           ; BSR set to: 15
 20176                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 20177  012846  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20178  01284A  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20179  01284E  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20180  012852  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20181  012856  0E16               	movlw	22
 20182  012858  D005               	goto	i2u828_40
 20183  01285A                     i2u828_45:
 20184  01285A  90D8               	bcf	status,0,c
 20185  01285C  3244               	rrcf	??i2_CANsendMessage+3,f,c
 20186  01285E  3243               	rrcf	??i2_CANsendMessage+2,f,c
 20187  012860  3242               	rrcf	??i2_CANsendMessage+1,f,c
 20188  012862  3241               	rrcf	??i2_CANsendMessage,f,c
 20189  012864                     i2u828_40:
 20190  012864  2EE8               	decfsz	wreg,f,c
 20191  012866  D7F9               	goto	i2u828_45
 20192  012868  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20193  01286C  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20194  012870  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20195  012874  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20196                           
 20197                           ; BSR set to: 15
 20198                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 20199  012878  5045               	movf	i2CANsendMessage@tamp,w,c
 20200  01287A  6E45               	movwf	i2CANsendMessage@tamp,c
 20201  01287C  6A46               	clrf	i2CANsendMessage@tamp+1,c
 20202  01287E  6A47               	clrf	i2CANsendMessage@tamp+2,c
 20203  012880  6A48               	clrf	i2CANsendMessage@tamp+3,c
 20204                           
 20205                           ; BSR set to: 15
 20206                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 20207  012882  C045  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20208                           
 20209                           ;inc\CANlib.h: 483: }
 20210  012886  D04E               	goto	i2l6888
 20211  012888                     i2l417:
 20212                           
 20213                           ; BSR set to: 15
 20214                           ;inc\CANlib.h: 485: else
 20215                           ;inc\CANlib.h: 487: {
 20216                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 20217  012888  010F               	movlb	15	; () banked
 20218  01288A  9722               	bcf	34,3,b	;volatile
 20219                           
 20220                           ; BSR set to: 15
 20221                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 20222  01288C  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20223  012890  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20224  012894  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20225  012898  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20226  01289C  0E04               	movlw	4
 20227  01289E  D005               	goto	i2u829_40
 20228  0128A0                     i2u829_45:
 20229  0128A0  90D8               	bcf	status,0,c
 20230  0128A2  3244               	rrcf	??i2_CANsendMessage+3,f,c
 20231  0128A4  3243               	rrcf	??i2_CANsendMessage+2,f,c
 20232  0128A6  3242               	rrcf	??i2_CANsendMessage+1,f,c
 20233  0128A8  3241               	rrcf	??i2_CANsendMessage,f,c
 20234  0128AA                     i2u829_40:
 20235  0128AA  2EE8               	decfsz	wreg,f,c
 20236  0128AC  D7F9               	goto	i2u829_45
 20237  0128AE  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20238  0128B2  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20239  0128B6  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20240  0128BA  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20241                           
 20242                           ; BSR set to: 15
 20243                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 20244  0128BE  5045               	movf	i2CANsendMessage@tamp,w,c
 20245  0128C0  6E45               	movwf	i2CANsendMessage@tamp,c
 20246  0128C2  6A46               	clrf	i2CANsendMessage@tamp+1,c
 20247  0128C4  6A47               	clrf	i2CANsendMessage@tamp+2,c
 20248  0128C6  6A48               	clrf	i2CANsendMessage@tamp+3,c
 20249                           
 20250                           ; BSR set to: 15
 20251                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 20252  0128C8  C045  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20253                           
 20254                           ; BSR set to: 15
 20255                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 20256  0128CC  0E07               	movlw	7
 20257  0128CE  1439               	andwf	i2CANsendMessage@identifier,w,c
 20258  0128D0  6E45               	movwf	i2CANsendMessage@tamp,c
 20259  0128D2  0E00               	movlw	0
 20260  0128D4  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 20261  0128D6  6E46               	movwf	i2CANsendMessage@tamp+1,c
 20262  0128D8  0E00               	movlw	0
 20263  0128DA  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 20264  0128DC  6E47               	movwf	i2CANsendMessage@tamp+2,c
 20265  0128DE  0E00               	movlw	0
 20266  0128E0  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 20267  0128E2  6E48               	movwf	i2CANsendMessage@tamp+3,c
 20268                           
 20269                           ; BSR set to: 15
 20270                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 20271  0128E4  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20272  0128E8  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20273  0128EC  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20274  0128F0  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20275  0128F4  0E05               	movlw	5
 20276  0128F6                     i2u830_45:
 20277  0128F6  90D8               	bcf	status,0,c
 20278  0128F8  3641               	rlcf	??i2_CANsendMessage,f,c
 20279  0128FA  3642               	rlcf	??i2_CANsendMessage+1,f,c
 20280  0128FC  3643               	rlcf	??i2_CANsendMessage+2,f,c
 20281  0128FE  3644               	rlcf	??i2_CANsendMessage+3,f,c
 20282  012900  2EE8               	decfsz	wreg,f,c
 20283  012902  D7F9               	goto	i2u830_45
 20284  012904  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20285  012908  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20286  01290C  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20287  012910  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20288                           
 20289                           ; BSR set to: 15
 20290                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 20291  012914  010F               	movlb	15	; () banked
 20292  012916  5122               	movf	34,w,b	;volatile
 20293  012918  0B1F               	andlw	31
 20294  01291A  010F               	movlb	15	; () banked
 20295  01291C  6F22               	movwf	34,b	;volatile
 20296                           
 20297                           ; BSR set to: 15
 20298                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 20299  01291E  C045  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 20300  012922  D000               	goto	i2l6888
 20301  012924                     i2l6888:
 20302                           
 20303                           ; BSR set to: 15
 20304                           ;inc\CANlib.h: 498: }
 20305                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 20306  012924  A040               	btfss	i2CANsendMessage@flags,0,c
 20307  012926  D003               	goto	i2l424
 20308                           
 20309                           ; BSR set to: 15
 20310                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 20311  012928  010F               	movlb	15	; () banked
 20312  01292A  8120               	bsf	32,0,b	;volatile
 20313  01292C  D002               	goto	i2l425
 20314  01292E                     i2l424:
 20315                           
 20316                           ; BSR set to: 15
 20317                           ;inc\CANlib.h: 502: else
 20318                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 20319  01292E  010F               	movlb	15	; () banked
 20320  012930  9120               	bcf	32,0,b	;volatile
 20321  012932                     i2l425:
 20322                           
 20323                           ; BSR set to: 15
 20324                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 20325  012932  A240               	btfss	i2CANsendMessage@flags,1,c
 20326  012934  D003               	goto	i2l426
 20327                           
 20328                           ; BSR set to: 15
 20329                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 20330  012936  010F               	movlb	15	; () banked
 20331  012938  8320               	bsf	32,1,b	;volatile
 20332  01293A  D003               	goto	i2l6894
 20333  01293C                     i2l426:
 20334                           
 20335                           ; BSR set to: 15
 20336                           ;inc\CANlib.h: 506: else
 20337                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 20338  01293C  010F               	movlb	15	; () banked
 20339  01293E  9320               	bcf	32,1,b	;volatile
 20340  012940  D000               	goto	i2l6894
 20341  012942                     i2l6894:
 20342                           
 20343                           ; BSR set to: 15
 20344                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 20345  012942  C03D  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20346  012946  C03E  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20347  01294A  50DF               	movf	indf2,w,c
 20348  01294C  010F               	movlb	15	; () banked
 20349  01294E  6F26               	movwf	38,b	;volatile
 20350                           
 20351                           ; BSR set to: 15
 20352                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 20353  012950  EE20 F001          	lfsr	2,1
 20354  012954  503D               	movf	i2CANsendMessage@data,w,c
 20355  012956  26D9               	addwf	fsr2l,f,c
 20356  012958  503E               	movf	i2CANsendMessage@data+1,w,c
 20357  01295A  22DA               	addwfc	fsr2h,f,c
 20358  01295C  50DF               	movf	indf2,w,c
 20359  01295E  010F               	movlb	15	; () banked
 20360  012960  6F27               	movwf	39,b	;volatile
 20361                           
 20362                           ; BSR set to: 15
 20363                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 20364  012962  EE20 F002          	lfsr	2,2
 20365  012966  503D               	movf	i2CANsendMessage@data,w,c
 20366  012968  26D9               	addwf	fsr2l,f,c
 20367  01296A  503E               	movf	i2CANsendMessage@data+1,w,c
 20368  01296C  22DA               	addwfc	fsr2h,f,c
 20369  01296E  50DF               	movf	indf2,w,c
 20370  012970  010F               	movlb	15	; () banked
 20371  012972  6F28               	movwf	40,b	;volatile
 20372                           
 20373                           ; BSR set to: 15
 20374                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 20375  012974  EE20 F003          	lfsr	2,3
 20376  012978  503D               	movf	i2CANsendMessage@data,w,c
 20377  01297A  26D9               	addwf	fsr2l,f,c
 20378  01297C  503E               	movf	i2CANsendMessage@data+1,w,c
 20379  01297E  22DA               	addwfc	fsr2h,f,c
 20380  012980  50DF               	movf	indf2,w,c
 20381  012982  010F               	movlb	15	; () banked
 20382  012984  6F29               	movwf	41,b	;volatile
 20383                           
 20384                           ; BSR set to: 15
 20385                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 20386  012986  EE20 F004          	lfsr	2,4
 20387  01298A  503D               	movf	i2CANsendMessage@data,w,c
 20388  01298C  26D9               	addwf	fsr2l,f,c
 20389  01298E  503E               	movf	i2CANsendMessage@data+1,w,c
 20390  012990  22DA               	addwfc	fsr2h,f,c
 20391  012992  50DF               	movf	indf2,w,c
 20392  012994  010F               	movlb	15	; () banked
 20393  012996  6F2A               	movwf	42,b	;volatile
 20394                           
 20395                           ; BSR set to: 15
 20396                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 20397  012998  EE20 F005          	lfsr	2,5
 20398  01299C  503D               	movf	i2CANsendMessage@data,w,c
 20399  01299E  26D9               	addwf	fsr2l,f,c
 20400  0129A0  503E               	movf	i2CANsendMessage@data+1,w,c
 20401  0129A2  22DA               	addwfc	fsr2h,f,c
 20402  0129A4  50DF               	movf	indf2,w,c
 20403  0129A6  010F               	movlb	15	; () banked
 20404  0129A8  6F2B               	movwf	43,b	;volatile
 20405                           
 20406                           ; BSR set to: 15
 20407                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 20408  0129AA  EE20 F006          	lfsr	2,6
 20409  0129AE  503D               	movf	i2CANsendMessage@data,w,c
 20410  0129B0  26D9               	addwf	fsr2l,f,c
 20411  0129B2  503E               	movf	i2CANsendMessage@data+1,w,c
 20412  0129B4  22DA               	addwfc	fsr2h,f,c
 20413  0129B6  50DF               	movf	indf2,w,c
 20414  0129B8  010F               	movlb	15	; () banked
 20415  0129BA  6F2C               	movwf	44,b	;volatile
 20416                           
 20417                           ; BSR set to: 15
 20418                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 20419  0129BC  EE20 F007          	lfsr	2,7
 20420  0129C0  503D               	movf	i2CANsendMessage@data,w,c
 20421  0129C2  26D9               	addwf	fsr2l,f,c
 20422  0129C4  503E               	movf	i2CANsendMessage@data+1,w,c
 20423  0129C6  22DA               	addwfc	fsr2h,f,c
 20424  0129C8  50DF               	movf	indf2,w,c
 20425  0129CA  010F               	movlb	15	; () banked
 20426  0129CC  6F2D               	movwf	45,b	;volatile
 20427                           
 20428                           ; BSR set to: 15
 20429                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 20430  0129CE  010F               	movlb	15	; () banked
 20431  0129D0  8720               	bsf	32,3,b	;volatile
 20432                           
 20433                           ; BSR set to: 15
 20434                           ;inc\CANlib.h: 520: return;
 20435  0129D2  0012               	return	
 20436                           
 20437                           ; BSR set to: 15
 20438                           
 20439                           ; BSR set to: 15
 20440  0129D4  0012               	return		;funcret
 20441  0129D6                     __end_ofi2_CANsendMessage:
 20442                           	opt stack 0
 20443                           pclatu	equ	0xFFB
 20444                           pclath	equ	0xFFA
 20445                           tblptru	equ	0xFF8
 20446                           tblptrh	equ	0xFF7
 20447                           tblptrl	equ	0xFF6
 20448                           tablat	equ	0xFF5
 20449                           prodh	equ	0xFF4
 20450                           prodl	equ	0xFF3
 20451                           intcon	equ	0xFF2
 20452                           postinc0	equ	0xFEE
 20453                           fsr0h	equ	0xFEA
 20454                           fsr0l	equ	0xFE9
 20455                           wreg	equ	0xFE8
 20456                           indf1	equ	0xFE7
 20457                           plusw1	equ	0xFE3
 20458                           fsr1h	equ	0xFE2
 20459                           fsr1l	equ	0xFE1
 20460                           bsr	equ	0xFE0
 20461                           indf2	equ	0xFDF
 20462                           postinc2	equ	0xFDE
 20463                           plusw2	equ	0xFDB
 20464                           fsr2h	equ	0xFDA
 20465                           fsr2l	equ	0xFD9
 20466                           status	equ	0xFD8
 20467                           
 20468 ;; *************** function i2_CANisTxReady *****************
 20469 ;; Defined at:
 20470 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 20471 ;; Parameters:    Size  Location     Type
 20472 ;;		None
 20473 ;; Auto vars:     Size  Location     Type
 20474 ;;		None
 20475 ;; Return value:  Size  Location     Type
 20476 ;;                  1    wreg      unsigned char 
 20477 ;; Registers used:
 20478 ;;		wreg, status,2
 20479 ;; Tracked objects:
 20480 ;;		On entry : 0/0
 20481 ;;		On exit  : 0/0
 20482 ;;		Unchanged: 0/0
 20483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20487 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20488 ;;Total ram usage:        1 bytes
 20489 ;; Hardware stack levels used:    1
 20490 ;; This function calls:
 20491 ;;		Nothing
 20492 ;; This function is called by:
 20493 ;;		_ISR_alta
 20494 ;; This function uses a non-reentrant model
 20495 ;;
 20496                           
 20497                           	psect	text64
 20498  015EAC                     __ptext64:
 20499                           	opt stack 0
 20500  015EAC                     i2_CANisTxReady:
 20501                           	opt stack 20
 20502                           
 20503                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 20504                           
 20505                           ; BSR set to: 15
 20506                           ;incstack = 0
 20507  015EAC  0E01               	movlw	1
 20508  015EAE  6E39               	movwf	i2_CANisTxReady$3255,c
 20509  015EB0  010F               	movlb	15	; () banked
 20510  015EB2  A740               	btfss	64,3,b	;volatile
 20511  015EB4  D008               	goto	i2l578
 20512                           
 20513                           ; BSR set to: 15
 20514  015EB6  010F               	movlb	15	; () banked
 20515  015EB8  A730               	btfss	48,3,b	;volatile
 20516  015EBA  D005               	goto	i2l578
 20517                           
 20518                           ; BSR set to: 15
 20519  015EBC  010F               	movlb	15	; () banked
 20520  015EBE  A720               	btfss	32,3,b	;volatile
 20521  015EC0  D002               	goto	i2l578
 20522                           
 20523                           ; BSR set to: 15
 20524  015EC2  0E00               	movlw	0
 20525  015EC4  6E39               	movwf	i2_CANisTxReady$3255,c
 20526  015EC6                     i2l578:
 20527                           
 20528                           ; BSR set to: 15
 20529  015EC6  5039               	movf	i2_CANisTxReady$3255,w,c
 20530  015EC8  0012               	return	
 20531                           
 20532                           ; BSR set to: 15
 20533                           
 20534                           ; BSR set to: 15
 20535  015ECA  0012               	return		;funcret
 20536  015ECC                     __end_ofi2_CANisTxReady:
 20537                           	opt stack 0
 20538                           pclatu	equ	0xFFB
 20539                           pclath	equ	0xFFA
 20540                           tblptru	equ	0xFF8
 20541                           tblptrh	equ	0xFF7
 20542                           tblptrl	equ	0xFF6
 20543                           tablat	equ	0xFF5
 20544                           prodh	equ	0xFF4
 20545                           prodl	equ	0xFF3
 20546                           intcon	equ	0xFF2
 20547                           postinc0	equ	0xFEE
 20548                           fsr0h	equ	0xFEA
 20549                           fsr0l	equ	0xFE9
 20550                           wreg	equ	0xFE8
 20551                           indf1	equ	0xFE7
 20552                           plusw1	equ	0xFE3
 20553                           fsr1h	equ	0xFE2
 20554                           fsr1l	equ	0xFE1
 20555                           bsr	equ	0xFE0
 20556                           indf2	equ	0xFDF
 20557                           postinc2	equ	0xFDE
 20558                           plusw2	equ	0xFDB
 20559                           fsr2h	equ	0xFDA
 20560                           fsr2l	equ	0xFD9
 20561                           status	equ	0xFD8
 20562                           
 20563 ;; *************** function _CANreceiveMessage *****************
 20564 ;; Defined at:
 20565 ;;		line 528 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 20566 ;; Parameters:    Size  Location     Type
 20567 ;;  msg             2   17[COMRAM] PTR struct .
 20568 ;;		 -> msg(15), 
 20569 ;; Auto vars:     Size  Location     Type
 20570 ;;  tamp            1   28[COMRAM] unsigned char 
 20571 ;;  error           1   27[COMRAM] unsigned char 
 20572 ;; Return value:  Size  Location     Type
 20573 ;;                  1    wreg      unsigned char 
 20574 ;; Registers used:
 20575 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20576 ;; Tracked objects:
 20577 ;;		On entry : 0/0
 20578 ;;		On exit  : 0/0
 20579 ;;		Unchanged: 0/0
 20580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20582 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20583 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20584 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20585 ;;Total ram usage:       12 bytes
 20586 ;; Hardware stack levels used:    1
 20587 ;; This function calls:
 20588 ;;		Nothing
 20589 ;; This function is called by:
 20590 ;;		_ISR_alta
 20591 ;; This function uses a non-reentrant model
 20592 ;;
 20593                           
 20594                           	psect	text65
 20595  0129D6                     __ptext65:
 20596                           	opt stack 0
 20597  0129D6                     _CANreceiveMessage:
 20598                           	opt stack 20
 20599                           
 20600                           ;inc\CANlib.h: 530: BYTE tamp;
 20601                           ;inc\CANlib.h: 531: BYTE error = 0;
 20602                           
 20603                           ; BSR set to: 15
 20604                           ;incstack = 0
 20605  0129D6  0E00               	movlw	0
 20606  0129D8  6E43               	movwf	CANreceiveMessage@error,c
 20607                           
 20608                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 20609  0129DA  AE74               	btfss	3956,7,c	;volatile
 20610  0129DC  D002               	goto	i2l6274
 20611                           
 20612                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 20613  0129DE  8043               	bsf	CANreceiveMessage@error,0,c
 20614  0129E0  D000               	goto	i2l6274
 20615  0129E2                     i2l6274:
 20616                           
 20617                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 20618  0129E2  AC74               	btfss	3956,6,c	;volatile
 20619  0129E4  D002               	goto	i2l6278
 20620                           
 20621                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 20622  0129E6  8243               	bsf	CANreceiveMessage@error,1,c
 20623  0129E8  D000               	goto	i2l6278
 20624  0129EA                     i2l6278:
 20625                           
 20626                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 20627  0129EA  010F               	movlb	15	; () banked
 20628  0129EC  AF50               	btfss	80,7,b	;volatile
 20629  0129EE  D149               	goto	i2l432
 20630                           
 20631                           ; BSR set to: 15
 20632                           ;inc\CANlib.h: 541: {
 20633                           ;inc\CANlib.h: 542: msg->identifier = 0;
 20634  0129F0  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20635  0129F4  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20636  0129F8  6ADE               	clrf	postinc2,c
 20637  0129FA  6ADE               	clrf	postinc2,c
 20638  0129FC  6ADE               	clrf	postinc2,c
 20639  0129FE  6ADD               	clrf	postdec2,c
 20640                           
 20641                           ; BSR set to: 15
 20642                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 20643  012A00  EE20 F004          	lfsr	2,4
 20644  012A04  5039               	movf	CANreceiveMessage@msg,w,c
 20645  012A06  26D9               	addwf	fsr2l,f,c
 20646  012A08  503A               	movf	CANreceiveMessage@msg+1,w,c
 20647  012A0A  22DA               	addwfc	fsr2h,f,c
 20648  012A0C  CF56 FFDF          	movff	3926,indf2	;volatile
 20649                           
 20650                           ; BSR set to: 15
 20651                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 20652  012A10  EE20 F005          	lfsr	2,5
 20653  012A14  5039               	movf	CANreceiveMessage@msg,w,c
 20654  012A16  26D9               	addwf	fsr2l,f,c
 20655  012A18  503A               	movf	CANreceiveMessage@msg+1,w,c
 20656  012A1A  22DA               	addwfc	fsr2h,f,c
 20657  012A1C  CF57 FFDF          	movff	3927,indf2	;volatile
 20658                           
 20659                           ; BSR set to: 15
 20660                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 20661  012A20  EE20 F006          	lfsr	2,6
 20662  012A24  5039               	movf	CANreceiveMessage@msg,w,c
 20663  012A26  26D9               	addwf	fsr2l,f,c
 20664  012A28  503A               	movf	CANreceiveMessage@msg+1,w,c
 20665  012A2A  22DA               	addwfc	fsr2h,f,c
 20666  012A2C  CF58 FFDF          	movff	3928,indf2	;volatile
 20667                           
 20668                           ; BSR set to: 15
 20669                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 20670  012A30  EE20 F007          	lfsr	2,7
 20671  012A34  5039               	movf	CANreceiveMessage@msg,w,c
 20672  012A36  26D9               	addwf	fsr2l,f,c
 20673  012A38  503A               	movf	CANreceiveMessage@msg+1,w,c
 20674  012A3A  22DA               	addwfc	fsr2h,f,c
 20675  012A3C  CF59 FFDF          	movff	3929,indf2	;volatile
 20676                           
 20677                           ; BSR set to: 15
 20678                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 20679  012A40  EE20 F008          	lfsr	2,8
 20680  012A44  5039               	movf	CANreceiveMessage@msg,w,c
 20681  012A46  26D9               	addwf	fsr2l,f,c
 20682  012A48  503A               	movf	CANreceiveMessage@msg+1,w,c
 20683  012A4A  22DA               	addwfc	fsr2h,f,c
 20684  012A4C  CF5A FFDF          	movff	3930,indf2	;volatile
 20685                           
 20686                           ; BSR set to: 15
 20687                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 20688  012A50  EE20 F009          	lfsr	2,9
 20689  012A54  5039               	movf	CANreceiveMessage@msg,w,c
 20690  012A56  26D9               	addwf	fsr2l,f,c
 20691  012A58  503A               	movf	CANreceiveMessage@msg+1,w,c
 20692  012A5A  22DA               	addwfc	fsr2h,f,c
 20693  012A5C  CF5B FFDF          	movff	3931,indf2	;volatile
 20694                           
 20695                           ; BSR set to: 15
 20696                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 20697  012A60  EE20 F00A          	lfsr	2,10
 20698  012A64  5039               	movf	CANreceiveMessage@msg,w,c
 20699  012A66  26D9               	addwf	fsr2l,f,c
 20700  012A68  503A               	movf	CANreceiveMessage@msg+1,w,c
 20701  012A6A  22DA               	addwfc	fsr2h,f,c
 20702  012A6C  CF5C FFDF          	movff	3932,indf2	;volatile
 20703                           
 20704                           ; BSR set to: 15
 20705                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 20706  012A70  EE20 F00B          	lfsr	2,11
 20707  012A74  5039               	movf	CANreceiveMessage@msg,w,c
 20708  012A76  26D9               	addwf	fsr2l,f,c
 20709  012A78  503A               	movf	CANreceiveMessage@msg+1,w,c
 20710  012A7A  22DA               	addwfc	fsr2h,f,c
 20711  012A7C  CF5D FFDF          	movff	3933,indf2	;volatile
 20712                           
 20713                           ; BSR set to: 15
 20714                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 20715  012A80  EE20 F00E          	lfsr	2,14
 20716  012A84  5039               	movf	CANreceiveMessage@msg,w,c
 20717  012A86  26D9               	addwf	fsr2l,f,c
 20718  012A88  503A               	movf	CANreceiveMessage@msg+1,w,c
 20719  012A8A  22DA               	addwfc	fsr2h,f,c
 20720  012A8C  010F               	movlb	15	; () banked
 20721  012A8E  AD55               	btfss	85,6,b	;volatile
 20722  012A90  D002               	goto	i2u747_40
 20723  012A92  0E01               	movlw	1
 20724  012A94  D001               	goto	i2u747_46
 20725  012A96                     i2u747_40:
 20726  012A96  0E00               	movlw	0
 20727  012A98                     i2u747_46:
 20728  012A98  6EDF               	movwf	indf2,c
 20729                           
 20730                           ; BSR set to: 15
 20731                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 20732  012A9A  EE20 F00D          	lfsr	2,13
 20733  012A9E  5039               	movf	CANreceiveMessage@msg,w,c
 20734  012AA0  26D9               	addwf	fsr2l,f,c
 20735  012AA2  503A               	movf	CANreceiveMessage@msg+1,w,c
 20736  012AA4  22DA               	addwfc	fsr2h,f,c
 20737  012AA6  010F               	movlb	15	; () banked
 20738  012AA8  5155               	movf	85,w,b	;volatile
 20739  012AAA  0B0F               	andlw	15
 20740  012AAC  6EDF               	movwf	indf2,c
 20741                           
 20742                           ; BSR set to: 15
 20743                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 20744  012AAE  EE20 F00C          	lfsr	2,12
 20745  012AB2  5039               	movf	CANreceiveMessage@msg,w,c
 20746  012AB4  26D9               	addwf	fsr2l,f,c
 20747  012AB6  503A               	movf	CANreceiveMessage@msg+1,w,c
 20748  012AB8  22DA               	addwfc	fsr2h,f,c
 20749  012ABA  010F               	movlb	15	; () banked
 20750  012ABC  A752               	btfss	82,3,b	;volatile
 20751  012ABE  D002               	goto	i2u748_40
 20752  012AC0  0E01               	movlw	1
 20753  012AC2  D001               	goto	i2u748_46
 20754  012AC4                     i2u748_40:
 20755  012AC4  0E00               	movlw	0
 20756  012AC6                     i2u748_46:
 20757  012AC6  6EDF               	movwf	indf2,c
 20758                           
 20759                           ; BSR set to: 15
 20760                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 20761  012AC8  010F               	movlb	15	; () banked
 20762  012ACA  B752               	btfsc	82,3,b	;volatile
 20763  012ACC  D044               	goto	i2l6312
 20764                           
 20765                           ; BSR set to: 15
 20766                           ;inc\CANlib.h: 559: {
 20767                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 20768  012ACE  CF51 F03B          	movff	3921,??_CANreceiveMessage	;volatile
 20769  012AD2  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20770  012AD4  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20771  012AD6  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20772  012AD8  0E03               	movlw	3
 20773  012ADA                     i2u750_45:
 20774  012ADA  90D8               	bcf	status,0,c
 20775  012ADC  363B               	rlcf	??_CANreceiveMessage,f,c
 20776  012ADE  363C               	rlcf	??_CANreceiveMessage+1,f,c
 20777  012AE0  363D               	rlcf	??_CANreceiveMessage+2,f,c
 20778  012AE2  363E               	rlcf	??_CANreceiveMessage+3,f,c
 20779  012AE4  2EE8               	decfsz	wreg,f,c
 20780  012AE6  D7F9               	goto	i2u750_45
 20781  012AE8  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20782  012AEC  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20783  012AF0  C03B  FFDE         	movff	??_CANreceiveMessage,postinc2
 20784  012AF4  C03C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20785  012AF8  C03D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20786  012AFC  C03E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20787                           
 20788                           ; BSR set to: 15
 20789                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 20790  012B00  010F               	movlb	15	; () banked
 20791  012B02  3952               	swapf	82,w,b	;volatile
 20792  012B04  42E8               	rrncf	wreg,f,c
 20793  012B06  0B07               	andlw	7
 20794  012B08  0B07               	andlw	7
 20795  012B0A  6E44               	movwf	CANreceiveMessage@tamp,c
 20796                           
 20797                           ; BSR set to: 15
 20798                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 20799  012B0C  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20800  012B10  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20801  012B14  CFDE F03B          	movff	postinc2,??_CANreceiveMessage
 20802  012B18  CFDE F03C          	movff	postinc2,??_CANreceiveMessage+1
 20803  012B1C  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+2
 20804  012B20  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+3
 20805  012B24  5044               	movf	CANreceiveMessage@tamp,w,c
 20806  012B26  243B               	addwf	??_CANreceiveMessage,w,c
 20807  012B28  6E3F               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 20808  012B2A  0E00               	movlw	0
 20809  012B2C  203C               	addwfc	??_CANreceiveMessage+1,w,c
 20810  012B2E  6E40               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 20811  012B30  0E00               	movlw	0
 20812  012B32  203D               	addwfc	??_CANreceiveMessage+2,w,c
 20813  012B34  6E41               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 20814  012B36  0E00               	movlw	0
 20815  012B38  203E               	addwfc	??_CANreceiveMessage+3,w,c
 20816  012B3A  6E42               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 20817  012B3C  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20818  012B40  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20819  012B44  C03F  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 20820  012B48  C040  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 20821  012B4C  C041  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 20822  012B50  C042  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 20823                           
 20824                           ;inc\CANlib.h: 563: }
 20825  012B54  D093               	goto	i2l6338
 20826  012B56                     i2l6312:
 20827                           
 20828                           ; BSR set to: 15
 20829                           ;inc\CANlib.h: 564: else
 20830                           ;inc\CANlib.h: 565: {
 20831                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 20832  012B56  CF54 F03B          	movff	3924,??_CANreceiveMessage	;volatile
 20833  012B5A  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20834  012B5C  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20835  012B5E  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20836  012B60  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20837  012B64  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20838  012B68  C03B  FFDE         	movff	??_CANreceiveMessage,postinc2
 20839  012B6C  C03C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20840  012B70  C03D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20841  012B74  C03E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20842                           
 20843                           ; BSR set to: 15
 20844                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 20845  012B78  CF53 F03B          	movff	3923,??_CANreceiveMessage	;volatile
 20846  012B7C  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20847  012B7E  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20848  012B80  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20849  012B82  C03D  F03E         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 20850  012B86  C03C  F03D         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 20851  012B8A  C03B  F03C         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 20852  012B8E  6A3B               	clrf	??_CANreceiveMessage,c
 20853  012B90  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20854  012B94  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20855  012B98  503B               	movf	??_CANreceiveMessage,w,c
 20856  012B9A  26DE               	addwf	postinc2,f,c
 20857  012B9C  503C               	movf	??_CANreceiveMessage+1,w,c
 20858  012B9E  22DE               	addwfc	postinc2,f,c
 20859  012BA0  503D               	movf	??_CANreceiveMessage+2,w,c
 20860  012BA2  22DE               	addwfc	postinc2,f,c
 20861  012BA4  503E               	movf	??_CANreceiveMessage+3,w,c
 20862  012BA6  22DE               	addwfc	postinc2,f,c
 20863                           
 20864                           ; BSR set to: 15
 20865                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 20866  012BA8  010F               	movlb	15	; () banked
 20867  012BAA  A152               	btfss	82,0,b	;volatile
 20868  012BAC  D00D               	goto	i2l6320
 20869                           
 20870                           ; BSR set to: 15
 20871                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 20872  012BAE  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20873  012BB2  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20874  012BB6  0E00               	movlw	0
 20875  012BB8  12DE               	iorwf	postinc2,f,c
 20876  012BBA  0E00               	movlw	0
 20877  012BBC  12DE               	iorwf	postinc2,f,c
 20878  012BBE  0E01               	movlw	1
 20879  012BC0  12DE               	iorwf	postinc2,f,c
 20880  012BC2  0E00               	movlw	0
 20881  012BC4  12DE               	iorwf	postinc2,f,c
 20882  012BC6  D000               	goto	i2l6320
 20883  012BC8                     i2l6320:
 20884                           
 20885                           ; BSR set to: 15
 20886                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 20887  012BC8  010F               	movlb	15	; () banked
 20888  012BCA  A352               	btfss	82,1,b	;volatile
 20889  012BCC  D00D               	goto	i2l6324
 20890                           
 20891                           ; BSR set to: 15
 20892                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 20893  012BCE  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20894  012BD2  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20895  012BD6  0E00               	movlw	0
 20896  012BD8  12DE               	iorwf	postinc2,f,c
 20897  012BDA  0E00               	movlw	0
 20898  012BDC  12DE               	iorwf	postinc2,f,c
 20899  012BDE  0E02               	movlw	2
 20900  012BE0  12DE               	iorwf	postinc2,f,c
 20901  012BE2  0E00               	movlw	0
 20902  012BE4  12DE               	iorwf	postinc2,f,c
 20903  012BE6  D000               	goto	i2l6324
 20904  012BE8                     i2l6324:
 20905                           
 20906                           ; BSR set to: 15
 20907                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 20908  012BE8  010F               	movlb	15	; () banked
 20909  012BEA  AB52               	btfss	82,5,b	;volatile
 20910  012BEC  D00D               	goto	i2l6328
 20911                           
 20912                           ; BSR set to: 15
 20913                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 20914  012BEE  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20915  012BF2  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20916  012BF6  0E00               	movlw	0
 20917  012BF8  12DE               	iorwf	postinc2,f,c
 20918  012BFA  0E00               	movlw	0
 20919  012BFC  12DE               	iorwf	postinc2,f,c
 20920  012BFE  0E04               	movlw	4
 20921  012C00  12DE               	iorwf	postinc2,f,c
 20922  012C02  0E00               	movlw	0
 20923  012C04  12DE               	iorwf	postinc2,f,c
 20924  012C06  D000               	goto	i2l6328
 20925  012C08                     i2l6328:
 20926                           
 20927                           ; BSR set to: 15
 20928                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 20929  012C08  010F               	movlb	15	; () banked
 20930  012C0A  AD52               	btfss	82,6,b	;volatile
 20931  012C0C  D00D               	goto	i2l6332
 20932                           
 20933                           ; BSR set to: 15
 20934                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 20935  012C0E  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20936  012C12  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20937  012C16  0E00               	movlw	0
 20938  012C18  12DE               	iorwf	postinc2,f,c
 20939  012C1A  0E00               	movlw	0
 20940  012C1C  12DE               	iorwf	postinc2,f,c
 20941  012C1E  0E08               	movlw	8
 20942  012C20  12DE               	iorwf	postinc2,f,c
 20943  012C22  0E00               	movlw	0
 20944  012C24  12DE               	iorwf	postinc2,f,c
 20945  012C26  D000               	goto	i2l6332
 20946  012C28                     i2l6332:
 20947                           
 20948                           ; BSR set to: 15
 20949                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 20950  012C28  010F               	movlb	15	; () banked
 20951  012C2A  AF52               	btfss	82,7,b	;volatile
 20952  012C2C  D00D               	goto	i2l6336
 20953                           
 20954                           ; BSR set to: 15
 20955                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 20956  012C2E  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20957  012C32  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20958  012C36  0E00               	movlw	0
 20959  012C38  12DE               	iorwf	postinc2,f,c
 20960  012C3A  0E00               	movlw	0
 20961  012C3C  12DE               	iorwf	postinc2,f,c
 20962  012C3E  0E10               	movlw	16
 20963  012C40  12DE               	iorwf	postinc2,f,c
 20964  012C42  0E00               	movlw	0
 20965  012C44  12DE               	iorwf	postinc2,f,c
 20966  012C46  D000               	goto	i2l6336
 20967  012C48                     i2l6336:
 20968                           
 20969                           ; BSR set to: 15
 20970                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 20971  012C48  CF51 F03B          	movff	3921,??_CANreceiveMessage	;volatile
 20972  012C4C  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20973  012C4E  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20974  012C50  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20975  012C52  0E15               	movlw	21
 20976  012C54                     i2u756_45:
 20977  012C54  90D8               	bcf	status,0,c
 20978  012C56  363B               	rlcf	??_CANreceiveMessage,f,c
 20979  012C58  363C               	rlcf	??_CANreceiveMessage+1,f,c
 20980  012C5A  363D               	rlcf	??_CANreceiveMessage+2,f,c
 20981  012C5C  363E               	rlcf	??_CANreceiveMessage+3,f,c
 20982  012C5E  2EE8               	decfsz	wreg,f,c
 20983  012C60  D7F9               	goto	i2u756_45
 20984  012C62  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20985  012C66  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20986  012C6A  503B               	movf	??_CANreceiveMessage,w,c
 20987  012C6C  12DE               	iorwf	postinc2,f,c
 20988  012C6E  503C               	movf	??_CANreceiveMessage+1,w,c
 20989  012C70  12DE               	iorwf	postinc2,f,c
 20990  012C72  503D               	movf	??_CANreceiveMessage+2,w,c
 20991  012C74  12DE               	iorwf	postinc2,f,c
 20992  012C76  503E               	movf	??_CANreceiveMessage+3,w,c
 20993  012C78  12DE               	iorwf	postinc2,f,c
 20994  012C7A  D000               	goto	i2l6338
 20995  012C7C                     i2l6338:
 20996                           
 20997                           ; BSR set to: 15
 20998                           ;inc\CANlib.h: 581: }
 20999                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 21000  012C7C  010F               	movlb	15	; () banked
 21001  012C7E  9F50               	bcf	80,7,b	;volatile
 21002                           
 21003                           ; BSR set to: 15
 21004                           ;inc\CANlib.h: 584: return (error);
 21005                           ;	Return value of _CANreceiveMessage is never used
 21006  012C80  0012               	return	
 21007  012C82                     i2l432:
 21008                           
 21009                           ; BSR set to: 15
 21010                           ;inc\CANlib.h: 585: }
 21011                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 21012  012C82  AE60               	btfss	3936,7,c	;volatile
 21013  012C84  0012               	return	
 21014                           
 21015                           ; BSR set to: 15
 21016                           ;inc\CANlib.h: 588: {
 21017                           ;inc\CANlib.h: 589: msg->identifier = 0;
 21018  012C86  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21019  012C8A  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21020  012C8E  6ADE               	clrf	postinc2,c
 21021  012C90  6ADE               	clrf	postinc2,c
 21022  012C92  6ADE               	clrf	postinc2,c
 21023  012C94  6ADD               	clrf	postdec2,c
 21024                           
 21025                           ; BSR set to: 15
 21026                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 21027  012C96  EE20 F004          	lfsr	2,4
 21028  012C9A  5039               	movf	CANreceiveMessage@msg,w,c
 21029  012C9C  26D9               	addwf	fsr2l,f,c
 21030  012C9E  503A               	movf	CANreceiveMessage@msg+1,w,c
 21031  012CA0  22DA               	addwfc	fsr2h,f,c
 21032  012CA2  CF66 FFDF          	movff	3942,indf2	;volatile
 21033                           
 21034                           ; BSR set to: 15
 21035                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 21036  012CA6  EE20 F005          	lfsr	2,5
 21037  012CAA  5039               	movf	CANreceiveMessage@msg,w,c
 21038  012CAC  26D9               	addwf	fsr2l,f,c
 21039  012CAE  503A               	movf	CANreceiveMessage@msg+1,w,c
 21040  012CB0  22DA               	addwfc	fsr2h,f,c
 21041  012CB2  CF67 FFDF          	movff	3943,indf2	;volatile
 21042                           
 21043                           ; BSR set to: 15
 21044                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 21045  012CB6  EE20 F006          	lfsr	2,6
 21046  012CBA  5039               	movf	CANreceiveMessage@msg,w,c
 21047  012CBC  26D9               	addwf	fsr2l,f,c
 21048  012CBE  503A               	movf	CANreceiveMessage@msg+1,w,c
 21049  012CC0  22DA               	addwfc	fsr2h,f,c
 21050  012CC2  CF68 FFDF          	movff	3944,indf2	;volatile
 21051                           
 21052                           ; BSR set to: 15
 21053                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 21054  012CC6  EE20 F007          	lfsr	2,7
 21055  012CCA  5039               	movf	CANreceiveMessage@msg,w,c
 21056  012CCC  26D9               	addwf	fsr2l,f,c
 21057  012CCE  503A               	movf	CANreceiveMessage@msg+1,w,c
 21058  012CD0  22DA               	addwfc	fsr2h,f,c
 21059  012CD2  CF69 FFDF          	movff	3945,indf2	;volatile
 21060                           
 21061                           ; BSR set to: 15
 21062                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 21063  012CD6  EE20 F008          	lfsr	2,8
 21064  012CDA  5039               	movf	CANreceiveMessage@msg,w,c
 21065  012CDC  26D9               	addwf	fsr2l,f,c
 21066  012CDE  503A               	movf	CANreceiveMessage@msg+1,w,c
 21067  012CE0  22DA               	addwfc	fsr2h,f,c
 21068  012CE2  CF6A FFDF          	movff	3946,indf2	;volatile
 21069                           
 21070                           ; BSR set to: 15
 21071                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 21072  012CE6  EE20 F009          	lfsr	2,9
 21073  012CEA  5039               	movf	CANreceiveMessage@msg,w,c
 21074  012CEC  26D9               	addwf	fsr2l,f,c
 21075  012CEE  503A               	movf	CANreceiveMessage@msg+1,w,c
 21076  012CF0  22DA               	addwfc	fsr2h,f,c
 21077  012CF2  CF6B FFDF          	movff	3947,indf2	;volatile
 21078                           
 21079                           ; BSR set to: 15
 21080                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 21081  012CF6  EE20 F00A          	lfsr	2,10
 21082  012CFA  5039               	movf	CANreceiveMessage@msg,w,c
 21083  012CFC  26D9               	addwf	fsr2l,f,c
 21084  012CFE  503A               	movf	CANreceiveMessage@msg+1,w,c
 21085  012D00  22DA               	addwfc	fsr2h,f,c
 21086  012D02  CF6C FFDF          	movff	3948,indf2	;volatile
 21087                           
 21088                           ; BSR set to: 15
 21089                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 21090  012D06  EE20 F00B          	lfsr	2,11
 21091  012D0A  5039               	movf	CANreceiveMessage@msg,w,c
 21092  012D0C  26D9               	addwf	fsr2l,f,c
 21093  012D0E  503A               	movf	CANreceiveMessage@msg+1,w,c
 21094  012D10  22DA               	addwfc	fsr2h,f,c
 21095  012D12  CF6D FFDF          	movff	3949,indf2	;volatile
 21096                           
 21097                           ; BSR set to: 15
 21098                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 21099  012D16  EE20 F00E          	lfsr	2,14
 21100  012D1A  5039               	movf	CANreceiveMessage@msg,w,c
 21101  012D1C  26D9               	addwf	fsr2l,f,c
 21102  012D1E  503A               	movf	CANreceiveMessage@msg+1,w,c
 21103  012D20  22DA               	addwfc	fsr2h,f,c
 21104  012D22  AC65               	btfss	3941,6,c	;volatile
 21105  012D24  D002               	goto	i2u758_40
 21106  012D26  0E01               	movlw	1
 21107  012D28  D001               	goto	i2u758_46
 21108  012D2A                     i2u758_40:
 21109  012D2A  0E00               	movlw	0
 21110  012D2C                     i2u758_46:
 21111  012D2C  6EDF               	movwf	indf2,c
 21112                           
 21113                           ; BSR set to: 15
 21114                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 21115  012D2E  EE20 F00D          	lfsr	2,13
 21116  012D32  5039               	movf	CANreceiveMessage@msg,w,c
 21117  012D34  26D9               	addwf	fsr2l,f,c
 21118  012D36  503A               	movf	CANreceiveMessage@msg+1,w,c
 21119  012D38  22DA               	addwfc	fsr2h,f,c
 21120  012D3A  5065               	movf	3941,w,c	;volatile
 21121  012D3C  0B0F               	andlw	15
 21122  012D3E  6EDF               	movwf	indf2,c
 21123                           
 21124                           ; BSR set to: 15
 21125                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 21126  012D40  EE20 F00C          	lfsr	2,12
 21127  012D44  5039               	movf	CANreceiveMessage@msg,w,c
 21128  012D46  26D9               	addwf	fsr2l,f,c
 21129  012D48  503A               	movf	CANreceiveMessage@msg+1,w,c
 21130  012D4A  22DA               	addwfc	fsr2h,f,c
 21131  012D4C  A662               	btfss	3938,3,c	;volatile
 21132  012D4E  D002               	goto	i2u759_40
 21133  012D50  0E01               	movlw	1
 21134  012D52  D001               	goto	i2u759_46
 21135  012D54                     i2u759_40:
 21136  012D54  0E00               	movlw	0
 21137  012D56                     i2u759_46:
 21138  012D56  6EDF               	movwf	indf2,c
 21139                           
 21140                           ; BSR set to: 15
 21141                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 21142  012D58  B662               	btfsc	3938,3,c	;volatile
 21143  012D5A  D043               	goto	i2l6374
 21144                           
 21145                           ; BSR set to: 15
 21146                           ;inc\CANlib.h: 606: {
 21147                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 21148  012D5C  CF61 F03B          	movff	3937,??_CANreceiveMessage	;volatile
 21149  012D60  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21150  012D62  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21151  012D64  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21152  012D66  0E03               	movlw	3
 21153  012D68                     i2u761_45:
 21154  012D68  90D8               	bcf	status,0,c
 21155  012D6A  363B               	rlcf	??_CANreceiveMessage,f,c
 21156  012D6C  363C               	rlcf	??_CANreceiveMessage+1,f,c
 21157  012D6E  363D               	rlcf	??_CANreceiveMessage+2,f,c
 21158  012D70  363E               	rlcf	??_CANreceiveMessage+3,f,c
 21159  012D72  2EE8               	decfsz	wreg,f,c
 21160  012D74  D7F9               	goto	i2u761_45
 21161  012D76  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21162  012D7A  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21163  012D7E  C03B  FFDE         	movff	??_CANreceiveMessage,postinc2
 21164  012D82  C03C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21165  012D86  C03D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21166  012D8A  C03E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21167                           
 21168                           ; BSR set to: 15
 21169                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 21170  012D8E  3862               	swapf	3938,w,c	;volatile
 21171  012D90  42E8               	rrncf	wreg,f,c
 21172  012D92  0B07               	andlw	7
 21173  012D94  0B07               	andlw	7
 21174  012D96  6E44               	movwf	CANreceiveMessage@tamp,c
 21175                           
 21176                           ; BSR set to: 15
 21177                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 21178  012D98  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21179  012D9C  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21180  012DA0  CFDE F03B          	movff	postinc2,??_CANreceiveMessage
 21181  012DA4  CFDE F03C          	movff	postinc2,??_CANreceiveMessage+1
 21182  012DA8  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+2
 21183  012DAC  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+3
 21184  012DB0  5044               	movf	CANreceiveMessage@tamp,w,c
 21185  012DB2  243B               	addwf	??_CANreceiveMessage,w,c
 21186  012DB4  6E3F               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 21187  012DB6  0E00               	movlw	0
 21188  012DB8  203C               	addwfc	??_CANreceiveMessage+1,w,c
 21189  012DBA  6E40               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 21190  012DBC  0E00               	movlw	0
 21191  012DBE  203D               	addwfc	??_CANreceiveMessage+2,w,c
 21192  012DC0  6E41               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 21193  012DC2  0E00               	movlw	0
 21194  012DC4  203E               	addwfc	??_CANreceiveMessage+3,w,c
 21195  012DC6  6E42               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 21196  012DC8  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21197  012DCC  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21198  012DD0  C03F  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 21199  012DD4  C040  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 21200  012DD8  C041  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 21201  012DDC  C042  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 21202                           
 21203                           ;inc\CANlib.h: 610: }
 21204  012DE0  D08E               	goto	i2l6400
 21205  012DE2                     i2l6374:
 21206                           
 21207                           ; BSR set to: 15
 21208                           ;inc\CANlib.h: 611: else
 21209                           ;inc\CANlib.h: 612: {
 21210                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 21211  012DE2  CF64 F03B          	movff	3940,??_CANreceiveMessage	;volatile
 21212  012DE6  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21213  012DE8  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21214  012DEA  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21215  012DEC  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21216  012DF0  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21217  012DF4  C03B  FFDE         	movff	??_CANreceiveMessage,postinc2
 21218  012DF8  C03C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21219  012DFC  C03D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21220  012E00  C03E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21221                           
 21222                           ; BSR set to: 15
 21223                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 21224  012E04  CF63 F03B          	movff	3939,??_CANreceiveMessage	;volatile
 21225  012E08  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21226  012E0A  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21227  012E0C  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21228  012E0E  C03D  F03E         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 21229  012E12  C03C  F03D         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 21230  012E16  C03B  F03C         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 21231  012E1A  6A3B               	clrf	??_CANreceiveMessage,c
 21232  012E1C  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21233  012E20  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21234  012E24  503B               	movf	??_CANreceiveMessage,w,c
 21235  012E26  26DE               	addwf	postinc2,f,c
 21236  012E28  503C               	movf	??_CANreceiveMessage+1,w,c
 21237  012E2A  22DE               	addwfc	postinc2,f,c
 21238  012E2C  503D               	movf	??_CANreceiveMessage+2,w,c
 21239  012E2E  22DE               	addwfc	postinc2,f,c
 21240  012E30  503E               	movf	??_CANreceiveMessage+3,w,c
 21241  012E32  22DE               	addwfc	postinc2,f,c
 21242                           
 21243                           ; BSR set to: 15
 21244                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 21245  012E34  A062               	btfss	3938,0,c	;volatile
 21246  012E36  D00D               	goto	i2l6382
 21247                           
 21248                           ; BSR set to: 15
 21249                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 21250  012E38  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21251  012E3C  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21252  012E40  0E00               	movlw	0
 21253  012E42  12DE               	iorwf	postinc2,f,c
 21254  012E44  0E00               	movlw	0
 21255  012E46  12DE               	iorwf	postinc2,f,c
 21256  012E48  0E01               	movlw	1
 21257  012E4A  12DE               	iorwf	postinc2,f,c
 21258  012E4C  0E00               	movlw	0
 21259  012E4E  12DE               	iorwf	postinc2,f,c
 21260  012E50  D000               	goto	i2l6382
 21261  012E52                     i2l6382:
 21262                           
 21263                           ; BSR set to: 15
 21264                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 21265  012E52  A262               	btfss	3938,1,c	;volatile
 21266  012E54  D00D               	goto	i2l6386
 21267                           
 21268                           ; BSR set to: 15
 21269                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 21270  012E56  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21271  012E5A  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21272  012E5E  0E00               	movlw	0
 21273  012E60  12DE               	iorwf	postinc2,f,c
 21274  012E62  0E00               	movlw	0
 21275  012E64  12DE               	iorwf	postinc2,f,c
 21276  012E66  0E02               	movlw	2
 21277  012E68  12DE               	iorwf	postinc2,f,c
 21278  012E6A  0E00               	movlw	0
 21279  012E6C  12DE               	iorwf	postinc2,f,c
 21280  012E6E  D000               	goto	i2l6386
 21281  012E70                     i2l6386:
 21282                           
 21283                           ; BSR set to: 15
 21284                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 21285  012E70  AA62               	btfss	3938,5,c	;volatile
 21286  012E72  D00D               	goto	i2l6390
 21287                           
 21288                           ; BSR set to: 15
 21289                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 21290  012E74  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21291  012E78  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21292  012E7C  0E00               	movlw	0
 21293  012E7E  12DE               	iorwf	postinc2,f,c
 21294  012E80  0E00               	movlw	0
 21295  012E82  12DE               	iorwf	postinc2,f,c
 21296  012E84  0E04               	movlw	4
 21297  012E86  12DE               	iorwf	postinc2,f,c
 21298  012E88  0E00               	movlw	0
 21299  012E8A  12DE               	iorwf	postinc2,f,c
 21300  012E8C  D000               	goto	i2l6390
 21301  012E8E                     i2l6390:
 21302                           
 21303                           ; BSR set to: 15
 21304                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 21305  012E8E  AC62               	btfss	3938,6,c	;volatile
 21306  012E90  D00D               	goto	i2l6394
 21307                           
 21308                           ; BSR set to: 15
 21309                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 21310  012E92  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21311  012E96  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21312  012E9A  0E00               	movlw	0
 21313  012E9C  12DE               	iorwf	postinc2,f,c
 21314  012E9E  0E00               	movlw	0
 21315  012EA0  12DE               	iorwf	postinc2,f,c
 21316  012EA2  0E08               	movlw	8
 21317  012EA4  12DE               	iorwf	postinc2,f,c
 21318  012EA6  0E00               	movlw	0
 21319  012EA8  12DE               	iorwf	postinc2,f,c
 21320  012EAA  D000               	goto	i2l6394
 21321  012EAC                     i2l6394:
 21322                           
 21323                           ; BSR set to: 15
 21324                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 21325  012EAC  AE62               	btfss	3938,7,c	;volatile
 21326  012EAE  D00D               	goto	i2l6398
 21327                           
 21328                           ; BSR set to: 15
 21329                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 21330  012EB0  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21331  012EB4  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21332  012EB8  0E00               	movlw	0
 21333  012EBA  12DE               	iorwf	postinc2,f,c
 21334  012EBC  0E00               	movlw	0
 21335  012EBE  12DE               	iorwf	postinc2,f,c
 21336  012EC0  0E10               	movlw	16
 21337  012EC2  12DE               	iorwf	postinc2,f,c
 21338  012EC4  0E00               	movlw	0
 21339  012EC6  12DE               	iorwf	postinc2,f,c
 21340  012EC8  D000               	goto	i2l6398
 21341  012ECA                     i2l6398:
 21342                           
 21343                           ; BSR set to: 15
 21344                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 21345  012ECA  CF61 F03B          	movff	3937,??_CANreceiveMessage	;volatile
 21346  012ECE  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21347  012ED0  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21348  012ED2  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21349  012ED4  0E15               	movlw	21
 21350  012ED6                     i2u767_45:
 21351  012ED6  90D8               	bcf	status,0,c
 21352  012ED8  363B               	rlcf	??_CANreceiveMessage,f,c
 21353  012EDA  363C               	rlcf	??_CANreceiveMessage+1,f,c
 21354  012EDC  363D               	rlcf	??_CANreceiveMessage+2,f,c
 21355  012EDE  363E               	rlcf	??_CANreceiveMessage+3,f,c
 21356  012EE0  2EE8               	decfsz	wreg,f,c
 21357  012EE2  D7F9               	goto	i2u767_45
 21358  012EE4  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21359  012EE8  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21360  012EEC  503B               	movf	??_CANreceiveMessage,w,c
 21361  012EEE  12DE               	iorwf	postinc2,f,c
 21362  012EF0  503C               	movf	??_CANreceiveMessage+1,w,c
 21363  012EF2  12DE               	iorwf	postinc2,f,c
 21364  012EF4  503D               	movf	??_CANreceiveMessage+2,w,c
 21365  012EF6  12DE               	iorwf	postinc2,f,c
 21366  012EF8  503E               	movf	??_CANreceiveMessage+3,w,c
 21367  012EFA  12DE               	iorwf	postinc2,f,c
 21368  012EFC  D000               	goto	i2l6400
 21369  012EFE                     i2l6400:
 21370                           
 21371                           ; BSR set to: 15
 21372                           ;inc\CANlib.h: 629: }
 21373                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 21374  012EFE  9E60               	bcf	3936,7,c	;volatile
 21375                           
 21376                           ; BSR set to: 15
 21377                           ;inc\CANlib.h: 632: return (error);
 21378                           ;	Return value of _CANreceiveMessage is never used
 21379  012F00  0012               	return	
 21380                           
 21381                           ; BSR set to: 15
 21382                           
 21383                           ; BSR set to: 15
 21384  012F02  0012               	return		;funcret
 21385  012F04                     __end_of_CANreceiveMessage:
 21386                           	opt stack 0
 21387                           pclatu	equ	0xFFB
 21388                           pclath	equ	0xFFA
 21389                           tblptru	equ	0xFF8
 21390                           tblptrh	equ	0xFF7
 21391                           tblptrl	equ	0xFF6
 21392                           tablat	equ	0xFF5
 21393                           prodh	equ	0xFF4
 21394                           prodl	equ	0xFF3
 21395                           intcon	equ	0xFF2
 21396                           postinc0	equ	0xFEE
 21397                           fsr0h	equ	0xFEA
 21398                           fsr0l	equ	0xFE9
 21399                           wreg	equ	0xFE8
 21400                           indf1	equ	0xFE7
 21401                           plusw1	equ	0xFE3
 21402                           fsr1h	equ	0xFE2
 21403                           fsr1l	equ	0xFE1
 21404                           bsr	equ	0xFE0
 21405                           indf2	equ	0xFDF
 21406                           postinc2	equ	0xFDE
 21407                           postdec2	equ	0xFDD
 21408                           plusw2	equ	0xFDB
 21409                           fsr2h	equ	0xFDA
 21410                           fsr2l	equ	0xFD9
 21411                           status	equ	0xFD8
 21412                           
 21413 ;; *************** function _CANisRxReady *****************
 21414 ;; Defined at:
 21415 ;;		line 1163 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 21416 ;; Parameters:    Size  Location     Type
 21417 ;;		None
 21418 ;; Auto vars:     Size  Location     Type
 21419 ;;		None
 21420 ;; Return value:  Size  Location     Type
 21421 ;;                  1    wreg      unsigned char 
 21422 ;; Registers used:
 21423 ;;		wreg, status,2
 21424 ;; Tracked objects:
 21425 ;;		On entry : 0/0
 21426 ;;		On exit  : 0/0
 21427 ;;		Unchanged: 0/0
 21428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21432 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21433 ;;Total ram usage:        1 bytes
 21434 ;; Hardware stack levels used:    1
 21435 ;; This function calls:
 21436 ;;		Nothing
 21437 ;; This function is called by:
 21438 ;;		_ISR_alta
 21439 ;; This function uses a non-reentrant model
 21440 ;;
 21441                           
 21442                           	psect	text66
 21443  015F00                     __ptext66:
 21444                           	opt stack 0
 21445  015F00                     _CANisRxReady:
 21446                           	opt stack 20
 21447                           
 21448                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 21449                           
 21450                           ; BSR set to: 15
 21451                           ;incstack = 0
 21452  015F00  0E01               	movlw	1
 21453  015F02  6E39               	movwf	_CANisRxReady$3257,c
 21454  015F04  BE60               	btfsc	3936,7,c	;volatile
 21455  015F06  D005               	goto	i2l583
 21456  015F08  010F               	movlb	15	; () banked
 21457  015F0A  BF50               	btfsc	80,7,b	;volatile
 21458  015F0C  D002               	goto	i2l583
 21459                           
 21460                           ; BSR set to: 15
 21461  015F0E  0E00               	movlw	0
 21462  015F10  6E39               	movwf	_CANisRxReady$3257,c
 21463  015F12                     i2l583:
 21464  015F12  5039               	movf	_CANisRxReady$3257,w,c
 21465  015F14  0012               	return	
 21466  015F16  0012               	return		;funcret
 21467  015F18                     __end_of_CANisRxReady:
 21468                           	opt stack 0
 21469                           pclatu	equ	0xFFB
 21470                           pclath	equ	0xFFA
 21471                           tblptru	equ	0xFF8
 21472                           tblptrh	equ	0xFF7
 21473                           tblptrl	equ	0xFF6
 21474                           tablat	equ	0xFF5
 21475                           prodh	equ	0xFF4
 21476                           prodl	equ	0xFF3
 21477                           intcon	equ	0xFF2
 21478                           postinc0	equ	0xFEE
 21479                           fsr0h	equ	0xFEA
 21480                           fsr0l	equ	0xFE9
 21481                           wreg	equ	0xFE8
 21482                           indf1	equ	0xFE7
 21483                           plusw1	equ	0xFE3
 21484                           fsr1h	equ	0xFE2
 21485                           fsr1l	equ	0xFE1
 21486                           bsr	equ	0xFE0
 21487                           indf2	equ	0xFDF
 21488                           postinc2	equ	0xFDE
 21489                           postdec2	equ	0xFDD
 21490                           plusw2	equ	0xFDB
 21491                           fsr2h	equ	0xFDA
 21492                           fsr2l	equ	0xFD9
 21493                           status	equ	0xFD8
 21494                           pclatu	equ	0xFFB
 21495                           pclath	equ	0xFFA
 21496                           tblptru	equ	0xFF8
 21497                           tblptrh	equ	0xFF7
 21498                           tblptrl	equ	0xFF6
 21499                           tablat	equ	0xFF5
 21500                           prodh	equ	0xFF4
 21501                           prodl	equ	0xFF3
 21502                           intcon	equ	0xFF2
 21503                           postinc0	equ	0xFEE
 21504                           fsr0h	equ	0xFEA
 21505                           fsr0l	equ	0xFE9
 21506                           wreg	equ	0xFE8
 21507                           indf1	equ	0xFE7
 21508                           plusw1	equ	0xFE3
 21509                           fsr1h	equ	0xFE2
 21510                           fsr1l	equ	0xFE1
 21511                           bsr	equ	0xFE0
 21512                           indf2	equ	0xFDF
 21513                           postinc2	equ	0xFDE
 21514                           postdec2	equ	0xFDD
 21515                           plusw2	equ	0xFDB
 21516                           fsr2h	equ	0xFDA
 21517                           fsr2l	equ	0xFD9
 21518                           status	equ	0xFD8
 21519                           
 21520                           	psect	rparam
 21521  0000                     pclatu	equ	0xFFB
 21522                           pclath	equ	0xFFA
 21523                           tblptru	equ	0xFF8
 21524                           tblptrh	equ	0xFF7
 21525                           tblptrl	equ	0xFF6
 21526                           tablat	equ	0xFF5
 21527                           prodh	equ	0xFF4
 21528                           prodl	equ	0xFF3
 21529                           intcon	equ	0xFF2
 21530                           postinc0	equ	0xFEE
 21531                           fsr0h	equ	0xFEA
 21532                           fsr0l	equ	0xFE9
 21533                           wreg	equ	0xFE8
 21534                           indf1	equ	0xFE7
 21535                           plusw1	equ	0xFE3
 21536                           fsr1h	equ	0xFE2
 21537                           fsr1l	equ	0xFE1
 21538                           bsr	equ	0xFE0
 21539                           indf2	equ	0xFDF
 21540                           postinc2	equ	0xFDE
 21541                           postdec2	equ	0xFDD
 21542                           plusw2	equ	0xFDB
 21543                           fsr2h	equ	0xFDA
 21544                           fsr2l	equ	0xFD9
 21545                           status	equ	0xFD8


Data Sizes:
    Strings     464
    Constant    144
    Data        1
    BSS         149
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      76
    BANK0           160     91     141
    BANK1           256     33      94
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_35(CODE[21]), STR_34(CODE[21]), STR_33(CODE[21]), STR_32(CODE[21]), 
		 -> STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[21]), STR_28(CODE[21]), 
		 -> STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), 
		 -> STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[8]), STR_14(CODE[8]), STR_13(CODE[5]), STR_12(CODE[5]), 
		 -> STR_11(CODE[5]), STR_10(CODE[7]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_7(CODE[12]), STR_6(CODE[21]), STR_4(CODE[21]), STR_3(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK1[8]), park_assist_state(BANK1[8]), data_steering(BANK1[8]), data_brake(COMRAM[8]), 
		 -> data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    ___lbtofl->___flpack
    ___awtofl->___flpack
    _LCD_Parking->_LCD_write_message
    _LCD_Park->_LCD_write_message
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awtofl
    ___flmul->___lbtofl
    ___awdiv->___awmod
    ___lltofl->___flpack
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___lwtofl->___flpack
    ___fldiv->___lwtofl
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_Gap->_LCD_write_message
    _LCD_Error->_LCD_write_message
    _LCD_End->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Tx->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  568576
                                             25 BANK1      8     8      0
                             _CAN_Rx
                             _CAN_Tx
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                            _LCD_End
                          _LCD_Error
                            _LCD_Gap
                        _LCD_Handler
                           _LCD_Park
                        _LCD_Parking
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                           ___awtofl
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___lbtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             30 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             16 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             16 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lbtofl                                             5     1      4    2675
                                             26 BANK0      5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) ___awtofl                                             9     5      4    2854
                                             26 BANK0      5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Parking                                          0     0      0   57370
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Park                                             0     0      0   57370
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  155132
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___lwtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   47610
                                             81 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                           ___lltofl
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4   10211
                                             46 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             16 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9932
                                             46 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             15     7      8    5710
                                             31 BANK0     15     7      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtofl (ARG)
                           ___flpack
                           ___lbtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             22 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             16 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             16 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___lltofl                                             4     0      4    2752
                                             26 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             16 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             16 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             71 BANK0     10     6      4
                           ___awtofl (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___lbtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4809
                                             71 BANK0      8     0      8
                            ___fladd
                           ___lltofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             12     4      8    4445
                                             59 BANK0     12     4      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___flpack
                           ___lbtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             46 BANK0      4     0      4
                            ___flmul (ARG)
                           ___lbtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     660
                                             16 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lwtofl                                             4     0      4    2752
                                             26 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             15     7      8    3329
                                             30 BANK0     15     7      8
                           ___flpack
                           ___lwtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flpack                                            10     4      6    2644
                                             16 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12052
                                             40 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             32 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             23 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             16 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             16 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             33 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18137
                                             31 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             28 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_Gap                                              0     0      0   57370
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Error                                            0     0      0   57370
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_End                                              0     0      0   57370
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   11983
                                             33 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             28 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             30 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             28 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             28 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             24 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             22 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     1     1      0      68
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_Tx                                               0     0      0    4363
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4339
                                             16 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Rx                                               4     4      0       0
                                             16 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           17    17      0    3558
                                             33 COMRAM     1     1      0
                                              0 BANK0     16    16      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    2243
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Rx
   _CAN_Tx
     _CANisTxReady
     _CANsendMessage
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_End
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Error
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Gap
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___flpack
       ___lwtofl (ARG)
         ___flpack
     ___lwtofl
       ___flpack
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___lbtofl (ARG)
             ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___lbtofl (ARG)
           ___flpack
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
             ___lbtofl (ARG)
               ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
         ___lltofl (ARG)
           ___flpack
       ___fltol
         ___awtofl (ARG)
           ___flpack
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
             ___lbtofl (ARG)
               ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___lbtofl (ARG)
             ___flpack
         ___lbtofl (ARG)
           ___flpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
       ___lldiv
       ___llmod
       ___lltofl
         ___flpack
       ___wmul
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
   _LCD_Park
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Parking
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___awtofl
     ___flpack
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___lbtofl (ARG)
         ___flpack
     ___flpack (ARG)
     ___lbtofl (ARG)
       ___flpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtofl (ARG)
       ___flpack
     ___flpack (ARG)
     ___lbtofl (ARG)
       ___flpack
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
     ___lbtofl (ARG)
       ___flpack
   ___fltol
     ___awtofl (ARG)
       ___flpack
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___lbtofl (ARG)
           ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___lbtofl (ARG)
         ___flpack
     ___lbtofl (ARG)
       ___flpack
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
   ___lbtofl
     ___flpack
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      5E       7       36.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5B      8D       5       88.1%
BITCOMRAM           5F      0       3       0        3.2%
COMRAM              5F     22      4C       1       80.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     137      20        0.0%
DATA                 0      0     137       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Jun 01 16:32:33 2016

                                _x 0265                                  _y 0266  
                                _z 0267          __size_of_delay_set_quartz 000A  
                     ___fldiv@cntr 008A               __end_of_CANSetFilter 0B2A  
                     ?_LCD_Handler 0028                       ___fldiv@sign 008C  
                     ___awdiv@sign 007B                                 _id 0001  
                               bsr 000FE0                ___wmul@multiplicand 0072  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                       __CFG_CP2$OFF 000000  
                     ?_LCD_Parking 0028                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                       __CFG_CP4$OFF 000000  
                     __CFG_CP5$OFF 000000                       ___flpack@arg 0070  
                     ___flpack@exp 0074                                l400 194A  
                              l401 16D6                                l410 1894  
                              l402 16DA                                l411 1898  
                              l403 17D4                                l420 1A00  
                              l412 18A4                                l404 1762  
                              l500 063A                                l421 1A0A  
                              l405 176C                                l501 063E  
                              l406 1776                                l510 074E  
                              l502 064A                                l415 1960  
                              l407 1780                                l511 075A  
                              l503 064E                                l424 1B1E  
                              l416 1964                                l520 086A  
                              l512 075E                                l504 065A  
                              l425 1B22                                l417 1A5E  
                              l521 086E                                l513 076A  
                              l426 1B2E                                l418 19EC  
                              l530 097E                                l522 087A  
                              l514 076E                                l419 19F6  
                              l531 098A                                l523 087E  
                              l515 077A                                l507 073A  
                              l540 0A9A                                l532 098E  
                              l524 088A                                l508 073E  
                              l460 365A                                l380 4288  
                              l541 0A9E                                l533 099A  
                              l525 088E                                l509 074A  
                              l461 365E                                l381 4292  
                              l390 14E2                                l542 0AAA  
                              l534 099E                                l526 089A  
                              l518 085A                                l470 376A  
                              l462 366A                                l454 362A  
                              l391 14EC                                l543 0AAE  
                              l535 09AA                                l519 085E  
                              l471 3776                                l455 362E  
                              l392 14F6                                l544 0ABA  
                              l536 09AE                                l472 377A  
                              l456 363A                                l385 16C0  
                              l545 0ABE                                l537 09BA  
                              l529 097A                                l473 3786  
                              l465 3746                                l457 363E  
                              l386 144C                                l546 0ACA  
                              l490 0520                                l466 374A  
                              l458 364A                                l395 160A  
                              l387 1450                                l547 0ACE  
                              l491 052C                                l467 3756  
                              l459 364E                                l396 160E  
                              l388 154A                                l548 0ADA  
                              l492 0530                                l468 375A  
                              l397 161A                                l389 14D8  
                              l493 053C                                l485 04FC  
                              l469 3766                                l486 0500  
                              l830 1D62                                l591 5C92  
                              l487 050C                                l496 061A  
                              l488 0510                                l832 1EBC  
                              l824 1D36                                l497 061E  
                              l489 051C                                l825 1D66  
                              l578 5E82                                l498 062A  
                              l499 062E                                l819 1D2A  
                              l860 2080                                l844 1EB6  
                              l853 2078                                l845 1EB2  
                              l837 1E2A                                l942 5F36  
                              l935 5F4C                                l871 21BC  
                              l928 5F20                                l873 21B8  
                              l947 5BC0                                l949 5BC4  
             ??_PWR_Button_Polling 0070                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                        ?_LCD_cursor 007C  
                              _dir 00E7                                _msg 0011  
                              _str 0111                       ___awmod@sign 0075  
                              prod 000FF3                                wreg 000FE8  
                     ___flmul@cntr 008C                       ___flmul@sign 008D  
                  __end_of_LCD_Gap 595E                       __CFG_LVP$OFF 000000  
                  __end_of_LCD_End 5A26                      ___flpack@sign 0075  
           __size_of_LCD_goto_line 00EE                       ___fltol@exp1 00B0  
                     __CFG_WDT$OFF 000000                               l1050 117E  
                             l1303 499C                               l1304 49B4  
                             l1312 3D9A                               l1316 3DD8  
                             l1318 3E06                               l1327 3EF2  
                             l1361 4884                               l1296 493A  
                             l1545 5348                               l1369 4FDE  
                             l1482 46F0                               l1475 4624  
                             l1476 4668                               l5014 017A  
                             l1639 5742                               l1576 52A2  
                             l5120 058A                               l5032 0236  
                             l1649 5828                               l1586 5622  
                             l5114 0542                               l5050 02F2  
                             l5222 08E8                               l4600 56E8  
                             l5216 08A0                               l4602 56F6  
                             l5250 09C0                               l5154 06A8  
                             l4612 5732                               l4604 5700  
                             l4620 57DA                               l5148 0660  
                             l5068 03AE                               l4622 57E8  
                             l5182 0780                               l5086 046A  
                             l4624 57F2                               l5328 5B4C  
                             l8000 0B54                               l5256 0A08  
                             l4628 5818                               l8100 0FFC  
                             l8012 0BD6                               l5284 0AE0  
                             l5188 07C8                               l8030 0C56  
                             l8022 0C10                               l8014 0BF2  
                             l5800 178C                               l6504 537A  
                             l7400 3E3E                               l8112 1050  
                             l8104 100A                               l8040 0CAA  
                             l8024 0C3A                               l8008 0B8A  
                             l6514 53C4                               l7306 5C84  
                             l4850 52BE                               l7330 48CA  
                             l8210 4D34                               l7410 3E92  
                             l8018 0C06                               l4914 359E  
                             l5820 1888                               l5724 1502  
                             l4860 5302                               l7340 497A  
                             l7332 48DC                               l8204 4D0E  
                             l7420 3EE2                               l7412 3E9E  
                             l7500 513C                               l8140 1184  
                             l8116 107C                               l8108 104A  
                             l4940 3670                               l5902 1B34  
                             l5750 1620                               l6518 53FE  
                             l7342 498C                               l7334 491C  
                             l7326 48B4                               l8230 4DDA  
                             l8222 4D84                               l7406 3E70  
                             l8134 114C                               l8118 1084  
                             l8126 1120                               l8070 0DFE  
                             l5744 15FE                               l7352 4A02  
                             l7424 3F1A                               l7408 3E82  
                             l7512 5172                               l8152 1218  
                             l8136 1160                               l8128 1130  
                             l8080 0EA8                               l8072 0E3C  
                             l8064 0DB4                               l8056 0D30  
                             l8400 418A                               l4880 5EF2  
                             l5680 4296                               l5672 422A  
                             l5826 18AA                               l8234 4DEE  
                             l7418 3ED0                               l7514 5180  
                             l7506 5154                               l8170 133A  
                             l8162 130E                               l8074 0E52  
                             l8402 419C                               l4946 36B8  
                             l5666 421A                               l6548 57B0  
                             l7428 3F42                               l7380 3DAC  
                             l7532 51E2                               l7524 51BC  
                             l7516 518A                               l8164 131E  
                             l8148 11B6                               l8092 0F6A  
                             l8084 0EDA                               l8068 0DE8  
                             l8172 134A                               l4972 378C  
                             l5684 429E                               l7438 3F96  
                             l7710 467A                               l7470 4C48  
                             l7454 4BD0                               l7622 3A7A  
                             l7614 397E                               l8190 13F8  
                             l8182 139A                               l8086 0EE6  
                             l8094 0F7E                               l8350 3FC8  
                             l5686 42E2                               l5678 4280  
                             l7392 3DFC                               l7528 51CC  
                             l7560 54BA                               l7552 547C  
                             l7544 5456                               l7448 4BAA  
                             l8192 1400                               l7810 502A  
                             l7386 3DEA                               l7730 46E6  
                             l7722 46B6                               l7554 548A  
                             l7482 4C98                               l7466 4C20  
                             l7642 316C                               l8186 13CC  
                             l8178 1372                               l8098 0FF6  
                             l8194 1426                               l4898 34E6  
                             l8602 1D22                               l5876 1A16  
                             l7804 4F8C                               l7900 560E  
                             l7556 5494                               l7564 54CA  
                             l7548 5468                               l7476 4C68  
                             l7660 33F8                               l7636 3096  
                             l8436 5AF0                               l4996 00C0  
                             l8612 1D4E                               l7582 5036  
                             l7590 50FE                               l7574 5A92  
                             l7718 46A2                               l7478 4C70  
                             l7654 3322                               l7646 319E  
                             l8390 4146                               l8374 40DE  
                             l8710 20F2                               l5896 1B12  
                             l7584 5068                               l7912 5D10  
                             l7744 474E                               l7728 46D4  
                             l7568 54E0                               l7488 4CB8  
                             l7672 5E30                               l8376 40F0  
                             l8720 2120                               l8616 1D5E  
                             l8560 1C04                               l7586 509A  
                             l7578 5AC6                               l7594 5E3E  
                             l7818 5C18                               l7770 480E  
                             l7738 4728                               l7682 4596  
                             l8386 4122                               l8378 40F4  
                             l8626 1D8E                               l8634 1DD0  
                             l7588 50CC                               l7916 5D2C  
                             l7940 44C8                               l7932 43FE  
                             l7844 4EB4                               l7828 4E44  
                             l8388 4134                               l8740 21DE  
                             l8732 214C                               l8716 210E  
                             l8708 20EC                               l8724 2130  
                             l8644 1DEC                               l8652 1E2E  
                             l7598 5E54                               l7926 43E8  
                             l7862 4F24                               l7854 4EE6  
                             l7790 487A                               l7782 484A  
                             l7766 47FA                               l7758 47A4  
                             l8726 2140                               l7928 43F0  
                             l7944 44D0                               l7856 4EF8  
                             l7848 4EC8                               l7872 521C  
                             l7688 45D0                               l8744 21F4  
                             l8664 1EEA                               l8672 1F2C  
                             l7938 448C                               l7858 4F06  
                             l7874 522E                               l7778 4836  
                             l8770 22C4                               l8690 2048  
                             l8674 1F2E                               l8594 1C96  
                             l7948 454A                               l7796 5A4E  
                             l7884 528E                               l7876 5238  
                             l7892 55AC                               l7788 4868  
                             l8780 22E0                               l8764 22B0  
                             l8772 22CA                               l8692 204E  
                             l8676 1F32                               l7894 55BE  
                             l8758 229C                               l8686 1FE2  
                             l8598 1D0E                               l7896 55C8  
                             l8696 2070                               l7994 0B3A  
                             l8786 231E                               l8788 2324  
                             STR_1 FF7F                               STR_2 FF55  
                             STR_3 FE83                               STR_4 FF7F  
                             STR_5 FFFA                               STR_6 FF6A  
                             STR_7 FFC8                               STR_8 FFA9  
                             STR_9 FFBA                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _LATD 000F8C                               _LATE 000F8D  
                             u6000 09E0                               u6005 09D4  
                             u5205 3578                               u5150 3460  
                             u5155 3454                               u5405 009A  
                             u5165 34C0                               u5510 026C  
                             u5430 00F4                               u5190 3518  
                             u6080 0B00                               u5360 37AC  
                             u5280 3690                               u5515 0260  
                             u5435 00E8                               u5195 350C  
                             u6085 0AF4                               u5605 0444  
                             u5525 02CC                               u5445 0154  
                             u5365 37A0                               u5285 3684  
                             u5550 0328                               u5470 01B0  
                             u5390 003A                               u5555 031C  
                             u5475 01A4                               u5395 002E  
                _F2_Button_Polling 5F2E                               u5565 0388  
                             u5485 0210                               u5590 03E4  
                             u6800 17AC                               u5920 08C0  
                             u5840 07A0                               u5760 0680  
                             u5680 0562                               u9105 5C52  
                             u6810 17F8                               u9106 5C54  
                             u9115 5C5E                               u5595 03D8  
                             u9116 5C60                               u6805 17A0  
                             u5925 08B4                               u5845 0794  
                             u5765 0674                               u5685 0556  
                             u6670 1522                               u6815 17EC  
                             u6680 156E                               u6825 1858  
                             u6930 1A36                               u6675 1516  
                             u6940 1A82                               u6685 1562  
                             u9085 5C3A                               u9086 5C3C  
                             u6935 1A2A                               u6695 15CE  
                             u9095 5C46                               u9096 5C48  
                             u6945 1A76                               u6955 1AE2  
                             u9661 4572                               u9681 45AC  
                             u9880 4E64                               u9885 4E58  
              __size_of_CANSetMask 03AA                       ?_LCD_goto_xy 007F  
                             _data 011D                               _main 1BD6  
                             _itoa 5B20                 ?_F2_Button_Polling 0028  
        __size_of_LCD_send_command 003A                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               _utoa 52B4  
               __size_of_LCD_Error 0064                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 00BE                      __CFG_IESO$OFF 000000  
               __size_of_LCD_clear 0032                       _sprintf$4237 013D  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
              ??_F2_Button_Polling 0070           __end_of_LCD_enable_pulse 5EAC  
                 _CANOperationMode 5EE8                       _Can_Tx_Force 0252  
                 __end_of_LCD_Park 58FA                    _space_available 025F  
          __size_of_LCD_initialize 016E         __size_of_CANreceiveMessage 052E  
                    ___fltol@sign1 00AF                    __end_of___fladd 3FC6  
                            ?_main 0028                    __end_of___fldiv 4E1E  
                            ?_itoa 0080                    __end_of___awdiv 51EE  
                  __end_of___flneg 5C2C                              STR_10 FFE4  
                            STR_11 FFF0                              STR_20 FF40  
                            STR_12 FFF5                              STR_13 FFEB  
                            STR_21 FEEC                              STR_14 FFD4  
                            STR_22 FEC2                              STR_30 FE59  
                            STR_15 FFDC                              STR_23 FE6E  
                            STR_31 FE44                              STR_32 FF40  
                            STR_24 FF40                              STR_16 FF40  
                            STR_33 FED7                              STR_17 FF94  
                            STR_25 FF16                              STR_26 FF2B  
                            STR_18 FF01                              STR_34 FE2F  
                            STR_27 FF7F                              STR_19 FEAD  
                            STR_35 FE98                              STR_28 FF40  
                  __end_of___awmod 54EC                              STR_29 FED7  
                  __end_of___flmul 4CE8                    __end_of___flsub 5A86  
                  __end_of___fltol 4F38                              u10011 439C  
                  __end_of___lldiv 52B4                              ?_utoa 0077  
                            u10300 1176                              u11120 2274  
                            u11070 21B0                              u11207 5C86  
                  ___awdiv@divisor 0078                    __end_of___llmod 5634  
                            u10740 1CFA                              _T3CON 000FB1  
                            u10890 1E92                              u10990 206C  
                  __end_of___lwdiv 574C                    __end_of___lwmod 5832  
                            i2l400 279E                              i2l401 257C  
                            i2l410 26F8                              i2l402 2580  
                            i2l411 26FC                              i2l403 2652  
                            i2l420 2834                              i2l412 2706  
                            i2l404 25EE                              i2l421 283C  
                            i2l405 25F6                              i2l406 25FE  
                            i2l415 27B2                              i2l407 2606  
                            i1l815 0078                              i2l432 2C82  
                            i2l424 292E                              i2l416 27B6  
                            i2l425 2932                              i2l417 2888  
                            i2l426 293C                              i2l418 2824  
                            i2l419 282C                              i2l390 23C0  
                            i2l391 23C8                              i2l392 23D0  
                            i2l385 2568                              i2l386 2346  
                            i2l395 24C2                              i2l387 234A  
                            i2l811 3D20                              i2l396 24C6  
                            i2l388 241C                              i2l804 3C96  
                            i2l397 24D0                              i2l389 23B8  
                            i2l583 5F12                              i2l578 5EC6  
                  ___awdiv@counter 007A                              _TMR3H 000FB3  
                            _TMR3L 000FB2                  _CANisRxReady$3257 0039  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                    __CFG_WRT4$OFF 000000                 __size_of_ISR_bassa 00A6  
                    __CFG_WRT5$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
               CANInitialize@flags 0082                     __CFG_EBTR2$OFF 000000  
                    ___awtofl@sign 007E                     __CFG_EBTR3$OFF 000000  
                   __CFG_EBTR4$OFF 000000                   __end_of_ISR_alta 3D5A  
                   __CFG_EBTR5$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                            _check 00C7                     __CFG_EBTRB$OFF 000000  
        __end_of_F2_Button_Polling 5F44                    __end_of_dpowers FE2F  
                            _scale 2F04                    __end_of_isdigit 5E3C  
        __size_of_LCD_shift_cursor 004E                     __pbitbssCOMRAM 0250  
             __end_of_CANisRxReady 5F18                              tablat 000FF5  
             __end_of_CANisTxReady 5E8A                              plusw1 000FE3  
                            plusw2 000FDB                              utoa@c 007F  
                            utoa@v 007D                              status 000FD8  
                  __end_of_sprintf 1436                __size_of_LCD_cursor 0032  
                  __initialization 5B6C                       __end_of_main 2332  
                     __end_of_itoa 5B6C      __size_of_board_initialization 00A4  
                    _LCD_goto_line 5030                       __end_of_utoa 5378  
                ?_Joystick_Polling 0028                 ??_Joystick_Polling 0070  
                ?_LCD_write_string 0081                             ??_main 0156  
                           ??_itoa 0086                             ??_utoa 007D  
        __size_ofi2_CANsendMessage 06A4                      __activetblptr 000003  
                __end_of_LCD_Error 59C2                          ??_LCD_Gap 0083  
                        ??_LCD_End 0083                     _JoystickValues 00DF  
               ??_LCD_write_string 0083               __size_of__tdiv_to_l_ 01A6  
                _CANisTxReady$3255 0070                  __end_of_LCD_clear 5E0E  
            i2CANsendMessage@flags 0040             LCD_write_string@buffer 0081  
                           _ADCON1 000FC1                             _CANCON 000F6F  
                 ___llmod@dividend 0070                             ?_scale 008E  
                           _ADRESH 000FC4                   __end_of___flpack 4A16  
                 ___awdiv@dividend 0076                             _CAN_Rx 574C  
                 __end_of___awtofl 5B20                             _CAN_Tx 5378  
                  __CFG_BBSIZ$1024 000000                   __end_of___lbtofl 5D0E  
                 __end_of___lltofl 5D78                             i2l6400 2EFE  
                           i2l6320 2BC8                             i2l6312 2B56  
                           i2l6332 2C28                             i2l6324 2BE8  
                           i2l6336 2C48                             i2l6328 2C08  
                           i2l6338 2C7C                             i2l6274 29E2  
                           i2l6390 2E8E                             i2l6382 2E52  
                           i2l6374 2DE2                             i2l6278 29EA  
                           i2l6394 2EAC                             i2l6386 2E70  
                           i2l6812 26EE                             i2l6716 23DA  
                           i2l6398 2ECA                             i2l6742 24D6  
                           i2l6736 24B8                             i2l8512 3BEA  
                           i2l8504 3BB8                             i2l6818 270C  
                           i2l8522 3C1E                             i2l8534 3CBA  
                           i2l8526 3C3C                             i2l6792 2610  
                           i2l8544 3CEA                             i2l8480 3B4C  
                           i2l8490 3B7E                             i2l8466 3B08  
                           i2l6868 2846                             i2l8484 3B54  
                           i2l8548 3D1A                             i2l6894 2942  
                           i2l6888 2924                             i2l8498 3BA2  
                 __end_of___lwtofl 5DAA                             _RXB0D0 000F66  
                           _RXB0D1 000F67                             _RXB0D2 000F68  
                           _RXB0D3 000F69                             _RXB0D4 000F6A  
                           _RXB1D0 000F56                             _RXB0D5 000F6B  
                           _RXB1D1 000F57                             _RXB0D6 000F6C  
                           _RXB1D2 000F58                             _RXB0D7 000F6D  
                           _RXB1D3 000F59                             _RXB1D4 000F5A  
                           _RXB1D5 000F5B                             _RXB1D6 000F5C  
                           _RXB1D7 000F5D                             _TXB0D0 000F46  
                           _TXB0D1 000F47                             _TXB0D2 000F48  
                           _TXB0D3 000F49                             _TXB1D0 000F36  
                           _TXB0D4 000F4A                             _TXB1D1 000F37  
                           _TXB0D5 000F4B                             _TXB1D2 000F38  
                           _TXB0D6 000F4C                             _TXB1D3 000F39  
                           _TXB0D7 000F4D                             _TXB2D0 000F26  
                           _TXB1D4 000F3A                             _TXB2D1 000F27  
                           _TXB1D5 000F3B                             _TXB2D2 000F28  
                           _TXB1D6 000F3C                             _TXB2D3 000F29  
                           _TXB1D7 000F3D                             _TXB2D4 000F2A  
                           _TXB2D5 000F2B                             _TXB2D6 000F2C  
                           _TXB2D7 000F2D                 CANsendMessage@data 0074  
               CANsendMessage@tamp 007C                    _switch_position 00EB  
                 __end_of_delay_ms 5CA0              __size_of_CANSetFilter 0B2A  
                   __CFG_XINST$OFF 000000                  __end_of_ISR_bassa 00BE  
                 __end_of__powers_ FE07                         _MotoreFlag 0256  
                   ?_LCD_goto_line 0028                             ___flge 4F38  
                        ??___fladd 00A3                   _delay_set_quartz 5F5A  
                           ___wmul 5CA0                          ??___fldiv 0086  
                        ??___awdiv 007A                          ??___flneg 0092  
                   __CFG_STVREN$ON 000000                          ??___awmod 0074  
                        ??___flmul 0087                          ??___flsub 00AF  
                        ??___fltol 00AB                          ??___lldiv 0078  
                        ??___llmod 0078                          ??___lwdiv 0074  
                     ??_CANSetMask 0075                          ??___lwmod 0074  
          __size_of_LCD_write_char 0096                             _fround 37D6  
   LCD_initialize@quartz_frequency 007E                             clear_0 5B72  
                           clear_1 5B7E                             clear_2 5B90  
                 ___awdiv@quotient 007C                    ___awmod@divisor 0072  
             __size_of_LCD_Handler 01FE                    ___awmod@counter 0074  
                  __CFG_BOREN$BOHW 000000                  _JoystickConstants 00BB  
                           itoa@cp 0086                          ??_isdigit 0070  
             __size_of_LCD_Parking 0064                       __mediumconst FD9E  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8         __size_of_F2_Button_Polling 0016  
                        ??_sprintf 00B9                       _CANSetFilter 0000  
                       ___fladd@f1 009B                         ___fladd@f2 009F  
                       ___flge@ff1 0070                         ___flge@ff2 0074  
                       ___fldiv@f1 007E                         ___fldiv@f2 0082  
                       ___fldiv@f3 0086                         __accesstop 0060  
          __end_of__initialization 5BA8                 __end_of_CANSetMask 37D6  
                        ?_LCD_Park 0028                    __CFG_PBADEN$OFF 000000  
                       _SterzoFlag 0258                         ___flneg@f1 008E  
                 _LCD_send_command 5C2C                         ___flmul@f1 007F  
                       ___flmul@f2 0083                      ___rparam_used 000001  
LCD_write_integer@number_of_digits 008A                         ___flsub@f1 00A7  
                       ___flsub@f2 00AB                         ___fltol@f1 00A7  
             __size_of_LCD_goto_xy 001C                         ___awtofl@c 007A  
                       ___lbtofl@c 007E                     __pcstackCOMRAM 0028  
                     __pidataBANK0 5F64                          ?_ISR_alta 0028  
                       ___lltofl@c 007A                       LCD_goto_xy@x 0080  
                     LCD_goto_xy@y 007F                      __end_of_scale 342C  
                   _LCD_initialize 4A16                  _LCD_write_integer 4392  
                _LCD_write_message 5D0E                         ___lwtofl@c 007A  
            CANSetFilter@numBuffer 0079                 ?_LCD_write_integer 0088  
           LCD_write_integer@index 0097                 ?_LCD_write_message 0081  
                       __div_to_l_ 4702                       ??_LCD_cursor 007D  
           LCD_write_integer@value 0088      LCD_write_integer@convertedInt 0091  
                _space_gap_reached 0260                      _newMessageCan 025B  
                     _actual_speed 00E1              __size_of_CANisRxReady 0018  
            __size_of_CANisTxReady 0026                ??_LCD_write_integer 008C  
                  __div_to_l_@exp1 007D                ??_LCD_write_message 0083  
                  __div_to_l_@cntr 007C                            ??_scale 0092  
                 _LCD_shift_cursor 5A86                    __div_to_l_@quot 0078  
         __end_of_CANOperationMode 5F00                            ?_CAN_Rx 0028  
                          ?_CAN_Tx 0028                         __pbssBANK0 00BB  
                       __pbssBANK1 0100                         _data_brake 0020  
                       ??_LCD_Park 0083            __size_of_CANsendMessage 07A0  
                       _data_speed 0125                      __div_to_l_@f1 0070  
                    __div_to_l_@f2 0074                    ??_LCD_goto_line 007C  
               __end_of_LCD_cursor 5DDC             __end_of_LCD_initialize 4B84  
                          ?___flge 0070                            ?___wmul 0070  
                       ??_ISR_alta 0060          __end_of_LCD_write_integer 455C  
        __end_of_LCD_write_message 5D44                  ?_LCD_enable_pulse 0028  
                        ?___flpack 0070                            ?_fround 008E  
                     _CANisRxReady 5F00                            _CANSTAT 000F6E  
                        ?___awtofl 007A                 ??_LCD_enable_pulse 0078  
                        ?___lbtofl 007A                       _CANisTxReady 5E64  
                        ISR_alta@i 0049                          ?___lltofl 007A  
                          _BRGCON1 000F70                            _BRGCON2 000F71  
                          _BRGCON3 000F72                   i2_CANsendMessage 2332  
                        ?___lwtofl 007A        __size_of_PWR_Button_Polling 0016  
                          _LCD_Gap 58FA                            _LCD_End 59C2  
          __size_ofi2_CANisTxReady 0020             __size_of_CANInitialize 01CE  
                 LCD_cursor@active 007D                          ?_delay_ms 0076  
                          _RXB0DLC 000F65                            _RXB1DLC 000F55  
                          _RXB0CON 000F60                            _RXB1CON 000F50  
                          _TXB0DLC 000F45                            _TXB1DLC 000F35  
                          _TXB2DLC 000F25                CANsendMessage@flags 0077  
                          _AbsFlag 0250                  _parking_message_E 025D  
                  __size_of_CAN_Rx 007A                    __size_of_CAN_Tx 00C0  
                __end_of__npowers_ FDD3                            __Hparam 0000  
                       _left_speed 0009                         _scale$4236 0092  
                          __Lparam 0000                   delay_ms@value_ms 0076  
                  ?_LCD_initialize 0028                    __size_of___flge 00F8  
                          ___fladd 3D5A                            ___fldiv 4CE8  
                          ___awdiv 511E                            ___flneg 5BF0  
                          ___awmod 5438                            ___flmul 4B84  
                          ___flsub 5A26                            ___fltol 4E1E  
                          ___lldiv 51EE                    __size_of___wmul 0038  
                   _LCD_write_char 5634                            ___llmod 5590  
                          ___lwdiv 56CA                            ___lwmod 57C6  
                       ??___flpack 0076               CANInitialize@propSeg 0087  
                          __pcinit 5B6C                         ??___awtofl 007E  
                       ??___lbtofl 007E                            _battery 000F  
                  __size_of_fround 02FE                            __ramtop 0D00  
              LCD_write_char@value 0080                         ??___lltofl 007E  
                          __ptext0 1BD6                            __ptext1 54EC  
                          __ptext2 41C4                            __ptext3 342C  
                          __ptext4 0000                            __ptext5 5EE8  
                          __ptext6 5CD8                            __ptext7 5AD4  
                          __ptext8 5F18                            __ptext9 5832  
                       ??___lwtofl 007E                        ?__div_to_l_ 0070  
                 LCD_write_char@D0 007F                   LCD_write_char@D1 007E  
                 LCD_write_char@D2 007D                   LCD_write_char@D3 007C  
                        _F1_switch 0253                            _dpowers FE07  
                        _F2_switch 0254                            _isdigit 5E0E  
                 ___awmod@dividend 0070                         ??_delay_ms 0078  
           CANreceiveMessage@error 0043       __end_of_board_initialization 5590  
        __size_of_Joystick_Polling 0042                          _LCD_Error 595E  
         __end_of_delay_set_quartz 5F64                            _sprintf 0B2A  
                   __pintcode_body 3AD4                          _LCD_clear 5DDC  
             end_of_initialization 5BA8          __size_of_LCD_write_string 0028  
                          itoa@buf 0080                            itoa@val 0082  
                          int_func 3AD4                          i2u1121_47 3CE2  
                        i2u1054_45 3B26                          i2u1054_46 3B28  
                        i2u1064_45 3C34                          i2u1064_46 3C36  
                        i2u1066_45 3C54                          i2u1067_45 3C6E  
                        i2u1067_46 3C70                          i2u1068_45 3C94  
                        i2u1068_46 3C96                      _CANInitialize 41C4  
                    _parking_error 025C                    ___lldiv@divisor 0074  
               LCD_cursor@blinking 007C                      _parking_state 00E9  
                  ___lldiv@counter 007C             __end_of_LCD_write_char 56CA  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 01CA  
       __size_of_LCD_write_message 0036                            utoa@buf 0077  
                   __tdiv_to_l_@f1 0070                     __tdiv_to_l_@f2 0074  
                          utoa@val 0079                         _wait_low_1 0262  
                       _wait_low_2 0263                         _wait_low_3 0264  
                        _ISR_bassa 0018                      ??__tdiv_to_l_ 0078  
          _steering_correction_dir 0261                          _PORTAbits 000F80  
                        _PORTBbits 000F81                     CANSetMask@mask 0070  
                        _PORTDbits 000F83                     CANSetMask@tamp 007A  
         __end_of_LCD_send_command 5C66                     CANSetMask@type 0074  
                      ___fldiv@exp 008B                  _F1_Button_Polling 5F44  
                       ?_LCD_Error 0028                         ?_LCD_clear 0028  
               ?_F1_Button_Polling 0028                     __end_of_CAN_Rx 57C6  
                   __end_of_CAN_Tx 5438            _clock_counter_reference 00E3  
                      ___flmul@exp 0087                     _CANsendMessage 1436  
                 CANInitialize@BRP 0081                   CANInitialize@SJW 0080  
                   ?_CANInitialize 007E                ??_F1_Button_Polling 0070  
                __size_of_LCD_Park 0064                __size_of__div_to_l_ 0194  
          LCD_write_integer@F17326 0107                    ?_LCD_write_char 0028  
                    ??_LCD_Handler 00BB           __end_of_LCD_shift_cursor 5AD4  
                   __end_of___flge 5030                         ?_ISR_bassa 0028  
                   __end_of___wmul 5CD8                  __size_of_ISR_alta 3D52  
                    ??_LCD_Parking 0083                  LCD_shift_cursor@i 007E  
                   __end_of_fround 3AD4                     i2_CANisTxReady 5EAC  
        __end_of_F1_Button_Polling 5F5A                start_initialization 5B6C  
              __end_of__tdiv_to_l_ 4702                CANSetMask@numBuffer 0079  
                    _data_speed_rx 0100             __end_of_CANsendMessage 1BD6  
                         ??_CAN_Rx 0070                           ??_CAN_Tx 0080  
                ?_CANOperationMode 0028                      _data_steering 012D  
                    ??_LCD_goto_xy 0080         i2CANsendMessage@dataLength 003F  
             i2CANsendMessage@data 003D                 ??_CANOperationMode 0070  
             i2CANsendMessage@tamp 0045                    ___llmod@divisor 0074  
         __end_ofi2_CANsendMessage 29D6         CANInitialize@FilterConfig1 0088  
       CANInitialize@FilterConfig2 0089                    ___llmod@counter 0078  
              _steering_correction 00EA                           ??___flge 0078  
             _board_initialization 54EC                           ??___wmul 0074  
                      __pdataBANK0 00EC                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 0092             __end_ofi2_CANisTxReady 5ECC  
                    sprintf@tmpval 014B                  __size_of___flpack 0180  
           CANInitialize@phaseSeg1 007E             CANInitialize@phaseSeg2 007F  
                       fround@prec 009A                __end_of_LCD_Handler 41C4  
                __size_of___awtofl 004C                           ?_LCD_Gap 0028  
                __size_of___lbtofl 0036                           ?_LCD_End 0028  
                __size_of___lltofl 0034                        __pbssCOMRAM 0001  
                __size_of___lwtofl 0032                      __pcstackBANK0 0060  
                    __pcstackBANK1 013D                        _BRGCON2bits 000F71  
              __end_of_LCD_Parking 5896                        _BRGCON3bits 000F72  
                 _Joystick_Polling 5BAE                        ??_LCD_Error 0083  
        __size_of_LCD_enable_pulse 0022                       _isdigit$3910 0071  
       i2CANsendMessage@identifier 0039                  _park_assist_state 0135  
                __size_of_delay_ms 003A                        ??_LCD_clear 007C  
                  ?_CANsendMessage 0070            LCD_write_message@buffer 0081  
                 _LCD_write_string 5E3C                    ??_CANInitialize 0083  
                      sprintf@flag 0143                        sprintf@fval 0151  
                      sprintf@prec 014F                   ??_LCD_initialize 007E  
               CANSetFilter@filter 0070          delay_set_quartz@frequency 0070  
                 ___lwdiv@dividend 0070                 LCD_send_command@D0 007A  
               LCD_send_command@D1 0079                 LCD_send_command@D2 0078  
               LCD_send_command@D3 007B                __end_of_LCD_goto_xy 5EE8  
            __end_of_LCD_goto_line 511E              ?_board_initialization 0028  
                        __pintcode 0008                      __pmediumconst FD9E  
                         ?___fladd 009B                           ?___fldiv 007E  
                         ?___awdiv 0076                           ?___flneg 008E  
                         ?___awmod 0070                           ?___flmul 007F  
                         ?___flsub 00A7                           ?___fltol 00A7  
                         ?___lldiv 0070                           ?___llmod 0070  
                        __npowers_ FD9F                           ?___lwdiv 0070  
                         ?___lwmod 0070                        ??_ISR_bassa 0028  
                      __pintcodelo 0018         __end_of_PWR_Button_Polling 5F2E  
                  ?i2_CANisTxReady 0028                        __tdiv_to_l_ 455C  
                     ??__div_to_l_ 0078                        _COMSTATbits 000F74  
                         ?_isdigit 0028         __size_of_F1_Button_Polling 0016  
                      _BKWD_sensor 0251                   ___lwdiv@quotient 0074  
                         ?_sprintf 00B1                     __size_of_scale 0528  
                ?_delay_set_quartz 0028              CANreceiveMessage@tamp 0044  
               ??_delay_set_quartz 0070                           _LCD_Park 5896  
                   ___wmul@product 0074                           _LATCbits 000F8B  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                         _IPR2bits 000FA2       _delay_quartz_frequency_value 00EC  
                         _IPR3bits 000FA5                           _PIE2bits 000FA0  
                         _PIE3bits 000FA3                 __end_of__div_to_l_ 4896  
                         _PIR2bits 000FA1                           _PIR3bits 000FA4  
                         i2u802_40 23F8                           i2u802_45 23EE  
                         i2u803_40 243E                           i2u803_45 2434  
                         i2u804_45 248A                           i2u750_45 2ADA  
                         i2u830_45 28F6                           i2u815_40 262E  
                         i2u815_45 2624                           i2u816_40 2674  
                         i2u816_45 266A                           i2u761_45 2D68  
                         i2u817_45 26C0                           i2u747_40 2A96  
                         i2u747_46 2A98                           i2u748_40 2AC4  
                         i2u828_40 2864                           i2u756_45 2C54  
                         i2u828_45 285A                           i2u748_46 2AC6  
                         i2u829_40 28AA                           i2u829_45 28A0  
                         i2u758_40 2D2A                           i2u758_46 2D2C  
                         i2u759_40 2D54                           i2u767_45 2ED6  
                         i2u759_46 2D56                           _RXB0EIDH 000F63  
                         _RXB0EIDL 000F64                           _RXB1EIDH 000F53  
                        _pr_time_1 00CB                          _pr_time_2 00CF  
                         _RXB1EIDL 000F54                          _pr_time_3 00D3  
                        _pr_time_4 010D                          _pr_time_5 00D7  
                        _pr_time_6 00DB                          _set_speed 00E5  
                         _RCONbits 000FD0                   __CFG_WDTPS$32768 000000  
                         _RXB0SIDH 000F61                           _RXB0SIDL 000F62  
                         _RXF0EIDH 000F02                           _RXB1SIDH 000F51  
                         _RXF0EIDL 000F03                           _RXB1SIDL 000F52  
                         _RXF1EIDH 000F06                           _RXF1EIDL 000F07  
                         _RXF2EIDH 000F0A                           _RXF2EIDL 000F0B  
                         _RXF3EIDH 000F0E                           _RXF3EIDL 000F0F  
                         _RXF4EIDH 000F12                           _RXF4EIDL 000F13  
                         _RXF5EIDH 000F16                           _RXF5EIDL 000F17  
                         _RXF0SIDH 000F00                           _RXF0SIDL 000F01  
                         _TXB0EIDH 000F43                           _RXF1SIDH 000F04  
                         _TXB0EIDL 000F44                           _RXF1SIDL 000F05  
                         _TXB1EIDH 000F33                           _RXF2SIDH 000F08  
                         _TXB1EIDL 000F34                           _RXF2SIDL 000F09  
                         _ISR_alta 0008                           _TXB2EIDH 000F23  
                         _RXF3SIDH 000F0C                           _TXB2EIDL 000F24  
                         _RXF3SIDL 000F0D                           _RXF4SIDH 000F10  
                         _RXF4SIDL 000F11                           _RXF5SIDH 000F14  
                         _RXF5SIDL 000F15                           _RXM0EIDH 000F1A  
                         _RXM0EIDL 000F1B                           _TXB0SIDH 000F41  
                         _RXM1EIDH 000F1E                           _TXB0SIDL 000F42  
                         _RXM1EIDL 000F1F                           _TXB1SIDH 000F31  
                         _TXB1SIDL 000F32                           _TXB2SIDH 000F21  
                         _TXB2SIDL 000F22                        _LCD_Handler 3FC6  
                         _RXM0SIDH 000F18                           _RXM0SIDL 000F19  
                         _RXM1SIDH 000F1C                           _RXM1SIDL 000F1D  
                         _RXERRCNT 000F75     LCD_write_integer@zero_cleaning 008B  
               _parking_message_ID 00E8                           _TXERRCNT 000F76  
                       _ADCON0bits 000FC2                        _LCD_Parking 5832  
                       _ADCON2bits 000FC0                  ___wmul@multiplier 0070  
                         _RTR_Flag 0257                  ?_LCD_send_command 0078  
                 _actual_speed_kmh 00C3                          _user_data 000D  
                 __size_of_LCD_Gap 0064                   __size_of_LCD_End 0064  
               ??_LCD_send_command 007B                      ?_CANSetFilter 0070  
                       _CANCONbits 000F6F                        _LCD_goto_xy 5ECC  
                 ??_LCD_write_char 007C                  LCD_goto_line@line 007C  
                         __Hrparam 0000                       _RXB0SIDLbits 000F62  
           ??_board_initialization 008A                           __Lrparam 0000  
                     _RXB1SIDLbits 000F52                   __size_of___fladd 026C  
                       _CANSetMask 342C                   __size_of___fldiv 0136  
                 __size_of___awdiv 00D0                   __size_of___flneg 003C  
                 __size_of___awmod 00B4                   __size_of___flmul 0164  
                ?_LCD_shift_cursor 007C                   __size_of___flsub 0060  
                 __size_of___fltol 011A                   __size_of___lldiv 00C6  
                 __size_of___llmod 00A4                           ___flpack 4896  
                 __size_of___lwdiv 0082                   __size_of___lwmod 006C  
                         ___awtofl 5AD4                           ___lbtofl 5CD8  
                      _fround$4234 0096                        _fround$4235 0092  
                         ___lltofl 5D44                 ??_LCD_shift_cursor 007D  
                         ___lwtofl 5D78                         sprintf@exp 0149  
                       sprintf@val 0145                       _RXF0SIDLbits 000F01  
                 __size_of_isdigit 002E                           _delay_ms 5C66  
                  ___lwdiv@divisor 0072                       _RXF1SIDLbits 000F05  
                  ___lwdiv@counter 0076                     ??_CANSetFilter 0075  
                 _LCD_enable_pulse 5E8A                           __ptext10 5896  
                         __ptext11 3FC6                           __ptext20 4702  
                         __ptext12 0B2A                           __ptext21 5D44  
                         __ptext13 2F04                           __ptext30 4CE8  
                         __ptext22 5590                           __ptext14 5E0E  
                         __ptext31 4896                           __ptext23 51EE  
                         __ptext15 37D6                           __ptext40 58FA  
                         __ptext32 4392                           __ptext24 4E1E  
                         __ptext16 4B84                           __ptext41 595E  
                         __ptext33 5B20                           __ptext25 5A26  
                         __ptext17 5438                           __ptext50 5C2C  
                         __ptext42 59C2                           __ptext34 52B4  
                         __ptext26 3D5A                           __ptext18 511E  
                         __ptext51 5E8A                           __ptext43 5D0E  
                         __ptext35 57C6                           __ptext27 5BF0  
                         __ptext19 455C                           __ptext60 574C  
                         __ptext52 5C66                           __ptext44 5634  
                         __ptext36 56CA                           __ptext28 4F38  
                         __ptext53 5CA0                           __ptext45 4A16  
                         __ptext37 5E3C                           __ptext29 5D78  
                         __ptext54 5BAE                           __ptext46 5F5A  
                         __ptext38 5ECC                           __ptext63 2332  
                         __ptext55 5F2E                           __ptext47 5DAA  
                         __ptext39 5A86                           __ptext64 5EAC  
                         __ptext56 5F44                           __ptext48 5DDC  
                         __ptext65 29D6                           __ptext57 5378  
                         __ptext49 5030                           __ptext66 5F00  
                         __ptext58 1436                           __ptext59 5E64  
                     _RXF2SIDLbits 000F09                           __powers_ FDD3  
                     _RXF3SIDLbits 000F0D                   __size_of_sprintf 090C  
                     _RXF4SIDLbits 000F11                       _RXF5SIDLbits 000F15  
         CANsendMessage@dataLength 0076                      __size_of_main 075C  
                    __size_of_itoa 004C                      __size_of_utoa 00C4  
                ?i2_CANsendMessage 0039               CANreceiveMessage@msg 0039  
            LCD_shift_cursor@shift 007D                i2_CANisTxReady$3255 0039  
                     _TXB0SIDLbits 000F42                  Joystick_Polling@i 0070  
               ??i2_CANsendMessage 0041                       _TXB1SIDLbits 000F32  
         __end_of_Joystick_Polling 5BF0                       _TXB2SIDLbits 000F22  
        __size_of_CANOperationMode 0018                      ?_CANisRxReady 0028  
                    ?_CANisTxReady 0028           __end_of_LCD_write_string 5E64  
                      _RXB0DLCbits 000F65              ___flmul@f3_as_product 0088  
                      _RXB1DLCbits 000F55                       _RXM0SIDLbits 000F19  
                      _RXB0CONbits 000F60                         _LCD_cursor 5DAA  
                      _RXB1CONbits 000F50                  _CANreceiveMessage 29D6  
                     _RXM1SIDLbits 000F1D                         _INTCONbits 000FF2  
                     _set_steering 0010                   ??_CANsendMessage 0078  
               ?_CANreceiveMessage 0039                           itoa@base 0084  
                         isdigit@c 0072                           scale@scl 0096  
         CANsendMessage@identifier 0070                       _time_counter 0005  
                         intlevel1 0000                           intlevel2 0000  
                        sprintf@ap 0141                   __tdiv_to_l_@exp1 0080  
                        sprintf@sp 00B1                   __tdiv_to_l_@cntr 007F  
                 CANSetFilter@tamp 007A                   __tdiv_to_l_@quot 007B  
                 CANSetFilter@type 0074                ??_CANreceiveMessage 003B  
                 ___lwmod@dividend 0070                   ___lldiv@dividend 0070  
                      _TXB0DLCbits 000F45                        _right_speed 000B  
                      _TXB1DLCbits 000F35                        _TXB0CONbits 000F40  
                      _TXB2DLCbits 000F25                        _TXB1CONbits 000F30  
                      _TXB2CONbits 000F20                         _FWD_sensor 0255  
                  _display_refresh 025A                   ??i2_CANisTxReady 0039  
             CANOperationMode@mode 0070                     ??_CANisRxReady 0039  
                      ?_CANSetMask 0070                     ??_CANisTxReady 0070  
                     ?__tdiv_to_l_ 0070          __end_of_CANreceiveMessage 2F04  
                         utoa@base 007B                           sprintf@c 0155  
                         sprintf@f 00B3                   ___lldiv@quotient 0078  
                  ___lwmod@divisor 0072    LCD_shift_cursor@number_of_shift 007C  
                  ___lwmod@counter 0074                     _collision_risk 0259  
               _PWR_Button_Polling 5F18                       ___fladd@exp1 00A6  
                     ___fladd@exp2 00A5                       ___fladd@sign 00A4  
            __end_of_CANInitialize 4392                ?_PWR_Button_Polling 0028  
                     _power_switch 025E  
