

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Apr 15 16:11:46 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73  0000                     
    74                           	psect	idataBANK0
    75  015E2E                     __pidataBANK0:
    76                           	opt stack 0
    77                           
    78                           ;initializer for _delay_quartz_frequency_value
    79  015E2E  10                 	db	16
    80                           
    81                           	psect	mediumconst
    82  00FECC                     __pmediumconst:
    83                           	opt stack 0
    84  00FECC  00                 	db	0
    85  00FECD                     __npowers_:
    86                           	opt stack 0
    87  00FECD  0000               	dw	0
    88  00FECF  3F80               	dw	16256
    89  00FED1  CCCD               	dw	52429
    90  00FED3  3DCC               	dw	15820
    91  00FED5  D70A               	dw	55050
    92  00FED7  3C23               	dw	15395
    93  00FED9  126F               	dw	4719
    94  00FEDB  3A83               	dw	14979
    95  00FEDD  B717               	dw	46871
    96  00FEDF  38D1               	dw	14545
    97  00FEE1  C5AC               	dw	50604
    98  00FEE3  3727               	dw	14119
    99  00FEE5  37BD               	dw	14269
   100  00FEE7  3586               	dw	13702
   101  00FEE9  BF95               	dw	49045
   102  00FEEB  33D6               	dw	13270
   103  00FEED  CC77               	dw	52343
   104  00FEEF  322B               	dw	12843
   105  00FEF1  705F               	dw	28767
   106  00FEF3  3089               	dw	12425
   107  00FEF5  E6FF               	dw	59135
   108  00FEF7  2EDB               	dw	11995
   109  00FEF9  E508               	dw	58632
   110  00FEFB  1E3C               	dw	7740
   111  00FEFD  4260               	dw	16992
   112  00FEFF  0DA2               	dw	3490
   113  00FF01                     __end_of__npowers_:
   114                           	opt stack 0
   115  00FF01                     __powers_:
   116                           	opt stack 0
   117  00FF01  0000               	dw	0
   118  00FF03  3F80               	dw	16256
   119  00FF05  0000               	dw	0
   120  00FF07  4120               	dw	16672
   121  00FF09  0000               	dw	0
   122  00FF0B  42C8               	dw	17096
   123  00FF0D  0000               	dw	0
   124  00FF0F  447A               	dw	17530
   125  00FF11  4000               	dw	16384
   126  00FF13  461C               	dw	17948
   127  00FF15  5000               	dw	20480
   128  00FF17  47C3               	dw	18371
   129  00FF19  2400               	dw	9216
   130  00FF1B  4974               	dw	18804
   131  00FF1D  9680               	dw	38528
   132  00FF1F  4B18               	dw	19224
   133  00FF21  BC20               	dw	48160
   134  00FF23  4CBE               	dw	19646
   135  00FF25  6B28               	dw	27432
   136  00FF27  4E6E               	dw	20078
   137  00FF29  02F9               	dw	761
   138  00FF2B  5015               	dw	20501
   139  00FF2D  78EC               	dw	30956
   140  00FF2F  60AD               	dw	24749
   141  00FF31  F2CA               	dw	62154
   142  00FF33  7149               	dw	29001
   143  00FF35                     __end_of__powers_:
   144                           	opt stack 0
   145  00FF35                     _dpowers:
   146                           	opt stack 0
   147  00FF35  0001               	dw	1
   148  00FF37  0000               	dw	0
   149  00FF39  000A               	dw	10
   150  00FF3B  0000               	dw	0
   151  00FF3D  0064               	dw	100
   152  00FF3F  0000               	dw	0
   153  00FF41  03E8               	dw	1000
   154  00FF43  0000               	dw	0
   155  00FF45  2710               	dw	10000
   156  00FF47  0000               	dw	0
   157  00FF49  86A0               	dw	34464
   158  00FF4B  0001               	dw	1
   159  00FF4D  4240               	dw	16960
   160  00FF4F  000F               	dw	15
   161  00FF51  9680               	dw	38528
   162  00FF53  0098               	dw	152
   163  00FF55  E100               	dw	57600
   164  00FF57  05F5               	dw	1525
   165  00FF59  CA00               	dw	51712
   166  00FF5B  3B9A               	dw	15258
   167  00FF5D                     __end_of_dpowers:
   168                           	opt stack 0
   169  0000                     _RXB1CON	set	3920
   170  0000                     _RXB1CONbits	set	3920
   171  0000                     _RXB1D0	set	3926
   172  0000                     _RXB1D1	set	3927
   173  0000                     _RXB1D2	set	3928
   174  0000                     _RXB1D3	set	3929
   175  0000                     _RXB1D4	set	3930
   176  0000                     _RXB1D5	set	3931
   177  0000                     _RXB1D6	set	3932
   178  0000                     _RXB1D7	set	3933
   179  0000                     _RXB1DLC	set	3925
   180  0000                     _RXB1DLCbits	set	3925
   181  0000                     _RXB1EIDH	set	3923
   182  0000                     _RXB1EIDL	set	3924
   183  0000                     _RXB1SIDH	set	3921
   184  0000                     _RXB1SIDL	set	3922
   185  0000                     _RXB1SIDLbits	set	3922
   186  0000                     _RXF0EIDH	set	3842
   187  0000                     _RXF0EIDL	set	3843
   188  0000                     _RXF0SIDH	set	3840
   189  0000                     _RXF0SIDL	set	3841
   190  0000                     _RXF0SIDLbits	set	3841
   191  0000                     _RXF1EIDH	set	3846
   192  0000                     _RXF1EIDL	set	3847
   193  0000                     _RXF1SIDH	set	3844
   194  0000                     _RXF1SIDL	set	3845
   195  0000                     _RXF1SIDLbits	set	3845
   196  0000                     _RXF2EIDH	set	3850
   197  0000                     _RXF2EIDL	set	3851
   198  0000                     _RXF2SIDH	set	3848
   199  0000                     _RXF2SIDL	set	3849
   200  0000                     _RXF2SIDLbits	set	3849
   201  0000                     _RXF3EIDH	set	3854
   202  0000                     _RXF3EIDL	set	3855
   203  0000                     _RXF3SIDH	set	3852
   204  0000                     _RXF3SIDL	set	3853
   205  0000                     _RXF3SIDLbits	set	3853
   206  0000                     _RXF4EIDH	set	3858
   207  0000                     _RXF4EIDL	set	3859
   208  0000                     _RXF4SIDH	set	3856
   209  0000                     _RXF4SIDL	set	3857
   210  0000                     _RXF4SIDLbits	set	3857
   211  0000                     _RXF5EIDH	set	3862
   212  0000                     _RXF5EIDL	set	3863
   213  0000                     _RXF5SIDH	set	3860
   214  0000                     _RXF5SIDL	set	3861
   215  0000                     _RXF5SIDLbits	set	3861
   216  0000                     _RXM0EIDH	set	3866
   217  0000                     _RXM0EIDL	set	3867
   218  0000                     _RXM0SIDH	set	3864
   219  0000                     _RXM0SIDL	set	3865
   220  0000                     _RXM0SIDLbits	set	3865
   221  0000                     _RXM1EIDH	set	3870
   222  0000                     _RXM1EIDL	set	3871
   223  0000                     _RXM1SIDH	set	3868
   224  0000                     _RXM1SIDL	set	3869
   225  0000                     _RXM1SIDLbits	set	3869
   226  0000                     _TXB0CONbits	set	3904
   227  0000                     _TXB0D0	set	3910
   228  0000                     _TXB0D1	set	3911
   229  0000                     _TXB0D2	set	3912
   230  0000                     _TXB0D3	set	3913
   231  0000                     _TXB0D4	set	3914
   232  0000                     _TXB0D5	set	3915
   233  0000                     _TXB0D6	set	3916
   234  0000                     _TXB0D7	set	3917
   235  0000                     _TXB0DLC	set	3909
   236  0000                     _TXB0DLCbits	set	3909
   237  0000                     _TXB0EIDH	set	3907
   238  0000                     _TXB0EIDL	set	3908
   239  0000                     _TXB0SIDH	set	3905
   240  0000                     _TXB0SIDL	set	3906
   241  0000                     _TXB0SIDLbits	set	3906
   242  0000                     _TXB1CONbits	set	3888
   243  0000                     _TXB1D0	set	3894
   244  0000                     _TXB1D1	set	3895
   245  0000                     _TXB1D2	set	3896
   246  0000                     _TXB1D3	set	3897
   247  0000                     _TXB1D4	set	3898
   248  0000                     _TXB1D5	set	3899
   249  0000                     _TXB1D6	set	3900
   250  0000                     _TXB1D7	set	3901
   251  0000                     _TXB1DLC	set	3893
   252  0000                     _TXB1DLCbits	set	3893
   253  0000                     _TXB1EIDH	set	3891
   254  0000                     _TXB1EIDL	set	3892
   255  0000                     _TXB1SIDH	set	3889
   256  0000                     _TXB1SIDL	set	3890
   257  0000                     _TXB1SIDLbits	set	3890
   258  0000                     _TXB2CONbits	set	3872
   259  0000                     _TXB2D0	set	3878
   260  0000                     _TXB2D1	set	3879
   261  0000                     _TXB2D2	set	3880
   262  0000                     _TXB2D3	set	3881
   263  0000                     _TXB2D4	set	3882
   264  0000                     _TXB2D5	set	3883
   265  0000                     _TXB2D6	set	3884
   266  0000                     _TXB2D7	set	3885
   267  0000                     _TXB2DLC	set	3877
   268  0000                     _TXB2DLCbits	set	3877
   269  0000                     _TXB2EIDH	set	3875
   270  0000                     _TXB2EIDL	set	3876
   271  0000                     _TXB2SIDH	set	3873
   272  0000                     _TXB2SIDL	set	3874
   273  0000                     _TXB2SIDLbits	set	3874
   274  0000                     _ADCON0bits	set	4034
   275  0000                     _ADCON1	set	4033
   276  0000                     _ADCON2bits	set	4032
   277  0000                     _ADRESH	set	4036
   278  0000                     _BRGCON1	set	3952
   279  0000                     _BRGCON2	set	3953
   280  0000                     _BRGCON2bits	set	3953
   281  0000                     _BRGCON3	set	3954
   282  0000                     _BRGCON3bits	set	3954
   283  0000                     _CANCON	set	3951
   284  0000                     _CANCONbits	set	3951
   285  0000                     _CANSTAT	set	3950
   286  0000                     _COMSTATbits	set	3956
   287  0000                     _INTCONbits	set	4082
   288  0000                     _IPR2bits	set	4002
   289  0000                     _IPR3bits	set	4005
   290  0000                     _LATA	set	3977
   291  0000                     _LATB	set	3978
   292  0000                     _LATC	set	3979
   293  0000                     _LATCbits	set	3979
   294  0000                     _LATD	set	3980
   295  0000                     _LATDbits	set	3980
   296  0000                     _LATE	set	3981
   297  0000                     _LATEbits	set	3981
   298  0000                     _PIE2bits	set	4000
   299  0000                     _PIE3bits	set	4003
   300  0000                     _PIR2bits	set	4001
   301  0000                     _PIR3bits	set	4004
   302  0000                     _PORTAbits	set	3968
   303  0000                     _PORTBbits	set	3969
   304  0000                     _PORTDbits	set	3971
   305  0000                     _RCONbits	set	4048
   306  0000                     _RXB0CON	set	3936
   307  0000                     _RXB0CONbits	set	3936
   308  0000                     _RXB0D0	set	3942
   309  0000                     _RXB0D1	set	3943
   310  0000                     _RXB0D2	set	3944
   311  0000                     _RXB0D3	set	3945
   312  0000                     _RXB0D4	set	3946
   313  0000                     _RXB0D5	set	3947
   314  0000                     _RXB0D6	set	3948
   315  0000                     _RXB0D7	set	3949
   316  0000                     _RXB0DLC	set	3941
   317  0000                     _RXB0DLCbits	set	3941
   318  0000                     _RXB0EIDH	set	3939
   319  0000                     _RXB0EIDL	set	3940
   320  0000                     _RXB0SIDH	set	3937
   321  0000                     _RXB0SIDL	set	3938
   322  0000                     _RXB0SIDLbits	set	3938
   323  0000                     _RXERRCNT	set	3957
   324  0000                     _T3CON	set	4017
   325  0000                     _TMR3H	set	4019
   326  0000                     _TMR3L	set	4018
   327  0000                     _TRISA	set	3986
   328  0000                     _TRISB	set	3987
   329  0000                     _TRISC	set	3988
   330  0000                     _TRISD	set	3989
   331  0000                     _TRISE	set	3990
   332  0000                     _TXERRCNT	set	3958
   333  00FF5D                     STR_3:
   334  00FF5D  54                 	db	84	;'T'
   335  00FF5E  75                 	db	117	;'u'
   336  00FF5F  72                 	db	114	;'r'
   337  00FF60  6E                 	db	110	;'n'
   338  00FF61  20                 	db	32
   339  00FF62  74                 	db	116	;'t'
   340  00FF63  68                 	db	104	;'h'
   341  00FF64  65                 	db	101	;'e'
   342  00FF65  20                 	db	32
   343  00FF66  73                 	db	115	;'s'
   344  00FF67  77                 	db	119	;'w'
   345  00FF68  69                 	db	105	;'i'
   346  00FF69  74                 	db	116	;'t'
   347  00FF6A  63                 	db	99	;'c'
   348  00FF6B  68                 	db	104	;'h'
   349  00FF6C  20                 	db	32
   350  00FF6D  4F                 	db	79	;'O'
   351  00FF6E  4E                 	db	78	;'N'
   352  00FF6F  21                 	db	33
   353  00FF70  20                 	db	32
   354  00FF71  00                 	db	0
   355  00FF72                     STR_2:
   356  00FF72  3D                 	db	61	;'='
   357  00FF73  3D                 	db	61	;'='
   358  00FF74  3E                 	db	62	;'>'
   359  00FF75  20                 	db	32
   360  00FF76  56                 	db	86	;'V'
   361  00FF77  45                 	db	69	;'E'
   362  00FF78  48                 	db	72	;'H'
   363  00FF79  49                 	db	73	;'I'
   364  00FF7A  43                 	db	67	;'C'
   365  00FF7B  4C                 	db	76	;'L'
   366  00FF7C  45                 	db	69	;'E'
   367  00FF7D  20                 	db	32
   368  00FF7E  20                 	db	32
   369  00FF7F  4F                 	db	79	;'O'
   370  00FF80  46                 	db	70	;'F'
   371  00FF81  46                 	db	70	;'F'
   372  00FF82  20                 	db	32
   373  00FF83  3C                 	db	60	;'<'
   374  00FF84  3D                 	db	61	;'='
   375  00FF85  3D                 	db	61	;'='
   376  00FF86  00                 	db	0
   377  00FF87                     STR_6:
   378  00FF87  3D                 	db	61	;'='
   379  00FF88  3D                 	db	61	;'='
   380  00FF89  3D                 	db	61	;'='
   381  00FF8A  20                 	db	32
   382  00FF8B  56                 	db	86	;'V'
   383  00FF8C  45                 	db	69	;'E'
   384  00FF8D  48                 	db	72	;'H'
   385  00FF8E  49                 	db	73	;'I'
   386  00FF8F  43                 	db	67	;'C'
   387  00FF90  4C                 	db	76	;'L'
   388  00FF91  45                 	db	69	;'E'
   389  00FF92  20                 	db	32
   390  00FF93  44                 	db	68	;'D'
   391  00FF94  41                 	db	65	;'A'
   392  00FF95  54                 	db	84	;'T'
   393  00FF96  41                 	db	65	;'A'
   394  00FF97  20                 	db	32
   395  00FF98  3D                 	db	61	;'='
   396  00FF99  3D                 	db	61	;'='
   397  00FF9A  3D                 	db	61	;'='
   398  00FF9B  00                 	db	0
   399  00FF9C                     STR_1:
   400  00FF9C  3D                 	db	61	;'='
   401  00FF9D  3D                 	db	61	;'='
   402  00FF9E  3D                 	db	61	;'='
   403  00FF9F  3D                 	db	61	;'='
   404  00FFA0  3D                 	db	61	;'='
   405  00FFA1  3D                 	db	61	;'='
   406  00FFA2  3D                 	db	61	;'='
   407  00FFA3  3D                 	db	61	;'='
   408  00FFA4  3D                 	db	61	;'='
   409  00FFA5  3D                 	db	61	;'='
   410  00FFA6  3D                 	db	61	;'='
   411  00FFA7  3D                 	db	61	;'='
   412  00FFA8  3D                 	db	61	;'='
   413  00FFA9  3D                 	db	61	;'='
   414  00FFAA  3D                 	db	61	;'='
   415  00FFAB  3D                 	db	61	;'='
   416  00FFAC  3D                 	db	61	;'='
   417  00FFAD  3D                 	db	61	;'='
   418  00FFAE  3D                 	db	61	;'='
   419  00FFAF  3D                 	db	61	;'='
   420  00FFB0  00                 	db	0
   421  00FFB1                     STR_8:
   422  00FFB1  53                 	db	83	;'S'
   423  00FFB2  70                 	db	112	;'p'
   424  00FFB3  65                 	db	101	;'e'
   425  00FFB4  65                 	db	101	;'e'
   426  00FFB5  64                 	db	100	;'d'
   427  00FFB6  3A                 	db	58	;':'
   428  00FFB7  20                 	db	32
   429  00FFB8  78                 	db	120	;'x'
   430  00FFB9  2E                 	db	46
   431  00FFBA  78                 	db	120	;'x'
   432  00FFBB  78                 	db	120	;'x'
   433  00FFBC  20                 	db	32
   434  00FFBD  4B                 	db	75	;'K'
   435  00FFBE  6D                 	db	109	;'m'
   436  00FFBF  2F                 	db	47
   437  00FFC0  68                 	db	104	;'h'
   438  00FFC1  00                 	db	0
   439  00FFC2                     STR_9:
   440  00FFC2  50                 	db	80	;'P'
   441  00FFC3  61                 	db	97	;'a'
   442  00FFC4  72                 	db	114	;'r'
   443  00FFC5  6B                 	db	107	;'k'
   444  00FFC6  20                 	db	32
   445  00FFC7  61                 	db	97	;'a'
   446  00FFC8  73                 	db	115	;'s'
   447  00FFC9  73                 	db	115	;'s'
   448  00FFCA  69                 	db	105	;'i'
   449  00FFCB  73                 	db	115	;'s'
   450  00FFCC  74                 	db	116	;'t'
   451  00FFCD  3A                 	db	58	;':'
   452  00FFCE  20                 	db	32
   453  00FFCF  00                 	db	0
   454  00FFD0                     STR_7:
   455  00FFD0  44                 	db	68	;'D'
   456  00FFD1  69                 	db	105	;'i'
   457  00FFD2  72                 	db	114	;'r'
   458  00FFD3  65                 	db	101	;'e'
   459  00FFD4  63                 	db	99	;'c'
   460  00FFD5  74                 	db	116	;'t'
   461  00FFD6  69                 	db	105	;'i'
   462  00FFD7  6F                 	db	111	;'o'
   463  00FFD8  6E                 	db	110	;'n'
   464  00FFD9  3A                 	db	58	;':'
   465  00FFDA  20                 	db	32
   466  00FFDB  00                 	db	0
   467  00FFDC                     STR_15:
   468  00FFDC  50                 	db	80	;'P'
   469  00FFDD  41                 	db	65	;'A'
   470  00FFDE  52                 	db	82	;'R'
   471  00FFDF  4B                 	db	75	;'K'
   472  00FFE0  49                 	db	73	;'I'
   473  00FFE1  4E                 	db	78	;'N'
   474  00FFE2  47                 	db	71	;'G'
   475  00FFE3  00                 	db	0
   476  00FFE4                     STR_14:
   477  00FFE4  53                 	db	83	;'S'
   478  00FFE5  45                 	db	69	;'E'
   479  00FFE6  41                 	db	65	;'A'
   480  00FFE7  52                 	db	82	;'R'
   481  00FFE8  43                 	db	67	;'C'
   482  00FFE9  48                 	db	72	;'H'
   483  00FFEA  00                 	db	0
   484  00FFEB                     STR_11:
   485  00FFEB  42                 	db	66	;'B'
   486  00FFEC  4B                 	db	75	;'K'
   487  00FFED  57                 	db	87	;'W'
   488  00FFEE  44                 	db	68	;'D'
   489  00FFEF  00                 	db	0
   490  00FFF0                     STR_5:
   491  00FFF0  25                 	db	37
   492  00FFF1  2E                 	db	46
   493  00FFF2  32                 	db	50	;'2'
   494  00FFF3  66                 	db	102	;'f'
   495  00FFF4  00                 	db	0
   496  00FFF5                     STR_10:
   497  00FFF5  46                 	db	70	;'F'
   498  00FFF6  57                 	db	87	;'W'
   499  00FFF7  44                 	db	68	;'D'
   500  00FFF8  00                 	db	0
   501  00FFF9                     STR_13:
   502  00FFF9  4F                 	db	79	;'O'
   503  00FFFA  46                 	db	70	;'F'
   504  00FFFB  46                 	db	70	;'F'
   505  00FFFC  00                 	db	0
   506  00FFFD                     STR_12:
   507  00FFFD  50                 	db	80	;'P'
   508  00FFFE  00                 	db	0
   509  0000                     
   510                           ; #config settings
   511  00FFFF  00                 	db	0	; dummy byte at the end
   512  0000                     
   513                           	psect	cinit
   514  015B16                     __pcinit:
   515                           	opt stack 0
   516  015B16                     start_initialization:
   517                           	opt stack 0
   518  015B16                     __initialization:
   519                           	opt stack 0
   520                           
   521                           ; Clear objects allocated to BANK1 (35 bytes)
   522  015B16  EE01  F000         	lfsr	0,__pbssBANK1
   523  015B1A  0E23               	movlw	35
   524  015B1C                     clear_0:
   525  015B1C  6AEE               	clrf	postinc0,c
   526  015B1E  06E8               	decf	wreg,f,c
   527  015B20  E1FD               	bnz	clear_0
   528                           
   529                           ; Clear objects allocated to BANK0 (32 bytes)
   530  015B22  EE00  F0CC         	lfsr	0,__pbssBANK0
   531  015B26  0E20               	movlw	32
   532  015B28                     clear_1:
   533  015B28  6AEE               	clrf	postinc0,c
   534  015B2A  06E8               	decf	wreg,f,c
   535  015B2C  E1FD               	bnz	clear_1
   536                           
   537                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   538  015B2E  6A4C               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   539  015B30  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   540                           
   541                           ; Clear objects allocated to COMRAM (44 bytes)
   542  015B32  EE00  F001         	lfsr	0,__pbssCOMRAM
   543  015B36  0E2C               	movlw	44
   544  015B38                     clear_2:
   545  015B38  6AEE               	clrf	postinc0,c
   546  015B3A  06E8               	decf	wreg,f,c
   547  015B3C  E1FD               	bnz	clear_2
   548                           
   549                           ; Initialize objects allocated to BANK0 (1 bytes)
   550                           ; load TBLPTR registers with __pidataBANK0
   551  015B3E  0E2E               	movlw	low __pidataBANK0
   552  015B40  6EF6               	movwf	tblptrl,c
   553  015B42  0E5E               	movlw	high __pidataBANK0
   554  015B44  6EF7               	movwf	tblptrh,c
   555  015B46  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   556  015B48  6EF8               	movwf	tblptru,c
   557  015B4A  0009               	tblrd		*+	;fetch initializer
   558  015B4C  CFF5 F0EC          	movff	tablat,__pdataBANK0
   559  015B50                     end_of_initialization:
   560                           	opt stack 0
   561  015B50                     __end_of__initialization:
   562                           	opt stack 0
   563  015B50  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   564  015B52  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   565  015B54  0100               	movlb	0
   566  015B56  EF02  F091         	goto	_main	;jump to C main() function
   567                           tblptru	equ	0xFF8
   568                           tblptrh	equ	0xFF7
   569                           tblptrl	equ	0xFF6
   570                           tablat	equ	0xFF5
   571                           postinc0	equ	0xFEE
   572                           wreg	equ	0xFE8
   573                           
   574                           	psect	bitbssCOMRAM
   575  000258                     __pbitbssCOMRAM:
   576                           	opt stack 0
   577  000258                     _AbsFlag:
   578                           	opt stack 0
   579  000258                     	ds	1
   580  000259                     _F1_switch:
   581                           	opt stack 0
   582  000259                     	ds	1
   583  00025A                     _F2_switch:
   584                           	opt stack 0
   585  00025A                     	ds	1
   586  00025B                     _MotoreFlag:
   587                           	opt stack 0
   588  00025B                     	ds	1
   589  00025C                     _RTR_Flag:
   590                           	opt stack 0
   591  00025C                     	ds	1
   592  00025D                     _SterzoFlag:
   593                           	opt stack 0
   594  00025D                     	ds	1
   595  00025E                     _display_refresh:
   596                           	opt stack 0
   597  00025E                     	ds	1
   598  00025F                     _newMessageCan:
   599                           	opt stack 0
   600  00025F                     	ds	1
   601  000260                     _power_switch:
   602                           	opt stack 0
   603  000260                     	ds	1
   604  000261                     _wait_low_1:
   605                           	opt stack 0
   606  000261                     	ds	1
   607  000262                     _wait_low_2:
   608                           	opt stack 0
   609  000262                     	ds	1
   610  000263                     _wait_low_3:
   611                           	opt stack 0
   612  000263                     	ds	1
   613  000264                     _y:
   614                           	opt stack 0
   615  000264                     	ds	1
   616                           tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           tblptrl	equ	0xFF6
   619                           tablat	equ	0xFF5
   620                           postinc0	equ	0xFEE
   621                           wreg	equ	0xFE8
   622                           
   623                           	psect	bssCOMRAM
   624  000001                     __pbssCOMRAM:
   625                           	opt stack 0
   626  000001                     _data_speed_rx:
   627                           	opt stack 0
   628  000001                     	ds	7
   629  000008                     LCD_write_integer@F17272:
   630                           	opt stack 0
   631  000008                     	ds	6
   632  00000E                     _actual_speed_kmh:
   633                           	opt stack 0
   634  00000E                     	ds	4
   635  000012                     _id:
   636                           	opt stack 0
   637  000012                     	ds	4
   638  000016                     _pr_time_3:
   639                           	opt stack 0
   640  000016                     	ds	4
   641  00001A                     _pr_time_4:
   642                           	opt stack 0
   643  00001A                     	ds	4
   644  00001E                     _pr_time_5:
   645                           	opt stack 0
   646  00001E                     	ds	4
   647  000022                     _time_counter:
   648                           	opt stack 0
   649  000022                     	ds	4
   650  000026                     _left_speed:
   651                           	opt stack 0
   652  000026                     	ds	2
   653  000028                     _right_speed:
   654                           	opt stack 0
   655  000028                     	ds	2
   656  00002A                     _battery:
   657                           	opt stack 0
   658  00002A                     	ds	1
   659  00002B                     _set_steering:
   660                           	opt stack 0
   661  00002B                     	ds	1
   662  00002C                     _data:
   663                           	opt stack 0
   664  00002C                     	ds	1
   665                           tblptru	equ	0xFF8
   666                           tblptrh	equ	0xFF7
   667                           tblptrl	equ	0xFF6
   668                           tablat	equ	0xFF5
   669                           postinc0	equ	0xFEE
   670                           wreg	equ	0xFE8
   671                           
   672                           	psect	bssBANK0
   673  0000CC                     __pbssBANK0:
   674                           	opt stack 0
   675  0000CC                     _JoystickConstants:
   676                           	opt stack 0
   677  0000CC                     	ds	8
   678  0000D4                     _pr_time_1:
   679                           	opt stack 0
   680  0000D4                     	ds	4
   681  0000D8                     _pr_time_2:
   682                           	opt stack 0
   683  0000D8                     	ds	4
   684  0000DC                     _JoystickValues:
   685                           	opt stack 0
   686  0000DC                     	ds	2
   687  0000DE                     _actual_speed:
   688                           	opt stack 0
   689  0000DE                     	ds	2
   690  0000E0                     _clock_counter_reference:
   691                           	opt stack 0
   692  0000E0                     	ds	2
   693  0000E2                     _set_speed:
   694                           	opt stack 0
   695  0000E2                     	ds	2
   696  0000E4                     _dir:
   697                           	opt stack 0
   698  0000E4                     	ds	1
   699  0000E5                     _parking_state:
   700                           	opt stack 0
   701  0000E5                     	ds	1
   702  0000E6                     _switch_position:
   703                           	opt stack 0
   704  0000E6                     	ds	1
   705  0000E7                     _x:
   706                           	opt stack 0
   707  0000E7                     	ds	1
   708  0000E8                     _z:
   709                           	opt stack 0
   710  0000E8                     	ds	1
   711  0000E9                     _data_brake:
   712                           	opt stack 0
   713  0000E9                     	ds	1
   714  0000EA                     _data_speed:
   715                           	opt stack 0
   716  0000EA                     	ds	1
   717  0000EB                     _data_steering:
   718                           	opt stack 0
   719  0000EB                     	ds	1
   720                           tblptru	equ	0xFF8
   721                           tblptrh	equ	0xFF7
   722                           tblptrl	equ	0xFF6
   723                           tablat	equ	0xFF5
   724                           postinc0	equ	0xFEE
   725                           wreg	equ	0xFE8
   726                           
   727                           	psect	dataBANK0
   728  0000EC                     __pdataBANK0:
   729                           	opt stack 0
   730  0000EC                     _delay_quartz_frequency_value:
   731                           	opt stack 0
   732  0000EC                     	ds	1
   733                           tblptru	equ	0xFF8
   734                           tblptrh	equ	0xFF7
   735                           tblptrl	equ	0xFF6
   736                           tablat	equ	0xFF5
   737                           postinc0	equ	0xFEE
   738                           wreg	equ	0xFE8
   739                           
   740                           	psect	bssBANK1
   741  000100                     __pbssBANK1:
   742                           	opt stack 0
   743  000100                     _msg:
   744                           	opt stack 0
   745  000100                     	ds	15
   746  00010F                     _str:
   747                           	opt stack 0
   748  00010F                     	ds	12
   749  00011B                     _park_assist_state:
   750                           	opt stack 0
   751  00011B                     	ds	8
   752                           tblptru	equ	0xFF8
   753                           tblptrh	equ	0xFF7
   754                           tblptrl	equ	0xFF6
   755                           tablat	equ	0xFF5
   756                           postinc0	equ	0xFEE
   757                           wreg	equ	0xFE8
   758                           
   759                           	psect	cstackBANK1
   760  000123                     __pcstackBANK1:
   761                           	opt stack 0
   762  000123                     ??_sprintf:
   763                           
   764                           ; 0 bytes @ 0x0
   765  000123                     	ds	2
   766  000125                     _sprintf$4215:
   767                           	opt stack 0
   768                           
   769                           ; 4 bytes @ 0x2
   770  000125                     	ds	4
   771  000129                     sprintf@ap:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x6
   775  000129                     	ds	2
   776  00012B                     sprintf@flag:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0x8
   780  00012B                     	ds	2
   781  00012D                     sprintf@val:
   782                           	opt stack 0
   783                           
   784                           ; 4 bytes @ 0xA
   785  00012D                     	ds	4
   786  000131                     sprintf@exp:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0xE
   790  000131                     	ds	2
   791  000133                     sprintf@tmpval:
   792                           	opt stack 0
   793                           
   794                           ; 4 bytes @ 0x10
   795  000133                     	ds	4
   796  000137                     sprintf@prec:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x14
   800  000137                     	ds	2
   801  000139                     sprintf@fval:
   802                           	opt stack 0
   803                           
   804                           ; 4 bytes @ 0x16
   805  000139                     	ds	4
   806  00013D                     sprintf@c:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0x1A
   810  00013D                     	ds	1
   811  00013E                     ??_main:
   812                           
   813                           ; 0 bytes @ 0x1B
   814  00013E                     	ds	8
   815                           tblptru	equ	0xFF8
   816                           tblptrh	equ	0xFF7
   817                           tblptrl	equ	0xFF6
   818                           tablat	equ	0xFF5
   819                           postinc0	equ	0xFEE
   820                           wreg	equ	0xFE8
   821                           
   822                           	psect	cstackBANK0
   823  000060                     __pcstackBANK0:
   824                           	opt stack 0
   825  000060                     i2CANsendMessage@tamp:
   826                           	opt stack 0
   827                           
   828                           ; 4 bytes @ 0x0
   829  000060                     	ds	4
   830  000064                     ??_ISR_alta:
   831                           
   832                           ; 0 bytes @ 0x4
   833  000064                     	ds	14
   834  000072                     ??_Joystick_Polling:
   835  000072                     ??_CAN_interpreter:
   836  000072                     ??_isdigit:
   837  000072                     ?___wmul:
   838                           	opt stack 0
   839  000072                     ?___awmod:
   840                           	opt stack 0
   841  000072                     ?__tdiv_to_l_:
   842                           	opt stack 0
   843  000072                     ?__div_to_l_:
   844                           	opt stack 0
   845  000072                     ?___lldiv:
   846                           	opt stack 0
   847  000072                     ?___llmod:
   848                           	opt stack 0
   849  000072                     ?___xxtofl:
   850                           	opt stack 0
   851  000072                     CANOperationMode@mode:
   852                           	opt stack 0
   853  000072                     _CANisTxReady$3235:
   854                           	opt stack 0
   855  000072                     delay_set_quartz@frequency:
   856                           	opt stack 0
   857  000072                     ___wmul@multiplier:
   858                           	opt stack 0
   859  000072                     ___awmod@dividend:
   860                           	opt stack 0
   861  000072                     CANsendMessage@identifier:
   862                           	opt stack 0
   863  000072                     CANSetMask@mask:
   864                           	opt stack 0
   865  000072                     CANSetFilter@filter:
   866                           	opt stack 0
   867  000072                     __div_to_l_@f1:
   868                           	opt stack 0
   869  000072                     ___flge@ff1:
   870                           	opt stack 0
   871  000072                     __tdiv_to_l_@f1:
   872                           	opt stack 0
   873  000072                     ___lldiv@dividend:
   874                           	opt stack 0
   875  000072                     ___llmod@dividend:
   876                           	opt stack 0
   877  000072                     ___xxtofl@val:
   878                           	opt stack 0
   879                           
   880                           ; 4 bytes @ 0x12
   881  000072                     	ds	1
   882  000073                     Joystick_Polling@i:
   883                           	opt stack 0
   884  000073                     _isdigit$3797:
   885                           	opt stack 0
   886                           
   887                           ; 1 bytes @ 0x13
   888  000073                     	ds	1
   889  000074                     isdigit@c:
   890                           	opt stack 0
   891  000074                     ___wmul@multiplicand:
   892                           	opt stack 0
   893  000074                     ___awmod@divisor:
   894                           	opt stack 0
   895                           
   896                           ; 2 bytes @ 0x14
   897  000074                     	ds	2
   898  000076                     ??___xxtofl:
   899  000076                     CANSetMask@type:
   900                           	opt stack 0
   901  000076                     CANSetFilter@type:
   902                           	opt stack 0
   903  000076                     ___awmod@counter:
   904                           	opt stack 0
   905  000076                     CANsendMessage@data:
   906                           	opt stack 0
   907  000076                     ___wmul@product:
   908                           	opt stack 0
   909  000076                     __div_to_l_@f2:
   910                           	opt stack 0
   911  000076                     ___flge@ff2:
   912                           	opt stack 0
   913  000076                     __tdiv_to_l_@f2:
   914                           	opt stack 0
   915  000076                     ___lldiv@divisor:
   916                           	opt stack 0
   917  000076                     ___llmod@divisor:
   918                           	opt stack 0
   919                           
   920                           ; 4 bytes @ 0x16
   921  000076                     	ds	1
   922  000077                     ??_CANSetMask:
   923  000077                     ??_CANSetFilter:
   924  000077                     ___awmod@sign:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x17
   928  000077                     	ds	1
   929  000078                     ?___awdiv:
   930                           	opt stack 0
   931  000078                     CANsendMessage@dataLength:
   932                           	opt stack 0
   933  000078                     delay_ms@value_ms:
   934                           	opt stack 0
   935  000078                     ___awdiv@dividend:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0x18
   939  000078                     	ds	1
   940  000079                     CANsendMessage@flags:
   941                           	opt stack 0
   942                           
   943                           ; 1 bytes @ 0x19
   944  000079                     	ds	1
   945  00007A                     ??__tdiv_to_l_:
   946  00007A                     ??_CANsendMessage:
   947  00007A                     ??___flge:
   948  00007A                     LCD_send_command@D2:
   949                           	opt stack 0
   950  00007A                     ___llmod@counter:
   951                           	opt stack 0
   952  00007A                     ___xxtofl@sign:
   953                           	opt stack 0
   954  00007A                     ___awdiv@divisor:
   955                           	opt stack 0
   956  00007A                     __div_to_l_@quot:
   957                           	opt stack 0
   958  00007A                     ___lldiv@quotient:
   959                           	opt stack 0
   960                           
   961                           ; 4 bytes @ 0x1A
   962  00007A                     	ds	1
   963  00007B                     CANSetMask@numBuffer:
   964                           	opt stack 0
   965  00007B                     CANSetFilter@numBuffer:
   966                           	opt stack 0
   967  00007B                     LCD_send_command@D1:
   968                           	opt stack 0
   969  00007B                     ___xxtofl@exp:
   970                           	opt stack 0
   971                           
   972                           ; 1 bytes @ 0x1B
   973  00007B                     	ds	1
   974  00007C                     LCD_send_command@D0:
   975                           	opt stack 0
   976  00007C                     ___awdiv@counter:
   977                           	opt stack 0
   978  00007C                     CANSetMask@tamp:
   979                           	opt stack 0
   980  00007C                     CANSetFilter@tamp:
   981                           	opt stack 0
   982  00007C                     ___xxtofl@arg:
   983                           	opt stack 0
   984                           
   985                           ; 4 bytes @ 0x1C
   986  00007C                     	ds	1
   987  00007D                     LCD_send_command@D3:
   988                           	opt stack 0
   989  00007D                     ___awdiv@sign:
   990                           	opt stack 0
   991  00007D                     __tdiv_to_l_@quot:
   992                           	opt stack 0
   993                           
   994                           ; 4 bytes @ 0x1D
   995  00007D                     	ds	1
   996  00007E                     LCD_shift_cursor@number_of_shift:
   997                           	opt stack 0
   998  00007E                     LCD_goto_line@line:
   999                           	opt stack 0
  1000  00007E                     LCD_write_char@D3:
  1001                           	opt stack 0
  1002  00007E                     LCD_cursor@blinking:
  1003                           	opt stack 0
  1004  00007E                     __div_to_l_@cntr:
  1005                           	opt stack 0
  1006  00007E                     ___lldiv@counter:
  1007                           	opt stack 0
  1008  00007E                     ___awdiv@quotient:
  1009                           	opt stack 0
  1010  00007E                     CANsendMessage@tamp:
  1011                           	opt stack 0
  1012                           
  1013                           ; 4 bytes @ 0x1E
  1014  00007E                     	ds	1
  1015  00007F                     LCD_shift_cursor@shift:
  1016                           	opt stack 0
  1017  00007F                     LCD_write_char@D2:
  1018                           	opt stack 0
  1019  00007F                     LCD_cursor@active:
  1020                           	opt stack 0
  1021  00007F                     __div_to_l_@exp1:
  1022                           	opt stack 0
  1023                           
  1024                           ; 1 bytes @ 0x1F
  1025  00007F                     	ds	1
  1026  000080                     ?___fldiv:
  1027                           	opt stack 0
  1028  000080                     ?___flmul:
  1029                           	opt stack 0
  1030  000080                     CANInitialize@phaseSeg1:
  1031                           	opt stack 0
  1032  000080                     LCD_shift_cursor@i:
  1033                           	opt stack 0
  1034  000080                     LCD_write_char@D1:
  1035                           	opt stack 0
  1036  000080                     LCD_initialize@quartz_frequency:
  1037                           	opt stack 0
  1038  000080                     ___fldiv@b:
  1039                           	opt stack 0
  1040  000080                     ___flmul@b:
  1041                           	opt stack 0
  1042                           
  1043                           ; 4 bytes @ 0x20
  1044  000080                     	ds	1
  1045  000081                     CANInitialize@phaseSeg2:
  1046                           	opt stack 0
  1047  000081                     LCD_goto_xy@y:
  1048                           	opt stack 0
  1049  000081                     LCD_write_char@D0:
  1050                           	opt stack 0
  1051  000081                     __tdiv_to_l_@cntr:
  1052                           	opt stack 0
  1053                           
  1054                           ; 1 bytes @ 0x21
  1055  000081                     	ds	1
  1056  000082                     CANInitialize@SJW:
  1057                           	opt stack 0
  1058  000082                     LCD_goto_xy@x:
  1059                           	opt stack 0
  1060  000082                     LCD_write_char@value:
  1061                           	opt stack 0
  1062  000082                     __tdiv_to_l_@exp1:
  1063                           	opt stack 0
  1064                           
  1065                           ; 1 bytes @ 0x22
  1066  000082                     	ds	1
  1067  000083                     CANInitialize@BRP:
  1068                           	opt stack 0
  1069  000083                     LCD_write_message@buffer:
  1070                           	opt stack 0
  1071  000083                     LCD_write_string@buffer:
  1072                           	opt stack 0
  1073                           
  1074                           ; 2 bytes @ 0x23
  1075  000083                     	ds	1
  1076  000084                     CANInitialize@flags:
  1077                           	opt stack 0
  1078  000084                     ___fldiv@a:
  1079                           	opt stack 0
  1080  000084                     ___flmul@a:
  1081                           	opt stack 0
  1082                           
  1083                           ; 4 bytes @ 0x24
  1084  000084                     	ds	1
  1085  000085                     ??_CANInitialize:
  1086  000085                     
  1087                           ; 0 bytes @ 0x25
  1088  000085                     	ds	3
  1089  000088                     ??___fldiv:
  1090  000088                     ??___flmul:
  1091                           
  1092                           ; 0 bytes @ 0x28
  1093  000088                     	ds	1
  1094  000089                     CANInitialize@propSeg:
  1095                           	opt stack 0
  1096                           
  1097                           ; 1 bytes @ 0x29
  1098  000089                     	ds	1
  1099  00008A                     CANInitialize@FilterConfig1:
  1100                           	opt stack 0
  1101                           
  1102                           ; 1 bytes @ 0x2A
  1103  00008A                     	ds	1
  1104  00008B                     CANInitialize@FilterConfig2:
  1105                           	opt stack 0
  1106                           
  1107                           ; 1 bytes @ 0x2B
  1108  00008B                     	ds	1
  1109  00008C                     ___fldiv@sign:
  1110                           	opt stack 0
  1111  00008C                     ___flmul@sign:
  1112                           	opt stack 0
  1113                           
  1114                           ; 1 bytes @ 0x2C
  1115  00008C                     	ds	1
  1116  00008D                     ___flmul@aexp:
  1117                           	opt stack 0
  1118  00008D                     ___fldiv@rem:
  1119                           	opt stack 0
  1120                           
  1121                           ; 4 bytes @ 0x2D
  1122  00008D                     	ds	1
  1123  00008E                     ___flmul@grs:
  1124                           	opt stack 0
  1125                           
  1126                           ; 4 bytes @ 0x2E
  1127  00008E                     	ds	3
  1128  000091                     ___fldiv@new_exp:
  1129                           	opt stack 0
  1130                           
  1131                           ; 2 bytes @ 0x31
  1132  000091                     	ds	1
  1133  000092                     ___flmul@bexp:
  1134                           	opt stack 0
  1135                           
  1136                           ; 1 bytes @ 0x32
  1137  000092                     	ds	1
  1138  000093                     ___fldiv@grs:
  1139                           	opt stack 0
  1140  000093                     ___flmul@prod:
  1141                           	opt stack 0
  1142                           
  1143                           ; 4 bytes @ 0x33
  1144  000093                     	ds	4
  1145  000097                     ___fldiv@bexp:
  1146                           	opt stack 0
  1147  000097                     ___flmul@temp:
  1148                           	opt stack 0
  1149                           
  1150                           ; 2 bytes @ 0x37
  1151  000097                     	ds	1
  1152  000098                     ___fldiv@aexp:
  1153                           	opt stack 0
  1154                           
  1155                           ; 1 bytes @ 0x38
  1156  000098                     	ds	1
  1157  000099                     ?_fround:
  1158                           	opt stack 0
  1159  000099                     ?_scale:
  1160                           	opt stack 0
  1161  000099                     ?___flneg:
  1162                           	opt stack 0
  1163  000099                     ___flneg@f1:
  1164                           	opt stack 0
  1165                           
  1166                           ; 4 bytes @ 0x39
  1167  000099                     	ds	4
  1168  00009D                     _fround$4213:
  1169                           	opt stack 0
  1170  00009D                     _scale$4214:
  1171                           	opt stack 0
  1172                           
  1173                           ; 4 bytes @ 0x3D
  1174  00009D                     	ds	4
  1175  0000A1                     scale@scl:
  1176                           	opt stack 0
  1177  0000A1                     _fround$4212:
  1178                           	opt stack 0
  1179                           
  1180                           ; 4 bytes @ 0x41
  1181  0000A1                     	ds	4
  1182  0000A5                     fround@prec:
  1183                           	opt stack 0
  1184                           
  1185                           ; 1 bytes @ 0x45
  1186  0000A5                     	ds	1
  1187  0000A6                     ?___fladd:
  1188                           	opt stack 0
  1189  0000A6                     ___fladd@b:
  1190                           	opt stack 0
  1191                           
  1192                           ; 4 bytes @ 0x46
  1193  0000A6                     	ds	4
  1194  0000AA                     ___fladd@a:
  1195                           	opt stack 0
  1196                           
  1197                           ; 4 bytes @ 0x4A
  1198  0000AA                     	ds	4
  1199  0000AE                     ??___fladd:
  1200                           
  1201                           ; 0 bytes @ 0x4E
  1202  0000AE                     	ds	8
  1203  0000B6                     ___fladd@signs:
  1204                           	opt stack 0
  1205                           
  1206                           ; 1 bytes @ 0x56
  1207  0000B6                     	ds	1
  1208  0000B7                     ___fladd@aexp:
  1209                           	opt stack 0
  1210                           
  1211                           ; 1 bytes @ 0x57
  1212  0000B7                     	ds	1
  1213  0000B8                     ___fladd@bexp:
  1214                           	opt stack 0
  1215                           
  1216                           ; 1 bytes @ 0x58
  1217  0000B8                     	ds	1
  1218  0000B9                     ___fladd@grs:
  1219                           	opt stack 0
  1220                           
  1221                           ; 1 bytes @ 0x59
  1222  0000B9                     	ds	1
  1223  0000BA                     ?___flsub:
  1224                           	opt stack 0
  1225  0000BA                     ?___fltol:
  1226                           	opt stack 0
  1227  0000BA                     ___fltol@f1:
  1228                           	opt stack 0
  1229  0000BA                     ___flsub@b:
  1230                           	opt stack 0
  1231                           
  1232                           ; 4 bytes @ 0x5A
  1233  0000BA                     	ds	4
  1234  0000BE                     ??___fltol:
  1235  0000BE                     ___flsub@a:
  1236                           	opt stack 0
  1237                           
  1238                           ; 4 bytes @ 0x5E
  1239  0000BE                     	ds	4
  1240  0000C2                     ___fltol@sign1:
  1241                           	opt stack 0
  1242                           
  1243                           ; 1 bytes @ 0x62
  1244  0000C2                     	ds	1
  1245  0000C3                     ___fltol@exp1:
  1246                           	opt stack 0
  1247                           
  1248                           ; 1 bytes @ 0x63
  1249  0000C3                     	ds	1
  1250  0000C4                     ?_sprintf:
  1251                           	opt stack 0
  1252  0000C4                     sprintf@sp:
  1253                           	opt stack 0
  1254                           
  1255                           ; 2 bytes @ 0x64
  1256  0000C4                     	ds	2
  1257  0000C6                     sprintf@f:
  1258                           	opt stack 0
  1259                           
  1260                           ; 2 bytes @ 0x66
  1261  0000C6                     	ds	6
  1262  0000CC                     tblptru	equ	0xFF8
  1263                           tblptrh	equ	0xFF7
  1264                           tblptrl	equ	0xFF6
  1265                           tablat	equ	0xFF5
  1266                           postinc0	equ	0xFEE
  1267                           wreg	equ	0xFE8
  1268                           
  1269                           ; 0 bytes @ 0x6C
  1270                           
  1271                           	psect	cstackCOMRAM
  1272  00002D                     __pcstackCOMRAM:
  1273                           	opt stack 0
  1274  00002D                     ??_ISR_bassa:
  1275  00002D                     
  1276                           ; 1 bytes @ 0x0
  1277  00002D                     	ds	17
  1278  00003E                     _CANisRxReady$3237:
  1279                           	opt stack 0
  1280  00003E                     i2_CANisTxReady$3235:
  1281                           	opt stack 0
  1282  00003E                     CANreceiveMessage@msg:
  1283                           	opt stack 0
  1284  00003E                     i2CANsendMessage@identifier:
  1285                           	opt stack 0
  1286                           
  1287                           ; 4 bytes @ 0x11
  1288  00003E                     	ds	2
  1289  000040                     ??_CANreceiveMessage:
  1290                           
  1291                           ; 0 bytes @ 0x13
  1292  000040                     	ds	2
  1293  000042                     i2CANsendMessage@data:
  1294                           	opt stack 0
  1295                           
  1296                           ; 2 bytes @ 0x15
  1297  000042                     	ds	2
  1298  000044                     i2CANsendMessage@dataLength:
  1299                           	opt stack 0
  1300                           
  1301                           ; 1 bytes @ 0x17
  1302  000044                     	ds	1
  1303  000045                     i2CANsendMessage@flags:
  1304                           	opt stack 0
  1305                           
  1306                           ; 1 bytes @ 0x18
  1307  000045                     	ds	1
  1308  000046                     ??i2_CANsendMessage:
  1309                           
  1310                           ; 0 bytes @ 0x19
  1311  000046                     	ds	2
  1312  000048                     CANreceiveMessage@error:
  1313                           	opt stack 0
  1314                           
  1315                           ; 1 bytes @ 0x1B
  1316  000048                     	ds	1
  1317  000049                     CANreceiveMessage@tamp:
  1318                           	opt stack 0
  1319                           
  1320                           ; 1 bytes @ 0x1C
  1321  000049                     	ds	1
  1322  00004A                     ISR_alta@i:
  1323                           	opt stack 0
  1324                           
  1325                           ; 1 bytes @ 0x1D
  1326  00004A                     	ds	1
  1327                           tblptru	equ	0xFF8
  1328                           tblptrh	equ	0xFF7
  1329                           tblptrl	equ	0xFF6
  1330                           tablat	equ	0xFF5
  1331                           postinc0	equ	0xFEE
  1332                           wreg	equ	0xFE8
  1333                           
  1334 ;;
  1335 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1336 ;;
  1337 ;; *************** function _main *****************
  1338 ;; Defined at:
  1339 ;;		line 147 in file "RemoteCan.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;		None               void
  1346 ;; Registers used:
  1347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1355 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1356 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1357 ;;Total ram usage:        8 bytes
  1358 ;; Hardware stack levels required when called:   10
  1359 ;; This function calls:
  1360 ;;		_CAN_Send
  1361 ;;		_CAN_interpreter
  1362 ;;		_CANisTxReady
  1363 ;;		_CANsendMessage
  1364 ;;		_F1_Button_Polling
  1365 ;;		_F2_Button_Polling
  1366 ;;		_Joystick_Polling
  1367 ;;		_LCD_Handler
  1368 ;;		_LCD_goto_line
  1369 ;;		_LCD_initialize
  1370 ;;		_LCD_write_message
  1371 ;;		_PWR_Button_Polling
  1372 ;;		___fladd
  1373 ;;		___flmul
  1374 ;;		___flneg
  1375 ;;		___fltol
  1376 ;;		___xxtofl
  1377 ;;		_board_initialization
  1378 ;;		_delay_ms
  1379 ;; This function is called by:
  1380 ;;		Startup code after reset
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text0
  1385  012204                     __ptext0:
  1386                           	opt stack 0
  1387  012204                     _main:
  1388                           	opt stack 21
  1389                           
  1390                           ;RemoteCan.c: 148: board_initialization();
  1391                           
  1392                           ;incstack = 0
  1393  012204  ECDC  F0AB         	call	_board_initialization	;wreg free
  1394                           
  1395                           ;RemoteCan.c: 150: LATDbits.LD6 = 1;
  1396  012208  8C8C               	bsf	3980,6,c	;volatile
  1397                           
  1398                           ;RemoteCan.c: 151: LATDbits.LD5 = 1;
  1399  01220A  8A8C               	bsf	3980,5,c	;volatile
  1400                           
  1401                           ;RemoteCan.c: 152: delay_ms(500);
  1402  01220C  0E01               	movlw	1
  1403  01220E  0100               	movlb	0	; () banked
  1404  012210  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1405  012212  0EF4               	movlw	244
  1406  012214  6F78               	movwf	delay_ms@value_ms& (0+255),b
  1407  012216  ECCA  F0AD         	call	_delay_ms	;wreg free
  1408                           
  1409                           ;RemoteCan.c: 153: LATDbits.LD6 = 0;
  1410  01221A  9C8C               	bcf	3980,6,c	;volatile
  1411                           
  1412                           ;RemoteCan.c: 154: LATDbits.LD5 = 0;
  1413  01221C  9A8C               	bcf	3980,5,c	;volatile
  1414                           
  1415                           ;RemoteCan.c: 156: JoystickConstants[0] = 0.703;
  1416  01221E  0ECF               	movlw	207
  1417  012220  0100               	movlb	0	; () banked
  1418  012222  6FCC               	movwf	_JoystickConstants& (0+255),b	;volatile
  1419  012224  0EF7               	movlw	247
  1420  012226  6FCD               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1421  012228  0E33               	movlw	51
  1422  01222A  6FCE               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1423  01222C  0E3F               	movlw	63
  1424  01222E  6FCF               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;RemoteCan.c: 157: JoystickConstants[1] = 10;
  1428  012230  0E00               	movlw	0
  1429  012232  0100               	movlb	0	; () banked
  1430  012234  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1431  012236  0E00               	movlw	0
  1432  012238  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1433  01223A  0E20               	movlw	32
  1434  01223C  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1435  01223E  0E41               	movlw	65
  1436  012240  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;RemoteCan.c: 159: display_refresh = 1;
  1440  012242  8C4B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1441  012244                     l8908:
  1442                           
  1443                           ;RemoteCan.c: 163: PWR_Button_Polling();
  1444  012244  ECC4  F0AE         	call	_PWR_Button_Polling	;wreg free
  1445                           
  1446                           ;RemoteCan.c: 164: F1_Button_Polling();
  1447  012248  ECEE  F0AE         	call	_F1_Button_Polling	;wreg free
  1448                           
  1449                           ;RemoteCan.c: 165: F2_Button_Polling();
  1450  01224C  ECE0  F0AE         	call	_F2_Button_Polling	;wreg free
  1451                           
  1452                           ;RemoteCan.c: 168: if (power_switch == 0) {
  1453  012250  B04C               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1454  012252  D09B               	goto	l8950
  1455                           
  1456                           ;RemoteCan.c: 169: dir = 1;
  1457  012254  0E01               	movlw	1
  1458  012256  0100               	movlb	0	; () banked
  1459  012258  6FE4               	movwf	_dir& (0+255),b	;volatile
  1460                           
  1461                           ;RemoteCan.c: 170: set_speed = 0;
  1462  01225A  0E00               	movlw	0
  1463  01225C  0100               	movlb	0	; () banked
  1464  01225E  6FE3               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1465  012260  0E00               	movlw	0
  1466  012262  6FE2               	movwf	_set_speed& (0+255),b	;volatile
  1467                           
  1468                           ;RemoteCan.c: 171: data_steering [0] = 90;
  1469  012264  0E5A               	movlw	90
  1470  012266  0100               	movlb	0	; () banked
  1471  012268  6FEB               	movwf	_data_steering& (0+255),b
  1472                           
  1473                           ;RemoteCan.c: 172: data_brake [0] = 0;
  1474  01226A  0E00               	movlw	0
  1475  01226C  0100               	movlb	0	; () banked
  1476  01226E  6FE9               	movwf	_data_brake& (0+255),b
  1477                           
  1478                           ;RemoteCan.c: 173: data_brake [1] = 1;
  1479  012270  0E01               	movlw	1
  1480  012272  0100               	movlb	0	; () banked
  1481  012274  6FEA               	movwf	(_data_brake+1)& (0+255),b
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;RemoteCan.c: 174: CAN_Send();
  1485  012276  EC2A  F0AB         	call	_CAN_Send	;wreg free
  1486                           
  1487                           ;RemoteCan.c: 175: LCD_initialize(16);
  1488  01227A  0E10               	movlw	16
  1489  01227C  EC14  F0A8         	call	_LCD_initialize
  1490                           
  1491                           ;RemoteCan.c: 176: LCD_goto_line(1);
  1492  012280  0E01               	movlw	1
  1493  012282  ECF7  F0A9         	call	_LCD_goto_line
  1494                           
  1495                           ;RemoteCan.c: 177: LCD_write_message("====================");
  1496  012286  0E9C               	movlw	low STR_1
  1497  012288  0100               	movlb	0	; () banked
  1498  01228A  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1499  01228C  0EFF               	movlw	high STR_1
  1500  01228E  0100               	movlb	0	; () banked
  1501  012290  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1502  012292  EC1E  F0AE         	call	_LCD_write_message	;wreg free
  1503                           
  1504                           ;RemoteCan.c: 178: LCD_goto_line(2);
  1505  012296  0E02               	movlw	2
  1506  012298  ECF7  F0A9         	call	_LCD_goto_line
  1507                           
  1508                           ;RemoteCan.c: 179: LCD_write_message("==> VEHICLE  OFF <==");
  1509  01229C  0E72               	movlw	low STR_2
  1510  01229E  0100               	movlb	0	; () banked
  1511  0122A0  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1512  0122A2  0EFF               	movlw	high STR_2
  1513  0122A4  0100               	movlb	0	; () banked
  1514  0122A6  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1515  0122A8  EC1E  F0AE         	call	_LCD_write_message	;wreg free
  1516                           
  1517                           ;RemoteCan.c: 180: LCD_goto_line(3);
  1518  0122AC  0E03               	movlw	3
  1519  0122AE  ECF7  F0A9         	call	_LCD_goto_line
  1520                           
  1521                           ;RemoteCan.c: 181: LCD_write_message("Turn the switch ON! ");
  1522  0122B2  0E5D               	movlw	low STR_3
  1523  0122B4  0100               	movlb	0	; () banked
  1524  0122B6  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1525  0122B8  0EFF               	movlw	high STR_3
  1526  0122BA  0100               	movlb	0	; () banked
  1527  0122BC  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1528  0122BE  EC1E  F0AE         	call	_LCD_write_message	;wreg free
  1529                           
  1530                           ;RemoteCan.c: 182: LCD_goto_line(4);
  1531  0122C2  0E04               	movlw	4
  1532  0122C4  ECF7  F0A9         	call	_LCD_goto_line
  1533                           
  1534                           ;RemoteCan.c: 183: LCD_write_message("====================");
  1535  0122C8  0E9C               	movlw	low STR_1
  1536  0122CA  0100               	movlb	0	; () banked
  1537  0122CC  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1538  0122CE  0EFF               	movlw	high STR_1
  1539  0122D0  0100               	movlb	0	; () banked
  1540  0122D2  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1541  0122D4  EC1E  F0AE         	call	_LCD_write_message	;wreg free
  1542                           
  1543                           ;RemoteCan.c: 184: while (power_switch == 0) {
  1544  0122D8  D054               	goto	l8948
  1545  0122DA                     l8938:
  1546                           
  1547                           ;RemoteCan.c: 185: if ((time_counter - pr_time_1) >= 30) {
  1548  0122DA  C0D4  F13E         	movff	_pr_time_1,??_main	;volatile
  1549  0122DE  C0D5  F13F         	movff	_pr_time_1+1,??_main+1	;volatile
  1550  0122E2  C0D6  F140         	movff	_pr_time_1+2,??_main+2	;volatile
  1551  0122E6  C0D7  F141         	movff	_pr_time_1+3,??_main+3	;volatile
  1552  0122EA  0101               	movlb	1	; () banked
  1553  0122EC  1F3E               	comf	??_main& (0+255),f,b
  1554  0122EE  1F3F               	comf	(??_main+1)& (0+255),f,b
  1555  0122F0  1F40               	comf	(??_main+2)& (0+255),f,b
  1556  0122F2  1F41               	comf	(??_main+3)& (0+255),f,b
  1557  0122F4  2B3E               	incf	??_main& (0+255),f,b
  1558  0122F6  0E00               	movlw	0
  1559  0122F8  233F               	addwfc	(??_main+1)& (0+255),f,b
  1560  0122FA  2340               	addwfc	(??_main+2)& (0+255),f,b
  1561  0122FC  2341               	addwfc	(??_main+3)& (0+255),f,b
  1562  0122FE  5022               	movf	_time_counter,w,c	;volatile
  1563  012300  0101               	movlb	1	; () banked
  1564  012302  253E               	addwf	??_main& (0+255),w,b
  1565  012304  0101               	movlb	1	; () banked
  1566  012306  6F42               	movwf	(??_main+4)& (0+255),b
  1567  012308  5023               	movf	_time_counter+1,w,c	;volatile
  1568  01230A  0101               	movlb	1	; () banked
  1569  01230C  213F               	addwfc	(??_main+1)& (0+255),w,b
  1570  01230E  0101               	movlb	1	; () banked
  1571  012310  6F43               	movwf	(??_main+5)& (0+255),b
  1572  012312  5024               	movf	_time_counter+2,w,c	;volatile
  1573  012314  0101               	movlb	1	; () banked
  1574  012316  2140               	addwfc	(??_main+2)& (0+255),w,b
  1575  012318  0101               	movlb	1	; () banked
  1576  01231A  6F44               	movwf	(??_main+6)& (0+255),b
  1577  01231C  5025               	movf	_time_counter+3,w,c	;volatile
  1578  01231E  0101               	movlb	1	; () banked
  1579  012320  2141               	addwfc	(??_main+3)& (0+255),w,b
  1580  012322  0101               	movlb	1	; () banked
  1581  012324  6F45               	movwf	(??_main+7)& (0+255),b
  1582  012326  0101               	movlb	1	; () banked
  1583  012328  5145               	movf	(??_main+7)& (0+255),w,b
  1584  01232A  0101               	movlb	1	; () banked
  1585  01232C  1144               	iorwf	(??_main+6)& (0+255),w,b
  1586  01232E  0101               	movlb	1	; () banked
  1587  012330  1143               	iorwf	(??_main+5)& (0+255),w,b
  1588  012332  E105               	bnz	u11860
  1589  012334  0E1E               	movlw	30
  1590  012336  0101               	movlb	1	; () banked
  1591  012338  5D42               	subwf	(??_main+4)& (0+255),w,b
  1592  01233A  A0D8               	btfss	status,0,c
  1593  01233C  D019               	goto	l8944
  1594  01233E                     u11860:
  1595                           
  1596                           ; BSR set to: 1
  1597                           ;RemoteCan.c: 186: pr_time_1 = time_counter;
  1598  01233E  C022  F0D4         	movff	_time_counter,_pr_time_1	;volatile
  1599  012342  C023  F0D5         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1600  012346  C024  F0D6         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1601  01234A  C025  F0D7         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1602                           
  1603                           ; BSR set to: 1
  1604                           ;RemoteCan.c: 187: PORTDbits.RD7 = ~PORTDbits.RD7;
  1605  01234E  AE83               	btfss	3971,7,c	;volatile
  1606  012350  D002               	goto	u11870
  1607  012352  0E01               	movlw	1
  1608  012354  D001               	goto	u11876
  1609  012356                     u11870:
  1610  012356  0E00               	movlw	0
  1611  012358                     u11876:
  1612  012358  0AFF               	xorlw	255
  1613  01235A  0101               	movlb	1	; () banked
  1614  01235C  6F3E               	movwf	??_main& (0+255),b
  1615  01235E  0101               	movlb	1	; () banked
  1616  012360  333E               	rrcf	??_main& (0+255),f,b
  1617  012362  333E               	rrcf	??_main& (0+255),f,b
  1618  012364  5083               	movf	3971,w,c	;volatile
  1619  012366  0101               	movlb	1	; () banked
  1620  012368  193E               	xorwf	??_main& (0+255),w,b
  1621  01236A  0B7F               	andlw	-129
  1622  01236C  193E               	xorwf	??_main& (0+255),w,b
  1623  01236E  6E83               	movwf	3971,c	;volatile
  1624  012370                     l8944:
  1625                           
  1626                           ; BSR set to: 1
  1627                           ;RemoteCan.c: 188: }
  1628                           ;RemoteCan.c: 189: PWR_Button_Polling();
  1629  012370  ECC4  F0AE         	call	_PWR_Button_Polling	;wreg free
  1630                           
  1631                           ;RemoteCan.c: 190: delay_ms(10);
  1632  012374  0E00               	movlw	0
  1633  012376  0100               	movlb	0	; () banked
  1634  012378  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1635  01237A  0E0A               	movlw	10
  1636  01237C  6F78               	movwf	delay_ms@value_ms& (0+255),b
  1637  01237E  ECCA  F0AD         	call	_delay_ms	;wreg free
  1638  012382                     l8948:
  1639  012382  A04C               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1640  012384  D7AA               	goto	l8938
  1641                           
  1642                           ;RemoteCan.c: 191: }
  1643                           ;RemoteCan.c: 192: PORTDbits.RD7 = 0;
  1644  012386  9E83               	bcf	3971,7,c	;volatile
  1645                           
  1646                           ;RemoteCan.c: 193: display_refresh = 1;
  1647  012388  8C4B               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1648  01238A                     l8950:
  1649                           
  1650                           ;RemoteCan.c: 194: }
  1651                           ;RemoteCan.c: 196: Joystick_Polling();
  1652  01238A  EC17  F0AD         	call	_Joystick_Polling	;wreg free
  1653                           
  1654                           ;RemoteCan.c: 199: if (PORTAbits.RA2 == 1) {
  1655  01238E  A480               	btfss	3968,2,c	;volatile
  1656  012390  D004               	goto	l775
  1657                           
  1658                           ;RemoteCan.c: 200: switch_position = 0;
  1659  012392  0E00               	movlw	0
  1660  012394  0100               	movlb	0	; () banked
  1661  012396  6FE6               	movwf	_switch_position& (0+255),b	;volatile
  1662                           
  1663                           ;RemoteCan.c: 201: } else {
  1664  012398  D00D               	goto	l8960
  1665  01239A                     l775:
  1666                           
  1667                           ;RemoteCan.c: 202: if (PORTAbits.RA3 == 0) {
  1668  01239A  B680               	btfsc	3968,3,c	;volatile
  1669  01239C  D005               	goto	l8958
  1670                           
  1671                           ;RemoteCan.c: 203: switch_position = 1;
  1672  01239E  0E01               	movlw	1
  1673  0123A0  0100               	movlb	0	; () banked
  1674  0123A2  6FE6               	movwf	_switch_position& (0+255),b	;volatile
  1675                           
  1676                           ;RemoteCan.c: 204: dir = 1;
  1677  0123A4  0E01               	movlw	1
  1678  0123A6  D004               	goto	L1
  1679  0123A8                     l8958:
  1680                           
  1681                           ;RemoteCan.c: 206: switch_position = 2;
  1682  0123A8  0E02               	movlw	2
  1683  0123AA  0100               	movlb	0	; () banked
  1684  0123AC  6FE6               	movwf	_switch_position& (0+255),b	;volatile
  1685                           
  1686                           ;RemoteCan.c: 207: dir = 0;
  1687  0123AE  0E00               	movlw	0
  1688  0123B0                     L1:
  1689  0123B0  0100               	movlb	0	; () banked
  1690  0123B2  6FE4               	movwf	_dir& (0+255),b	;volatile
  1691  0123B4                     l8960:
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;RemoteCan.c: 208: }
  1695                           ;RemoteCan.c: 209: }
  1696                           ;RemoteCan.c: 212: if (F1_switch == 1) {
  1697  0123B4  A24B               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  1698  0123B6  D0B8               	goto	l9004
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;RemoteCan.c: 213: y = 0;
  1702  0123B8  984C               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;RemoteCan.c: 214: if ((time_counter - pr_time_5) >= 30) {
  1706  0123BA  C01E  F13E         	movff	_pr_time_5,??_main	;volatile
  1707  0123BE  C01F  F13F         	movff	_pr_time_5+1,??_main+1	;volatile
  1708  0123C2  C020  F140         	movff	_pr_time_5+2,??_main+2	;volatile
  1709  0123C6  C021  F141         	movff	_pr_time_5+3,??_main+3	;volatile
  1710  0123CA  0101               	movlb	1	; () banked
  1711  0123CC  1F3E               	comf	??_main& (0+255),f,b
  1712  0123CE  1F3F               	comf	(??_main+1)& (0+255),f,b
  1713  0123D0  1F40               	comf	(??_main+2)& (0+255),f,b
  1714  0123D2  1F41               	comf	(??_main+3)& (0+255),f,b
  1715  0123D4  2B3E               	incf	??_main& (0+255),f,b
  1716  0123D6  0E00               	movlw	0
  1717  0123D8  233F               	addwfc	(??_main+1)& (0+255),f,b
  1718  0123DA  2340               	addwfc	(??_main+2)& (0+255),f,b
  1719  0123DC  2341               	addwfc	(??_main+3)& (0+255),f,b
  1720  0123DE  5022               	movf	_time_counter,w,c	;volatile
  1721  0123E0  0101               	movlb	1	; () banked
  1722  0123E2  253E               	addwf	??_main& (0+255),w,b
  1723  0123E4  0101               	movlb	1	; () banked
  1724  0123E6  6F42               	movwf	(??_main+4)& (0+255),b
  1725  0123E8  5023               	movf	_time_counter+1,w,c	;volatile
  1726  0123EA  0101               	movlb	1	; () banked
  1727  0123EC  213F               	addwfc	(??_main+1)& (0+255),w,b
  1728  0123EE  0101               	movlb	1	; () banked
  1729  0123F0  6F43               	movwf	(??_main+5)& (0+255),b
  1730  0123F2  5024               	movf	_time_counter+2,w,c	;volatile
  1731  0123F4  0101               	movlb	1	; () banked
  1732  0123F6  2140               	addwfc	(??_main+2)& (0+255),w,b
  1733  0123F8  0101               	movlb	1	; () banked
  1734  0123FA  6F44               	movwf	(??_main+6)& (0+255),b
  1735  0123FC  5025               	movf	_time_counter+3,w,c	;volatile
  1736  0123FE  0101               	movlb	1	; () banked
  1737  012400  2141               	addwfc	(??_main+3)& (0+255),w,b
  1738  012402  0101               	movlb	1	; () banked
  1739  012404  6F45               	movwf	(??_main+7)& (0+255),b
  1740  012406  0101               	movlb	1	; () banked
  1741  012408  5145               	movf	(??_main+7)& (0+255),w,b
  1742  01240A  0101               	movlb	1	; () banked
  1743  01240C  1144               	iorwf	(??_main+6)& (0+255),w,b
  1744  01240E  0101               	movlb	1	; () banked
  1745  012410  1143               	iorwf	(??_main+5)& (0+255),w,b
  1746  012412  E105               	bnz	u11920
  1747  012414  0E1E               	movlw	30
  1748  012416  0101               	movlb	1	; () banked
  1749  012418  5D42               	subwf	(??_main+4)& (0+255),w,b
  1750  01241A  A0D8               	btfss	status,0,c
  1751  01241C  D023               	goto	l8974
  1752  01241E                     u11920:
  1753                           
  1754                           ; BSR set to: 1
  1755                           ;RemoteCan.c: 215: pr_time_5 = time_counter;
  1756  01241E  C022  F01E         	movff	_time_counter,_pr_time_5	;volatile
  1757  012422  C023  F01F         	movff	_time_counter+1,_pr_time_5+1	;volatile
  1758  012426  C024  F020         	movff	_time_counter+2,_pr_time_5+2	;volatile
  1759  01242A  C025  F021         	movff	_time_counter+3,_pr_time_5+3	;volatile
  1760                           
  1761                           ; BSR set to: 1
  1762                           ;RemoteCan.c: 216: PORTDbits.RD6 = ~PORTDbits.RD6;
  1763  01242E  AC83               	btfss	3971,6,c	;volatile
  1764  012430  D002               	goto	u11930
  1765  012432  0E01               	movlw	1
  1766  012434  D001               	goto	u11936
  1767  012436                     u11930:
  1768  012436  0E00               	movlw	0
  1769  012438                     u11936:
  1770  012438  0AFF               	xorlw	255
  1771  01243A  0101               	movlb	1	; () banked
  1772  01243C  6F3E               	movwf	??_main& (0+255),b
  1773  01243E  0101               	movlb	1	; () banked
  1774  012440  3B3E               	swapf	??_main& (0+255),f,b
  1775  012442  473E               	rlncf	??_main& (0+255),f,b
  1776  012444  473E               	rlncf	??_main& (0+255),f,b
  1777  012446  5083               	movf	3971,w,c	;volatile
  1778  012448  0101               	movlb	1	; () banked
  1779  01244A  193E               	xorwf	??_main& (0+255),w,b
  1780  01244C  0BBF               	andlw	-65
  1781  01244E  193E               	xorwf	??_main& (0+255),w,b
  1782  012450  6E83               	movwf	3971,c	;volatile
  1783                           
  1784                           ; BSR set to: 1
  1785                           ;RemoteCan.c: 217: if (F2_switch == 1) {
  1786  012452  A44B               	btfss	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1787  012454  D006               	goto	l781
  1788                           
  1789                           ; BSR set to: 1
  1790                           ;RemoteCan.c: 218: PORTDbits.RD5 = LATDbits.LATD6;
  1791  012456  AC8C               	btfss	3980,6,c	;volatile
  1792  012458  D002               	bra	u11955
  1793  01245A  8A83               	bsf	3971,5,c	;volatile
  1794  01245C  D001               	bra	u11957
  1795  01245E                     u11955:
  1796  01245E  D001               	goto	l781
  1797  012460                     u11957:
  1798                           
  1799                           ;RemoteCan.c: 219: } else {
  1800  012460  D001               	goto	l8974
  1801  012462                     l781:
  1802                           
  1803                           ; BSR set to: 1
  1804                           ;RemoteCan.c: 220: PORTDbits.RD5 = 0;
  1805  012462  9A83               	bcf	3971,5,c	;volatile
  1806  012464                     l8974:
  1807                           
  1808                           ;RemoteCan.c: 221: }
  1809                           ;RemoteCan.c: 222: }
  1810                           ;RemoteCan.c: 223: if ((x < 5)&&(F2_switch == 0)) {
  1811  012464  0E05               	movlw	5
  1812  012466  0100               	movlb	0	; () banked
  1813  012468  61E7               	cpfslt	_x& (0+255),b	;volatile
  1814  01246A  D02F               	goto	l8988
  1815                           
  1816                           ; BSR set to: 0
  1817  01246C  B44B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1818  01246E  D02D               	goto	l8988
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;RemoteCan.c: 224: parking_state = 1;
  1822  012470  0E01               	movlw	1
  1823  012472  0100               	movlb	0	; () banked
  1824  012474  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  1825                           
  1826                           ;RemoteCan.c: 225: JoystickConstants[1] = 1;
  1827  012476  0E00               	movlw	0
  1828  012478  0100               	movlb	0	; () banked
  1829  01247A  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1830  01247C  0E00               	movlw	0
  1831  01247E  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1832  012480  0E80               	movlw	128
  1833  012482  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1834  012484  0E3F               	movlw	63
  1835  012486  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1836  012488                     l8980:
  1837  012488  EC92  F0AE         	call	_CANisTxReady	;wreg free
  1838  01248C  0900               	iorlw	0
  1839  01248E  B4D8               	btfsc	status,2,c
  1840  012490  D7FB               	goto	l8980
  1841                           
  1842                           ;RemoteCan.c: 227: park_assist_state[0] = 0b00000001;
  1843  012492  0E01               	movlw	1
  1844  012494  0101               	movlb	1	; () banked
  1845  012496  6F1B               	movwf	_park_assist_state& (0+255),b
  1846                           
  1847                           ; BSR set to: 1
  1848                           ;RemoteCan.c: 228: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1849  012498  0E0A               	movlw	10
  1850  01249A  0100               	movlb	0	; () banked
  1851  01249C  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  1852  01249E  0E00               	movlw	0
  1853  0124A0  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1854  0124A2  0E00               	movlw	0
  1855  0124A4  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1856  0124A6  0E00               	movlw	0
  1857  0124A8  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1858  0124AA  0E1B               	movlw	low _park_assist_state
  1859  0124AC  0100               	movlb	0	; () banked
  1860  0124AE  6F76               	movwf	CANsendMessage@data& (0+255),b
  1861  0124B0  0E01               	movlw	high _park_assist_state
  1862  0124B2  0100               	movlb	0	; () banked
  1863  0124B4  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  1864  0124B6  0E08               	movlw	8
  1865  0124B8  0100               	movlb	0	; () banked
  1866  0124BA  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  1867  0124BC  0EBC               	movlw	188
  1868  0124BE  0100               	movlb	0	; () banked
  1869  0124C0  6F79               	movwf	CANsendMessage@flags& (0+255),b
  1870  0124C2  ECCD  F089         	call	_CANsendMessage	;wreg free
  1871                           
  1872                           ;RemoteCan.c: 229: x++;
  1873  0124C6  0100               	movlb	0	; () banked
  1874  0124C8  2BE7               	incf	_x& (0+255),f,b	;volatile
  1875  0124CA                     l8988:
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;RemoteCan.c: 230: }
  1879                           ;RemoteCan.c: 231: if (F2_switch == 1) {
  1880  0124CA  A44B               	btfss	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1881  0124CC  D029               	goto	l9002
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;RemoteCan.c: 232: if (z < 5) {
  1885  0124CE  0E05               	movlw	5
  1886  0124D0  0100               	movlb	0	; () banked
  1887  0124D2  61E8               	cpfslt	_z& (0+255),b	;volatile
  1888  0124D4  D062               	goto	l9028
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;RemoteCan.c: 233: parking_state = 2;
  1892  0124D6  0E02               	movlw	2
  1893  0124D8  0100               	movlb	0	; () banked
  1894  0124DA  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  1895  0124DC                     l8994:
  1896  0124DC  EC92  F0AE         	call	_CANisTxReady	;wreg free
  1897  0124E0  0900               	iorlw	0
  1898  0124E2  B4D8               	btfsc	status,2,c
  1899  0124E4  D7FB               	goto	l8994
  1900                           
  1901                           ;RemoteCan.c: 235: CANsendMessage(0b00000001100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  1902  0124E6  0E0C               	movlw	12
  1903  0124E8  0100               	movlb	0	; () banked
  1904  0124EA  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  1905  0124EC  0E00               	movlw	0
  1906  0124EE  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1907  0124F0  0E00               	movlw	0
  1908  0124F2  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1909  0124F4  0E00               	movlw	0
  1910  0124F6  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1911  0124F8  0E2C               	movlw	low _data
  1912  0124FA  0100               	movlb	0	; () banked
  1913  0124FC  6F76               	movwf	CANsendMessage@data& (0+255),b
  1914  0124FE  0E00               	movlw	high _data
  1915  012500  0100               	movlb	0	; () banked
  1916  012502  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  1917  012504  0E08               	movlw	8
  1918  012506  0100               	movlb	0	; () banked
  1919  012508  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  1920  01250A  0EBC               	movlw	188
  1921  01250C  0100               	movlb	0	; () banked
  1922  01250E  6F79               	movwf	CANsendMessage@flags& (0+255),b
  1923  012510  ECCD  F089         	call	_CANsendMessage	;wreg free
  1924                           
  1925                           ;RemoteCan.c: 236: x = 0;
  1926  012514  0E00               	movlw	0
  1927  012516  0100               	movlb	0	; () banked
  1928  012518  6FE7               	movwf	_x& (0+255),b	;volatile
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;RemoteCan.c: 237: z++;
  1932  01251A  0100               	movlb	0	; () banked
  1933  01251C  2BE8               	incf	_z& (0+255),f,b	;volatile
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;RemoteCan.c: 238: }
  1937                           ;RemoteCan.c: 239: } else {
  1938  01251E  D03D               	goto	l9028
  1939  012520                     l9002:
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;RemoteCan.c: 240: z = 0;
  1943  012520  0E00               	movlw	0
  1944  012522  0100               	movlb	0	; () banked
  1945  012524  6FE8               	movwf	_z& (0+255),b	;volatile
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;RemoteCan.c: 241: }
  1949                           ;RemoteCan.c: 242: } else {
  1950  012526  D039               	goto	l9028
  1951  012528                     l9004:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;RemoteCan.c: 243: x = 0;
  1955  012528  0E00               	movlw	0
  1956  01252A  0100               	movlb	0	; () banked
  1957  01252C  6FE7               	movwf	_x& (0+255),b	;volatile
  1958                           
  1959                           ;RemoteCan.c: 244: z = 0;
  1960  01252E  0E00               	movlw	0
  1961  012530  0100               	movlb	0	; () banked
  1962  012532  6FE8               	movwf	_z& (0+255),b	;volatile
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;RemoteCan.c: 245: F2_switch = 0;
  1966  012534  944B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;RemoteCan.c: 246: PORTDbits.RD5 = 0;
  1970  012536  9A83               	bcf	3971,5,c	;volatile
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;RemoteCan.c: 247: PORTDbits.RD6 = 0;
  1974  012538  9C83               	bcf	3971,6,c	;volatile
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;RemoteCan.c: 248: if (y == 0) {
  1978  01253A  B84C               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  1979  01253C  D02C               	goto	l9024
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;RemoteCan.c: 249: parking_state = 0;
  1983  01253E  0E00               	movlw	0
  1984  012540  0100               	movlb	0	; () banked
  1985  012542  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  1986                           
  1987                           ;RemoteCan.c: 250: JoystickConstants[1] = 15;
  1988  012544  0E00               	movlw	0
  1989  012546  0100               	movlb	0	; () banked
  1990  012548  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1991  01254A  0E00               	movlw	0
  1992  01254C  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1993  01254E  0E70               	movlw	112
  1994  012550  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1995  012552  0E41               	movlw	65
  1996  012554  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1997  012556                     l9016:
  1998  012556  EC92  F0AE         	call	_CANisTxReady	;wreg free
  1999  01255A  0900               	iorlw	0
  2000  01255C  B4D8               	btfsc	status,2,c
  2001  01255E  D7FB               	goto	l9016
  2002                           
  2003                           ;RemoteCan.c: 252: park_assist_state[0] = 0b00000000;
  2004  012560  0E00               	movlw	0
  2005  012562  0101               	movlb	1	; () banked
  2006  012564  6F1B               	movwf	_park_assist_state& (0+255),b
  2007                           
  2008                           ; BSR set to: 1
  2009                           ;RemoteCan.c: 253: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2010  012566  0E0A               	movlw	10
  2011  012568  0100               	movlb	0	; () banked
  2012  01256A  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  2013  01256C  0E00               	movlw	0
  2014  01256E  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2015  012570  0E00               	movlw	0
  2016  012572  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2017  012574  0E00               	movlw	0
  2018  012576  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2019  012578  0E1B               	movlw	low _park_assist_state
  2020  01257A  0100               	movlb	0	; () banked
  2021  01257C  6F76               	movwf	CANsendMessage@data& (0+255),b
  2022  01257E  0E01               	movlw	high _park_assist_state
  2023  012580  0100               	movlb	0	; () banked
  2024  012582  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  2025  012584  0E08               	movlw	8
  2026  012586  0100               	movlb	0	; () banked
  2027  012588  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  2028  01258A  0EBC               	movlw	188
  2029  01258C  0100               	movlb	0	; () banked
  2030  01258E  6F79               	movwf	CANsendMessage@flags& (0+255),b
  2031  012590  ECCD  F089         	call	_CANsendMessage	;wreg free
  2032                           
  2033                           ;RemoteCan.c: 254: y = 1;
  2034  012594  884C               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2035  012596                     l9024:
  2036                           
  2037                           ;RemoteCan.c: 255: }
  2038                           ;RemoteCan.c: 256: PORTDbits.RD6 = 0;
  2039  012596  9C83               	bcf	3971,6,c	;volatile
  2040                           
  2041                           ;RemoteCan.c: 257: PORTDbits.RD5 = 0;
  2042  012598  9A83               	bcf	3971,5,c	;volatile
  2043  01259A                     l9028:
  2044                           
  2045                           ;RemoteCan.c: 258: }
  2046                           ;RemoteCan.c: 260: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2047  01259A  0E00               	movlw	0
  2048  01259C  0100               	movlb	0	; () banked
  2049  01259E  6FAA               	movwf	___fladd@a& (0+255),b
  2050  0125A0  0E00               	movlw	0
  2051  0125A2  6FAB               	movwf	(___fladd@a+1)& (0+255),b
  2052  0125A4  0E34               	movlw	52
  2053  0125A6  6FAC               	movwf	(___fladd@a+2)& (0+255),b
  2054  0125A8  0E43               	movlw	67
  2055  0125AA  6FAD               	movwf	(___fladd@a+3)& (0+255),b
  2056  0125AC  C0CC  F084         	movff	_JoystickConstants,___flmul@a	;volatile
  2057  0125B0  C0CD  F085         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  2058  0125B4  C0CE  F086         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  2059  0125B8  C0CF  F087         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  2060  0125BC  0100               	movlb	0	; () banked
  2061  0125BE  51DC               	movf	_JoystickValues& (0+255),w,b	;volatile
  2062  0125C0  0100               	movlb	0	; () banked
  2063  0125C2  6F72               	movwf	___xxtofl@val& (0+255),b
  2064  0125C4  6B73               	clrf	(___xxtofl@val+1)& (0+255),b
  2065  0125C6  6B74               	clrf	(___xxtofl@val+2)& (0+255),b
  2066  0125C8  6B75               	clrf	(___xxtofl@val+3)& (0+255),b
  2067  0125CA  0E00               	movlw	0
  2068  0125CC  ECEF  F0A3         	call	___xxtofl
  2069  0125D0  C072  F080         	movff	?___xxtofl,___flmul@b
  2070  0125D4  C073  F081         	movff	?___xxtofl+1,___flmul@b+1
  2071  0125D8  C074  F082         	movff	?___xxtofl+2,___flmul@b+2
  2072  0125DC  C075  F083         	movff	?___xxtofl+3,___flmul@b+3
  2073  0125E0  EC85  F09B         	call	___flmul	;wreg free
  2074  0125E4  C080  F099         	movff	?___flmul,___flneg@f1
  2075  0125E8  C081  F09A         	movff	?___flmul+1,___flneg@f1+1
  2076  0125EC  C082  F09B         	movff	?___flmul+2,___flneg@f1+2
  2077  0125F0  C083  F09C         	movff	?___flmul+3,___flneg@f1+3
  2078  0125F4  ECE7  F0AD         	call	___flneg	;wreg free
  2079  0125F8  C099  F0A6         	movff	?___flneg,___fladd@b
  2080  0125FC  C09A  F0A7         	movff	?___flneg+1,___fladd@b+1
  2081  012600  C09B  F0A8         	movff	?___flneg+2,___fladd@b+2
  2082  012604  C09C  F0A9         	movff	?___flneg+3,___fladd@b+3
  2083  012608  EC31  F099         	call	___fladd	;wreg free
  2084  01260C  C0A6  F0BA         	movff	?___fladd,___fltol@f1
  2085  012610  C0A7  F0BB         	movff	?___fladd+1,___fltol@f1+1
  2086  012614  C0A8  F0BC         	movff	?___fladd+2,___fltol@f1+2
  2087  012618  C0A9  F0BD         	movff	?___fladd+3,___fltol@f1+3
  2088  01261C  EC71  F0A9         	call	___fltol	;wreg free
  2089  012620  0100               	movlb	0	; () banked
  2090  012622  51BA               	movf	?___fltol& (0+255),w,b
  2091  012624  0100               	movlb	0	; () banked
  2092  012626  6FEB               	movwf	_data_steering& (0+255),b
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;RemoteCan.c: 261: if (switch_position != 0) {
  2096  012628  0100               	movlb	0	; () banked
  2097  01262A  51E6               	movf	_switch_position& (0+255),w,b	;volatile
  2098  01262C  B4D8               	btfsc	status,2,c
  2099  01262E  D088               	goto	l9042
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;RemoteCan.c: 262: if (JoystickValues[1] > 132) {
  2103  012630  0E84               	movlw	132
  2104  012632  0100               	movlb	0	; () banked
  2105  012634  65DD               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2106  012636  D042               	goto	l9038
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;RemoteCan.c: 263: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2110  012638  C0D0  F084         	movff	_JoystickConstants+4,___flmul@a	;volatile
  2111  01263C  C0D1  F085         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  2112  012640  C0D2  F086         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  2113  012644  C0D3  F087         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  2114  012648  0E7E               	movlw	126
  2115  01264A  0101               	movlb	1	; () banked
  2116  01264C  6F3E               	movwf	??_main& (0+255),b
  2117  01264E  0EFF               	movlw	255
  2118  012650  0101               	movlb	1	; () banked
  2119  012652  6F3F               	movwf	(??_main+1)& (0+255),b
  2120  012654  0100               	movlb	0	; () banked
  2121  012656  51DD               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2122  012658  0101               	movlb	1	; () banked
  2123  01265A  6F40               	movwf	(??_main+2)& (0+255),b
  2124  01265C  6B41               	clrf	(??_main+3)& (0+255),b
  2125  01265E  0101               	movlb	1	; () banked
  2126  012660  513E               	movf	??_main& (0+255),w,b
  2127  012662  0101               	movlb	1	; () banked
  2128  012664  2740               	addwf	(??_main+2)& (0+255),f,b
  2129  012666  0101               	movlb	1	; () banked
  2130  012668  513F               	movf	(??_main+1)& (0+255),w,b
  2131  01266A  0101               	movlb	1	; () banked
  2132  01266C  2341               	addwfc	(??_main+3)& (0+255),f,b
  2133  01266E  C140  F072         	movff	??_main+2,___xxtofl@val
  2134  012672  C141  F073         	movff	??_main+3,___xxtofl@val+1
  2135  012676  0100               	movlb	0	; () banked
  2136  012678  0E00               	movlw	0
  2137  01267A  BF73               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2138  01267C  0EFF               	movlw	-1
  2139  01267E  6F74               	movwf	(___xxtofl@val+2)& (0+255),b
  2140  012680  6F75               	movwf	(___xxtofl@val+3)& (0+255),b
  2141  012682  0E01               	movlw	1
  2142  012684  ECEF  F0A3         	call	___xxtofl
  2143  012688  C072  F080         	movff	?___xxtofl,___flmul@b
  2144  01268C  C073  F081         	movff	?___xxtofl+1,___flmul@b+1
  2145  012690  C074  F082         	movff	?___xxtofl+2,___flmul@b+2
  2146  012694  C075  F083         	movff	?___xxtofl+3,___flmul@b+3
  2147  012698  EC85  F09B         	call	___flmul	;wreg free
  2148  01269C  C080  F0BA         	movff	?___flmul,___fltol@f1
  2149  0126A0  C081  F0BB         	movff	?___flmul+1,___fltol@f1+1
  2150  0126A4  C082  F0BC         	movff	?___flmul+2,___fltol@f1+2
  2151  0126A8  C083  F0BD         	movff	?___flmul+3,___fltol@f1+3
  2152  0126AC  EC71  F0A9         	call	___fltol	;wreg free
  2153  0126B0  C0BA  F0E2         	movff	?___fltol,_set_speed	;volatile
  2154  0126B4  C0BB  F0E3         	movff	?___fltol+1,_set_speed+1	;volatile
  2155                           
  2156                           ;RemoteCan.c: 264: data_brake [0] = 0;
  2157  0126B8  0E00               	movlw	0
  2158  0126BA  D040               	goto	L2
  2159  0126BC                     l9038:
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;RemoteCan.c: 266: set_speed = 0;
  2163  0126BC  0E00               	movlw	0
  2164  0126BE  0100               	movlb	0	; () banked
  2165  0126C0  6FE3               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2166  0126C2  0E00               	movlw	0
  2167  0126C4  6FE2               	movwf	_set_speed& (0+255),b	;volatile
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;RemoteCan.c: 267: data_brake [0] = ((130 - JoystickValues[1]))*(1.9);
  2171  0126C6  0E33               	movlw	51
  2172  0126C8  0100               	movlb	0	; () banked
  2173  0126CA  6F84               	movwf	___flmul@a& (0+255),b
  2174  0126CC  0E33               	movlw	51
  2175  0126CE  6F85               	movwf	(___flmul@a+1)& (0+255),b
  2176  0126D0  0EF3               	movlw	243
  2177  0126D2  6F86               	movwf	(___flmul@a+2)& (0+255),b
  2178  0126D4  0E3F               	movlw	63
  2179  0126D6  6F87               	movwf	(___flmul@a+3)& (0+255),b
  2180  0126D8  0100               	movlb	0	; () banked
  2181  0126DA  51DD               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2182  0126DC  0101               	movlb	1	; () banked
  2183  0126DE  6F3E               	movwf	??_main& (0+255),b
  2184  0126E0  6B3F               	clrf	(??_main+1)& (0+255),b
  2185  0126E2  0101               	movlb	1	; () banked
  2186  0126E4  1F3E               	comf	??_main& (0+255),f,b
  2187  0126E6  1F3F               	comf	(??_main+1)& (0+255),f,b
  2188  0126E8  4B3E               	infsnz	??_main& (0+255),f,b
  2189  0126EA  2B3F               	incf	(??_main+1)& (0+255),f,b
  2190  0126EC  0E82               	movlw	130
  2191  0126EE  0101               	movlb	1	; () banked
  2192  0126F0  273E               	addwf	??_main& (0+255),f,b
  2193  0126F2  0E00               	movlw	0
  2194  0126F4  233F               	addwfc	(??_main+1)& (0+255),f,b
  2195  0126F6  C13E  F072         	movff	??_main,___xxtofl@val
  2196  0126FA  C13F  F073         	movff	??_main+1,___xxtofl@val+1
  2197  0126FE  0100               	movlb	0	; () banked
  2198  012700  0E00               	movlw	0
  2199  012702  BF73               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2200  012704  0EFF               	movlw	-1
  2201  012706  6F74               	movwf	(___xxtofl@val+2)& (0+255),b
  2202  012708  6F75               	movwf	(___xxtofl@val+3)& (0+255),b
  2203  01270A  0E01               	movlw	1
  2204  01270C  ECEF  F0A3         	call	___xxtofl
  2205  012710  C072  F080         	movff	?___xxtofl,___flmul@b
  2206  012714  C073  F081         	movff	?___xxtofl+1,___flmul@b+1
  2207  012718  C074  F082         	movff	?___xxtofl+2,___flmul@b+2
  2208  01271C  C075  F083         	movff	?___xxtofl+3,___flmul@b+3
  2209  012720  EC85  F09B         	call	___flmul	;wreg free
  2210  012724  C080  F0BA         	movff	?___flmul,___fltol@f1
  2211  012728  C081  F0BB         	movff	?___flmul+1,___fltol@f1+1
  2212  01272C  C082  F0BC         	movff	?___flmul+2,___fltol@f1+2
  2213  012730  C083  F0BD         	movff	?___flmul+3,___fltol@f1+3
  2214  012734  EC71  F0A9         	call	___fltol	;wreg free
  2215  012738  0100               	movlb	0	; () banked
  2216  01273A  51BA               	movf	?___fltol& (0+255),w,b
  2217  01273C                     L2:
  2218  01273C  0100               	movlb	0	; () banked
  2219  01273E  6FE9               	movwf	_data_brake& (0+255),b
  2220  012740                     l9042:
  2221                           
  2222                           ; BSR set to: 0
  2223                           ;RemoteCan.c: 268: }
  2224                           ;RemoteCan.c: 269: }
  2225                           ;RemoteCan.c: 271: if (newMessageCan == 1) {
  2226  012740  AE4B               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2227  012742  D003               	goto	l9048
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;RemoteCan.c: 272: CAN_interpreter();
  2231  012744  EC87  F0AB         	call	_CAN_interpreter	;wreg free
  2232                           
  2233                           ;RemoteCan.c: 273: newMessageCan = 0;
  2234  012748  9E4B               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2235  01274A                     l9048:
  2236                           
  2237                           ;RemoteCan.c: 274: }
  2238                           ;RemoteCan.c: 276: if ((time_counter - pr_time_2) >= 2) {
  2239  01274A  C0D8  F13E         	movff	_pr_time_2,??_main	;volatile
  2240  01274E  C0D9  F13F         	movff	_pr_time_2+1,??_main+1	;volatile
  2241  012752  C0DA  F140         	movff	_pr_time_2+2,??_main+2	;volatile
  2242  012756  C0DB  F141         	movff	_pr_time_2+3,??_main+3	;volatile
  2243  01275A  0101               	movlb	1	; () banked
  2244  01275C  1F3E               	comf	??_main& (0+255),f,b
  2245  01275E  1F3F               	comf	(??_main+1)& (0+255),f,b
  2246  012760  1F40               	comf	(??_main+2)& (0+255),f,b
  2247  012762  1F41               	comf	(??_main+3)& (0+255),f,b
  2248  012764  2B3E               	incf	??_main& (0+255),f,b
  2249  012766  0E00               	movlw	0
  2250  012768  233F               	addwfc	(??_main+1)& (0+255),f,b
  2251  01276A  2340               	addwfc	(??_main+2)& (0+255),f,b
  2252  01276C  2341               	addwfc	(??_main+3)& (0+255),f,b
  2253  01276E  5022               	movf	_time_counter,w,c	;volatile
  2254  012770  0101               	movlb	1	; () banked
  2255  012772  253E               	addwf	??_main& (0+255),w,b
  2256  012774  0101               	movlb	1	; () banked
  2257  012776  6F42               	movwf	(??_main+4)& (0+255),b
  2258  012778  5023               	movf	_time_counter+1,w,c	;volatile
  2259  01277A  0101               	movlb	1	; () banked
  2260  01277C  213F               	addwfc	(??_main+1)& (0+255),w,b
  2261  01277E  0101               	movlb	1	; () banked
  2262  012780  6F43               	movwf	(??_main+5)& (0+255),b
  2263  012782  5024               	movf	_time_counter+2,w,c	;volatile
  2264  012784  0101               	movlb	1	; () banked
  2265  012786  2140               	addwfc	(??_main+2)& (0+255),w,b
  2266  012788  0101               	movlb	1	; () banked
  2267  01278A  6F44               	movwf	(??_main+6)& (0+255),b
  2268  01278C  5025               	movf	_time_counter+3,w,c	;volatile
  2269  01278E  0101               	movlb	1	; () banked
  2270  012790  2141               	addwfc	(??_main+3)& (0+255),w,b
  2271  012792  0101               	movlb	1	; () banked
  2272  012794  6F45               	movwf	(??_main+7)& (0+255),b
  2273  012796  0101               	movlb	1	; () banked
  2274  012798  5145               	movf	(??_main+7)& (0+255),w,b
  2275  01279A  0101               	movlb	1	; () banked
  2276  01279C  1144               	iorwf	(??_main+6)& (0+255),w,b
  2277  01279E  0101               	movlb	1	; () banked
  2278  0127A0  1143               	iorwf	(??_main+5)& (0+255),w,b
  2279  0127A2  E105               	bnz	u12070
  2280  0127A4  0E02               	movlw	2
  2281  0127A6  0101               	movlb	1	; () banked
  2282  0127A8  5D42               	subwf	(??_main+4)& (0+255),w,b
  2283  0127AA  A0D8               	btfss	status,0,c
  2284  0127AC  D00A               	goto	l9054
  2285  0127AE                     u12070:
  2286                           
  2287                           ; BSR set to: 1
  2288                           ;RemoteCan.c: 277: pr_time_2 = time_counter;
  2289  0127AE  C022  F0D8         	movff	_time_counter,_pr_time_2	;volatile
  2290  0127B2  C023  F0D9         	movff	_time_counter+1,_pr_time_2+1	;volatile
  2291  0127B6  C024  F0DA         	movff	_time_counter+2,_pr_time_2+2	;volatile
  2292  0127BA  C025  F0DB         	movff	_time_counter+3,_pr_time_2+3	;volatile
  2293                           
  2294                           ; BSR set to: 1
  2295                           ;RemoteCan.c: 278: CAN_Send();
  2296  0127BE  EC2A  F0AB         	call	_CAN_Send	;wreg free
  2297  0127C2                     l9054:
  2298                           
  2299                           ;RemoteCan.c: 279: }
  2300                           ;RemoteCan.c: 281: if ((time_counter - pr_time_3) >= (100 / 10)) {
  2301  0127C2  C016  F13E         	movff	_pr_time_3,??_main	;volatile
  2302  0127C6  C017  F13F         	movff	_pr_time_3+1,??_main+1	;volatile
  2303  0127CA  C018  F140         	movff	_pr_time_3+2,??_main+2	;volatile
  2304  0127CE  C019  F141         	movff	_pr_time_3+3,??_main+3	;volatile
  2305  0127D2  0101               	movlb	1	; () banked
  2306  0127D4  1F3E               	comf	??_main& (0+255),f,b
  2307  0127D6  1F3F               	comf	(??_main+1)& (0+255),f,b
  2308  0127D8  1F40               	comf	(??_main+2)& (0+255),f,b
  2309  0127DA  1F41               	comf	(??_main+3)& (0+255),f,b
  2310  0127DC  2B3E               	incf	??_main& (0+255),f,b
  2311  0127DE  0E00               	movlw	0
  2312  0127E0  233F               	addwfc	(??_main+1)& (0+255),f,b
  2313  0127E2  2340               	addwfc	(??_main+2)& (0+255),f,b
  2314  0127E4  2341               	addwfc	(??_main+3)& (0+255),f,b
  2315  0127E6  5022               	movf	_time_counter,w,c	;volatile
  2316  0127E8  0101               	movlb	1	; () banked
  2317  0127EA  253E               	addwf	??_main& (0+255),w,b
  2318  0127EC  0101               	movlb	1	; () banked
  2319  0127EE  6F42               	movwf	(??_main+4)& (0+255),b
  2320  0127F0  5023               	movf	_time_counter+1,w,c	;volatile
  2321  0127F2  0101               	movlb	1	; () banked
  2322  0127F4  213F               	addwfc	(??_main+1)& (0+255),w,b
  2323  0127F6  0101               	movlb	1	; () banked
  2324  0127F8  6F43               	movwf	(??_main+5)& (0+255),b
  2325  0127FA  5024               	movf	_time_counter+2,w,c	;volatile
  2326  0127FC  0101               	movlb	1	; () banked
  2327  0127FE  2140               	addwfc	(??_main+2)& (0+255),w,b
  2328  012800  0101               	movlb	1	; () banked
  2329  012802  6F44               	movwf	(??_main+6)& (0+255),b
  2330  012804  5025               	movf	_time_counter+3,w,c	;volatile
  2331  012806  0101               	movlb	1	; () banked
  2332  012808  2141               	addwfc	(??_main+3)& (0+255),w,b
  2333  01280A  0101               	movlb	1	; () banked
  2334  01280C  6F45               	movwf	(??_main+7)& (0+255),b
  2335  01280E  0101               	movlb	1	; () banked
  2336  012810  5145               	movf	(??_main+7)& (0+255),w,b
  2337  012812  0101               	movlb	1	; () banked
  2338  012814  1144               	iorwf	(??_main+6)& (0+255),w,b
  2339  012816  0101               	movlb	1	; () banked
  2340  012818  1143               	iorwf	(??_main+5)& (0+255),w,b
  2341  01281A  E105               	bnz	u12080
  2342  01281C  0E0A               	movlw	10
  2343  01281E  0101               	movlb	1	; () banked
  2344  012820  5D42               	subwf	(??_main+4)& (0+255),w,b
  2345  012822  A0D8               	btfss	status,0,c
  2346  012824  D50F               	goto	l8908
  2347  012826                     u12080:
  2348                           
  2349                           ; BSR set to: 1
  2350                           ;RemoteCan.c: 282: pr_time_3 = time_counter;
  2351  012826  C022  F016         	movff	_time_counter,_pr_time_3	;volatile
  2352  01282A  C023  F017         	movff	_time_counter+1,_pr_time_3+1	;volatile
  2353  01282E  C024  F018         	movff	_time_counter+2,_pr_time_3+2	;volatile
  2354  012832  C025  F019         	movff	_time_counter+3,_pr_time_3+3	;volatile
  2355                           
  2356                           ; BSR set to: 1
  2357                           ;RemoteCan.c: 283: LCD_Handler();
  2358  012836  EC02  F0A3         	call	_LCD_Handler	;wreg free
  2359  01283A  D504               	goto	l8908
  2360  01283C                     __end_of_main:
  2361                           	opt stack 0
  2362                           tblptru	equ	0xFF8
  2363                           tblptrh	equ	0xFF7
  2364                           tblptrl	equ	0xFF6
  2365                           tablat	equ	0xFF5
  2366                           postinc0	equ	0xFEE
  2367                           wreg	equ	0xFE8
  2368                           status	equ	0xFD8
  2369                           
  2370 ;; *************** function _board_initialization *****************
  2371 ;; Defined at:
  2372 ;;		line 426 in file "RemoteCan.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;		None               void
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2390 ;;Total ram usage:        0 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    9
  2393 ;; This function calls:
  2394 ;;		_CANInitialize
  2395 ;;		_LCD_clear
  2396 ;;		_LCD_goto_line
  2397 ;;		_LCD_initialize
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text1
  2404  0157B8                     __ptext1:
  2405                           	opt stack 0
  2406  0157B8                     _board_initialization:
  2407                           	opt stack 21
  2408                           
  2409                           ;RemoteCan.c: 428: LATA = 0x00;
  2410                           
  2411                           ;incstack = 0
  2412  0157B8  0E00               	movlw	0
  2413  0157BA  6E89               	movwf	3977,c	;volatile
  2414                           
  2415                           ;RemoteCan.c: 429: TRISA = 0b00011111;
  2416  0157BC  0E1F               	movlw	31
  2417  0157BE  6E92               	movwf	3986,c	;volatile
  2418                           
  2419                           ;RemoteCan.c: 430: LATB = 0x00;
  2420  0157C0  0E00               	movlw	0
  2421  0157C2  6E8A               	movwf	3978,c	;volatile
  2422                           
  2423                           ;RemoteCan.c: 431: TRISB = 0b11111011;
  2424  0157C4  0EFB               	movlw	251
  2425  0157C6  6E93               	movwf	3987,c	;volatile
  2426                           
  2427                           ;RemoteCan.c: 432: LATC = 0x00;
  2428  0157C8  0E00               	movlw	0
  2429  0157CA  6E8B               	movwf	3979,c	;volatile
  2430                           
  2431                           ;RemoteCan.c: 433: TRISC = 0b11110000;
  2432  0157CC  0EF0               	movlw	240
  2433  0157CE  6E94               	movwf	3988,c	;volatile
  2434                           
  2435                           ;RemoteCan.c: 434: LATD = 0x00;
  2436  0157D0  0E00               	movlw	0
  2437  0157D2  6E8C               	movwf	3980,c	;volatile
  2438                           
  2439                           ;RemoteCan.c: 435: TRISD = 0x00;
  2440  0157D4  0E00               	movlw	0
  2441  0157D6  6E95               	movwf	3989,c	;volatile
  2442                           
  2443                           ;RemoteCan.c: 436: LATE = 0x00;
  2444  0157D8  0E00               	movlw	0
  2445  0157DA  6E8D               	movwf	3981,c	;volatile
  2446                           
  2447                           ;RemoteCan.c: 437: TRISE = 0x00;
  2448  0157DC  0E00               	movlw	0
  2449  0157DE  6E96               	movwf	3990,c	;volatile
  2450                           
  2451                           ;RemoteCan.c: 439: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2452  0157E0  0E06               	movlw	6
  2453  0157E2  0100               	movlb	0	; () banked
  2454  0157E4  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2455  0157E6  0E05               	movlw	5
  2456  0157E8  0100               	movlb	0	; () banked
  2457  0157EA  6F81               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2458  0157EC  0E01               	movlw	1
  2459  0157EE  0100               	movlb	0	; () banked
  2460  0157F0  6F82               	movwf	CANInitialize@SJW& (0+255),b
  2461  0157F2  0E03               	movlw	3
  2462  0157F4  0100               	movlb	0	; () banked
  2463  0157F6  6F83               	movwf	CANInitialize@BRP& (0+255),b
  2464  0157F8  0E9D               	movlw	157
  2465  0157FA  0100               	movlb	0	; () banked
  2466  0157FC  6F84               	movwf	CANInitialize@flags& (0+255),b
  2467  0157FE  0E04               	movlw	4
  2468  015800  ECD6  F0A4         	call	_CANInitialize
  2469                           
  2470                           ;RemoteCan.c: 443: PIR2bits.TMR3IF = 0;
  2471  015804  92A1               	bcf	4001,1,c	;volatile
  2472                           
  2473                           ;RemoteCan.c: 444: PIR3bits.RXB1IF = 0;
  2474  015806  92A4               	bcf	4004,1,c	;volatile
  2475                           
  2476                           ;RemoteCan.c: 445: PIR3bits.RXB0IF = 0;
  2477  015808  90A4               	bcf	4004,0,c	;volatile
  2478                           
  2479                           ;RemoteCan.c: 448: RCONbits.IPEN = 1;
  2480  01580A  8ED0               	bsf	4048,7,c	;volatile
  2481                           
  2482                           ;RemoteCan.c: 449: IPR3bits.RXB1IP = 1;
  2483  01580C  82A5               	bsf	4005,1,c	;volatile
  2484                           
  2485                           ;RemoteCan.c: 450: IPR3bits.RXB0IP = 1;
  2486  01580E  80A5               	bsf	4005,0,c	;volatile
  2487                           
  2488                           ;RemoteCan.c: 451: IPR2bits.TMR3IP = 0;
  2489  015810  92A2               	bcf	4002,1,c	;volatile
  2490                           
  2491                           ;RemoteCan.c: 454: ADCON1 = 0b00001101;
  2492  015812  0E0D               	movlw	13
  2493  015814  6EC1               	movwf	4033,c	;volatile
  2494                           
  2495                           ;RemoteCan.c: 455: ADCON0bits.CHS2 = 0;
  2496  015816  98C2               	bcf	4034,4,c	;volatile
  2497                           
  2498                           ;RemoteCan.c: 456: ADCON0bits.CHS1 = 0;
  2499  015818  96C2               	bcf	4034,3,c	;volatile
  2500                           
  2501                           ;RemoteCan.c: 457: ADCON0bits.CHS0 = 0;
  2502  01581A  94C2               	bcf	4034,2,c	;volatile
  2503                           
  2504                           ;RemoteCan.c: 458: ADCON2bits.ACQT2 = 1;
  2505  01581C  8AC0               	bsf	4032,5,c	;volatile
  2506                           
  2507                           ;RemoteCan.c: 459: ADCON2bits.ACQT1 = 1;
  2508  01581E  88C0               	bsf	4032,4,c	;volatile
  2509                           
  2510                           ;RemoteCan.c: 460: ADCON2bits.ACQT0 = 0;
  2511  015820  96C0               	bcf	4032,3,c	;volatile
  2512                           
  2513                           ;RemoteCan.c: 461: ADCON2bits.ADCS2 = 1;
  2514  015822  84C0               	bsf	4032,2,c	;volatile
  2515                           
  2516                           ;RemoteCan.c: 462: ADCON2bits.ADCS1 = 0;
  2517  015824  92C0               	bcf	4032,1,c	;volatile
  2518                           
  2519                           ;RemoteCan.c: 463: ADCON2bits.ADCS0 = 1;
  2520  015826  80C0               	bsf	4032,0,c	;volatile
  2521                           
  2522                           ;RemoteCan.c: 464: ADCON2bits.ADFM = 0;
  2523  015828  9EC0               	bcf	4032,7,c	;volatile
  2524                           
  2525                           ;RemoteCan.c: 465: ADCON0bits.ADON = 1;
  2526  01582A  80C2               	bsf	4034,0,c	;volatile
  2527                           
  2528                           ;RemoteCan.c: 468: LCD_initialize(16);
  2529  01582C  0E10               	movlw	16
  2530  01582E  EC14  F0A8         	call	_LCD_initialize
  2531                           
  2532                           ;RemoteCan.c: 470: LCD_clear();
  2533  015832  EC51  F0AE         	call	_LCD_clear	;wreg free
  2534                           
  2535                           ;RemoteCan.c: 471: LCD_goto_line(1);
  2536  015836  0E01               	movlw	1
  2537  015838  ECF7  F0A9         	call	_LCD_goto_line
  2538                           
  2539                           ;RemoteCan.c: 475: PORTDbits.RD2 = 0;
  2540  01583C  9483               	bcf	3971,2,c	;volatile
  2541                           
  2542                           ;RemoteCan.c: 476: PORTDbits.RD3 = 0;
  2543  01583E  9683               	bcf	3971,3,c	;volatile
  2544                           
  2545                           ;RemoteCan.c: 479: TMR3H = 0x63;
  2546  015840  0E63               	movlw	99
  2547  015842  6EB3               	movwf	4019,c	;volatile
  2548                           
  2549                           ;RemoteCan.c: 480: TMR3L = 0xC0;
  2550  015844  0EC0               	movlw	192
  2551  015846  6EB2               	movwf	4018,c	;volatile
  2552                           
  2553                           ;RemoteCan.c: 483: PIE3bits.RXB1IE = 1;
  2554  015848  82A3               	bsf	4003,1,c	;volatile
  2555                           
  2556                           ;RemoteCan.c: 484: PIE3bits.RXB0IE = 1;
  2557  01584A  80A3               	bsf	4003,0,c	;volatile
  2558                           
  2559                           ;RemoteCan.c: 485: PIE2bits.TMR3IE = 1;
  2560  01584C  82A0               	bsf	4000,1,c	;volatile
  2561                           
  2562                           ;RemoteCan.c: 488: T3CON = 0x01;
  2563  01584E  0E01               	movlw	1
  2564  015850  6EB1               	movwf	4017,c	;volatile
  2565                           
  2566                           ;RemoteCan.c: 489: LCD_clear();
  2567  015852  EC51  F0AE         	call	_LCD_clear	;wreg free
  2568                           
  2569                           ;RemoteCan.c: 490: INTCONbits.GIEH = 1;
  2570  015856  8EF2               	bsf	intcon,7,c	;volatile
  2571                           
  2572                           ;RemoteCan.c: 491: INTCONbits.GIEL = 1;
  2573  015858  8CF2               	bsf	intcon,6,c	;volatile
  2574  01585A  0012               	return		;funcret
  2575  01585C                     __end_of_board_initialization:
  2576                           	opt stack 0
  2577                           tblptru	equ	0xFF8
  2578                           tblptrh	equ	0xFF7
  2579                           tblptrl	equ	0xFF6
  2580                           tablat	equ	0xFF5
  2581                           intcon	equ	0xFF2
  2582                           postinc0	equ	0xFEE
  2583                           wreg	equ	0xFE8
  2584                           status	equ	0xFD8
  2585                           
  2586 ;; *************** function _CANInitialize *****************
  2587 ;; Defined at:
  2588 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  propSeg         1    wreg     unsigned char 
  2591 ;;  phaseSeg1       1   32[BANK0 ] unsigned char 
  2592 ;;  phaseSeg2       1   33[BANK0 ] unsigned char 
  2593 ;;  SJW             1   34[BANK0 ] unsigned char 
  2594 ;;  BRP             1   35[BANK0 ] unsigned char 
  2595 ;;  flags           1   36[BANK0 ] enum E16887
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  propSeg         1   41[BANK0 ] unsigned char 
  2598 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  2599 ;;  FilterConfig    1   42[BANK0 ] unsigned char 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;		None               void
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2609 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2610 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2612 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2613 ;;Total ram usage:       12 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    4
  2616 ;; This function calls:
  2617 ;;		_CANOperationMode
  2618 ;;		_CANSetFilter
  2619 ;;		_CANSetMask
  2620 ;; This function is called by:
  2621 ;;		_board_initialization
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text2
  2626  0149AC                     __ptext2:
  2627                           	opt stack 0
  2628  0149AC                     _CANInitialize:
  2629                           	opt stack 25
  2630                           
  2631                           ;incstack = 0
  2632                           ;CANInitialize@propSeg stored from wreg
  2633  0149AC  0100               	movlb	0	; () banked
  2634  0149AE  6F89               	movwf	CANInitialize@propSeg& (0+255),b
  2635                           
  2636                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2637                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2638                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2639  0149B0  0E80               	movlw	128
  2640  0149B2  ECFC  F0AE         	call	_CANOperationMode
  2641                           
  2642                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2643  0149B6  0E00               	movlw	0
  2644  0149B8  6E70               	movwf	3952,c	;volatile
  2645                           
  2646                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2647  0149BA  0E00               	movlw	0
  2648  0149BC  6E71               	movwf	3953,c	;volatile
  2649                           
  2650                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2651  0149BE  0E00               	movlw	0
  2652  0149C0  6E72               	movwf	3954,c	;volatile
  2653                           
  2654                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2655  0149C2  0100               	movlb	0	; () banked
  2656  0149C4  4182               	rrncf	CANInitialize@SJW& (0+255),w,b
  2657  0149C6  42E8               	rrncf	wreg,f,c
  2658  0149C8  0BC0               	andlw	192
  2659  0149CA  0100               	movlb	0	; () banked
  2660  0149CC  6F82               	movwf	CANInitialize@SJW& (0+255),b
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  2664  0149CE  0100               	movlb	0	; () banked
  2665  0149D0  5182               	movf	CANInitialize@SJW& (0+255),w,b
  2666  0149D2  1270               	iorwf	3952,f,c	;volatile
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  2670  0149D4  0100               	movlb	0	; () banked
  2671  0149D6  5183               	movf	CANInitialize@BRP& (0+255),w,b
  2672  0149D8  1270               	iorwf	3952,f,c	;volatile
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  2676  0149DA  0100               	movlb	0	; () banked
  2677  0149DC  5189               	movf	CANInitialize@propSeg& (0+255),w,b
  2678  0149DE  1271               	iorwf	3953,f,c	;volatile
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2682  0149E0  0100               	movlb	0	; () banked
  2683  0149E2  3980               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2684  0149E4  42E8               	rrncf	wreg,f,c
  2685  0149E6  0BF8               	andlw	248
  2686  0149E8  0100               	movlb	0	; () banked
  2687  0149EA  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2691  0149EC  0100               	movlb	0	; () banked
  2692  0149EE  5180               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2693  0149F0  1271               	iorwf	3953,f,c	;volatile
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2697  0149F2  0100               	movlb	0	; () banked
  2698  0149F4  A584               	btfss	CANInitialize@flags& (0+255),2,b
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  2702  0149F6  8C71               	bsf	3953,6,c	;volatile
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2706  0149F8  0100               	movlb	0	; () banked
  2707  0149FA  B184               	btfsc	CANInitialize@flags& (0+255),0,b
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2711  0149FC  8E71               	bsf	3953,7,c	;volatile
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2715                           
  2716                           ; BSR set to: 0
  2717  0149FE  0100               	movlb	0	; () banked
  2718  014A00  5181               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2719  014A02  1272               	iorwf	3954,f,c	;volatile
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2723  014A04  0100               	movlb	0	; () banked
  2724  014A06  B384               	btfsc	CANInitialize@flags& (0+255),1,b
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2728  014A08  8C72               	bsf	3954,6,c	;volatile
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2732                           
  2733                           ; BSR set to: 0
  2734  014A0A  0100               	movlb	0	; () banked
  2735  014A0C  5184               	movf	CANInitialize@flags& (0+255),w,b
  2736  014A0E  0B60               	andlw	96
  2737  014A10  6E60               	movwf	3936,c	;volatile
  2738                           
  2739                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2740  014A12  0100               	movlb	0	; () banked
  2741  014A14  5184               	movf	CANInitialize@flags& (0+255),w,b
  2742  014A16  0B10               	andlw	16
  2743  014A18  0AFF               	xorlw	255
  2744  014A1A  B4D8               	btfsc	status,2,c
  2745                           
  2746                           ; BSR set to: 0
  2747                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2748  014A1C  8460               	bsf	3936,2,c	;volatile
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  2752  014A1E  CF60 FF50          	movff	3936,3920	;volatile
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2756  014A22  0E00               	movlw	0
  2757  014A24  0100               	movlb	0	; () banked
  2758  014A26  6F72               	movwf	CANSetMask@mask& (0+255),b
  2759  014A28  0E00               	movlw	0
  2760  014A2A  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  2761  014A2C  0E00               	movlw	0
  2762  014A2E  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  2763  014A30  0E00               	movlw	0
  2764  014A32  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  2765  014A34  0EF7               	movlw	247
  2766  014A36  0100               	movlb	0	; () banked
  2767  014A38  6F76               	movwf	CANSetMask@type& (0+255),b
  2768  014A3A  0E01               	movlw	1
  2769  014A3C  ECB8  F09F         	call	_CANSetMask
  2770                           
  2771                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2772  014A40  0E00               	movlw	0
  2773  014A42  0100               	movlb	0	; () banked
  2774  014A44  6F72               	movwf	CANSetMask@mask& (0+255),b
  2775  014A46  0E00               	movlw	0
  2776  014A48  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  2777  014A4A  0E00               	movlw	0
  2778  014A4C  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  2779  014A4E  0E00               	movlw	0
  2780  014A50  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  2781  014A52  0EF7               	movlw	247
  2782  014A54  0100               	movlb	0	; () banked
  2783  014A56  6F76               	movwf	CANSetMask@type& (0+255),b
  2784  014A58  0E02               	movlw	2
  2785  014A5A  ECB8  F09F         	call	_CANSetMask
  2786                           
  2787                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2788  014A5E  D00F               	goto	l5802
  2789  014A60                     l5796:
  2790                           
  2791                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2792  014A60  0EF7               	movlw	247
  2793  014A62  0100               	movlb	0	; () banked
  2794  014A64  6F8A               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2795  014A66  D007               	goto	l5798
  2796  014A68                     l370:
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2800  014A68  0100               	movlb	0	; () banked
  2801  014A6A  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  2802                           
  2803                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2804  014A6C  0100               	movlb	0	; () banked
  2805  014A6E  698B               	setf	CANInitialize@FilterConfig2& (0+255),b
  2806                           
  2807                           ;inc\CANlib.h: 273: break;
  2808  014A70  D028               	goto	l5804
  2809  014A72                     l371:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2813  014A72  0100               	movlb	0	; () banked
  2814  014A74  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  2815  014A76                     l5798:
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2819  014A76  0EF7               	movlw	247
  2820  014A78  0100               	movlb	0	; () banked
  2821  014A7A  6F8B               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;inc\CANlib.h: 278: }
  2825                           
  2826                           ;inc\CANlib.h: 277: break;
  2827  014A7C  D022               	goto	l5804
  2828  014A7E                     l5802:
  2829  014A7E  0E9F               	movlw	159
  2830  014A80  0100               	movlb	0	; () banked
  2831  014A82  6F85               	movwf	??_CANInitialize& (0+255),b
  2832  014A84  0EFF               	movlw	255
  2833  014A86  0100               	movlb	0	; () banked
  2834  014A88  6F86               	movwf	(??_CANInitialize+1)& (0+255),b
  2835  014A8A  0100               	movlb	0	; () banked
  2836  014A8C  5184               	movf	CANInitialize@flags& (0+255),w,b
  2837  014A8E  0B60               	andlw	96
  2838  014A90  0100               	movlb	0	; () banked
  2839  014A92  6F87               	movwf	(??_CANInitialize+2)& (0+255),b
  2840  014A94  6B88               	clrf	(??_CANInitialize+3)& (0+255),b
  2841  014A96  0100               	movlb	0	; () banked
  2842  014A98  5185               	movf	??_CANInitialize& (0+255),w,b
  2843  014A9A  0100               	movlb	0	; () banked
  2844  014A9C  1387               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2845  014A9E  0100               	movlb	0	; () banked
  2846  014AA0  5186               	movf	(??_CANInitialize+1)& (0+255),w,b
  2847  014AA2  0100               	movlb	0	; () banked
  2848  014AA4  1388               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2849                           
  2850                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2851                           ; Switch size 1, requested type "space"
  2852                           ; Number of cases is 1, Range of values is 0 to 0
  2853                           ; switch strategies available:
  2854                           ; Name         Instructions Cycles
  2855                           ; simple_byte            4     3 (average)
  2856                           ;	Chosen strategy is simple_byte
  2857  014AA6  0100               	movlb	0	; () banked
  2858  014AA8  5188               	movf	(??_CANInitialize+3)& (0+255),w,b
  2859  014AAA  0A00               	xorlw	0	; case 0
  2860  014AAC  A4D8               	btfss	status,2,c
  2861  014AAE  D7E1               	goto	l371
  2862                           
  2863                           ; BSR set to: 0
  2864                           ; Switch size 1, requested type "space"
  2865                           ; Number of cases is 2, Range of values is 191 to 223
  2866                           ; switch strategies available:
  2867                           ; Name         Instructions Cycles
  2868                           ; simple_byte            7     4 (average)
  2869                           ;	Chosen strategy is simple_byte
  2870  014AB0  0100               	movlb	0	; () banked
  2871  014AB2  5187               	movf	(??_CANInitialize+2)& (0+255),w,b
  2872  014AB4  0ABF               	xorlw	191	; case 191
  2873  014AB6  B4D8               	btfsc	status,2,c
  2874  014AB8  D7D7               	goto	l370
  2875  014ABA  0A60               	xorlw	96	; case 223
  2876  014ABC  B4D8               	btfsc	status,2,c
  2877  014ABE  D7D0               	goto	l5796
  2878  014AC0  D7D8               	goto	l371
  2879  014AC2                     l5804:
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2883  014AC2  0E00               	movlw	0
  2884  014AC4  0100               	movlb	0	; () banked
  2885  014AC6  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2886  014AC8  0E00               	movlw	0
  2887  014ACA  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2888  014ACC  0E00               	movlw	0
  2889  014ACE  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2890  014AD0  0E00               	movlw	0
  2891  014AD2  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2892  014AD4  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2893  014AD8  0E00               	movlw	0
  2894  014ADA  EC00  F080         	call	_CANSetFilter
  2895                           
  2896                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2897  014ADE  0E00               	movlw	0
  2898  014AE0  0100               	movlb	0	; () banked
  2899  014AE2  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2900  014AE4  0E00               	movlw	0
  2901  014AE6  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2902  014AE8  0E00               	movlw	0
  2903  014AEA  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2904  014AEC  0E00               	movlw	0
  2905  014AEE  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2906  014AF0  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2907  014AF4  0E01               	movlw	1
  2908  014AF6  EC00  F080         	call	_CANSetFilter
  2909                           
  2910                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2911  014AFA  0E00               	movlw	0
  2912  014AFC  0100               	movlb	0	; () banked
  2913  014AFE  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2914  014B00  0E00               	movlw	0
  2915  014B02  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2916  014B04  0E00               	movlw	0
  2917  014B06  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2918  014B08  0E00               	movlw	0
  2919  014B0A  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2920  014B0C  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2921  014B10  0E02               	movlw	2
  2922  014B12  EC00  F080         	call	_CANSetFilter
  2923                           
  2924                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2925  014B16  0E00               	movlw	0
  2926  014B18  0100               	movlb	0	; () banked
  2927  014B1A  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2928  014B1C  0E00               	movlw	0
  2929  014B1E  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2930  014B20  0E00               	movlw	0
  2931  014B22  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2932  014B24  0E00               	movlw	0
  2933  014B26  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2934  014B28  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2935  014B2C  0E03               	movlw	3
  2936  014B2E  EC00  F080         	call	_CANSetFilter
  2937                           
  2938                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2939  014B32  0E00               	movlw	0
  2940  014B34  0100               	movlb	0	; () banked
  2941  014B36  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2942  014B38  0E00               	movlw	0
  2943  014B3A  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2944  014B3C  0E00               	movlw	0
  2945  014B3E  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2946  014B40  0E00               	movlw	0
  2947  014B42  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2948  014B44  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2949  014B48  0E04               	movlw	4
  2950  014B4A  EC00  F080         	call	_CANSetFilter
  2951                           
  2952                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2953  014B4E  0E00               	movlw	0
  2954  014B50  0100               	movlb	0	; () banked
  2955  014B52  6F72               	movwf	CANSetFilter@filter& (0+255),b
  2956  014B54  0E00               	movlw	0
  2957  014B56  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2958  014B58  0E00               	movlw	0
  2959  014B5A  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2960  014B5C  0E00               	movlw	0
  2961  014B5E  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2962  014B60  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2963  014B64  0E05               	movlw	5
  2964  014B66  EC00  F080         	call	_CANSetFilter
  2965                           
  2966                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2967  014B6A  0E00               	movlw	0
  2968  014B6C  ECFC  F0AE         	call	_CANOperationMode
  2969  014B70  0012               	return		;funcret
  2970  014B72                     __end_of_CANInitialize:
  2971                           	opt stack 0
  2972                           tblptru	equ	0xFF8
  2973                           tblptrh	equ	0xFF7
  2974                           tblptrl	equ	0xFF6
  2975                           tablat	equ	0xFF5
  2976                           intcon	equ	0xFF2
  2977                           postinc0	equ	0xFEE
  2978                           wreg	equ	0xFE8
  2979                           status	equ	0xFD8
  2980                           
  2981 ;; *************** function _CANSetMask *****************
  2982 ;; Defined at:
  2983 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  numBuffer       1    wreg     enum E16921
  2986 ;;  mask            4   18[BANK0 ] unsigned long 
  2987 ;;  type            1   22[BANK0 ] enum E16887
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  numBuffer       1   27[BANK0 ] enum E16921
  2990 ;;  tamp            4   28[BANK0 ] unsigned long 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;		None               void
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3000 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3001 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3002 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3003 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3004 ;;Total ram usage:       14 bytes
  3005 ;; Hardware stack levels used:    1
  3006 ;; Hardware stack levels required when called:    3
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_CANInitialize
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text3
  3015  013F70                     __ptext3:
  3016                           	opt stack 0
  3017  013F70                     _CANSetMask:
  3018                           	opt stack 25
  3019                           
  3020                           ;incstack = 0
  3021                           ;CANSetMask@numBuffer stored from wreg
  3022  013F70  0100               	movlb	0	; () banked
  3023  013F72  6F7B               	movwf	CANSetMask@numBuffer& (0+255),b
  3024                           
  3025                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3026  013F74  0100               	movlb	0	; () banked
  3027  013F76  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  3028  013F78  A4D8               	btfss	status,2,c
  3029  013F7A  D056               	goto	l4974
  3030                           
  3031                           ; BSR set to: 0
  3032  013F7C  0100               	movlb	0	; () banked
  3033  013F7E  2976               	incf	CANSetMask@type& (0+255),w,b
  3034  013F80  A4D8               	btfss	status,2,c
  3035  013F82  D052               	goto	l4974
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;inc\CANlib.h: 644: {
  3039                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3040  013F84  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3041  013F88  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3042  013F8C  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3043  013F90  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3044  013F94  0E04               	movlw	4
  3045  013F96  D006               	goto	u5570
  3046  013F98                     u5575:
  3047  013F98  0100               	movlb	0	; () banked
  3048  013F9A  90D8               	bcf	status,0,c
  3049  013F9C  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3050  013F9E  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3051  013FA0  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3052  013FA2  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3053  013FA4                     u5570:
  3054  013FA4  2EE8               	decfsz	wreg,f,c
  3055  013FA6  D7F8               	goto	u5575
  3056  013FA8  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3057  013FAC  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3058  013FB0  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3059  013FB4  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3063  013FB8  0100               	movlb	0	; () banked
  3064  013FBA  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3065  013FBC  0100               	movlb	0	; () banked
  3066  013FBE  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3067  013FC0  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3068  013FC2  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3069  013FC4  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3073  013FC6  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3077  013FCA  0E07               	movlw	7
  3078  013FCC  0100               	movlb	0	; () banked
  3079  013FCE  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3080  013FD0  0100               	movlb	0	; () banked
  3081  013FD2  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3082  013FD4  0E00               	movlw	0
  3083  013FD6  0100               	movlb	0	; () banked
  3084  013FD8  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3085  013FDA  0100               	movlb	0	; () banked
  3086  013FDC  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3087  013FDE  0E00               	movlw	0
  3088  013FE0  0100               	movlb	0	; () banked
  3089  013FE2  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3090  013FE4  0100               	movlb	0	; () banked
  3091  013FE6  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3092  013FE8  0E00               	movlw	0
  3093  013FEA  0100               	movlb	0	; () banked
  3094  013FEC  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3095  013FEE  0100               	movlb	0	; () banked
  3096  013FF0  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3100  013FF2  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3101  013FF6  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3102  013FFA  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3103  013FFE  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3104  014002  0E05               	movlw	5
  3105  014004                     u5585:
  3106  014004  90D8               	bcf	status,0,c
  3107  014006  0100               	movlb	0	; () banked
  3108  014008  3777               	rlcf	??_CANSetMask& (0+255),f,b
  3109  01400A  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3110  01400C  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3111  01400E  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3112  014010  2EE8               	decfsz	wreg,f,c
  3113  014012  D7F8               	goto	u5585
  3114  014014  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3115  014018  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3116  01401C  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3117  014020  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3121  014024  C07C  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3122  014028                     l4974:
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;inc\CANlib.h: 652: }
  3126                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3127  014028  0E02               	movlw	2
  3128  01402A  0100               	movlb	0	; () banked
  3129  01402C  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3130  01402E  A4D8               	btfss	status,2,c
  3131  014030  D056               	goto	l4990
  3132                           
  3133                           ; BSR set to: 0
  3134  014032  0100               	movlb	0	; () banked
  3135  014034  2976               	incf	CANSetMask@type& (0+255),w,b
  3136  014036  A4D8               	btfss	status,2,c
  3137  014038  D052               	goto	l4990
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;inc\CANlib.h: 655: {
  3141                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3142  01403A  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3143  01403E  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3144  014042  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3145  014046  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3146  01404A  0E04               	movlw	4
  3147  01404C  D006               	goto	u5610
  3148  01404E                     u5615:
  3149  01404E  0100               	movlb	0	; () banked
  3150  014050  90D8               	bcf	status,0,c
  3151  014052  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3152  014054  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3153  014056  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3154  014058  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3155  01405A                     u5610:
  3156  01405A  2EE8               	decfsz	wreg,f,c
  3157  01405C  D7F8               	goto	u5615
  3158  01405E  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3159  014062  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3160  014066  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3161  01406A  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3165  01406E  0100               	movlb	0	; () banked
  3166  014070  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3167  014072  0100               	movlb	0	; () banked
  3168  014074  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3169  014076  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3170  014078  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3171  01407A  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3175  01407C  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3179  014080  0E07               	movlw	7
  3180  014082  0100               	movlb	0	; () banked
  3181  014084  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3182  014086  0100               	movlb	0	; () banked
  3183  014088  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3184  01408A  0E00               	movlw	0
  3185  01408C  0100               	movlb	0	; () banked
  3186  01408E  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3187  014090  0100               	movlb	0	; () banked
  3188  014092  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3189  014094  0E00               	movlw	0
  3190  014096  0100               	movlb	0	; () banked
  3191  014098  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3192  01409A  0100               	movlb	0	; () banked
  3193  01409C  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3194  01409E  0E00               	movlw	0
  3195  0140A0  0100               	movlb	0	; () banked
  3196  0140A2  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3197  0140A4  0100               	movlb	0	; () banked
  3198  0140A6  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3202  0140A8  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3203  0140AC  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3204  0140B0  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3205  0140B4  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3206  0140B8  0E05               	movlw	5
  3207  0140BA                     u5625:
  3208  0140BA  90D8               	bcf	status,0,c
  3209  0140BC  0100               	movlb	0	; () banked
  3210  0140BE  3777               	rlcf	??_CANSetMask& (0+255),f,b
  3211  0140C0  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3212  0140C2  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3213  0140C4  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3214  0140C6  2EE8               	decfsz	wreg,f,c
  3215  0140C8  D7F8               	goto	u5625
  3216  0140CA  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3217  0140CE  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3218  0140D2  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3219  0140D6  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3223  0140DA  C07C  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3224  0140DE                     l4990:
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;inc\CANlib.h: 663: }
  3228                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3229  0140DE  0100               	movlb	0	; () banked
  3230  0140E0  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  3231  0140E2  A4D8               	btfss	status,2,c
  3232  0140E4  D087               	goto	l5022
  3233                           
  3234                           ; BSR set to: 0
  3235  0140E6  0EF7               	movlw	247
  3236  0140E8  0100               	movlb	0	; () banked
  3237  0140EA  1976               	xorwf	CANSetMask@type& (0+255),w,b
  3238  0140EC  A4D8               	btfss	status,2,c
  3239  0140EE  D082               	goto	l5022
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;inc\CANlib.h: 666: {
  3243                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3244  0140F0  0100               	movlb	0	; () banked
  3245  0140F2  5172               	movf	CANSetMask@mask& (0+255),w,b
  3246  0140F4  0100               	movlb	0	; () banked
  3247  0140F6  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3248  0140F8  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3249  0140FA  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3250  0140FC  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3254  0140FE  C07C  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3258  014102  0E00               	movlw	0
  3259  014104  0100               	movlb	0	; () banked
  3260  014106  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3261  014108  0100               	movlb	0	; () banked
  3262  01410A  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3263  01410C  0EFF               	movlw	255
  3264  01410E  0100               	movlb	0	; () banked
  3265  014110  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3266  014112  0100               	movlb	0	; () banked
  3267  014114  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3268  014116  0E00               	movlw	0
  3269  014118  0100               	movlb	0	; () banked
  3270  01411A  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3271  01411C  0100               	movlb	0	; () banked
  3272  01411E  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3273  014120  0E00               	movlw	0
  3274  014122  0100               	movlb	0	; () banked
  3275  014124  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3276  014126  0100               	movlb	0	; () banked
  3277  014128  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3281  01412A  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3282  01412E  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3283  014132  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3284  014136  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3285  01413A  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  3286  01413E  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  3287  014142  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  3288  014146  0100               	movlb	0	; () banked
  3289  014148  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  3290  01414A  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3291  01414E  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3292  014152  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3293  014156  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3297  01415A  C07C  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3301  01415E  0100               	movlb	0	; () banked
  3302  014160  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3303  014162  D003               	goto	l444
  3304                           
  3305                           ; BSR set to: 0
  3306                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3307  014164  010F               	movlb	15	; () banked
  3308  014166  8119               	bsf	25,0,b	;volatile
  3309  014168  D002               	goto	l445
  3310  01416A                     l444:
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;inc\CANlib.h: 676: else
  3314                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3315  01416A  010F               	movlb	15	; () banked
  3316  01416C  9119               	bcf	25,0,b	;volatile
  3317  01416E                     l445:
  3318                           
  3319                           ; BSR set to: 15
  3320                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3321  01416E  0100               	movlb	0	; () banked
  3322  014170  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3323  014172  D003               	goto	l446
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3327  014174  010F               	movlb	15	; () banked
  3328  014176  8319               	bsf	25,1,b	;volatile
  3329  014178  D002               	goto	l447
  3330  01417A                     l446:
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;inc\CANlib.h: 681: else
  3334                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3335  01417A  010F               	movlb	15	; () banked
  3336  01417C  9319               	bcf	25,1,b	;volatile
  3337  01417E                     l447:
  3338                           
  3339                           ; BSR set to: 15
  3340                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3341  01417E  0100               	movlb	0	; () banked
  3342  014180  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3343  014182  D003               	goto	l448
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3347  014184  010F               	movlb	15	; () banked
  3348  014186  8B19               	bsf	25,5,b	;volatile
  3349  014188  D002               	goto	l449
  3350  01418A                     l448:
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;inc\CANlib.h: 686: else
  3354                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3355  01418A  010F               	movlb	15	; () banked
  3356  01418C  9B19               	bcf	25,5,b	;volatile
  3357  01418E                     l449:
  3358                           
  3359                           ; BSR set to: 15
  3360                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3361  01418E  0100               	movlb	0	; () banked
  3362  014190  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3363  014192  D003               	goto	l450
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3367  014194  010F               	movlb	15	; () banked
  3368  014196  8D19               	bsf	25,6,b	;volatile
  3369  014198  D002               	goto	l451
  3370  01419A                     l450:
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;inc\CANlib.h: 691: else
  3374                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3375  01419A  010F               	movlb	15	; () banked
  3376  01419C  9D19               	bcf	25,6,b	;volatile
  3377  01419E                     l451:
  3378                           
  3379                           ; BSR set to: 15
  3380                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3381  01419E  0100               	movlb	0	; () banked
  3382  0141A0  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3383  0141A2  D003               	goto	l452
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3387  0141A4  010F               	movlb	15	; () banked
  3388  0141A6  8F19               	bsf	25,7,b	;volatile
  3389  0141A8  D002               	goto	l5016
  3390  0141AA                     l452:
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;inc\CANlib.h: 696: else
  3394                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3395  0141AA  010F               	movlb	15	; () banked
  3396  0141AC  9F19               	bcf	25,7,b	;volatile
  3397  0141AE                     l5016:
  3398                           
  3399                           ; BSR set to: 15
  3400                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3401  0141AE  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3402  0141B2  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3403  0141B6  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3404  0141BA  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3405  0141BE  0E16               	movlw	22
  3406  0141C0  D006               	goto	u5700
  3407  0141C2                     u5705:
  3408  0141C2  0100               	movlb	0	; () banked
  3409  0141C4  90D8               	bcf	status,0,c
  3410  0141C6  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3411  0141C8  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3412  0141CA  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3413  0141CC  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3414  0141CE                     u5700:
  3415  0141CE  2EE8               	decfsz	wreg,f,c
  3416  0141D0  D7F8               	goto	u5705
  3417  0141D2  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3418  0141D6  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3419  0141DA  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3420  0141DE  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3424  0141E2  0100               	movlb	0	; () banked
  3425  0141E4  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3426  0141E6  0100               	movlb	0	; () banked
  3427  0141E8  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3428  0141EA  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3429  0141EC  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3430  0141EE  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3434  0141F0  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3435  0141F4                     l5022:
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;inc\CANlib.h: 702: }
  3439                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3440  0141F4  0E02               	movlw	2
  3441  0141F6  0100               	movlb	0	; () banked
  3442  0141F8  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3443  0141FA  A4D8               	btfss	status,2,c
  3444  0141FC  0012               	return	
  3445                           
  3446                           ; BSR set to: 0
  3447  0141FE  0EF7               	movlw	247
  3448  014200  0100               	movlb	0	; () banked
  3449  014202  1976               	xorwf	CANSetMask@type& (0+255),w,b
  3450  014204  A4D8               	btfss	status,2,c
  3451  014206  0012               	return	
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;inc\CANlib.h: 705: {
  3455                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3456  014208  0100               	movlb	0	; () banked
  3457  01420A  5172               	movf	CANSetMask@mask& (0+255),w,b
  3458  01420C  0100               	movlb	0	; () banked
  3459  01420E  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3460  014210  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3461  014212  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3462  014214  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3466  014216  C07C  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3470  01421A  0E00               	movlw	0
  3471  01421C  0100               	movlb	0	; () banked
  3472  01421E  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3473  014220  0100               	movlb	0	; () banked
  3474  014222  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3475  014224  0EFF               	movlw	255
  3476  014226  0100               	movlb	0	; () banked
  3477  014228  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3478  01422A  0100               	movlb	0	; () banked
  3479  01422C  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3480  01422E  0E00               	movlw	0
  3481  014230  0100               	movlb	0	; () banked
  3482  014232  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3483  014234  0100               	movlb	0	; () banked
  3484  014236  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3485  014238  0E00               	movlw	0
  3486  01423A  0100               	movlb	0	; () banked
  3487  01423C  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3488  01423E  0100               	movlb	0	; () banked
  3489  014240  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3490                           
  3491                           ; BSR set to: 0
  3492                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3493  014242  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3494  014246  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3495  01424A  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3496  01424E  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3497  014252  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  3498  014256  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  3499  01425A  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  3500  01425E  0100               	movlb	0	; () banked
  3501  014260  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  3502  014262  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3503  014266  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3504  01426A  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3505  01426E  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3509  014272  C07C  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3513  014276  0100               	movlb	0	; () banked
  3514  014278  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3515  01427A  D003               	goto	l455
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3519  01427C  010F               	movlb	15	; () banked
  3520  01427E  811D               	bsf	29,0,b	;volatile
  3521  014280  D002               	goto	l456
  3522  014282                     l455:
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;inc\CANlib.h: 715: else
  3526                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3527  014282  010F               	movlb	15	; () banked
  3528  014284  911D               	bcf	29,0,b	;volatile
  3529  014286                     l456:
  3530                           
  3531                           ; BSR set to: 15
  3532                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3533  014286  0100               	movlb	0	; () banked
  3534  014288  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3535  01428A  D003               	goto	l457
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3539  01428C  010F               	movlb	15	; () banked
  3540  01428E  831D               	bsf	29,1,b	;volatile
  3541  014290  D002               	goto	l458
  3542  014292                     l457:
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;inc\CANlib.h: 720: else
  3546                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3547  014292  010F               	movlb	15	; () banked
  3548  014294  931D               	bcf	29,1,b	;volatile
  3549  014296                     l458:
  3550                           
  3551                           ; BSR set to: 15
  3552                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3553  014296  0100               	movlb	0	; () banked
  3554  014298  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3555  01429A  D003               	goto	l459
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3559  01429C  010F               	movlb	15	; () banked
  3560  01429E  8B1D               	bsf	29,5,b	;volatile
  3561  0142A0  D002               	goto	l460
  3562  0142A2                     l459:
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;inc\CANlib.h: 725: else
  3566                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3567  0142A2  010F               	movlb	15	; () banked
  3568  0142A4  9B1D               	bcf	29,5,b	;volatile
  3569  0142A6                     l460:
  3570                           
  3571                           ; BSR set to: 15
  3572                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3573  0142A6  0100               	movlb	0	; () banked
  3574  0142A8  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3575  0142AA  D003               	goto	l461
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3579  0142AC  010F               	movlb	15	; () banked
  3580  0142AE  8D1D               	bsf	29,6,b	;volatile
  3581  0142B0  D002               	goto	l462
  3582  0142B2                     l461:
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;inc\CANlib.h: 730: else
  3586                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3587  0142B2  010F               	movlb	15	; () banked
  3588  0142B4  9D1D               	bcf	29,6,b	;volatile
  3589  0142B6                     l462:
  3590                           
  3591                           ; BSR set to: 15
  3592                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3593  0142B6  0100               	movlb	0	; () banked
  3594  0142B8  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3595  0142BA  D003               	goto	l463
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3599  0142BC  010F               	movlb	15	; () banked
  3600  0142BE  8F1D               	bsf	29,7,b	;volatile
  3601  0142C0  D002               	goto	l5048
  3602  0142C2                     l463:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;inc\CANlib.h: 735: else
  3606                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3607  0142C2  010F               	movlb	15	; () banked
  3608  0142C4  9F1D               	bcf	29,7,b	;volatile
  3609  0142C6                     l5048:
  3610                           
  3611                           ; BSR set to: 15
  3612                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3613  0142C6  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3614  0142CA  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3615  0142CE  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3616  0142D2  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3617  0142D6  0E16               	movlw	22
  3618  0142D8  D006               	goto	u5780
  3619  0142DA                     u5785:
  3620  0142DA  0100               	movlb	0	; () banked
  3621  0142DC  90D8               	bcf	status,0,c
  3622  0142DE  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3623  0142E0  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3624  0142E2  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3625  0142E4  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3626  0142E6                     u5780:
  3627  0142E6  2EE8               	decfsz	wreg,f,c
  3628  0142E8  D7F8               	goto	u5785
  3629  0142EA  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3630  0142EE  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3631  0142F2  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3632  0142F6  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3636  0142FA  0100               	movlb	0	; () banked
  3637  0142FC  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3638  0142FE  0100               	movlb	0	; () banked
  3639  014300  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3640  014302  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3641  014304  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3642  014306  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3646  014308  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3647  01430C  0012               	return	
  3648  01430E                     __end_of_CANSetMask:
  3649                           	opt stack 0
  3650                           tblptru	equ	0xFF8
  3651                           tblptrh	equ	0xFF7
  3652                           tblptrl	equ	0xFF6
  3653                           tablat	equ	0xFF5
  3654                           intcon	equ	0xFF2
  3655                           postinc0	equ	0xFEE
  3656                           wreg	equ	0xFE8
  3657                           status	equ	0xFD8
  3658                           
  3659 ;; *************** function _CANSetFilter *****************
  3660 ;; Defined at:
  3661 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  numBuffer       1    wreg     enum E16924
  3664 ;;  filter          4   18[BANK0 ] unsigned long 
  3665 ;;  type            1   22[BANK0 ] enum E16887
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  numBuffer       1   27[BANK0 ] enum E16924
  3668 ;;  tamp            4   28[BANK0 ] unsigned long 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;		None               void
  3671 ;; Registers used:
  3672 ;;		wreg, status,2, status,0
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3678 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3679 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3680 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3681 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3682 ;;Total ram usage:       14 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    3
  3685 ;; This function calls:
  3686 ;;		Nothing
  3687 ;; This function is called by:
  3688 ;;		_CANInitialize
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text4
  3693  010000                     __ptext4:
  3694                           	opt stack 0
  3695  010000                     _CANSetFilter:
  3696                           	opt stack 25
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;incstack = 0
  3700                           ;CANSetFilter@numBuffer stored from wreg
  3701  010000  0100               	movlb	0	; () banked
  3702  010002  6F7B               	movwf	CANSetFilter@numBuffer& (0+255),b
  3703                           
  3704                           ;inc\CANlib.h: 750: unsigned long tamp;
  3705                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3706  010004  0100               	movlb	0	; () banked
  3707  010006  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3708  010008  0100               	movlb	0	; () banked
  3709  01000A  A4D8               	btfss	status,2,c
  3710  01000C  D058               	goto	l5072
  3711                           
  3712                           ; BSR set to: 0
  3713  01000E  0100               	movlb	0	; () banked
  3714  010010  2976               	incf	CANSetFilter@type& (0+255),w,b
  3715  010012  A4D8               	btfss	status,2,c
  3716  010014  D054               	goto	l5072
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;inc\CANlib.h: 753: {
  3720                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3721  010016  010F               	movlb	15	; () banked
  3722  010018  9701               	bcf	1,3,b	;volatile
  3723                           
  3724                           ; BSR set to: 15
  3725                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  3726  01001A  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  3727  01001E  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3728  010022  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3729  010026  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3730  01002A  0E04               	movlw	4
  3731  01002C  D006               	goto	u5810
  3732  01002E                     u5815:
  3733  01002E  0100               	movlb	0	; () banked
  3734  010030  90D8               	bcf	status,0,c
  3735  010032  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3736  010034  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3737  010036  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3738  010038  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  3739  01003A                     u5810:
  3740  01003A  2EE8               	decfsz	wreg,f,c
  3741  01003C  D7F8               	goto	u5815
  3742  01003E  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3743  010042  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3744  010046  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3745  01004A  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  3749  01004E  0100               	movlb	0	; () banked
  3750  010050  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  3751  010052  0100               	movlb	0	; () banked
  3752  010054  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3753  010056  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3754  010058  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3755  01005A  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3759  01005C  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  3763  010060  0E07               	movlw	7
  3764  010062  0100               	movlb	0	; () banked
  3765  010064  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  3766  010066  0100               	movlb	0	; () banked
  3767  010068  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3768  01006A  0E00               	movlw	0
  3769  01006C  0100               	movlb	0	; () banked
  3770  01006E  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3771  010070  0100               	movlb	0	; () banked
  3772  010072  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3773  010074  0E00               	movlw	0
  3774  010076  0100               	movlb	0	; () banked
  3775  010078  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3776  01007A  0100               	movlb	0	; () banked
  3777  01007C  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3778  01007E  0E00               	movlw	0
  3779  010080  0100               	movlb	0	; () banked
  3780  010082  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3781  010084  0100               	movlb	0	; () banked
  3782  010086  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  3786  010088  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  3787  01008C  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3788  010090  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3789  010094  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3790  010098  0E05               	movlw	5
  3791  01009A                     u5825:
  3792  01009A  90D8               	bcf	status,0,c
  3793  01009C  0100               	movlb	0	; () banked
  3794  01009E  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  3795  0100A0  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3796  0100A2  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3797  0100A4  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3798  0100A6  2EE8               	decfsz	wreg,f,c
  3799  0100A8  D7F8               	goto	u5825
  3800  0100AA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3801  0100AE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3802  0100B2  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3803  0100B6  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3807  0100BA  C07C  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3808  0100BE                     l5072:
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;inc\CANlib.h: 763: }
  3812                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3813  0100BE  0100               	movlb	0	; () banked
  3814  0100C0  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3815  0100C2  A4D8               	btfss	status,2,c
  3816  0100C4  D058               	goto	l5090
  3817                           
  3818                           ; BSR set to: 0
  3819  0100C6  0100               	movlb	0	; () banked
  3820  0100C8  2976               	incf	CANSetFilter@type& (0+255),w,b
  3821  0100CA  A4D8               	btfss	status,2,c
  3822  0100CC  D054               	goto	l5090
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;inc\CANlib.h: 766: {
  3826                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3827  0100CE  010F               	movlb	15	; () banked
  3828  0100D0  9705               	bcf	5,3,b	;volatile
  3829                           
  3830                           ; BSR set to: 15
  3831                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  3832  0100D2  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  3833  0100D6  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3834  0100DA  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3835  0100DE  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3836  0100E2  0E04               	movlw	4
  3837  0100E4  D006               	goto	u5850
  3838  0100E6                     u5855:
  3839  0100E6  0100               	movlb	0	; () banked
  3840  0100E8  90D8               	bcf	status,0,c
  3841  0100EA  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3842  0100EC  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3843  0100EE  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3844  0100F0  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  3845  0100F2                     u5850:
  3846  0100F2  2EE8               	decfsz	wreg,f,c
  3847  0100F4  D7F8               	goto	u5855
  3848  0100F6  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3849  0100FA  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3850  0100FE  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3851  010102  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  3855  010106  0100               	movlb	0	; () banked
  3856  010108  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  3857  01010A  0100               	movlb	0	; () banked
  3858  01010C  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3859  01010E  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3860  010110  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3861  010112  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3865  010114  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  3869  010118  0E07               	movlw	7
  3870  01011A  0100               	movlb	0	; () banked
  3871  01011C  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  3872  01011E  0100               	movlb	0	; () banked
  3873  010120  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3874  010122  0E00               	movlw	0
  3875  010124  0100               	movlb	0	; () banked
  3876  010126  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3877  010128  0100               	movlb	0	; () banked
  3878  01012A  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3879  01012C  0E00               	movlw	0
  3880  01012E  0100               	movlb	0	; () banked
  3881  010130  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3882  010132  0100               	movlb	0	; () banked
  3883  010134  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3884  010136  0E00               	movlw	0
  3885  010138  0100               	movlb	0	; () banked
  3886  01013A  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3887  01013C  0100               	movlb	0	; () banked
  3888  01013E  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  3892  010140  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  3893  010144  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3894  010148  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3895  01014C  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3896  010150  0E05               	movlw	5
  3897  010152                     u5865:
  3898  010152  90D8               	bcf	status,0,c
  3899  010154  0100               	movlb	0	; () banked
  3900  010156  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  3901  010158  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3902  01015A  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3903  01015C  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3904  01015E  2EE8               	decfsz	wreg,f,c
  3905  010160  D7F8               	goto	u5865
  3906  010162  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3907  010166  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3908  01016A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3909  01016E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3913  010172  C07C  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3914  010176                     l5090:
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;inc\CANlib.h: 776: }
  3918                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3919  010176  0E02               	movlw	2
  3920  010178  0100               	movlb	0	; () banked
  3921  01017A  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3922  01017C  A4D8               	btfss	status,2,c
  3923  01017E  D058               	goto	l5108
  3924                           
  3925                           ; BSR set to: 0
  3926  010180  0100               	movlb	0	; () banked
  3927  010182  2976               	incf	CANSetFilter@type& (0+255),w,b
  3928  010184  A4D8               	btfss	status,2,c
  3929  010186  D054               	goto	l5108
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;inc\CANlib.h: 779: {
  3933                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3934  010188  010F               	movlb	15	; () banked
  3935  01018A  9709               	bcf	9,3,b	;volatile
  3936                           
  3937                           ; BSR set to: 15
  3938                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  3939  01018C  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  3940  010190  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3941  010194  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3942  010198  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3943  01019C  0E04               	movlw	4
  3944  01019E  D006               	goto	u5890
  3945  0101A0                     u5895:
  3946  0101A0  0100               	movlb	0	; () banked
  3947  0101A2  90D8               	bcf	status,0,c
  3948  0101A4  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3949  0101A6  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3950  0101A8  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3951  0101AA  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  3952  0101AC                     u5890:
  3953  0101AC  2EE8               	decfsz	wreg,f,c
  3954  0101AE  D7F8               	goto	u5895
  3955  0101B0  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3956  0101B4  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3957  0101B8  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3958  0101BC  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3959                           
  3960                           ; BSR set to: 0
  3961                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  3962  0101C0  0100               	movlb	0	; () banked
  3963  0101C2  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  3964  0101C4  0100               	movlb	0	; () banked
  3965  0101C6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3966  0101C8  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3967  0101CA  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3968  0101CC  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3972  0101CE  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  3976  0101D2  0E07               	movlw	7
  3977  0101D4  0100               	movlb	0	; () banked
  3978  0101D6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  3979  0101D8  0100               	movlb	0	; () banked
  3980  0101DA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3981  0101DC  0E00               	movlw	0
  3982  0101DE  0100               	movlb	0	; () banked
  3983  0101E0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3984  0101E2  0100               	movlb	0	; () banked
  3985  0101E4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3986  0101E6  0E00               	movlw	0
  3987  0101E8  0100               	movlb	0	; () banked
  3988  0101EA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3989  0101EC  0100               	movlb	0	; () banked
  3990  0101EE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3991  0101F0  0E00               	movlw	0
  3992  0101F2  0100               	movlb	0	; () banked
  3993  0101F4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3994  0101F6  0100               	movlb	0	; () banked
  3995  0101F8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  3999  0101FA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4000  0101FE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4001  010202  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4002  010206  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4003  01020A  0E05               	movlw	5
  4004  01020C                     u5905:
  4005  01020C  90D8               	bcf	status,0,c
  4006  01020E  0100               	movlb	0	; () banked
  4007  010210  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4008  010212  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4009  010214  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4010  010216  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4011  010218  2EE8               	decfsz	wreg,f,c
  4012  01021A  D7F8               	goto	u5905
  4013  01021C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4014  010220  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4015  010224  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4016  010228  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4020  01022C  C07C  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4021  010230                     l5108:
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;inc\CANlib.h: 789: }
  4025                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4026  010230  0E03               	movlw	3
  4027  010232  0100               	movlb	0	; () banked
  4028  010234  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4029  010236  A4D8               	btfss	status,2,c
  4030  010238  D058               	goto	l5126
  4031                           
  4032                           ; BSR set to: 0
  4033  01023A  0100               	movlb	0	; () banked
  4034  01023C  2976               	incf	CANSetFilter@type& (0+255),w,b
  4035  01023E  A4D8               	btfss	status,2,c
  4036  010240  D054               	goto	l5126
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;inc\CANlib.h: 792: {
  4040                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4041  010242  010F               	movlb	15	; () banked
  4042  010244  970D               	bcf	13,3,b	;volatile
  4043                           
  4044                           ; BSR set to: 15
  4045                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4046  010246  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4047  01024A  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4048  01024E  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4049  010252  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4050  010256  0E04               	movlw	4
  4051  010258  D006               	goto	u5930
  4052  01025A                     u5935:
  4053  01025A  0100               	movlb	0	; () banked
  4054  01025C  90D8               	bcf	status,0,c
  4055  01025E  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4056  010260  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4057  010262  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4058  010264  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4059  010266                     u5930:
  4060  010266  2EE8               	decfsz	wreg,f,c
  4061  010268  D7F8               	goto	u5935
  4062  01026A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4063  01026E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4064  010272  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4065  010276  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4069  01027A  0100               	movlb	0	; () banked
  4070  01027C  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4071  01027E  0100               	movlb	0	; () banked
  4072  010280  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4073  010282  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4074  010284  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4075  010286  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4079  010288  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4083  01028C  0E07               	movlw	7
  4084  01028E  0100               	movlb	0	; () banked
  4085  010290  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4086  010292  0100               	movlb	0	; () banked
  4087  010294  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4088  010296  0E00               	movlw	0
  4089  010298  0100               	movlb	0	; () banked
  4090  01029A  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4091  01029C  0100               	movlb	0	; () banked
  4092  01029E  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4093  0102A0  0E00               	movlw	0
  4094  0102A2  0100               	movlb	0	; () banked
  4095  0102A4  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4096  0102A6  0100               	movlb	0	; () banked
  4097  0102A8  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4098  0102AA  0E00               	movlw	0
  4099  0102AC  0100               	movlb	0	; () banked
  4100  0102AE  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4101  0102B0  0100               	movlb	0	; () banked
  4102  0102B2  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4106  0102B4  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4107  0102B8  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4108  0102BC  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4109  0102C0  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4110  0102C4  0E05               	movlw	5
  4111  0102C6                     u5945:
  4112  0102C6  90D8               	bcf	status,0,c
  4113  0102C8  0100               	movlb	0	; () banked
  4114  0102CA  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4115  0102CC  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4116  0102CE  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4117  0102D0  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4118  0102D2  2EE8               	decfsz	wreg,f,c
  4119  0102D4  D7F8               	goto	u5945
  4120  0102D6  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4121  0102DA  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4122  0102DE  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4123  0102E2  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4127  0102E6  C07C  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4128  0102EA                     l5126:
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;inc\CANlib.h: 802: }
  4132                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4133  0102EA  0E04               	movlw	4
  4134  0102EC  0100               	movlb	0	; () banked
  4135  0102EE  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4136  0102F0  A4D8               	btfss	status,2,c
  4137  0102F2  D058               	goto	l5144
  4138                           
  4139                           ; BSR set to: 0
  4140  0102F4  0100               	movlb	0	; () banked
  4141  0102F6  2976               	incf	CANSetFilter@type& (0+255),w,b
  4142  0102F8  A4D8               	btfss	status,2,c
  4143  0102FA  D054               	goto	l5144
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;inc\CANlib.h: 805: {
  4147                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4148  0102FC  010F               	movlb	15	; () banked
  4149  0102FE  9711               	bcf	17,3,b	;volatile
  4150                           
  4151                           ; BSR set to: 15
  4152                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4153  010300  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4154  010304  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4155  010308  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4156  01030C  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4157  010310  0E04               	movlw	4
  4158  010312  D006               	goto	u5970
  4159  010314                     u5975:
  4160  010314  0100               	movlb	0	; () banked
  4161  010316  90D8               	bcf	status,0,c
  4162  010318  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4163  01031A  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4164  01031C  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4165  01031E  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4166  010320                     u5970:
  4167  010320  2EE8               	decfsz	wreg,f,c
  4168  010322  D7F8               	goto	u5975
  4169  010324  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4170  010328  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4171  01032C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4172  010330  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4176  010334  0100               	movlb	0	; () banked
  4177  010336  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4178  010338  0100               	movlb	0	; () banked
  4179  01033A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4180  01033C  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4181  01033E  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4182  010340  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4186  010342  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4190  010346  0E07               	movlw	7
  4191  010348  0100               	movlb	0	; () banked
  4192  01034A  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4193  01034C  0100               	movlb	0	; () banked
  4194  01034E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4195  010350  0E00               	movlw	0
  4196  010352  0100               	movlb	0	; () banked
  4197  010354  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4198  010356  0100               	movlb	0	; () banked
  4199  010358  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4200  01035A  0E00               	movlw	0
  4201  01035C  0100               	movlb	0	; () banked
  4202  01035E  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4203  010360  0100               	movlb	0	; () banked
  4204  010362  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4205  010364  0E00               	movlw	0
  4206  010366  0100               	movlb	0	; () banked
  4207  010368  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4208  01036A  0100               	movlb	0	; () banked
  4209  01036C  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4213  01036E  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4214  010372  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4215  010376  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4216  01037A  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4217  01037E  0E05               	movlw	5
  4218  010380                     u5985:
  4219  010380  90D8               	bcf	status,0,c
  4220  010382  0100               	movlb	0	; () banked
  4221  010384  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4222  010386  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4223  010388  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4224  01038A  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4225  01038C  2EE8               	decfsz	wreg,f,c
  4226  01038E  D7F8               	goto	u5985
  4227  010390  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4228  010394  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4229  010398  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4230  01039C  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4234  0103A0  C07C  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4235  0103A4                     l5144:
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;inc\CANlib.h: 815: }
  4239                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4240  0103A4  0E05               	movlw	5
  4241  0103A6  0100               	movlb	0	; () banked
  4242  0103A8  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4243  0103AA  A4D8               	btfss	status,2,c
  4244  0103AC  D058               	goto	l5162
  4245                           
  4246                           ; BSR set to: 0
  4247  0103AE  0100               	movlb	0	; () banked
  4248  0103B0  2976               	incf	CANSetFilter@type& (0+255),w,b
  4249  0103B2  A4D8               	btfss	status,2,c
  4250  0103B4  D054               	goto	l5162
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;inc\CANlib.h: 818: {
  4254                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4255  0103B6  010F               	movlb	15	; () banked
  4256  0103B8  9715               	bcf	21,3,b	;volatile
  4257                           
  4258                           ; BSR set to: 15
  4259                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4260  0103BA  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4261  0103BE  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4262  0103C2  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4263  0103C6  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4264  0103CA  0E04               	movlw	4
  4265  0103CC  D006               	goto	u6010
  4266  0103CE                     u6015:
  4267  0103CE  0100               	movlb	0	; () banked
  4268  0103D0  90D8               	bcf	status,0,c
  4269  0103D2  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4270  0103D4  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4271  0103D6  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4272  0103D8  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4273  0103DA                     u6010:
  4274  0103DA  2EE8               	decfsz	wreg,f,c
  4275  0103DC  D7F8               	goto	u6015
  4276  0103DE  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4277  0103E2  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4278  0103E6  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4279  0103EA  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4283  0103EE  0100               	movlb	0	; () banked
  4284  0103F0  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4285  0103F2  0100               	movlb	0	; () banked
  4286  0103F4  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4287  0103F6  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4288  0103F8  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4289  0103FA  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4293  0103FC  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4297  010400  0E07               	movlw	7
  4298  010402  0100               	movlb	0	; () banked
  4299  010404  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4300  010406  0100               	movlb	0	; () banked
  4301  010408  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4302  01040A  0E00               	movlw	0
  4303  01040C  0100               	movlb	0	; () banked
  4304  01040E  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4305  010410  0100               	movlb	0	; () banked
  4306  010412  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4307  010414  0E00               	movlw	0
  4308  010416  0100               	movlb	0	; () banked
  4309  010418  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4310  01041A  0100               	movlb	0	; () banked
  4311  01041C  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4312  01041E  0E00               	movlw	0
  4313  010420  0100               	movlb	0	; () banked
  4314  010422  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4315  010424  0100               	movlb	0	; () banked
  4316  010426  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4320  010428  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4321  01042C  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4322  010430  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4323  010434  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4324  010438  0E05               	movlw	5
  4325  01043A                     u6025:
  4326  01043A  90D8               	bcf	status,0,c
  4327  01043C  0100               	movlb	0	; () banked
  4328  01043E  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4329  010440  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4330  010442  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4331  010444  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4332  010446  2EE8               	decfsz	wreg,f,c
  4333  010448  D7F8               	goto	u6025
  4334  01044A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4335  01044E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4336  010452  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4337  010456  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4341  01045A  C07C  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4342  01045E                     l5162:
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;inc\CANlib.h: 828: }
  4346                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4347  01045E  0100               	movlb	0	; () banked
  4348  010460  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4349  010462  0100               	movlb	0	; () banked
  4350  010464  A4D8               	btfss	status,2,c
  4351  010466  D089               	goto	l5196
  4352                           
  4353                           ; BSR set to: 0
  4354  010468  0EF7               	movlw	247
  4355  01046A  0100               	movlb	0	; () banked
  4356  01046C  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  4357  01046E  A4D8               	btfss	status,2,c
  4358  010470  D084               	goto	l5196
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;inc\CANlib.h: 832: {
  4362                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4363  010472  010F               	movlb	15	; () banked
  4364  010474  8701               	bsf	1,3,b	;volatile
  4365                           
  4366                           ; BSR set to: 15
  4367                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4368  010476  0100               	movlb	0	; () banked
  4369  010478  5172               	movf	CANSetFilter@filter& (0+255),w,b
  4370  01047A  0100               	movlb	0	; () banked
  4371  01047C  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4372  01047E  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4373  010480  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4374  010482  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4378  010484  C07C  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4382  010488  0E00               	movlw	0
  4383  01048A  0100               	movlb	0	; () banked
  4384  01048C  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4385  01048E  0100               	movlb	0	; () banked
  4386  010490  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4387  010492  0EFF               	movlw	255
  4388  010494  0100               	movlb	0	; () banked
  4389  010496  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4390  010498  0100               	movlb	0	; () banked
  4391  01049A  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4392  01049C  0E00               	movlw	0
  4393  01049E  0100               	movlb	0	; () banked
  4394  0104A0  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4395  0104A2  0100               	movlb	0	; () banked
  4396  0104A4  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4397  0104A6  0E00               	movlw	0
  4398  0104A8  0100               	movlb	0	; () banked
  4399  0104AA  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4400  0104AC  0100               	movlb	0	; () banked
  4401  0104AE  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4405  0104B0  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4406  0104B4  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4407  0104B8  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4408  0104BC  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4409  0104C0  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  4410  0104C4  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4411  0104C8  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4412  0104CC  0100               	movlb	0	; () banked
  4413  0104CE  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  4414  0104D0  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4415  0104D4  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4416  0104D8  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4417  0104DC  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4421  0104E0  C07C  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4425  0104E4  0100               	movlb	0	; () banked
  4426  0104E6  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4427  0104E8  D003               	goto	l475
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4431  0104EA  010F               	movlb	15	; () banked
  4432  0104EC  8101               	bsf	1,0,b	;volatile
  4433  0104EE  D002               	goto	l476
  4434  0104F0                     l475:
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;inc\CANlib.h: 844: else
  4438                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4439  0104F0  010F               	movlb	15	; () banked
  4440  0104F2  9101               	bcf	1,0,b	;volatile
  4441  0104F4                     l476:
  4442                           
  4443                           ; BSR set to: 15
  4444                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4445  0104F4  0100               	movlb	0	; () banked
  4446  0104F6  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4447  0104F8  D003               	goto	l477
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4451  0104FA  010F               	movlb	15	; () banked
  4452  0104FC  8301               	bsf	1,1,b	;volatile
  4453  0104FE  D002               	goto	l478
  4454  010500                     l477:
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;inc\CANlib.h: 849: else
  4458                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4459  010500  010F               	movlb	15	; () banked
  4460  010502  9301               	bcf	1,1,b	;volatile
  4461  010504                     l478:
  4462                           
  4463                           ; BSR set to: 15
  4464                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4465  010504  0100               	movlb	0	; () banked
  4466  010506  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4467  010508  D003               	goto	l479
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4471  01050A  010F               	movlb	15	; () banked
  4472  01050C  8B01               	bsf	1,5,b	;volatile
  4473  01050E  D002               	goto	l480
  4474  010510                     l479:
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;inc\CANlib.h: 854: else
  4478                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4479  010510  010F               	movlb	15	; () banked
  4480  010512  9B01               	bcf	1,5,b	;volatile
  4481  010514                     l480:
  4482                           
  4483                           ; BSR set to: 15
  4484                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4485  010514  0100               	movlb	0	; () banked
  4486  010516  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4487  010518  D003               	goto	l481
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4491  01051A  010F               	movlb	15	; () banked
  4492  01051C  8D01               	bsf	1,6,b	;volatile
  4493  01051E  D002               	goto	l482
  4494  010520                     l481:
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;inc\CANlib.h: 859: else
  4498                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4499  010520  010F               	movlb	15	; () banked
  4500  010522  9D01               	bcf	1,6,b	;volatile
  4501  010524                     l482:
  4502                           
  4503                           ; BSR set to: 15
  4504                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4505  010524  0100               	movlb	0	; () banked
  4506  010526  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4507  010528  D003               	goto	l483
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4511  01052A  010F               	movlb	15	; () banked
  4512  01052C  8F01               	bsf	1,7,b	;volatile
  4513  01052E  D002               	goto	l5190
  4514  010530                     l483:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;inc\CANlib.h: 864: else
  4518                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4519  010530  010F               	movlb	15	; () banked
  4520  010532  9F01               	bcf	1,7,b	;volatile
  4521  010534                     l5190:
  4522                           
  4523                           ; BSR set to: 15
  4524                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4525  010534  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4526  010538  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4527  01053C  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4528  010540  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4529  010544  0E16               	movlw	22
  4530  010546  D006               	goto	u6100
  4531  010548                     u6105:
  4532  010548  0100               	movlb	0	; () banked
  4533  01054A  90D8               	bcf	status,0,c
  4534  01054C  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4535  01054E  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4536  010550  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4537  010552  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4538  010554                     u6100:
  4539  010554  2EE8               	decfsz	wreg,f,c
  4540  010556  D7F8               	goto	u6105
  4541  010558  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4542  01055C  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4543  010560  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4544  010564  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4548  010568  0100               	movlb	0	; () banked
  4549  01056A  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4550  01056C  0100               	movlb	0	; () banked
  4551  01056E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4552  010570  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4553  010572  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4554  010574  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4558  010576  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4559  01057A                     l5196:
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;inc\CANlib.h: 870: }
  4563                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4564  01057A  0100               	movlb	0	; () banked
  4565  01057C  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4566  01057E  A4D8               	btfss	status,2,c
  4567  010580  D089               	goto	l5230
  4568                           
  4569                           ; BSR set to: 0
  4570  010582  0EF7               	movlw	247
  4571  010584  0100               	movlb	0	; () banked
  4572  010586  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  4573  010588  A4D8               	btfss	status,2,c
  4574  01058A  D084               	goto	l5230
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;inc\CANlib.h: 873: {
  4578                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4579  01058C  010F               	movlb	15	; () banked
  4580  01058E  8705               	bsf	5,3,b	;volatile
  4581                           
  4582                           ; BSR set to: 15
  4583                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4584  010590  0100               	movlb	0	; () banked
  4585  010592  5172               	movf	CANSetFilter@filter& (0+255),w,b
  4586  010594  0100               	movlb	0	; () banked
  4587  010596  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4588  010598  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4589  01059A  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4590  01059C  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4594  01059E  C07C  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4598  0105A2  0E00               	movlw	0
  4599  0105A4  0100               	movlb	0	; () banked
  4600  0105A6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4601  0105A8  0100               	movlb	0	; () banked
  4602  0105AA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4603  0105AC  0EFF               	movlw	255
  4604  0105AE  0100               	movlb	0	; () banked
  4605  0105B0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4606  0105B2  0100               	movlb	0	; () banked
  4607  0105B4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4608  0105B6  0E00               	movlw	0
  4609  0105B8  0100               	movlb	0	; () banked
  4610  0105BA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4611  0105BC  0100               	movlb	0	; () banked
  4612  0105BE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4613  0105C0  0E00               	movlw	0
  4614  0105C2  0100               	movlb	0	; () banked
  4615  0105C4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4616  0105C6  0100               	movlb	0	; () banked
  4617  0105C8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4621  0105CA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4622  0105CE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4623  0105D2  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4624  0105D6  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4625  0105DA  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  4626  0105DE  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4627  0105E2  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4628  0105E6  0100               	movlb	0	; () banked
  4629  0105E8  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  4630  0105EA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4631  0105EE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4632  0105F2  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4633  0105F6  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4637  0105FA  C07C  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  4641  0105FE  0100               	movlb	0	; () banked
  4642  010600  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4643  010602  D003               	goto	l486
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4647  010604  010F               	movlb	15	; () banked
  4648  010606  8105               	bsf	5,0,b	;volatile
  4649  010608  D002               	goto	l487
  4650  01060A                     l486:
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;inc\CANlib.h: 885: else
  4654                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4655  01060A  010F               	movlb	15	; () banked
  4656  01060C  9105               	bcf	5,0,b	;volatile
  4657  01060E                     l487:
  4658                           
  4659                           ; BSR set to: 15
  4660                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  4661  01060E  0100               	movlb	0	; () banked
  4662  010610  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4663  010612  D003               	goto	l488
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4667  010614  010F               	movlb	15	; () banked
  4668  010616  8305               	bsf	5,1,b	;volatile
  4669  010618  D002               	goto	l489
  4670  01061A                     l488:
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;inc\CANlib.h: 890: else
  4674                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4675  01061A  010F               	movlb	15	; () banked
  4676  01061C  9305               	bcf	5,1,b	;volatile
  4677  01061E                     l489:
  4678                           
  4679                           ; BSR set to: 15
  4680                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  4681  01061E  0100               	movlb	0	; () banked
  4682  010620  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4683  010622  D003               	goto	l490
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4687  010624  010F               	movlb	15	; () banked
  4688  010626  8B05               	bsf	5,5,b	;volatile
  4689  010628  D002               	goto	l491
  4690  01062A                     l490:
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;inc\CANlib.h: 895: else
  4694                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4695  01062A  010F               	movlb	15	; () banked
  4696  01062C  9B05               	bcf	5,5,b	;volatile
  4697  01062E                     l491:
  4698                           
  4699                           ; BSR set to: 15
  4700                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  4701  01062E  0100               	movlb	0	; () banked
  4702  010630  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4703  010632  D003               	goto	l492
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4707  010634  010F               	movlb	15	; () banked
  4708  010636  8D05               	bsf	5,6,b	;volatile
  4709  010638  D002               	goto	l493
  4710  01063A                     l492:
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;inc\CANlib.h: 900: else
  4714                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4715  01063A  010F               	movlb	15	; () banked
  4716  01063C  9D05               	bcf	5,6,b	;volatile
  4717  01063E                     l493:
  4718                           
  4719                           ; BSR set to: 15
  4720                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  4721  01063E  0100               	movlb	0	; () banked
  4722  010640  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4723  010642  D003               	goto	l494
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4727  010644  010F               	movlb	15	; () banked
  4728  010646  8F05               	bsf	5,7,b	;volatile
  4729  010648  D002               	goto	l5224
  4730  01064A                     l494:
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;inc\CANlib.h: 905: else
  4734                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4735  01064A  010F               	movlb	15	; () banked
  4736  01064C  9F05               	bcf	5,7,b	;volatile
  4737  01064E                     l5224:
  4738                           
  4739                           ; BSR set to: 15
  4740                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  4741  01064E  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4742  010652  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4743  010656  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4744  01065A  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4745  01065E  0E16               	movlw	22
  4746  010660  D006               	goto	u6180
  4747  010662                     u6185:
  4748  010662  0100               	movlb	0	; () banked
  4749  010664  90D8               	bcf	status,0,c
  4750  010666  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4751  010668  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4752  01066A  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4753  01066C  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4754  01066E                     u6180:
  4755  01066E  2EE8               	decfsz	wreg,f,c
  4756  010670  D7F8               	goto	u6185
  4757  010672  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4758  010676  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4759  01067A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4760  01067E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  4764  010682  0100               	movlb	0	; () banked
  4765  010684  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4766  010686  0100               	movlb	0	; () banked
  4767  010688  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4768  01068A  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4769  01068C  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4770  01068E  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4774  010690  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4775  010694                     l5230:
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;inc\CANlib.h: 911: }
  4779                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4780  010694  0E02               	movlw	2
  4781  010696  0100               	movlb	0	; () banked
  4782  010698  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4783  01069A  A4D8               	btfss	status,2,c
  4784  01069C  D089               	goto	l5264
  4785                           
  4786                           ; BSR set to: 0
  4787  01069E  0EF7               	movlw	247
  4788  0106A0  0100               	movlb	0	; () banked
  4789  0106A2  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  4790  0106A4  A4D8               	btfss	status,2,c
  4791  0106A6  D084               	goto	l5264
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;inc\CANlib.h: 915: {
  4795                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4796  0106A8  010F               	movlb	15	; () banked
  4797  0106AA  8709               	bsf	9,3,b	;volatile
  4798                           
  4799                           ; BSR set to: 15
  4800                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  4801  0106AC  0100               	movlb	0	; () banked
  4802  0106AE  5172               	movf	CANSetFilter@filter& (0+255),w,b
  4803  0106B0  0100               	movlb	0	; () banked
  4804  0106B2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4805  0106B4  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4806  0106B6  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4807  0106B8  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4811  0106BA  C07C  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  4815  0106BE  0E00               	movlw	0
  4816  0106C0  0100               	movlb	0	; () banked
  4817  0106C2  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4818  0106C4  0100               	movlb	0	; () banked
  4819  0106C6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4820  0106C8  0EFF               	movlw	255
  4821  0106CA  0100               	movlb	0	; () banked
  4822  0106CC  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4823  0106CE  0100               	movlb	0	; () banked
  4824  0106D0  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4825  0106D2  0E00               	movlw	0
  4826  0106D4  0100               	movlb	0	; () banked
  4827  0106D6  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4828  0106D8  0100               	movlb	0	; () banked
  4829  0106DA  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4830  0106DC  0E00               	movlw	0
  4831  0106DE  0100               	movlb	0	; () banked
  4832  0106E0  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4833  0106E2  0100               	movlb	0	; () banked
  4834  0106E4  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  4838  0106E6  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4839  0106EA  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4840  0106EE  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4841  0106F2  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4842  0106F6  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  4843  0106FA  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4844  0106FE  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4845  010702  0100               	movlb	0	; () banked
  4846  010704  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  4847  010706  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4848  01070A  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4849  01070E  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4850  010712  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4854  010716  C07C  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  4858  01071A  0100               	movlb	0	; () banked
  4859  01071C  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4860  01071E  D003               	goto	l497
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4864  010720  010F               	movlb	15	; () banked
  4865  010722  8109               	bsf	9,0,b	;volatile
  4866  010724  D002               	goto	l498
  4867  010726                     l497:
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;inc\CANlib.h: 927: else
  4871                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4872  010726  010F               	movlb	15	; () banked
  4873  010728  9109               	bcf	9,0,b	;volatile
  4874  01072A                     l498:
  4875                           
  4876                           ; BSR set to: 15
  4877                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  4878  01072A  0100               	movlb	0	; () banked
  4879  01072C  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4880  01072E  D003               	goto	l499
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4884  010730  010F               	movlb	15	; () banked
  4885  010732  8309               	bsf	9,1,b	;volatile
  4886  010734  D002               	goto	l500
  4887  010736                     l499:
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;inc\CANlib.h: 932: else
  4891                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4892  010736  010F               	movlb	15	; () banked
  4893  010738  9309               	bcf	9,1,b	;volatile
  4894  01073A                     l500:
  4895                           
  4896                           ; BSR set to: 15
  4897                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  4898  01073A  0100               	movlb	0	; () banked
  4899  01073C  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4900  01073E  D003               	goto	l501
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4904  010740  010F               	movlb	15	; () banked
  4905  010742  8B09               	bsf	9,5,b	;volatile
  4906  010744  D002               	goto	l502
  4907  010746                     l501:
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;inc\CANlib.h: 937: else
  4911                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4912  010746  010F               	movlb	15	; () banked
  4913  010748  9B09               	bcf	9,5,b	;volatile
  4914  01074A                     l502:
  4915                           
  4916                           ; BSR set to: 15
  4917                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  4918  01074A  0100               	movlb	0	; () banked
  4919  01074C  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4920  01074E  D003               	goto	l503
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4924  010750  010F               	movlb	15	; () banked
  4925  010752  8D09               	bsf	9,6,b	;volatile
  4926  010754  D002               	goto	l504
  4927  010756                     l503:
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;inc\CANlib.h: 942: else
  4931                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4932  010756  010F               	movlb	15	; () banked
  4933  010758  9D09               	bcf	9,6,b	;volatile
  4934  01075A                     l504:
  4935                           
  4936                           ; BSR set to: 15
  4937                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  4938  01075A  0100               	movlb	0	; () banked
  4939  01075C  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4940  01075E  D003               	goto	l505
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4944  010760  010F               	movlb	15	; () banked
  4945  010762  8F09               	bsf	9,7,b	;volatile
  4946  010764  D002               	goto	l5258
  4947  010766                     l505:
  4948                           
  4949                           ; BSR set to: 0
  4950                           ;inc\CANlib.h: 947: else
  4951                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4952  010766  010F               	movlb	15	; () banked
  4953  010768  9F09               	bcf	9,7,b	;volatile
  4954  01076A                     l5258:
  4955                           
  4956                           ; BSR set to: 15
  4957                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  4958  01076A  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4959  01076E  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4960  010772  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4961  010776  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4962  01077A  0E16               	movlw	22
  4963  01077C  D006               	goto	u6260
  4964  01077E                     u6265:
  4965  01077E  0100               	movlb	0	; () banked
  4966  010780  90D8               	bcf	status,0,c
  4967  010782  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4968  010784  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4969  010786  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4970  010788  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4971  01078A                     u6260:
  4972  01078A  2EE8               	decfsz	wreg,f,c
  4973  01078C  D7F8               	goto	u6265
  4974  01078E  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4975  010792  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4976  010796  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4977  01079A  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  4981  01079E  0100               	movlb	0	; () banked
  4982  0107A0  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4983  0107A2  0100               	movlb	0	; () banked
  4984  0107A4  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4985  0107A6  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4986  0107A8  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4987  0107AA  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4991  0107AC  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4992  0107B0                     l5264:
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;inc\CANlib.h: 953: }
  4996                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4997  0107B0  0E03               	movlw	3
  4998  0107B2  0100               	movlb	0	; () banked
  4999  0107B4  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5000  0107B6  A4D8               	btfss	status,2,c
  5001  0107B8  D089               	goto	l5298
  5002                           
  5003                           ; BSR set to: 0
  5004  0107BA  0EF7               	movlw	247
  5005  0107BC  0100               	movlb	0	; () banked
  5006  0107BE  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5007  0107C0  A4D8               	btfss	status,2,c
  5008  0107C2  D084               	goto	l5298
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;inc\CANlib.h: 956: {
  5012                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5013  0107C4  010F               	movlb	15	; () banked
  5014  0107C6  870D               	bsf	13,3,b	;volatile
  5015                           
  5016                           ; BSR set to: 15
  5017                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5018  0107C8  0100               	movlb	0	; () banked
  5019  0107CA  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5020  0107CC  0100               	movlb	0	; () banked
  5021  0107CE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5022  0107D0  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5023  0107D2  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5024  0107D4  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5025                           
  5026                           ; BSR set to: 0
  5027                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5028  0107D6  C07C  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5029                           
  5030                           ; BSR set to: 0
  5031                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5032  0107DA  0E00               	movlw	0
  5033  0107DC  0100               	movlb	0	; () banked
  5034  0107DE  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5035  0107E0  0100               	movlb	0	; () banked
  5036  0107E2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5037  0107E4  0EFF               	movlw	255
  5038  0107E6  0100               	movlb	0	; () banked
  5039  0107E8  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5040  0107EA  0100               	movlb	0	; () banked
  5041  0107EC  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5042  0107EE  0E00               	movlw	0
  5043  0107F0  0100               	movlb	0	; () banked
  5044  0107F2  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5045  0107F4  0100               	movlb	0	; () banked
  5046  0107F6  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5047  0107F8  0E00               	movlw	0
  5048  0107FA  0100               	movlb	0	; () banked
  5049  0107FC  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5050  0107FE  0100               	movlb	0	; () banked
  5051  010800  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5055  010802  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5056  010806  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5057  01080A  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5058  01080E  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5059  010812  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5060  010816  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5061  01081A  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5062  01081E  0100               	movlb	0	; () banked
  5063  010820  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5064  010822  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5065  010826  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5066  01082A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5067  01082E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5071  010832  C07C  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5075  010836  0100               	movlb	0	; () banked
  5076  010838  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5077  01083A  D003               	goto	l508
  5078                           
  5079                           ; BSR set to: 0
  5080                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5081  01083C  010F               	movlb	15	; () banked
  5082  01083E  810D               	bsf	13,0,b	;volatile
  5083  010840  D002               	goto	l509
  5084  010842                     l508:
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;inc\CANlib.h: 968: else
  5088                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5089  010842  010F               	movlb	15	; () banked
  5090  010844  910D               	bcf	13,0,b	;volatile
  5091  010846                     l509:
  5092                           
  5093                           ; BSR set to: 15
  5094                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5095  010846  0100               	movlb	0	; () banked
  5096  010848  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5097  01084A  D003               	goto	l510
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5101  01084C  010F               	movlb	15	; () banked
  5102  01084E  830D               	bsf	13,1,b	;volatile
  5103  010850  D002               	goto	l511
  5104  010852                     l510:
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;inc\CANlib.h: 973: else
  5108                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5109  010852  010F               	movlb	15	; () banked
  5110  010854  930D               	bcf	13,1,b	;volatile
  5111  010856                     l511:
  5112                           
  5113                           ; BSR set to: 15
  5114                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5115  010856  0100               	movlb	0	; () banked
  5116  010858  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5117  01085A  D003               	goto	l512
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5121  01085C  010F               	movlb	15	; () banked
  5122  01085E  8B0D               	bsf	13,5,b	;volatile
  5123  010860  D002               	goto	l513
  5124  010862                     l512:
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;inc\CANlib.h: 978: else
  5128                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5129  010862  010F               	movlb	15	; () banked
  5130  010864  9B0D               	bcf	13,5,b	;volatile
  5131  010866                     l513:
  5132                           
  5133                           ; BSR set to: 15
  5134                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5135  010866  0100               	movlb	0	; () banked
  5136  010868  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5137  01086A  D003               	goto	l514
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5141  01086C  010F               	movlb	15	; () banked
  5142  01086E  8D0D               	bsf	13,6,b	;volatile
  5143  010870  D002               	goto	l515
  5144  010872                     l514:
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;inc\CANlib.h: 983: else
  5148                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5149  010872  010F               	movlb	15	; () banked
  5150  010874  9D0D               	bcf	13,6,b	;volatile
  5151  010876                     l515:
  5152                           
  5153                           ; BSR set to: 15
  5154                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5155  010876  0100               	movlb	0	; () banked
  5156  010878  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5157  01087A  D003               	goto	l516
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5161  01087C  010F               	movlb	15	; () banked
  5162  01087E  8F0D               	bsf	13,7,b	;volatile
  5163  010880  D002               	goto	l5292
  5164  010882                     l516:
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;inc\CANlib.h: 988: else
  5168                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5169  010882  010F               	movlb	15	; () banked
  5170  010884  9F0D               	bcf	13,7,b	;volatile
  5171  010886                     l5292:
  5172                           
  5173                           ; BSR set to: 15
  5174                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5175  010886  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5176  01088A  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5177  01088E  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5178  010892  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5179  010896  0E16               	movlw	22
  5180  010898  D006               	goto	u6340
  5181  01089A                     u6345:
  5182  01089A  0100               	movlb	0	; () banked
  5183  01089C  90D8               	bcf	status,0,c
  5184  01089E  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5185  0108A0  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5186  0108A2  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5187  0108A4  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5188  0108A6                     u6340:
  5189  0108A6  2EE8               	decfsz	wreg,f,c
  5190  0108A8  D7F8               	goto	u6345
  5191  0108AA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5192  0108AE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5193  0108B2  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5194  0108B6  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5198  0108BA  0100               	movlb	0	; () banked
  5199  0108BC  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5200  0108BE  0100               	movlb	0	; () banked
  5201  0108C0  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5202  0108C2  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5203  0108C4  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5204  0108C6  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5208  0108C8  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5209  0108CC                     l5298:
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;inc\CANlib.h: 994: }
  5213                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5214  0108CC  0E04               	movlw	4
  5215  0108CE  0100               	movlb	0	; () banked
  5216  0108D0  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5217  0108D2  A4D8               	btfss	status,2,c
  5218  0108D4  D089               	goto	l5332
  5219                           
  5220                           ; BSR set to: 0
  5221  0108D6  0EF7               	movlw	247
  5222  0108D8  0100               	movlb	0	; () banked
  5223  0108DA  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5224  0108DC  A4D8               	btfss	status,2,c
  5225  0108DE  D084               	goto	l5332
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;inc\CANlib.h: 997: {
  5229                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5230  0108E0  010F               	movlb	15	; () banked
  5231  0108E2  8711               	bsf	17,3,b	;volatile
  5232                           
  5233                           ; BSR set to: 15
  5234                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5235  0108E4  0100               	movlb	0	; () banked
  5236  0108E6  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5237  0108E8  0100               	movlb	0	; () banked
  5238  0108EA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5239  0108EC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5240  0108EE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5241  0108F0  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5245  0108F2  C07C  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5249  0108F6  0E00               	movlw	0
  5250  0108F8  0100               	movlb	0	; () banked
  5251  0108FA  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5252  0108FC  0100               	movlb	0	; () banked
  5253  0108FE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5254  010900  0EFF               	movlw	255
  5255  010902  0100               	movlb	0	; () banked
  5256  010904  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5257  010906  0100               	movlb	0	; () banked
  5258  010908  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5259  01090A  0E00               	movlw	0
  5260  01090C  0100               	movlb	0	; () banked
  5261  01090E  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5262  010910  0100               	movlb	0	; () banked
  5263  010912  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5264  010914  0E00               	movlw	0
  5265  010916  0100               	movlb	0	; () banked
  5266  010918  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5267  01091A  0100               	movlb	0	; () banked
  5268  01091C  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5269                           
  5270                           ; BSR set to: 0
  5271                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5272  01091E  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5273  010922  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5274  010926  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5275  01092A  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5276  01092E  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5277  010932  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5278  010936  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5279  01093A  0100               	movlb	0	; () banked
  5280  01093C  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5281  01093E  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5282  010942  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5283  010946  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5284  01094A  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5288  01094E  C07C  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5292  010952  0100               	movlb	0	; () banked
  5293  010954  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5294  010956  D003               	goto	l519
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5298  010958  010F               	movlb	15	; () banked
  5299  01095A  8111               	bsf	17,0,b	;volatile
  5300  01095C  D002               	goto	l520
  5301  01095E                     l519:
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;inc\CANlib.h: 1009: else
  5305                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5306  01095E  010F               	movlb	15	; () banked
  5307  010960  9111               	bcf	17,0,b	;volatile
  5308  010962                     l520:
  5309                           
  5310                           ; BSR set to: 15
  5311                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5312  010962  0100               	movlb	0	; () banked
  5313  010964  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5314  010966  D003               	goto	l521
  5315                           
  5316                           ; BSR set to: 0
  5317                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5318  010968  010F               	movlb	15	; () banked
  5319  01096A  8311               	bsf	17,1,b	;volatile
  5320  01096C  D002               	goto	l522
  5321  01096E                     l521:
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;inc\CANlib.h: 1014: else
  5325                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5326  01096E  010F               	movlb	15	; () banked
  5327  010970  9311               	bcf	17,1,b	;volatile
  5328  010972                     l522:
  5329                           
  5330                           ; BSR set to: 15
  5331                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5332  010972  0100               	movlb	0	; () banked
  5333  010974  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5334  010976  D003               	goto	l523
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5338  010978  010F               	movlb	15	; () banked
  5339  01097A  8B11               	bsf	17,5,b	;volatile
  5340  01097C  D002               	goto	l524
  5341  01097E                     l523:
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;inc\CANlib.h: 1019: else
  5345                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5346  01097E  010F               	movlb	15	; () banked
  5347  010980  9B11               	bcf	17,5,b	;volatile
  5348  010982                     l524:
  5349                           
  5350                           ; BSR set to: 15
  5351                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5352  010982  0100               	movlb	0	; () banked
  5353  010984  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5354  010986  D003               	goto	l525
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5358  010988  010F               	movlb	15	; () banked
  5359  01098A  8D11               	bsf	17,6,b	;volatile
  5360  01098C  D002               	goto	l526
  5361  01098E                     l525:
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;inc\CANlib.h: 1024: else
  5365                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5366  01098E  010F               	movlb	15	; () banked
  5367  010990  9D11               	bcf	17,6,b	;volatile
  5368  010992                     l526:
  5369                           
  5370                           ; BSR set to: 15
  5371                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5372  010992  0100               	movlb	0	; () banked
  5373  010994  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5374  010996  D003               	goto	l527
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5378  010998  010F               	movlb	15	; () banked
  5379  01099A  8F11               	bsf	17,7,b	;volatile
  5380  01099C  D002               	goto	l5326
  5381  01099E                     l527:
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;inc\CANlib.h: 1029: else
  5385                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5386  01099E  010F               	movlb	15	; () banked
  5387  0109A0  9F11               	bcf	17,7,b	;volatile
  5388  0109A2                     l5326:
  5389                           
  5390                           ; BSR set to: 15
  5391                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5392  0109A2  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5393  0109A6  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5394  0109AA  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5395  0109AE  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5396  0109B2  0E16               	movlw	22
  5397  0109B4  D006               	goto	u6420
  5398  0109B6                     u6425:
  5399  0109B6  0100               	movlb	0	; () banked
  5400  0109B8  90D8               	bcf	status,0,c
  5401  0109BA  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5402  0109BC  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5403  0109BE  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5404  0109C0  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5405  0109C2                     u6420:
  5406  0109C2  2EE8               	decfsz	wreg,f,c
  5407  0109C4  D7F8               	goto	u6425
  5408  0109C6  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5409  0109CA  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5410  0109CE  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5411  0109D2  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5415  0109D6  0100               	movlb	0	; () banked
  5416  0109D8  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5417  0109DA  0100               	movlb	0	; () banked
  5418  0109DC  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5419  0109DE  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5420  0109E0  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5421  0109E2  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5425  0109E4  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5426  0109E8                     l5332:
  5427                           
  5428                           ; BSR set to: 0
  5429                           ;inc\CANlib.h: 1035: }
  5430                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5431  0109E8  0E05               	movlw	5
  5432  0109EA  0100               	movlb	0	; () banked
  5433  0109EC  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5434  0109EE  A4D8               	btfss	status,2,c
  5435  0109F0  0012               	return	
  5436                           
  5437                           ; BSR set to: 0
  5438  0109F2  0EF7               	movlw	247
  5439  0109F4  0100               	movlb	0	; () banked
  5440  0109F6  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5441  0109F8  A4D8               	btfss	status,2,c
  5442  0109FA  0012               	return	
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;inc\CANlib.h: 1038: {
  5446                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5447  0109FC  010F               	movlb	15	; () banked
  5448  0109FE  8715               	bsf	21,3,b	;volatile
  5449                           
  5450                           ; BSR set to: 15
  5451                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5452  010A00  0100               	movlb	0	; () banked
  5453  010A02  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5454  010A04  0100               	movlb	0	; () banked
  5455  010A06  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5456  010A08  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5457  010A0A  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5458  010A0C  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5462  010A0E  C07C  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5466  010A12  0E00               	movlw	0
  5467  010A14  0100               	movlb	0	; () banked
  5468  010A16  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5469  010A18  0100               	movlb	0	; () banked
  5470  010A1A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5471  010A1C  0EFF               	movlw	255
  5472  010A1E  0100               	movlb	0	; () banked
  5473  010A20  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5474  010A22  0100               	movlb	0	; () banked
  5475  010A24  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5476  010A26  0E00               	movlw	0
  5477  010A28  0100               	movlb	0	; () banked
  5478  010A2A  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5479  010A2C  0100               	movlb	0	; () banked
  5480  010A2E  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5481  010A30  0E00               	movlw	0
  5482  010A32  0100               	movlb	0	; () banked
  5483  010A34  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5484  010A36  0100               	movlb	0	; () banked
  5485  010A38  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5489  010A3A  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5490  010A3E  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5491  010A42  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5492  010A46  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5493  010A4A  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5494  010A4E  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5495  010A52  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5496  010A56  0100               	movlb	0	; () banked
  5497  010A58  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5498  010A5A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5499  010A5E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5500  010A62  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5501  010A66  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5502                           
  5503                           ; BSR set to: 0
  5504                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5505  010A6A  C07C  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5509  010A6E  0100               	movlb	0	; () banked
  5510  010A70  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5511  010A72  D003               	goto	l530
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5515  010A74  010F               	movlb	15	; () banked
  5516  010A76  8115               	bsf	21,0,b	;volatile
  5517  010A78  D002               	goto	l531
  5518  010A7A                     l530:
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;inc\CANlib.h: 1050: else
  5522                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5523  010A7A  010F               	movlb	15	; () banked
  5524  010A7C  9115               	bcf	21,0,b	;volatile
  5525  010A7E                     l531:
  5526                           
  5527                           ; BSR set to: 15
  5528                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5529  010A7E  0100               	movlb	0	; () banked
  5530  010A80  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5531  010A82  D003               	goto	l532
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5535  010A84  010F               	movlb	15	; () banked
  5536  010A86  8315               	bsf	21,1,b	;volatile
  5537  010A88  D002               	goto	l533
  5538  010A8A                     l532:
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;inc\CANlib.h: 1055: else
  5542                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5543  010A8A  010F               	movlb	15	; () banked
  5544  010A8C  9315               	bcf	21,1,b	;volatile
  5545  010A8E                     l533:
  5546                           
  5547                           ; BSR set to: 15
  5548                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5549  010A8E  0100               	movlb	0	; () banked
  5550  010A90  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5551  010A92  D003               	goto	l534
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5555  010A94  010F               	movlb	15	; () banked
  5556  010A96  8B15               	bsf	21,5,b	;volatile
  5557  010A98  D002               	goto	l535
  5558  010A9A                     l534:
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;inc\CANlib.h: 1060: else
  5562                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5563  010A9A  010F               	movlb	15	; () banked
  5564  010A9C  9B15               	bcf	21,5,b	;volatile
  5565  010A9E                     l535:
  5566                           
  5567                           ; BSR set to: 15
  5568                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5569  010A9E  0100               	movlb	0	; () banked
  5570  010AA0  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5571  010AA2  D003               	goto	l536
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5575  010AA4  010F               	movlb	15	; () banked
  5576  010AA6  8D15               	bsf	21,6,b	;volatile
  5577  010AA8  D002               	goto	l537
  5578  010AAA                     l536:
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;inc\CANlib.h: 1065: else
  5582                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5583  010AAA  010F               	movlb	15	; () banked
  5584  010AAC  9D15               	bcf	21,6,b	;volatile
  5585  010AAE                     l537:
  5586                           
  5587                           ; BSR set to: 15
  5588                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5589  010AAE  0100               	movlb	0	; () banked
  5590  010AB0  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5591  010AB2  D003               	goto	l538
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5595  010AB4  010F               	movlb	15	; () banked
  5596  010AB6  8F15               	bsf	21,7,b	;volatile
  5597  010AB8  D002               	goto	l5360
  5598  010ABA                     l538:
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;inc\CANlib.h: 1070: else
  5602                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5603  010ABA  010F               	movlb	15	; () banked
  5604  010ABC  9F15               	bcf	21,7,b	;volatile
  5605  010ABE                     l5360:
  5606                           
  5607                           ; BSR set to: 15
  5608                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5609  010ABE  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5610  010AC2  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5611  010AC6  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5612  010ACA  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5613  010ACE  0E16               	movlw	22
  5614  010AD0  D006               	goto	u6500
  5615  010AD2                     u6505:
  5616  010AD2  0100               	movlb	0	; () banked
  5617  010AD4  90D8               	bcf	status,0,c
  5618  010AD6  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5619  010AD8  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5620  010ADA  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5621  010ADC  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5622  010ADE                     u6500:
  5623  010ADE  2EE8               	decfsz	wreg,f,c
  5624  010AE0  D7F8               	goto	u6505
  5625  010AE2  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5626  010AE6  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5627  010AEA  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5628  010AEE  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5632  010AF2  0100               	movlb	0	; () banked
  5633  010AF4  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5634  010AF6  0100               	movlb	0	; () banked
  5635  010AF8  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5636  010AFA  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5637  010AFC  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5638  010AFE  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5642  010B00  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5643  010B04  0012               	return	
  5644  010B06                     __end_of_CANSetFilter:
  5645                           	opt stack 0
  5646                           tblptru	equ	0xFF8
  5647                           tblptrh	equ	0xFF7
  5648                           tblptrl	equ	0xFF6
  5649                           tablat	equ	0xFF5
  5650                           intcon	equ	0xFF2
  5651                           postinc0	equ	0xFEE
  5652                           wreg	equ	0xFE8
  5653                           status	equ	0xFD8
  5654                           
  5655 ;; *************** function _CANOperationMode *****************
  5656 ;; Defined at:
  5657 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;  mode            1    wreg     enum E16881
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;  mode            1   18[BANK0 ] enum E16881
  5662 ;; Return value:  Size  Location     Type
  5663 ;;		None               void
  5664 ;; Registers used:
  5665 ;;		wreg, status,2, status,0
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5672 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5674 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5675 ;;Total ram usage:        1 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    3
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		_CANInitialize
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text5
  5686  015DF8                     __ptext5:
  5687                           	opt stack 0
  5688  015DF8                     _CANOperationMode:
  5689                           	opt stack 25
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;incstack = 0
  5693                           ;CANOperationMode@mode stored from wreg
  5694  015DF8  0100               	movlb	0	; () banked
  5695  015DFA  6F72               	movwf	CANOperationMode@mode& (0+255),b
  5696                           
  5697                           ;inc\CANlib.h: 208: CANCON = mode;
  5698  015DFC  C072  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5699  015E00                     l4956:
  5700  015E00  506E               	movf	3950,w,c	;volatile
  5701  015E02  0BE0               	andlw	224
  5702  015E04  0100               	movlb	0	; () banked
  5703  015E06  1972               	xorwf	CANOperationMode@mode& (0+255),w,b
  5704  015E08  B4D8               	btfsc	status,2,c
  5705  015E0A  0012               	return	
  5706  015E0C  D7F9               	goto	l4956
  5707  015E0E                     __end_of_CANOperationMode:
  5708                           	opt stack 0
  5709                           tblptru	equ	0xFF8
  5710                           tblptrh	equ	0xFF7
  5711                           tblptrl	equ	0xFF6
  5712                           tablat	equ	0xFF5
  5713                           intcon	equ	0xFF2
  5714                           postinc0	equ	0xFEE
  5715                           wreg	equ	0xFE8
  5716                           status	equ	0xFD8
  5717                           
  5718 ;; *************** function _PWR_Button_Polling *****************
  5719 ;; Defined at:
  5720 ;;		line 387 in file "RemoteCan.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;		None
  5725 ;; Return value:  Size  Location     Type
  5726 ;;		None               void
  5727 ;; Registers used:
  5728 ;;		None
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5738 ;;Total ram usage:        0 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; Hardware stack levels required when called:    3
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_main
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text6
  5749  015D88                     __ptext6:
  5750                           	opt stack 0
  5751  015D88                     _PWR_Button_Polling:
  5752                           	opt stack 27
  5753                           
  5754                           ;RemoteCan.c: 388: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;incstack = 0
  5758  015D88  AA81               	btfss	3969,5,c	;volatile
  5759  015D8A  D002               	goto	l849
  5760  015D8C  B24C               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5761  015D8E  0012               	return	
  5762  015D90                     l849:
  5763                           
  5764                           ;RemoteCan.c: 389: wait_low_1 = 0;
  5765  015D90  924C               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5766                           
  5767                           ;RemoteCan.c: 390: if (PORTBbits.RB5 == 1) {
  5768  015D92  AA81               	btfss	3969,5,c	;volatile
  5769  015D94  0012               	return	
  5770                           
  5771                           ;RemoteCan.c: 391: power_switch = ~power_switch;
  5772  015D96  B04C               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5773  015D98  D002               	goto	u8380
  5774  015D9A  804C               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5775  015D9C  D001               	goto	u8395
  5776  015D9E                     u8380:
  5777  015D9E  904C               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5778  015DA0                     u8395:
  5779                           
  5780                           ;RemoteCan.c: 392: wait_low_1 = 1;
  5781  015DA0  824C               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5782  015DA2  0012               	return	
  5783  015DA4                     __end_of_PWR_Button_Polling:
  5784                           	opt stack 0
  5785                           tblptru	equ	0xFF8
  5786                           tblptrh	equ	0xFF7
  5787                           tblptrl	equ	0xFF6
  5788                           tablat	equ	0xFF5
  5789                           intcon	equ	0xFF2
  5790                           postinc0	equ	0xFEE
  5791                           wreg	equ	0xFE8
  5792                           status	equ	0xFD8
  5793                           
  5794 ;; *************** function _LCD_Handler *****************
  5795 ;; Defined at:
  5796 ;;		line 301 in file "RemoteCan.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;		None
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;		None
  5801 ;; Return value:  Size  Location     Type
  5802 ;;		None               void
  5803 ;; Registers used:
  5804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5814 ;;Total ram usage:        0 bytes
  5815 ;; Hardware stack levels used:    1
  5816 ;; Hardware stack levels required when called:    9
  5817 ;; This function calls:
  5818 ;;		_CANisTxReady
  5819 ;;		_CANsendMessage
  5820 ;;		_LCD_clear
  5821 ;;		_LCD_goto_line
  5822 ;;		_LCD_goto_xy
  5823 ;;		_LCD_initialize
  5824 ;;		_LCD_write_message
  5825 ;;		_LCD_write_string
  5826 ;;		___fldiv
  5827 ;;		___xxtofl
  5828 ;;		_sprintf
  5829 ;; This function is called by:
  5830 ;;		_main
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text7
  5835  014604                     __ptext7:
  5836                           	opt stack 0
  5837  014604                     _LCD_Handler:
  5838                           	opt stack 21
  5839  014604                     l8508:
  5840  014604  EC92  F0AE         	call	_CANisTxReady	;wreg free
  5841  014608  06E8               	decf	wreg,f,c
  5842  01460A  A4D8               	btfss	status,2,c
  5843  01460C  D7FB               	goto	l8508
  5844                           
  5845                           ;RemoteCan.c: 304: CANsendMessage(0b00000000110, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5846  01460E  0E06               	movlw	6
  5847  014610  0100               	movlb	0	; () banked
  5848  014612  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  5849  014614  0E00               	movlw	0
  5850  014616  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5851  014618  0E00               	movlw	0
  5852  01461A  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5853  01461C  0E00               	movlw	0
  5854  01461E  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5855  014620  0EEA               	movlw	low _data_speed
  5856  014622  0100               	movlb	0	; () banked
  5857  014624  6F76               	movwf	CANsendMessage@data& (0+255),b
  5858  014626  0E00               	movlw	high _data_speed
  5859  014628  0100               	movlb	0	; () banked
  5860  01462A  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  5861  01462C  0E08               	movlw	8
  5862  01462E  0100               	movlb	0	; () banked
  5863  014630  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  5864  014632  0EFC               	movlw	252
  5865  014634  0100               	movlb	0	; () banked
  5866  014636  6F79               	movwf	CANsendMessage@flags& (0+255),b
  5867  014638  ECCD  F089         	call	_CANsendMessage	;wreg free
  5868                           
  5869                           ;RemoteCan.c: 306: actual_speed_kmh = ((actual_speed) / 278.0);
  5870  01463C  C0DE  F072         	movff	_actual_speed,___xxtofl@val
  5871  014640  C0DF  F073         	movff	_actual_speed+1,___xxtofl@val+1
  5872  014644  0100               	movlb	0	; () banked
  5873  014646  6B74               	clrf	(___xxtofl@val+2)& (0+255),b
  5874  014648  6B75               	clrf	(___xxtofl@val+3)& (0+255),b
  5875  01464A  0E00               	movlw	0
  5876  01464C  ECEF  F0A3         	call	___xxtofl
  5877  014650  C072  F080         	movff	?___xxtofl,___fldiv@b
  5878  014654  C073  F081         	movff	?___xxtofl+1,___fldiv@b+1
  5879  014658  C074  F082         	movff	?___xxtofl+2,___fldiv@b+2
  5880  01465C  C075  F083         	movff	?___xxtofl+3,___fldiv@b+3
  5881  014660  0E00               	movlw	0
  5882  014662  0100               	movlb	0	; () banked
  5883  014664  6F84               	movwf	___fldiv@a& (0+255),b
  5884  014666  0E00               	movlw	0
  5885  014668  6F85               	movwf	(___fldiv@a+1)& (0+255),b
  5886  01466A  0E8B               	movlw	139
  5887  01466C  6F86               	movwf	(___fldiv@a+2)& (0+255),b
  5888  01466E  0E43               	movlw	67
  5889  014670  6F87               	movwf	(___fldiv@a+3)& (0+255),b
  5890  014672  ECD8  F09D         	call	___fldiv	;wreg free
  5891  014676  C080  F00E         	movff	?___fldiv,_actual_speed_kmh
  5892  01467A  C081  F00F         	movff	?___fldiv+1,_actual_speed_kmh+1
  5893  01467E  C082  F010         	movff	?___fldiv+2,_actual_speed_kmh+2
  5894  014682  C083  F011         	movff	?___fldiv+3,_actual_speed_kmh+3
  5895                           
  5896                           ;RemoteCan.c: 307: sprintf(str, "%.2f", actual_speed_kmh);
  5897  014686  0E0F               	movlw	low _str
  5898  014688  0100               	movlb	0	; () banked
  5899  01468A  6FC4               	movwf	sprintf@sp& (0+255),b
  5900  01468C  0E01               	movlw	high _str
  5901  01468E  0100               	movlb	0	; () banked
  5902  014690  6FC5               	movwf	(sprintf@sp+1)& (0+255),b
  5903  014692  0EF0               	movlw	low STR_5
  5904  014694  0100               	movlb	0	; () banked
  5905  014696  6FC6               	movwf	sprintf@f& (0+255),b
  5906  014698  0EFF               	movlw	high STR_5
  5907  01469A  0100               	movlb	0	; () banked
  5908  01469C  6FC7               	movwf	(sprintf@f+1)& (0+255),b
  5909  01469E  C00E  F0C8         	movff	_actual_speed_kmh,?_sprintf+4
  5910  0146A2  C00F  F0C9         	movff	_actual_speed_kmh+1,?_sprintf+5
  5911  0146A6  C010  F0CA         	movff	_actual_speed_kmh+2,?_sprintf+6
  5912  0146AA  C011  F0CB         	movff	_actual_speed_kmh+3,?_sprintf+7
  5913  0146AE  EC83  F085         	call	_sprintf	;wreg free
  5914                           
  5915                           ;RemoteCan.c: 308: str[11] = '\0';
  5916  0146B2  0E00               	movlw	0
  5917  0146B4  0101               	movlb	1	; () banked
  5918  0146B6  6F1A               	movwf	(_str+11)& (0+255),b
  5919                           
  5920                           ; BSR set to: 1
  5921                           ;RemoteCan.c: 310: if (display_refresh == 1) {
  5922  0146B8  AC4B               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  5923  0146BA  D032               	goto	l8534
  5924                           
  5925                           ; BSR set to: 1
  5926                           ;RemoteCan.c: 311: LCD_initialize(16);
  5927  0146BC  0E10               	movlw	16
  5928  0146BE  EC14  F0A8         	call	_LCD_initialize
  5929                           
  5930                           ;RemoteCan.c: 312: LCD_clear();
  5931  0146C2  EC51  F0AE         	call	_LCD_clear	;wreg free
  5932                           
  5933                           ;RemoteCan.c: 313: LCD_goto_line(1);
  5934  0146C6  0E01               	movlw	1
  5935  0146C8  ECF7  F0A9         	call	_LCD_goto_line
  5936                           
  5937                           ;RemoteCan.c: 314: LCD_write_message("=== VEHICLE DATA ===");
  5938  0146CC  0E87               	movlw	low STR_6
  5939  0146CE  0100               	movlb	0	; () banked
  5940  0146D0  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  5941  0146D2  0EFF               	movlw	high STR_6
  5942  0146D4  0100               	movlb	0	; () banked
  5943  0146D6  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5944  0146D8  EC1E  F0AE         	call	_LCD_write_message	;wreg free
  5945                           
  5946                           ;RemoteCan.c: 315: LCD_goto_line(2);
  5947  0146DC  0E02               	movlw	2
  5948  0146DE  ECF7  F0A9         	call	_LCD_goto_line
  5949                           
  5950                           ;RemoteCan.c: 316: LCD_write_message("Direction: ");
  5951  0146E2  0ED0               	movlw	low STR_7
  5952  0146E4  0100               	movlb	0	; () banked
  5953  0146E6  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  5954  0146E8  0EFF               	movlw	high STR_7
  5955  0146EA  0100               	movlb	0	; () banked
  5956  0146EC  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5957  0146EE  EC1E  F0AE         	call	_LCD_write_message	;wreg free
  5958                           
  5959                           ;RemoteCan.c: 317: LCD_goto_line(3);
  5960  0146F2  0E03               	movlw	3
  5961  0146F4  ECF7  F0A9         	call	_LCD_goto_line
  5962                           
  5963                           ;RemoteCan.c: 318: LCD_write_message("Speed: x.xx Km/h");
  5964  0146F8  0EB1               	movlw	low STR_8
  5965  0146FA  0100               	movlb	0	; () banked
  5966  0146FC  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  5967  0146FE  0EFF               	movlw	high STR_8
  5968  014700  0100               	movlb	0	; () banked
  5969  014702  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5970  014704  EC1E  F0AE         	call	_LCD_write_message	;wreg free
  5971                           
  5972                           ;RemoteCan.c: 319: LCD_goto_line(4);
  5973  014708  0E04               	movlw	4
  5974  01470A  ECF7  F0A9         	call	_LCD_goto_line
  5975                           
  5976                           ;RemoteCan.c: 320: LCD_write_message("Park assist: ");
  5977  01470E  0EC2               	movlw	low STR_9
  5978  014710  0100               	movlb	0	; () banked
  5979  014712  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  5980  014714  0EFF               	movlw	high STR_9
  5981  014716  0100               	movlb	0	; () banked
  5982  014718  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5983  01471A  EC1E  F0AE         	call	_LCD_write_message	;wreg free
  5984                           
  5985                           ;RemoteCan.c: 321: display_refresh = 0;
  5986  01471E  9C4B               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  5987  014720                     l8534:
  5988                           
  5989                           ;RemoteCan.c: 322: }
  5990                           ;RemoteCan.c: 325: LCD_goto_xy(12, 2);
  5991  014720  0E02               	movlw	2
  5992  014722  0100               	movlb	0	; () banked
  5993  014724  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  5994  014726  0E0C               	movlw	12
  5995  014728  ECD2  F0AE         	call	_LCD_goto_xy
  5996                           
  5997                           ;RemoteCan.c: 326: if (switch_position != 0) {
  5998  01472C  0100               	movlb	0	; () banked
  5999  01472E  51E6               	movf	_switch_position& (0+255),w,b	;volatile
  6000  014730  B4D8               	btfsc	status,2,c
  6001  014732  D016               	goto	l8544
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;RemoteCan.c: 327: if (dir == 1) {
  6005  014734  0100               	movlb	0	; () banked
  6006  014736  05E4               	decf	_dir& (0+255),w,b	;volatile
  6007  014738  A4D8               	btfss	status,2,c
  6008  01473A  D009               	goto	l8542
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;RemoteCan.c: 328: LCD_write_message("FWD");
  6012  01473C  0EF5               	movlw	low STR_10
  6013  01473E  0100               	movlb	0	; () banked
  6014  014740  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6015  014742  0EFF               	movlw	high STR_10
  6016  014744  0100               	movlb	0	; () banked
  6017  014746  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6018  014748  EC1E  F0AE         	call	_LCD_write_message	;wreg free
  6019                           
  6020                           ;RemoteCan.c: 329: } else {
  6021  01474C  D011               	goto	l8546
  6022  01474E                     l8542:
  6023                           
  6024                           ;RemoteCan.c: 330: LCD_write_message("BKWD");
  6025  01474E  0EEB               	movlw	low STR_11
  6026  014750  0100               	movlb	0	; () banked
  6027  014752  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6028  014754  0EFF               	movlw	high STR_11
  6029  014756  0100               	movlb	0	; () banked
  6030  014758  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6031  01475A  EC1E  F0AE         	call	_LCD_write_message	;wreg free
  6032                           
  6033                           ;RemoteCan.c: 331: }
  6034                           ;RemoteCan.c: 332: } else {
  6035  01475E  D008               	goto	l8546
  6036  014760                     l8544:
  6037                           
  6038                           ;RemoteCan.c: 333: LCD_write_message("P");
  6039  014760  0EFD               	movlw	low STR_12
  6040  014762  0100               	movlb	0	; () banked
  6041  014764  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6042  014766  0EFF               	movlw	high STR_12
  6043  014768  0100               	movlb	0	; () banked
  6044  01476A  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6045  01476C  EC1E  F0AE         	call	_LCD_write_message	;wreg free
  6046  014770                     l8546:
  6047                           
  6048                           ;RemoteCan.c: 334: }
  6049                           ;RemoteCan.c: 337: LCD_goto_xy(8, 3);
  6050  014770  0E03               	movlw	3
  6051  014772  0100               	movlb	0	; () banked
  6052  014774  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  6053  014776  0E08               	movlw	8
  6054  014778  ECD2  F0AE         	call	_LCD_goto_xy
  6055                           
  6056                           ;RemoteCan.c: 338: LCD_write_string(str);
  6057  01477C  0E0F               	movlw	low _str
  6058  01477E  0100               	movlb	0	; () banked
  6059  014780  6F83               	movwf	LCD_write_string@buffer& (0+255),b
  6060  014782  0E01               	movlw	high _str
  6061  014784  0100               	movlb	0	; () banked
  6062  014786  6F84               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  6063  014788  EC7F  F0AE         	call	_LCD_write_string	;wreg free
  6064                           
  6065                           ;RemoteCan.c: 341: LCD_goto_xy(14, 4);
  6066  01478C  0E04               	movlw	4
  6067  01478E  0100               	movlb	0	; () banked
  6068  014790  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  6069  014792  0E0E               	movlw	14
  6070  014794  ECD2  F0AE         	call	_LCD_goto_xy
  6071                           
  6072                           ;RemoteCan.c: 342: if (parking_state == 0) {
  6073  014798  0100               	movlb	0	; () banked
  6074  01479A  51E5               	movf	_parking_state& (0+255),w,b	;volatile
  6075  01479C  A4D8               	btfss	status,2,c
  6076  01479E  D009               	goto	l8556
  6077                           
  6078                           ; BSR set to: 0
  6079                           ;RemoteCan.c: 343: LCD_write_message("OFF");
  6080  0147A0  0EF9               	movlw	low STR_13
  6081  0147A2  0100               	movlb	0	; () banked
  6082  0147A4  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6083  0147A6  0EFF               	movlw	high STR_13
  6084  0147A8  0100               	movlb	0	; () banked
  6085  0147AA  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6086  0147AC  EC1E  F0AE         	call	_LCD_write_message	;wreg free
  6087                           
  6088                           ;RemoteCan.c: 344: } else {
  6089  0147B0  0012               	return	
  6090  0147B2                     l8556:
  6091                           
  6092                           ;RemoteCan.c: 345: if (parking_state == 1) {
  6093  0147B2  0100               	movlb	0	; () banked
  6094  0147B4  05E5               	decf	_parking_state& (0+255),w,b	;volatile
  6095  0147B6  A4D8               	btfss	status,2,c
  6096  0147B8  D009               	goto	l8560
  6097                           
  6098                           ; BSR set to: 0
  6099                           ;RemoteCan.c: 346: LCD_write_message("SEARCH");
  6100  0147BA  0EE4               	movlw	low STR_14
  6101  0147BC  0100               	movlb	0	; () banked
  6102  0147BE  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6103  0147C0  0EFF               	movlw	high STR_14
  6104  0147C2  0100               	movlb	0	; () banked
  6105  0147C4  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6106  0147C6  EC1E  F0AE         	call	_LCD_write_message	;wreg free
  6107                           
  6108                           ;RemoteCan.c: 347: } else {
  6109  0147CA  0012               	return	
  6110  0147CC                     l8560:
  6111                           
  6112                           ;RemoteCan.c: 348: LCD_write_message("PARKING");
  6113  0147CC  0EDC               	movlw	low STR_15
  6114  0147CE  0100               	movlb	0	; () banked
  6115  0147D0  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  6116  0147D2  0EFF               	movlw	high STR_15
  6117  0147D4  0100               	movlb	0	; () banked
  6118  0147D6  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6119  0147D8  EC1E  F0AE         	call	_LCD_write_message	;wreg free
  6120  0147DC  0012               	return	
  6121  0147DE                     __end_of_LCD_Handler:
  6122                           	opt stack 0
  6123                           tblptru	equ	0xFF8
  6124                           tblptrh	equ	0xFF7
  6125                           tblptrl	equ	0xFF6
  6126                           tablat	equ	0xFF5
  6127                           intcon	equ	0xFF2
  6128                           postinc0	equ	0xFEE
  6129                           wreg	equ	0xFE8
  6130                           status	equ	0xFD8
  6131                           
  6132 ;; *************** function _sprintf *****************
  6133 ;; Defined at:
  6134 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  sp              2  100[BANK0 ] PTR unsigned char 
  6137 ;;		 -> str(12), 
  6138 ;;  f               2  102[BANK0 ] PTR const unsigned char 
  6139 ;;		 -> STR_5(5), 
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;  fval            4   22[BANK1 ] PTR const unsigned char 
  6142 ;;  tmpval          4   16[BANK1 ] struct .
  6143 ;;  val             4   10[BANK1 ] unsigned long 
  6144 ;;  cp              3    0        PTR const unsigned char 
  6145 ;;  prec            2   20[BANK1 ] int 
  6146 ;;  exp             2   14[BANK1 ] int 
  6147 ;;  flag            2    8[BANK1 ] unsigned short 
  6148 ;;  ap              2    6[BANK1 ] PTR void [1]
  6149 ;;		 -> ?_sprintf(2), 
  6150 ;;  len             2    0        unsigned int 
  6151 ;;  width           2    0        int 
  6152 ;;  c               1   26[BANK1 ] char 
  6153 ;;  d               1    0        unsigned char 
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  2  100[BANK0 ] int 
  6156 ;; Registers used:
  6157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6163 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6164 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6165 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6166 ;;      Totals:         0       8      27       0       0       0       0       0       0       0       0       0       
      +0       0
  6167 ;;Total ram usage:       35 bytes
  6168 ;; Hardware stack levels used:    1
  6169 ;; Hardware stack levels required when called:    5
  6170 ;; This function calls:
  6171 ;;		___awdiv
  6172 ;;		___fladd
  6173 ;;		___flge
  6174 ;;		___flmul
  6175 ;;		___flneg
  6176 ;;		___flsub
  6177 ;;		___fltol
  6178 ;;		___lldiv
  6179 ;;		___llmod
  6180 ;;		___wmul
  6181 ;;		___xxtofl
  6182 ;;		__div_to_l_
  6183 ;;		__tdiv_to_l_
  6184 ;;		_fround
  6185 ;;		_isdigit
  6186 ;;		_scale
  6187 ;; This function is called by:
  6188 ;;		_LCD_Handler
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           	psect	text8
  6193  010B06                     __ptext8:
  6194                           	opt stack 0
  6195  010B06                     _sprintf:
  6196                           	opt stack 24
  6197                           
  6198                           ;doprnt.c: 494: va_list ap;
  6199                           ;doprnt.c: 499: signed char c;
  6200                           ;doprnt.c: 501: int width;
  6201                           ;doprnt.c: 504: int prec;
  6202                           ;doprnt.c: 508: unsigned short flag;
  6203                           ;doprnt.c: 515: char d;
  6204                           ;doprnt.c: 516: double fval;
  6205                           ;doprnt.c: 517: int exp;
  6206                           ;doprnt.c: 523: union {
  6207                           ;doprnt.c: 524: unsigned long vd;
  6208                           ;doprnt.c: 525: double integ;
  6209                           ;doprnt.c: 526: } tmpval;
  6210                           ;doprnt.c: 528: unsigned long val;
  6211                           ;doprnt.c: 529: unsigned len;
  6212                           ;doprnt.c: 530: const char * cp;
  6213                           ;doprnt.c: 533: *ap = __va_start();
  6214                           
  6215                           ;incstack = 0
  6216  010B06  0EC8               	movlw	low (?_sprintf+4)
  6217  010B08  0101               	movlb	1	; () banked
  6218  010B0A  6F29               	movwf	sprintf@ap& (0+255),b
  6219  010B0C  0E00               	movlw	high (?_sprintf+4)
  6220  010B0E  0101               	movlb	1	; () banked
  6221  010B10  6F2A               	movwf	(sprintf@ap+1)& (0+255),b
  6222                           
  6223                           ;doprnt.c: 536: while(c = *f++) {
  6224  010B12  EFB5  F089         	goto	l8430
  6225  010B16                     l8232:
  6226                           
  6227                           ; BSR set to: 1
  6228                           ;doprnt.c: 538: if(c != '%')
  6229  010B16  0E25               	movlw	37
  6230  010B18  0101               	movlb	1	; () banked
  6231  010B1A  193D               	xorwf	sprintf@c& (0+255),w,b
  6232  010B1C  B4D8               	btfsc	status,2,c
  6233  010B1E  D008               	goto	l8238
  6234                           
  6235                           ; BSR set to: 1
  6236                           ;doprnt.c: 540: {
  6237                           ;doprnt.c: 541: ((*sp++ = (c)));
  6238  010B20  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  6239  010B24  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  6240  010B28  C13D  FFDF         	movff	sprintf@c,indf2
  6241  010B2C  EFB2  F089         	goto	l8428
  6242  010B30                     l8238:
  6243                           
  6244                           ;doprnt.c: 543: }
  6245                           ;doprnt.c: 548: flag = 0;
  6246  010B30  0E00               	movlw	0
  6247  010B32  0101               	movlb	1	; () banked
  6248  010B34  6F2C               	movwf	(sprintf@flag+1)& (0+255),b
  6249  010B36  0E00               	movlw	0
  6250  010B38  6F2B               	movwf	sprintf@flag& (0+255),b
  6251                           
  6252                           ; BSR set to: 1
  6253                           ;doprnt.c: 611: if(*f == '.') {
  6254  010B3A  C0C6  FFF6         	movff	sprintf@f,tblptrl
  6255  010B3E  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  6256  010B42                     	if	0	;tblptru may be non-zero
  6257  010B42                     	endif
  6258  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6259  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  6260  010B44  6EF8               	movwf	tblptru,c
  6261  010B46                     	endif
  6262  010B46  0008               	tblrd		*
  6263  010B48  50F5               	movf	tablat,w,c
  6264  010B4A  0A2E               	xorlw	46
  6265  010B4C  A4D8               	btfss	status,2,c
  6266  010B4E  D03D               	goto	l8252
  6267                           
  6268                           ; BSR set to: 1
  6269                           ;doprnt.c: 612: flag |= 0x4000;
  6270  010B50  0101               	movlb	1	; () banked
  6271  010B52  8D2C               	bsf	(sprintf@flag+1)& (0+255),6,b
  6272                           
  6273                           ;doprnt.c: 613: f++;
  6274  010B54  0100               	movlb	0	; () banked
  6275  010B56  4BC6               	infsnz	sprintf@f& (0+255),f,b
  6276  010B58  2BC7               	incf	(sprintf@f+1)& (0+255),f,b
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;doprnt.c: 620: {
  6280                           ;doprnt.c: 621: prec = 0;
  6281  010B5A  0E00               	movlw	0
  6282  010B5C  0101               	movlb	1	; () banked
  6283  010B5E  6F38               	movwf	(sprintf@prec+1)& (0+255),b
  6284  010B60  0E00               	movlw	0
  6285  010B62  6F37               	movwf	sprintf@prec& (0+255),b
  6286                           
  6287                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6288  010B64  D025               	goto	l8250
  6289  010B66                     l8246:
  6290                           
  6291                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6292  010B66  C137  F072         	movff	sprintf@prec,___wmul@multiplier
  6293  010B6A  C138  F073         	movff	sprintf@prec+1,___wmul@multiplier+1
  6294  010B6E  0E00               	movlw	0
  6295  010B70  0100               	movlb	0	; () banked
  6296  010B72  6F75               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6297  010B74  0E0A               	movlw	10
  6298  010B76  6F74               	movwf	___wmul@multiplicand& (0+255),b
  6299  010B78  EC03  F0AE         	call	___wmul	;wreg free
  6300  010B7C  C0C6  FFF6         	movff	sprintf@f,tblptrl
  6301  010B80  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  6302  010B84                     	if	0	;tblptru may be non-zero
  6303  010B84                     	endif
  6304  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6305  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  6306  010B86  6EF8               	movwf	tblptru,c
  6307  010B88                     	endif
  6308  010B88  0008               	tblrd		*
  6309  010B8A  50F5               	movf	tablat,w,c
  6310  010B8C  0100               	movlb	0	; () banked
  6311  010B8E  2772               	addwf	?___wmul& (0+255),f,b
  6312  010B90  0E00               	movlw	0
  6313  010B92  0100               	movlb	0	; () banked
  6314  010B94  2373               	addwfc	(?___wmul+1)& (0+255),f,b
  6315  010B96  0ED0               	movlw	208
  6316  010B98  0100               	movlb	0	; () banked
  6317  010B9A  2572               	addwf	?___wmul& (0+255),w,b
  6318  010B9C  0101               	movlb	1	; () banked
  6319  010B9E  6F37               	movwf	sprintf@prec& (0+255),b
  6320  010BA0  0EFF               	movlw	255
  6321  010BA2  0100               	movlb	0	; () banked
  6322  010BA4  2173               	addwfc	(?___wmul+1)& (0+255),w,b
  6323  010BA6  0101               	movlb	1	; () banked
  6324  010BA8  6F38               	movwf	(sprintf@prec+1)& (0+255),b
  6325                           
  6326                           ; BSR set to: 1
  6327  010BAA  0100               	movlb	0	; () banked
  6328  010BAC  4BC6               	infsnz	sprintf@f& (0+255),f,b
  6329  010BAE  2BC7               	incf	(sprintf@f+1)& (0+255),f,b
  6330  010BB0                     l8250:
  6331  010BB0  C0C6  FFF6         	movff	sprintf@f,tblptrl
  6332  010BB4  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  6333  010BB8                     	if	0	;tblptru may be non-zero
  6334  010BB8                     	endif
  6335  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6336  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  6337  010BBA  6EF8               	movwf	tblptru,c
  6338  010BBC                     	endif
  6339  010BBC  0008               	tblrd		*
  6340  010BBE  50F5               	movf	tablat,w,c
  6341  010BC0  EC6A  F0AE         	call	_isdigit
  6342  010BC4  A0D8               	btfss	status,0,c
  6343  010BC6  D00C               	goto	l8260
  6344  010BC8  D7CE               	goto	l8246
  6345  010BCA                     l8252:
  6346                           
  6347                           ;doprnt.c: 626: prec = 0;
  6348  010BCA  0E00               	movlw	0
  6349  010BCC  0101               	movlb	1	; () banked
  6350  010BCE  6F38               	movwf	(sprintf@prec+1)& (0+255),b
  6351  010BD0  0E00               	movlw	0
  6352  010BD2  6F37               	movwf	sprintf@prec& (0+255),b
  6353                           
  6354                           ; BSR set to: 1
  6355                           ;doprnt.c: 628: flag |= 0x1000;
  6356  010BD4  0101               	movlb	1	; () banked
  6357  010BD6  892C               	bsf	(sprintf@flag+1)& (0+255),4,b
  6358                           
  6359                           ; BSR set to: 1
  6360                           ;doprnt.c: 630: }
  6361                           ;doprnt.c: 635: switch(c = *f++) {
  6362  010BD8  D003               	goto	l8260
  6363  010BDA                     l8256:
  6364                           
  6365                           ; BSR set to: 1
  6366                           ;doprnt.c: 663: flag |= 0x400;
  6367  010BDA  0101               	movlb	1	; () banked
  6368  010BDC  852C               	bsf	(sprintf@flag+1)& (0+255),2,b
  6369                           
  6370                           ;doprnt.c: 664: break;
  6371  010BDE  D015               	goto	l8262
  6372  010BE0                     l8260:
  6373  010BE0  C0C6  FFF6         	movff	sprintf@f,tblptrl
  6374  010BE4  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  6375  010BE8  0100               	movlb	0	; () banked
  6376  010BEA  4BC6               	infsnz	sprintf@f& (0+255),f,b
  6377  010BEC  2BC7               	incf	(sprintf@f+1)& (0+255),f,b
  6378  010BEE                     	if	0	;tblptru may be non-zero
  6379  010BEE                     	endif
  6380  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6381  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  6382  010BF0  6EF8               	movwf	tblptru,c
  6383  010BF2                     	endif
  6384  010BF2  0008               	tblrd		*
  6385  010BF4  CFF5 F13D          	movff	tablat,sprintf@c
  6386  010BF8  0101               	movlb	1	; () banked
  6387  010BFA  513D               	movf	sprintf@c& (0+255),w,b
  6388                           
  6389                           ; Switch size 1, requested type "space"
  6390                           ; Number of cases is 2, Range of values is 0 to 102
  6391                           ; switch strategies available:
  6392                           ; Name         Instructions Cycles
  6393                           ; simple_byte            7     4 (average)
  6394                           ;	Chosen strategy is simple_byte
  6395  010BFC  0A00               	xorlw	0	; case 0
  6396  010BFE  B4D8               	btfsc	status,2,c
  6397  010C00  D3C5               	goto	l8432
  6398  010C02  0A66               	xorlw	102	; case 102
  6399  010C04  B4D8               	btfsc	status,2,c
  6400  010C06  D7E9               	goto	l8256
  6401  010C08  D3B0               	goto	l8430
  6402  010C0A                     l8262:
  6403                           
  6404                           ; BSR set to: 1
  6405                           ;doprnt.c: 825: if(flag & (0x700)) {
  6406  010C0A  0E07               	movlw	7
  6407  010C0C  0101               	movlb	1	; () banked
  6408  010C0E  152C               	andwf	(sprintf@flag+1)& (0+255),w,b
  6409  010C10  B4D8               	btfsc	status,2,c
  6410  010C12  D353               	goto	l8410
  6411                           
  6412                           ; BSR set to: 1
  6413                           ;doprnt.c: 827: if(flag & 0x1000)
  6414  010C14  0101               	movlb	1	; () banked
  6415  010C16  A92C               	btfss	(sprintf@flag+1)& (0+255),4,b
  6416  010C18  D005               	goto	l8268
  6417                           
  6418                           ; BSR set to: 1
  6419                           ;doprnt.c: 829: prec = 6;
  6420  010C1A  0E00               	movlw	0
  6421  010C1C  0101               	movlb	1	; () banked
  6422  010C1E  6F38               	movwf	(sprintf@prec+1)& (0+255),b
  6423  010C20  0E06               	movlw	6
  6424  010C22  6F37               	movwf	sprintf@prec& (0+255),b
  6425  010C24                     l8268:
  6426                           
  6427                           ; BSR set to: 1
  6428                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6429  010C24  C129  FFD9         	movff	sprintf@ap,fsr2l
  6430  010C28  C12A  FFDA         	movff	sprintf@ap+1,fsr2h
  6431  010C2C  CFDE F139          	movff	postinc2,sprintf@fval
  6432  010C30  CFDE F13A          	movff	postinc2,sprintf@fval+1
  6433  010C34  CFDE F13B          	movff	postinc2,sprintf@fval+2
  6434  010C38  CFDE F13C          	movff	postinc2,sprintf@fval+3
  6435                           
  6436                           ; BSR set to: 1
  6437  010C3C  0E04               	movlw	4
  6438  010C3E  0101               	movlb	1	; () banked
  6439  010C40  2729               	addwf	sprintf@ap& (0+255),f,b
  6440  010C42  0E00               	movlw	0
  6441  010C44  232A               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6442                           
  6443                           ; BSR set to: 1
  6444                           ;doprnt.c: 831: if(fval < 0.0) {
  6445  010C46  0101               	movlb	1	; () banked
  6446  010C48  AF3C               	btfss	(sprintf@fval+3)& (0+255),7,b
  6447  010C4A  D015               	goto	l8278
  6448                           
  6449                           ; BSR set to: 1
  6450                           ;doprnt.c: 832: fval = -fval;
  6451  010C4C  C139  F099         	movff	sprintf@fval,___flneg@f1
  6452  010C50  C13A  F09A         	movff	sprintf@fval+1,___flneg@f1+1
  6453  010C54  C13B  F09B         	movff	sprintf@fval+2,___flneg@f1+2
  6454  010C58  C13C  F09C         	movff	sprintf@fval+3,___flneg@f1+3
  6455  010C5C  ECE7  F0AD         	call	___flneg	;wreg free
  6456  010C60  C099  F139         	movff	?___flneg,sprintf@fval
  6457  010C64  C09A  F13A         	movff	?___flneg+1,sprintf@fval+1
  6458  010C68  C09B  F13B         	movff	?___flneg+2,sprintf@fval+2
  6459  010C6C  C09C  F13C         	movff	?___flneg+3,sprintf@fval+3
  6460                           
  6461                           ;doprnt.c: 833: flag |= 0x03;
  6462  010C70  0E03               	movlw	3
  6463  010C72  0101               	movlb	1	; () banked
  6464  010C74  132B               	iorwf	sprintf@flag& (0+255),f,b
  6465  010C76                     l8278:
  6466                           
  6467                           ; BSR set to: 1
  6468                           ;doprnt.c: 834: }
  6469                           ;doprnt.c: 835: exp = 0;
  6470  010C76  0E00               	movlw	0
  6471  010C78  0101               	movlb	1	; () banked
  6472  010C7A  6F32               	movwf	(sprintf@exp+1)& (0+255),b
  6473  010C7C  0E00               	movlw	0
  6474  010C7E  6F31               	movwf	sprintf@exp& (0+255),b
  6475                           
  6476                           ; BSR set to: 1
  6477                           ;doprnt.c: 836: if( fval!=0) {
  6478  010C80  0101               	movlb	1	; () banked
  6479  010C82  5139               	movf	sprintf@fval& (0+255),w,b
  6480  010C84  0101               	movlb	1	; () banked
  6481  010C86  113A               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6482  010C88  0101               	movlb	1	; () banked
  6483  010C8A  113B               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6484  010C8C  0101               	movlb	1	; () banked
  6485  010C8E  113C               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6486  010C90  B4D8               	btfsc	status,2,c
  6487  010C92  D08E               	goto	l8306
  6488                           
  6489                           ; BSR set to: 1
  6490                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  6491  010C94  0101               	movlb	1	; () banked
  6492  010C96  353B               	rlcf	(sprintf@fval+2)& (0+255),w,b
  6493  010C98  353C               	rlcf	(sprintf@fval+3)& (0+255),w,b
  6494  010C9A  0F82               	addlw	130
  6495  010C9C  0101               	movlb	1	; () banked
  6496  010C9E  6F31               	movwf	sprintf@exp& (0+255),b
  6497  010CA0  0101               	movlb	1	; () banked
  6498  010CA2  6B32               	clrf	(sprintf@exp+1)& (0+255),b
  6499  010CA4  0EFF               	movlw	255
  6500  010CA6  2332               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6501                           
  6502                           ; BSR set to: 1
  6503                           ;doprnt.c: 838: exp--;
  6504  010CA8  0101               	movlb	1	; () banked
  6505  010CAA  0731               	decf	sprintf@exp& (0+255),f,b
  6506  010CAC  A0D8               	btfss	status,0,c
  6507  010CAE  0732               	decf	(sprintf@exp+1)& (0+255),f,b
  6508                           
  6509                           ; BSR set to: 1
  6510                           ;doprnt.c: 839: exp *= 3;
  6511  010CB0  C131  F072         	movff	sprintf@exp,___wmul@multiplier
  6512  010CB4  C132  F073         	movff	sprintf@exp+1,___wmul@multiplier+1
  6513  010CB8  0E00               	movlw	0
  6514  010CBA  0100               	movlb	0	; () banked
  6515  010CBC  6F75               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6516  010CBE  0E03               	movlw	3
  6517  010CC0  6F74               	movwf	___wmul@multiplicand& (0+255),b
  6518  010CC2  EC03  F0AE         	call	___wmul	;wreg free
  6519  010CC6  C072  F131         	movff	?___wmul,sprintf@exp
  6520  010CCA  C073  F132         	movff	?___wmul+1,sprintf@exp+1
  6521                           
  6522                           ;doprnt.c: 840: exp /= 10;
  6523  010CCE  C131  F078         	movff	sprintf@exp,___awdiv@dividend
  6524  010CD2  C132  F079         	movff	sprintf@exp+1,___awdiv@dividend+1
  6525  010CD6  0E00               	movlw	0
  6526  010CD8  0100               	movlb	0	; () banked
  6527  010CDA  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  6528  010CDC  0E0A               	movlw	10
  6529  010CDE  6F7A               	movwf	___awdiv@divisor& (0+255),b
  6530  010CE0  EC6D  F0AA         	call	___awdiv	;wreg free
  6531  010CE4  C078  F131         	movff	?___awdiv,sprintf@exp
  6532  010CE8  C079  F132         	movff	?___awdiv+1,sprintf@exp+1
  6533                           
  6534                           ;doprnt.c: 841: if(exp < 0)
  6535  010CEC  0101               	movlb	1	; () banked
  6536  010CEE  AF32               	btfss	(sprintf@exp+1)& (0+255),7,b
  6537  010CF0  D004               	goto	l8294
  6538                           
  6539                           ; BSR set to: 1
  6540                           ;doprnt.c: 842: exp--;
  6541  010CF2  0101               	movlb	1	; () banked
  6542  010CF4  0731               	decf	sprintf@exp& (0+255),f,b
  6543  010CF6  A0D8               	btfss	status,0,c
  6544  010CF8  0732               	decf	(sprintf@exp+1)& (0+255),f,b
  6545  010CFA                     l8294:
  6546                           
  6547                           ; BSR set to: 1
  6548                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6549  010CFA  0101               	movlb	1	; () banked
  6550  010CFC  5131               	movf	sprintf@exp& (0+255),w,b
  6551  010CFE  0800               	sublw	0
  6552  010D00  EC1E  F094         	call	_scale
  6553  010D04  C099  F133         	movff	?_scale,sprintf@tmpval
  6554  010D08  C09A  F134         	movff	?_scale+1,sprintf@tmpval+1
  6555  010D0C  C09B  F135         	movff	?_scale+2,sprintf@tmpval+2
  6556  010D10  C09C  F136         	movff	?_scale+3,sprintf@tmpval+3
  6557                           
  6558                           ;doprnt.c: 847: tmpval.integ *= fval;
  6559  010D14  C133  F080         	movff	sprintf@tmpval,___flmul@b
  6560  010D18  C134  F081         	movff	sprintf@tmpval+1,___flmul@b+1
  6561  010D1C  C135  F082         	movff	sprintf@tmpval+2,___flmul@b+2
  6562  010D20  C136  F083         	movff	sprintf@tmpval+3,___flmul@b+3
  6563  010D24  C139  F084         	movff	sprintf@fval,___flmul@a
  6564  010D28  C13A  F085         	movff	sprintf@fval+1,___flmul@a+1
  6565  010D2C  C13B  F086         	movff	sprintf@fval+2,___flmul@a+2
  6566  010D30  C13C  F087         	movff	sprintf@fval+3,___flmul@a+3
  6567  010D34  EC85  F09B         	call	___flmul	;wreg free
  6568  010D38  C080  F133         	movff	?___flmul,sprintf@tmpval
  6569  010D3C  C081  F134         	movff	?___flmul+1,sprintf@tmpval+1
  6570  010D40  C082  F135         	movff	?___flmul+2,sprintf@tmpval+2
  6571  010D44  C083  F136         	movff	?___flmul+3,sprintf@tmpval+3
  6572                           
  6573                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6574  010D48  C133  F072         	movff	sprintf@tmpval,___flge@ff1
  6575  010D4C  C134  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  6576  010D50  C135  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  6577  010D54  C136  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  6578  010D58  0E00               	movlw	0
  6579  010D5A  0100               	movlb	0	; () banked
  6580  010D5C  6F76               	movwf	___flge@ff2& (0+255),b
  6581  010D5E  0E00               	movlw	0
  6582  010D60  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  6583  010D62  0E80               	movlw	128
  6584  010D64  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  6585  010D66  0E3F               	movlw	63
  6586  010D68  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  6587  010D6A  EC88  F0A6         	call	___flge	;wreg free
  6588  010D6E  0100               	movlb	0	; () banked
  6589  010D70  B0D8               	btfsc	status,0,c
  6590  010D72  D005               	goto	l8302
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;doprnt.c: 849: exp--;
  6594  010D74  0101               	movlb	1	; () banked
  6595  010D76  0731               	decf	sprintf@exp& (0+255),f,b
  6596  010D78  A0D8               	btfss	status,0,c
  6597  010D7A  0732               	decf	(sprintf@exp+1)& (0+255),f,b
  6598  010D7C  D019               	goto	l8306
  6599  010D7E                     l8302:
  6600                           
  6601                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6602  010D7E  C133  F072         	movff	sprintf@tmpval,___flge@ff1
  6603  010D82  C134  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  6604  010D86  C135  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  6605  010D8A  C136  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  6606  010D8E  0E00               	movlw	0
  6607  010D90  0100               	movlb	0	; () banked
  6608  010D92  6F76               	movwf	___flge@ff2& (0+255),b
  6609  010D94  0E00               	movlw	0
  6610  010D96  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  6611  010D98  0E20               	movlw	32
  6612  010D9A  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  6613  010D9C  0E41               	movlw	65
  6614  010D9E  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  6615  010DA0  EC88  F0A6         	call	___flge	;wreg free
  6616  010DA4  0100               	movlb	0	; () banked
  6617  010DA6  A0D8               	btfss	status,0,c
  6618  010DA8  D003               	goto	l8306
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;doprnt.c: 851: exp++;
  6622  010DAA  0101               	movlb	1	; () banked
  6623  010DAC  4B31               	infsnz	sprintf@exp& (0+255),f,b
  6624  010DAE  2B32               	incf	(sprintf@exp+1)& (0+255),f,b
  6625  010DB0                     l8306:
  6626                           
  6627                           ;doprnt.c: 852: }
  6628                           ;doprnt.c: 1112: if(prec <= 12)
  6629  010DB0  0101               	movlb	1	; () banked
  6630  010DB2  BF38               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6631  010DB4  D008               	goto	l8308
  6632  010DB6  0101               	movlb	1	; () banked
  6633  010DB8  5138               	movf	(sprintf@prec+1)& (0+255),w,b
  6634  010DBA  E123               	bnz	l8310
  6635  010DBC  0E0D               	movlw	13
  6636  010DBE  0101               	movlb	1	; () banked
  6637  010DC0  5D37               	subwf	sprintf@prec& (0+255),w,b
  6638  010DC2  B0D8               	btfsc	status,0,c
  6639  010DC4  D01E               	goto	l8310
  6640  010DC6                     l8308:
  6641                           
  6642                           ; BSR set to: 1
  6643                           ;doprnt.c: 1113: fval += fround(prec);
  6644  010DC6  C139  F0A6         	movff	sprintf@fval,___fladd@b
  6645  010DCA  C13A  F0A7         	movff	sprintf@fval+1,___fladd@b+1
  6646  010DCE  C13B  F0A8         	movff	sprintf@fval+2,___fladd@b+2
  6647  010DD2  C13C  F0A9         	movff	sprintf@fval+3,___fladd@b+3
  6648  010DD6  0101               	movlb	1	; () banked
  6649  010DD8  5137               	movf	sprintf@prec& (0+255),w,b
  6650  010DDA  EC87  F0A1         	call	_fround
  6651  010DDE  C099  F0AA         	movff	?_fround,___fladd@a
  6652  010DE2  C09A  F0AB         	movff	?_fround+1,___fladd@a+1
  6653  010DE6  C09B  F0AC         	movff	?_fround+2,___fladd@a+2
  6654  010DEA  C09C  F0AD         	movff	?_fround+3,___fladd@a+3
  6655  010DEE  EC31  F099         	call	___fladd	;wreg free
  6656  010DF2  C0A6  F139         	movff	?___fladd,sprintf@fval
  6657  010DF6  C0A7  F13A         	movff	?___fladd+1,sprintf@fval+1
  6658  010DFA  C0A8  F13B         	movff	?___fladd+2,sprintf@fval+2
  6659  010DFE  C0A9  F13C         	movff	?___fladd+3,sprintf@fval+3
  6660  010E02                     l8310:
  6661                           
  6662                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6663  010E02  0101               	movlb	1	; () banked
  6664  010E04  BF32               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6665  010E06  D008               	goto	l8312
  6666  010E08  0101               	movlb	1	; () banked
  6667  010E0A  5132               	movf	(sprintf@exp+1)& (0+255),w,b
  6668  010E0C  E12E               	bnz	l8318
  6669  010E0E  0E0A               	movlw	10
  6670  010E10  0101               	movlb	1	; () banked
  6671  010E12  5D31               	subwf	sprintf@exp& (0+255),w,b
  6672  010E14  B0D8               	btfsc	status,0,c
  6673  010E16  D029               	goto	l8318
  6674  010E18                     l8312:
  6675                           
  6676                           ; BSR set to: 1
  6677  010E18  0101               	movlb	1	; () banked
  6678  010E1A  5139               	movf	sprintf@fval& (0+255),w,b
  6679  010E1C  0101               	movlb	1	; () banked
  6680  010E1E  113A               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6681  010E20  0101               	movlb	1	; () banked
  6682  010E22  113B               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6683  010E24  0101               	movlb	1	; () banked
  6684  010E26  113C               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6685  010E28  B4D8               	btfsc	status,2,c
  6686  010E2A  D06D               	goto	l8332
  6687                           
  6688                           ; BSR set to: 1
  6689  010E2C  C139  F0BA         	movff	sprintf@fval,___fltol@f1
  6690  010E30  C13A  F0BB         	movff	sprintf@fval+1,___fltol@f1+1
  6691  010E34  C13B  F0BC         	movff	sprintf@fval+2,___fltol@f1+2
  6692  010E38  C13C  F0BD         	movff	sprintf@fval+3,___fltol@f1+3
  6693  010E3C  EC71  F0A9         	call	___fltol	;wreg free
  6694  010E40  0100               	movlb	0	; () banked
  6695  010E42  51BA               	movf	?___fltol& (0+255),w,b
  6696  010E44  0100               	movlb	0	; () banked
  6697  010E46  11BB               	iorwf	(?___fltol+1)& (0+255),w,b
  6698  010E48  0100               	movlb	0	; () banked
  6699  010E4A  11BC               	iorwf	(?___fltol+2)& (0+255),w,b
  6700  010E4C  0100               	movlb	0	; () banked
  6701  010E4E  11BD               	iorwf	(?___fltol+3)& (0+255),w,b
  6702  010E50  A4D8               	btfss	status,2,c
  6703  010E52  D059               	goto	l8332
  6704                           
  6705                           ; BSR set to: 0
  6706  010E54  0101               	movlb	1	; () banked
  6707  010E56  BF32               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6708  010E58  D056               	goto	l8332
  6709  010E5A  0101               	movlb	1	; () banked
  6710  010E5C  5132               	movf	(sprintf@exp+1)& (0+255),w,b
  6711  010E5E  E105               	bnz	l8318
  6712  010E60  0E02               	movlw	2
  6713  010E62  0101               	movlb	1	; () banked
  6714  010E64  5D31               	subwf	sprintf@exp& (0+255),w,b
  6715  010E66  A0D8               	btfss	status,0,c
  6716  010E68  D04E               	goto	l8332
  6717  010E6A                     l8318:
  6718                           
  6719                           ; BSR set to: 1
  6720                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6721  010E6A  C133  F072         	movff	sprintf@tmpval,___flge@ff1
  6722  010E6E  C134  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  6723  010E72  C135  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  6724  010E76  C136  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  6725  010E7A  0E5F               	movlw	95
  6726  010E7C  0100               	movlb	0	; () banked
  6727  010E7E  6F76               	movwf	___flge@ff2& (0+255),b
  6728  010E80  0E70               	movlw	112
  6729  010E82  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  6730  010E84  0E89               	movlw	137
  6731  010E86  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  6732  010E88  0E40               	movlw	64
  6733  010E8A  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  6734  010E8C  EC88  F0A6         	call	___flge	;wreg free
  6735  010E90  0100               	movlb	0	; () banked
  6736  010E92  B0D8               	btfsc	status,0,c
  6737  010E94  D003               	goto	l8322
  6738                           
  6739                           ; BSR set to: 0
  6740                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6741  010E96  0101               	movlb	1	; () banked
  6742  010E98  0EF7               	movlw	247
  6743  010E9A  D002               	goto	L3
  6744  010E9C                     l8322:
  6745                           
  6746                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6747  010E9C  0101               	movlb	1	; () banked
  6748  010E9E  0EF8               	movlw	248
  6749  010EA0                     L3:
  6750  010EA0  2731               	addwf	sprintf@exp& (0+255),f,b
  6751  010EA2  0EFF               	movlw	255
  6752  010EA4  2332               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6753                           
  6754                           ; BSR set to: 1
  6755                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6756                           
  6757                           ; BSR set to: 1
  6758  010EA6  0101               	movlb	1	; () banked
  6759  010EA8  5131               	movf	sprintf@exp& (0+255),w,b
  6760  010EAA  EC1E  F094         	call	_scale
  6761  010EAE  C099  F133         	movff	?_scale,sprintf@tmpval
  6762  010EB2  C09A  F134         	movff	?_scale+1,sprintf@tmpval+1
  6763  010EB6  C09B  F135         	movff	?_scale+2,sprintf@tmpval+2
  6764  010EBA  C09C  F136         	movff	?_scale+3,sprintf@tmpval+3
  6765  010EBE  C139  F072         	movff	sprintf@fval,__div_to_l_@f1
  6766  010EC2  C13A  F073         	movff	sprintf@fval+1,__div_to_l_@f1+1
  6767  010EC6  C13B  F074         	movff	sprintf@fval+2,__div_to_l_@f1+2
  6768  010ECA  C13C  F075         	movff	sprintf@fval+3,__div_to_l_@f1+3
  6769  010ECE  C133  F076         	movff	sprintf@tmpval,__div_to_l_@f2
  6770  010ED2  C134  F077         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  6771  010ED6  C135  F078         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  6772  010EDA  C136  F079         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  6773  010EDE  EC50  F0A7         	call	__div_to_l_	;wreg free
  6774  010EE2  C072  F12D         	movff	?__div_to_l_,sprintf@val
  6775  010EE6  C073  F12E         	movff	?__div_to_l_+1,sprintf@val+1
  6776  010EEA  C074  F12F         	movff	?__div_to_l_+2,sprintf@val+2
  6777  010EEE  C075  F130         	movff	?__div_to_l_+3,sprintf@val+3
  6778                           
  6779                           ;doprnt.c: 1129: fval = 0.0;
  6780  010EF2  0E00               	movlw	0
  6781  010EF4  0101               	movlb	1	; () banked
  6782  010EF6  6F39               	movwf	sprintf@fval& (0+255),b
  6783  010EF8  0E00               	movlw	0
  6784  010EFA  6F3A               	movwf	(sprintf@fval+1)& (0+255),b
  6785  010EFC  0E00               	movlw	0
  6786  010EFE  6F3B               	movwf	(sprintf@fval+2)& (0+255),b
  6787  010F00  0E00               	movlw	0
  6788  010F02  6F3C               	movwf	(sprintf@fval+3)& (0+255),b
  6789                           
  6790                           ;doprnt.c: 1130: } else {
  6791  010F04  D03C               	goto	l8336
  6792  010F06                     l8332:
  6793                           
  6794                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6795  010F06  C139  F0BA         	movff	sprintf@fval,___fltol@f1
  6796  010F0A  C13A  F0BB         	movff	sprintf@fval+1,___fltol@f1+1
  6797  010F0E  C13B  F0BC         	movff	sprintf@fval+2,___fltol@f1+2
  6798  010F12  C13C  F0BD         	movff	sprintf@fval+3,___fltol@f1+3
  6799  010F16  EC71  F0A9         	call	___fltol	;wreg free
  6800  010F1A  C0BA  F12D         	movff	?___fltol,sprintf@val
  6801  010F1E  C0BB  F12E         	movff	?___fltol+1,sprintf@val+1
  6802  010F22  C0BC  F12F         	movff	?___fltol+2,sprintf@val+2
  6803  010F26  C0BD  F130         	movff	?___fltol+3,sprintf@val+3
  6804                           
  6805                           ;doprnt.c: 1132: fval -= (double)val;
  6806  010F2A  C139  F0BA         	movff	sprintf@fval,___flsub@b
  6807  010F2E  C13A  F0BB         	movff	sprintf@fval+1,___flsub@b+1
  6808  010F32  C13B  F0BC         	movff	sprintf@fval+2,___flsub@b+2
  6809  010F36  C13C  F0BD         	movff	sprintf@fval+3,___flsub@b+3
  6810  010F3A  C12D  F072         	movff	sprintf@val,___xxtofl@val
  6811  010F3E  C12E  F073         	movff	sprintf@val+1,___xxtofl@val+1
  6812  010F42  C12F  F074         	movff	sprintf@val+2,___xxtofl@val+2
  6813  010F46  C130  F075         	movff	sprintf@val+3,___xxtofl@val+3
  6814  010F4A  0E00               	movlw	0
  6815  010F4C  ECEF  F0A3         	call	___xxtofl
  6816  010F50  C072  F0BE         	movff	?___xxtofl,___flsub@a
  6817  010F54  C073  F0BF         	movff	?___xxtofl+1,___flsub@a+1
  6818  010F58  C074  F0C0         	movff	?___xxtofl+2,___flsub@a+2
  6819  010F5C  C075  F0C1         	movff	?___xxtofl+3,___flsub@a+3
  6820  010F60  EC67  F0AD         	call	___flsub	;wreg free
  6821  010F64  C0BA  F139         	movff	?___flsub,sprintf@fval
  6822  010F68  C0BB  F13A         	movff	?___flsub+1,sprintf@fval+1
  6823  010F6C  C0BC  F13B         	movff	?___flsub+2,sprintf@fval+2
  6824  010F70  C0BD  F13C         	movff	?___flsub+3,sprintf@fval+3
  6825                           
  6826                           ;doprnt.c: 1133: exp = 0;
  6827  010F74  0E00               	movlw	0
  6828  010F76  0101               	movlb	1	; () banked
  6829  010F78  6F32               	movwf	(sprintf@exp+1)& (0+255),b
  6830  010F7A  0E00               	movlw	0
  6831  010F7C  6F31               	movwf	sprintf@exp& (0+255),b
  6832  010F7E                     l8336:
  6833                           
  6834                           ; BSR set to: 1
  6835                           ;doprnt.c: 1134: }
  6836                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6837  010F7E  0E01               	movlw	1
  6838  010F80  0101               	movlb	1	; () banked
  6839  010F82  6F3D               	movwf	sprintf@c& (0+255),b
  6840  010F84                     l8338:
  6841                           
  6842                           ; BSR set to: 1
  6843  010F84  0E0A               	movlw	10
  6844  010F86  0101               	movlb	1	; () banked
  6845  010F88  193D               	xorwf	sprintf@c& (0+255),w,b
  6846  010F8A  B4D8               	btfsc	status,2,c
  6847  010F8C  D021               	goto	l8350
  6848                           
  6849                           ; BSR set to: 1
  6850                           ;doprnt.c: 1137: if(val < dpowers[c])
  6851                           
  6852                           ; BSR set to: 1
  6853                           
  6854                           ; BSR set to: 1
  6855  010F8E  0101               	movlb	1	; () banked
  6856  010F90  513D               	movf	sprintf@c& (0+255),w,b
  6857  010F92  0D04               	mullw	4
  6858  010F94  0E35               	movlw	low _dpowers
  6859  010F96  24F3               	addwf	prodl,w,c
  6860  010F98  6EF6               	movwf	tblptrl,c
  6861  010F9A  0EFF               	movlw	high _dpowers
  6862  010F9C  20F4               	addwfc	prodh,w,c
  6863  010F9E  6EF7               	movwf	tblptrh,c
  6864  010FA0                     	if	1	;There are 3 active tblptr bytes
  6865  010FA0  6AF8               	clrf	tblptru,c
  6866  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  6867  010FA4  22F8               	addwfc	tblptru,f,c
  6868  010FA6                     	endif
  6869  010FA6  0009               	tblrd		*+
  6870  010FA8  50F5               	movf	tablat,w,c
  6871  010FAA  0101               	movlb	1	; () banked
  6872  010FAC  5D2D               	subwf	sprintf@val& (0+255),w,b
  6873  010FAE  0009               	tblrd		*+
  6874  010FB0  50F5               	movf	tablat,w,c
  6875  010FB2  0101               	movlb	1	; () banked
  6876  010FB4  592E               	subwfb	(sprintf@val+1)& (0+255),w,b
  6877  010FB6  0009               	tblrd		*+
  6878  010FB8  50F5               	movf	tablat,w,c
  6879  010FBA  0101               	movlb	1	; () banked
  6880  010FBC  592F               	subwfb	(sprintf@val+2)& (0+255),w,b
  6881  010FBE  0009               	tblrd		*+
  6882  010FC0  50F5               	movf	tablat,w,c
  6883  010FC2  0101               	movlb	1	; () banked
  6884  010FC4  5930               	subwfb	(sprintf@val+3)& (0+255),w,b
  6885  010FC6  A0D8               	btfss	status,0,c
  6886  010FC8  D003               	goto	l8350
  6887                           
  6888                           ; BSR set to: 1
  6889                           
  6890                           ; BSR set to: 1
  6891                           
  6892                           ; BSR set to: 1
  6893                           ;doprnt.c: 1138: break;
  6894  010FCA  0101               	movlb	1	; () banked
  6895  010FCC  2B3D               	incf	sprintf@c& (0+255),f,b
  6896  010FCE  D7DA               	goto	l8338
  6897  010FD0                     l8350:
  6898                           
  6899                           ; BSR set to: 1
  6900                           ;doprnt.c: 1175: {
  6901                           ;doprnt.c: 1188: if(flag & 0x03)
  6902  010FD0  0E03               	movlw	3
  6903  010FD2  0101               	movlb	1	; () banked
  6904  010FD4  152B               	andwf	sprintf@flag& (0+255),w,b
  6905  010FD6  0101               	movlb	1	; () banked
  6906  010FD8  6F23               	movwf	??_sprintf& (0+255),b
  6907  010FDA  0E00               	movlw	0
  6908  010FDC  0101               	movlb	1	; () banked
  6909  010FDE  152C               	andwf	(sprintf@flag+1)& (0+255),w,b
  6910  010FE0  0101               	movlb	1	; () banked
  6911  010FE2  6F24               	movwf	(??_sprintf+1)& (0+255),b
  6912  010FE4  0101               	movlb	1	; () banked
  6913  010FE6  5123               	movf	??_sprintf& (0+255),w,b
  6914  010FE8  0101               	movlb	1	; () banked
  6915  010FEA  1124               	iorwf	(??_sprintf+1)& (0+255),w,b
  6916  010FEC  B4D8               	btfsc	status,2,c
  6917  010FEE  D058               	goto	l8364
  6918                           
  6919                           ; BSR set to: 1
  6920                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  6921  010FF0  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  6922  010FF4  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  6923  010FF8  0E2D               	movlw	45
  6924  010FFA  D050               	goto	L4
  6925  010FFC                     l8354:
  6926                           
  6927                           ; BSR set to: 1
  6928  010FFC  0100               	movlb	0	; () banked
  6929  010FFE  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  6930  011000  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;doprnt.c: 1195: }
  6934                           ;doprnt.c: 1196: while(c--) {
  6935  011002  D04E               	goto	l8364
  6936  011004                     l8356:
  6937                           
  6938                           ;doprnt.c: 1200: {
  6939                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  6940  011004  C12D  F072         	movff	sprintf@val,___lldiv@dividend
  6941  011008  C12E  F073         	movff	sprintf@val+1,___lldiv@dividend+1
  6942  01100C  C12F  F074         	movff	sprintf@val+2,___lldiv@dividend+2
  6943  011010  C130  F075         	movff	sprintf@val+3,___lldiv@dividend+3
  6944  011014  0101               	movlb	1	; () banked
  6945  011016  513D               	movf	sprintf@c& (0+255),w,b
  6946  011018  0D04               	mullw	4
  6947  01101A  0E35               	movlw	low _dpowers
  6948  01101C  24F3               	addwf	prodl,w,c
  6949  01101E  6EF6               	movwf	tblptrl,c
  6950  011020  0EFF               	movlw	high _dpowers
  6951  011022  20F4               	addwfc	prodh,w,c
  6952  011024  6EF7               	movwf	tblptrh,c
  6953  011026                     	if	1	;There are 3 active tblptr bytes
  6954  011026  6AF8               	clrf	tblptru,c
  6955  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  6956  01102A  22F8               	addwfc	tblptru,f,c
  6957  01102C                     	endif
  6958  01102C  0009               	tblrd		*+
  6959  01102E  CFF5 F076          	movff	tablat,___lldiv@divisor
  6960  011032  0009               	tblrd		*+
  6961  011034  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  6962  011038  0009               	tblrd		*+
  6963  01103A  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  6964  01103E  000A               	tblrd		*-
  6965  011040  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  6966  011044  ECCC  F0AA         	call	___lldiv	;wreg free
  6967  011048  C072  F133         	movff	?___lldiv,sprintf@tmpval
  6968  01104C  C073  F134         	movff	?___lldiv+1,sprintf@tmpval+1
  6969  011050  C074  F135         	movff	?___lldiv+2,sprintf@tmpval+2
  6970  011054  C075  F136         	movff	?___lldiv+3,sprintf@tmpval+3
  6971                           
  6972                           ;doprnt.c: 1202: tmpval.vd %= 10;
  6973  011058  C133  F072         	movff	sprintf@tmpval,___llmod@dividend
  6974  01105C  C134  F073         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6975  011060  C135  F074         	movff	sprintf@tmpval+2,___llmod@dividend+2
  6976  011064  C136  F075         	movff	sprintf@tmpval+3,___llmod@dividend+3
  6977  011068  0E0A               	movlw	10
  6978  01106A  0100               	movlb	0	; () banked
  6979  01106C  6F76               	movwf	___llmod@divisor& (0+255),b
  6980  01106E  0E00               	movlw	0
  6981  011070  6F77               	movwf	(___llmod@divisor+1)& (0+255),b
  6982  011072  0E00               	movlw	0
  6983  011074  6F78               	movwf	(___llmod@divisor+2)& (0+255),b
  6984  011076  0E00               	movlw	0
  6985  011078  6F79               	movwf	(___llmod@divisor+3)& (0+255),b
  6986  01107A  EC7F  F0AC         	call	___llmod	;wreg free
  6987  01107E  C072  F133         	movff	?___llmod,sprintf@tmpval
  6988  011082  C073  F134         	movff	?___llmod+1,sprintf@tmpval+1
  6989  011086  C074  F135         	movff	?___llmod+2,sprintf@tmpval+2
  6990  01108A  C075  F136         	movff	?___llmod+3,sprintf@tmpval+3
  6991                           
  6992                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  6993  01108E  0101               	movlb	1	; () banked
  6994  011090  5133               	movf	sprintf@tmpval& (0+255),w,b
  6995  011092  0F30               	addlw	48
  6996  011094  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  6997  011098  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  6998  01109C                     L4:
  6999  01109C  6EDF               	movwf	indf2,c
  7000  01109E  D7AE               	goto	l8354
  7001  0110A0                     l8364:
  7002  0110A0  0101               	movlb	1	; () banked
  7003  0110A2  073D               	decf	sprintf@c& (0+255),f,b
  7004  0110A4  0101               	movlb	1	; () banked
  7005  0110A6  293D               	incf	sprintf@c& (0+255),w,b
  7006  0110A8  B4D8               	btfsc	status,2,c
  7007  0110AA  D00E               	goto	l8372
  7008  0110AC  D7AB               	goto	l8356
  7009  0110AE                     l8366:
  7010                           
  7011                           ; BSR set to: 1
  7012                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7013  0110AE  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7014  0110B2  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7015  0110B6  0E30               	movlw	48
  7016  0110B8  6EDF               	movwf	indf2,c
  7017                           
  7018                           ; BSR set to: 1
  7019  0110BA  0100               	movlb	0	; () banked
  7020  0110BC  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  7021  0110BE  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  7022                           
  7023                           ; BSR set to: 0
  7024                           ;doprnt.c: 1209: exp--;
  7025  0110C0  0101               	movlb	1	; () banked
  7026  0110C2  0731               	decf	sprintf@exp& (0+255),f,b
  7027  0110C4  A0D8               	btfss	status,0,c
  7028  0110C6  0732               	decf	(sprintf@exp+1)& (0+255),f,b
  7029  0110C8                     l8372:
  7030                           
  7031                           ; BSR set to: 1
  7032  0110C8  0101               	movlb	1	; () banked
  7033  0110CA  BF32               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7034  0110CC  D007               	goto	l8374
  7035  0110CE  0101               	movlb	1	; () banked
  7036  0110D0  5132               	movf	(sprintf@exp+1)& (0+255),w,b
  7037  0110D2  E1ED               	bnz	l8366
  7038  0110D4  0101               	movlb	1	; () banked
  7039  0110D6  0531               	decf	sprintf@exp& (0+255),w,b
  7040  0110D8  B0D8               	btfsc	status,0,c
  7041  0110DA  D7E9               	goto	l8366
  7042  0110DC                     l8374:
  7043                           
  7044                           ; BSR set to: 1
  7045                           ;doprnt.c: 1210: }
  7046                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7047  0110DC  0101               	movlb	1	; () banked
  7048  0110DE  BF38               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7049  0110E0  D00C               	goto	l954
  7050  0110E2  0101               	movlb	1	; () banked
  7051  0110E4  5138               	movf	(sprintf@prec+1)& (0+255),w,b
  7052  0110E6  E105               	bnz	u11100
  7053  0110E8  0E09               	movlw	9
  7054  0110EA  0101               	movlb	1	; () banked
  7055  0110EC  5D37               	subwf	sprintf@prec& (0+255),w,b
  7056  0110EE  A0D8               	btfss	status,0,c
  7057  0110F0  D004               	goto	l954
  7058  0110F2                     u11100:
  7059                           
  7060                           ; BSR set to: 1
  7061                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7062  0110F2  0E08               	movlw	8
  7063  0110F4  0101               	movlb	1	; () banked
  7064  0110F6  6F3D               	movwf	sprintf@c& (0+255),b
  7065  0110F8  D002               	goto	l8378
  7066  0110FA                     l954:
  7067                           
  7068                           ; BSR set to: 1
  7069                           ;doprnt.c: 1213: else
  7070                           ;doprnt.c: 1214: c = prec;
  7071  0110FA  C137  F13D         	movff	sprintf@prec,sprintf@c
  7072  0110FE                     l8378:
  7073                           
  7074                           ; BSR set to: 1
  7075                           ;doprnt.c: 1215: prec -= c;
  7076  0110FE  0101               	movlb	1	; () banked
  7077  011100  513D               	movf	sprintf@c& (0+255),w,b
  7078  011102  0101               	movlb	1	; () banked
  7079  011104  5F37               	subwf	sprintf@prec& (0+255),f,b
  7080  011106  0E00               	movlw	0
  7081  011108  0101               	movlb	1	; () banked
  7082  01110A  BF3D               	btfsc	sprintf@c& (0+255),7,b
  7083  01110C  0EFF               	movlw	255
  7084  01110E  0101               	movlb	1	; () banked
  7085  011110  5B38               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7086                           
  7087                           ; BSR set to: 1
  7088                           ;doprnt.c: 1219: if(c)
  7089  011112  0101               	movlb	1	; () banked
  7090  011114  513D               	movf	sprintf@c& (0+255),w,b
  7091  011116  0101               	movlb	1	; () banked
  7092  011118  B4D8               	btfsc	status,2,c
  7093  01111A  D009               	goto	l8386
  7094                           
  7095                           ; BSR set to: 1
  7096                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7097  01111C  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7098  011120  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7099  011124  0E2E               	movlw	46
  7100  011126  6EDF               	movwf	indf2,c
  7101                           
  7102                           ; BSR set to: 1
  7103  011128  0100               	movlb	0	; () banked
  7104  01112A  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  7105  01112C  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  7106  01112E                     l8386:
  7107                           
  7108                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7109  01112E  0101               	movlb	1	; () banked
  7110  011130  513D               	movf	sprintf@c& (0+255),w,b
  7111  011132  EC1E  F094         	call	_scale
  7112  011136  C099  F125         	movff	?_scale,_sprintf$4215
  7113  01113A  C09A  F126         	movff	?_scale+1,_sprintf$4215+1
  7114  01113E  C09B  F127         	movff	?_scale+2,_sprintf$4215+2
  7115  011142  C09C  F128         	movff	?_scale+3,_sprintf$4215+3
  7116                           
  7117                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7118  011146  C139  F084         	movff	sprintf@fval,___flmul@a
  7119  01114A  C13A  F085         	movff	sprintf@fval+1,___flmul@a+1
  7120  01114E  C13B  F086         	movff	sprintf@fval+2,___flmul@a+2
  7121  011152  C13C  F087         	movff	sprintf@fval+3,___flmul@a+3
  7122  011156  C125  F080         	movff	_sprintf$4215,___flmul@b
  7123  01115A  C126  F081         	movff	_sprintf$4215+1,___flmul@b+1
  7124  01115E  C127  F082         	movff	_sprintf$4215+2,___flmul@b+2
  7125  011162  C128  F083         	movff	_sprintf$4215+3,___flmul@b+3
  7126  011166  EC85  F09B         	call	___flmul	;wreg free
  7127  01116A  C080  F0BA         	movff	?___flmul,___fltol@f1
  7128  01116E  C081  F0BB         	movff	?___flmul+1,___fltol@f1+1
  7129  011172  C082  F0BC         	movff	?___flmul+2,___fltol@f1+2
  7130  011176  C083  F0BD         	movff	?___flmul+3,___fltol@f1+3
  7131  01117A  EC71  F0A9         	call	___fltol	;wreg free
  7132  01117E  C0BA  F12D         	movff	?___fltol,sprintf@val
  7133  011182  C0BB  F12E         	movff	?___fltol+1,sprintf@val+1
  7134  011186  C0BC  F12F         	movff	?___fltol+2,sprintf@val+2
  7135  01118A  C0BD  F130         	movff	?___fltol+3,sprintf@val+3
  7136                           
  7137                           ;doprnt.c: 1228: while(c--) {
  7138  01118E  D07A               	goto	l8400
  7139  011190                     l8390:
  7140                           
  7141                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7142  011190  C12D  F072         	movff	sprintf@val,___lldiv@dividend
  7143  011194  C12E  F073         	movff	sprintf@val+1,___lldiv@dividend+1
  7144  011198  C12F  F074         	movff	sprintf@val+2,___lldiv@dividend+2
  7145  01119C  C130  F075         	movff	sprintf@val+3,___lldiv@dividend+3
  7146  0111A0  0101               	movlb	1	; () banked
  7147  0111A2  513D               	movf	sprintf@c& (0+255),w,b
  7148  0111A4  0D04               	mullw	4
  7149  0111A6  0E35               	movlw	low _dpowers
  7150  0111A8  24F3               	addwf	prodl,w,c
  7151  0111AA  6EF6               	movwf	tblptrl,c
  7152  0111AC  0EFF               	movlw	high _dpowers
  7153  0111AE  20F4               	addwfc	prodh,w,c
  7154  0111B0  6EF7               	movwf	tblptrh,c
  7155  0111B2                     	if	1	;There are 3 active tblptr bytes
  7156  0111B2  6AF8               	clrf	tblptru,c
  7157  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  7158  0111B6  22F8               	addwfc	tblptru,f,c
  7159  0111B8                     	endif
  7160  0111B8  0009               	tblrd		*+
  7161  0111BA  CFF5 F076          	movff	tablat,___lldiv@divisor
  7162  0111BE  0009               	tblrd		*+
  7163  0111C0  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  7164  0111C4  0009               	tblrd		*+
  7165  0111C6  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  7166  0111CA  000A               	tblrd		*-
  7167  0111CC  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  7168  0111D0  ECCC  F0AA         	call	___lldiv	;wreg free
  7169  0111D4  C072  F133         	movff	?___lldiv,sprintf@tmpval
  7170  0111D8  C073  F134         	movff	?___lldiv+1,sprintf@tmpval+1
  7171  0111DC  C074  F135         	movff	?___lldiv+2,sprintf@tmpval+2
  7172  0111E0  C075  F136         	movff	?___lldiv+3,sprintf@tmpval+3
  7173                           
  7174                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7175  0111E4  C133  F072         	movff	sprintf@tmpval,___llmod@dividend
  7176  0111E8  C134  F073         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7177  0111EC  C135  F074         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7178  0111F0  C136  F075         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7179  0111F4  0E0A               	movlw	10
  7180  0111F6  0100               	movlb	0	; () banked
  7181  0111F8  6F76               	movwf	___llmod@divisor& (0+255),b
  7182  0111FA  0E00               	movlw	0
  7183  0111FC  6F77               	movwf	(___llmod@divisor+1)& (0+255),b
  7184  0111FE  0E00               	movlw	0
  7185  011200  6F78               	movwf	(___llmod@divisor+2)& (0+255),b
  7186  011202  0E00               	movlw	0
  7187  011204  6F79               	movwf	(___llmod@divisor+3)& (0+255),b
  7188  011206  EC7F  F0AC         	call	___llmod	;wreg free
  7189  01120A  C072  F133         	movff	?___llmod,sprintf@tmpval
  7190  01120E  C073  F134         	movff	?___llmod+1,sprintf@tmpval+1
  7191  011212  C074  F135         	movff	?___llmod+2,sprintf@tmpval+2
  7192  011216  C075  F136         	movff	?___llmod+3,sprintf@tmpval+3
  7193                           
  7194                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7195  01121A  0101               	movlb	1	; () banked
  7196  01121C  5133               	movf	sprintf@tmpval& (0+255),w,b
  7197  01121E  0F30               	addlw	48
  7198  011220  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7199  011224  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7200  011228  6EDF               	movwf	indf2,c
  7201                           
  7202                           ; BSR set to: 1
  7203  01122A  0100               	movlb	0	; () banked
  7204  01122C  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  7205  01122E  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;doprnt.c: 1232: val %= dpowers[c];
  7209  011230  C12D  F072         	movff	sprintf@val,___llmod@dividend
  7210  011234  C12E  F073         	movff	sprintf@val+1,___llmod@dividend+1
  7211  011238  C12F  F074         	movff	sprintf@val+2,___llmod@dividend+2
  7212  01123C  C130  F075         	movff	sprintf@val+3,___llmod@dividend+3
  7213  011240  0101               	movlb	1	; () banked
  7214  011242  513D               	movf	sprintf@c& (0+255),w,b
  7215  011244  0D04               	mullw	4
  7216  011246  0E35               	movlw	low _dpowers
  7217  011248  24F3               	addwf	prodl,w,c
  7218  01124A  6EF6               	movwf	tblptrl,c
  7219  01124C  0EFF               	movlw	high _dpowers
  7220  01124E  20F4               	addwfc	prodh,w,c
  7221  011250  6EF7               	movwf	tblptrh,c
  7222  011252                     	if	1	;There are 3 active tblptr bytes
  7223  011252  6AF8               	clrf	tblptru,c
  7224  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  7225  011256  22F8               	addwfc	tblptru,f,c
  7226  011258                     	endif
  7227  011258  0009               	tblrd		*+
  7228  01125A  CFF5 F076          	movff	tablat,___llmod@divisor
  7229  01125E  0009               	tblrd		*+
  7230  011260  CFF5 F077          	movff	tablat,___llmod@divisor+1
  7231  011264  0009               	tblrd		*+
  7232  011266  CFF5 F078          	movff	tablat,___llmod@divisor+2
  7233  01126A  000A               	tblrd		*-
  7234  01126C  CFF5 F079          	movff	tablat,___llmod@divisor+3
  7235  011270  EC7F  F0AC         	call	___llmod	;wreg free
  7236  011274  C072  F12D         	movff	?___llmod,sprintf@val
  7237  011278  C073  F12E         	movff	?___llmod+1,sprintf@val+1
  7238  01127C  C074  F12F         	movff	?___llmod+2,sprintf@val+2
  7239  011280  C075  F130         	movff	?___llmod+3,sprintf@val+3
  7240  011284                     l8400:
  7241  011284  0101               	movlb	1	; () banked
  7242  011286  073D               	decf	sprintf@c& (0+255),f,b
  7243  011288  0101               	movlb	1	; () banked
  7244  01128A  293D               	incf	sprintf@c& (0+255),w,b
  7245  01128C  B4D8               	btfsc	status,2,c
  7246  01128E  D00E               	goto	l8408
  7247  011290  D77F               	goto	l8390
  7248  011292                     l8402:
  7249                           
  7250                           ; BSR set to: 1
  7251                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7252  011292  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7253  011296  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7254  01129A  0E30               	movlw	48
  7255  01129C  6EDF               	movwf	indf2,c
  7256                           
  7257                           ; BSR set to: 1
  7258  01129E  0100               	movlb	0	; () banked
  7259  0112A0  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  7260  0112A2  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  7261                           
  7262                           ; BSR set to: 0
  7263                           ;doprnt.c: 1237: prec--;
  7264  0112A4  0101               	movlb	1	; () banked
  7265  0112A6  0737               	decf	sprintf@prec& (0+255),f,b
  7266  0112A8  A0D8               	btfss	status,0,c
  7267  0112AA  0738               	decf	(sprintf@prec+1)& (0+255),f,b
  7268  0112AC                     l8408:
  7269                           
  7270                           ; BSR set to: 1
  7271  0112AC  0101               	movlb	1	; () banked
  7272  0112AE  5137               	movf	sprintf@prec& (0+255),w,b
  7273  0112B0  0101               	movlb	1	; () banked
  7274  0112B2  1138               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7275  0112B4  B4D8               	btfsc	status,2,c
  7276  0112B6  D059               	goto	l8430
  7277  0112B8  D7EC               	goto	l8402
  7278  0112BA                     l8410:
  7279                           
  7280                           ; BSR set to: 1
  7281                           ;doprnt.c: 1246: }
  7282                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7283  0112BA  0101               	movlb	1	; () banked
  7284  0112BC  5137               	movf	sprintf@prec& (0+255),w,b
  7285  0112BE  0101               	movlb	1	; () banked
  7286  0112C0  1138               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7287  0112C2  A4D8               	btfss	status,2,c
  7288  0112C4  D00D               	goto	l8416
  7289                           
  7290                           ; BSR set to: 1
  7291  0112C6  0101               	movlb	1	; () banked
  7292  0112C8  512D               	movf	sprintf@val& (0+255),w,b
  7293  0112CA  0101               	movlb	1	; () banked
  7294  0112CC  112E               	iorwf	(sprintf@val+1)& (0+255),w,b
  7295  0112CE  0101               	movlb	1	; () banked
  7296  0112D0  112F               	iorwf	(sprintf@val+2)& (0+255),w,b
  7297  0112D2  0101               	movlb	1	; () banked
  7298  0112D4  1130               	iorwf	(sprintf@val+3)& (0+255),w,b
  7299  0112D6  A4D8               	btfss	status,2,c
  7300  0112D8  D003               	goto	l8416
  7301                           
  7302                           ; BSR set to: 1
  7303                           ;doprnt.c: 1291: prec++;
  7304  0112DA  0101               	movlb	1	; () banked
  7305  0112DC  4B37               	infsnz	sprintf@prec& (0+255),f,b
  7306  0112DE  2B38               	incf	(sprintf@prec+1)& (0+255),f,b
  7307  0112E0                     l8416:
  7308                           
  7309                           ; BSR set to: 1
  7310                           ;doprnt.c: 1339: if(c < prec)
  7311  0112E0  0E80               	movlw	128
  7312  0112E2  0101               	movlb	1	; () banked
  7313  0112E4  BF3D               	btfsc	sprintf@c& (0+255),7,b
  7314  0112E6  0E7F               	movlw	127
  7315  0112E8  0101               	movlb	1	; () banked
  7316  0112EA  6F23               	movwf	??_sprintf& (0+255),b
  7317  0112EC  0101               	movlb	1	; () banked
  7318  0112EE  5137               	movf	sprintf@prec& (0+255),w,b
  7319  0112F0  0101               	movlb	1	; () banked
  7320  0112F2  5D3D               	subwf	sprintf@c& (0+255),w,b
  7321  0112F4  0101               	movlb	1	; () banked
  7322  0112F6  5138               	movf	(sprintf@prec+1)& (0+255),w,b
  7323  0112F8  0A80               	xorlw	128
  7324  0112FA  0101               	movlb	1	; () banked
  7325  0112FC  5923               	subwfb	??_sprintf& (0+255),w,b
  7326  0112FE  B0D8               	btfsc	status,0,c
  7327  011300  D003               	goto	l8420
  7328                           
  7329                           ; BSR set to: 1
  7330                           ;doprnt.c: 1340: c = prec;
  7331  011302  C137  F13D         	movff	sprintf@prec,sprintf@c
  7332  011306  D018               	goto	l8424
  7333  011308                     l8420:
  7334                           
  7335                           ; BSR set to: 1
  7336                           ;doprnt.c: 1341: else if(prec < c)
  7337  011308  0101               	movlb	1	; () banked
  7338  01130A  5138               	movf	(sprintf@prec+1)& (0+255),w,b
  7339  01130C  0A80               	xorlw	128
  7340  01130E  0101               	movlb	1	; () banked
  7341  011310  6F23               	movwf	??_sprintf& (0+255),b
  7342  011312  0101               	movlb	1	; () banked
  7343  011314  513D               	movf	sprintf@c& (0+255),w,b
  7344  011316  0101               	movlb	1	; () banked
  7345  011318  5D37               	subwf	sprintf@prec& (0+255),w,b
  7346  01131A  0E80               	movlw	128
  7347  01131C  0101               	movlb	1	; () banked
  7348  01131E  BF3D               	btfsc	sprintf@c& (0+255),7,b
  7349  011320  0E7F               	movlw	127
  7350  011322  0101               	movlb	1	; () banked
  7351  011324  5923               	subwfb	??_sprintf& (0+255),w,b
  7352  011326  B0D8               	btfsc	status,0,c
  7353  011328  D007               	goto	l8424
  7354                           
  7355                           ; BSR set to: 1
  7356                           ;doprnt.c: 1342: prec = c;
  7357  01132A  0101               	movlb	1	; () banked
  7358  01132C  513D               	movf	sprintf@c& (0+255),w,b
  7359  01132E  0101               	movlb	1	; () banked
  7360  011330  6F37               	movwf	sprintf@prec& (0+255),b
  7361  011332  6B38               	clrf	(sprintf@prec+1)& (0+255),b
  7362  011334  BF37               	btfsc	sprintf@prec& (0+255),7,b
  7363  011336  0738               	decf	(sprintf@prec+1)& (0+255),f,b
  7364  011338                     l8424:
  7365                           
  7366                           ; BSR set to: 1
  7367                           ;doprnt.c: 1422: {
  7368                           ;doprnt.c: 1438: if(flag & 0x03)
  7369  011338  0E03               	movlw	3
  7370  01133A  0101               	movlb	1	; () banked
  7371  01133C  152B               	andwf	sprintf@flag& (0+255),w,b
  7372  01133E  0101               	movlb	1	; () banked
  7373  011340  6F23               	movwf	??_sprintf& (0+255),b
  7374  011342  0E00               	movlw	0
  7375  011344  0101               	movlb	1	; () banked
  7376  011346  152C               	andwf	(sprintf@flag+1)& (0+255),w,b
  7377  011348  0101               	movlb	1	; () banked
  7378  01134A  6F24               	movwf	(??_sprintf+1)& (0+255),b
  7379  01134C  0101               	movlb	1	; () banked
  7380  01134E  5123               	movf	??_sprintf& (0+255),w,b
  7381  011350  0101               	movlb	1	; () banked
  7382  011352  1124               	iorwf	(??_sprintf+1)& (0+255),w,b
  7383  011354  B4D8               	btfsc	status,2,c
  7384  011356  D009               	goto	l8430
  7385                           
  7386                           ; BSR set to: 1
  7387                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7388  011358  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7389  01135C  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7390  011360  0E2D               	movlw	45
  7391  011362  6EDF               	movwf	indf2,c
  7392  011364                     l8428:
  7393                           
  7394                           ; BSR set to: 1
  7395  011364  0100               	movlb	0	; () banked
  7396  011366  4BC4               	infsnz	sprintf@sp& (0+255),f,b
  7397  011368  2BC5               	incf	(sprintf@sp+1)& (0+255),f,b
  7398  01136A                     l8430:
  7399  01136A  C0C6  FFF6         	movff	sprintf@f,tblptrl
  7400  01136E  C0C7  FFF7         	movff	sprintf@f+1,tblptrh
  7401  011372  0100               	movlb	0	; () banked
  7402  011374  4BC6               	infsnz	sprintf@f& (0+255),f,b
  7403  011376  2BC7               	incf	(sprintf@f+1)& (0+255),f,b
  7404  011378                     	if	0	;tblptru may be non-zero
  7405  011378                     	endif
  7406  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7407  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  7408  01137A  6EF8               	movwf	tblptru,c
  7409  01137C                     	endif
  7410  01137C  0008               	tblrd		*
  7411  01137E  CFF5 F13D          	movff	tablat,sprintf@c
  7412  011382  0101               	movlb	1	; () banked
  7413  011384  513D               	movf	sprintf@c& (0+255),w,b
  7414  011386  A4D8               	btfss	status,2,c
  7415  011388  EF8B  F085         	goto	l8232
  7416  01138C                     l8432:
  7417                           
  7418                           ; BSR set to: 1
  7419                           ;doprnt.c: 1538: *sp = 0;
  7420  01138C  C0C4  FFD9         	movff	sprintf@sp,fsr2l
  7421  011390  C0C5  FFDA         	movff	sprintf@sp+1,fsr2h
  7422  011394  0E00               	movlw	0
  7423  011396  6EDF               	movwf	indf2,c
  7424  011398  0012               	return	
  7425  01139A                     __end_of_sprintf:
  7426                           	opt stack 0
  7427                           tblptru	equ	0xFF8
  7428                           tblptrh	equ	0xFF7
  7429                           tblptrl	equ	0xFF6
  7430                           tablat	equ	0xFF5
  7431                           prodh	equ	0xFF4
  7432                           prodl	equ	0xFF3
  7433                           intcon	equ	0xFF2
  7434                           postinc0	equ	0xFEE
  7435                           wreg	equ	0xFE8
  7436                           indf2	equ	0xFDF
  7437                           postinc2	equ	0xFDE
  7438                           fsr2h	equ	0xFDA
  7439                           fsr2l	equ	0xFD9
  7440                           status	equ	0xFD8
  7441                           
  7442 ;; *************** function _scale *****************
  7443 ;; Defined at:
  7444 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;  scl             1    wreg     char 
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;  scl             1   65[BANK0 ] char 
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  4   57[BANK0 ] char 
  7451 ;; Registers used:
  7452 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7458 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7459 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7461 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7462 ;;Total ram usage:        9 bytes
  7463 ;; Hardware stack levels used:    1
  7464 ;; Hardware stack levels required when called:    4
  7465 ;; This function calls:
  7466 ;;		___awdiv
  7467 ;;		___awmod
  7468 ;;		___flmul
  7469 ;; This function is called by:
  7470 ;;		_sprintf
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           
  7474                           	psect	text9
  7475  01283C                     __ptext9:
  7476                           	opt stack 0
  7477  01283C                     _scale:
  7478                           	opt stack 24
  7479                           
  7480                           ; BSR set to: 1
  7481                           ;incstack = 0
  7482                           ;scale@scl stored from wreg
  7483  01283C  0100               	movlb	0	; () banked
  7484  01283E  6FA1               	movwf	scale@scl& (0+255),b
  7485                           
  7486                           ;doprnt.c: 428: if(scl < 0) {
  7487  012840  0100               	movlb	0	; () banked
  7488  012842  AFA1               	btfss	scale@scl& (0+255),7,b
  7489  012844  D145               	goto	l7864
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;doprnt.c: 429: scl = -scl;
  7493  012846  0100               	movlb	0	; () banked
  7494  012848  6DA1               	negf	scale@scl& (0+255),b
  7495                           
  7496                           ;doprnt.c: 430: if(scl>=110)
  7497  01284A  0100               	movlb	0	; () banked
  7498  01284C  51A1               	movf	scale@scl& (0+255),w,b
  7499  01284E  0A80               	xorlw	128
  7500  012850  0F12               	addlw	-238
  7501  012852  A0D8               	btfss	status,0,c
  7502  012854  D0BB               	goto	l7854
  7503                           
  7504                           ; BSR set to: 0
  7505                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7506  012856  0E00               	movlw	0
  7507  012858  0100               	movlb	0	; () banked
  7508  01285A  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7509  01285C  0E0A               	movlw	10
  7510  01285E  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7511  012860  0E00               	movlw	0
  7512  012862  0100               	movlb	0	; () banked
  7513  012864  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7514  012866  0E64               	movlw	100
  7515  012868  6F74               	movwf	___awmod@divisor& (0+255),b
  7516  01286A  0100               	movlb	0	; () banked
  7517  01286C  51A1               	movf	scale@scl& (0+255),w,b
  7518  01286E  0100               	movlb	0	; () banked
  7519  012870  6F72               	movwf	___awmod@dividend& (0+255),b
  7520  012872  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7521  012874  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7522  012876  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7523  012878  EC2E  F0AC         	call	___awmod	;wreg free
  7524  01287C  C072  F078         	movff	?___awmod,___awdiv@dividend
  7525  012880  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  7526  012884  EC6D  F0AA         	call	___awdiv	;wreg free
  7527  012888  0100               	movlb	0	; () banked
  7528  01288A  90D8               	bcf	status,0,c
  7529  01288C  3778               	rlcf	?___awdiv& (0+255),f,b
  7530  01288E  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7531  012890  0100               	movlb	0	; () banked
  7532  012892  90D8               	bcf	status,0,c
  7533  012894  3778               	rlcf	?___awdiv& (0+255),f,b
  7534  012896  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7535  012898  0E24               	movlw	36
  7536  01289A  0100               	movlb	0	; () banked
  7537  01289C  2778               	addwf	?___awdiv& (0+255),f,b
  7538  01289E  0E00               	movlw	0
  7539  0128A0  0100               	movlb	0	; () banked
  7540  0128A2  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7541  0128A4  0ECD               	movlw	low __npowers_
  7542  0128A6  0100               	movlb	0	; () banked
  7543  0128A8  2578               	addwf	?___awdiv& (0+255),w,b
  7544  0128AA  6EF6               	movwf	tblptrl,c
  7545  0128AC  0EFE               	movlw	high __npowers_
  7546  0128AE  0100               	movlb	0	; () banked
  7547  0128B0  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7548  0128B2  6EF7               	movwf	tblptrh,c
  7549  0128B4                     	if	1	;There are 3 active tblptr bytes
  7550  0128B4  6AF8               	clrf	tblptru,c
  7551  0128B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7552  0128B8  22F8               	addwfc	tblptru,f,c
  7553  0128BA                     	endif
  7554  0128BA  0009               	tblrd		*+
  7555  0128BC  CFF5 F084          	movff	tablat,___flmul@a
  7556  0128C0  0009               	tblrd		*+
  7557  0128C2  CFF5 F085          	movff	tablat,___flmul@a+1
  7558  0128C6  0009               	tblrd		*+
  7559  0128C8  CFF5 F086          	movff	tablat,___flmul@a+2
  7560  0128CC  000A               	tblrd		*-
  7561  0128CE  CFF5 F087          	movff	tablat,___flmul@a+3
  7562  0128D2  0E00               	movlw	0
  7563  0128D4  0100               	movlb	0	; () banked
  7564  0128D6  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7565  0128D8  0E64               	movlw	100
  7566  0128DA  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7567  0128DC  0100               	movlb	0	; () banked
  7568  0128DE  51A1               	movf	scale@scl& (0+255),w,b
  7569  0128E0  0100               	movlb	0	; () banked
  7570  0128E2  6F78               	movwf	___awdiv@dividend& (0+255),b
  7571  0128E4  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  7572  0128E6  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  7573  0128E8  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7574  0128EA  EC6D  F0AA         	call	___awdiv	;wreg free
  7575  0128EE  0100               	movlb	0	; () banked
  7576  0128F0  90D8               	bcf	status,0,c
  7577  0128F2  3778               	rlcf	?___awdiv& (0+255),f,b
  7578  0128F4  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7579  0128F6  0100               	movlb	0	; () banked
  7580  0128F8  90D8               	bcf	status,0,c
  7581  0128FA  3778               	rlcf	?___awdiv& (0+255),f,b
  7582  0128FC  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7583  0128FE  0E48               	movlw	72
  7584  012900  0100               	movlb	0	; () banked
  7585  012902  2778               	addwf	?___awdiv& (0+255),f,b
  7586  012904  0E00               	movlw	0
  7587  012906  0100               	movlb	0	; () banked
  7588  012908  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7589  01290A  0ECD               	movlw	low __npowers_
  7590  01290C  0100               	movlb	0	; () banked
  7591  01290E  2578               	addwf	?___awdiv& (0+255),w,b
  7592  012910  6EF6               	movwf	tblptrl,c
  7593  012912  0EFE               	movlw	high __npowers_
  7594  012914  0100               	movlb	0	; () banked
  7595  012916  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7596  012918  6EF7               	movwf	tblptrh,c
  7597  01291A                     	if	1	;There are 3 active tblptr bytes
  7598  01291A  6AF8               	clrf	tblptru,c
  7599  01291C  0E00               	movlw	low (__mediumconst shr (0+16))
  7600  01291E  22F8               	addwfc	tblptru,f,c
  7601  012920                     	endif
  7602  012920  0009               	tblrd		*+
  7603  012922  CFF5 F080          	movff	tablat,___flmul@b
  7604  012926  0009               	tblrd		*+
  7605  012928  CFF5 F081          	movff	tablat,___flmul@b+1
  7606  01292C  0009               	tblrd		*+
  7607  01292E  CFF5 F082          	movff	tablat,___flmul@b+2
  7608  012932  000A               	tblrd		*-
  7609  012934  CFF5 F083          	movff	tablat,___flmul@b+3
  7610  012938  EC85  F09B         	call	___flmul	;wreg free
  7611  01293C  C080  F09D         	movff	?___flmul,_scale$4214
  7612  012940  C081  F09E         	movff	?___flmul+1,_scale$4214+1
  7613  012944  C082  F09F         	movff	?___flmul+2,_scale$4214+2
  7614  012948  C083  F0A0         	movff	?___flmul+3,_scale$4214+3
  7615                           
  7616                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7617  01294C  C09D  F080         	movff	_scale$4214,___flmul@b
  7618  012950  C09E  F081         	movff	_scale$4214+1,___flmul@b+1
  7619  012954  C09F  F082         	movff	_scale$4214+2,___flmul@b+2
  7620  012958  C0A0  F083         	movff	_scale$4214+3,___flmul@b+3
  7621  01295C  0E00               	movlw	0
  7622  01295E  0100               	movlb	0	; () banked
  7623  012960  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7624  012962  0E0A               	movlw	10
  7625  012964  6F74               	movwf	___awmod@divisor& (0+255),b
  7626  012966  0100               	movlb	0	; () banked
  7627  012968  51A1               	movf	scale@scl& (0+255),w,b
  7628  01296A  0100               	movlb	0	; () banked
  7629  01296C  6F72               	movwf	___awmod@dividend& (0+255),b
  7630  01296E  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7631  012970  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7632  012972  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7633  012974  EC2E  F0AC         	call	___awmod	;wreg free
  7634  012978  0100               	movlb	0	; () banked
  7635  01297A  90D8               	bcf	status,0,c
  7636  01297C  3772               	rlcf	?___awmod& (0+255),f,b
  7637  01297E  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7638  012980  0100               	movlb	0	; () banked
  7639  012982  90D8               	bcf	status,0,c
  7640  012984  3772               	rlcf	?___awmod& (0+255),f,b
  7641  012986  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7642  012988  0ECD               	movlw	low __npowers_
  7643  01298A  0100               	movlb	0	; () banked
  7644  01298C  2572               	addwf	?___awmod& (0+255),w,b
  7645  01298E  6EF6               	movwf	tblptrl,c
  7646  012990  0EFE               	movlw	high __npowers_
  7647  012992  0100               	movlb	0	; () banked
  7648  012994  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  7649  012996  6EF7               	movwf	tblptrh,c
  7650  012998                     	if	1	;There are 3 active tblptr bytes
  7651  012998  6AF8               	clrf	tblptru,c
  7652  01299A  0E00               	movlw	low (__mediumconst shr (0+16))
  7653  01299C  22F8               	addwfc	tblptru,f,c
  7654  01299E                     	endif
  7655  01299E  0009               	tblrd		*+
  7656  0129A0  CFF5 F084          	movff	tablat,___flmul@a
  7657  0129A4  0009               	tblrd		*+
  7658  0129A6  CFF5 F085          	movff	tablat,___flmul@a+1
  7659  0129AA  0009               	tblrd		*+
  7660  0129AC  CFF5 F086          	movff	tablat,___flmul@a+2
  7661  0129B0  000A               	tblrd		*-
  7662  0129B2  CFF5 F087          	movff	tablat,___flmul@a+3
  7663  0129B6  EC85  F09B         	call	___flmul	;wreg free
  7664  0129BA  C080  F099         	movff	?___flmul,?_scale
  7665  0129BE  C081  F09A         	movff	?___flmul+1,?_scale+1
  7666  0129C2  C082  F09B         	movff	?___flmul+2,?_scale+2
  7667  0129C6  C083  F09C         	movff	?___flmul+3,?_scale+3
  7668  0129CA  0012               	return	
  7669  0129CC                     l7854:
  7670                           
  7671                           ;doprnt.c: 432: else if(scl > 10)
  7672  0129CC  0100               	movlb	0	; () banked
  7673  0129CE  51A1               	movf	scale@scl& (0+255),w,b
  7674  0129D0  0A80               	xorlw	128
  7675  0129D2  0F75               	addlw	-139
  7676  0129D4  A0D8               	btfss	status,0,c
  7677  0129D6  D063               	goto	l7860
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7681  0129D8  0E00               	movlw	0
  7682  0129DA  0100               	movlb	0	; () banked
  7683  0129DC  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7684  0129DE  0E0A               	movlw	10
  7685  0129E0  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7686  0129E2  0100               	movlb	0	; () banked
  7687  0129E4  51A1               	movf	scale@scl& (0+255),w,b
  7688  0129E6  0100               	movlb	0	; () banked
  7689  0129E8  6F78               	movwf	___awdiv@dividend& (0+255),b
  7690  0129EA  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  7691  0129EC  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  7692  0129EE  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7693  0129F0  EC6D  F0AA         	call	___awdiv	;wreg free
  7694  0129F4  0100               	movlb	0	; () banked
  7695  0129F6  90D8               	bcf	status,0,c
  7696  0129F8  3778               	rlcf	?___awdiv& (0+255),f,b
  7697  0129FA  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7698  0129FC  0100               	movlb	0	; () banked
  7699  0129FE  90D8               	bcf	status,0,c
  7700  012A00  3778               	rlcf	?___awdiv& (0+255),f,b
  7701  012A02  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7702  012A04  0E24               	movlw	36
  7703  012A06  0100               	movlb	0	; () banked
  7704  012A08  2778               	addwf	?___awdiv& (0+255),f,b
  7705  012A0A  0E00               	movlw	0
  7706  012A0C  0100               	movlb	0	; () banked
  7707  012A0E  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7708  012A10  0ECD               	movlw	low __npowers_
  7709  012A12  0100               	movlb	0	; () banked
  7710  012A14  2578               	addwf	?___awdiv& (0+255),w,b
  7711  012A16  6EF6               	movwf	tblptrl,c
  7712  012A18  0EFE               	movlw	high __npowers_
  7713  012A1A  0100               	movlb	0	; () banked
  7714  012A1C  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7715  012A1E  6EF7               	movwf	tblptrh,c
  7716  012A20                     	if	1	;There are 3 active tblptr bytes
  7717  012A20  6AF8               	clrf	tblptru,c
  7718  012A22  0E00               	movlw	low (__mediumconst shr (0+16))
  7719  012A24  22F8               	addwfc	tblptru,f,c
  7720  012A26                     	endif
  7721  012A26  0009               	tblrd		*+
  7722  012A28  CFF5 F080          	movff	tablat,___flmul@b
  7723  012A2C  0009               	tblrd		*+
  7724  012A2E  CFF5 F081          	movff	tablat,___flmul@b+1
  7725  012A32  0009               	tblrd		*+
  7726  012A34  CFF5 F082          	movff	tablat,___flmul@b+2
  7727  012A38  000A               	tblrd		*-
  7728  012A3A  CFF5 F083          	movff	tablat,___flmul@b+3
  7729  012A3E  0E00               	movlw	0
  7730  012A40  0100               	movlb	0	; () banked
  7731  012A42  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7732  012A44  0E0A               	movlw	10
  7733  012A46  6F74               	movwf	___awmod@divisor& (0+255),b
  7734  012A48  0100               	movlb	0	; () banked
  7735  012A4A  51A1               	movf	scale@scl& (0+255),w,b
  7736  012A4C  0100               	movlb	0	; () banked
  7737  012A4E  6F72               	movwf	___awmod@dividend& (0+255),b
  7738  012A50  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7739  012A52  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7740  012A54  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7741  012A56  EC2E  F0AC         	call	___awmod	;wreg free
  7742  012A5A  0100               	movlb	0	; () banked
  7743  012A5C  90D8               	bcf	status,0,c
  7744  012A5E  3772               	rlcf	?___awmod& (0+255),f,b
  7745  012A60  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7746  012A62  0100               	movlb	0	; () banked
  7747  012A64  90D8               	bcf	status,0,c
  7748  012A66  3772               	rlcf	?___awmod& (0+255),f,b
  7749  012A68  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7750  012A6A  0ECD               	movlw	low __npowers_
  7751  012A6C  0100               	movlb	0	; () banked
  7752  012A6E  2572               	addwf	?___awmod& (0+255),w,b
  7753  012A70  6EF6               	movwf	tblptrl,c
  7754  012A72  0EFE               	movlw	high __npowers_
  7755  012A74  0100               	movlb	0	; () banked
  7756  012A76  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  7757  012A78  6EF7               	movwf	tblptrh,c
  7758  012A7A                     	if	1	;There are 3 active tblptr bytes
  7759  012A7A  6AF8               	clrf	tblptru,c
  7760  012A7C  0E00               	movlw	low (__mediumconst shr (0+16))
  7761  012A7E  22F8               	addwfc	tblptru,f,c
  7762  012A80                     	endif
  7763  012A80  0009               	tblrd		*+
  7764  012A82  CFF5 F084          	movff	tablat,___flmul@a
  7765  012A86  0009               	tblrd		*+
  7766  012A88  CFF5 F085          	movff	tablat,___flmul@a+1
  7767  012A8C  0009               	tblrd		*+
  7768  012A8E  CFF5 F086          	movff	tablat,___flmul@a+2
  7769  012A92  000A               	tblrd		*-
  7770  012A94  CFF5 F087          	movff	tablat,___flmul@a+3
  7771  012A98  EC85  F09B         	call	___flmul	;wreg free
  7772  012A9C  D78E               	goto	L5
  7773  012A9E                     l7860:
  7774                           
  7775                           ;doprnt.c: 434: return _npowers_[scl];
  7776  012A9E  0100               	movlb	0	; () banked
  7777  012AA0  51A1               	movf	scale@scl& (0+255),w,b
  7778  012AA2  0D04               	mullw	4
  7779  012AA4  0ECD               	movlw	low __npowers_
  7780  012AA6  24F3               	addwf	prodl,w,c
  7781  012AA8  6EF6               	movwf	tblptrl,c
  7782  012AAA  0EFE               	movlw	high __npowers_
  7783  012AAC  20F4               	addwfc	prodh,w,c
  7784  012AAE  6EF7               	movwf	tblptrh,c
  7785  012AB0                     	if	1	;There are 3 active tblptr bytes
  7786  012AB0  6AF8               	clrf	tblptru,c
  7787  012AB2  0E00               	movlw	low (__mediumconst shr (0+16))
  7788  012AB4  22F8               	addwfc	tblptru,f,c
  7789  012AB6                     	endif
  7790  012AB6  0009               	tblrd		*+
  7791  012AB8  CFF5 F099          	movff	tablat,?_scale
  7792  012ABC  0009               	tblrd		*+
  7793  012ABE  CFF5 F09A          	movff	tablat,?_scale+1
  7794  012AC2  0009               	tblrd		*+
  7795  012AC4  CFF5 F09B          	movff	tablat,?_scale+2
  7796  012AC8  000A               	tblrd		*-
  7797  012ACA  CFF5 F09C          	movff	tablat,?_scale+3
  7798                           
  7799                           ; BSR set to: 0
  7800  012ACE  0012               	return	
  7801  012AD0                     l7864:
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;doprnt.c: 435: }
  7805                           ;doprnt.c: 436: if(scl>=110)
  7806  012AD0  0100               	movlb	0	; () banked
  7807  012AD2  51A1               	movf	scale@scl& (0+255),w,b
  7808  012AD4  0A80               	xorlw	128
  7809  012AD6  0F12               	addlw	-238
  7810  012AD8  A0D8               	btfss	status,0,c
  7811  012ADA  D0BB               	goto	l7872
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7815  012ADC  0E00               	movlw	0
  7816  012ADE  0100               	movlb	0	; () banked
  7817  012AE0  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7818  012AE2  0E0A               	movlw	10
  7819  012AE4  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7820  012AE6  0E00               	movlw	0
  7821  012AE8  0100               	movlb	0	; () banked
  7822  012AEA  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7823  012AEC  0E64               	movlw	100
  7824  012AEE  6F74               	movwf	___awmod@divisor& (0+255),b
  7825  012AF0  0100               	movlb	0	; () banked
  7826  012AF2  51A1               	movf	scale@scl& (0+255),w,b
  7827  012AF4  0100               	movlb	0	; () banked
  7828  012AF6  6F72               	movwf	___awmod@dividend& (0+255),b
  7829  012AF8  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7830  012AFA  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7831  012AFC  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7832  012AFE  EC2E  F0AC         	call	___awmod	;wreg free
  7833  012B02  C072  F078         	movff	?___awmod,___awdiv@dividend
  7834  012B06  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  7835  012B0A  EC6D  F0AA         	call	___awdiv	;wreg free
  7836  012B0E  0100               	movlb	0	; () banked
  7837  012B10  90D8               	bcf	status,0,c
  7838  012B12  3778               	rlcf	?___awdiv& (0+255),f,b
  7839  012B14  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7840  012B16  0100               	movlb	0	; () banked
  7841  012B18  90D8               	bcf	status,0,c
  7842  012B1A  3778               	rlcf	?___awdiv& (0+255),f,b
  7843  012B1C  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7844  012B1E  0E24               	movlw	36
  7845  012B20  0100               	movlb	0	; () banked
  7846  012B22  2778               	addwf	?___awdiv& (0+255),f,b
  7847  012B24  0E00               	movlw	0
  7848  012B26  0100               	movlb	0	; () banked
  7849  012B28  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7850  012B2A  0E01               	movlw	low __powers_
  7851  012B2C  0100               	movlb	0	; () banked
  7852  012B2E  2578               	addwf	?___awdiv& (0+255),w,b
  7853  012B30  6EF6               	movwf	tblptrl,c
  7854  012B32  0EFF               	movlw	high __powers_
  7855  012B34  0100               	movlb	0	; () banked
  7856  012B36  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7857  012B38  6EF7               	movwf	tblptrh,c
  7858  012B3A                     	if	1	;There are 3 active tblptr bytes
  7859  012B3A  6AF8               	clrf	tblptru,c
  7860  012B3C  0E00               	movlw	low (__mediumconst shr (0+16))
  7861  012B3E  22F8               	addwfc	tblptru,f,c
  7862  012B40                     	endif
  7863  012B40  0009               	tblrd		*+
  7864  012B42  CFF5 F084          	movff	tablat,___flmul@a
  7865  012B46  0009               	tblrd		*+
  7866  012B48  CFF5 F085          	movff	tablat,___flmul@a+1
  7867  012B4C  0009               	tblrd		*+
  7868  012B4E  CFF5 F086          	movff	tablat,___flmul@a+2
  7869  012B52  000A               	tblrd		*-
  7870  012B54  CFF5 F087          	movff	tablat,___flmul@a+3
  7871  012B58  0E00               	movlw	0
  7872  012B5A  0100               	movlb	0	; () banked
  7873  012B5C  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7874  012B5E  0E64               	movlw	100
  7875  012B60  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7876  012B62  0100               	movlb	0	; () banked
  7877  012B64  51A1               	movf	scale@scl& (0+255),w,b
  7878  012B66  0100               	movlb	0	; () banked
  7879  012B68  6F78               	movwf	___awdiv@dividend& (0+255),b
  7880  012B6A  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  7881  012B6C  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  7882  012B6E  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7883  012B70  EC6D  F0AA         	call	___awdiv	;wreg free
  7884  012B74  0100               	movlb	0	; () banked
  7885  012B76  90D8               	bcf	status,0,c
  7886  012B78  3778               	rlcf	?___awdiv& (0+255),f,b
  7887  012B7A  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7888  012B7C  0100               	movlb	0	; () banked
  7889  012B7E  90D8               	bcf	status,0,c
  7890  012B80  3778               	rlcf	?___awdiv& (0+255),f,b
  7891  012B82  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7892  012B84  0E48               	movlw	72
  7893  012B86  0100               	movlb	0	; () banked
  7894  012B88  2778               	addwf	?___awdiv& (0+255),f,b
  7895  012B8A  0E00               	movlw	0
  7896  012B8C  0100               	movlb	0	; () banked
  7897  012B8E  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7898  012B90  0E01               	movlw	low __powers_
  7899  012B92  0100               	movlb	0	; () banked
  7900  012B94  2578               	addwf	?___awdiv& (0+255),w,b
  7901  012B96  6EF6               	movwf	tblptrl,c
  7902  012B98  0EFF               	movlw	high __powers_
  7903  012B9A  0100               	movlb	0	; () banked
  7904  012B9C  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7905  012B9E  6EF7               	movwf	tblptrh,c
  7906  012BA0                     	if	1	;There are 3 active tblptr bytes
  7907  012BA0  6AF8               	clrf	tblptru,c
  7908  012BA2  0E00               	movlw	low (__mediumconst shr (0+16))
  7909  012BA4  22F8               	addwfc	tblptru,f,c
  7910  012BA6                     	endif
  7911  012BA6  0009               	tblrd		*+
  7912  012BA8  CFF5 F080          	movff	tablat,___flmul@b
  7913  012BAC  0009               	tblrd		*+
  7914  012BAE  CFF5 F081          	movff	tablat,___flmul@b+1
  7915  012BB2  0009               	tblrd		*+
  7916  012BB4  CFF5 F082          	movff	tablat,___flmul@b+2
  7917  012BB8  000A               	tblrd		*-
  7918  012BBA  CFF5 F083          	movff	tablat,___flmul@b+3
  7919  012BBE  EC85  F09B         	call	___flmul	;wreg free
  7920  012BC2  C080  F09D         	movff	?___flmul,_scale$4214
  7921  012BC6  C081  F09E         	movff	?___flmul+1,_scale$4214+1
  7922  012BCA  C082  F09F         	movff	?___flmul+2,_scale$4214+2
  7923  012BCE  C083  F0A0         	movff	?___flmul+3,_scale$4214+3
  7924                           
  7925                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7926  012BD2  C09D  F080         	movff	_scale$4214,___flmul@b
  7927  012BD6  C09E  F081         	movff	_scale$4214+1,___flmul@b+1
  7928  012BDA  C09F  F082         	movff	_scale$4214+2,___flmul@b+2
  7929  012BDE  C0A0  F083         	movff	_scale$4214+3,___flmul@b+3
  7930  012BE2  0E00               	movlw	0
  7931  012BE4  0100               	movlb	0	; () banked
  7932  012BE6  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7933  012BE8  0E0A               	movlw	10
  7934  012BEA  6F74               	movwf	___awmod@divisor& (0+255),b
  7935  012BEC  0100               	movlb	0	; () banked
  7936  012BEE  51A1               	movf	scale@scl& (0+255),w,b
  7937  012BF0  0100               	movlb	0	; () banked
  7938  012BF2  6F72               	movwf	___awmod@dividend& (0+255),b
  7939  012BF4  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7940  012BF6  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7941  012BF8  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7942  012BFA  EC2E  F0AC         	call	___awmod	;wreg free
  7943  012BFE  0100               	movlb	0	; () banked
  7944  012C00  90D8               	bcf	status,0,c
  7945  012C02  3772               	rlcf	?___awmod& (0+255),f,b
  7946  012C04  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7947  012C06  0100               	movlb	0	; () banked
  7948  012C08  90D8               	bcf	status,0,c
  7949  012C0A  3772               	rlcf	?___awmod& (0+255),f,b
  7950  012C0C  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7951  012C0E  0E01               	movlw	low __powers_
  7952  012C10  0100               	movlb	0	; () banked
  7953  012C12  2572               	addwf	?___awmod& (0+255),w,b
  7954  012C14  6EF6               	movwf	tblptrl,c
  7955  012C16  0EFF               	movlw	high __powers_
  7956  012C18  0100               	movlb	0	; () banked
  7957  012C1A  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  7958  012C1C  6EF7               	movwf	tblptrh,c
  7959  012C1E                     	if	1	;There are 3 active tblptr bytes
  7960  012C1E  6AF8               	clrf	tblptru,c
  7961  012C20  0E00               	movlw	low (__mediumconst shr (0+16))
  7962  012C22  22F8               	addwfc	tblptru,f,c
  7963  012C24                     	endif
  7964  012C24  0009               	tblrd		*+
  7965  012C26  CFF5 F084          	movff	tablat,___flmul@a
  7966  012C2A  0009               	tblrd		*+
  7967  012C2C  CFF5 F085          	movff	tablat,___flmul@a+1
  7968  012C30  0009               	tblrd		*+
  7969  012C32  CFF5 F086          	movff	tablat,___flmul@a+2
  7970  012C36  000A               	tblrd		*-
  7971  012C38  CFF5 F087          	movff	tablat,___flmul@a+3
  7972  012C3C  EC85  F09B         	call	___flmul	;wreg free
  7973  012C40  C080  F099         	movff	?___flmul,?_scale
  7974  012C44  C081  F09A         	movff	?___flmul+1,?_scale+1
  7975  012C48  C082  F09B         	movff	?___flmul+2,?_scale+2
  7976  012C4C  C083  F09C         	movff	?___flmul+3,?_scale+3
  7977  012C50  0012               	return	
  7978  012C52                     l7872:
  7979                           
  7980                           ;doprnt.c: 438: else if(scl > 10)
  7981  012C52  0100               	movlb	0	; () banked
  7982  012C54  51A1               	movf	scale@scl& (0+255),w,b
  7983  012C56  0A80               	xorlw	128
  7984  012C58  0F75               	addlw	-139
  7985  012C5A  A0D8               	btfss	status,0,c
  7986  012C5C  D063               	goto	l7878
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7990  012C5E  0E00               	movlw	0
  7991  012C60  0100               	movlb	0	; () banked
  7992  012C62  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7993  012C64  0E0A               	movlw	10
  7994  012C66  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7995  012C68  0100               	movlb	0	; () banked
  7996  012C6A  51A1               	movf	scale@scl& (0+255),w,b
  7997  012C6C  0100               	movlb	0	; () banked
  7998  012C6E  6F78               	movwf	___awdiv@dividend& (0+255),b
  7999  012C70  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  8000  012C72  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  8001  012C74  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8002  012C76  EC6D  F0AA         	call	___awdiv	;wreg free
  8003  012C7A  0100               	movlb	0	; () banked
  8004  012C7C  90D8               	bcf	status,0,c
  8005  012C7E  3778               	rlcf	?___awdiv& (0+255),f,b
  8006  012C80  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8007  012C82  0100               	movlb	0	; () banked
  8008  012C84  90D8               	bcf	status,0,c
  8009  012C86  3778               	rlcf	?___awdiv& (0+255),f,b
  8010  012C88  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8011  012C8A  0E24               	movlw	36
  8012  012C8C  0100               	movlb	0	; () banked
  8013  012C8E  2778               	addwf	?___awdiv& (0+255),f,b
  8014  012C90  0E00               	movlw	0
  8015  012C92  0100               	movlb	0	; () banked
  8016  012C94  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8017  012C96  0E01               	movlw	low __powers_
  8018  012C98  0100               	movlb	0	; () banked
  8019  012C9A  2578               	addwf	?___awdiv& (0+255),w,b
  8020  012C9C  6EF6               	movwf	tblptrl,c
  8021  012C9E  0EFF               	movlw	high __powers_
  8022  012CA0  0100               	movlb	0	; () banked
  8023  012CA2  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8024  012CA4  6EF7               	movwf	tblptrh,c
  8025  012CA6                     	if	1	;There are 3 active tblptr bytes
  8026  012CA6  6AF8               	clrf	tblptru,c
  8027  012CA8  0E00               	movlw	low (__mediumconst shr (0+16))
  8028  012CAA  22F8               	addwfc	tblptru,f,c
  8029  012CAC                     	endif
  8030  012CAC  0009               	tblrd		*+
  8031  012CAE  CFF5 F080          	movff	tablat,___flmul@b
  8032  012CB2  0009               	tblrd		*+
  8033  012CB4  CFF5 F081          	movff	tablat,___flmul@b+1
  8034  012CB8  0009               	tblrd		*+
  8035  012CBA  CFF5 F082          	movff	tablat,___flmul@b+2
  8036  012CBE  000A               	tblrd		*-
  8037  012CC0  CFF5 F083          	movff	tablat,___flmul@b+3
  8038  012CC4  0E00               	movlw	0
  8039  012CC6  0100               	movlb	0	; () banked
  8040  012CC8  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8041  012CCA  0E0A               	movlw	10
  8042  012CCC  6F74               	movwf	___awmod@divisor& (0+255),b
  8043  012CCE  0100               	movlb	0	; () banked
  8044  012CD0  51A1               	movf	scale@scl& (0+255),w,b
  8045  012CD2  0100               	movlb	0	; () banked
  8046  012CD4  6F72               	movwf	___awmod@dividend& (0+255),b
  8047  012CD6  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8048  012CD8  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  8049  012CDA  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  8050  012CDC  EC2E  F0AC         	call	___awmod	;wreg free
  8051  012CE0  0100               	movlb	0	; () banked
  8052  012CE2  90D8               	bcf	status,0,c
  8053  012CE4  3772               	rlcf	?___awmod& (0+255),f,b
  8054  012CE6  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8055  012CE8  0100               	movlb	0	; () banked
  8056  012CEA  90D8               	bcf	status,0,c
  8057  012CEC  3772               	rlcf	?___awmod& (0+255),f,b
  8058  012CEE  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8059  012CF0  0E01               	movlw	low __powers_
  8060  012CF2  0100               	movlb	0	; () banked
  8061  012CF4  2572               	addwf	?___awmod& (0+255),w,b
  8062  012CF6  6EF6               	movwf	tblptrl,c
  8063  012CF8  0EFF               	movlw	high __powers_
  8064  012CFA  0100               	movlb	0	; () banked
  8065  012CFC  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  8066  012CFE  6EF7               	movwf	tblptrh,c
  8067  012D00                     	if	1	;There are 3 active tblptr bytes
  8068  012D00  6AF8               	clrf	tblptru,c
  8069  012D02  0E00               	movlw	low (__mediumconst shr (0+16))
  8070  012D04  22F8               	addwfc	tblptru,f,c
  8071  012D06                     	endif
  8072  012D06  0009               	tblrd		*+
  8073  012D08  CFF5 F084          	movff	tablat,___flmul@a
  8074  012D0C  0009               	tblrd		*+
  8075  012D0E  CFF5 F085          	movff	tablat,___flmul@a+1
  8076  012D12  0009               	tblrd		*+
  8077  012D14  CFF5 F086          	movff	tablat,___flmul@a+2
  8078  012D18  000A               	tblrd		*-
  8079  012D1A  CFF5 F087          	movff	tablat,___flmul@a+3
  8080  012D1E  EC85  F09B         	call	___flmul	;wreg free
  8081  012D22  D78E               	goto	L6
  8082  012D24                     l7878:
  8083                           
  8084                           ;doprnt.c: 440: return _powers_[scl];
  8085  012D24  0100               	movlb	0	; () banked
  8086  012D26  51A1               	movf	scale@scl& (0+255),w,b
  8087  012D28  0D04               	mullw	4
  8088  012D2A  0E01               	movlw	low __powers_
  8089  012D2C  24F3               	addwf	prodl,w,c
  8090  012D2E  6EF6               	movwf	tblptrl,c
  8091  012D30  0EFF               	movlw	high __powers_
  8092  012D32  20F4               	addwfc	prodh,w,c
  8093  012D34  6EF7               	movwf	tblptrh,c
  8094  012D36                     	if	1	;There are 3 active tblptr bytes
  8095  012D36  6AF8               	clrf	tblptru,c
  8096  012D38  0E00               	movlw	low (__mediumconst shr (0+16))
  8097  012D3A  22F8               	addwfc	tblptru,f,c
  8098  012D3C                     	endif
  8099  012D3C  0009               	tblrd		*+
  8100  012D3E  CFF5 F099          	movff	tablat,?_scale
  8101  012D42  0009               	tblrd		*+
  8102  012D44  CFF5 F09A          	movff	tablat,?_scale+1
  8103  012D48  0009               	tblrd		*+
  8104  012D4A  CFF5 F09B          	movff	tablat,?_scale+2
  8105  012D4E  000A               	tblrd		*-
  8106  012D50  CFF5 F09C          	movff	tablat,?_scale+3
  8107  012D54  0012               	return	
  8108  012D56                     __end_of_scale:
  8109                           	opt stack 0
  8110                           tblptru	equ	0xFF8
  8111                           tblptrh	equ	0xFF7
  8112                           tblptrl	equ	0xFF6
  8113                           tablat	equ	0xFF5
  8114                           prodh	equ	0xFF4
  8115                           prodl	equ	0xFF3
  8116                           intcon	equ	0xFF2
  8117                           postinc0	equ	0xFEE
  8118                           wreg	equ	0xFE8
  8119                           indf2	equ	0xFDF
  8120                           postinc2	equ	0xFDE
  8121                           fsr2h	equ	0xFDA
  8122                           fsr2l	equ	0xFD9
  8123                           status	equ	0xFD8
  8124                           
  8125 ;; *************** function _isdigit *****************
  8126 ;; Defined at:
  8127 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  8128 ;; Parameters:    Size  Location     Type
  8129 ;;  c               1    wreg     unsigned char 
  8130 ;; Auto vars:     Size  Location     Type
  8131 ;;  c               1   20[BANK0 ] unsigned char 
  8132 ;; Return value:  Size  Location     Type
  8133 ;;		None               void
  8134 ;; Registers used:
  8135 ;;		wreg, status,2, status,0
  8136 ;; Tracked objects:
  8137 ;;		On entry : 0/0
  8138 ;;		On exit  : 0/0
  8139 ;;		Unchanged: 0/0
  8140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8142 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8143 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8144 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8145 ;;Total ram usage:        3 bytes
  8146 ;; Hardware stack levels used:    1
  8147 ;; Hardware stack levels required when called:    3
  8148 ;; This function calls:
  8149 ;;		Nothing
  8150 ;; This function is called by:
  8151 ;;		_sprintf
  8152 ;; This function uses a non-reentrant model
  8153 ;;
  8154                           
  8155                           	psect	text10
  8156  015CD4                     __ptext10:
  8157                           	opt stack 0
  8158  015CD4                     _isdigit:
  8159                           	opt stack 25
  8160                           
  8161                           ;incstack = 0
  8162                           ;isdigit@c stored from wreg
  8163  015CD4  0100               	movlb	0	; () banked
  8164  015CD6  6F74               	movwf	isdigit@c& (0+255),b
  8165  015CD8  0E00               	movlw	0
  8166  015CDA  0100               	movlb	0	; () banked
  8167  015CDC  6F73               	movwf	_isdigit$3797& (0+255),b
  8168                           
  8169                           ; BSR set to: 0
  8170  015CDE  0E3A               	movlw	58
  8171  015CE0  0100               	movlb	0	; () banked
  8172  015CE2  6174               	cpfslt	isdigit@c& (0+255),b
  8173  015CE4  D007               	goto	l7890
  8174                           
  8175                           ; BSR set to: 0
  8176  015CE6  0E2F               	movlw	47
  8177  015CE8  0100               	movlb	0	; () banked
  8178  015CEA  6574               	cpfsgt	isdigit@c& (0+255),b
  8179  015CEC  D003               	goto	l7890
  8180                           
  8181                           ; BSR set to: 0
  8182  015CEE  0E01               	movlw	1
  8183  015CF0  0100               	movlb	0	; () banked
  8184  015CF2  6F73               	movwf	_isdigit$3797& (0+255),b
  8185  015CF4                     l7890:
  8186                           
  8187                           ; BSR set to: 0
  8188  015CF4  C073  F072         	movff	_isdigit$3797,??_isdigit
  8189  015CF8  0100               	movlb	0	; () banked
  8190  015CFA  3172               	rrcf	??_isdigit& (0+255),w,b
  8191  015CFC  0012               	return	
  8192  015CFE                     __end_of_isdigit:
  8193                           	opt stack 0
  8194                           tblptru	equ	0xFF8
  8195                           tblptrh	equ	0xFF7
  8196                           tblptrl	equ	0xFF6
  8197                           tablat	equ	0xFF5
  8198                           prodh	equ	0xFF4
  8199                           prodl	equ	0xFF3
  8200                           intcon	equ	0xFF2
  8201                           postinc0	equ	0xFEE
  8202                           wreg	equ	0xFE8
  8203                           indf2	equ	0xFDF
  8204                           postinc2	equ	0xFDE
  8205                           fsr2h	equ	0xFDA
  8206                           fsr2l	equ	0xFD9
  8207                           status	equ	0xFD8
  8208                           
  8209 ;; *************** function _fround *****************
  8210 ;; Defined at:
  8211 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8212 ;; Parameters:    Size  Location     Type
  8213 ;;  prec            1    wreg     unsigned char 
  8214 ;; Auto vars:     Size  Location     Type
  8215 ;;  prec            1   69[BANK0 ] unsigned char 
  8216 ;; Return value:  Size  Location     Type
  8217 ;;                  4   57[BANK0 ] unsigned char 
  8218 ;; Registers used:
  8219 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8220 ;; Tracked objects:
  8221 ;;		On entry : 0/0
  8222 ;;		On exit  : 0/0
  8223 ;;		Unchanged: 0/0
  8224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8225 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8228 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8229 ;;Total ram usage:       13 bytes
  8230 ;; Hardware stack levels used:    1
  8231 ;; Hardware stack levels required when called:    4
  8232 ;; This function calls:
  8233 ;;		___awdiv
  8234 ;;		___awmod
  8235 ;;		___flmul
  8236 ;; This function is called by:
  8237 ;;		_sprintf
  8238 ;; This function uses a non-reentrant model
  8239 ;;
  8240                           
  8241                           	psect	text11
  8242  01430E                     __ptext11:
  8243                           	opt stack 0
  8244  01430E                     _fround:
  8245                           	opt stack 24
  8246                           
  8247                           ; BSR set to: 0
  8248                           ;incstack = 0
  8249                           ;fround@prec stored from wreg
  8250  01430E  0100               	movlb	0	; () banked
  8251  014310  6FA5               	movwf	fround@prec& (0+255),b
  8252                           
  8253                           ;doprnt.c: 413: if(prec>=110)
  8254  014312  0E6D               	movlw	109
  8255  014314  0100               	movlb	0	; () banked
  8256  014316  65A5               	cpfsgt	fround@prec& (0+255),b
  8257  014318  D0CD               	goto	l7832
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8261  01431A  0E00               	movlw	0
  8262  01431C  0100               	movlb	0	; () banked
  8263  01431E  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8264  014320  0E0A               	movlw	10
  8265  014322  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8266  014324  0E00               	movlw	0
  8267  014326  0100               	movlb	0	; () banked
  8268  014328  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8269  01432A  0E64               	movlw	100
  8270  01432C  6F74               	movwf	___awmod@divisor& (0+255),b
  8271  01432E  C0A5  F072         	movff	fround@prec,___awmod@dividend
  8272  014332  0100               	movlb	0	; () banked
  8273  014334  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8274  014336  EC2E  F0AC         	call	___awmod	;wreg free
  8275  01433A  C072  F078         	movff	?___awmod,___awdiv@dividend
  8276  01433E  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  8277  014342  EC6D  F0AA         	call	___awdiv	;wreg free
  8278  014346  0100               	movlb	0	; () banked
  8279  014348  90D8               	bcf	status,0,c
  8280  01434A  3778               	rlcf	?___awdiv& (0+255),f,b
  8281  01434C  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8282  01434E  0100               	movlb	0	; () banked
  8283  014350  90D8               	bcf	status,0,c
  8284  014352  3778               	rlcf	?___awdiv& (0+255),f,b
  8285  014354  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8286  014356  0E24               	movlw	36
  8287  014358  0100               	movlb	0	; () banked
  8288  01435A  2778               	addwf	?___awdiv& (0+255),f,b
  8289  01435C  0E00               	movlw	0
  8290  01435E  0100               	movlb	0	; () banked
  8291  014360  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8292  014362  0ECD               	movlw	low __npowers_
  8293  014364  0100               	movlb	0	; () banked
  8294  014366  2578               	addwf	?___awdiv& (0+255),w,b
  8295  014368  6EF6               	movwf	tblptrl,c
  8296  01436A  0EFE               	movlw	high __npowers_
  8297  01436C  0100               	movlb	0	; () banked
  8298  01436E  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8299  014370  6EF7               	movwf	tblptrh,c
  8300  014372                     	if	1	;There are 3 active tblptr bytes
  8301  014372  6AF8               	clrf	tblptru,c
  8302  014374  0E00               	movlw	low (__mediumconst shr (0+16))
  8303  014376  22F8               	addwfc	tblptru,f,c
  8304  014378                     	endif
  8305  014378  0009               	tblrd		*+
  8306  01437A  CFF5 F084          	movff	tablat,___flmul@a
  8307  01437E  0009               	tblrd		*+
  8308  014380  CFF5 F085          	movff	tablat,___flmul@a+1
  8309  014384  0009               	tblrd		*+
  8310  014386  CFF5 F086          	movff	tablat,___flmul@a+2
  8311  01438A  000A               	tblrd		*-
  8312  01438C  CFF5 F087          	movff	tablat,___flmul@a+3
  8313  014390  0E00               	movlw	0
  8314  014392  0100               	movlb	0	; () banked
  8315  014394  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8316  014396  0E64               	movlw	100
  8317  014398  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8318  01439A  C0A5  F078         	movff	fround@prec,___awdiv@dividend
  8319  01439E  0100               	movlb	0	; () banked
  8320  0143A0  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  8321  0143A2  EC6D  F0AA         	call	___awdiv	;wreg free
  8322  0143A6  0100               	movlb	0	; () banked
  8323  0143A8  90D8               	bcf	status,0,c
  8324  0143AA  3778               	rlcf	?___awdiv& (0+255),f,b
  8325  0143AC  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8326  0143AE  0100               	movlb	0	; () banked
  8327  0143B0  90D8               	bcf	status,0,c
  8328  0143B2  3778               	rlcf	?___awdiv& (0+255),f,b
  8329  0143B4  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8330  0143B6  0E48               	movlw	72
  8331  0143B8  0100               	movlb	0	; () banked
  8332  0143BA  2778               	addwf	?___awdiv& (0+255),f,b
  8333  0143BC  0E00               	movlw	0
  8334  0143BE  0100               	movlb	0	; () banked
  8335  0143C0  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8336  0143C2  0ECD               	movlw	low __npowers_
  8337  0143C4  0100               	movlb	0	; () banked
  8338  0143C6  2578               	addwf	?___awdiv& (0+255),w,b
  8339  0143C8  6EF6               	movwf	tblptrl,c
  8340  0143CA  0EFE               	movlw	high __npowers_
  8341  0143CC  0100               	movlb	0	; () banked
  8342  0143CE  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8343  0143D0  6EF7               	movwf	tblptrh,c
  8344  0143D2                     	if	1	;There are 3 active tblptr bytes
  8345  0143D2  6AF8               	clrf	tblptru,c
  8346  0143D4  0E00               	movlw	low (__mediumconst shr (0+16))
  8347  0143D6  22F8               	addwfc	tblptru,f,c
  8348  0143D8                     	endif
  8349  0143D8  0009               	tblrd		*+
  8350  0143DA  CFF5 F080          	movff	tablat,___flmul@b
  8351  0143DE  0009               	tblrd		*+
  8352  0143E0  CFF5 F081          	movff	tablat,___flmul@b+1
  8353  0143E4  0009               	tblrd		*+
  8354  0143E6  CFF5 F082          	movff	tablat,___flmul@b+2
  8355  0143EA  000A               	tblrd		*-
  8356  0143EC  CFF5 F083          	movff	tablat,___flmul@b+3
  8357  0143F0  EC85  F09B         	call	___flmul	;wreg free
  8358  0143F4  C080  F0A1         	movff	?___flmul,_fround$4212
  8359  0143F8  C081  F0A2         	movff	?___flmul+1,_fround$4212+1
  8360  0143FC  C082  F0A3         	movff	?___flmul+2,_fround$4212+2
  8361  014400  C083  F0A4         	movff	?___flmul+3,_fround$4212+3
  8362                           
  8363                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8364  014404  0E00               	movlw	0
  8365  014406  0100               	movlb	0	; () banked
  8366  014408  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8367  01440A  0E0A               	movlw	10
  8368  01440C  6F74               	movwf	___awmod@divisor& (0+255),b
  8369  01440E  C0A5  F072         	movff	fround@prec,___awmod@dividend
  8370  014412  0100               	movlb	0	; () banked
  8371  014414  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8372  014416  EC2E  F0AC         	call	___awmod	;wreg free
  8373  01441A  0100               	movlb	0	; () banked
  8374  01441C  90D8               	bcf	status,0,c
  8375  01441E  3772               	rlcf	?___awmod& (0+255),f,b
  8376  014420  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8377  014422  0100               	movlb	0	; () banked
  8378  014424  90D8               	bcf	status,0,c
  8379  014426  3772               	rlcf	?___awmod& (0+255),f,b
  8380  014428  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8381  01442A  0ECD               	movlw	low __npowers_
  8382  01442C  0100               	movlb	0	; () banked
  8383  01442E  2572               	addwf	?___awmod& (0+255),w,b
  8384  014430  6EF6               	movwf	tblptrl,c
  8385  014432  0EFE               	movlw	high __npowers_
  8386  014434  0100               	movlb	0	; () banked
  8387  014436  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  8388  014438  6EF7               	movwf	tblptrh,c
  8389  01443A                     	if	1	;There are 3 active tblptr bytes
  8390  01443A  6AF8               	clrf	tblptru,c
  8391  01443C  0E00               	movlw	low (__mediumconst shr (0+16))
  8392  01443E  22F8               	addwfc	tblptru,f,c
  8393  014440                     	endif
  8394  014440  0009               	tblrd		*+
  8395  014442  CFF5 F084          	movff	tablat,___flmul@a
  8396  014446  0009               	tblrd		*+
  8397  014448  CFF5 F085          	movff	tablat,___flmul@a+1
  8398  01444C  0009               	tblrd		*+
  8399  01444E  CFF5 F086          	movff	tablat,___flmul@a+2
  8400  014452  000A               	tblrd		*-
  8401  014454  CFF5 F087          	movff	tablat,___flmul@a+3
  8402  014458  C0A1  F080         	movff	_fround$4212,___flmul@b
  8403  01445C  C0A2  F081         	movff	_fround$4212+1,___flmul@b+1
  8404  014460  C0A3  F082         	movff	_fround$4212+2,___flmul@b+2
  8405  014464  C0A4  F083         	movff	_fround$4212+3,___flmul@b+3
  8406  014468  EC85  F09B         	call	___flmul	;wreg free
  8407  01446C  C080  F09D         	movff	?___flmul,_fround$4213
  8408  014470  C081  F09E         	movff	?___flmul+1,_fround$4213+1
  8409  014474  C082  F09F         	movff	?___flmul+2,_fround$4213+2
  8410  014478  C083  F0A0         	movff	?___flmul+3,_fround$4213+3
  8411                           
  8412                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8413  01447C  C09D  F080         	movff	_fround$4213,___flmul@b
  8414  014480  C09E  F081         	movff	_fround$4213+1,___flmul@b+1
  8415  014484  C09F  F082         	movff	_fround$4213+2,___flmul@b+2
  8416  014488  C0A0  F083         	movff	_fround$4213+3,___flmul@b+3
  8417  01448C  0E00               	movlw	0
  8418  01448E  0100               	movlb	0	; () banked
  8419  014490  6F84               	movwf	___flmul@a& (0+255),b
  8420  014492  0E00               	movlw	0
  8421  014494  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8422  014496  0E00               	movlw	0
  8423  014498  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8424  01449A  0E3F               	movlw	63
  8425  01449C  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8426  01449E  EC85  F09B         	call	___flmul	;wreg free
  8427  0144A2  C080  F099         	movff	?___flmul,?_fround
  8428  0144A6  C081  F09A         	movff	?___flmul+1,?_fround+1
  8429  0144AA  C082  F09B         	movff	?___flmul+2,?_fround+2
  8430  0144AE  C083  F09C         	movff	?___flmul+3,?_fround+3
  8431  0144B2  0012               	return	
  8432  0144B4                     l7832:
  8433                           
  8434                           ;doprnt.c: 415: else if(prec > 10)
  8435  0144B4  0E0A               	movlw	10
  8436  0144B6  0100               	movlb	0	; () banked
  8437  0144B8  65A5               	cpfsgt	fround@prec& (0+255),b
  8438  0144BA  D078               	goto	l7840
  8439                           
  8440                           ; BSR set to: 0
  8441                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8442  0144BC  0E00               	movlw	0
  8443  0144BE  0100               	movlb	0	; () banked
  8444  0144C0  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8445  0144C2  0E0A               	movlw	10
  8446  0144C4  6F74               	movwf	___awmod@divisor& (0+255),b
  8447  0144C6  C0A5  F072         	movff	fround@prec,___awmod@dividend
  8448  0144CA  0100               	movlb	0	; () banked
  8449  0144CC  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8450  0144CE  EC2E  F0AC         	call	___awmod	;wreg free
  8451  0144D2  0100               	movlb	0	; () banked
  8452  0144D4  90D8               	bcf	status,0,c
  8453  0144D6  3772               	rlcf	?___awmod& (0+255),f,b
  8454  0144D8  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8455  0144DA  0100               	movlb	0	; () banked
  8456  0144DC  90D8               	bcf	status,0,c
  8457  0144DE  3772               	rlcf	?___awmod& (0+255),f,b
  8458  0144E0  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8459  0144E2  0ECD               	movlw	low __npowers_
  8460  0144E4  0100               	movlb	0	; () banked
  8461  0144E6  2572               	addwf	?___awmod& (0+255),w,b
  8462  0144E8  6EF6               	movwf	tblptrl,c
  8463  0144EA  0EFE               	movlw	high __npowers_
  8464  0144EC  0100               	movlb	0	; () banked
  8465  0144EE  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  8466  0144F0  6EF7               	movwf	tblptrh,c
  8467  0144F2                     	if	1	;There are 3 active tblptr bytes
  8468  0144F2  6AF8               	clrf	tblptru,c
  8469  0144F4  0E00               	movlw	low (__mediumconst shr (0+16))
  8470  0144F6  22F8               	addwfc	tblptru,f,c
  8471  0144F8                     	endif
  8472  0144F8  0009               	tblrd		*+
  8473  0144FA  CFF5 F084          	movff	tablat,___flmul@a
  8474  0144FE  0009               	tblrd		*+
  8475  014500  CFF5 F085          	movff	tablat,___flmul@a+1
  8476  014504  0009               	tblrd		*+
  8477  014506  CFF5 F086          	movff	tablat,___flmul@a+2
  8478  01450A  000A               	tblrd		*-
  8479  01450C  CFF5 F087          	movff	tablat,___flmul@a+3
  8480  014510  0E00               	movlw	0
  8481  014512  0100               	movlb	0	; () banked
  8482  014514  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8483  014516  0E0A               	movlw	10
  8484  014518  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8485  01451A  C0A5  F078         	movff	fround@prec,___awdiv@dividend
  8486  01451E  0100               	movlb	0	; () banked
  8487  014520  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  8488  014522  EC6D  F0AA         	call	___awdiv	;wreg free
  8489  014526  0100               	movlb	0	; () banked
  8490  014528  90D8               	bcf	status,0,c
  8491  01452A  3778               	rlcf	?___awdiv& (0+255),f,b
  8492  01452C  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8493  01452E  0100               	movlb	0	; () banked
  8494  014530  90D8               	bcf	status,0,c
  8495  014532  3778               	rlcf	?___awdiv& (0+255),f,b
  8496  014534  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8497  014536  0E24               	movlw	36
  8498  014538  0100               	movlb	0	; () banked
  8499  01453A  2778               	addwf	?___awdiv& (0+255),f,b
  8500  01453C  0E00               	movlw	0
  8501  01453E  0100               	movlb	0	; () banked
  8502  014540  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8503  014542  0ECD               	movlw	low __npowers_
  8504  014544  0100               	movlb	0	; () banked
  8505  014546  2578               	addwf	?___awdiv& (0+255),w,b
  8506  014548  6EF6               	movwf	tblptrl,c
  8507  01454A  0EFE               	movlw	high __npowers_
  8508  01454C  0100               	movlb	0	; () banked
  8509  01454E  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8510  014550  6EF7               	movwf	tblptrh,c
  8511  014552                     	if	1	;There are 3 active tblptr bytes
  8512  014552  6AF8               	clrf	tblptru,c
  8513  014554  0E00               	movlw	low (__mediumconst shr (0+16))
  8514  014556  22F8               	addwfc	tblptru,f,c
  8515  014558                     	endif
  8516  014558  0009               	tblrd		*+
  8517  01455A  CFF5 F080          	movff	tablat,___flmul@b
  8518  01455E  0009               	tblrd		*+
  8519  014560  CFF5 F081          	movff	tablat,___flmul@b+1
  8520  014564  0009               	tblrd		*+
  8521  014566  CFF5 F082          	movff	tablat,___flmul@b+2
  8522  01456A  000A               	tblrd		*-
  8523  01456C  CFF5 F083          	movff	tablat,___flmul@b+3
  8524  014570  EC85  F09B         	call	___flmul	;wreg free
  8525  014574  C080  F0A1         	movff	?___flmul,_fround$4212
  8526  014578  C081  F0A2         	movff	?___flmul+1,_fround$4212+1
  8527  01457C  C082  F0A3         	movff	?___flmul+2,_fround$4212+2
  8528  014580  C083  F0A4         	movff	?___flmul+3,_fround$4212+3
  8529                           
  8530                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8531  014584  C0A1  F080         	movff	_fround$4212,___flmul@b
  8532  014588  C0A2  F081         	movff	_fround$4212+1,___flmul@b+1
  8533  01458C  C0A3  F082         	movff	_fround$4212+2,___flmul@b+2
  8534  014590  C0A4  F083         	movff	_fround$4212+3,___flmul@b+3
  8535  014594  0E00               	movlw	0
  8536  014596  0100               	movlb	0	; () banked
  8537  014598  6F84               	movwf	___flmul@a& (0+255),b
  8538  01459A  0E00               	movlw	0
  8539  01459C  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8540  01459E  0E00               	movlw	0
  8541  0145A0  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8542  0145A2  0E3F               	movlw	63
  8543  0145A4  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8544  0145A6  EC85  F09B         	call	___flmul	;wreg free
  8545  0145AA  D77B               	goto	L7
  8546  0145AC                     l7840:
  8547                           
  8548                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8549  0145AC  0100               	movlb	0	; () banked
  8550  0145AE  51A5               	movf	fround@prec& (0+255),w,b
  8551  0145B0  0D04               	mullw	4
  8552  0145B2  0ECD               	movlw	low __npowers_
  8553  0145B4  24F3               	addwf	prodl,w,c
  8554  0145B6  6EF6               	movwf	tblptrl,c
  8555  0145B8  0EFE               	movlw	high __npowers_
  8556  0145BA  20F4               	addwfc	prodh,w,c
  8557  0145BC  6EF7               	movwf	tblptrh,c
  8558  0145BE                     	if	1	;There are 3 active tblptr bytes
  8559  0145BE  6AF8               	clrf	tblptru,c
  8560  0145C0  0E00               	movlw	low (__mediumconst shr (0+16))
  8561  0145C2  22F8               	addwfc	tblptru,f,c
  8562  0145C4                     	endif
  8563  0145C4  0009               	tblrd		*+
  8564  0145C6  CFF5 F080          	movff	tablat,___flmul@b
  8565  0145CA  0009               	tblrd		*+
  8566  0145CC  CFF5 F081          	movff	tablat,___flmul@b+1
  8567  0145D0  0009               	tblrd		*+
  8568  0145D2  CFF5 F082          	movff	tablat,___flmul@b+2
  8569  0145D6  000A               	tblrd		*-
  8570  0145D8  CFF5 F083          	movff	tablat,___flmul@b+3
  8571  0145DC  0E00               	movlw	0
  8572  0145DE  0100               	movlb	0	; () banked
  8573  0145E0  6F84               	movwf	___flmul@a& (0+255),b
  8574  0145E2  0E00               	movlw	0
  8575  0145E4  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8576  0145E6  0E00               	movlw	0
  8577  0145E8  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8578  0145EA  0E3F               	movlw	63
  8579  0145EC  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8580  0145EE  EC85  F09B         	call	___flmul	;wreg free
  8581  0145F2  C080  F099         	movff	?___flmul,?_fround
  8582  0145F6  C081  F09A         	movff	?___flmul+1,?_fround+1
  8583  0145FA  C082  F09B         	movff	?___flmul+2,?_fround+2
  8584  0145FE  C083  F09C         	movff	?___flmul+3,?_fround+3
  8585  014602  0012               	return	
  8586  014604                     __end_of_fround:
  8587                           	opt stack 0
  8588                           tblptru	equ	0xFF8
  8589                           tblptrh	equ	0xFF7
  8590                           tblptrl	equ	0xFF6
  8591                           tablat	equ	0xFF5
  8592                           prodh	equ	0xFF4
  8593                           prodl	equ	0xFF3
  8594                           intcon	equ	0xFF2
  8595                           postinc0	equ	0xFEE
  8596                           wreg	equ	0xFE8
  8597                           indf2	equ	0xFDF
  8598                           postinc2	equ	0xFDE
  8599                           fsr2h	equ	0xFDA
  8600                           fsr2l	equ	0xFD9
  8601                           status	equ	0xFD8
  8602                           
  8603 ;; *************** function ___flmul *****************
  8604 ;; Defined at:
  8605 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8606 ;; Parameters:    Size  Location     Type
  8607 ;;  b               4   32[BANK0 ] unsigned char 
  8608 ;;  a               4   36[BANK0 ] unsigned char 
  8609 ;; Auto vars:     Size  Location     Type
  8610 ;;  prod            4   51[BANK0 ] struct .
  8611 ;;  grs             4   46[BANK0 ] unsigned long 
  8612 ;;  temp            2   55[BANK0 ] struct .
  8613 ;;  bexp            1   50[BANK0 ] unsigned char 
  8614 ;;  aexp            1   45[BANK0 ] unsigned char 
  8615 ;;  sign            1   44[BANK0 ] unsigned char 
  8616 ;; Return value:  Size  Location     Type
  8617 ;;                  4   32[BANK0 ] unsigned char 
  8618 ;; Registers used:
  8619 ;;		wreg, status,2, status,0, prodl, prodh
  8620 ;; Tracked objects:
  8621 ;;		On entry : 0/0
  8622 ;;		On exit  : 0/0
  8623 ;;		Unchanged: 0/0
  8624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8625 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8626 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8627 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8628 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8629 ;;Total ram usage:       25 bytes
  8630 ;; Hardware stack levels used:    1
  8631 ;; Hardware stack levels required when called:    3
  8632 ;; This function calls:
  8633 ;;		Nothing
  8634 ;; This function is called by:
  8635 ;;		_main
  8636 ;;		_fround
  8637 ;;		_scale
  8638 ;;		_sprintf
  8639 ;; This function uses a non-reentrant model
  8640 ;;
  8641                           
  8642                           	psect	text12
  8643  01370A                     __ptext12:
  8644                           	opt stack 0
  8645  01370A                     ___flmul:
  8646                           	opt stack 27
  8647                           
  8648                           ;incstack = 0
  8649  01370A  0100               	movlb	0	; () banked
  8650  01370C  5183               	movf	(___flmul@b+3)& (0+255),w,b
  8651  01370E  0B80               	andlw	128
  8652  013710  0100               	movlb	0	; () banked
  8653  013712  6F8C               	movwf	___flmul@sign& (0+255),b
  8654  013714  0100               	movlb	0	; () banked
  8655  013716  5183               	movf	(___flmul@b+3)& (0+255),w,b
  8656  013718  2583               	addwf	(___flmul@b+3)& (0+255),w,b
  8657  01371A  0100               	movlb	0	; () banked
  8658  01371C  6F92               	movwf	___flmul@bexp& (0+255),b
  8659                           
  8660                           ; BSR set to: 0
  8661  01371E  0100               	movlb	0	; () banked
  8662  013720  AF82               	btfss	(___flmul@b+2)& (0+255),7,b
  8663  013722  D002               	goto	l7576
  8664                           
  8665                           ; BSR set to: 0
  8666  013724  0100               	movlb	0	; () banked
  8667  013726  8192               	bsf	___flmul@bexp& (0+255),0,b
  8668  013728                     l7576:
  8669                           
  8670                           ; BSR set to: 0
  8671  013728  0100               	movlb	0	; () banked
  8672  01372A  5192               	movf	___flmul@bexp& (0+255),w,b
  8673  01372C  0100               	movlb	0	; () banked
  8674  01372E  B4D8               	btfsc	status,2,c
  8675  013730  D010               	goto	l7584
  8676                           
  8677                           ; BSR set to: 0
  8678  013732  0100               	movlb	0	; () banked
  8679  013734  2992               	incf	___flmul@bexp& (0+255),w,b
  8680  013736  A4D8               	btfss	status,2,c
  8681  013738  D009               	goto	l7582
  8682                           
  8683                           ; BSR set to: 0
  8684  01373A  0E00               	movlw	0
  8685  01373C  0100               	movlb	0	; () banked
  8686  01373E  6F80               	movwf	___flmul@b& (0+255),b
  8687  013740  0E00               	movlw	0
  8688  013742  6F81               	movwf	(___flmul@b+1)& (0+255),b
  8689  013744  0E00               	movlw	0
  8690  013746  6F82               	movwf	(___flmul@b+2)& (0+255),b
  8691  013748  0E00               	movlw	0
  8692  01374A  6F83               	movwf	(___flmul@b+3)& (0+255),b
  8693  01374C                     l7582:
  8694                           
  8695                           ; BSR set to: 0
  8696  01374C  0100               	movlb	0	; () banked
  8697  01374E  8F82               	bsf	(___flmul@b+2)& (0+255),7,b
  8698  013750  D009               	goto	l7586
  8699  013752                     l7584:
  8700                           
  8701                           ; BSR set to: 0
  8702  013752  0E00               	movlw	0
  8703  013754  0100               	movlb	0	; () banked
  8704  013756  6F80               	movwf	___flmul@b& (0+255),b
  8705  013758  0E00               	movlw	0
  8706  01375A  6F81               	movwf	(___flmul@b+1)& (0+255),b
  8707  01375C  0E00               	movlw	0
  8708  01375E  6F82               	movwf	(___flmul@b+2)& (0+255),b
  8709  013760  0E00               	movlw	0
  8710  013762  6F83               	movwf	(___flmul@b+3)& (0+255),b
  8711  013764                     l7586:
  8712                           
  8713                           ; BSR set to: 0
  8714  013764  0100               	movlb	0	; () banked
  8715  013766  5187               	movf	(___flmul@a+3)& (0+255),w,b
  8716  013768  0B80               	andlw	128
  8717  01376A  0100               	movlb	0	; () banked
  8718  01376C  1B8C               	xorwf	___flmul@sign& (0+255),f,b
  8719                           
  8720                           ; BSR set to: 0
  8721  01376E  0100               	movlb	0	; () banked
  8722  013770  5187               	movf	(___flmul@a+3)& (0+255),w,b
  8723  013772  2587               	addwf	(___flmul@a+3)& (0+255),w,b
  8724  013774  0100               	movlb	0	; () banked
  8725  013776  6F8D               	movwf	___flmul@aexp& (0+255),b
  8726                           
  8727                           ; BSR set to: 0
  8728  013778  0100               	movlb	0	; () banked
  8729  01377A  AF86               	btfss	(___flmul@a+2)& (0+255),7,b
  8730  01377C  D002               	goto	l7594
  8731                           
  8732                           ; BSR set to: 0
  8733  01377E  0100               	movlb	0	; () banked
  8734  013780  818D               	bsf	___flmul@aexp& (0+255),0,b
  8735  013782                     l7594:
  8736                           
  8737                           ; BSR set to: 0
  8738  013782  0100               	movlb	0	; () banked
  8739  013784  518D               	movf	___flmul@aexp& (0+255),w,b
  8740  013786  0100               	movlb	0	; () banked
  8741  013788  B4D8               	btfsc	status,2,c
  8742  01378A  D010               	goto	l7602
  8743                           
  8744                           ; BSR set to: 0
  8745  01378C  0100               	movlb	0	; () banked
  8746  01378E  298D               	incf	___flmul@aexp& (0+255),w,b
  8747  013790  A4D8               	btfss	status,2,c
  8748  013792  D009               	goto	l7600
  8749                           
  8750                           ; BSR set to: 0
  8751  013794  0E00               	movlw	0
  8752  013796  0100               	movlb	0	; () banked
  8753  013798  6F84               	movwf	___flmul@a& (0+255),b
  8754  01379A  0E00               	movlw	0
  8755  01379C  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8756  01379E  0E00               	movlw	0
  8757  0137A0  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8758  0137A2  0E00               	movlw	0
  8759  0137A4  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8760  0137A6                     l7600:
  8761                           
  8762                           ; BSR set to: 0
  8763  0137A6  0100               	movlb	0	; () banked
  8764  0137A8  8F86               	bsf	(___flmul@a+2)& (0+255),7,b
  8765  0137AA  D009               	goto	l1552
  8766  0137AC                     l7602:
  8767                           
  8768                           ; BSR set to: 0
  8769  0137AC  0E00               	movlw	0
  8770  0137AE  0100               	movlb	0	; () banked
  8771  0137B0  6F84               	movwf	___flmul@a& (0+255),b
  8772  0137B2  0E00               	movlw	0
  8773  0137B4  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8774  0137B6  0E00               	movlw	0
  8775  0137B8  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8776  0137BA  0E00               	movlw	0
  8777  0137BC  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8778  0137BE                     l1552:
  8779                           
  8780                           ; BSR set to: 0
  8781  0137BE  0100               	movlb	0	; () banked
  8782  0137C0  518D               	movf	___flmul@aexp& (0+255),w,b
  8783  0137C2  0100               	movlb	0	; () banked
  8784  0137C4  B4D8               	btfsc	status,2,c
  8785  0137C6  D005               	goto	l7606
  8786                           
  8787                           ; BSR set to: 0
  8788  0137C8  0100               	movlb	0	; () banked
  8789  0137CA  5192               	movf	___flmul@bexp& (0+255),w,b
  8790  0137CC  0100               	movlb	0	; () banked
  8791  0137CE  A4D8               	btfss	status,2,c
  8792  0137D0  D00A               	goto	l7610
  8793  0137D2                     l7606:
  8794                           
  8795                           ; BSR set to: 0
  8796  0137D2  0E00               	movlw	0
  8797  0137D4  0100               	movlb	0	; () banked
  8798  0137D6  6F80               	movwf	?___flmul& (0+255),b
  8799  0137D8  0E00               	movlw	0
  8800  0137DA  6F81               	movwf	(?___flmul+1)& (0+255),b
  8801  0137DC  0E00               	movlw	0
  8802  0137DE  6F82               	movwf	(?___flmul+2)& (0+255),b
  8803  0137E0  0E00               	movlw	0
  8804  0137E2  6F83               	movwf	(?___flmul+3)& (0+255),b
  8805                           
  8806                           ; BSR set to: 0
  8807  0137E4  0012               	return	
  8808  0137E6                     l7610:
  8809                           
  8810                           ; BSR set to: 0
  8811  0137E6  0100               	movlb	0	; () banked
  8812  0137E8  5186               	movf	(___flmul@a+2)& (0+255),w,b
  8813  0137EA  0100               	movlb	0	; () banked
  8814  0137EC  0380               	mulwf	___flmul@b& (0+255),b
  8815  0137EE  CFF3 F097          	movff	prodl,___flmul@temp
  8816  0137F2  CFF4 F098          	movff	prodh,___flmul@temp+1
  8817                           
  8818                           ; BSR set to: 0
  8819  0137F6  0100               	movlb	0	; () banked
  8820  0137F8  5197               	movf	___flmul@temp& (0+255),w,b
  8821  0137FA  0100               	movlb	0	; () banked
  8822  0137FC  6F8E               	movwf	___flmul@grs& (0+255),b
  8823  0137FE  6B8F               	clrf	(___flmul@grs+1)& (0+255),b
  8824  013800  6B90               	clrf	(___flmul@grs+2)& (0+255),b
  8825  013802  6B91               	clrf	(___flmul@grs+3)& (0+255),b
  8826                           
  8827                           ; BSR set to: 0
  8828  013804  0100               	movlb	0	; () banked
  8829  013806  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8830  013808  0100               	movlb	0	; () banked
  8831  01380A  6F93               	movwf	___flmul@prod& (0+255),b
  8832  01380C  6B94               	clrf	(___flmul@prod+1)& (0+255),b
  8833  01380E  6B95               	clrf	(___flmul@prod+2)& (0+255),b
  8834  013810  6B96               	clrf	(___flmul@prod+3)& (0+255),b
  8835  013812  0100               	movlb	0	; () banked
  8836  013814  5185               	movf	(___flmul@a+1)& (0+255),w,b
  8837  013816  0100               	movlb	0	; () banked
  8838  013818  0381               	mulwf	(___flmul@b+1)& (0+255),b
  8839  01381A  CFF3 F097          	movff	prodl,___flmul@temp
  8840  01381E  CFF4 F098          	movff	prodh,___flmul@temp+1
  8841                           
  8842                           ; BSR set to: 0
  8843  013822  0100               	movlb	0	; () banked
  8844  013824  5197               	movf	___flmul@temp& (0+255),w,b
  8845  013826  0100               	movlb	0	; () banked
  8846  013828  278E               	addwf	___flmul@grs& (0+255),f,b
  8847  01382A  0E00               	movlw	0
  8848  01382C  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8849  01382E  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8850  013830  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8851                           
  8852                           ; BSR set to: 0
  8853  013832  0100               	movlb	0	; () banked
  8854  013834  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8855  013836  0100               	movlb	0	; () banked
  8856  013838  2793               	addwf	___flmul@prod& (0+255),f,b
  8857  01383A  0E00               	movlw	0
  8858  01383C  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8859  01383E  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8860  013840  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8861  013842  0100               	movlb	0	; () banked
  8862  013844  5184               	movf	___flmul@a& (0+255),w,b
  8863  013846  0100               	movlb	0	; () banked
  8864  013848  0382               	mulwf	(___flmul@b+2)& (0+255),b
  8865  01384A  CFF3 F097          	movff	prodl,___flmul@temp
  8866  01384E  CFF4 F098          	movff	prodh,___flmul@temp+1
  8867                           
  8868                           ; BSR set to: 0
  8869  013852  0100               	movlb	0	; () banked
  8870  013854  5197               	movf	___flmul@temp& (0+255),w,b
  8871  013856  0100               	movlb	0	; () banked
  8872  013858  278E               	addwf	___flmul@grs& (0+255),f,b
  8873  01385A  0E00               	movlw	0
  8874  01385C  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8875  01385E  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8876  013860  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8877                           
  8878                           ; BSR set to: 0
  8879  013862  0100               	movlb	0	; () banked
  8880  013864  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8881  013866  0100               	movlb	0	; () banked
  8882  013868  2793               	addwf	___flmul@prod& (0+255),f,b
  8883  01386A  0E00               	movlw	0
  8884  01386C  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8885  01386E  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8886  013870  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8887                           
  8888                           ; BSR set to: 0
  8889  013872  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  8890  013876  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  8891  01387A  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  8892  01387E  0100               	movlb	0	; () banked
  8893  013880  6B8E               	clrf	___flmul@grs& (0+255),b
  8894                           
  8895                           ; BSR set to: 0
  8896  013882  0100               	movlb	0	; () banked
  8897  013884  5184               	movf	___flmul@a& (0+255),w,b
  8898  013886  0100               	movlb	0	; () banked
  8899  013888  0381               	mulwf	(___flmul@b+1)& (0+255),b
  8900  01388A  CFF3 F097          	movff	prodl,___flmul@temp
  8901  01388E  CFF4 F098          	movff	prodh,___flmul@temp+1
  8902                           
  8903                           ; BSR set to: 0
  8904  013892  0100               	movlb	0	; () banked
  8905  013894  5197               	movf	___flmul@temp& (0+255),w,b
  8906  013896  0100               	movlb	0	; () banked
  8907  013898  278E               	addwf	___flmul@grs& (0+255),f,b
  8908  01389A  0100               	movlb	0	; () banked
  8909  01389C  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8910  01389E  0100               	movlb	0	; () banked
  8911  0138A0  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8912  0138A2  0E00               	movlw	0
  8913  0138A4  0100               	movlb	0	; () banked
  8914  0138A6  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8915  0138A8  0E00               	movlw	0
  8916  0138AA  0100               	movlb	0	; () banked
  8917  0138AC  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8918                           
  8919                           ; BSR set to: 0
  8920  0138AE  0100               	movlb	0	; () banked
  8921  0138B0  5185               	movf	(___flmul@a+1)& (0+255),w,b
  8922  0138B2  0100               	movlb	0	; () banked
  8923  0138B4  0380               	mulwf	___flmul@b& (0+255),b
  8924  0138B6  CFF3 F097          	movff	prodl,___flmul@temp
  8925  0138BA  CFF4 F098          	movff	prodh,___flmul@temp+1
  8926                           
  8927                           ; BSR set to: 0
  8928  0138BE  0100               	movlb	0	; () banked
  8929  0138C0  5197               	movf	___flmul@temp& (0+255),w,b
  8930  0138C2  0100               	movlb	0	; () banked
  8931  0138C4  278E               	addwf	___flmul@grs& (0+255),f,b
  8932  0138C6  0100               	movlb	0	; () banked
  8933  0138C8  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8934  0138CA  0100               	movlb	0	; () banked
  8935  0138CC  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8936  0138CE  0E00               	movlw	0
  8937  0138D0  0100               	movlb	0	; () banked
  8938  0138D2  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8939  0138D4  0E00               	movlw	0
  8940  0138D6  0100               	movlb	0	; () banked
  8941  0138D8  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8942                           
  8943                           ; BSR set to: 0
  8944  0138DA  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  8945  0138DE  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  8946  0138E2  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  8947  0138E6  0100               	movlb	0	; () banked
  8948  0138E8  6B8E               	clrf	___flmul@grs& (0+255),b
  8949  0138EA  0100               	movlb	0	; () banked
  8950  0138EC  5184               	movf	___flmul@a& (0+255),w,b
  8951  0138EE  0100               	movlb	0	; () banked
  8952  0138F0  0380               	mulwf	___flmul@b& (0+255),b
  8953  0138F2  CFF3 F097          	movff	prodl,___flmul@temp
  8954  0138F6  CFF4 F098          	movff	prodh,___flmul@temp+1
  8955                           
  8956                           ; BSR set to: 0
  8957  0138FA  0100               	movlb	0	; () banked
  8958  0138FC  5197               	movf	___flmul@temp& (0+255),w,b
  8959  0138FE  0100               	movlb	0	; () banked
  8960  013900  278E               	addwf	___flmul@grs& (0+255),f,b
  8961  013902  0100               	movlb	0	; () banked
  8962  013904  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8963  013906  0100               	movlb	0	; () banked
  8964  013908  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8965  01390A  0E00               	movlw	0
  8966  01390C  0100               	movlb	0	; () banked
  8967  01390E  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8968  013910  0E00               	movlw	0
  8969  013912  0100               	movlb	0	; () banked
  8970  013914  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8971                           
  8972                           ; BSR set to: 0
  8973  013916  0100               	movlb	0	; () banked
  8974  013918  5186               	movf	(___flmul@a+2)& (0+255),w,b
  8975  01391A  0100               	movlb	0	; () banked
  8976  01391C  0381               	mulwf	(___flmul@b+1)& (0+255),b
  8977  01391E  CFF3 F097          	movff	prodl,___flmul@temp
  8978  013922  CFF4 F098          	movff	prodh,___flmul@temp+1
  8979  013926  0100               	movlb	0	; () banked
  8980  013928  5197               	movf	___flmul@temp& (0+255),w,b
  8981  01392A  0100               	movlb	0	; () banked
  8982  01392C  2793               	addwf	___flmul@prod& (0+255),f,b
  8983  01392E  0100               	movlb	0	; () banked
  8984  013930  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8985  013932  0100               	movlb	0	; () banked
  8986  013934  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8987  013936  0E00               	movlw	0
  8988  013938  0100               	movlb	0	; () banked
  8989  01393A  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8990  01393C  0E00               	movlw	0
  8991  01393E  0100               	movlb	0	; () banked
  8992  013940  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8993                           
  8994                           ; BSR set to: 0
  8995  013942  0100               	movlb	0	; () banked
  8996  013944  5185               	movf	(___flmul@a+1)& (0+255),w,b
  8997  013946  0100               	movlb	0	; () banked
  8998  013948  0382               	mulwf	(___flmul@b+2)& (0+255),b
  8999  01394A  CFF3 F097          	movff	prodl,___flmul@temp
  9000  01394E  CFF4 F098          	movff	prodh,___flmul@temp+1
  9001                           
  9002                           ; BSR set to: 0
  9003  013952  0100               	movlb	0	; () banked
  9004  013954  5197               	movf	___flmul@temp& (0+255),w,b
  9005  013956  0100               	movlb	0	; () banked
  9006  013958  2793               	addwf	___flmul@prod& (0+255),f,b
  9007  01395A  0100               	movlb	0	; () banked
  9008  01395C  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9009  01395E  0100               	movlb	0	; () banked
  9010  013960  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9011  013962  0E00               	movlw	0
  9012  013964  0100               	movlb	0	; () banked
  9013  013966  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9014  013968  0E00               	movlw	0
  9015  01396A  0100               	movlb	0	; () banked
  9016  01396C  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9017  01396E  0100               	movlb	0	; () banked
  9018  013970  5186               	movf	(___flmul@a+2)& (0+255),w,b
  9019  013972  0100               	movlb	0	; () banked
  9020  013974  0382               	mulwf	(___flmul@b+2)& (0+255),b
  9021  013976  CFF3 F097          	movff	prodl,___flmul@temp
  9022  01397A  CFF4 F098          	movff	prodh,___flmul@temp+1
  9023                           
  9024                           ; BSR set to: 0
  9025  01397E  0100               	movlb	0	; () banked
  9026  013980  5197               	movf	___flmul@temp& (0+255),w,b
  9027  013982  0100               	movlb	0	; () banked
  9028  013984  6F88               	movwf	??___flmul& (0+255),b
  9029  013986  0100               	movlb	0	; () banked
  9030  013988  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9031  01398A  0100               	movlb	0	; () banked
  9032  01398C  6F89               	movwf	(??___flmul+1)& (0+255),b
  9033  01398E  0100               	movlb	0	; () banked
  9034  013990  6B8A               	clrf	(??___flmul+2)& (0+255),b
  9035  013992  0100               	movlb	0	; () banked
  9036  013994  6B8B               	clrf	(??___flmul+3)& (0+255),b
  9037  013996  C08A  F08B         	movff	??___flmul+2,??___flmul+3
  9038  01399A  C089  F08A         	movff	??___flmul+1,??___flmul+2
  9039  01399E  C088  F089         	movff	??___flmul,??___flmul+1
  9040  0139A2  0100               	movlb	0	; () banked
  9041  0139A4  6B88               	clrf	??___flmul& (0+255),b
  9042  0139A6  0100               	movlb	0	; () banked
  9043  0139A8  5188               	movf	??___flmul& (0+255),w,b
  9044  0139AA  0100               	movlb	0	; () banked
  9045  0139AC  2793               	addwf	___flmul@prod& (0+255),f,b
  9046  0139AE  0100               	movlb	0	; () banked
  9047  0139B0  5189               	movf	(??___flmul+1)& (0+255),w,b
  9048  0139B2  0100               	movlb	0	; () banked
  9049  0139B4  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9050  0139B6  0100               	movlb	0	; () banked
  9051  0139B8  518A               	movf	(??___flmul+2)& (0+255),w,b
  9052  0139BA  0100               	movlb	0	; () banked
  9053  0139BC  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9054  0139BE  0100               	movlb	0	; () banked
  9055  0139C0  518B               	movf	(??___flmul+3)& (0+255),w,b
  9056  0139C2  0100               	movlb	0	; () banked
  9057  0139C4  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9058                           
  9059                           ; BSR set to: 0
  9060  0139C6  C08E  F088         	movff	___flmul@grs,??___flmul
  9061  0139CA  C08F  F089         	movff	___flmul@grs+1,??___flmul+1
  9062  0139CE  C090  F08A         	movff	___flmul@grs+2,??___flmul+2
  9063  0139D2  C091  F08B         	movff	___flmul@grs+3,??___flmul+3
  9064  0139D6  0E19               	movlw	25
  9065  0139D8  D006               	goto	u10080
  9066  0139DA                     u10085:
  9067  0139DA  0100               	movlb	0	; () banked
  9068  0139DC  90D8               	bcf	status,0,c
  9069  0139DE  338B               	rrcf	(??___flmul+3)& (0+255),f,b
  9070  0139E0  338A               	rrcf	(??___flmul+2)& (0+255),f,b
  9071  0139E2  3389               	rrcf	(??___flmul+1)& (0+255),f,b
  9072  0139E4  3388               	rrcf	??___flmul& (0+255),f,b
  9073  0139E6                     u10080:
  9074  0139E6  2EE8               	decfsz	wreg,f,c
  9075  0139E8  D7F8               	goto	u10085
  9076  0139EA  0100               	movlb	0	; () banked
  9077  0139EC  5188               	movf	??___flmul& (0+255),w,b
  9078  0139EE  0100               	movlb	0	; () banked
  9079  0139F0  2793               	addwf	___flmul@prod& (0+255),f,b
  9080  0139F2  0100               	movlb	0	; () banked
  9081  0139F4  5189               	movf	(??___flmul+1)& (0+255),w,b
  9082  0139F6  0100               	movlb	0	; () banked
  9083  0139F8  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9084  0139FA  0100               	movlb	0	; () banked
  9085  0139FC  518A               	movf	(??___flmul+2)& (0+255),w,b
  9086  0139FE  0100               	movlb	0	; () banked
  9087  013A00  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9088  013A02  0100               	movlb	0	; () banked
  9089  013A04  518B               	movf	(??___flmul+3)& (0+255),w,b
  9090  013A06  0100               	movlb	0	; () banked
  9091  013A08  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9092                           
  9093                           ; BSR set to: 0
  9094  013A0A  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  9095  013A0E  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  9096  013A12  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  9097  013A16  0100               	movlb	0	; () banked
  9098  013A18  6B8E               	clrf	___flmul@grs& (0+255),b
  9099                           
  9100                           ; BSR set to: 0
  9101  013A1A  0100               	movlb	0	; () banked
  9102  013A1C  518D               	movf	___flmul@aexp& (0+255),w,b
  9103  013A1E  C092  F088         	movff	___flmul@bexp,??___flmul
  9104  013A22  0100               	movlb	0	; () banked
  9105  013A24  6B89               	clrf	(??___flmul+1)& (0+255),b
  9106  013A26  0100               	movlb	0	; () banked
  9107  013A28  2788               	addwf	??___flmul& (0+255),f,b
  9108  013A2A  0E00               	movlw	0
  9109  013A2C  2389               	addwfc	(??___flmul+1)& (0+255),f,b
  9110  013A2E  0E82               	movlw	130
  9111  013A30  0100               	movlb	0	; () banked
  9112  013A32  2588               	addwf	??___flmul& (0+255),w,b
  9113  013A34  0100               	movlb	0	; () banked
  9114  013A36  6F97               	movwf	___flmul@temp& (0+255),b
  9115  013A38  0EFF               	movlw	255
  9116  013A3A  0100               	movlb	0	; () banked
  9117  013A3C  2189               	addwfc	(??___flmul+1)& (0+255),w,b
  9118  013A3E  0100               	movlb	0	; () banked
  9119  013A40  6F98               	movwf	(___flmul@temp+1)& (0+255),b
  9120  013A42  D015               	goto	l7658
  9121  013A44                     l7652:
  9122                           
  9123                           ; BSR set to: 0
  9124  013A44  0100               	movlb	0	; () banked
  9125  013A46  90D8               	bcf	status,0,c
  9126  013A48  3793               	rlcf	___flmul@prod& (0+255),f,b
  9127  013A4A  3794               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9128  013A4C  3795               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9129  013A4E  3796               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9130                           
  9131                           ; BSR set to: 0
  9132  013A50  0100               	movlb	0	; () banked
  9133  013A52  AF91               	btfss	(___flmul@grs+3)& (0+255),7,b
  9134  013A54  D002               	goto	l1559
  9135                           
  9136                           ; BSR set to: 0
  9137  013A56  0100               	movlb	0	; () banked
  9138  013A58  8193               	bsf	___flmul@prod& (0+255),0,b
  9139  013A5A                     l1559:
  9140                           
  9141                           ; BSR set to: 0
  9142  013A5A  0100               	movlb	0	; () banked
  9143  013A5C  90D8               	bcf	status,0,c
  9144  013A5E  378E               	rlcf	___flmul@grs& (0+255),f,b
  9145  013A60  378F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9146  013A62  3790               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9147  013A64  3791               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9148  013A66  0100               	movlb	0	; () banked
  9149  013A68  0797               	decf	___flmul@temp& (0+255),f,b
  9150  013A6A  A0D8               	btfss	status,0,c
  9151  013A6C  0798               	decf	(___flmul@temp+1)& (0+255),f,b
  9152  013A6E                     l7658:
  9153                           
  9154                           ; BSR set to: 0
  9155  013A6E  0100               	movlb	0	; () banked
  9156  013A70  AF95               	btfss	(___flmul@prod+2)& (0+255),7,b
  9157  013A72  D7E8               	goto	l7652
  9158                           
  9159                           ; BSR set to: 0
  9160                           
  9161                           ; BSR set to: 0
  9162  013A74  0E00               	movlw	0
  9163  013A76  0100               	movlb	0	; () banked
  9164  013A78  6F8D               	movwf	___flmul@aexp& (0+255),b
  9165                           
  9166                           ; BSR set to: 0
  9167  013A7A  0100               	movlb	0	; () banked
  9168  013A7C  AF91               	btfss	(___flmul@grs+3)& (0+255),7,b
  9169  013A7E  D024               	goto	l1561
  9170                           
  9171                           ; BSR set to: 0
  9172  013A80  0EFF               	movlw	255
  9173  013A82  0100               	movlb	0	; () banked
  9174  013A84  158E               	andwf	___flmul@grs& (0+255),w,b
  9175  013A86  0100               	movlb	0	; () banked
  9176  013A88  6F88               	movwf	??___flmul& (0+255),b
  9177  013A8A  0EFF               	movlw	255
  9178  013A8C  0100               	movlb	0	; () banked
  9179  013A8E  158F               	andwf	(___flmul@grs+1)& (0+255),w,b
  9180  013A90  0100               	movlb	0	; () banked
  9181  013A92  6F89               	movwf	(??___flmul+1)& (0+255),b
  9182  013A94  0EFF               	movlw	255
  9183  013A96  0100               	movlb	0	; () banked
  9184  013A98  1590               	andwf	(___flmul@grs+2)& (0+255),w,b
  9185  013A9A  0100               	movlb	0	; () banked
  9186  013A9C  6F8A               	movwf	(??___flmul+2)& (0+255),b
  9187  013A9E  0E7F               	movlw	127
  9188  013AA0  0100               	movlb	0	; () banked
  9189  013AA2  1591               	andwf	(___flmul@grs+3)& (0+255),w,b
  9190  013AA4  0100               	movlb	0	; () banked
  9191  013AA6  6F8B               	movwf	(??___flmul+3)& (0+255),b
  9192  013AA8  0100               	movlb	0	; () banked
  9193  013AAA  5188               	movf	??___flmul& (0+255),w,b
  9194  013AAC  0100               	movlb	0	; () banked
  9195  013AAE  1189               	iorwf	(??___flmul+1)& (0+255),w,b
  9196  013AB0  0100               	movlb	0	; () banked
  9197  013AB2  118A               	iorwf	(??___flmul+2)& (0+255),w,b
  9198  013AB4  0100               	movlb	0	; () banked
  9199  013AB6  118B               	iorwf	(??___flmul+3)& (0+255),w,b
  9200  013AB8  A4D8               	btfss	status,2,c
  9201  013ABA  D003               	goto	l7668
  9202                           
  9203                           ; BSR set to: 0
  9204                           
  9205                           ; BSR set to: 0
  9206  013ABC  0100               	movlb	0	; () banked
  9207  013ABE  A193               	btfss	___flmul@prod& (0+255),0,b
  9208  013AC0  D003               	goto	l1561
  9209  013AC2                     l7668:
  9210                           
  9211                           ; BSR set to: 0
  9212  013AC2  0E01               	movlw	1
  9213  013AC4  0100               	movlb	0	; () banked
  9214  013AC6  6F8D               	movwf	___flmul@aexp& (0+255),b
  9215  013AC8                     l1561:
  9216                           
  9217                           ; BSR set to: 0
  9218  013AC8  0100               	movlb	0	; () banked
  9219  013ACA  518D               	movf	___flmul@aexp& (0+255),w,b
  9220  013ACC  0100               	movlb	0	; () banked
  9221  013ACE  B4D8               	btfsc	status,2,c
  9222  013AD0  D023               	goto	l7678
  9223                           
  9224                           ; BSR set to: 0
  9225  013AD2  0E01               	movlw	1
  9226  013AD4  0100               	movlb	0	; () banked
  9227  013AD6  2793               	addwf	___flmul@prod& (0+255),f,b
  9228  013AD8  0E00               	movlw	0
  9229  013ADA  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9230  013ADC  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9231  013ADE  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9232                           
  9233                           ; BSR set to: 0
  9234  013AE0  0100               	movlb	0	; () banked
  9235  013AE2  A196               	btfss	(___flmul@prod+3)& (0+255),0,b
  9236  013AE4  D019               	goto	l7678
  9237                           
  9238                           ; BSR set to: 0
  9239  013AE6  C093  F088         	movff	___flmul@prod,??___flmul
  9240  013AEA  C094  F089         	movff	___flmul@prod+1,??___flmul+1
  9241  013AEE  C095  F08A         	movff	___flmul@prod+2,??___flmul+2
  9242  013AF2  C096  F08B         	movff	___flmul@prod+3,??___flmul+3
  9243  013AF6  0100               	movlb	0	; () banked
  9244  013AF8  358B               	rlcf	(??___flmul+3)& (0+255),w,b
  9245  013AFA  338B               	rrcf	(??___flmul+3)& (0+255),f,b
  9246  013AFC  338A               	rrcf	(??___flmul+2)& (0+255),f,b
  9247  013AFE  3389               	rrcf	(??___flmul+1)& (0+255),f,b
  9248  013B00  3388               	rrcf	??___flmul& (0+255),f,b
  9249  013B02  C088  F093         	movff	??___flmul,___flmul@prod
  9250  013B06  C089  F094         	movff	??___flmul+1,___flmul@prod+1
  9251  013B0A  C08A  F095         	movff	??___flmul+2,___flmul@prod+2
  9252  013B0E  C08B  F096         	movff	??___flmul+3,___flmul@prod+3
  9253                           
  9254                           ; BSR set to: 0
  9255  013B12  0100               	movlb	0	; () banked
  9256  013B14  4B97               	infsnz	___flmul@temp& (0+255),f,b
  9257  013B16  2B98               	incf	(___flmul@temp+1)& (0+255),f,b
  9258  013B18                     l7678:
  9259                           
  9260                           ; BSR set to: 0
  9261  013B18  0100               	movlb	0	; () banked
  9262  013B1A  BF98               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9263  013B1C  D010               	goto	l7682
  9264  013B1E  0100               	movlb	0	; () banked
  9265  013B20  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9266  013B22  E104               	bnz	u10160
  9267  013B24  0100               	movlb	0	; () banked
  9268  013B26  2997               	incf	___flmul@temp& (0+255),w,b
  9269  013B28  A0D8               	btfss	status,0,c
  9270  013B2A  D009               	goto	l7682
  9271  013B2C                     u10160:
  9272                           
  9273                           ; BSR set to: 0
  9274  013B2C  0E00               	movlw	0
  9275  013B2E  0100               	movlb	0	; () banked
  9276  013B30  6F93               	movwf	___flmul@prod& (0+255),b
  9277  013B32  0E00               	movlw	0
  9278  013B34  6F94               	movwf	(___flmul@prod+1)& (0+255),b
  9279  013B36  0E80               	movlw	128
  9280  013B38  6F95               	movwf	(___flmul@prod+2)& (0+255),b
  9281  013B3A  0E7F               	movlw	127
  9282  013B3C  D02B               	goto	L8
  9283  013B3E                     l7682:
  9284                           
  9285                           ; BSR set to: 0
  9286  013B3E  0100               	movlb	0	; () banked
  9287  013B40  BF98               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9288  013B42  D007               	goto	l7684
  9289  013B44  0100               	movlb	0	; () banked
  9290  013B46  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9291  013B48  E111               	bnz	l1569
  9292  013B4A  0100               	movlb	0	; () banked
  9293  013B4C  0597               	decf	___flmul@temp& (0+255),w,b
  9294  013B4E  B0D8               	btfsc	status,0,c
  9295  013B50  D00D               	goto	l1569
  9296  013B52                     l7684:
  9297                           
  9298                           ; BSR set to: 0
  9299  013B52  0E00               	movlw	0
  9300  013B54  0100               	movlb	0	; () banked
  9301  013B56  6F93               	movwf	___flmul@prod& (0+255),b
  9302  013B58  0E00               	movlw	0
  9303  013B5A  6F94               	movwf	(___flmul@prod+1)& (0+255),b
  9304  013B5C  0E00               	movlw	0
  9305  013B5E  6F95               	movwf	(___flmul@prod+2)& (0+255),b
  9306  013B60  0E00               	movlw	0
  9307  013B62  6F96               	movwf	(___flmul@prod+3)& (0+255),b
  9308  013B64  0E00               	movlw	0
  9309  013B66  0100               	movlb	0	; () banked
  9310  013B68  6F8C               	movwf	___flmul@sign& (0+255),b
  9311  013B6A  D015               	goto	l7694
  9312  013B6C                     l1569:
  9313                           
  9314                           ; BSR set to: 0
  9315  013B6C  C097  F092         	movff	___flmul@temp,___flmul@bexp
  9316                           
  9317                           ; BSR set to: 0
  9318  013B70  0EFF               	movlw	255
  9319  013B72  0100               	movlb	0	; () banked
  9320  013B74  1793               	andwf	___flmul@prod& (0+255),f,b
  9321  013B76  0EFF               	movlw	255
  9322  013B78  1794               	andwf	(___flmul@prod+1)& (0+255),f,b
  9323  013B7A  0E7F               	movlw	127
  9324  013B7C  1795               	andwf	(___flmul@prod+2)& (0+255),f,b
  9325  013B7E  0E00               	movlw	0
  9326  013B80  1796               	andwf	(___flmul@prod+3)& (0+255),f,b
  9327                           
  9328                           ; BSR set to: 0
  9329  013B82  0100               	movlb	0	; () banked
  9330  013B84  A192               	btfss	___flmul@bexp& (0+255),0,b
  9331  013B86  D002               	goto	l7692
  9332                           
  9333                           ; BSR set to: 0
  9334  013B88  0100               	movlb	0	; () banked
  9335  013B8A  8F95               	bsf	(___flmul@prod+2)& (0+255),7,b
  9336  013B8C                     l7692:
  9337                           
  9338                           ; BSR set to: 0
  9339  013B8C  0100               	movlb	0	; () banked
  9340  013B8E  90D8               	bcf	status,0,c
  9341  013B90  3192               	rrcf	___flmul@bexp& (0+255),w,b
  9342  013B92  0100               	movlb	0	; () banked
  9343  013B94                     L8:
  9344  013B94  6F96               	movwf	(___flmul@prod+3)& (0+255),b
  9345  013B96                     l7694:
  9346                           
  9347                           ; BSR set to: 0
  9348  013B96  0100               	movlb	0	; () banked
  9349  013B98  518C               	movf	___flmul@sign& (0+255),w,b
  9350  013B9A  0100               	movlb	0	; () banked
  9351  013B9C  1396               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9352                           
  9353                           ; BSR set to: 0
  9354  013B9E  C093  F080         	movff	___flmul@prod,?___flmul
  9355  013BA2  C094  F081         	movff	___flmul@prod+1,?___flmul+1
  9356  013BA6  C095  F082         	movff	___flmul@prod+2,?___flmul+2
  9357  013BAA  C096  F083         	movff	___flmul@prod+3,?___flmul+3
  9358  013BAE  0012               	return	
  9359  013BB0                     __end_of___flmul:
  9360                           	opt stack 0
  9361                           tblptru	equ	0xFF8
  9362                           tblptrh	equ	0xFF7
  9363                           tblptrl	equ	0xFF6
  9364                           tablat	equ	0xFF5
  9365                           prodh	equ	0xFF4
  9366                           prodl	equ	0xFF3
  9367                           intcon	equ	0xFF2
  9368                           postinc0	equ	0xFEE
  9369                           wreg	equ	0xFE8
  9370                           indf2	equ	0xFDF
  9371                           postinc2	equ	0xFDE
  9372                           fsr2h	equ	0xFDA
  9373                           fsr2l	equ	0xFD9
  9374                           status	equ	0xFD8
  9375                           
  9376 ;; *************** function ___awmod *****************
  9377 ;; Defined at:
  9378 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;  dividend        2   18[BANK0 ] int 
  9381 ;;  divisor         2   20[BANK0 ] int 
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;  sign            1   23[BANK0 ] unsigned char 
  9384 ;;  counter         1   22[BANK0 ] unsigned char 
  9385 ;; Return value:  Size  Location     Type
  9386 ;;                  2   18[BANK0 ] int 
  9387 ;; Registers used:
  9388 ;;		wreg, status,2, status,0
  9389 ;; Tracked objects:
  9390 ;;		On entry : 0/0
  9391 ;;		On exit  : 0/0
  9392 ;;		Unchanged: 0/0
  9393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9394 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9395 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9397 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9398 ;;Total ram usage:        6 bytes
  9399 ;; Hardware stack levels used:    1
  9400 ;; Hardware stack levels required when called:    3
  9401 ;; This function calls:
  9402 ;;		Nothing
  9403 ;; This function is called by:
  9404 ;;		_fround
  9405 ;;		_scale
  9406 ;; This function uses a non-reentrant model
  9407 ;;
  9408                           
  9409                           	psect	text13
  9410  01585C                     __ptext13:
  9411                           	opt stack 0
  9412  01585C                     ___awmod:
  9413                           	opt stack 24
  9414                           
  9415                           ; BSR set to: 0
  9416                           ;incstack = 0
  9417  01585C  0E00               	movlw	0
  9418  01585E  0100               	movlb	0	; () banked
  9419  015860  6F77               	movwf	___awmod@sign& (0+255),b
  9420                           
  9421                           ; BSR set to: 0
  9422  015862  0100               	movlb	0	; () banked
  9423  015864  AF73               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9424  015866  D008               	goto	l7752
  9425                           
  9426                           ; BSR set to: 0
  9427  015868  0100               	movlb	0	; () banked
  9428  01586A  6D72               	negf	___awmod@dividend& (0+255),b
  9429  01586C  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
  9430  01586E  B0D8               	btfsc	status,0,c
  9431  015870  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
  9432                           
  9433                           ; BSR set to: 0
  9434  015872  0E01               	movlw	1
  9435  015874  0100               	movlb	0	; () banked
  9436  015876  6F77               	movwf	___awmod@sign& (0+255),b
  9437  015878                     l7752:
  9438                           
  9439                           ; BSR set to: 0
  9440  015878  0100               	movlb	0	; () banked
  9441  01587A  AF75               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9442  01587C  D005               	goto	l7756
  9443                           
  9444                           ; BSR set to: 0
  9445  01587E  0100               	movlb	0	; () banked
  9446  015880  6D74               	negf	___awmod@divisor& (0+255),b
  9447  015882  1F75               	comf	(___awmod@divisor+1)& (0+255),f,b
  9448  015884  B0D8               	btfsc	status,0,c
  9449  015886  2B75               	incf	(___awmod@divisor+1)& (0+255),f,b
  9450  015888                     l7756:
  9451                           
  9452                           ; BSR set to: 0
  9453  015888  0100               	movlb	0	; () banked
  9454  01588A  5174               	movf	___awmod@divisor& (0+255),w,b
  9455  01588C  0100               	movlb	0	; () banked
  9456  01588E  1175               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9457  015890  B4D8               	btfsc	status,2,c
  9458  015892  D026               	goto	l7772
  9459                           
  9460                           ; BSR set to: 0
  9461  015894  0E01               	movlw	1
  9462  015896  0100               	movlb	0	; () banked
  9463  015898  6F76               	movwf	___awmod@counter& (0+255),b
  9464  01589A  D006               	goto	l7762
  9465  01589C                     l7760:
  9466                           
  9467                           ; BSR set to: 0
  9468  01589C  0100               	movlb	0	; () banked
  9469  01589E  90D8               	bcf	status,0,c
  9470  0158A0  3774               	rlcf	___awmod@divisor& (0+255),f,b
  9471  0158A2  3775               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9472  0158A4  0100               	movlb	0	; () banked
  9473  0158A6  2B76               	incf	___awmod@counter& (0+255),f,b
  9474  0158A8                     l7762:
  9475                           
  9476                           ; BSR set to: 0
  9477  0158A8  0100               	movlb	0	; () banked
  9478  0158AA  AF75               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9479  0158AC  D7F7               	goto	l7760
  9480  0158AE                     l7764:
  9481                           
  9482                           ; BSR set to: 0
  9483  0158AE  0100               	movlb	0	; () banked
  9484  0158B0  5174               	movf	___awmod@divisor& (0+255),w,b
  9485  0158B2  0100               	movlb	0	; () banked
  9486  0158B4  5D72               	subwf	___awmod@dividend& (0+255),w,b
  9487  0158B6  0100               	movlb	0	; () banked
  9488  0158B8  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
  9489  0158BA  0100               	movlb	0	; () banked
  9490  0158BC  5973               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9491  0158BE  A0D8               	btfss	status,0,c
  9492  0158C0  D008               	goto	l7768
  9493                           
  9494                           ; BSR set to: 0
  9495  0158C2  0100               	movlb	0	; () banked
  9496  0158C4  5174               	movf	___awmod@divisor& (0+255),w,b
  9497  0158C6  0100               	movlb	0	; () banked
  9498  0158C8  5F72               	subwf	___awmod@dividend& (0+255),f,b
  9499  0158CA  0100               	movlb	0	; () banked
  9500  0158CC  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
  9501  0158CE  0100               	movlb	0	; () banked
  9502  0158D0  5B73               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9503  0158D2                     l7768:
  9504                           
  9505                           ; BSR set to: 0
  9506  0158D2  0100               	movlb	0	; () banked
  9507  0158D4  90D8               	bcf	status,0,c
  9508  0158D6  3375               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9509  0158D8  3374               	rrcf	___awmod@divisor& (0+255),f,b
  9510                           
  9511                           ; BSR set to: 0
  9512  0158DA  0100               	movlb	0	; () banked
  9513  0158DC  2F76               	decfsz	___awmod@counter& (0+255),f,b
  9514  0158DE  D7E7               	goto	l7764
  9515  0158E0                     l7772:
  9516                           
  9517                           ; BSR set to: 0
  9518  0158E0  0100               	movlb	0	; () banked
  9519  0158E2  5177               	movf	___awmod@sign& (0+255),w,b
  9520  0158E4  0100               	movlb	0	; () banked
  9521  0158E6  B4D8               	btfsc	status,2,c
  9522  0158E8  D005               	goto	l7776
  9523                           
  9524                           ; BSR set to: 0
  9525  0158EA  0100               	movlb	0	; () banked
  9526  0158EC  6D72               	negf	___awmod@dividend& (0+255),b
  9527  0158EE  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
  9528  0158F0  B0D8               	btfsc	status,0,c
  9529  0158F2  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
  9530  0158F4                     l7776:
  9531                           
  9532                           ; BSR set to: 0
  9533  0158F4  C072  F072         	movff	___awmod@dividend,?___awmod
  9534  0158F8  C073  F073         	movff	___awmod@dividend+1,?___awmod+1
  9535  0158FC  0012               	return	
  9536  0158FE                     __end_of___awmod:
  9537                           	opt stack 0
  9538                           tblptru	equ	0xFF8
  9539                           tblptrh	equ	0xFF7
  9540                           tblptrl	equ	0xFF6
  9541                           tablat	equ	0xFF5
  9542                           prodh	equ	0xFF4
  9543                           prodl	equ	0xFF3
  9544                           intcon	equ	0xFF2
  9545                           postinc0	equ	0xFEE
  9546                           wreg	equ	0xFE8
  9547                           indf2	equ	0xFDF
  9548                           postinc2	equ	0xFDE
  9549                           fsr2h	equ	0xFDA
  9550                           fsr2l	equ	0xFD9
  9551                           status	equ	0xFD8
  9552                           
  9553 ;; *************** function ___awdiv *****************
  9554 ;; Defined at:
  9555 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9556 ;; Parameters:    Size  Location     Type
  9557 ;;  dividend        2   24[BANK0 ] int 
  9558 ;;  divisor         2   26[BANK0 ] int 
  9559 ;; Auto vars:     Size  Location     Type
  9560 ;;  quotient        2   30[BANK0 ] int 
  9561 ;;  sign            1   29[BANK0 ] unsigned char 
  9562 ;;  counter         1   28[BANK0 ] unsigned char 
  9563 ;; Return value:  Size  Location     Type
  9564 ;;                  2   24[BANK0 ] int 
  9565 ;; Registers used:
  9566 ;;		wreg, status,2, status,0
  9567 ;; Tracked objects:
  9568 ;;		On entry : 0/0
  9569 ;;		On exit  : 0/0
  9570 ;;		Unchanged: 0/0
  9571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9572 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9573 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9575 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9576 ;;Total ram usage:        8 bytes
  9577 ;; Hardware stack levels used:    1
  9578 ;; Hardware stack levels required when called:    3
  9579 ;; This function calls:
  9580 ;;		Nothing
  9581 ;; This function is called by:
  9582 ;;		_fround
  9583 ;;		_scale
  9584 ;;		_sprintf
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           	psect	text14
  9589  0154DA                     __ptext14:
  9590                           	opt stack 0
  9591  0154DA                     ___awdiv:
  9592                           	opt stack 24
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;incstack = 0
  9596  0154DA  0E00               	movlw	0
  9597  0154DC  0100               	movlb	0	; () banked
  9598  0154DE  6F7D               	movwf	___awdiv@sign& (0+255),b
  9599                           
  9600                           ; BSR set to: 0
  9601  0154E0  0100               	movlb	0	; () banked
  9602  0154E2  AF7B               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9603  0154E4  D008               	goto	l7708
  9604                           
  9605                           ; BSR set to: 0
  9606  0154E6  0100               	movlb	0	; () banked
  9607  0154E8  6D7A               	negf	___awdiv@divisor& (0+255),b
  9608  0154EA  1F7B               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9609  0154EC  B0D8               	btfsc	status,0,c
  9610  0154EE  2B7B               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9611                           
  9612                           ; BSR set to: 0
  9613  0154F0  0E01               	movlw	1
  9614  0154F2  0100               	movlb	0	; () banked
  9615  0154F4  6F7D               	movwf	___awdiv@sign& (0+255),b
  9616  0154F6                     l7708:
  9617                           
  9618                           ; BSR set to: 0
  9619  0154F6  0100               	movlb	0	; () banked
  9620  0154F8  AF79               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9621  0154FA  D008               	goto	l7714
  9622                           
  9623                           ; BSR set to: 0
  9624  0154FC  0100               	movlb	0	; () banked
  9625  0154FE  6D78               	negf	___awdiv@dividend& (0+255),b
  9626  015500  1F79               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9627  015502  B0D8               	btfsc	status,0,c
  9628  015504  2B79               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9629                           
  9630                           ; BSR set to: 0
  9631  015506  0E01               	movlw	1
  9632  015508  0100               	movlb	0	; () banked
  9633  01550A  1B7D               	xorwf	___awdiv@sign& (0+255),f,b
  9634  01550C                     l7714:
  9635                           
  9636                           ; BSR set to: 0
  9637  01550C  0E00               	movlw	0
  9638  01550E  0100               	movlb	0	; () banked
  9639  015510  6F7F               	movwf	(___awdiv@quotient+1)& (0+255),b
  9640  015512  0E00               	movlw	0
  9641  015514  6F7E               	movwf	___awdiv@quotient& (0+255),b
  9642                           
  9643                           ; BSR set to: 0
  9644  015516  0100               	movlb	0	; () banked
  9645  015518  517A               	movf	___awdiv@divisor& (0+255),w,b
  9646  01551A  0100               	movlb	0	; () banked
  9647  01551C  117B               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9648  01551E  B4D8               	btfsc	status,2,c
  9649  015520  D02C               	goto	l7736
  9650                           
  9651                           ; BSR set to: 0
  9652  015522  0E01               	movlw	1
  9653  015524  0100               	movlb	0	; () banked
  9654  015526  6F7C               	movwf	___awdiv@counter& (0+255),b
  9655  015528  D006               	goto	l7722
  9656  01552A                     l7720:
  9657                           
  9658                           ; BSR set to: 0
  9659  01552A  0100               	movlb	0	; () banked
  9660  01552C  90D8               	bcf	status,0,c
  9661  01552E  377A               	rlcf	___awdiv@divisor& (0+255),f,b
  9662  015530  377B               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9663  015532  0100               	movlb	0	; () banked
  9664  015534  2B7C               	incf	___awdiv@counter& (0+255),f,b
  9665  015536                     l7722:
  9666                           
  9667                           ; BSR set to: 0
  9668  015536  0100               	movlb	0	; () banked
  9669  015538  AF7B               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9670  01553A  D7F7               	goto	l7720
  9671  01553C                     l7724:
  9672                           
  9673                           ; BSR set to: 0
  9674  01553C  0100               	movlb	0	; () banked
  9675  01553E  90D8               	bcf	status,0,c
  9676  015540  377E               	rlcf	___awdiv@quotient& (0+255),f,b
  9677  015542  377F               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9678                           
  9679                           ; BSR set to: 0
  9680  015544  0100               	movlb	0	; () banked
  9681  015546  517A               	movf	___awdiv@divisor& (0+255),w,b
  9682  015548  0100               	movlb	0	; () banked
  9683  01554A  5D78               	subwf	___awdiv@dividend& (0+255),w,b
  9684  01554C  0100               	movlb	0	; () banked
  9685  01554E  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9686  015550  0100               	movlb	0	; () banked
  9687  015552  5979               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9688  015554  A0D8               	btfss	status,0,c
  9689  015556  D00A               	goto	l7732
  9690                           
  9691                           ; BSR set to: 0
  9692  015558  0100               	movlb	0	; () banked
  9693  01555A  517A               	movf	___awdiv@divisor& (0+255),w,b
  9694  01555C  0100               	movlb	0	; () banked
  9695  01555E  5F78               	subwf	___awdiv@dividend& (0+255),f,b
  9696  015560  0100               	movlb	0	; () banked
  9697  015562  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9698  015564  0100               	movlb	0	; () banked
  9699  015566  5B79               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9700                           
  9701                           ; BSR set to: 0
  9702  015568  0100               	movlb	0	; () banked
  9703  01556A  817E               	bsf	___awdiv@quotient& (0+255),0,b
  9704  01556C                     l7732:
  9705                           
  9706                           ; BSR set to: 0
  9707  01556C  0100               	movlb	0	; () banked
  9708  01556E  90D8               	bcf	status,0,c
  9709  015570  337B               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9710  015572  337A               	rrcf	___awdiv@divisor& (0+255),f,b
  9711                           
  9712                           ; BSR set to: 0
  9713  015574  0100               	movlb	0	; () banked
  9714  015576  2F7C               	decfsz	___awdiv@counter& (0+255),f,b
  9715  015578  D7E1               	goto	l7724
  9716  01557A                     l7736:
  9717                           
  9718                           ; BSR set to: 0
  9719  01557A  0100               	movlb	0	; () banked
  9720  01557C  517D               	movf	___awdiv@sign& (0+255),w,b
  9721  01557E  0100               	movlb	0	; () banked
  9722  015580  B4D8               	btfsc	status,2,c
  9723  015582  D005               	goto	l7740
  9724                           
  9725                           ; BSR set to: 0
  9726  015584  0100               	movlb	0	; () banked
  9727  015586  6D7E               	negf	___awdiv@quotient& (0+255),b
  9728  015588  1F7F               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9729  01558A  B0D8               	btfsc	status,0,c
  9730  01558C  2B7F               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9731  01558E                     l7740:
  9732                           
  9733                           ; BSR set to: 0
  9734  01558E  C07E  F078         	movff	___awdiv@quotient,?___awdiv
  9735  015592  C07F  F079         	movff	___awdiv@quotient+1,?___awdiv+1
  9736  015596  0012               	return	
  9737  015598                     __end_of___awdiv:
  9738                           	opt stack 0
  9739                           tblptru	equ	0xFF8
  9740                           tblptrh	equ	0xFF7
  9741                           tblptrl	equ	0xFF6
  9742                           tablat	equ	0xFF5
  9743                           prodh	equ	0xFF4
  9744                           prodl	equ	0xFF3
  9745                           intcon	equ	0xFF2
  9746                           postinc0	equ	0xFEE
  9747                           wreg	equ	0xFE8
  9748                           indf2	equ	0xFDF
  9749                           postinc2	equ	0xFDE
  9750                           fsr2h	equ	0xFDA
  9751                           fsr2l	equ	0xFD9
  9752                           status	equ	0xFD8
  9753                           
  9754 ;; *************** function __tdiv_to_l_ *****************
  9755 ;; Defined at:
  9756 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  9757 ;; Parameters:    Size  Location     Type
  9758 ;;  f1              4   18[BANK0 ] float 
  9759 ;;  f2              4   22[BANK0 ] float 
  9760 ;; Auto vars:     Size  Location     Type
  9761 ;;  quot            4   29[BANK0 ] unsigned long 
  9762 ;;  exp1            1   34[BANK0 ] unsigned char 
  9763 ;;  cntr            1   33[BANK0 ] unsigned char 
  9764 ;; Return value:  Size  Location     Type
  9765 ;;                  4   18[BANK0 ] unsigned long 
  9766 ;; Registers used:
  9767 ;;		wreg, status,2, status,0
  9768 ;; Tracked objects:
  9769 ;;		On entry : 0/0
  9770 ;;		On exit  : 0/0
  9771 ;;		Unchanged: 0/0
  9772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9773 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9774 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9775 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9776 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9777 ;;Total ram usage:       17 bytes
  9778 ;; Hardware stack levels used:    1
  9779 ;; Hardware stack levels required when called:    3
  9780 ;; This function calls:
  9781 ;;		Nothing
  9782 ;; This function is called by:
  9783 ;;		_sprintf
  9784 ;; This function uses a non-reentrant model
  9785 ;;
  9786                           
  9787                           	psect	text15
  9788  014B72                     __ptext15:
  9789                           	opt stack 0
  9790  014B72                     __tdiv_to_l_:
  9791                           	opt stack 25
  9792                           
  9793                           ; BSR set to: 0
  9794                           ;incstack = 0
  9795  014B72  C074  F07A         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9796  014B76  0100               	movlb	0	; () banked
  9797  014B78  6B7B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9798  014B7A  6B7C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9799  014B7C  0100               	movlb	0	; () banked
  9800  014B7E  3573               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9801  014B80  0100               	movlb	0	; () banked
  9802  014B82  377A               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9803  014B84  E301               	bnc	u10411
  9804  014B86  817B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9805  014B88                     u10411:
  9806  014B88  0100               	movlb	0	; () banked
  9807  014B8A  517A               	movf	??__tdiv_to_l_& (0+255),w,b
  9808  014B8C  0100               	movlb	0	; () banked
  9809  014B8E  6F82               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9810  014B90  0100               	movlb	0	; () banked
  9811  014B92  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9812  014B94  A4D8               	btfss	status,2,c
  9813  014B96  D00A               	goto	l7900
  9814                           
  9815                           ; BSR set to: 0
  9816  014B98  0E00               	movlw	0
  9817  014B9A  0100               	movlb	0	; () banked
  9818  014B9C  6F72               	movwf	?__tdiv_to_l_& (0+255),b
  9819  014B9E  0E00               	movlw	0
  9820  014BA0  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9821  014BA2  0E00               	movlw	0
  9822  014BA4  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9823  014BA6  0E00               	movlw	0
  9824  014BA8  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9825                           
  9826                           ; BSR set to: 0
  9827  014BAA  0012               	return	
  9828  014BAC                     l7900:
  9829                           
  9830                           ; BSR set to: 0
  9831  014BAC  C078  F07A         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9832  014BB0  0100               	movlb	0	; () banked
  9833  014BB2  6B7B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9834  014BB4  6B7C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9835  014BB6  0100               	movlb	0	; () banked
  9836  014BB8  3577               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9837  014BBA  0100               	movlb	0	; () banked
  9838  014BBC  377A               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9839  014BBE  E301               	bnc	u10431
  9840  014BC0  817B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9841  014BC2                     u10431:
  9842  014BC2  0100               	movlb	0	; () banked
  9843  014BC4  517A               	movf	??__tdiv_to_l_& (0+255),w,b
  9844  014BC6  0100               	movlb	0	; () banked
  9845  014BC8  6F81               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9846  014BCA  0100               	movlb	0	; () banked
  9847  014BCC  5181               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9848  014BCE  A4D8               	btfss	status,2,c
  9849  014BD0  D00A               	goto	l7906
  9850                           
  9851                           ; BSR set to: 0
  9852  014BD2  0E00               	movlw	0
  9853  014BD4  0100               	movlb	0	; () banked
  9854  014BD6  6F72               	movwf	?__tdiv_to_l_& (0+255),b
  9855  014BD8  0E00               	movlw	0
  9856  014BDA  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9857  014BDC  0E00               	movlw	0
  9858  014BDE  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9859  014BE0  0E00               	movlw	0
  9860  014BE2  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9861                           
  9862                           ; BSR set to: 0
  9863  014BE4  0012               	return	
  9864  014BE6                     l7906:
  9865                           
  9866                           ; BSR set to: 0
  9867  014BE6  0100               	movlb	0	; () banked
  9868  014BE8  8F73               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9869                           
  9870                           ; BSR set to: 0
  9871  014BEA  0EFF               	movlw	255
  9872  014BEC  0100               	movlb	0	; () banked
  9873  014BEE  1772               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9874  014BF0  0EFF               	movlw	255
  9875  014BF2  0100               	movlb	0	; () banked
  9876  014BF4  1773               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9877  014BF6  0E00               	movlw	0
  9878  014BF8  0100               	movlb	0	; () banked
  9879  014BFA  1774               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9880  014BFC  0100               	movlb	0	; () banked
  9881  014BFE  8F77               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9882                           
  9883                           ; BSR set to: 0
  9884  014C00  0EFF               	movlw	255
  9885  014C02  0100               	movlb	0	; () banked
  9886  014C04  1776               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9887  014C06  0EFF               	movlw	255
  9888  014C08  0100               	movlb	0	; () banked
  9889  014C0A  1777               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9890  014C0C  0E00               	movlw	0
  9891  014C0E  0100               	movlb	0	; () banked
  9892  014C10  1778               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9893                           
  9894                           ; BSR set to: 0
  9895  014C12  0E00               	movlw	0
  9896  014C14  0100               	movlb	0	; () banked
  9897  014C16  6F7D               	movwf	__tdiv_to_l_@quot& (0+255),b
  9898  014C18  0E00               	movlw	0
  9899  014C1A  6F7E               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9900  014C1C  0E00               	movlw	0
  9901  014C1E  6F7F               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9902  014C20  0E00               	movlw	0
  9903  014C22  6F80               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  9904                           
  9905                           ; BSR set to: 0
  9906  014C24  0E7F               	movlw	127
  9907  014C26  0100               	movlb	0	; () banked
  9908  014C28  5F82               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9909                           
  9910                           ; BSR set to: 0
  9911  014C2A  0100               	movlb	0	; () banked
  9912  014C2C  5181               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9913  014C2E  0F98               	addlw	152
  9914  014C30  0100               	movlb	0	; () banked
  9915  014C32  5F82               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9916                           
  9917                           ; BSR set to: 0
  9918  014C34  0E18               	movlw	24
  9919  014C36  0100               	movlb	0	; () banked
  9920  014C38  6F81               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9921  014C3A                     l1276:
  9922                           
  9923                           ; BSR set to: 0
  9924  014C3A  0100               	movlb	0	; () banked
  9925  014C3C  90D8               	bcf	status,0,c
  9926  014C3E  377D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9927  014C40  377E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9928  014C42  377F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9929  014C44  3780               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9930                           
  9931                           ; BSR set to: 0
  9932  014C46  0100               	movlb	0	; () banked
  9933  014C48  5176               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9934  014C4A  0100               	movlb	0	; () banked
  9935  014C4C  5D72               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  9936  014C4E  0100               	movlb	0	; () banked
  9937  014C50  5177               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9938  014C52  0100               	movlb	0	; () banked
  9939  014C54  5973               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9940  014C56  0100               	movlb	0	; () banked
  9941  014C58  5178               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9942  014C5A  0100               	movlb	0	; () banked
  9943  014C5C  5974               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  9944  014C5E  A0D8               	btfss	status,0,c
  9945  014C60  D00E               	goto	l1277
  9946                           
  9947                           ; BSR set to: 0
  9948  014C62  0100               	movlb	0	; () banked
  9949  014C64  5176               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9950  014C66  0100               	movlb	0	; () banked
  9951  014C68  5F72               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  9952  014C6A  0100               	movlb	0	; () banked
  9953  014C6C  5177               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9954  014C6E  0100               	movlb	0	; () banked
  9955  014C70  5B73               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9956  014C72  0100               	movlb	0	; () banked
  9957  014C74  5178               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9958  014C76  0100               	movlb	0	; () banked
  9959  014C78  5B74               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9960                           
  9961                           ; BSR set to: 0
  9962  014C7A  0100               	movlb	0	; () banked
  9963  014C7C  817D               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  9964  014C7E                     l1277:
  9965                           
  9966                           ; BSR set to: 0
  9967  014C7E  0100               	movlb	0	; () banked
  9968  014C80  90D8               	bcf	status,0,c
  9969  014C82  3772               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  9970  014C84  3773               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9971  014C86  3774               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9972                           
  9973                           ; BSR set to: 0
  9974  014C88  0100               	movlb	0	; () banked
  9975  014C8A  2F81               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  9976  014C8C  D7D6               	goto	l1276
  9977                           
  9978                           ; BSR set to: 0
  9979                           
  9980                           ; BSR set to: 0
  9981  014C8E  0100               	movlb	0	; () banked
  9982  014C90  AF82               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  9983  014C92  D01A               	goto	l7940
  9984                           
  9985                           ; BSR set to: 0
  9986  014C94  0100               	movlb	0	; () banked
  9987  014C96  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9988  014C98  0A80               	xorlw	128
  9989  014C9A  0F97               	addlw	151
  9990  014C9C  B0D8               	btfsc	status,0,c
  9991  014C9E  D00A               	goto	l7936
  9992                           
  9993                           ; BSR set to: 0
  9994  014CA0  0E00               	movlw	0
  9995  014CA2  0100               	movlb	0	; () banked
  9996  014CA4  6F72               	movwf	?__tdiv_to_l_& (0+255),b
  9997  014CA6  0E00               	movlw	0
  9998  014CA8  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9999  014CAA  0E00               	movlw	0
 10000  014CAC  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10001  014CAE  0E00               	movlw	0
 10002  014CB0  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10003                           
 10004                           ; BSR set to: 0
 10005  014CB2  0012               	return	
 10006  014CB4                     l7936:
 10007                           
 10008                           ; BSR set to: 0
 10009  014CB4  0100               	movlb	0	; () banked
 10010  014CB6  90D8               	bcf	status,0,c
 10011  014CB8  3380               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10012  014CBA  337F               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10013  014CBC  337E               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10014  014CBE  337D               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10015                           
 10016                           ; BSR set to: 0
 10017  014CC0  0100               	movlb	0	; () banked
 10018  014CC2  3F82               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10019  014CC4  D7F7               	goto	l7936
 10020                           
 10021                           ; BSR set to: 0
 10022  014CC6  D01B               	goto	l1283
 10023  014CC8                     l7940:
 10024                           
 10025                           ; BSR set to: 0
 10026  014CC8  0E17               	movlw	23
 10027  014CCA  0100               	movlb	0	; () banked
 10028  014CCC  6582               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10029  014CCE  D012               	goto	l7948
 10030                           
 10031                           ; BSR set to: 0
 10032  014CD0  0E00               	movlw	0
 10033  014CD2  0100               	movlb	0	; () banked
 10034  014CD4  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 10035  014CD6  0E00               	movlw	0
 10036  014CD8  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10037  014CDA  0E00               	movlw	0
 10038  014CDC  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10039  014CDE  0E00               	movlw	0
 10040  014CE0  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10041                           
 10042                           ; BSR set to: 0
 10043  014CE2  0012               	return	
 10044  014CE4                     l7946:
 10045                           
 10046                           ; BSR set to: 0
 10047  014CE4  0100               	movlb	0	; () banked
 10048  014CE6  90D8               	bcf	status,0,c
 10049  014CE8  377D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10050  014CEA  377E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10051  014CEC  377F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10052  014CEE  3780               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10053  014CF0  0100               	movlb	0	; () banked
 10054  014CF2  0782               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10055  014CF4                     l7948:
 10056                           
 10057                           ; BSR set to: 0
 10058  014CF4  0100               	movlb	0	; () banked
 10059  014CF6  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10060  014CF8  0100               	movlb	0	; () banked
 10061  014CFA  A4D8               	btfss	status,2,c
 10062  014CFC  D7F3               	goto	l7946
 10063  014CFE                     l1283:
 10064                           
 10065                           ; BSR set to: 0
 10066  014CFE  C07D  F072         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10067  014D02  C07E  F073         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10068  014D06  C07F  F074         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10069  014D0A  C080  F075         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10070                           
 10071                           ; BSR set to: 0
 10072  014D0E  0012               	return		;funcret
 10073  014D10                     __end_of__tdiv_to_l_:
 10074                           	opt stack 0
 10075                           tblptru	equ	0xFF8
 10076                           tblptrh	equ	0xFF7
 10077                           tblptrl	equ	0xFF6
 10078                           tablat	equ	0xFF5
 10079                           prodh	equ	0xFF4
 10080                           prodl	equ	0xFF3
 10081                           intcon	equ	0xFF2
 10082                           postinc0	equ	0xFEE
 10083                           wreg	equ	0xFE8
 10084                           indf2	equ	0xFDF
 10085                           postinc2	equ	0xFDE
 10086                           fsr2h	equ	0xFDA
 10087                           fsr2l	equ	0xFD9
 10088                           status	equ	0xFD8
 10089                           
 10090 ;; *************** function __div_to_l_ *****************
 10091 ;; Defined at:
 10092 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
 10093 ;; Parameters:    Size  Location     Type
 10094 ;;  f1              4   18[BANK0 ] unsigned long 
 10095 ;;  f2              4   22[BANK0 ] unsigned long 
 10096 ;; Auto vars:     Size  Location     Type
 10097 ;;  quot            4   26[BANK0 ] unsigned long 
 10098 ;;  exp1            1   31[BANK0 ] unsigned char 
 10099 ;;  cntr            1   30[BANK0 ] unsigned char 
 10100 ;; Return value:  Size  Location     Type
 10101 ;;                  4   18[BANK0 ] unsigned long 
 10102 ;; Registers used:
 10103 ;;		wreg, status,2, status,0
 10104 ;; Tracked objects:
 10105 ;;		On entry : 0/0
 10106 ;;		On exit  : 0/0
 10107 ;;		Unchanged: 0/0
 10108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10109 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10110 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10112 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10113 ;;Total ram usage:       14 bytes
 10114 ;; Hardware stack levels used:    1
 10115 ;; Hardware stack levels required when called:    3
 10116 ;; This function calls:
 10117 ;;		Nothing
 10118 ;; This function is called by:
 10119 ;;		_sprintf
 10120 ;; This function uses a non-reentrant model
 10121 ;;
 10122                           
 10123                           	psect	text16
 10124  014EA0                     __ptext16:
 10125                           	opt stack 0
 10126  014EA0                     __div_to_l_:
 10127                           	opt stack 25
 10128                           
 10129                           ; BSR set to: 0
 10130                           ;incstack = 0
 10131  014EA0  0100               	movlb	0	; () banked
 10132  014EA2  3574               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10133  014EA4  3575               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10134  014EA6  0100               	movlb	0	; () banked
 10135  014EA8  6F7F               	movwf	__div_to_l_@exp1& (0+255),b
 10136  014EAA  0100               	movlb	0	; () banked
 10137  014EAC  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 10138  014EAE  A4D8               	btfss	status,2,c
 10139  014EB0  D00A               	goto	l7956
 10140                           
 10141                           ; BSR set to: 0
 10142  014EB2  0E00               	movlw	0
 10143  014EB4  0100               	movlb	0	; () banked
 10144  014EB6  6F72               	movwf	?__div_to_l_& (0+255),b
 10145  014EB8  0E00               	movlw	0
 10146  014EBA  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10147  014EBC  0E00               	movlw	0
 10148  014EBE  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10149  014EC0  0E00               	movlw	0
 10150  014EC2  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10151                           
 10152                           ; BSR set to: 0
 10153  014EC4  0012               	return	
 10154  014EC6                     l7956:
 10155                           
 10156                           ; BSR set to: 0
 10157  014EC6  0100               	movlb	0	; () banked
 10158  014EC8  3578               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10159  014ECA  3579               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10160  014ECC  0100               	movlb	0	; () banked
 10161  014ECE  6F7E               	movwf	__div_to_l_@cntr& (0+255),b
 10162  014ED0  0100               	movlb	0	; () banked
 10163  014ED2  517E               	movf	__div_to_l_@cntr& (0+255),w,b
 10164  014ED4  A4D8               	btfss	status,2,c
 10165  014ED6  D00A               	goto	l7962
 10166                           
 10167                           ; BSR set to: 0
 10168  014ED8  0E00               	movlw	0
 10169  014EDA  0100               	movlb	0	; () banked
 10170  014EDC  6F72               	movwf	?__div_to_l_& (0+255),b
 10171  014EDE  0E00               	movlw	0
 10172  014EE0  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10173  014EE2  0E00               	movlw	0
 10174  014EE4  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10175  014EE6  0E00               	movlw	0
 10176  014EE8  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10177                           
 10178                           ; BSR set to: 0
 10179  014EEA  0012               	return	
 10180  014EEC                     l7962:
 10181                           
 10182                           ; BSR set to: 0
 10183  014EEC  0100               	movlb	0	; () banked
 10184  014EEE  8F74               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10185                           
 10186                           ; BSR set to: 0
 10187  014EF0  0EFF               	movlw	255
 10188  014EF2  0100               	movlb	0	; () banked
 10189  014EF4  1772               	andwf	__div_to_l_@f1& (0+255),f,b
 10190  014EF6  0EFF               	movlw	255
 10191  014EF8  1773               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10192  014EFA  0EFF               	movlw	255
 10193  014EFC  1774               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10194  014EFE  0E00               	movlw	0
 10195  014F00  1775               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10196                           
 10197                           ; BSR set to: 0
 10198  014F02  0100               	movlb	0	; () banked
 10199  014F04  8F78               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10200  014F06  0EFF               	movlw	255
 10201  014F08  0100               	movlb	0	; () banked
 10202  014F0A  1776               	andwf	__div_to_l_@f2& (0+255),f,b
 10203  014F0C  0EFF               	movlw	255
 10204  014F0E  1777               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10205  014F10  0EFF               	movlw	255
 10206  014F12  1778               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10207  014F14  0E00               	movlw	0
 10208  014F16  1779               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10209                           
 10210                           ; BSR set to: 0
 10211  014F18  0E00               	movlw	0
 10212  014F1A  0100               	movlb	0	; () banked
 10213  014F1C  6F7A               	movwf	__div_to_l_@quot& (0+255),b
 10214  014F1E  0E00               	movlw	0
 10215  014F20  6F7B               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10216  014F22  0E00               	movlw	0
 10217  014F24  6F7C               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10218  014F26  0E00               	movlw	0
 10219  014F28  6F7D               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10220                           
 10221                           ; BSR set to: 0
 10222  014F2A  0E7F               	movlw	127
 10223  014F2C  0100               	movlb	0	; () banked
 10224  014F2E  5F7F               	subwf	__div_to_l_@exp1& (0+255),f,b
 10225                           
 10226                           ; BSR set to: 0
 10227  014F30  0100               	movlb	0	; () banked
 10228  014F32  517E               	movf	__div_to_l_@cntr& (0+255),w,b
 10229  014F34  0FA0               	addlw	160
 10230  014F36  0100               	movlb	0	; () banked
 10231  014F38  5F7F               	subwf	__div_to_l_@exp1& (0+255),f,b
 10232                           
 10233                           ; BSR set to: 0
 10234  014F3A  0E20               	movlw	32
 10235  014F3C  0100               	movlb	0	; () banked
 10236  014F3E  6F7E               	movwf	__div_to_l_@cntr& (0+255),b
 10237  014F40                     l7976:
 10238                           
 10239                           ; BSR set to: 0
 10240  014F40  0100               	movlb	0	; () banked
 10241  014F42  90D8               	bcf	status,0,c
 10242  014F44  377A               	rlcf	__div_to_l_@quot& (0+255),f,b
 10243  014F46  377B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10244  014F48  377C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10245  014F4A  377D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10246                           
 10247                           ; BSR set to: 0
 10248  014F4C  0100               	movlb	0	; () banked
 10249  014F4E  5176               	movf	__div_to_l_@f2& (0+255),w,b
 10250  014F50  0100               	movlb	0	; () banked
 10251  014F52  5D72               	subwf	__div_to_l_@f1& (0+255),w,b
 10252  014F54  0100               	movlb	0	; () banked
 10253  014F56  5177               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10254  014F58  0100               	movlb	0	; () banked
 10255  014F5A  5973               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10256  014F5C  0100               	movlb	0	; () banked
 10257  014F5E  5178               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10258  014F60  0100               	movlb	0	; () banked
 10259  014F62  5974               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10260  014F64  0100               	movlb	0	; () banked
 10261  014F66  5179               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10262  014F68  0100               	movlb	0	; () banked
 10263  014F6A  5975               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10264  014F6C  A0D8               	btfss	status,0,c
 10265  014F6E  D012               	goto	l7984
 10266                           
 10267                           ; BSR set to: 0
 10268  014F70  0100               	movlb	0	; () banked
 10269  014F72  5176               	movf	__div_to_l_@f2& (0+255),w,b
 10270  014F74  0100               	movlb	0	; () banked
 10271  014F76  5F72               	subwf	__div_to_l_@f1& (0+255),f,b
 10272  014F78  0100               	movlb	0	; () banked
 10273  014F7A  5177               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10274  014F7C  0100               	movlb	0	; () banked
 10275  014F7E  5B73               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10276  014F80  0100               	movlb	0	; () banked
 10277  014F82  5178               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10278  014F84  0100               	movlb	0	; () banked
 10279  014F86  5B74               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10280  014F88  0100               	movlb	0	; () banked
 10281  014F8A  5179               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10282  014F8C  0100               	movlb	0	; () banked
 10283  014F8E  5B75               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10284                           
 10285                           ; BSR set to: 0
 10286  014F90  0100               	movlb	0	; () banked
 10287  014F92  817A               	bsf	__div_to_l_@quot& (0+255),0,b
 10288  014F94                     l7984:
 10289                           
 10290                           ; BSR set to: 0
 10291  014F94  0100               	movlb	0	; () banked
 10292  014F96  90D8               	bcf	status,0,c
 10293  014F98  3772               	rlcf	__div_to_l_@f1& (0+255),f,b
 10294  014F9A  3773               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10295  014F9C  3774               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10296  014F9E  3775               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10297                           
 10298                           ; BSR set to: 0
 10299  014FA0  0100               	movlb	0	; () banked
 10300  014FA2  2F7E               	decfsz	__div_to_l_@cntr& (0+255),f,b
 10301  014FA4  D7CD               	goto	l7976
 10302                           
 10303                           ; BSR set to: 0
 10304                           
 10305                           ; BSR set to: 0
 10306  014FA6  0100               	movlb	0	; () banked
 10307  014FA8  AF7F               	btfss	__div_to_l_@exp1& (0+255),7,b
 10308  014FAA  D01A               	goto	l8000
 10309                           
 10310                           ; BSR set to: 0
 10311  014FAC  0100               	movlb	0	; () banked
 10312  014FAE  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 10313  014FB0  0A80               	xorlw	128
 10314  014FB2  0F9F               	addlw	159
 10315  014FB4  B0D8               	btfsc	status,0,c
 10316  014FB6  D00A               	goto	l7996
 10317                           
 10318                           ; BSR set to: 0
 10319  014FB8  0E00               	movlw	0
 10320  014FBA  0100               	movlb	0	; () banked
 10321  014FBC  6F72               	movwf	?__div_to_l_& (0+255),b
 10322  014FBE  0E00               	movlw	0
 10323  014FC0  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10324  014FC2  0E00               	movlw	0
 10325  014FC4  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10326  014FC6  0E00               	movlw	0
 10327  014FC8  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10328                           
 10329                           ; BSR set to: 0
 10330  014FCA  0012               	return	
 10331  014FCC                     l7996:
 10332                           
 10333                           ; BSR set to: 0
 10334  014FCC  0100               	movlb	0	; () banked
 10335  014FCE  90D8               	bcf	status,0,c
 10336  014FD0  337D               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 10337  014FD2  337C               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 10338  014FD4  337B               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 10339  014FD6  337A               	rrcf	__div_to_l_@quot& (0+255),f,b
 10340                           
 10341                           ; BSR set to: 0
 10342  014FD8  0100               	movlb	0	; () banked
 10343  014FDA  3F7F               	incfsz	__div_to_l_@exp1& (0+255),f,b
 10344  014FDC  D7F7               	goto	l7996
 10345                           
 10346                           ; BSR set to: 0
 10347  014FDE  D01B               	goto	l1179
 10348  014FE0                     l8000:
 10349                           
 10350                           ; BSR set to: 0
 10351  014FE0  0E1F               	movlw	31
 10352  014FE2  0100               	movlb	0	; () banked
 10353  014FE4  657F               	cpfsgt	__div_to_l_@exp1& (0+255),b
 10354  014FE6  D012               	goto	l8008
 10355                           
 10356                           ; BSR set to: 0
 10357  014FE8  0E00               	movlw	0
 10358  014FEA  0100               	movlb	0	; () banked
 10359  014FEC  6F72               	movwf	?__div_to_l_& (0+255),b
 10360  014FEE  0E00               	movlw	0
 10361  014FF0  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10362  014FF2  0E00               	movlw	0
 10363  014FF4  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10364  014FF6  0E00               	movlw	0
 10365  014FF8  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10366                           
 10367                           ; BSR set to: 0
 10368  014FFA  0012               	return	
 10369  014FFC                     l8006:
 10370                           
 10371                           ; BSR set to: 0
 10372  014FFC  0100               	movlb	0	; () banked
 10373  014FFE  90D8               	bcf	status,0,c
 10374  015000  377A               	rlcf	__div_to_l_@quot& (0+255),f,b
 10375  015002  377B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10376  015004  377C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10377  015006  377D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10378  015008  0100               	movlb	0	; () banked
 10379  01500A  077F               	decf	__div_to_l_@exp1& (0+255),f,b
 10380  01500C                     l8008:
 10381                           
 10382                           ; BSR set to: 0
 10383  01500C  0100               	movlb	0	; () banked
 10384  01500E  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 10385  015010  0100               	movlb	0	; () banked
 10386  015012  A4D8               	btfss	status,2,c
 10387  015014  D7F3               	goto	l8006
 10388  015016                     l1179:
 10389                           
 10390                           ; BSR set to: 0
 10391  015016  C07A  F072         	movff	__div_to_l_@quot,?__div_to_l_
 10392  01501A  C07B  F073         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10393  01501E  C07C  F074         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10394  015022  C07D  F075         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10395                           
 10396                           ; BSR set to: 0
 10397  015026  0012               	return		;funcret
 10398  015028                     __end_of__div_to_l_:
 10399                           	opt stack 0
 10400                           tblptru	equ	0xFF8
 10401                           tblptrh	equ	0xFF7
 10402                           tblptrl	equ	0xFF6
 10403                           tablat	equ	0xFF5
 10404                           prodh	equ	0xFF4
 10405                           prodl	equ	0xFF3
 10406                           intcon	equ	0xFF2
 10407                           postinc0	equ	0xFEE
 10408                           wreg	equ	0xFE8
 10409                           indf2	equ	0xFDF
 10410                           postinc2	equ	0xFDE
 10411                           fsr2h	equ	0xFDA
 10412                           fsr2l	equ	0xFD9
 10413                           status	equ	0xFD8
 10414                           
 10415 ;; *************** function ___xxtofl *****************
 10416 ;; Defined at:
 10417 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 10418 ;; Parameters:    Size  Location     Type
 10419 ;;  sign            1    wreg     unsigned char 
 10420 ;;  val             4   18[BANK0 ] long 
 10421 ;; Auto vars:     Size  Location     Type
 10422 ;;  sign            1   26[BANK0 ] unsigned char 
 10423 ;;  arg             4   28[BANK0 ] unsigned long 
 10424 ;;  exp             1   27[BANK0 ] unsigned char 
 10425 ;; Return value:  Size  Location     Type
 10426 ;;                  4   18[BANK0 ] unsigned char 
 10427 ;; Registers used:
 10428 ;;		wreg, status,2, status,0
 10429 ;; Tracked objects:
 10430 ;;		On entry : 0/0
 10431 ;;		On exit  : 0/0
 10432 ;;		Unchanged: 0/0
 10433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10434 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10435 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10436 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10437 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10438 ;;Total ram usage:       14 bytes
 10439 ;; Hardware stack levels used:    1
 10440 ;; Hardware stack levels required when called:    3
 10441 ;; This function calls:
 10442 ;;		Nothing
 10443 ;; This function is called by:
 10444 ;;		_main
 10445 ;;		_LCD_Handler
 10446 ;;		_sprintf
 10447 ;; This function uses a non-reentrant model
 10448 ;;
 10449                           
 10450                           	psect	text17
 10451  0147DE                     __ptext17:
 10452                           	opt stack 0
 10453  0147DE                     ___xxtofl:
 10454                           	opt stack 27
 10455                           
 10456                           ; BSR set to: 0
 10457                           ;incstack = 0
 10458                           ;___xxtofl@sign stored from wreg
 10459  0147DE  0100               	movlb	0	; () banked
 10460  0147E0  6F7A               	movwf	___xxtofl@sign& (0+255),b
 10461  0147E2  0100               	movlb	0	; () banked
 10462  0147E4  517A               	movf	___xxtofl@sign& (0+255),w,b
 10463  0147E6  0100               	movlb	0	; () banked
 10464  0147E8  B4D8               	btfsc	status,2,c
 10465  0147EA  D01E               	goto	l1574
 10466                           
 10467                           ; BSR set to: 0
 10468  0147EC  0100               	movlb	0	; () banked
 10469  0147EE  AF75               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10470  0147F0  D01B               	goto	l1574
 10471                           
 10472                           ; BSR set to: 0
 10473  0147F2  C072  F076         	movff	___xxtofl@val,??___xxtofl
 10474  0147F6  C073  F077         	movff	___xxtofl@val+1,??___xxtofl+1
 10475  0147FA  C074  F078         	movff	___xxtofl@val+2,??___xxtofl+2
 10476  0147FE  C075  F079         	movff	___xxtofl@val+3,??___xxtofl+3
 10477  014802  0100               	movlb	0	; () banked
 10478  014804  1F76               	comf	??___xxtofl& (0+255),f,b
 10479  014806  1F77               	comf	(??___xxtofl+1)& (0+255),f,b
 10480  014808  1F78               	comf	(??___xxtofl+2)& (0+255),f,b
 10481  01480A  1F79               	comf	(??___xxtofl+3)& (0+255),f,b
 10482  01480C  2B76               	incf	??___xxtofl& (0+255),f,b
 10483  01480E  0E00               	movlw	0
 10484  014810  2377               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10485  014812  2378               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10486  014814  2379               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10487  014816  C076  F07C         	movff	??___xxtofl,___xxtofl@arg
 10488  01481A  C077  F07D         	movff	??___xxtofl+1,___xxtofl@arg+1
 10489  01481E  C078  F07E         	movff	??___xxtofl+2,___xxtofl@arg+2
 10490  014822  C079  F07F         	movff	??___xxtofl+3,___xxtofl@arg+3
 10491  014826  D008               	goto	l8134
 10492  014828                     l1574:
 10493                           
 10494                           ; BSR set to: 0
 10495  014828  C072  F07C         	movff	___xxtofl@val,___xxtofl@arg
 10496  01482C  C073  F07D         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10497  014830  C074  F07E         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10498  014834  C075  F07F         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10499  014838                     l8134:
 10500                           
 10501                           ; BSR set to: 0
 10502  014838  0100               	movlb	0	; () banked
 10503  01483A  5172               	movf	___xxtofl@val& (0+255),w,b
 10504  01483C  0100               	movlb	0	; () banked
 10505  01483E  1173               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10506  014840  0100               	movlb	0	; () banked
 10507  014842  1174               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10508  014844  0100               	movlb	0	; () banked
 10509  014846  1175               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 10510  014848  A4D8               	btfss	status,2,c
 10511  01484A  D00A               	goto	l8140
 10512                           
 10513                           ; BSR set to: 0
 10514  01484C  0E00               	movlw	0
 10515  01484E  0100               	movlb	0	; () banked
 10516  014850  6F72               	movwf	?___xxtofl& (0+255),b
 10517  014852  0E00               	movlw	0
 10518  014854  6F73               	movwf	(?___xxtofl+1)& (0+255),b
 10519  014856  0E00               	movlw	0
 10520  014858  6F74               	movwf	(?___xxtofl+2)& (0+255),b
 10521  01485A  0E00               	movlw	0
 10522  01485C  6F75               	movwf	(?___xxtofl+3)& (0+255),b
 10523                           
 10524                           ; BSR set to: 0
 10525  01485E  0012               	return	
 10526  014860                     l8140:
 10527                           
 10528                           ; BSR set to: 0
 10529  014860  0E96               	movlw	150
 10530  014862  0100               	movlb	0	; () banked
 10531  014864  6F7B               	movwf	___xxtofl@exp& (0+255),b
 10532  014866  D008               	goto	l8144
 10533  014868                     l8142:
 10534                           
 10535                           ; BSR set to: 0
 10536  014868  0100               	movlb	0	; () banked
 10537  01486A  2B7B               	incf	___xxtofl@exp& (0+255),f,b
 10538  01486C  0100               	movlb	0	; () banked
 10539  01486E  90D8               	bcf	status,0,c
 10540  014870  337F               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10541  014872  337E               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10542  014874  337D               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10543  014876  337C               	rrcf	___xxtofl@arg& (0+255),f,b
 10544  014878                     l8144:
 10545                           
 10546                           ; BSR set to: 0
 10547  014878  0E00               	movlw	0
 10548  01487A  0100               	movlb	0	; () banked
 10549  01487C  157C               	andwf	___xxtofl@arg& (0+255),w,b
 10550  01487E  0100               	movlb	0	; () banked
 10551  014880  6F76               	movwf	??___xxtofl& (0+255),b
 10552  014882  0E00               	movlw	0
 10553  014884  0100               	movlb	0	; () banked
 10554  014886  157D               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10555  014888  0100               	movlb	0	; () banked
 10556  01488A  6F77               	movwf	(??___xxtofl+1)& (0+255),b
 10557  01488C  0E00               	movlw	0
 10558  01488E  0100               	movlb	0	; () banked
 10559  014890  157E               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10560  014892  0100               	movlb	0	; () banked
 10561  014894  6F78               	movwf	(??___xxtofl+2)& (0+255),b
 10562  014896  0EFE               	movlw	254
 10563  014898  0100               	movlb	0	; () banked
 10564  01489A  157F               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10565  01489C  0100               	movlb	0	; () banked
 10566  01489E  6F79               	movwf	(??___xxtofl+3)& (0+255),b
 10567  0148A0  0100               	movlb	0	; () banked
 10568  0148A2  5176               	movf	??___xxtofl& (0+255),w,b
 10569  0148A4  0100               	movlb	0	; () banked
 10570  0148A6  1177               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10571  0148A8  0100               	movlb	0	; () banked
 10572  0148AA  1178               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10573  0148AC  0100               	movlb	0	; () banked
 10574  0148AE  1179               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10575  0148B0  B4D8               	btfsc	status,2,c
 10576  0148B2  D010               	goto	l1581
 10577  0148B4  D7D9               	goto	l8142
 10578  0148B6                     l8146:
 10579                           
 10580                           ; BSR set to: 0
 10581  0148B6  0100               	movlb	0	; () banked
 10582  0148B8  2B7B               	incf	___xxtofl@exp& (0+255),f,b
 10583                           
 10584                           ; BSR set to: 0
 10585  0148BA  0E01               	movlw	1
 10586  0148BC  0100               	movlb	0	; () banked
 10587  0148BE  277C               	addwf	___xxtofl@arg& (0+255),f,b
 10588  0148C0  0E00               	movlw	0
 10589  0148C2  237D               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10590  0148C4  237E               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10591  0148C6  237F               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10592                           
 10593                           ; BSR set to: 0
 10594  0148C8  0100               	movlb	0	; () banked
 10595  0148CA  90D8               	bcf	status,0,c
 10596  0148CC  337F               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10597  0148CE  337E               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10598  0148D0  337D               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10599  0148D2  337C               	rrcf	___xxtofl@arg& (0+255),f,b
 10600  0148D4                     l1581:
 10601                           
 10602                           ; BSR set to: 0
 10603  0148D4  0E00               	movlw	0
 10604  0148D6  0100               	movlb	0	; () banked
 10605  0148D8  157C               	andwf	___xxtofl@arg& (0+255),w,b
 10606  0148DA  0100               	movlb	0	; () banked
 10607  0148DC  6F76               	movwf	??___xxtofl& (0+255),b
 10608  0148DE  0E00               	movlw	0
 10609  0148E0  0100               	movlb	0	; () banked
 10610  0148E2  157D               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10611  0148E4  0100               	movlb	0	; () banked
 10612  0148E6  6F77               	movwf	(??___xxtofl+1)& (0+255),b
 10613  0148E8  0E00               	movlw	0
 10614  0148EA  0100               	movlb	0	; () banked
 10615  0148EC  157E               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10616  0148EE  0100               	movlb	0	; () banked
 10617  0148F0  6F78               	movwf	(??___xxtofl+2)& (0+255),b
 10618  0148F2  0EFF               	movlw	255
 10619  0148F4  0100               	movlb	0	; () banked
 10620  0148F6  157F               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10621  0148F8  0100               	movlb	0	; () banked
 10622  0148FA  6F79               	movwf	(??___xxtofl+3)& (0+255),b
 10623  0148FC  0100               	movlb	0	; () banked
 10624  0148FE  5176               	movf	??___xxtofl& (0+255),w,b
 10625  014900  0100               	movlb	0	; () banked
 10626  014902  1177               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10627  014904  0100               	movlb	0	; () banked
 10628  014906  1178               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10629  014908  0100               	movlb	0	; () banked
 10630  01490A  1179               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10631  01490C  B4D8               	btfsc	status,2,c
 10632  01490E  D009               	goto	l8154
 10633  014910  D7D2               	goto	l8146
 10634  014912                     l8152:
 10635                           
 10636                           ; BSR set to: 0
 10637  014912  0100               	movlb	0	; () banked
 10638  014914  077B               	decf	___xxtofl@exp& (0+255),f,b
 10639  014916  0100               	movlb	0	; () banked
 10640  014918  90D8               	bcf	status,0,c
 10641  01491A  377C               	rlcf	___xxtofl@arg& (0+255),f,b
 10642  01491C  377D               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10643  01491E  377E               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10644  014920  377F               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10645  014922                     l8154:
 10646                           
 10647                           ; BSR set to: 0
 10648  014922  0100               	movlb	0	; () banked
 10649  014924  BF7E               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10650  014926  D004               	goto	l1588
 10651                           
 10652                           ; BSR set to: 0
 10653  014928  0E02               	movlw	2
 10654  01492A  0100               	movlb	0	; () banked
 10655  01492C  617B               	cpfslt	___xxtofl@exp& (0+255),b
 10656  01492E  D7F1               	goto	l8152
 10657  014930                     l1588:
 10658                           
 10659                           ; BSR set to: 0
 10660  014930  0100               	movlb	0	; () banked
 10661  014932  B17B               	btfsc	___xxtofl@exp& (0+255),0,b
 10662  014934  D009               	goto	l1589
 10663                           
 10664                           ; BSR set to: 0
 10665  014936  0EFF               	movlw	255
 10666  014938  0100               	movlb	0	; () banked
 10667  01493A  177C               	andwf	___xxtofl@arg& (0+255),f,b
 10668  01493C  0EFF               	movlw	255
 10669  01493E  177D               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 10670  014940  0E7F               	movlw	127
 10671  014942  177E               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 10672  014944  0EFF               	movlw	255
 10673  014946  177F               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 10674  014948                     l1589:
 10675                           
 10676                           ; BSR set to: 0
 10677  014948  0100               	movlb	0	; () banked
 10678  01494A  90D8               	bcf	status,0,c
 10679  01494C  337B               	rrcf	___xxtofl@exp& (0+255),f,b
 10680  01494E  C07B  F076         	movff	___xxtofl@exp,??___xxtofl
 10681  014952  0100               	movlb	0	; () banked
 10682  014954  6B77               	clrf	(??___xxtofl+1)& (0+255),b
 10683  014956  6B78               	clrf	(??___xxtofl+2)& (0+255),b
 10684  014958  6B79               	clrf	(??___xxtofl+3)& (0+255),b
 10685  01495A  C076  F079         	movff	??___xxtofl,??___xxtofl+3
 10686  01495E  0100               	movlb	0	; () banked
 10687  014960  6B78               	clrf	(??___xxtofl+2)& (0+255),b
 10688  014962  6B77               	clrf	(??___xxtofl+1)& (0+255),b
 10689  014964  6B76               	clrf	??___xxtofl& (0+255),b
 10690  014966  0100               	movlb	0	; () banked
 10691  014968  5176               	movf	??___xxtofl& (0+255),w,b
 10692  01496A  0100               	movlb	0	; () banked
 10693  01496C  137C               	iorwf	___xxtofl@arg& (0+255),f,b
 10694  01496E  0100               	movlb	0	; () banked
 10695  014970  5177               	movf	(??___xxtofl+1)& (0+255),w,b
 10696  014972  0100               	movlb	0	; () banked
 10697  014974  137D               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10698  014976  0100               	movlb	0	; () banked
 10699  014978  5178               	movf	(??___xxtofl+2)& (0+255),w,b
 10700  01497A  0100               	movlb	0	; () banked
 10701  01497C  137E               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10702  01497E  0100               	movlb	0	; () banked
 10703  014980  5179               	movf	(??___xxtofl+3)& (0+255),w,b
 10704  014982  0100               	movlb	0	; () banked
 10705  014984  137F               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10706                           
 10707                           ; BSR set to: 0
 10708  014986  0100               	movlb	0	; () banked
 10709  014988  517A               	movf	___xxtofl@sign& (0+255),w,b
 10710  01498A  0100               	movlb	0	; () banked
 10711  01498C  B4D8               	btfsc	status,2,c
 10712  01498E  D005               	goto	l8166
 10713                           
 10714                           ; BSR set to: 0
 10715  014990  0100               	movlb	0	; () banked
 10716  014992  AF75               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10717  014994  D002               	goto	l8166
 10718                           
 10719                           ; BSR set to: 0
 10720  014996  0100               	movlb	0	; () banked
 10721  014998  8F7F               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10722  01499A                     l8166:
 10723                           
 10724                           ; BSR set to: 0
 10725  01499A  C07C  F072         	movff	___xxtofl@arg,?___xxtofl
 10726  01499E  C07D  F073         	movff	___xxtofl@arg+1,?___xxtofl+1
 10727  0149A2  C07E  F074         	movff	___xxtofl@arg+2,?___xxtofl+2
 10728  0149A6  C07F  F075         	movff	___xxtofl@arg+3,?___xxtofl+3
 10729  0149AA  0012               	return	
 10730  0149AC                     __end_of___xxtofl:
 10731                           	opt stack 0
 10732                           tblptru	equ	0xFF8
 10733                           tblptrh	equ	0xFF7
 10734                           tblptrl	equ	0xFF6
 10735                           tablat	equ	0xFF5
 10736                           prodh	equ	0xFF4
 10737                           prodl	equ	0xFF3
 10738                           intcon	equ	0xFF2
 10739                           postinc0	equ	0xFEE
 10740                           wreg	equ	0xFE8
 10741                           indf2	equ	0xFDF
 10742                           postinc2	equ	0xFDE
 10743                           fsr2h	equ	0xFDA
 10744                           fsr2l	equ	0xFD9
 10745                           status	equ	0xFD8
 10746                           
 10747 ;; *************** function ___llmod *****************
 10748 ;; Defined at:
 10749 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 10750 ;; Parameters:    Size  Location     Type
 10751 ;;  dividend        4   18[BANK0 ] unsigned long 
 10752 ;;  divisor         4   22[BANK0 ] unsigned long 
 10753 ;; Auto vars:     Size  Location     Type
 10754 ;;  counter         1   26[BANK0 ] unsigned char 
 10755 ;; Return value:  Size  Location     Type
 10756 ;;                  4   18[BANK0 ] unsigned long 
 10757 ;; Registers used:
 10758 ;;		wreg, status,2, status,0
 10759 ;; Tracked objects:
 10760 ;;		On entry : 0/0
 10761 ;;		On exit  : 0/0
 10762 ;;		Unchanged: 0/0
 10763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10764 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10765 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10767 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10768 ;;Total ram usage:        9 bytes
 10769 ;; Hardware stack levels used:    1
 10770 ;; Hardware stack levels required when called:    3
 10771 ;; This function calls:
 10772 ;;		Nothing
 10773 ;; This function is called by:
 10774 ;;		_sprintf
 10775 ;; This function uses a non-reentrant model
 10776 ;;
 10777                           
 10778                           	psect	text18
 10779  0158FE                     __ptext18:
 10780                           	opt stack 0
 10781  0158FE                     ___llmod:
 10782                           	opt stack 25
 10783                           
 10784                           ; BSR set to: 0
 10785                           ;incstack = 0
 10786  0158FE  0100               	movlb	0	; () banked
 10787  015900  5176               	movf	___llmod@divisor& (0+255),w,b
 10788  015902  0100               	movlb	0	; () banked
 10789  015904  1177               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10790  015906  0100               	movlb	0	; () banked
 10791  015908  1178               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10792  01590A  0100               	movlb	0	; () banked
 10793  01590C  1179               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10794  01590E  B4D8               	btfsc	status,2,c
 10795  015910  D03A               	goto	l1382
 10796                           
 10797                           ; BSR set to: 0
 10798  015912  0E01               	movlw	1
 10799  015914  0100               	movlb	0	; () banked
 10800  015916  6F7A               	movwf	___llmod@counter& (0+255),b
 10801  015918  D008               	goto	l8118
 10802  01591A                     l8116:
 10803                           
 10804                           ; BSR set to: 0
 10805  01591A  0100               	movlb	0	; () banked
 10806  01591C  90D8               	bcf	status,0,c
 10807  01591E  3776               	rlcf	___llmod@divisor& (0+255),f,b
 10808  015920  3777               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10809  015922  3778               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10810  015924  3779               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10811  015926  0100               	movlb	0	; () banked
 10812  015928  2B7A               	incf	___llmod@counter& (0+255),f,b
 10813  01592A                     l8118:
 10814                           
 10815                           ; BSR set to: 0
 10816  01592A  0100               	movlb	0	; () banked
 10817  01592C  AF79               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10818  01592E  D7F5               	goto	l8116
 10819  015930                     l8120:
 10820                           
 10821                           ; BSR set to: 0
 10822  015930  0100               	movlb	0	; () banked
 10823  015932  5176               	movf	___llmod@divisor& (0+255),w,b
 10824  015934  0100               	movlb	0	; () banked
 10825  015936  5D72               	subwf	___llmod@dividend& (0+255),w,b
 10826  015938  0100               	movlb	0	; () banked
 10827  01593A  5177               	movf	(___llmod@divisor+1)& (0+255),w,b
 10828  01593C  0100               	movlb	0	; () banked
 10829  01593E  5973               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10830  015940  0100               	movlb	0	; () banked
 10831  015942  5178               	movf	(___llmod@divisor+2)& (0+255),w,b
 10832  015944  0100               	movlb	0	; () banked
 10833  015946  5974               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10834  015948  0100               	movlb	0	; () banked
 10835  01594A  5179               	movf	(___llmod@divisor+3)& (0+255),w,b
 10836  01594C  0100               	movlb	0	; () banked
 10837  01594E  5975               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10838  015950  A0D8               	btfss	status,0,c
 10839  015952  D010               	goto	l8124
 10840                           
 10841                           ; BSR set to: 0
 10842  015954  0100               	movlb	0	; () banked
 10843  015956  5176               	movf	___llmod@divisor& (0+255),w,b
 10844  015958  0100               	movlb	0	; () banked
 10845  01595A  5F72               	subwf	___llmod@dividend& (0+255),f,b
 10846  01595C  0100               	movlb	0	; () banked
 10847  01595E  5177               	movf	(___llmod@divisor+1)& (0+255),w,b
 10848  015960  0100               	movlb	0	; () banked
 10849  015962  5B73               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10850  015964  0100               	movlb	0	; () banked
 10851  015966  5178               	movf	(___llmod@divisor+2)& (0+255),w,b
 10852  015968  0100               	movlb	0	; () banked
 10853  01596A  5B74               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10854  01596C  0100               	movlb	0	; () banked
 10855  01596E  5179               	movf	(___llmod@divisor+3)& (0+255),w,b
 10856  015970  0100               	movlb	0	; () banked
 10857  015972  5B75               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10858  015974                     l8124:
 10859                           
 10860                           ; BSR set to: 0
 10861  015974  0100               	movlb	0	; () banked
 10862  015976  90D8               	bcf	status,0,c
 10863  015978  3379               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10864  01597A  3378               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10865  01597C  3377               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10866  01597E  3376               	rrcf	___llmod@divisor& (0+255),f,b
 10867                           
 10868                           ; BSR set to: 0
 10869  015980  0100               	movlb	0	; () banked
 10870  015982  2F7A               	decfsz	___llmod@counter& (0+255),f,b
 10871  015984  D7D5               	goto	l8120
 10872  015986                     l1382:
 10873                           
 10874                           ; BSR set to: 0
 10875  015986  C072  F072         	movff	___llmod@dividend,?___llmod
 10876  01598A  C073  F073         	movff	___llmod@dividend+1,?___llmod+1
 10877  01598E  C074  F074         	movff	___llmod@dividend+2,?___llmod+2
 10878  015992  C075  F075         	movff	___llmod@dividend+3,?___llmod+3
 10879                           
 10880                           ; BSR set to: 0
 10881  015996  0012               	return		;funcret
 10882  015998                     __end_of___llmod:
 10883                           	opt stack 0
 10884                           tblptru	equ	0xFF8
 10885                           tblptrh	equ	0xFF7
 10886                           tblptrl	equ	0xFF6
 10887                           tablat	equ	0xFF5
 10888                           prodh	equ	0xFF4
 10889                           prodl	equ	0xFF3
 10890                           intcon	equ	0xFF2
 10891                           postinc0	equ	0xFEE
 10892                           wreg	equ	0xFE8
 10893                           indf2	equ	0xFDF
 10894                           postinc2	equ	0xFDE
 10895                           fsr2h	equ	0xFDA
 10896                           fsr2l	equ	0xFD9
 10897                           status	equ	0xFD8
 10898                           
 10899 ;; *************** function ___lldiv *****************
 10900 ;; Defined at:
 10901 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 10902 ;; Parameters:    Size  Location     Type
 10903 ;;  dividend        4   18[BANK0 ] unsigned long 
 10904 ;;  divisor         4   22[BANK0 ] unsigned long 
 10905 ;; Auto vars:     Size  Location     Type
 10906 ;;  quotient        4   26[BANK0 ] unsigned long 
 10907 ;;  counter         1   30[BANK0 ] unsigned char 
 10908 ;; Return value:  Size  Location     Type
 10909 ;;                  4   18[BANK0 ] unsigned long 
 10910 ;; Registers used:
 10911 ;;		wreg, status,2, status,0
 10912 ;; Tracked objects:
 10913 ;;		On entry : 0/0
 10914 ;;		On exit  : 0/0
 10915 ;;		Unchanged: 0/0
 10916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10917 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10918 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10920 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10921 ;;Total ram usage:       13 bytes
 10922 ;; Hardware stack levels used:    1
 10923 ;; Hardware stack levels required when called:    3
 10924 ;; This function calls:
 10925 ;;		Nothing
 10926 ;; This function is called by:
 10927 ;;		_sprintf
 10928 ;; This function uses a non-reentrant model
 10929 ;;
 10930                           
 10931                           	psect	text19
 10932  015598                     __ptext19:
 10933                           	opt stack 0
 10934  015598                     ___lldiv:
 10935                           	opt stack 25
 10936                           
 10937                           ; BSR set to: 0
 10938                           ;incstack = 0
 10939  015598  0E00               	movlw	0
 10940  01559A  0100               	movlb	0	; () banked
 10941  01559C  6F7A               	movwf	___lldiv@quotient& (0+255),b
 10942  01559E  0E00               	movlw	0
 10943  0155A0  6F7B               	movwf	(___lldiv@quotient+1)& (0+255),b
 10944  0155A2  0E00               	movlw	0
 10945  0155A4  6F7C               	movwf	(___lldiv@quotient+2)& (0+255),b
 10946  0155A6  0E00               	movlw	0
 10947  0155A8  6F7D               	movwf	(___lldiv@quotient+3)& (0+255),b
 10948                           
 10949                           ; BSR set to: 0
 10950  0155AA  0100               	movlb	0	; () banked
 10951  0155AC  5176               	movf	___lldiv@divisor& (0+255),w,b
 10952  0155AE  0100               	movlb	0	; () banked
 10953  0155B0  1177               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10954  0155B2  0100               	movlb	0	; () banked
 10955  0155B4  1178               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10956  0155B6  0100               	movlb	0	; () banked
 10957  0155B8  1179               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10958  0155BA  B4D8               	btfsc	status,2,c
 10959  0155BC  D042               	goto	l1372
 10960                           
 10961                           ; BSR set to: 0
 10962  0155BE  0E01               	movlw	1
 10963  0155C0  0100               	movlb	0	; () banked
 10964  0155C2  6F7E               	movwf	___lldiv@counter& (0+255),b
 10965  0155C4  D008               	goto	l8098
 10966  0155C6                     l8096:
 10967                           
 10968                           ; BSR set to: 0
 10969  0155C6  0100               	movlb	0	; () banked
 10970  0155C8  90D8               	bcf	status,0,c
 10971  0155CA  3776               	rlcf	___lldiv@divisor& (0+255),f,b
 10972  0155CC  3777               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10973  0155CE  3778               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10974  0155D0  3779               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10975  0155D2  0100               	movlb	0	; () banked
 10976  0155D4  2B7E               	incf	___lldiv@counter& (0+255),f,b
 10977  0155D6                     l8098:
 10978                           
 10979                           ; BSR set to: 0
 10980  0155D6  0100               	movlb	0	; () banked
 10981  0155D8  AF79               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10982  0155DA  D7F5               	goto	l8096
 10983  0155DC                     l8100:
 10984                           
 10985                           ; BSR set to: 0
 10986  0155DC  0100               	movlb	0	; () banked
 10987  0155DE  90D8               	bcf	status,0,c
 10988  0155E0  377A               	rlcf	___lldiv@quotient& (0+255),f,b
 10989  0155E2  377B               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10990  0155E4  377C               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10991  0155E6  377D               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10992                           
 10993                           ; BSR set to: 0
 10994  0155E8  0100               	movlb	0	; () banked
 10995  0155EA  5176               	movf	___lldiv@divisor& (0+255),w,b
 10996  0155EC  0100               	movlb	0	; () banked
 10997  0155EE  5D72               	subwf	___lldiv@dividend& (0+255),w,b
 10998  0155F0  0100               	movlb	0	; () banked
 10999  0155F2  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11000  0155F4  0100               	movlb	0	; () banked
 11001  0155F6  5973               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11002  0155F8  0100               	movlb	0	; () banked
 11003  0155FA  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11004  0155FC  0100               	movlb	0	; () banked
 11005  0155FE  5974               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11006  015600  0100               	movlb	0	; () banked
 11007  015602  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11008  015604  0100               	movlb	0	; () banked
 11009  015606  5975               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11010  015608  A0D8               	btfss	status,0,c
 11011  01560A  D012               	goto	l8108
 11012                           
 11013                           ; BSR set to: 0
 11014  01560C  0100               	movlb	0	; () banked
 11015  01560E  5176               	movf	___lldiv@divisor& (0+255),w,b
 11016  015610  0100               	movlb	0	; () banked
 11017  015612  5F72               	subwf	___lldiv@dividend& (0+255),f,b
 11018  015614  0100               	movlb	0	; () banked
 11019  015616  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11020  015618  0100               	movlb	0	; () banked
 11021  01561A  5B73               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11022  01561C  0100               	movlb	0	; () banked
 11023  01561E  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11024  015620  0100               	movlb	0	; () banked
 11025  015622  5B74               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11026  015624  0100               	movlb	0	; () banked
 11027  015626  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11028  015628  0100               	movlb	0	; () banked
 11029  01562A  5B75               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11030                           
 11031                           ; BSR set to: 0
 11032  01562C  0100               	movlb	0	; () banked
 11033  01562E  817A               	bsf	___lldiv@quotient& (0+255),0,b
 11034  015630                     l8108:
 11035                           
 11036                           ; BSR set to: 0
 11037  015630  0100               	movlb	0	; () banked
 11038  015632  90D8               	bcf	status,0,c
 11039  015634  3379               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11040  015636  3378               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11041  015638  3377               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11042  01563A  3376               	rrcf	___lldiv@divisor& (0+255),f,b
 11043                           
 11044                           ; BSR set to: 0
 11045  01563C  0100               	movlb	0	; () banked
 11046  01563E  2F7E               	decfsz	___lldiv@counter& (0+255),f,b
 11047  015640  D7CD               	goto	l8100
 11048  015642                     l1372:
 11049                           
 11050                           ; BSR set to: 0
 11051  015642  C07A  F072         	movff	___lldiv@quotient,?___lldiv
 11052  015646  C07B  F073         	movff	___lldiv@quotient+1,?___lldiv+1
 11053  01564A  C07C  F074         	movff	___lldiv@quotient+2,?___lldiv+2
 11054  01564E  C07D  F075         	movff	___lldiv@quotient+3,?___lldiv+3
 11055                           
 11056                           ; BSR set to: 0
 11057  015652  0012               	return		;funcret
 11058  015654                     __end_of___lldiv:
 11059                           	opt stack 0
 11060                           tblptru	equ	0xFF8
 11061                           tblptrh	equ	0xFF7
 11062                           tblptrl	equ	0xFF6
 11063                           tablat	equ	0xFF5
 11064                           prodh	equ	0xFF4
 11065                           prodl	equ	0xFF3
 11066                           intcon	equ	0xFF2
 11067                           postinc0	equ	0xFEE
 11068                           wreg	equ	0xFE8
 11069                           indf2	equ	0xFDF
 11070                           postinc2	equ	0xFDE
 11071                           fsr2h	equ	0xFDA
 11072                           fsr2l	equ	0xFD9
 11073                           status	equ	0xFD8
 11074                           
 11075 ;; *************** function ___fltol *****************
 11076 ;; Defined at:
 11077 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 11078 ;; Parameters:    Size  Location     Type
 11079 ;;  f1              4   90[BANK0 ] unsigned long 
 11080 ;; Auto vars:     Size  Location     Type
 11081 ;;  exp1            1   99[BANK0 ] unsigned char 
 11082 ;;  sign1           1   98[BANK0 ] unsigned char 
 11083 ;; Return value:  Size  Location     Type
 11084 ;;                  4   90[BANK0 ] long 
 11085 ;; Registers used:
 11086 ;;		wreg, status,2, status,0
 11087 ;; Tracked objects:
 11088 ;;		On entry : 0/0
 11089 ;;		On exit  : 0/0
 11090 ;;		Unchanged: 0/0
 11091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11092 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11093 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11094 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11095 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11096 ;;Total ram usage:       10 bytes
 11097 ;; Hardware stack levels used:    1
 11098 ;; Hardware stack levels required when called:    3
 11099 ;; This function calls:
 11100 ;;		Nothing
 11101 ;; This function is called by:
 11102 ;;		_main
 11103 ;;		_sprintf
 11104 ;; This function uses a non-reentrant model
 11105 ;;
 11106                           
 11107                           	psect	text20
 11108  0152E2                     __ptext20:
 11109                           	opt stack 0
 11110  0152E2                     ___fltol:
 11111                           	opt stack 27
 11112                           
 11113                           ; BSR set to: 0
 11114                           ;incstack = 0
 11115  0152E2  0100               	movlb	0	; () banked
 11116  0152E4  35BC               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11117  0152E6  35BD               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11118  0152E8  0100               	movlb	0	; () banked
 11119  0152EA  6FC3               	movwf	___fltol@exp1& (0+255),b
 11120  0152EC  0100               	movlb	0	; () banked
 11121  0152EE  51C3               	movf	___fltol@exp1& (0+255),w,b
 11122  0152F0  A4D8               	btfss	status,2,c
 11123  0152F2  D00A               	goto	l8052
 11124                           
 11125                           ; BSR set to: 0
 11126  0152F4  0E00               	movlw	0
 11127  0152F6  0100               	movlb	0	; () banked
 11128  0152F8  6FBA               	movwf	?___fltol& (0+255),b
 11129  0152FA  0E00               	movlw	0
 11130  0152FC  6FBB               	movwf	(?___fltol+1)& (0+255),b
 11131  0152FE  0E00               	movlw	0
 11132  015300  6FBC               	movwf	(?___fltol+2)& (0+255),b
 11133  015302  0E00               	movlw	0
 11134  015304  6FBD               	movwf	(?___fltol+3)& (0+255),b
 11135                           
 11136                           ; BSR set to: 0
 11137  015306  0012               	return	
 11138  015308                     l8052:
 11139                           
 11140                           ; BSR set to: 0
 11141  015308  C0BA  F0BE         	movff	___fltol@f1,??___fltol
 11142  01530C  C0BB  F0BF         	movff	___fltol@f1+1,??___fltol+1
 11143  015310  C0BC  F0C0         	movff	___fltol@f1+2,??___fltol+2
 11144  015314  C0BD  F0C1         	movff	___fltol@f1+3,??___fltol+3
 11145  015318  0E20               	movlw	32
 11146  01531A  D006               	goto	u10640
 11147  01531C                     u10645:
 11148  01531C  0100               	movlb	0	; () banked
 11149  01531E  90D8               	bcf	status,0,c
 11150  015320  33C1               	rrcf	(??___fltol+3)& (0+255),f,b
 11151  015322  33C0               	rrcf	(??___fltol+2)& (0+255),f,b
 11152  015324  33BF               	rrcf	(??___fltol+1)& (0+255),f,b
 11153  015326  33BE               	rrcf	??___fltol& (0+255),f,b
 11154  015328                     u10640:
 11155  015328  2EE8               	decfsz	wreg,f,c
 11156  01532A  D7F8               	goto	u10645
 11157  01532C  0100               	movlb	0	; () banked
 11158  01532E  51BE               	movf	??___fltol& (0+255),w,b
 11159  015330  0100               	movlb	0	; () banked
 11160  015332  6FC2               	movwf	___fltol@sign1& (0+255),b
 11161                           
 11162                           ; BSR set to: 0
 11163  015334  0100               	movlb	0	; () banked
 11164  015336  8FBC               	bsf	(___fltol@f1+2)& (0+255),7,b
 11165                           
 11166                           ; BSR set to: 0
 11167  015338  0EFF               	movlw	255
 11168  01533A  0100               	movlb	0	; () banked
 11169  01533C  17BA               	andwf	___fltol@f1& (0+255),f,b
 11170  01533E  0EFF               	movlw	255
 11171  015340  17BB               	andwf	(___fltol@f1+1)& (0+255),f,b
 11172  015342  0EFF               	movlw	255
 11173  015344  17BC               	andwf	(___fltol@f1+2)& (0+255),f,b
 11174  015346  0E00               	movlw	0
 11175  015348  17BD               	andwf	(___fltol@f1+3)& (0+255),f,b
 11176                           
 11177                           ; BSR set to: 0
 11178  01534A  0E96               	movlw	150
 11179  01534C  0100               	movlb	0	; () banked
 11180  01534E  5FC3               	subwf	___fltol@exp1& (0+255),f,b
 11181                           
 11182                           ; BSR set to: 0
 11183  015350  0100               	movlb	0	; () banked
 11184  015352  AFC3               	btfss	___fltol@exp1& (0+255),7,b
 11185  015354  D01A               	goto	l8072
 11186                           
 11187                           ; BSR set to: 0
 11188  015356  0100               	movlb	0	; () banked
 11189  015358  51C3               	movf	___fltol@exp1& (0+255),w,b
 11190  01535A  0A80               	xorlw	128
 11191  01535C  0F97               	addlw	151
 11192  01535E  B0D8               	btfsc	status,0,c
 11193  015360  D00A               	goto	l8068
 11194                           
 11195                           ; BSR set to: 0
 11196  015362  0E00               	movlw	0
 11197  015364  0100               	movlb	0	; () banked
 11198  015366  6FBA               	movwf	?___fltol& (0+255),b
 11199  015368  0E00               	movlw	0
 11200  01536A  6FBB               	movwf	(?___fltol+1)& (0+255),b
 11201  01536C  0E00               	movlw	0
 11202  01536E  6FBC               	movwf	(?___fltol+2)& (0+255),b
 11203  015370  0E00               	movlw	0
 11204  015372  6FBD               	movwf	(?___fltol+3)& (0+255),b
 11205                           
 11206                           ; BSR set to: 0
 11207  015374  0012               	return	
 11208  015376                     l8068:
 11209                           
 11210                           ; BSR set to: 0
 11211  015376  0100               	movlb	0	; () banked
 11212  015378  90D8               	bcf	status,0,c
 11213  01537A  33BD               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11214  01537C  33BC               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11215  01537E  33BB               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11216  015380  33BA               	rrcf	___fltol@f1& (0+255),f,b
 11217                           
 11218                           ; BSR set to: 0
 11219  015382  0100               	movlb	0	; () banked
 11220  015384  3FC3               	incfsz	___fltol@exp1& (0+255),f,b
 11221  015386  D7F7               	goto	l8068
 11222                           
 11223                           ; BSR set to: 0
 11224  015388  D01B               	goto	l8082
 11225  01538A                     l8072:
 11226                           
 11227                           ; BSR set to: 0
 11228  01538A  0E1F               	movlw	31
 11229  01538C  0100               	movlb	0	; () banked
 11230  01538E  65C3               	cpfsgt	___fltol@exp1& (0+255),b
 11231  015390  D012               	goto	l8080
 11232                           
 11233                           ; BSR set to: 0
 11234  015392  0E00               	movlw	0
 11235  015394  0100               	movlb	0	; () banked
 11236  015396  6FBA               	movwf	?___fltol& (0+255),b
 11237  015398  0E00               	movlw	0
 11238  01539A  6FBB               	movwf	(?___fltol+1)& (0+255),b
 11239  01539C  0E00               	movlw	0
 11240  01539E  6FBC               	movwf	(?___fltol+2)& (0+255),b
 11241  0153A0  0E00               	movlw	0
 11242  0153A2  6FBD               	movwf	(?___fltol+3)& (0+255),b
 11243                           
 11244                           ; BSR set to: 0
 11245  0153A4  0012               	return	
 11246  0153A6                     l8078:
 11247                           
 11248                           ; BSR set to: 0
 11249  0153A6  0100               	movlb	0	; () banked
 11250  0153A8  90D8               	bcf	status,0,c
 11251  0153AA  37BA               	rlcf	___fltol@f1& (0+255),f,b
 11252  0153AC  37BB               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11253  0153AE  37BC               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11254  0153B0  37BD               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11255  0153B2  0100               	movlb	0	; () banked
 11256  0153B4  07C3               	decf	___fltol@exp1& (0+255),f,b
 11257  0153B6                     l8080:
 11258                           
 11259                           ; BSR set to: 0
 11260  0153B6  0100               	movlb	0	; () banked
 11261  0153B8  51C3               	movf	___fltol@exp1& (0+255),w,b
 11262  0153BA  0100               	movlb	0	; () banked
 11263  0153BC  A4D8               	btfss	status,2,c
 11264  0153BE  D7F3               	goto	l8078
 11265  0153C0                     l8082:
 11266                           
 11267                           ; BSR set to: 0
 11268  0153C0  0100               	movlb	0	; () banked
 11269  0153C2  51C2               	movf	___fltol@sign1& (0+255),w,b
 11270  0153C4  0100               	movlb	0	; () banked
 11271  0153C6  B4D8               	btfsc	status,2,c
 11272  0153C8  D009               	goto	l8086
 11273                           
 11274                           ; BSR set to: 0
 11275  0153CA  0100               	movlb	0	; () banked
 11276  0153CC  1FBD               	comf	(___fltol@f1+3)& (0+255),f,b
 11277  0153CE  1FBC               	comf	(___fltol@f1+2)& (0+255),f,b
 11278  0153D0  1FBB               	comf	(___fltol@f1+1)& (0+255),f,b
 11279  0153D2  6DBA               	negf	___fltol@f1& (0+255),b
 11280  0153D4  0E00               	movlw	0
 11281  0153D6  23BB               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11282  0153D8  23BC               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11283  0153DA  23BD               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11284  0153DC                     l8086:
 11285                           
 11286                           ; BSR set to: 0
 11287  0153DC  C0BA  F0BA         	movff	___fltol@f1,?___fltol
 11288  0153E0  C0BB  F0BB         	movff	___fltol@f1+1,?___fltol+1
 11289  0153E4  C0BC  F0BC         	movff	___fltol@f1+2,?___fltol+2
 11290  0153E8  C0BD  F0BD         	movff	___fltol@f1+3,?___fltol+3
 11291  0153EC  0012               	return	
 11292  0153EE                     __end_of___fltol:
 11293                           	opt stack 0
 11294                           tblptru	equ	0xFF8
 11295                           tblptrh	equ	0xFF7
 11296                           tblptrl	equ	0xFF6
 11297                           tablat	equ	0xFF5
 11298                           prodh	equ	0xFF4
 11299                           prodl	equ	0xFF3
 11300                           intcon	equ	0xFF2
 11301                           postinc0	equ	0xFEE
 11302                           wreg	equ	0xFE8
 11303                           indf2	equ	0xFDF
 11304                           postinc2	equ	0xFDE
 11305                           fsr2h	equ	0xFDA
 11306                           fsr2l	equ	0xFD9
 11307                           status	equ	0xFD8
 11308                           
 11309 ;; *************** function ___flsub *****************
 11310 ;; Defined at:
 11311 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11312 ;; Parameters:    Size  Location     Type
 11313 ;;  b               4   90[BANK0 ] long 
 11314 ;;  a               4   94[BANK0 ] long 
 11315 ;; Auto vars:     Size  Location     Type
 11316 ;;		None
 11317 ;; Return value:  Size  Location     Type
 11318 ;;                  4   90[BANK0 ] long 
 11319 ;; Registers used:
 11320 ;;		wreg, status,2, status,0, cstack
 11321 ;; Tracked objects:
 11322 ;;		On entry : 0/0
 11323 ;;		On exit  : 0/0
 11324 ;;		Unchanged: 0/0
 11325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11326 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11329 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11330 ;;Total ram usage:        8 bytes
 11331 ;; Hardware stack levels used:    1
 11332 ;; Hardware stack levels required when called:    4
 11333 ;; This function calls:
 11334 ;;		___fladd
 11335 ;; This function is called by:
 11336 ;;		_sprintf
 11337 ;; This function uses a non-reentrant model
 11338 ;;
 11339                           
 11340                           	psect	text21
 11341  015ACE                     __ptext21:
 11342                           	opt stack 0
 11343  015ACE                     ___flsub:
 11344                           	opt stack 24
 11345                           
 11346                           ; BSR set to: 0
 11347                           ;incstack = 0
 11348  015ACE  0E00               	movlw	0
 11349  015AD0  0100               	movlb	0	; () banked
 11350  015AD2  1BBE               	xorwf	___flsub@a& (0+255),f,b
 11351  015AD4  0E00               	movlw	0
 11352  015AD6  1BBF               	xorwf	(___flsub@a+1)& (0+255),f,b
 11353  015AD8  0E00               	movlw	0
 11354  015ADA  1BC0               	xorwf	(___flsub@a+2)& (0+255),f,b
 11355  015ADC  0E80               	movlw	128
 11356  015ADE  1BC1               	xorwf	(___flsub@a+3)& (0+255),f,b
 11357                           
 11358                           ; BSR set to: 0
 11359  015AE0  C0BA  F0A6         	movff	___flsub@b,___fladd@b
 11360  015AE4  C0BB  F0A7         	movff	___flsub@b+1,___fladd@b+1
 11361  015AE8  C0BC  F0A8         	movff	___flsub@b+2,___fladd@b+2
 11362  015AEC  C0BD  F0A9         	movff	___flsub@b+3,___fladd@b+3
 11363  015AF0  C0BE  F0AA         	movff	___flsub@a,___fladd@a
 11364  015AF4  C0BF  F0AB         	movff	___flsub@a+1,___fladd@a+1
 11365  015AF8  C0C0  F0AC         	movff	___flsub@a+2,___fladd@a+2
 11366  015AFC  C0C1  F0AD         	movff	___flsub@a+3,___fladd@a+3
 11367  015B00  EC31  F099         	call	___fladd	;wreg free
 11368  015B04  C0A6  F0BA         	movff	?___fladd,?___flsub
 11369  015B08  C0A7  F0BB         	movff	?___fladd+1,?___flsub+1
 11370  015B0C  C0A8  F0BC         	movff	?___fladd+2,?___flsub+2
 11371  015B10  C0A9  F0BD         	movff	?___fladd+3,?___flsub+3
 11372  015B14  0012               	return	
 11373  015B16                     __end_of___flsub:
 11374                           	opt stack 0
 11375                           tblptru	equ	0xFF8
 11376                           tblptrh	equ	0xFF7
 11377                           tblptrl	equ	0xFF6
 11378                           tablat	equ	0xFF5
 11379                           prodh	equ	0xFF4
 11380                           prodl	equ	0xFF3
 11381                           intcon	equ	0xFF2
 11382                           postinc0	equ	0xFEE
 11383                           wreg	equ	0xFE8
 11384                           indf2	equ	0xFDF
 11385                           postinc2	equ	0xFDE
 11386                           fsr2h	equ	0xFDA
 11387                           fsr2l	equ	0xFD9
 11388                           status	equ	0xFD8
 11389                           
 11390 ;; *************** function ___fladd *****************
 11391 ;; Defined at:
 11392 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11393 ;; Parameters:    Size  Location     Type
 11394 ;;  b               4   70[BANK0 ] long 
 11395 ;;  a               4   74[BANK0 ] long 
 11396 ;; Auto vars:     Size  Location     Type
 11397 ;;  grs             1   89[BANK0 ] unsigned char 
 11398 ;;  bexp            1   88[BANK0 ] unsigned char 
 11399 ;;  aexp            1   87[BANK0 ] unsigned char 
 11400 ;;  signs           1   86[BANK0 ] unsigned char 
 11401 ;; Return value:  Size  Location     Type
 11402 ;;                  4   70[BANK0 ] unsigned char 
 11403 ;; Registers used:
 11404 ;;		wreg, status,2, status,0
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11410 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11411 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11412 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11413 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11414 ;;Total ram usage:       20 bytes
 11415 ;; Hardware stack levels used:    1
 11416 ;; Hardware stack levels required when called:    3
 11417 ;; This function calls:
 11418 ;;		Nothing
 11419 ;; This function is called by:
 11420 ;;		_main
 11421 ;;		_sprintf
 11422 ;;		___flsub
 11423 ;; This function uses a non-reentrant model
 11424 ;;
 11425                           
 11426                           	psect	text22
 11427  013262                     __ptext22:
 11428                           	opt stack 0
 11429  013262                     ___fladd:
 11430                           	opt stack 27
 11431                           
 11432                           ;incstack = 0
 11433  013262  0100               	movlb	0	; () banked
 11434  013264  51A9               	movf	(___fladd@b+3)& (0+255),w,b
 11435  013266  0B80               	andlw	128
 11436  013268  0100               	movlb	0	; () banked
 11437  01326A  6FB6               	movwf	___fladd@signs& (0+255),b
 11438  01326C  0100               	movlb	0	; () banked
 11439  01326E  51A9               	movf	(___fladd@b+3)& (0+255),w,b
 11440  013270  25A9               	addwf	(___fladd@b+3)& (0+255),w,b
 11441  013272  0100               	movlb	0	; () banked
 11442  013274  6FB8               	movwf	___fladd@bexp& (0+255),b
 11443                           
 11444                           ; BSR set to: 0
 11445  013276  0100               	movlb	0	; () banked
 11446  013278  AFA8               	btfss	(___fladd@b+2)& (0+255),7,b
 11447  01327A  D002               	goto	l7374
 11448                           
 11449                           ; BSR set to: 0
 11450  01327C  0100               	movlb	0	; () banked
 11451  01327E  81B8               	bsf	___fladd@bexp& (0+255),0,b
 11452  013280                     l7374:
 11453                           
 11454                           ; BSR set to: 0
 11455  013280  0100               	movlb	0	; () banked
 11456  013282  51B8               	movf	___fladd@bexp& (0+255),w,b
 11457  013284  0100               	movlb	0	; () banked
 11458  013286  B4D8               	btfsc	status,2,c
 11459  013288  D012               	goto	l7384
 11460                           
 11461                           ; BSR set to: 0
 11462  01328A  0100               	movlb	0	; () banked
 11463  01328C  29B8               	incf	___fladd@bexp& (0+255),w,b
 11464  01328E  A4D8               	btfss	status,2,c
 11465  013290  D009               	goto	l7380
 11466                           
 11467                           ; BSR set to: 0
 11468  013292  0E00               	movlw	0
 11469  013294  0100               	movlb	0	; () banked
 11470  013296  6FA6               	movwf	___fladd@b& (0+255),b
 11471  013298  0E00               	movlw	0
 11472  01329A  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11473  01329C  0E00               	movlw	0
 11474  01329E  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11475  0132A0  0E00               	movlw	0
 11476  0132A2  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11477  0132A4                     l7380:
 11478                           
 11479                           ; BSR set to: 0
 11480  0132A4  0100               	movlb	0	; () banked
 11481  0132A6  8FA8               	bsf	(___fladd@b+2)& (0+255),7,b
 11482                           
 11483                           ; BSR set to: 0
 11484  0132A8  0E00               	movlw	0
 11485  0132AA  0100               	movlb	0	; () banked
 11486  0132AC  D008               	goto	L9
 11487  0132AE                     l7384:
 11488                           
 11489                           ; BSR set to: 0
 11490  0132AE  0E00               	movlw	0
 11491  0132B0  0100               	movlb	0	; () banked
 11492  0132B2  6FA6               	movwf	___fladd@b& (0+255),b
 11493  0132B4  0E00               	movlw	0
 11494  0132B6  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11495  0132B8  0E00               	movlw	0
 11496  0132BA  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11497  0132BC  0E00               	movlw	0
 11498  0132BE                     L9:
 11499  0132BE  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11500                           
 11501                           ; BSR set to: 0
 11502                           
 11503                           ; BSR set to: 0
 11504  0132C0  0100               	movlb	0	; () banked
 11505  0132C2  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11506  0132C4  0B80               	andlw	128
 11507  0132C6  0100               	movlb	0	; () banked
 11508  0132C8  6FB7               	movwf	___fladd@aexp& (0+255),b
 11509                           
 11510                           ; BSR set to: 0
 11511  0132CA  0100               	movlb	0	; () banked
 11512  0132CC  51B6               	movf	___fladd@signs& (0+255),w,b
 11513  0132CE  0100               	movlb	0	; () banked
 11514  0132D0  19B7               	xorwf	___fladd@aexp& (0+255),w,b
 11515  0132D2  B4D8               	btfsc	status,2,c
 11516  0132D4  D002               	goto	l7392
 11517                           
 11518                           ; BSR set to: 0
 11519  0132D6  0100               	movlb	0	; () banked
 11520  0132D8  8DB6               	bsf	___fladd@signs& (0+255),6,b
 11521  0132DA                     l7392:
 11522                           
 11523                           ; BSR set to: 0
 11524  0132DA  0100               	movlb	0	; () banked
 11525  0132DC  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11526  0132DE  25AD               	addwf	(___fladd@a+3)& (0+255),w,b
 11527  0132E0  0100               	movlb	0	; () banked
 11528  0132E2  6FB7               	movwf	___fladd@aexp& (0+255),b
 11529                           
 11530                           ; BSR set to: 0
 11531  0132E4  0100               	movlb	0	; () banked
 11532  0132E6  AFAC               	btfss	(___fladd@a+2)& (0+255),7,b
 11533  0132E8  D002               	goto	l7398
 11534                           
 11535                           ; BSR set to: 0
 11536  0132EA  0100               	movlb	0	; () banked
 11537  0132EC  81B7               	bsf	___fladd@aexp& (0+255),0,b
 11538  0132EE                     l7398:
 11539                           
 11540                           ; BSR set to: 0
 11541  0132EE  0100               	movlb	0	; () banked
 11542  0132F0  51B7               	movf	___fladd@aexp& (0+255),w,b
 11543  0132F2  0100               	movlb	0	; () banked
 11544  0132F4  B4D8               	btfsc	status,2,c
 11545  0132F6  D012               	goto	l7408
 11546                           
 11547                           ; BSR set to: 0
 11548  0132F8  0100               	movlb	0	; () banked
 11549  0132FA  29B7               	incf	___fladd@aexp& (0+255),w,b
 11550  0132FC  A4D8               	btfss	status,2,c
 11551  0132FE  D009               	goto	l7404
 11552                           
 11553                           ; BSR set to: 0
 11554  013300  0E00               	movlw	0
 11555  013302  0100               	movlb	0	; () banked
 11556  013304  6FAA               	movwf	___fladd@a& (0+255),b
 11557  013306  0E00               	movlw	0
 11558  013308  6FAB               	movwf	(___fladd@a+1)& (0+255),b
 11559  01330A  0E00               	movlw	0
 11560  01330C  6FAC               	movwf	(___fladd@a+2)& (0+255),b
 11561  01330E  0E00               	movlw	0
 11562  013310  6FAD               	movwf	(___fladd@a+3)& (0+255),b
 11563  013312                     l7404:
 11564                           
 11565                           ; BSR set to: 0
 11566  013312  0100               	movlb	0	; () banked
 11567  013314  8FAC               	bsf	(___fladd@a+2)& (0+255),7,b
 11568                           
 11569                           ; BSR set to: 0
 11570  013316  0E00               	movlw	0
 11571  013318  0100               	movlb	0	; () banked
 11572  01331A  D008               	goto	L10
 11573  01331C                     l7408:
 11574                           
 11575                           ; BSR set to: 0
 11576  01331C  0E00               	movlw	0
 11577  01331E  0100               	movlb	0	; () banked
 11578  013320  6FAA               	movwf	___fladd@a& (0+255),b
 11579  013322  0E00               	movlw	0
 11580  013324  6FAB               	movwf	(___fladd@a+1)& (0+255),b
 11581  013326  0E00               	movlw	0
 11582  013328  6FAC               	movwf	(___fladd@a+2)& (0+255),b
 11583  01332A  0E00               	movlw	0
 11584  01332C                     L10:
 11585  01332C  6FAD               	movwf	(___fladd@a+3)& (0+255),b
 11586                           
 11587                           ; BSR set to: 0
 11588                           
 11589                           ; BSR set to: 0
 11590  01332E  0100               	movlb	0	; () banked
 11591  013330  51B8               	movf	___fladd@bexp& (0+255),w,b
 11592  013332  0100               	movlb	0	; () banked
 11593  013334  5DB7               	subwf	___fladd@aexp& (0+255),w,b
 11594  013336  B0D8               	btfsc	status,0,c
 11595  013338  D024               	goto	l7446
 11596                           
 11597                           ; BSR set to: 0
 11598  01333A  0100               	movlb	0	; () banked
 11599  01333C  ADB6               	btfss	___fladd@signs& (0+255),6,b
 11600  01333E  D003               	goto	l7416
 11601                           
 11602                           ; BSR set to: 0
 11603  013340  0E80               	movlw	128
 11604  013342  0100               	movlb	0	; () banked
 11605  013344  1BB6               	xorwf	___fladd@signs& (0+255),f,b
 11606  013346                     l7416:
 11607                           
 11608                           ; BSR set to: 0
 11609  013346  C0B8  F0B9         	movff	___fladd@bexp,___fladd@grs
 11610                           
 11611                           ; BSR set to: 0
 11612  01334A  C0B7  F0B8         	movff	___fladd@aexp,___fladd@bexp
 11613                           
 11614                           ; BSR set to: 0
 11615  01334E  C0B9  F0B7         	movff	___fladd@grs,___fladd@aexp
 11616                           
 11617                           ; BSR set to: 0
 11618  013352  C0A6  F0B9         	movff	___fladd@b,___fladd@grs
 11619                           
 11620                           ; BSR set to: 0
 11621  013356  C0AA  F0A6         	movff	___fladd@a,___fladd@b
 11622                           
 11623                           ; BSR set to: 0
 11624  01335A  C0B9  F0AA         	movff	___fladd@grs,___fladd@a
 11625                           
 11626                           ; BSR set to: 0
 11627  01335E  C0A7  F0B9         	movff	___fladd@b+1,___fladd@grs
 11628                           
 11629                           ; BSR set to: 0
 11630  013362  C0AB  F0A7         	movff	___fladd@a+1,___fladd@b+1
 11631                           
 11632                           ; BSR set to: 0
 11633  013366  C0B9  F0AB         	movff	___fladd@grs,___fladd@a+1
 11634                           
 11635                           ; BSR set to: 0
 11636  01336A  C0A8  F0B9         	movff	___fladd@b+2,___fladd@grs
 11637                           
 11638                           ; BSR set to: 0
 11639  01336E  C0AC  F0A8         	movff	___fladd@a+2,___fladd@b+2
 11640                           
 11641                           ; BSR set to: 0
 11642  013372  C0B9  F0AC         	movff	___fladd@grs,___fladd@a+2
 11643                           
 11644                           ; BSR set to: 0
 11645  013376  C0A9  F0B9         	movff	___fladd@b+3,___fladd@grs
 11646                           
 11647                           ; BSR set to: 0
 11648  01337A  C0AD  F0A9         	movff	___fladd@a+3,___fladd@b+3
 11649                           
 11650                           ; BSR set to: 0
 11651  01337E  C0B9  F0AD         	movff	___fladd@grs,___fladd@a+3
 11652  013382                     l7446:
 11653                           
 11654                           ; BSR set to: 0
 11655  013382  0E00               	movlw	0
 11656  013384  0100               	movlb	0	; () banked
 11657  013386  6FB9               	movwf	___fladd@grs& (0+255),b
 11658                           
 11659                           ; BSR set to: 0
 11660  013388  0100               	movlb	0	; () banked
 11661  01338A  51B8               	movf	___fladd@bexp& (0+255),w,b
 11662  01338C  0100               	movlb	0	; () banked
 11663  01338E  6FAE               	movwf	??___fladd& (0+255),b
 11664  013390  6BAF               	clrf	(??___fladd+1)& (0+255),b
 11665  013392  0100               	movlb	0	; () banked
 11666  013394  1FAE               	comf	??___fladd& (0+255),f,b
 11667  013396  1FAF               	comf	(??___fladd+1)& (0+255),f,b
 11668  013398  4BAE               	infsnz	??___fladd& (0+255),f,b
 11669  01339A  2BAF               	incf	(??___fladd+1)& (0+255),f,b
 11670  01339C  0100               	movlb	0	; () banked
 11671  01339E  51B7               	movf	___fladd@aexp& (0+255),w,b
 11672  0133A0  0100               	movlb	0	; () banked
 11673  0133A2  6FB0               	movwf	(??___fladd+2)& (0+255),b
 11674  0133A4  6BB1               	clrf	(??___fladd+3)& (0+255),b
 11675  0133A6  0100               	movlb	0	; () banked
 11676  0133A8  51AE               	movf	??___fladd& (0+255),w,b
 11677  0133AA  0100               	movlb	0	; () banked
 11678  0133AC  27B0               	addwf	(??___fladd+2)& (0+255),f,b
 11679  0133AE  0100               	movlb	0	; () banked
 11680  0133B0  51AF               	movf	(??___fladd+1)& (0+255),w,b
 11681  0133B2  0100               	movlb	0	; () banked
 11682  0133B4  23B1               	addwfc	(??___fladd+3)& (0+255),f,b
 11683  0133B6  0100               	movlb	0	; () banked
 11684  0133B8  BFB1               	btfsc	(??___fladd+3)& (0+255),7,b
 11685  0133BA  D03D               	goto	l1467
 11686  0133BC  0100               	movlb	0	; () banked
 11687  0133BE  51B1               	movf	(??___fladd+3)& (0+255),w,b
 11688  0133C0  E105               	bnz	u9700
 11689  0133C2  0E1A               	movlw	26
 11690  0133C4  0100               	movlb	0	; () banked
 11691  0133C6  5DB0               	subwf	(??___fladd+2)& (0+255),w,b
 11692  0133C8  A0D8               	btfss	status,0,c
 11693  0133CA  D035               	goto	l1467
 11694  0133CC                     u9700:
 11695                           
 11696                           ; BSR set to: 0
 11697  0133CC  0100               	movlb	0	; () banked
 11698  0133CE  51A6               	movf	___fladd@b& (0+255),w,b
 11699  0133D0  0100               	movlb	0	; () banked
 11700  0133D2  11A7               	iorwf	(___fladd@b+1)& (0+255),w,b
 11701  0133D4  0100               	movlb	0	; () banked
 11702  0133D6  11A8               	iorwf	(___fladd@b+2)& (0+255),w,b
 11703  0133D8  0100               	movlb	0	; () banked
 11704  0133DA  11A9               	iorwf	(___fladd@b+3)& (0+255),w,b
 11705  0133DC  B4D8               	btfsc	status,2,c
 11706  0133DE  D002               	goto	u9710
 11707  0133E0  0E01               	movlw	1
 11708  0133E2  D001               	goto	u9720
 11709  0133E4                     u9710:
 11710  0133E4  0E00               	movlw	0
 11711  0133E6                     u9720:
 11712  0133E6  0100               	movlb	0	; () banked
 11713  0133E8  6FB9               	movwf	___fladd@grs& (0+255),b
 11714                           
 11715                           ; BSR set to: 0
 11716  0133EA  0E00               	movlw	0
 11717  0133EC  0100               	movlb	0	; () banked
 11718  0133EE  6FA6               	movwf	___fladd@b& (0+255),b
 11719  0133F0  0E00               	movlw	0
 11720  0133F2  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11721  0133F4  0E00               	movlw	0
 11722  0133F6  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11723  0133F8  0E00               	movlw	0
 11724  0133FA  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11725                           
 11726                           ; BSR set to: 0
 11727  0133FC  C0B7  F0B8         	movff	___fladd@aexp,___fladd@bexp
 11728  013400  D020               	goto	l1466
 11729  013402                     l1468:
 11730                           
 11731                           ; BSR set to: 0
 11732  013402  0100               	movlb	0	; () banked
 11733  013404  A1B9               	btfss	___fladd@grs& (0+255),0,b
 11734  013406  D007               	goto	l7458
 11735                           
 11736                           ; BSR set to: 0
 11737  013408  0100               	movlb	0	; () banked
 11738  01340A  90D8               	bcf	status,0,c
 11739  01340C  31B9               	rrcf	___fladd@grs& (0+255),w,b
 11740  01340E  0901               	iorlw	1
 11741  013410  0100               	movlb	0	; () banked
 11742  013412  6FB9               	movwf	___fladd@grs& (0+255),b
 11743  013414  D003               	goto	l7460
 11744  013416                     l7458:
 11745                           
 11746                           ; BSR set to: 0
 11747  013416  0100               	movlb	0	; () banked
 11748  013418  90D8               	bcf	status,0,c
 11749  01341A  33B9               	rrcf	___fladd@grs& (0+255),f,b
 11750  01341C                     l7460:
 11751                           
 11752                           ; BSR set to: 0
 11753  01341C  0100               	movlb	0	; () banked
 11754  01341E  A1A6               	btfss	___fladd@b& (0+255),0,b
 11755  013420  D002               	goto	l7464
 11756                           
 11757                           ; BSR set to: 0
 11758  013422  0100               	movlb	0	; () banked
 11759  013424  8FB9               	bsf	___fladd@grs& (0+255),7,b
 11760  013426                     l7464:
 11761                           
 11762                           ; BSR set to: 0
 11763  013426  0100               	movlb	0	; () banked
 11764  013428  35A9               	rlcf	(___fladd@b+3)& (0+255),w,b
 11765  01342A  33A9               	rrcf	(___fladd@b+3)& (0+255),f,b
 11766  01342C  33A8               	rrcf	(___fladd@b+2)& (0+255),f,b
 11767  01342E  33A7               	rrcf	(___fladd@b+1)& (0+255),f,b
 11768  013430  33A6               	rrcf	___fladd@b& (0+255),f,b
 11769                           
 11770                           ; BSR set to: 0
 11771  013432  0100               	movlb	0	; () banked
 11772  013434  2BB8               	incf	___fladd@bexp& (0+255),f,b
 11773  013436                     l1467:
 11774                           
 11775                           ; BSR set to: 0
 11776  013436  0100               	movlb	0	; () banked
 11777  013438  51B7               	movf	___fladd@aexp& (0+255),w,b
 11778  01343A  0100               	movlb	0	; () banked
 11779  01343C  5DB8               	subwf	___fladd@bexp& (0+255),w,b
 11780  01343E  A0D8               	btfss	status,0,c
 11781  013440  D7E0               	goto	l1468
 11782  013442                     l1466:
 11783                           
 11784                           ; BSR set to: 0
 11785  013442  0100               	movlb	0	; () banked
 11786  013444  BDB6               	btfsc	___fladd@signs& (0+255),6,b
 11787  013446  D03F               	goto	l7492
 11788                           
 11789                           ; BSR set to: 0
 11790  013448  0100               	movlb	0	; () banked
 11791  01344A  51B8               	movf	___fladd@bexp& (0+255),w,b
 11792  01344C  0100               	movlb	0	; () banked
 11793  01344E  A4D8               	btfss	status,2,c
 11794  013450  D00A               	goto	l7474
 11795                           
 11796                           ; BSR set to: 0
 11797  013452  0E00               	movlw	0
 11798  013454  0100               	movlb	0	; () banked
 11799  013456  6FA6               	movwf	?___fladd& (0+255),b
 11800  013458  0E00               	movlw	0
 11801  01345A  6FA7               	movwf	(?___fladd+1)& (0+255),b
 11802  01345C  0E00               	movlw	0
 11803  01345E  6FA8               	movwf	(?___fladd+2)& (0+255),b
 11804  013460  0E00               	movlw	0
 11805  013462  6FA9               	movwf	(?___fladd+3)& (0+255),b
 11806                           
 11807                           ; BSR set to: 0
 11808  013464  0012               	return	
 11809  013466                     l7474:
 11810                           
 11811                           ; BSR set to: 0
 11812  013466  0100               	movlb	0	; () banked
 11813  013468  51AA               	movf	___fladd@a& (0+255),w,b
 11814  01346A  0100               	movlb	0	; () banked
 11815  01346C  27A6               	addwf	___fladd@b& (0+255),f,b
 11816  01346E  0100               	movlb	0	; () banked
 11817  013470  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 11818  013472  0100               	movlb	0	; () banked
 11819  013474  23A7               	addwfc	(___fladd@b+1)& (0+255),f,b
 11820  013476  0100               	movlb	0	; () banked
 11821  013478  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 11822  01347A  0100               	movlb	0	; () banked
 11823  01347C  23A8               	addwfc	(___fladd@b+2)& (0+255),f,b
 11824  01347E  0100               	movlb	0	; () banked
 11825  013480  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11826  013482  0100               	movlb	0	; () banked
 11827  013484  23A9               	addwfc	(___fladd@b+3)& (0+255),f,b
 11828                           
 11829                           ; BSR set to: 0
 11830  013486  0100               	movlb	0	; () banked
 11831  013488  A1A9               	btfss	(___fladd@b+3)& (0+255),0,b
 11832  01348A  D0CC               	goto	l7528
 11833                           
 11834                           ; BSR set to: 0
 11835  01348C  0100               	movlb	0	; () banked
 11836  01348E  A1B9               	btfss	___fladd@grs& (0+255),0,b
 11837  013490  D009               	goto	l7482
 11838                           
 11839                           ; BSR set to: 0
 11840  013492  0100               	movlb	0	; () banked
 11841  013494  90D8               	bcf	status,0,c
 11842  013496  33B9               	rrcf	___fladd@grs& (0+255),f,b
 11843  013498  0100               	movlb	0	; () banked
 11844  01349A  51B9               	movf	___fladd@grs& (0+255),w,b
 11845  01349C  0901               	iorlw	1
 11846  01349E  0100               	movlb	0	; () banked
 11847  0134A0  6FB9               	movwf	___fladd@grs& (0+255),b
 11848  0134A2  D003               	goto	l7484
 11849  0134A4                     l7482:
 11850                           
 11851                           ; BSR set to: 0
 11852  0134A4  0100               	movlb	0	; () banked
 11853  0134A6  90D8               	bcf	status,0,c
 11854  0134A8  33B9               	rrcf	___fladd@grs& (0+255),f,b
 11855  0134AA                     l7484:
 11856                           
 11857                           ; BSR set to: 0
 11858  0134AA  0100               	movlb	0	; () banked
 11859  0134AC  A1A6               	btfss	___fladd@b& (0+255),0,b
 11860  0134AE  D002               	goto	l7488
 11861                           
 11862                           ; BSR set to: 0
 11863  0134B0  0100               	movlb	0	; () banked
 11864  0134B2  8FB9               	bsf	___fladd@grs& (0+255),7,b
 11865  0134B4                     l7488:
 11866                           
 11867                           ; BSR set to: 0
 11868  0134B4  0100               	movlb	0	; () banked
 11869  0134B6  35A9               	rlcf	(___fladd@b+3)& (0+255),w,b
 11870  0134B8  33A9               	rrcf	(___fladd@b+3)& (0+255),f,b
 11871  0134BA  33A8               	rrcf	(___fladd@b+2)& (0+255),f,b
 11872  0134BC  33A7               	rrcf	(___fladd@b+1)& (0+255),f,b
 11873  0134BE  33A6               	rrcf	___fladd@b& (0+255),f,b
 11874                           
 11875                           ; BSR set to: 0
 11876  0134C0  0100               	movlb	0	; () banked
 11877  0134C2  2BB8               	incf	___fladd@bexp& (0+255),f,b
 11878                           
 11879                           ; BSR set to: 0
 11880  0134C4  D0AF               	goto	l7528
 11881  0134C6                     l7492:
 11882                           
 11883                           ; BSR set to: 0
 11884  0134C6  0100               	movlb	0	; () banked
 11885  0134C8  51AA               	movf	___fladd@a& (0+255),w,b
 11886  0134CA  0100               	movlb	0	; () banked
 11887  0134CC  5DA6               	subwf	___fladd@b& (0+255),w,b
 11888  0134CE  0100               	movlb	0	; () banked
 11889  0134D0  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 11890  0134D2  0100               	movlb	0	; () banked
 11891  0134D4  59A7               	subwfb	(___fladd@b+1)& (0+255),w,b
 11892  0134D6  0100               	movlb	0	; () banked
 11893  0134D8  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 11894  0134DA  0100               	movlb	0	; () banked
 11895  0134DC  59A8               	subwfb	(___fladd@b+2)& (0+255),w,b
 11896  0134DE  0100               	movlb	0	; () banked
 11897  0134E0  51A9               	movf	(___fladd@b+3)& (0+255),w,b
 11898  0134E2  0A80               	xorlw	128
 11899  0134E4  0100               	movlb	0	; () banked
 11900  0134E6  6FAE               	movwf	??___fladd& (0+255),b
 11901  0134E8  0100               	movlb	0	; () banked
 11902  0134EA  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11903  0134EC  0A80               	xorlw	128
 11904  0134EE  0100               	movlb	0	; () banked
 11905  0134F0  59AE               	subwfb	??___fladd& (0+255),w,b
 11906  0134F2  B0D8               	btfsc	status,0,c
 11907  0134F4  D050               	goto	l7502
 11908                           
 11909                           ; BSR set to: 0
 11910  0134F6  C0A6  F0AE         	movff	___fladd@b,??___fladd
 11911  0134FA  C0A7  F0AF         	movff	___fladd@b+1,??___fladd+1
 11912  0134FE  C0A8  F0B0         	movff	___fladd@b+2,??___fladd+2
 11913  013502  C0A9  F0B1         	movff	___fladd@b+3,??___fladd+3
 11914  013506  0100               	movlb	0	; () banked
 11915  013508  1FAE               	comf	??___fladd& (0+255),f,b
 11916  01350A  1FAF               	comf	(??___fladd+1)& (0+255),f,b
 11917  01350C  1FB0               	comf	(??___fladd+2)& (0+255),f,b
 11918  01350E  1FB1               	comf	(??___fladd+3)& (0+255),f,b
 11919  013510  2BAE               	incf	??___fladd& (0+255),f,b
 11920  013512  0E00               	movlw	0
 11921  013514  23AF               	addwfc	(??___fladd+1)& (0+255),f,b
 11922  013516  23B0               	addwfc	(??___fladd+2)& (0+255),f,b
 11923  013518  23B1               	addwfc	(??___fladd+3)& (0+255),f,b
 11924  01351A  0100               	movlb	0	; () banked
 11925  01351C  51AA               	movf	___fladd@a& (0+255),w,b
 11926  01351E  0100               	movlb	0	; () banked
 11927  013520  25AE               	addwf	??___fladd& (0+255),w,b
 11928  013522  0100               	movlb	0	; () banked
 11929  013524  6FB2               	movwf	(??___fladd+4)& (0+255),b
 11930  013526  0100               	movlb	0	; () banked
 11931  013528  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 11932  01352A  0100               	movlb	0	; () banked
 11933  01352C  21AF               	addwfc	(??___fladd+1)& (0+255),w,b
 11934  01352E  0100               	movlb	0	; () banked
 11935  013530  6FB3               	movwf	(??___fladd+5)& (0+255),b
 11936  013532  0100               	movlb	0	; () banked
 11937  013534  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 11938  013536  0100               	movlb	0	; () banked
 11939  013538  21B0               	addwfc	(??___fladd+2)& (0+255),w,b
 11940  01353A  0100               	movlb	0	; () banked
 11941  01353C  6FB4               	movwf	(??___fladd+6)& (0+255),b
 11942  01353E  0100               	movlb	0	; () banked
 11943  013540  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11944  013542  0100               	movlb	0	; () banked
 11945  013544  21B1               	addwfc	(??___fladd+3)& (0+255),w,b
 11946  013546  0100               	movlb	0	; () banked
 11947  013548  6FB5               	movwf	(??___fladd+7)& (0+255),b
 11948  01354A  0EFF               	movlw	255
 11949  01354C  0100               	movlb	0	; () banked
 11950  01354E  25B2               	addwf	(??___fladd+4)& (0+255),w,b
 11951  013550  0100               	movlb	0	; () banked
 11952  013552  6FA6               	movwf	___fladd@b& (0+255),b
 11953  013554  0EFF               	movlw	255
 11954  013556  0100               	movlb	0	; () banked
 11955  013558  21B3               	addwfc	(??___fladd+5)& (0+255),w,b
 11956  01355A  0100               	movlb	0	; () banked
 11957  01355C  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11958  01355E  0EFF               	movlw	255
 11959  013560  0100               	movlb	0	; () banked
 11960  013562  21B4               	addwfc	(??___fladd+6)& (0+255),w,b
 11961  013564  0100               	movlb	0	; () banked
 11962  013566  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11963  013568  0EFF               	movlw	255
 11964  01356A  0100               	movlb	0	; () banked
 11965  01356C  21B5               	addwfc	(??___fladd+7)& (0+255),w,b
 11966  01356E  0100               	movlb	0	; () banked
 11967  013570  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11968  013572  0E80               	movlw	128
 11969  013574  0100               	movlb	0	; () banked
 11970  013576  1BB6               	xorwf	___fladd@signs& (0+255),f,b
 11971                           
 11972                           ; BSR set to: 0
 11973  013578  0100               	movlb	0	; () banked
 11974  01357A  6DB9               	negf	___fladd@grs& (0+255),b
 11975                           
 11976                           ; BSR set to: 0
 11977  01357C  0100               	movlb	0	; () banked
 11978  01357E  51B9               	movf	___fladd@grs& (0+255),w,b
 11979  013580  0100               	movlb	0	; () banked
 11980  013582  A4D8               	btfss	status,2,c
 11981  013584  D018               	goto	l1483
 11982                           
 11983                           ; BSR set to: 0
 11984  013586  0E01               	movlw	1
 11985  013588  0100               	movlb	0	; () banked
 11986  01358A  27A6               	addwf	___fladd@b& (0+255),f,b
 11987  01358C  0E00               	movlw	0
 11988  01358E  23A7               	addwfc	(___fladd@b+1)& (0+255),f,b
 11989  013590  23A8               	addwfc	(___fladd@b+2)& (0+255),f,b
 11990  013592  23A9               	addwfc	(___fladd@b+3)& (0+255),f,b
 11991                           
 11992                           ; BSR set to: 0
 11993  013594  D010               	goto	l1483
 11994  013596                     l7502:
 11995                           
 11996                           ; BSR set to: 0
 11997  013596  0100               	movlb	0	; () banked
 11998  013598  51AA               	movf	___fladd@a& (0+255),w,b
 11999  01359A  0100               	movlb	0	; () banked
 12000  01359C  5FA6               	subwf	___fladd@b& (0+255),f,b
 12001  01359E  0100               	movlb	0	; () banked
 12002  0135A0  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 12003  0135A2  0100               	movlb	0	; () banked
 12004  0135A4  5BA7               	subwfb	(___fladd@b+1)& (0+255),f,b
 12005  0135A6  0100               	movlb	0	; () banked
 12006  0135A8  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 12007  0135AA  0100               	movlb	0	; () banked
 12008  0135AC  5BA8               	subwfb	(___fladd@b+2)& (0+255),f,b
 12009  0135AE  0100               	movlb	0	; () banked
 12010  0135B0  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 12011  0135B2  0100               	movlb	0	; () banked
 12012  0135B4  5BA9               	subwfb	(___fladd@b+3)& (0+255),f,b
 12013  0135B6                     l1483:
 12014                           
 12015                           ; BSR set to: 0
 12016  0135B6  0100               	movlb	0	; () banked
 12017  0135B8  51A6               	movf	___fladd@b& (0+255),w,b
 12018  0135BA  0100               	movlb	0	; () banked
 12019  0135BC  11A7               	iorwf	(___fladd@b+1)& (0+255),w,b
 12020  0135BE  0100               	movlb	0	; () banked
 12021  0135C0  11A8               	iorwf	(___fladd@b+2)& (0+255),w,b
 12022  0135C2  0100               	movlb	0	; () banked
 12023  0135C4  11A9               	iorwf	(___fladd@b+3)& (0+255),w,b
 12024  0135C6  A4D8               	btfss	status,2,c
 12025  0135C8  D02A               	goto	l7526
 12026                           
 12027                           ; BSR set to: 0
 12028  0135CA  0100               	movlb	0	; () banked
 12029  0135CC  51B9               	movf	___fladd@grs& (0+255),w,b
 12030  0135CE  0100               	movlb	0	; () banked
 12031  0135D0  A4D8               	btfss	status,2,c
 12032  0135D2  D025               	goto	l7526
 12033                           
 12034                           ; BSR set to: 0
 12035  0135D4  0E00               	movlw	0
 12036  0135D6  0100               	movlb	0	; () banked
 12037  0135D8  6FA6               	movwf	?___fladd& (0+255),b
 12038  0135DA  0E00               	movlw	0
 12039  0135DC  6FA7               	movwf	(?___fladd+1)& (0+255),b
 12040  0135DE  0E00               	movlw	0
 12041  0135E0  6FA8               	movwf	(?___fladd+2)& (0+255),b
 12042  0135E2  0E00               	movlw	0
 12043  0135E4  6FA9               	movwf	(?___fladd+3)& (0+255),b
 12044                           
 12045                           ; BSR set to: 0
 12046  0135E6  0012               	return	
 12047  0135E8                     l7510:
 12048                           
 12049                           ; BSR set to: 0
 12050  0135E8  0100               	movlb	0	; () banked
 12051  0135EA  90D8               	bcf	status,0,c
 12052  0135EC  37A6               	rlcf	___fladd@b& (0+255),f,b
 12053  0135EE  37A7               	rlcf	(___fladd@b+1)& (0+255),f,b
 12054  0135F0  37A8               	rlcf	(___fladd@b+2)& (0+255),f,b
 12055  0135F2  37A9               	rlcf	(___fladd@b+3)& (0+255),f,b
 12056                           
 12057                           ; BSR set to: 0
 12058  0135F4  0100               	movlb	0	; () banked
 12059  0135F6  AFB9               	btfss	___fladd@grs& (0+255),7,b
 12060  0135F8  D002               	goto	l7516
 12061                           
 12062                           ; BSR set to: 0
 12063  0135FA  0100               	movlb	0	; () banked
 12064  0135FC  81A6               	bsf	___fladd@b& (0+255),0,b
 12065  0135FE                     l7516:
 12066                           
 12067                           ; BSR set to: 0
 12068  0135FE  0100               	movlb	0	; () banked
 12069  013600  A1B9               	btfss	___fladd@grs& (0+255),0,b
 12070  013602  D003               	goto	l7520
 12071                           
 12072                           ; BSR set to: 0
 12073  013604  80D8               	bsf	status,0,c
 12074  013606  0100               	movlb	0	; () banked
 12075  013608  D002               	goto	L11
 12076  01360A                     l7520:
 12077                           
 12078                           ; BSR set to: 0
 12079  01360A  0100               	movlb	0	; () banked
 12080  01360C  90D8               	bcf	status,0,c
 12081  01360E                     L11:
 12082  01360E  37B9               	rlcf	___fladd@grs& (0+255),f,b
 12083                           
 12084                           ; BSR set to: 0
 12085                           
 12086                           ; BSR set to: 0
 12087  013610  0100               	movlb	0	; () banked
 12088  013612  51B8               	movf	___fladd@bexp& (0+255),w,b
 12089  013614  0100               	movlb	0	; () banked
 12090  013616  B4D8               	btfsc	status,2,c
 12091  013618  D002               	goto	l7526
 12092                           
 12093                           ; BSR set to: 0
 12094  01361A  0100               	movlb	0	; () banked
 12095  01361C  07B8               	decf	___fladd@bexp& (0+255),f,b
 12096  01361E                     l7526:
 12097                           
 12098                           ; BSR set to: 0
 12099  01361E  0100               	movlb	0	; () banked
 12100  013620  AFA8               	btfss	(___fladd@b+2)& (0+255),7,b
 12101  013622  D7E2               	goto	l7510
 12102  013624                     l7528:
 12103                           
 12104                           ; BSR set to: 0
 12105  013624  0E00               	movlw	0
 12106  013626  0100               	movlb	0	; () banked
 12107  013628  6FB7               	movwf	___fladd@aexp& (0+255),b
 12108                           
 12109                           ; BSR set to: 0
 12110  01362A  0100               	movlb	0	; () banked
 12111  01362C  AFB9               	btfss	___fladd@grs& (0+255),7,b
 12112  01362E  D00D               	goto	l1492
 12113                           
 12114                           ; BSR set to: 0
 12115  013630  C0B9  F0AE         	movff	___fladd@grs,??___fladd
 12116  013634  0E7F               	movlw	127
 12117  013636  0100               	movlb	0	; () banked
 12118  013638  17AE               	andwf	??___fladd& (0+255),f,b
 12119  01363A  A4D8               	btfss	status,2,c
 12120  01363C  D003               	goto	l7536
 12121                           
 12122                           ; BSR set to: 0
 12123                           
 12124                           ; BSR set to: 0
 12125  01363E  0100               	movlb	0	; () banked
 12126  013640  A1A6               	btfss	___fladd@b& (0+255),0,b
 12127  013642  D003               	goto	l1492
 12128  013644                     l7536:
 12129                           
 12130                           ; BSR set to: 0
 12131  013644  0E01               	movlw	1
 12132  013646  0100               	movlb	0	; () banked
 12133  013648  6FB7               	movwf	___fladd@aexp& (0+255),b
 12134  01364A                     l1492:
 12135                           
 12136                           ; BSR set to: 0
 12137  01364A  0100               	movlb	0	; () banked
 12138  01364C  51B7               	movf	___fladd@aexp& (0+255),w,b
 12139  01364E  0100               	movlb	0	; () banked
 12140  013650  B4D8               	btfsc	status,2,c
 12141  013652  D026               	goto	l7546
 12142                           
 12143                           ; BSR set to: 0
 12144  013654  0E01               	movlw	1
 12145  013656  0100               	movlb	0	; () banked
 12146  013658  27A6               	addwf	___fladd@b& (0+255),f,b
 12147  01365A  0E00               	movlw	0
 12148  01365C  23A7               	addwfc	(___fladd@b+1)& (0+255),f,b
 12149  01365E  23A8               	addwfc	(___fladd@b+2)& (0+255),f,b
 12150  013660  23A9               	addwfc	(___fladd@b+3)& (0+255),f,b
 12151                           
 12152                           ; BSR set to: 0
 12153  013662  0100               	movlb	0	; () banked
 12154  013664  A1A9               	btfss	(___fladd@b+3)& (0+255),0,b
 12155  013666  D01C               	goto	l7546
 12156                           
 12157                           ; BSR set to: 0
 12158  013668  C0A6  F0AE         	movff	___fladd@b,??___fladd
 12159  01366C  C0A7  F0AF         	movff	___fladd@b+1,??___fladd+1
 12160  013670  C0A8  F0B0         	movff	___fladd@b+2,??___fladd+2
 12161  013674  C0A9  F0B1         	movff	___fladd@b+3,??___fladd+3
 12162  013678  0100               	movlb	0	; () banked
 12163  01367A  35B1               	rlcf	(??___fladd+3)& (0+255),w,b
 12164  01367C  33B1               	rrcf	(??___fladd+3)& (0+255),f,b
 12165  01367E  33B0               	rrcf	(??___fladd+2)& (0+255),f,b
 12166  013680  33AF               	rrcf	(??___fladd+1)& (0+255),f,b
 12167  013682  33AE               	rrcf	??___fladd& (0+255),f,b
 12168  013684  C0AE  F0A6         	movff	??___fladd,___fladd@b
 12169  013688  C0AF  F0A7         	movff	??___fladd+1,___fladd@b+1
 12170  01368C  C0B0  F0A8         	movff	??___fladd+2,___fladd@b+2
 12171  013690  C0B1  F0A9         	movff	??___fladd+3,___fladd@b+3
 12172  013694  0100               	movlb	0	; () banked
 12173  013696  29B8               	incf	___fladd@bexp& (0+255),w,b
 12174  013698  B4D8               	btfsc	status,2,c
 12175  01369A  D002               	goto	l7546
 12176                           
 12177                           ; BSR set to: 0
 12178  01369C  0100               	movlb	0	; () banked
 12179  01369E  2BB8               	incf	___fladd@bexp& (0+255),f,b
 12180  0136A0                     l7546:
 12181                           
 12182                           ; BSR set to: 0
 12183  0136A0  0100               	movlb	0	; () banked
 12184  0136A2  29B8               	incf	___fladd@bexp& (0+255),w,b
 12185  0136A4  B4D8               	btfsc	status,2,c
 12186  0136A6  D005               	goto	l7550
 12187                           
 12188                           ; BSR set to: 0
 12189  0136A8  0100               	movlb	0	; () banked
 12190  0136AA  51B8               	movf	___fladd@bexp& (0+255),w,b
 12191  0136AC  0100               	movlb	0	; () banked
 12192  0136AE  A4D8               	btfss	status,2,c
 12193  0136B0  D011               	goto	l7554
 12194  0136B2                     l7550:
 12195                           
 12196                           ; BSR set to: 0
 12197  0136B2  0E00               	movlw	0
 12198  0136B4  0100               	movlb	0	; () banked
 12199  0136B6  6FA6               	movwf	___fladd@b& (0+255),b
 12200  0136B8  0E00               	movlw	0
 12201  0136BA  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 12202  0136BC  0E00               	movlw	0
 12203  0136BE  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 12204  0136C0  0E00               	movlw	0
 12205  0136C2  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 12206  0136C4  0100               	movlb	0	; () banked
 12207  0136C6  51B8               	movf	___fladd@bexp& (0+255),w,b
 12208  0136C8  0100               	movlb	0	; () banked
 12209  0136CA  A4D8               	btfss	status,2,c
 12210  0136CC  D003               	goto	l7554
 12211                           
 12212                           ; BSR set to: 0
 12213  0136CE  0E00               	movlw	0
 12214  0136D0  0100               	movlb	0	; () banked
 12215  0136D2  6FB6               	movwf	___fladd@signs& (0+255),b
 12216  0136D4                     l7554:
 12217                           
 12218                           ; BSR set to: 0
 12219  0136D4  0100               	movlb	0	; () banked
 12220  0136D6  A1B8               	btfss	___fladd@bexp& (0+255),0,b
 12221  0136D8  D003               	goto	l7558
 12222                           
 12223                           ; BSR set to: 0
 12224  0136DA  0100               	movlb	0	; () banked
 12225  0136DC  8FA8               	bsf	(___fladd@b+2)& (0+255),7,b
 12226  0136DE  D002               	goto	l7560
 12227  0136E0                     l7558:
 12228                           
 12229                           ; BSR set to: 0
 12230  0136E0  0100               	movlb	0	; () banked
 12231  0136E2  9FA8               	bcf	(___fladd@b+2)& (0+255),7,b
 12232  0136E4                     l7560:
 12233                           
 12234                           ; BSR set to: 0
 12235  0136E4  0100               	movlb	0	; () banked
 12236  0136E6  90D8               	bcf	status,0,c
 12237  0136E8  31B8               	rrcf	___fladd@bexp& (0+255),w,b
 12238  0136EA  0100               	movlb	0	; () banked
 12239  0136EC  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 12240                           
 12241                           ; BSR set to: 0
 12242  0136EE  0100               	movlb	0	; () banked
 12243  0136F0  AFB6               	btfss	___fladd@signs& (0+255),7,b
 12244  0136F2  D002               	goto	l7566
 12245                           
 12246                           ; BSR set to: 0
 12247  0136F4  0100               	movlb	0	; () banked
 12248  0136F6  8FA9               	bsf	(___fladd@b+3)& (0+255),7,b
 12249  0136F8                     l7566:
 12250                           
 12251                           ; BSR set to: 0
 12252  0136F8  C0A6  F0A6         	movff	___fladd@b,?___fladd
 12253  0136FC  C0A7  F0A7         	movff	___fladd@b+1,?___fladd+1
 12254  013700  C0A8  F0A8         	movff	___fladd@b+2,?___fladd+2
 12255  013704  C0A9  F0A9         	movff	___fladd@b+3,?___fladd+3
 12256  013708  0012               	return	
 12257  01370A                     __end_of___fladd:
 12258                           	opt stack 0
 12259                           tblptru	equ	0xFF8
 12260                           tblptrh	equ	0xFF7
 12261                           tblptrl	equ	0xFF6
 12262                           tablat	equ	0xFF5
 12263                           prodh	equ	0xFF4
 12264                           prodl	equ	0xFF3
 12265                           intcon	equ	0xFF2
 12266                           postinc0	equ	0xFEE
 12267                           wreg	equ	0xFE8
 12268                           indf2	equ	0xFDF
 12269                           postinc2	equ	0xFDE
 12270                           fsr2h	equ	0xFDA
 12271                           fsr2l	equ	0xFD9
 12272                           status	equ	0xFD8
 12273                           
 12274 ;; *************** function ___flneg *****************
 12275 ;; Defined at:
 12276 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 12277 ;; Parameters:    Size  Location     Type
 12278 ;;  f1              4   57[BANK0 ] unsigned char 
 12279 ;; Auto vars:     Size  Location     Type
 12280 ;;		None
 12281 ;; Return value:  Size  Location     Type
 12282 ;;                  4   57[BANK0 ] unsigned char 
 12283 ;; Registers used:
 12284 ;;		wreg, status,2, status,0
 12285 ;; Tracked objects:
 12286 ;;		On entry : 0/0
 12287 ;;		On exit  : 0/0
 12288 ;;		Unchanged: 0/0
 12289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12290 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12293 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12294 ;;Total ram usage:        4 bytes
 12295 ;; Hardware stack levels used:    1
 12296 ;; Hardware stack levels required when called:    3
 12297 ;; This function calls:
 12298 ;;		Nothing
 12299 ;; This function is called by:
 12300 ;;		_main
 12301 ;;		_sprintf
 12302 ;; This function uses a non-reentrant model
 12303 ;;
 12304                           
 12305                           	psect	text23
 12306  015BCE                     __ptext23:
 12307                           	opt stack 0
 12308  015BCE                     ___flneg:
 12309                           	opt stack 27
 12310                           
 12311                           ; BSR set to: 0
 12312                           ;incstack = 0
 12313  015BCE  0100               	movlb	0	; () banked
 12314  015BD0  5199               	movf	___flneg@f1& (0+255),w,b
 12315  015BD2  0100               	movlb	0	; () banked
 12316  015BD4  119A               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12317  015BD6  0100               	movlb	0	; () banked
 12318  015BD8  119B               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12319  015BDA  0100               	movlb	0	; () banked
 12320  015BDC  119C               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12321  015BDE  B4D8               	btfsc	status,2,c
 12322  015BE0  D009               	goto	l8042
 12323                           
 12324                           ; BSR set to: 0
 12325  015BE2  0E00               	movlw	0
 12326  015BE4  0100               	movlb	0	; () banked
 12327  015BE6  1B99               	xorwf	___flneg@f1& (0+255),f,b
 12328  015BE8  0E00               	movlw	0
 12329  015BEA  1B9A               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12330  015BEC  0E00               	movlw	0
 12331  015BEE  1B9B               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12332  015BF0  0E80               	movlw	128
 12333  015BF2  1B9C               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12334  015BF4                     l8042:
 12335                           
 12336                           ; BSR set to: 0
 12337  015BF4  C099  F099         	movff	___flneg@f1,?___flneg
 12338  015BF8  C09A  F09A         	movff	___flneg@f1+1,?___flneg+1
 12339  015BFC  C09B  F09B         	movff	___flneg@f1+2,?___flneg+2
 12340  015C00  C09C  F09C         	movff	___flneg@f1+3,?___flneg+3
 12341  015C04  0012               	return	
 12342  015C06                     __end_of___flneg:
 12343                           	opt stack 0
 12344                           tblptru	equ	0xFF8
 12345                           tblptrh	equ	0xFF7
 12346                           tblptrl	equ	0xFF6
 12347                           tablat	equ	0xFF5
 12348                           prodh	equ	0xFF4
 12349                           prodl	equ	0xFF3
 12350                           intcon	equ	0xFF2
 12351                           postinc0	equ	0xFEE
 12352                           wreg	equ	0xFE8
 12353                           indf2	equ	0xFDF
 12354                           postinc2	equ	0xFDE
 12355                           fsr2h	equ	0xFDA
 12356                           fsr2l	equ	0xFD9
 12357                           status	equ	0xFD8
 12358                           
 12359 ;; *************** function ___flge *****************
 12360 ;; Defined at:
 12361 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 12362 ;; Parameters:    Size  Location     Type
 12363 ;;  ff1             4   18[BANK0 ] unsigned char 
 12364 ;;  ff2             4   22[BANK0 ] unsigned char 
 12365 ;; Auto vars:     Size  Location     Type
 12366 ;;		None
 12367 ;; Return value:  Size  Location     Type
 12368 ;;		None               void
 12369 ;; Registers used:
 12370 ;;		wreg, status,2, status,0
 12371 ;; Tracked objects:
 12372 ;;		On entry : 0/0
 12373 ;;		On exit  : 0/0
 12374 ;;		Unchanged: 0/0
 12375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12376 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12378 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12379 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12380 ;;Total ram usage:       12 bytes
 12381 ;; Hardware stack levels used:    1
 12382 ;; Hardware stack levels required when called:    3
 12383 ;; This function calls:
 12384 ;;		Nothing
 12385 ;; This function is called by:
 12386 ;;		_sprintf
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           	psect	text24
 12391  014D10                     __ptext24:
 12392                           	opt stack 0
 12393  014D10                     ___flge:
 12394                           	opt stack 25
 12395                           
 12396                           ; BSR set to: 0
 12397                           ;incstack = 0
 12398  014D10  0E00               	movlw	0
 12399  014D12  0100               	movlb	0	; () banked
 12400  014D14  1572               	andwf	___flge@ff1& (0+255),w,b
 12401  014D16  0100               	movlb	0	; () banked
 12402  014D18  6F7A               	movwf	??___flge& (0+255),b
 12403  014D1A  0E00               	movlw	0
 12404  014D1C  0100               	movlb	0	; () banked
 12405  014D1E  1573               	andwf	(___flge@ff1+1)& (0+255),w,b
 12406  014D20  0100               	movlb	0	; () banked
 12407  014D22  6F7B               	movwf	(??___flge+1)& (0+255),b
 12408  014D24  0E80               	movlw	128
 12409  014D26  0100               	movlb	0	; () banked
 12410  014D28  1574               	andwf	(___flge@ff1+2)& (0+255),w,b
 12411  014D2A  0100               	movlb	0	; () banked
 12412  014D2C  6F7C               	movwf	(??___flge+2)& (0+255),b
 12413  014D2E  0E7F               	movlw	127
 12414  014D30  0100               	movlb	0	; () banked
 12415  014D32  1575               	andwf	(___flge@ff1+3)& (0+255),w,b
 12416  014D34  0100               	movlb	0	; () banked
 12417  014D36  6F7D               	movwf	(??___flge+3)& (0+255),b
 12418  014D38  0100               	movlb	0	; () banked
 12419  014D3A  517A               	movf	??___flge& (0+255),w,b
 12420  014D3C  0100               	movlb	0	; () banked
 12421  014D3E  117B               	iorwf	(??___flge+1)& (0+255),w,b
 12422  014D40  0100               	movlb	0	; () banked
 12423  014D42  117C               	iorwf	(??___flge+2)& (0+255),w,b
 12424  014D44  0100               	movlb	0	; () banked
 12425  014D46  117D               	iorwf	(??___flge+3)& (0+255),w,b
 12426  014D48  A4D8               	btfss	status,2,c
 12427  014D4A  D009               	goto	l8020
 12428                           
 12429                           ; BSR set to: 0
 12430  014D4C  0E00               	movlw	0
 12431  014D4E  0100               	movlb	0	; () banked
 12432  014D50  6F72               	movwf	___flge@ff1& (0+255),b
 12433  014D52  0E00               	movlw	0
 12434  014D54  6F73               	movwf	(___flge@ff1+1)& (0+255),b
 12435  014D56  0E00               	movlw	0
 12436  014D58  6F74               	movwf	(___flge@ff1+2)& (0+255),b
 12437  014D5A  0E00               	movlw	0
 12438  014D5C  6F75               	movwf	(___flge@ff1+3)& (0+255),b
 12439  014D5E                     l8020:
 12440                           
 12441                           ; BSR set to: 0
 12442  014D5E  0E00               	movlw	0
 12443  014D60  0100               	movlb	0	; () banked
 12444  014D62  1576               	andwf	___flge@ff2& (0+255),w,b
 12445  014D64  0100               	movlb	0	; () banked
 12446  014D66  6F7A               	movwf	??___flge& (0+255),b
 12447  014D68  0E00               	movlw	0
 12448  014D6A  0100               	movlb	0	; () banked
 12449  014D6C  1577               	andwf	(___flge@ff2+1)& (0+255),w,b
 12450  014D6E  0100               	movlb	0	; () banked
 12451  014D70  6F7B               	movwf	(??___flge+1)& (0+255),b
 12452  014D72  0E80               	movlw	128
 12453  014D74  0100               	movlb	0	; () banked
 12454  014D76  1578               	andwf	(___flge@ff2+2)& (0+255),w,b
 12455  014D78  0100               	movlb	0	; () banked
 12456  014D7A  6F7C               	movwf	(??___flge+2)& (0+255),b
 12457  014D7C  0E7F               	movlw	127
 12458  014D7E  0100               	movlb	0	; () banked
 12459  014D80  1579               	andwf	(___flge@ff2+3)& (0+255),w,b
 12460  014D82  0100               	movlb	0	; () banked
 12461  014D84  6F7D               	movwf	(??___flge+3)& (0+255),b
 12462  014D86  0100               	movlb	0	; () banked
 12463  014D88  517A               	movf	??___flge& (0+255),w,b
 12464  014D8A  0100               	movlb	0	; () banked
 12465  014D8C  117B               	iorwf	(??___flge+1)& (0+255),w,b
 12466  014D8E  0100               	movlb	0	; () banked
 12467  014D90  117C               	iorwf	(??___flge+2)& (0+255),w,b
 12468  014D92  0100               	movlb	0	; () banked
 12469  014D94  117D               	iorwf	(??___flge+3)& (0+255),w,b
 12470  014D96  A4D8               	btfss	status,2,c
 12471  014D98  D009               	goto	l8024
 12472                           
 12473                           ; BSR set to: 0
 12474  014D9A  0E00               	movlw	0
 12475  014D9C  0100               	movlb	0	; () banked
 12476  014D9E  6F76               	movwf	___flge@ff2& (0+255),b
 12477  014DA0  0E00               	movlw	0
 12478  014DA2  6F77               	movwf	(___flge@ff2+1)& (0+255),b
 12479  014DA4  0E00               	movlw	0
 12480  014DA6  6F78               	movwf	(___flge@ff2+2)& (0+255),b
 12481  014DA8  0E00               	movlw	0
 12482  014DAA  6F79               	movwf	(___flge@ff2+3)& (0+255),b
 12483  014DAC                     l8024:
 12484                           
 12485                           ; BSR set to: 0
 12486  014DAC  0100               	movlb	0	; () banked
 12487  014DAE  AF75               	btfss	(___flge@ff1+3)& (0+255),7,b
 12488  014DB0  D026               	goto	l8028
 12489                           
 12490                           ; BSR set to: 0
 12491  014DB2  C072  F07A         	movff	___flge@ff1,??___flge
 12492  014DB6  C073  F07B         	movff	___flge@ff1+1,??___flge+1
 12493  014DBA  C074  F07C         	movff	___flge@ff1+2,??___flge+2
 12494  014DBE  C075  F07D         	movff	___flge@ff1+3,??___flge+3
 12495  014DC2  0100               	movlb	0	; () banked
 12496  014DC4  1F7A               	comf	??___flge& (0+255),f,b
 12497  014DC6  1F7B               	comf	(??___flge+1)& (0+255),f,b
 12498  014DC8  1F7C               	comf	(??___flge+2)& (0+255),f,b
 12499  014DCA  1F7D               	comf	(??___flge+3)& (0+255),f,b
 12500  014DCC  2B7A               	incf	??___flge& (0+255),f,b
 12501  014DCE  0E00               	movlw	0
 12502  014DD0  237B               	addwfc	(??___flge+1)& (0+255),f,b
 12503  014DD2  237C               	addwfc	(??___flge+2)& (0+255),f,b
 12504  014DD4  237D               	addwfc	(??___flge+3)& (0+255),f,b
 12505  014DD6  0E00               	movlw	0
 12506  014DD8  0100               	movlb	0	; () banked
 12507  014DDA  257A               	addwf	??___flge& (0+255),w,b
 12508  014DDC  0100               	movlb	0	; () banked
 12509  014DDE  6F72               	movwf	___flge@ff1& (0+255),b
 12510  014DE0  0E00               	movlw	0
 12511  014DE2  0100               	movlb	0	; () banked
 12512  014DE4  217B               	addwfc	(??___flge+1)& (0+255),w,b
 12513  014DE6  0100               	movlb	0	; () banked
 12514  014DE8  6F73               	movwf	(___flge@ff1+1)& (0+255),b
 12515  014DEA  0E00               	movlw	0
 12516  014DEC  0100               	movlb	0	; () banked
 12517  014DEE  217C               	addwfc	(??___flge+2)& (0+255),w,b
 12518  014DF0  0100               	movlb	0	; () banked
 12519  014DF2  6F74               	movwf	(___flge@ff1+2)& (0+255),b
 12520  014DF4  0E80               	movlw	128
 12521  014DF6  0100               	movlb	0	; () banked
 12522  014DF8  217D               	addwfc	(??___flge+3)& (0+255),w,b
 12523  014DFA  0100               	movlb	0	; () banked
 12524  014DFC  6F75               	movwf	(___flge@ff1+3)& (0+255),b
 12525  014DFE                     l8028:
 12526                           
 12527                           ; BSR set to: 0
 12528  014DFE  0100               	movlb	0	; () banked
 12529  014E00  AF79               	btfss	(___flge@ff2+3)& (0+255),7,b
 12530  014E02  D026               	goto	l1189
 12531                           
 12532                           ; BSR set to: 0
 12533  014E04  C076  F07A         	movff	___flge@ff2,??___flge
 12534  014E08  C077  F07B         	movff	___flge@ff2+1,??___flge+1
 12535  014E0C  C078  F07C         	movff	___flge@ff2+2,??___flge+2
 12536  014E10  C079  F07D         	movff	___flge@ff2+3,??___flge+3
 12537  014E14  0100               	movlb	0	; () banked
 12538  014E16  1F7A               	comf	??___flge& (0+255),f,b
 12539  014E18  1F7B               	comf	(??___flge+1)& (0+255),f,b
 12540  014E1A  1F7C               	comf	(??___flge+2)& (0+255),f,b
 12541  014E1C  1F7D               	comf	(??___flge+3)& (0+255),f,b
 12542  014E1E  2B7A               	incf	??___flge& (0+255),f,b
 12543  014E20  0E00               	movlw	0
 12544  014E22  237B               	addwfc	(??___flge+1)& (0+255),f,b
 12545  014E24  237C               	addwfc	(??___flge+2)& (0+255),f,b
 12546  014E26  237D               	addwfc	(??___flge+3)& (0+255),f,b
 12547  014E28  0E00               	movlw	0
 12548  014E2A  0100               	movlb	0	; () banked
 12549  014E2C  257A               	addwf	??___flge& (0+255),w,b
 12550  014E2E  0100               	movlb	0	; () banked
 12551  014E30  6F76               	movwf	___flge@ff2& (0+255),b
 12552  014E32  0E00               	movlw	0
 12553  014E34  0100               	movlb	0	; () banked
 12554  014E36  217B               	addwfc	(??___flge+1)& (0+255),w,b
 12555  014E38  0100               	movlb	0	; () banked
 12556  014E3A  6F77               	movwf	(___flge@ff2+1)& (0+255),b
 12557  014E3C  0E00               	movlw	0
 12558  014E3E  0100               	movlb	0	; () banked
 12559  014E40  217C               	addwfc	(??___flge+2)& (0+255),w,b
 12560  014E42  0100               	movlb	0	; () banked
 12561  014E44  6F78               	movwf	(___flge@ff2+2)& (0+255),b
 12562  014E46  0E80               	movlw	128
 12563  014E48  0100               	movlb	0	; () banked
 12564  014E4A  217D               	addwfc	(??___flge+3)& (0+255),w,b
 12565  014E4C  0100               	movlb	0	; () banked
 12566  014E4E  6F79               	movwf	(___flge@ff2+3)& (0+255),b
 12567  014E50                     l1189:
 12568                           
 12569                           ; BSR set to: 0
 12570  014E50  0E00               	movlw	0
 12571  014E52  0100               	movlb	0	; () banked
 12572  014E54  1B72               	xorwf	___flge@ff1& (0+255),f,b
 12573  014E56  0E00               	movlw	0
 12574  014E58  1B73               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12575  014E5A  0E00               	movlw	0
 12576  014E5C  1B74               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12577  014E5E  0E80               	movlw	128
 12578  014E60  1B75               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12579  014E62  0E00               	movlw	0
 12580  014E64  0100               	movlb	0	; () banked
 12581  014E66  1B76               	xorwf	___flge@ff2& (0+255),f,b
 12582  014E68  0E00               	movlw	0
 12583  014E6A  1B77               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12584  014E6C  0E00               	movlw	0
 12585  014E6E  1B78               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12586  014E70  0E80               	movlw	128
 12587  014E72  1B79               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12588  014E74  0100               	movlb	0	; () banked
 12589  014E76  5176               	movf	___flge@ff2& (0+255),w,b
 12590  014E78  0100               	movlb	0	; () banked
 12591  014E7A  5D72               	subwf	___flge@ff1& (0+255),w,b
 12592  014E7C  0100               	movlb	0	; () banked
 12593  014E7E  5177               	movf	(___flge@ff2+1)& (0+255),w,b
 12594  014E80  0100               	movlb	0	; () banked
 12595  014E82  5973               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12596  014E84  0100               	movlb	0	; () banked
 12597  014E86  5178               	movf	(___flge@ff2+2)& (0+255),w,b
 12598  014E88  0100               	movlb	0	; () banked
 12599  014E8A  5974               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12600  014E8C  0100               	movlb	0	; () banked
 12601  014E8E  5179               	movf	(___flge@ff2+3)& (0+255),w,b
 12602  014E90  0100               	movlb	0	; () banked
 12603  014E92  5975               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12604  014E94  B0D8               	btfsc	status,0,c
 12605  014E96  D002               	goto	l8034
 12606                           
 12607                           ; BSR set to: 0
 12608  014E98  90D8               	bcf	status,0,c
 12609  014E9A  0012               	return	
 12610  014E9C                     l8034:
 12611                           
 12612                           ; BSR set to: 0
 12613  014E9C  80D8               	bsf	status,0,c
 12614                           
 12615                           ; BSR set to: 0
 12616  014E9E  0012               	return	
 12617  014EA0                     __end_of___flge:
 12618                           	opt stack 0
 12619                           tblptru	equ	0xFF8
 12620                           tblptrh	equ	0xFF7
 12621                           tblptrl	equ	0xFF6
 12622                           tablat	equ	0xFF5
 12623                           prodh	equ	0xFF4
 12624                           prodl	equ	0xFF3
 12625                           intcon	equ	0xFF2
 12626                           postinc0	equ	0xFEE
 12627                           wreg	equ	0xFE8
 12628                           indf2	equ	0xFDF
 12629                           postinc2	equ	0xFDE
 12630                           fsr2h	equ	0xFDA
 12631                           fsr2l	equ	0xFD9
 12632                           status	equ	0xFD8
 12633                           
 12634 ;; *************** function ___fldiv *****************
 12635 ;; Defined at:
 12636 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 12637 ;; Parameters:    Size  Location     Type
 12638 ;;  b               4   32[BANK0 ] unsigned char 
 12639 ;;  a               4   36[BANK0 ] unsigned char 
 12640 ;; Auto vars:     Size  Location     Type
 12641 ;;  grs             4   51[BANK0 ] unsigned long 
 12642 ;;  rem             4   45[BANK0 ] unsigned long 
 12643 ;;  new_exp         2   49[BANK0 ] int 
 12644 ;;  aexp            1   56[BANK0 ] unsigned char 
 12645 ;;  bexp            1   55[BANK0 ] unsigned char 
 12646 ;;  sign            1   44[BANK0 ] unsigned char 
 12647 ;; Return value:  Size  Location     Type
 12648 ;;                  4   32[BANK0 ] unsigned char 
 12649 ;; Registers used:
 12650 ;;		wreg, status,2, status,0
 12651 ;; Tracked objects:
 12652 ;;		On entry : 0/0
 12653 ;;		On exit  : 0/0
 12654 ;;		Unchanged: 0/0
 12655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12656 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12657 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12658 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12659 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12660 ;;Total ram usage:       25 bytes
 12661 ;; Hardware stack levels used:    1
 12662 ;; Hardware stack levels required when called:    3
 12663 ;; This function calls:
 12664 ;;		Nothing
 12665 ;; This function is called by:
 12666 ;;		_LCD_Handler
 12667 ;; This function uses a non-reentrant model
 12668 ;;
 12669                           
 12670                           	psect	text25
 12671  013BB0                     __ptext25:
 12672                           	opt stack 0
 12673  013BB0                     ___fldiv:
 12674                           	opt stack 26
 12675                           
 12676                           ; BSR set to: 0
 12677                           ;incstack = 0
 12678  013BB0  0100               	movlb	0	; () banked
 12679  013BB2  5183               	movf	(___fldiv@b+3)& (0+255),w,b
 12680  013BB4  0B80               	andlw	128
 12681  013BB6  0100               	movlb	0	; () banked
 12682  013BB8  6F8C               	movwf	___fldiv@sign& (0+255),b
 12683  013BBA  0100               	movlb	0	; () banked
 12684  013BBC  5183               	movf	(___fldiv@b+3)& (0+255),w,b
 12685  013BBE  2583               	addwf	(___fldiv@b+3)& (0+255),w,b
 12686  013BC0  0100               	movlb	0	; () banked
 12687  013BC2  6F97               	movwf	___fldiv@bexp& (0+255),b
 12688                           
 12689                           ; BSR set to: 0
 12690  013BC4  0100               	movlb	0	; () banked
 12691  013BC6  AF82               	btfss	(___fldiv@b+2)& (0+255),7,b
 12692  013BC8  D002               	goto	l6324
 12693                           
 12694                           ; BSR set to: 0
 12695  013BCA  0100               	movlb	0	; () banked
 12696  013BCC  8197               	bsf	___fldiv@bexp& (0+255),0,b
 12697  013BCE                     l6324:
 12698                           
 12699                           ; BSR set to: 0
 12700  013BCE  0100               	movlb	0	; () banked
 12701  013BD0  5197               	movf	___fldiv@bexp& (0+255),w,b
 12702  013BD2  0100               	movlb	0	; () banked
 12703  013BD4  B4D8               	btfsc	status,2,c
 12704  013BD6  D012               	goto	l6334
 12705                           
 12706                           ; BSR set to: 0
 12707  013BD8  0100               	movlb	0	; () banked
 12708  013BDA  2997               	incf	___fldiv@bexp& (0+255),w,b
 12709  013BDC  A4D8               	btfss	status,2,c
 12710  013BDE  D009               	goto	l6330
 12711                           
 12712                           ; BSR set to: 0
 12713  013BE0  0E00               	movlw	0
 12714  013BE2  0100               	movlb	0	; () banked
 12715  013BE4  6F80               	movwf	___fldiv@b& (0+255),b
 12716  013BE6  0E00               	movlw	0
 12717  013BE8  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12718  013BEA  0E00               	movlw	0
 12719  013BEC  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12720  013BEE  0E00               	movlw	0
 12721  013BF0  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12722  013BF2                     l6330:
 12723                           
 12724                           ; BSR set to: 0
 12725  013BF2  0100               	movlb	0	; () banked
 12726  013BF4  8F82               	bsf	(___fldiv@b+2)& (0+255),7,b
 12727                           
 12728                           ; BSR set to: 0
 12729  013BF6  0E00               	movlw	0
 12730  013BF8  0100               	movlb	0	; () banked
 12731  013BFA  D008               	goto	L12
 12732  013BFC                     l6334:
 12733                           
 12734                           ; BSR set to: 0
 12735  013BFC  0E00               	movlw	0
 12736  013BFE  0100               	movlb	0	; () banked
 12737  013C00  6F80               	movwf	___fldiv@b& (0+255),b
 12738  013C02  0E00               	movlw	0
 12739  013C04  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12740  013C06  0E00               	movlw	0
 12741  013C08  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12742  013C0A  0E00               	movlw	0
 12743  013C0C                     L12:
 12744  013C0C  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12745                           
 12746                           ; BSR set to: 0
 12747                           
 12748                           ; BSR set to: 0
 12749  013C0E  0100               	movlb	0	; () banked
 12750  013C10  5187               	movf	(___fldiv@a+3)& (0+255),w,b
 12751  013C12  0B80               	andlw	128
 12752  013C14  0100               	movlb	0	; () banked
 12753  013C16  1B8C               	xorwf	___fldiv@sign& (0+255),f,b
 12754                           
 12755                           ; BSR set to: 0
 12756  013C18  0100               	movlb	0	; () banked
 12757  013C1A  5187               	movf	(___fldiv@a+3)& (0+255),w,b
 12758  013C1C  2587               	addwf	(___fldiv@a+3)& (0+255),w,b
 12759  013C1E  0100               	movlb	0	; () banked
 12760  013C20  6F98               	movwf	___fldiv@aexp& (0+255),b
 12761                           
 12762                           ; BSR set to: 0
 12763  013C22  0100               	movlb	0	; () banked
 12764  013C24  AF86               	btfss	(___fldiv@a+2)& (0+255),7,b
 12765  013C26  D002               	goto	l6344
 12766                           
 12767                           ; BSR set to: 0
 12768  013C28  0100               	movlb	0	; () banked
 12769  013C2A  8198               	bsf	___fldiv@aexp& (0+255),0,b
 12770  013C2C                     l6344:
 12771                           
 12772                           ; BSR set to: 0
 12773  013C2C  0100               	movlb	0	; () banked
 12774  013C2E  5198               	movf	___fldiv@aexp& (0+255),w,b
 12775  013C30  0100               	movlb	0	; () banked
 12776  013C32  B4D8               	btfsc	status,2,c
 12777  013C34  D012               	goto	l6354
 12778                           
 12779                           ; BSR set to: 0
 12780  013C36  0100               	movlb	0	; () banked
 12781  013C38  2998               	incf	___fldiv@aexp& (0+255),w,b
 12782  013C3A  A4D8               	btfss	status,2,c
 12783  013C3C  D009               	goto	l6350
 12784                           
 12785                           ; BSR set to: 0
 12786  013C3E  0E00               	movlw	0
 12787  013C40  0100               	movlb	0	; () banked
 12788  013C42  6F84               	movwf	___fldiv@a& (0+255),b
 12789  013C44  0E00               	movlw	0
 12790  013C46  6F85               	movwf	(___fldiv@a+1)& (0+255),b
 12791  013C48  0E00               	movlw	0
 12792  013C4A  6F86               	movwf	(___fldiv@a+2)& (0+255),b
 12793  013C4C  0E00               	movlw	0
 12794  013C4E  6F87               	movwf	(___fldiv@a+3)& (0+255),b
 12795  013C50                     l6350:
 12796                           
 12797                           ; BSR set to: 0
 12798  013C50  0100               	movlb	0	; () banked
 12799  013C52  8F86               	bsf	(___fldiv@a+2)& (0+255),7,b
 12800                           
 12801                           ; BSR set to: 0
 12802  013C54  0E00               	movlw	0
 12803  013C56  0100               	movlb	0	; () banked
 12804  013C58  D008               	goto	L13
 12805  013C5A                     l6354:
 12806                           
 12807                           ; BSR set to: 0
 12808  013C5A  0E00               	movlw	0
 12809  013C5C  0100               	movlb	0	; () banked
 12810  013C5E  6F84               	movwf	___fldiv@a& (0+255),b
 12811  013C60  0E00               	movlw	0
 12812  013C62  6F85               	movwf	(___fldiv@a+1)& (0+255),b
 12813  013C64  0E00               	movlw	0
 12814  013C66  6F86               	movwf	(___fldiv@a+2)& (0+255),b
 12815  013C68  0E00               	movlw	0
 12816  013C6A                     L13:
 12817  013C6A  6F87               	movwf	(___fldiv@a+3)& (0+255),b
 12818                           
 12819                           ; BSR set to: 0
 12820                           
 12821                           ; BSR set to: 0
 12822  013C6C  0100               	movlb	0	; () banked
 12823  013C6E  5184               	movf	___fldiv@a& (0+255),w,b
 12824  013C70  0100               	movlb	0	; () banked
 12825  013C72  1185               	iorwf	(___fldiv@a+1)& (0+255),w,b
 12826  013C74  0100               	movlb	0	; () banked
 12827  013C76  1186               	iorwf	(___fldiv@a+2)& (0+255),w,b
 12828  013C78  0100               	movlb	0	; () banked
 12829  013C7A  1187               	iorwf	(___fldiv@a+3)& (0+255),w,b
 12830  013C7C  A4D8               	btfss	status,2,c
 12831  013C7E  D017               	goto	l6366
 12832                           
 12833                           ; BSR set to: 0
 12834  013C80  0E00               	movlw	0
 12835  013C82  0100               	movlb	0	; () banked
 12836  013C84  6F80               	movwf	___fldiv@b& (0+255),b
 12837  013C86  0E00               	movlw	0
 12838  013C88  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12839  013C8A  0E00               	movlw	0
 12840  013C8C  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12841  013C8E  0E00               	movlw	0
 12842  013C90  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12843                           
 12844                           ; BSR set to: 0
 12845  013C92  0100               	movlb	0	; () banked
 12846  013C94  0E80               	movlw	128
 12847  013C96  1382               	iorwf	(___fldiv@b+2)& (0+255),f,b
 12848  013C98  0E7F               	movlw	127
 12849  013C9A  1383               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12850                           
 12851                           ; BSR set to: 0
 12852  013C9C  C080  F080         	movff	___fldiv@b,?___fldiv
 12853  013CA0  C081  F081         	movff	___fldiv@b+1,?___fldiv+1
 12854  013CA4  C082  F082         	movff	___fldiv@b+2,?___fldiv+2
 12855  013CA8  C083  F083         	movff	___fldiv@b+3,?___fldiv+3
 12856                           
 12857                           ; BSR set to: 0
 12858  013CAC  0012               	return	
 12859  013CAE                     l6366:
 12860                           
 12861                           ; BSR set to: 0
 12862  013CAE  0100               	movlb	0	; () banked
 12863  013CB0  5197               	movf	___fldiv@bexp& (0+255),w,b
 12864  013CB2  0100               	movlb	0	; () banked
 12865  013CB4  A4D8               	btfss	status,2,c
 12866  013CB6  D012               	goto	l6374
 12867                           
 12868                           ; BSR set to: 0
 12869  013CB8  0E00               	movlw	0
 12870  013CBA  0100               	movlb	0	; () banked
 12871  013CBC  6F80               	movwf	___fldiv@b& (0+255),b
 12872  013CBE  0E00               	movlw	0
 12873  013CC0  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12874  013CC2  0E00               	movlw	0
 12875  013CC4  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12876  013CC6  0E00               	movlw	0
 12877  013CC8  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12878                           
 12879                           ; BSR set to: 0
 12880  013CCA  C080  F080         	movff	___fldiv@b,?___fldiv
 12881  013CCE  C081  F081         	movff	___fldiv@b+1,?___fldiv+1
 12882  013CD2  C082  F082         	movff	___fldiv@b+2,?___fldiv+2
 12883  013CD6  C083  F083         	movff	___fldiv@b+3,?___fldiv+3
 12884                           
 12885                           ; BSR set to: 0
 12886  013CDA  0012               	return	
 12887  013CDC                     l6374:
 12888                           
 12889                           ; BSR set to: 0
 12890  013CDC  0100               	movlb	0	; () banked
 12891  013CDE  5198               	movf	___fldiv@aexp& (0+255),w,b
 12892  013CE0  0100               	movlb	0	; () banked
 12893  013CE2  6F88               	movwf	??___fldiv& (0+255),b
 12894  013CE4  6B89               	clrf	(??___fldiv+1)& (0+255),b
 12895  013CE6  0100               	movlb	0	; () banked
 12896  013CE8  1F88               	comf	??___fldiv& (0+255),f,b
 12897  013CEA  1F89               	comf	(??___fldiv+1)& (0+255),f,b
 12898  013CEC  4B88               	infsnz	??___fldiv& (0+255),f,b
 12899  013CEE  2B89               	incf	(??___fldiv+1)& (0+255),f,b
 12900  013CF0  0100               	movlb	0	; () banked
 12901  013CF2  5197               	movf	___fldiv@bexp& (0+255),w,b
 12902  013CF4  0100               	movlb	0	; () banked
 12903  013CF6  6F8A               	movwf	(??___fldiv+2)& (0+255),b
 12904  013CF8  6B8B               	clrf	(??___fldiv+3)& (0+255),b
 12905  013CFA  0100               	movlb	0	; () banked
 12906  013CFC  5188               	movf	??___fldiv& (0+255),w,b
 12907  013CFE  0100               	movlb	0	; () banked
 12908  013D00  278A               	addwf	(??___fldiv+2)& (0+255),f,b
 12909  013D02  0100               	movlb	0	; () banked
 12910  013D04  5189               	movf	(??___fldiv+1)& (0+255),w,b
 12911  013D06  0100               	movlb	0	; () banked
 12912  013D08  238B               	addwfc	(??___fldiv+3)& (0+255),f,b
 12913  013D0A  0E7F               	movlw	127
 12914  013D0C  0100               	movlb	0	; () banked
 12915  013D0E  258A               	addwf	(??___fldiv+2)& (0+255),w,b
 12916  013D10  0100               	movlb	0	; () banked
 12917  013D12  6F91               	movwf	___fldiv@new_exp& (0+255),b
 12918  013D14  0E00               	movlw	0
 12919  013D16  0100               	movlb	0	; () banked
 12920  013D18  218B               	addwfc	(??___fldiv+3)& (0+255),w,b
 12921  013D1A  0100               	movlb	0	; () banked
 12922  013D1C  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12923                           
 12924                           ; BSR set to: 0
 12925  013D1E  C080  F08D         	movff	___fldiv@b,___fldiv@rem
 12926  013D22  C081  F08E         	movff	___fldiv@b+1,___fldiv@rem+1
 12927  013D26  C082  F08F         	movff	___fldiv@b+2,___fldiv@rem+2
 12928  013D2A  C083  F090         	movff	___fldiv@b+3,___fldiv@rem+3
 12929                           
 12930                           ; BSR set to: 0
 12931  013D2E  0E00               	movlw	0
 12932  013D30  0100               	movlb	0	; () banked
 12933  013D32  6F80               	movwf	___fldiv@b& (0+255),b
 12934  013D34  0E00               	movlw	0
 12935  013D36  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 12936  013D38  0E00               	movlw	0
 12937  013D3A  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 12938  013D3C  0E00               	movlw	0
 12939  013D3E  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 12940                           
 12941                           ; BSR set to: 0
 12942  013D40  0E00               	movlw	0
 12943  013D42  0100               	movlb	0	; () banked
 12944  013D44  6F93               	movwf	___fldiv@grs& (0+255),b
 12945  013D46  0E00               	movlw	0
 12946  013D48  6F94               	movwf	(___fldiv@grs+1)& (0+255),b
 12947  013D4A  0E00               	movlw	0
 12948  013D4C  6F95               	movwf	(___fldiv@grs+2)& (0+255),b
 12949  013D4E  0E00               	movlw	0
 12950  013D50  6F96               	movwf	(___fldiv@grs+3)& (0+255),b
 12951                           
 12952                           ; BSR set to: 0
 12953  013D52  0E00               	movlw	0
 12954  013D54  0100               	movlb	0	; () banked
 12955  013D56  6F98               	movwf	___fldiv@aexp& (0+255),b
 12956  013D58  D042               	goto	l1522
 12957  013D5A                     l6384:
 12958                           
 12959                           ; BSR set to: 0
 12960  013D5A  0100               	movlb	0	; () banked
 12961  013D5C  5198               	movf	___fldiv@aexp& (0+255),w,b
 12962  013D5E  0100               	movlb	0	; () banked
 12963  013D60  B4D8               	btfsc	status,2,c
 12964  013D62  D017               	goto	l6392
 12965                           
 12966                           ; BSR set to: 0
 12967  013D64  0100               	movlb	0	; () banked
 12968  013D66  90D8               	bcf	status,0,c
 12969  013D68  378D               	rlcf	___fldiv@rem& (0+255),f,b
 12970  013D6A  378E               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 12971  013D6C  378F               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 12972  013D6E  3790               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 12973  013D70  0100               	movlb	0	; () banked
 12974  013D72  90D8               	bcf	status,0,c
 12975  013D74  3780               	rlcf	___fldiv@b& (0+255),f,b
 12976  013D76  3781               	rlcf	(___fldiv@b+1)& (0+255),f,b
 12977  013D78  3782               	rlcf	(___fldiv@b+2)& (0+255),f,b
 12978  013D7A  3783               	rlcf	(___fldiv@b+3)& (0+255),f,b
 12979                           
 12980                           ; BSR set to: 0
 12981  013D7C  0100               	movlb	0	; () banked
 12982  013D7E  AF96               	btfss	(___fldiv@grs+3)& (0+255),7,b
 12983  013D80  D002               	goto	l1525
 12984                           
 12985                           ; BSR set to: 0
 12986  013D82  0100               	movlb	0	; () banked
 12987  013D84  8180               	bsf	___fldiv@b& (0+255),0,b
 12988  013D86                     l1525:
 12989                           
 12990                           ; BSR set to: 0
 12991  013D86  0100               	movlb	0	; () banked
 12992  013D88  90D8               	bcf	status,0,c
 12993  013D8A  3793               	rlcf	___fldiv@grs& (0+255),f,b
 12994  013D8C  3794               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 12995  013D8E  3795               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 12996  013D90  3796               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 12997  013D92                     l6392:
 12998                           
 12999                           ; BSR set to: 0
 13000  013D92  0100               	movlb	0	; () banked
 13001  013D94  5184               	movf	___fldiv@a& (0+255),w,b
 13002  013D96  0100               	movlb	0	; () banked
 13003  013D98  5D8D               	subwf	___fldiv@rem& (0+255),w,b
 13004  013D9A  0100               	movlb	0	; () banked
 13005  013D9C  5185               	movf	(___fldiv@a+1)& (0+255),w,b
 13006  013D9E  0100               	movlb	0	; () banked
 13007  013DA0  598E               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13008  013DA2  0100               	movlb	0	; () banked
 13009  013DA4  5186               	movf	(___fldiv@a+2)& (0+255),w,b
 13010  013DA6  0100               	movlb	0	; () banked
 13011  013DA8  598F               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13012  013DAA  0100               	movlb	0	; () banked
 13013  013DAC  5187               	movf	(___fldiv@a+3)& (0+255),w,b
 13014  013DAE  0100               	movlb	0	; () banked
 13015  013DB0  5990               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13016  013DB2  A0D8               	btfss	status,0,c
 13017  013DB4  D012               	goto	l6398
 13018                           
 13019                           ; BSR set to: 0
 13020  013DB6  0100               	movlb	0	; () banked
 13021  013DB8  8D96               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13022                           
 13023                           ; BSR set to: 0
 13024  013DBA  0100               	movlb	0	; () banked
 13025  013DBC  5184               	movf	___fldiv@a& (0+255),w,b
 13026  013DBE  0100               	movlb	0	; () banked
 13027  013DC0  5F8D               	subwf	___fldiv@rem& (0+255),f,b
 13028  013DC2  0100               	movlb	0	; () banked
 13029  013DC4  5185               	movf	(___fldiv@a+1)& (0+255),w,b
 13030  013DC6  0100               	movlb	0	; () banked
 13031  013DC8  5B8E               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13032  013DCA  0100               	movlb	0	; () banked
 13033  013DCC  5186               	movf	(___fldiv@a+2)& (0+255),w,b
 13034  013DCE  0100               	movlb	0	; () banked
 13035  013DD0  5B8F               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13036  013DD2  0100               	movlb	0	; () banked
 13037  013DD4  5187               	movf	(___fldiv@a+3)& (0+255),w,b
 13038  013DD6  0100               	movlb	0	; () banked
 13039  013DD8  5B90               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13040  013DDA                     l6398:
 13041                           
 13042                           ; BSR set to: 0
 13043  013DDA  0100               	movlb	0	; () banked
 13044  013DDC  2B98               	incf	___fldiv@aexp& (0+255),f,b
 13045  013DDE                     l1522:
 13046                           
 13047                           ; BSR set to: 0
 13048  013DDE  0E19               	movlw	25
 13049  013DE0  0100               	movlb	0	; () banked
 13050  013DE2  6598               	cpfsgt	___fldiv@aexp& (0+255),b
 13051  013DE4  D7BA               	goto	l6384
 13052                           
 13053                           ; BSR set to: 0
 13054                           
 13055                           ; BSR set to: 0
 13056  013DE6  0100               	movlb	0	; () banked
 13057  013DE8  518D               	movf	___fldiv@rem& (0+255),w,b
 13058  013DEA  0100               	movlb	0	; () banked
 13059  013DEC  118E               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13060  013DEE  0100               	movlb	0	; () banked
 13061  013DF0  118F               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13062  013DF2  0100               	movlb	0	; () banked
 13063  013DF4  1190               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13064  013DF6  B4D8               	btfsc	status,2,c
 13065  013DF8  D018               	goto	l6410
 13066                           
 13067                           ; BSR set to: 0
 13068  013DFA  0100               	movlb	0	; () banked
 13069  013DFC  8193               	bsf	___fldiv@grs& (0+255),0,b
 13070                           
 13071                           ; BSR set to: 0
 13072  013DFE  D015               	goto	l6410
 13073  013E00                     l6404:
 13074                           
 13075                           ; BSR set to: 0
 13076  013E00  0100               	movlb	0	; () banked
 13077  013E02  90D8               	bcf	status,0,c
 13078  013E04  3780               	rlcf	___fldiv@b& (0+255),f,b
 13079  013E06  3781               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13080  013E08  3782               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13081  013E0A  3783               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13082                           
 13083                           ; BSR set to: 0
 13084  013E0C  0100               	movlb	0	; () banked
 13085  013E0E  AF96               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13086  013E10  D002               	goto	l1531
 13087                           
 13088                           ; BSR set to: 0
 13089  013E12  0100               	movlb	0	; () banked
 13090  013E14  8180               	bsf	___fldiv@b& (0+255),0,b
 13091  013E16                     l1531:
 13092                           
 13093                           ; BSR set to: 0
 13094  013E16  0100               	movlb	0	; () banked
 13095  013E18  90D8               	bcf	status,0,c
 13096  013E1A  3793               	rlcf	___fldiv@grs& (0+255),f,b
 13097  013E1C  3794               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13098  013E1E  3795               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13099  013E20  3796               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13100  013E22  0100               	movlb	0	; () banked
 13101  013E24  0791               	decf	___fldiv@new_exp& (0+255),f,b
 13102  013E26  A0D8               	btfss	status,0,c
 13103  013E28  0792               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13104  013E2A                     l6410:
 13105                           
 13106                           ; BSR set to: 0
 13107  013E2A  0100               	movlb	0	; () banked
 13108  013E2C  AF82               	btfss	(___fldiv@b+2)& (0+255),7,b
 13109  013E2E  D7E8               	goto	l6404
 13110                           
 13111                           ; BSR set to: 0
 13112                           
 13113                           ; BSR set to: 0
 13114  013E30  0E00               	movlw	0
 13115  013E32  0100               	movlb	0	; () banked
 13116  013E34  6F98               	movwf	___fldiv@aexp& (0+255),b
 13117                           
 13118                           ; BSR set to: 0
 13119  013E36  0100               	movlb	0	; () banked
 13120  013E38  AF96               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13121  013E3A  D024               	goto	l1533
 13122                           
 13123                           ; BSR set to: 0
 13124  013E3C  0EFF               	movlw	255
 13125  013E3E  0100               	movlb	0	; () banked
 13126  013E40  1593               	andwf	___fldiv@grs& (0+255),w,b
 13127  013E42  0100               	movlb	0	; () banked
 13128  013E44  6F88               	movwf	??___fldiv& (0+255),b
 13129  013E46  0EFF               	movlw	255
 13130  013E48  0100               	movlb	0	; () banked
 13131  013E4A  1594               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13132  013E4C  0100               	movlb	0	; () banked
 13133  013E4E  6F89               	movwf	(??___fldiv+1)& (0+255),b
 13134  013E50  0EFF               	movlw	255
 13135  013E52  0100               	movlb	0	; () banked
 13136  013E54  1595               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13137  013E56  0100               	movlb	0	; () banked
 13138  013E58  6F8A               	movwf	(??___fldiv+2)& (0+255),b
 13139  013E5A  0E7F               	movlw	127
 13140  013E5C  0100               	movlb	0	; () banked
 13141  013E5E  1596               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13142  013E60  0100               	movlb	0	; () banked
 13143  013E62  6F8B               	movwf	(??___fldiv+3)& (0+255),b
 13144  013E64  0100               	movlb	0	; () banked
 13145  013E66  5188               	movf	??___fldiv& (0+255),w,b
 13146  013E68  0100               	movlb	0	; () banked
 13147  013E6A  1189               	iorwf	(??___fldiv+1)& (0+255),w,b
 13148  013E6C  0100               	movlb	0	; () banked
 13149  013E6E  118A               	iorwf	(??___fldiv+2)& (0+255),w,b
 13150  013E70  0100               	movlb	0	; () banked
 13151  013E72  118B               	iorwf	(??___fldiv+3)& (0+255),w,b
 13152  013E74  A4D8               	btfss	status,2,c
 13153  013E76  D003               	goto	l6420
 13154                           
 13155                           ; BSR set to: 0
 13156                           
 13157                           ; BSR set to: 0
 13158  013E78  0100               	movlb	0	; () banked
 13159  013E7A  A180               	btfss	___fldiv@b& (0+255),0,b
 13160  013E7C  D003               	goto	l1533
 13161  013E7E                     l6420:
 13162                           
 13163                           ; BSR set to: 0
 13164  013E7E  0E01               	movlw	1
 13165  013E80  0100               	movlb	0	; () banked
 13166  013E82  6F98               	movwf	___fldiv@aexp& (0+255),b
 13167  013E84                     l1533:
 13168                           
 13169                           ; BSR set to: 0
 13170  013E84  0100               	movlb	0	; () banked
 13171  013E86  5198               	movf	___fldiv@aexp& (0+255),w,b
 13172  013E88  0100               	movlb	0	; () banked
 13173  013E8A  B4D8               	btfsc	status,2,c
 13174  013E8C  D023               	goto	l6430
 13175                           
 13176                           ; BSR set to: 0
 13177  013E8E  0E01               	movlw	1
 13178  013E90  0100               	movlb	0	; () banked
 13179  013E92  2780               	addwf	___fldiv@b& (0+255),f,b
 13180  013E94  0E00               	movlw	0
 13181  013E96  2381               	addwfc	(___fldiv@b+1)& (0+255),f,b
 13182  013E98  2382               	addwfc	(___fldiv@b+2)& (0+255),f,b
 13183  013E9A  2383               	addwfc	(___fldiv@b+3)& (0+255),f,b
 13184                           
 13185                           ; BSR set to: 0
 13186  013E9C  0100               	movlb	0	; () banked
 13187  013E9E  A183               	btfss	(___fldiv@b+3)& (0+255),0,b
 13188  013EA0  D019               	goto	l6430
 13189                           
 13190                           ; BSR set to: 0
 13191  013EA2  C080  F088         	movff	___fldiv@b,??___fldiv
 13192  013EA6  C081  F089         	movff	___fldiv@b+1,??___fldiv+1
 13193  013EAA  C082  F08A         	movff	___fldiv@b+2,??___fldiv+2
 13194  013EAE  C083  F08B         	movff	___fldiv@b+3,??___fldiv+3
 13195  013EB2  0100               	movlb	0	; () banked
 13196  013EB4  358B               	rlcf	(??___fldiv+3)& (0+255),w,b
 13197  013EB6  338B               	rrcf	(??___fldiv+3)& (0+255),f,b
 13198  013EB8  338A               	rrcf	(??___fldiv+2)& (0+255),f,b
 13199  013EBA  3389               	rrcf	(??___fldiv+1)& (0+255),f,b
 13200  013EBC  3388               	rrcf	??___fldiv& (0+255),f,b
 13201  013EBE  C088  F080         	movff	??___fldiv,___fldiv@b
 13202  013EC2  C089  F081         	movff	??___fldiv+1,___fldiv@b+1
 13203  013EC6  C08A  F082         	movff	??___fldiv+2,___fldiv@b+2
 13204  013ECA  C08B  F083         	movff	??___fldiv+3,___fldiv@b+3
 13205                           
 13206                           ; BSR set to: 0
 13207  013ECE  0100               	movlb	0	; () banked
 13208  013ED0  4B91               	infsnz	___fldiv@new_exp& (0+255),f,b
 13209  013ED2  2B92               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13210  013ED4                     l6430:
 13211                           
 13212                           ; BSR set to: 0
 13213  013ED4  0100               	movlb	0	; () banked
 13214  013ED6  BF92               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13215  013ED8  D014               	goto	l6434
 13216  013EDA  0100               	movlb	0	; () banked
 13217  013EDC  5192               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13218  013EDE  E104               	bnz	u8060
 13219  013EE0  0100               	movlb	0	; () banked
 13220  013EE2  2991               	incf	___fldiv@new_exp& (0+255),w,b
 13221  013EE4  A0D8               	btfss	status,0,c
 13222  013EE6  D00D               	goto	l6434
 13223  013EE8                     u8060:
 13224                           
 13225                           ; BSR set to: 0
 13226  013EE8  0E00               	movlw	0
 13227  013EEA  0100               	movlb	0	; () banked
 13228  013EEC  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13229  013EEE  6991               	setf	___fldiv@new_exp& (0+255),b
 13230  013EF0  0E00               	movlw	0
 13231  013EF2  0100               	movlb	0	; () banked
 13232  013EF4  6F80               	movwf	___fldiv@b& (0+255),b
 13233  013EF6  0E00               	movlw	0
 13234  013EF8  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 13235  013EFA  0E00               	movlw	0
 13236  013EFC  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 13237  013EFE  0E00               	movlw	0
 13238  013F00  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 13239  013F02                     l6434:
 13240                           
 13241                           ; BSR set to: 0
 13242  013F02  0100               	movlb	0	; () banked
 13243  013F04  BF92               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13244  013F06  D007               	goto	l6436
 13245  013F08  0100               	movlb	0	; () banked
 13246  013F0A  5192               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13247  013F0C  E115               	bnz	l6438
 13248  013F0E  0100               	movlb	0	; () banked
 13249  013F10  0591               	decf	___fldiv@new_exp& (0+255),w,b
 13250  013F12  B0D8               	btfsc	status,0,c
 13251  013F14  D011               	goto	l6438
 13252  013F16                     l6436:
 13253                           
 13254                           ; BSR set to: 0
 13255  013F16  0E00               	movlw	0
 13256  013F18  0100               	movlb	0	; () banked
 13257  013F1A  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13258  013F1C  0E00               	movlw	0
 13259  013F1E  6F91               	movwf	___fldiv@new_exp& (0+255),b
 13260  013F20  0E00               	movlw	0
 13261  013F22  0100               	movlb	0	; () banked
 13262  013F24  6F80               	movwf	___fldiv@b& (0+255),b
 13263  013F26  0E00               	movlw	0
 13264  013F28  6F81               	movwf	(___fldiv@b+1)& (0+255),b
 13265  013F2A  0E00               	movlw	0
 13266  013F2C  6F82               	movwf	(___fldiv@b+2)& (0+255),b
 13267  013F2E  0E00               	movlw	0
 13268  013F30  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 13269  013F32  0E00               	movlw	0
 13270  013F34  0100               	movlb	0	; () banked
 13271  013F36  6F8C               	movwf	___fldiv@sign& (0+255),b
 13272  013F38                     l6438:
 13273                           
 13274                           ; BSR set to: 0
 13275  013F38  C091  F097         	movff	___fldiv@new_exp,___fldiv@bexp
 13276                           
 13277                           ; BSR set to: 0
 13278  013F3C  0100               	movlb	0	; () banked
 13279  013F3E  A197               	btfss	___fldiv@bexp& (0+255),0,b
 13280  013F40  D003               	goto	l6444
 13281                           
 13282                           ; BSR set to: 0
 13283  013F42  0100               	movlb	0	; () banked
 13284  013F44  8F82               	bsf	(___fldiv@b+2)& (0+255),7,b
 13285  013F46  D002               	goto	l6446
 13286  013F48                     l6444:
 13287                           
 13288                           ; BSR set to: 0
 13289  013F48  0100               	movlb	0	; () banked
 13290  013F4A  9F82               	bcf	(___fldiv@b+2)& (0+255),7,b
 13291  013F4C                     l6446:
 13292                           
 13293                           ; BSR set to: 0
 13294  013F4C  0100               	movlb	0	; () banked
 13295  013F4E  90D8               	bcf	status,0,c
 13296  013F50  3197               	rrcf	___fldiv@bexp& (0+255),w,b
 13297  013F52  0100               	movlb	0	; () banked
 13298  013F54  6F83               	movwf	(___fldiv@b+3)& (0+255),b
 13299                           
 13300                           ; BSR set to: 0
 13301  013F56  0100               	movlb	0	; () banked
 13302  013F58  518C               	movf	___fldiv@sign& (0+255),w,b
 13303  013F5A  0100               	movlb	0	; () banked
 13304  013F5C  1383               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13305                           
 13306                           ; BSR set to: 0
 13307  013F5E  C080  F080         	movff	___fldiv@b,?___fldiv
 13308  013F62  C081  F081         	movff	___fldiv@b+1,?___fldiv+1
 13309  013F66  C082  F082         	movff	___fldiv@b+2,?___fldiv+2
 13310  013F6A  C083  F083         	movff	___fldiv@b+3,?___fldiv+3
 13311  013F6E  0012               	return	
 13312  013F70                     __end_of___fldiv:
 13313                           	opt stack 0
 13314                           tblptru	equ	0xFF8
 13315                           tblptrh	equ	0xFF7
 13316                           tblptrl	equ	0xFF6
 13317                           tablat	equ	0xFF5
 13318                           prodh	equ	0xFF4
 13319                           prodl	equ	0xFF3
 13320                           intcon	equ	0xFF2
 13321                           postinc0	equ	0xFEE
 13322                           wreg	equ	0xFE8
 13323                           indf2	equ	0xFDF
 13324                           postinc2	equ	0xFDE
 13325                           fsr2h	equ	0xFDA
 13326                           fsr2l	equ	0xFD9
 13327                           status	equ	0xFD8
 13328                           
 13329 ;; *************** function _LCD_write_string *****************
 13330 ;; Defined at:
 13331 ;;		line 194 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13332 ;; Parameters:    Size  Location     Type
 13333 ;;  buffer          2   35[BANK0 ] PTR unsigned char 
 13334 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 13335 ;; Auto vars:     Size  Location     Type
 13336 ;;		None
 13337 ;; Return value:  Size  Location     Type
 13338 ;;		None               void
 13339 ;; Registers used:
 13340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13341 ;; Tracked objects:
 13342 ;;		On entry : 0/0
 13343 ;;		On exit  : 0/0
 13344 ;;		Unchanged: 0/0
 13345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13346 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13349 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13350 ;;Total ram usage:        2 bytes
 13351 ;; Hardware stack levels used:    1
 13352 ;; Hardware stack levels required when called:    8
 13353 ;; This function calls:
 13354 ;;		_LCD_write_char
 13355 ;; This function is called by:
 13356 ;;		_LCD_Handler
 13357 ;;		_LCD_write_integer
 13358 ;; This function uses a non-reentrant model
 13359 ;;
 13360                           
 13361                           	psect	text26
 13362  015CFE                     __ptext26:
 13363                           	opt stack 0
 13364  015CFE                     _LCD_write_string:
 13365                           	opt stack 21
 13366                           
 13367                           ;src\LCD_44780.c: 197: while(*buffer){
 13368                           
 13369                           ; BSR set to: 0
 13370                           ;incstack = 0
 13371  015CFE  D00A               	goto	l8186
 13372  015D00                     l8182:
 13373                           
 13374                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 13375  015D00  C083  FFD9         	movff	LCD_write_string@buffer,fsr2l
 13376  015D04  C084  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 13377  015D08  50DF               	movf	indf2,w,c
 13378  015D0A  ECCC  F0AC         	call	_LCD_write_char
 13379                           
 13380                           ;src\LCD_44780.c: 202: buffer++;
 13381  015D0E  0100               	movlb	0	; () banked
 13382  015D10  4B83               	infsnz	LCD_write_string@buffer& (0+255),f,b
 13383  015D12  2B84               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 13384  015D14                     l8186:
 13385  015D14  C083  FFD9         	movff	LCD_write_string@buffer,fsr2l
 13386  015D18  C084  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 13387  015D1C  50DF               	movf	indf2,w,c
 13388  015D1E  B4D8               	btfsc	status,2,c
 13389  015D20  0012               	return	
 13390  015D22  D7EE               	goto	l8182
 13391  015D24                     __end_of_LCD_write_string:
 13392                           	opt stack 0
 13393                           tblptru	equ	0xFF8
 13394                           tblptrh	equ	0xFF7
 13395                           tblptrl	equ	0xFF6
 13396                           tablat	equ	0xFF5
 13397                           prodh	equ	0xFF4
 13398                           prodl	equ	0xFF3
 13399                           intcon	equ	0xFF2
 13400                           postinc0	equ	0xFEE
 13401                           wreg	equ	0xFE8
 13402                           indf2	equ	0xFDF
 13403                           postinc2	equ	0xFDE
 13404                           fsr2h	equ	0xFDA
 13405                           fsr2l	equ	0xFD9
 13406                           status	equ	0xFD8
 13407                           
 13408 ;; *************** function _LCD_write_message *****************
 13409 ;; Defined at:
 13410 ;;		line 178 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13411 ;; Parameters:    Size  Location     Type
 13412 ;;  buffer          2   35[BANK0 ] PTR const unsigned char 
 13413 ;;		 -> STR_15(8), STR_14(7), STR_13(4), STR_12(2), 
 13414 ;;		 -> STR_11(5), STR_10(4), STR_9(14), STR_8(17), 
 13415 ;;		 -> STR_7(12), STR_6(21), STR_4(21), STR_3(21), 
 13416 ;;		 -> STR_2(21), STR_1(21), 
 13417 ;; Auto vars:     Size  Location     Type
 13418 ;;		None
 13419 ;; Return value:  Size  Location     Type
 13420 ;;		None               void
 13421 ;; Registers used:
 13422 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13423 ;; Tracked objects:
 13424 ;;		On entry : 0/0
 13425 ;;		On exit  : 0/0
 13426 ;;		Unchanged: 0/0
 13427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13428 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13431 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13432 ;;Total ram usage:        2 bytes
 13433 ;; Hardware stack levels used:    1
 13434 ;; Hardware stack levels required when called:    8
 13435 ;; This function calls:
 13436 ;;		_LCD_write_char
 13437 ;; This function is called by:
 13438 ;;		_main
 13439 ;;		_LCD_Handler
 13440 ;; This function uses a non-reentrant model
 13441 ;;
 13442                           
 13443                           	psect	text27
 13444  015C3C                     __ptext27:
 13445                           	opt stack 0
 13446  015C3C                     _LCD_write_message:
 13447                           	opt stack 22
 13448                           
 13449                           ;src\LCD_44780.c: 181: while(*buffer) {
 13450                           
 13451                           ;incstack = 0
 13452  015C3C  D00D               	goto	l8178
 13453  015C3E                     l8174:
 13454                           
 13455                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 13456  015C3E  C083  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13457  015C42  C084  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13458  015C46                     	if	0	;tblptru may be non-zero
 13459  015C46                     	endif
 13460  015C46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13461  015C46  0E00               	movlw	low (__mediumconst shr (0+16))
 13462  015C48  6EF8               	movwf	tblptru,c
 13463  015C4A                     	endif
 13464  015C4A  0008               	tblrd		*
 13465  015C4C  50F5               	movf	tablat,w,c
 13466  015C4E  ECCC  F0AC         	call	_LCD_write_char
 13467                           
 13468                           ;src\LCD_44780.c: 186: buffer++;
 13469  015C52  0100               	movlb	0	; () banked
 13470  015C54  4B83               	infsnz	LCD_write_message@buffer& (0+255),f,b
 13471  015C56  2B84               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 13472  015C58                     l8178:
 13473  015C58  C083  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13474  015C5C  C084  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13475  015C60                     	if	0	;tblptru may be non-zero
 13476  015C60                     	endif
 13477  015C60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13478  015C60  0E00               	movlw	low (__mediumconst shr (0+16))
 13479  015C62  6EF8               	movwf	tblptru,c
 13480  015C64                     	endif
 13481  015C64  0008               	tblrd		*
 13482  015C66  50F5               	movf	tablat,w,c
 13483  015C68  0900               	iorlw	0
 13484  015C6A  B4D8               	btfsc	status,2,c
 13485  015C6C  0012               	return	
 13486  015C6E  D7E7               	goto	l8174
 13487  015C70                     __end_of_LCD_write_message:
 13488                           	opt stack 0
 13489                           tblptru	equ	0xFF8
 13490                           tblptrh	equ	0xFF7
 13491                           tblptrl	equ	0xFF6
 13492                           tablat	equ	0xFF5
 13493                           prodh	equ	0xFF4
 13494                           prodl	equ	0xFF3
 13495                           intcon	equ	0xFF2
 13496                           postinc0	equ	0xFEE
 13497                           wreg	equ	0xFE8
 13498                           indf2	equ	0xFDF
 13499                           postinc2	equ	0xFDE
 13500                           fsr2h	equ	0xFDA
 13501                           fsr2l	equ	0xFD9
 13502                           status	equ	0xFD8
 13503                           
 13504 ;; *************** function _LCD_write_char *****************
 13505 ;; Defined at:
 13506 ;;		line 145 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13507 ;; Parameters:    Size  Location     Type
 13508 ;;  value           1    wreg     unsigned char 
 13509 ;; Auto vars:     Size  Location     Type
 13510 ;;  value           1   34[BANK0 ] unsigned char 
 13511 ;;  D0              1   33[BANK0 ] unsigned char 
 13512 ;;  D1              1   32[BANK0 ] unsigned char 
 13513 ;;  D2              1   31[BANK0 ] unsigned char 
 13514 ;;  D3              1   30[BANK0 ] unsigned char 
 13515 ;; Return value:  Size  Location     Type
 13516 ;;		None               void
 13517 ;; Registers used:
 13518 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13519 ;; Tracked objects:
 13520 ;;		On entry : 0/0
 13521 ;;		On exit  : 0/0
 13522 ;;		Unchanged: 0/0
 13523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13525 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13527 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13528 ;;Total ram usage:        5 bytes
 13529 ;; Hardware stack levels used:    1
 13530 ;; Hardware stack levels required when called:    7
 13531 ;; This function calls:
 13532 ;;		_LCD_send_command
 13533 ;; This function is called by:
 13534 ;;		_LCD_write_message
 13535 ;;		_LCD_write_string
 13536 ;; This function uses a non-reentrant model
 13537 ;;
 13538                           
 13539                           	psect	text28
 13540  015998                     __ptext28:
 13541                           	opt stack 0
 13542  015998                     _LCD_write_char:
 13543                           	opt stack 22
 13544                           
 13545                           ;incstack = 0
 13546                           ;LCD_write_char@value stored from wreg
 13547  015998  0100               	movlb	0	; () banked
 13548  01599A  6F82               	movwf	LCD_write_char@value& (0+255),b
 13549                           
 13550                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 13551                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 13552  01599C  848D               	bsf	3981,2,c	;volatile
 13553                           
 13554                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 13555  01599E  0100               	movlb	0	; () banked
 13556  0159A0  4582               	rlncf	LCD_write_char@value& (0+255),w,b
 13557  0159A2  0B01               	andlw	1
 13558  0159A4  0100               	movlb	0	; () banked
 13559  0159A6  6F7E               	movwf	LCD_write_char@D3& (0+255),b
 13560                           
 13561                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 13562  0159A8  0100               	movlb	0	; () banked
 13563  0159AA  4582               	rlncf	LCD_write_char@value& (0+255),w,b
 13564  0159AC  46E8               	rlncf	wreg,f,c
 13565  0159AE  0B03               	andlw	3
 13566  0159B0  0B01               	andlw	1
 13567  0159B2  0100               	movlb	0	; () banked
 13568  0159B4  6F7F               	movwf	LCD_write_char@D2& (0+255),b
 13569                           
 13570                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 13571  0159B6  0100               	movlb	0	; () banked
 13572  0159B8  3982               	swapf	LCD_write_char@value& (0+255),w,b
 13573  0159BA  42E8               	rrncf	wreg,f,c
 13574  0159BC  0B07               	andlw	7
 13575  0159BE  0B01               	andlw	1
 13576  0159C0  0100               	movlb	0	; () banked
 13577  0159C2  6F80               	movwf	LCD_write_char@D1& (0+255),b
 13578                           
 13579                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 13580  0159C4  0100               	movlb	0	; () banked
 13581  0159C6  3982               	swapf	LCD_write_char@value& (0+255),w,b
 13582  0159C8  0B0F               	andlw	15
 13583  0159CA  0B01               	andlw	1
 13584  0159CC  0100               	movlb	0	; () banked
 13585  0159CE  6F81               	movwf	LCD_write_char@D0& (0+255),b
 13586                           
 13587                           ; BSR set to: 0
 13588                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 13589  0159D0  C07F  F07A         	movff	LCD_write_char@D2,LCD_send_command@D2
 13590  0159D4  C080  F07B         	movff	LCD_write_char@D1,LCD_send_command@D1
 13591  0159D8  C081  F07C         	movff	LCD_write_char@D0,LCD_send_command@D0
 13592  0159DC  0100               	movlb	0	; () banked
 13593  0159DE  517E               	movf	LCD_write_char@D3& (0+255),w,b
 13594  0159E0  ECAD  F0AD         	call	_LCD_send_command
 13595                           
 13596                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 13597  0159E4  0100               	movlb	0	; () banked
 13598  0159E6  3982               	swapf	LCD_write_char@value& (0+255),w,b
 13599  0159E8  46E8               	rlncf	wreg,f,c
 13600  0159EA  0B1F               	andlw	31
 13601  0159EC  0B01               	andlw	1
 13602  0159EE  0100               	movlb	0	; () banked
 13603  0159F0  6F7E               	movwf	LCD_write_char@D3& (0+255),b
 13604                           
 13605                           ; BSR set to: 0
 13606                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 13607  0159F2  0100               	movlb	0	; () banked
 13608  0159F4  4182               	rrncf	LCD_write_char@value& (0+255),w,b
 13609  0159F6  42E8               	rrncf	wreg,f,c
 13610  0159F8  0B3F               	andlw	63
 13611  0159FA  0B01               	andlw	1
 13612  0159FC  0100               	movlb	0	; () banked
 13613  0159FE  6F7F               	movwf	LCD_write_char@D2& (0+255),b
 13614                           
 13615                           ; BSR set to: 0
 13616                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 13617  015A00  0100               	movlb	0	; () banked
 13618  015A02  90D8               	bcf	status,0,c
 13619  015A04  3182               	rrcf	LCD_write_char@value& (0+255),w,b
 13620  015A06  0B01               	andlw	1
 13621  015A08  0100               	movlb	0	; () banked
 13622  015A0A  6F80               	movwf	LCD_write_char@D1& (0+255),b
 13623                           
 13624                           ; BSR set to: 0
 13625                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 13626  015A0C  0100               	movlb	0	; () banked
 13627  015A0E  5182               	movf	LCD_write_char@value& (0+255),w,b
 13628  015A10  0B01               	andlw	1
 13629  015A12  0100               	movlb	0	; () banked
 13630  015A14  6F81               	movwf	LCD_write_char@D0& (0+255),b
 13631                           
 13632                           ; BSR set to: 0
 13633                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 13634  015A16  C07F  F07A         	movff	LCD_write_char@D2,LCD_send_command@D2
 13635  015A1A  C080  F07B         	movff	LCD_write_char@D1,LCD_send_command@D1
 13636  015A1E  C081  F07C         	movff	LCD_write_char@D0,LCD_send_command@D0
 13637  015A22  0100               	movlb	0	; () banked
 13638  015A24  517E               	movf	LCD_write_char@D3& (0+255),w,b
 13639  015A26  ECAD  F0AD         	call	_LCD_send_command
 13640                           
 13641                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 13642  015A2A  948D               	bcf	3981,2,c	;volatile
 13643  015A2C  0012               	return		;funcret
 13644  015A2E                     __end_of_LCD_write_char:
 13645                           	opt stack 0
 13646                           tblptru	equ	0xFF8
 13647                           tblptrh	equ	0xFF7
 13648                           tblptrl	equ	0xFF6
 13649                           tablat	equ	0xFF5
 13650                           prodh	equ	0xFF4
 13651                           prodl	equ	0xFF3
 13652                           intcon	equ	0xFF2
 13653                           postinc0	equ	0xFEE
 13654                           wreg	equ	0xFE8
 13655                           indf2	equ	0xFDF
 13656                           postinc2	equ	0xFDE
 13657                           fsr2h	equ	0xFDA
 13658                           fsr2l	equ	0xFD9
 13659                           status	equ	0xFD8
 13660                           
 13661 ;; *************** function _LCD_initialize *****************
 13662 ;; Defined at:
 13663 ;;		line 283 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13664 ;; Parameters:    Size  Location     Type
 13665 ;;  quartz_frequ    1    wreg     unsigned char 
 13666 ;; Auto vars:     Size  Location     Type
 13667 ;;  quartz_frequ    1   32[BANK0 ] unsigned char 
 13668 ;; Return value:  Size  Location     Type
 13669 ;;		None               void
 13670 ;; Registers used:
 13671 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13672 ;; Tracked objects:
 13673 ;;		On entry : 0/0
 13674 ;;		On exit  : 0/0
 13675 ;;		Unchanged: 0/0
 13676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13678 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13680 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13681 ;;Total ram usage:        1 bytes
 13682 ;; Hardware stack levels used:    1
 13683 ;; Hardware stack levels required when called:    8
 13684 ;; This function calls:
 13685 ;;		_LCD_clear
 13686 ;;		_LCD_cursor
 13687 ;;		_LCD_send_command
 13688 ;;		_delay_ms
 13689 ;;		_delay_set_quartz
 13690 ;; This function is called by:
 13691 ;;		_main
 13692 ;;		_LCD_Handler
 13693 ;;		_board_initialization
 13694 ;; This function uses a non-reentrant model
 13695 ;;
 13696                           
 13697                           	psect	text29
 13698  015028                     __ptext29:
 13699                           	opt stack 0
 13700  015028                     _LCD_initialize:
 13701                           	opt stack 21
 13702                           
 13703                           ;incstack = 0
 13704                           ;LCD_initialize@quartz_frequency stored from wreg
 13705  015028  0100               	movlb	0	; () banked
 13706  01502A  6F80               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 13707                           
 13708                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 13709  01502C  0100               	movlb	0	; () banked
 13710  01502E  5180               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 13711  015030  EC12  F0AF         	call	_delay_set_quartz
 13712                           
 13713                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 13714  015034  948D               	bcf	3981,2,c	;volatile
 13715                           
 13716                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 13717  015036  928B               	bcf	3979,1,c	;volatile
 13718                           
 13719                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 13720  015038  908B               	bcf	3979,0,c	;volatile
 13721                           
 13722                           ;src\LCD_44780.c: 291: delay_ms (100);
 13723  01503A  0E00               	movlw	0
 13724  01503C  0100               	movlb	0	; () banked
 13725  01503E  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13726  015040  0E64               	movlw	100
 13727  015042  6F78               	movwf	delay_ms@value_ms& (0+255),b
 13728  015044  ECCA  F0AD         	call	_delay_ms	;wreg free
 13729                           
 13730                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 13731  015048  0E00               	movlw	0
 13732  01504A  0100               	movlb	0	; () banked
 13733  01504C  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13734  01504E  0E01               	movlw	1
 13735  015050  0100               	movlb	0	; () banked
 13736  015052  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13737  015054  0E01               	movlw	1
 13738  015056  0100               	movlb	0	; () banked
 13739  015058  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13740  01505A  0E00               	movlw	0
 13741  01505C  ECAD  F0AD         	call	_LCD_send_command
 13742                           
 13743                           ;src\LCD_44780.c: 293: delay_ms (100);
 13744  015060  0E00               	movlw	0
 13745  015062  0100               	movlb	0	; () banked
 13746  015064  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13747  015066  0E64               	movlw	100
 13748  015068  6F78               	movwf	delay_ms@value_ms& (0+255),b
 13749  01506A  ECCA  F0AD         	call	_delay_ms	;wreg free
 13750                           
 13751                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 13752  01506E  0E00               	movlw	0
 13753  015070  0100               	movlb	0	; () banked
 13754  015072  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13755  015074  0E01               	movlw	1
 13756  015076  0100               	movlb	0	; () banked
 13757  015078  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13758  01507A  0E01               	movlw	1
 13759  01507C  0100               	movlb	0	; () banked
 13760  01507E  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13761  015080  0E00               	movlw	0
 13762  015082  ECAD  F0AD         	call	_LCD_send_command
 13763                           
 13764                           ;src\LCD_44780.c: 295: delay_ms (10);
 13765  015086  0E00               	movlw	0
 13766  015088  0100               	movlb	0	; () banked
 13767  01508A  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13768  01508C  0E0A               	movlw	10
 13769  01508E  6F78               	movwf	delay_ms@value_ms& (0+255),b
 13770  015090  ECCA  F0AD         	call	_delay_ms	;wreg free
 13771                           
 13772                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 13773  015094  0E00               	movlw	0
 13774  015096  0100               	movlb	0	; () banked
 13775  015098  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13776  01509A  0E01               	movlw	1
 13777  01509C  0100               	movlb	0	; () banked
 13778  01509E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13779  0150A0  0E01               	movlw	1
 13780  0150A2  0100               	movlb	0	; () banked
 13781  0150A4  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13782  0150A6  0E00               	movlw	0
 13783  0150A8  ECAD  F0AD         	call	_LCD_send_command
 13784                           
 13785                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 13786  0150AC  0E00               	movlw	0
 13787  0150AE  0100               	movlb	0	; () banked
 13788  0150B0  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13789  0150B2  0E01               	movlw	1
 13790  0150B4  0100               	movlb	0	; () banked
 13791  0150B6  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13792  0150B8  0E00               	movlw	0
 13793  0150BA  0100               	movlb	0	; () banked
 13794  0150BC  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13795  0150BE  0E00               	movlw	0
 13796  0150C0  ECAD  F0AD         	call	_LCD_send_command
 13797                           
 13798                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 13799  0150C4  0E00               	movlw	0
 13800  0150C6  0100               	movlb	0	; () banked
 13801  0150C8  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13802  0150CA  0E01               	movlw	1
 13803  0150CC  0100               	movlb	0	; () banked
 13804  0150CE  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13805  0150D0  0E00               	movlw	0
 13806  0150D2  0100               	movlb	0	; () banked
 13807  0150D4  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13808  0150D6  0E00               	movlw	0
 13809  0150D8  ECAD  F0AD         	call	_LCD_send_command
 13810                           
 13811                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 13812  0150DC  0E00               	movlw	0
 13813  0150DE  0100               	movlb	0	; () banked
 13814  0150E0  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13815  0150E2  0E00               	movlw	0
 13816  0150E4  0100               	movlb	0	; () banked
 13817  0150E6  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13818  0150E8  0E00               	movlw	0
 13819  0150EA  0100               	movlb	0	; () banked
 13820  0150EC  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13821  0150EE  0E01               	movlw	1
 13822  0150F0  ECAD  F0AD         	call	_LCD_send_command
 13823                           
 13824                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 13825  0150F4  0E00               	movlw	0
 13826  0150F6  0100               	movlb	0	; () banked
 13827  0150F8  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13828  0150FA  0E00               	movlw	0
 13829  0150FC  0100               	movlb	0	; () banked
 13830  0150FE  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13831  015100  0E00               	movlw	0
 13832  015102  0100               	movlb	0	; () banked
 13833  015104  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13834  015106  0E00               	movlw	0
 13835  015108  ECAD  F0AD         	call	_LCD_send_command
 13836                           
 13837                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 13838  01510C  0E00               	movlw	0
 13839  01510E  0100               	movlb	0	; () banked
 13840  015110  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13841  015112  0E00               	movlw	0
 13842  015114  0100               	movlb	0	; () banked
 13843  015116  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13844  015118  0E00               	movlw	0
 13845  01511A  0100               	movlb	0	; () banked
 13846  01511C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13847  01511E  0E01               	movlw	1
 13848  015120  ECAD  F0AD         	call	_LCD_send_command
 13849                           
 13850                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 13851  015124  0E00               	movlw	0
 13852  015126  0100               	movlb	0	; () banked
 13853  015128  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13854  01512A  0E00               	movlw	0
 13855  01512C  0100               	movlb	0	; () banked
 13856  01512E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13857  015130  0E00               	movlw	0
 13858  015132  0100               	movlb	0	; () banked
 13859  015134  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13860  015136  0E00               	movlw	0
 13861  015138  ECAD  F0AD         	call	_LCD_send_command
 13862                           
 13863                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 13864  01513C  0E00               	movlw	0
 13865  01513E  0100               	movlb	0	; () banked
 13866  015140  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13867  015142  0E00               	movlw	0
 13868  015144  0100               	movlb	0	; () banked
 13869  015146  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13870  015148  0E01               	movlw	1
 13871  01514A  0100               	movlb	0	; () banked
 13872  01514C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13873  01514E  0E00               	movlw	0
 13874  015150  ECAD  F0AD         	call	_LCD_send_command
 13875                           
 13876                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 13877  015154  0E00               	movlw	0
 13878  015156  0100               	movlb	0	; () banked
 13879  015158  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13880  01515A  0E00               	movlw	0
 13881  01515C  0100               	movlb	0	; () banked
 13882  01515E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13883  015160  0E00               	movlw	0
 13884  015162  0100               	movlb	0	; () banked
 13885  015164  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13886  015166  0E00               	movlw	0
 13887  015168  ECAD  F0AD         	call	_LCD_send_command
 13888                           
 13889                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 13890  01516C  0E01               	movlw	1
 13891  01516E  0100               	movlb	0	; () banked
 13892  015170  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 13893  015172  0E01               	movlw	1
 13894  015174  0100               	movlb	0	; () banked
 13895  015176  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 13896  015178  0E00               	movlw	0
 13897  01517A  0100               	movlb	0	; () banked
 13898  01517C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 13899  01517E  0E00               	movlw	0
 13900  015180  ECAD  F0AD         	call	_LCD_send_command
 13901                           
 13902                           ;src\LCD_44780.c: 312: LCD_clear ();
 13903  015184  EC51  F0AE         	call	_LCD_clear	;wreg free
 13904                           
 13905                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 13906  015188  0E00               	movlw	0
 13907  01518A  0100               	movlb	0	; () banked
 13908  01518C  6F7E               	movwf	LCD_cursor@blinking& (0+255),b
 13909  01518E  0E00               	movlw	0
 13910  015190  EC38  F0AE         	call	_LCD_cursor
 13911  015194  0012               	return		;funcret
 13912  015196                     __end_of_LCD_initialize:
 13913                           	opt stack 0
 13914                           tblptru	equ	0xFF8
 13915                           tblptrh	equ	0xFF7
 13916                           tblptrl	equ	0xFF6
 13917                           tablat	equ	0xFF5
 13918                           prodh	equ	0xFF4
 13919                           prodl	equ	0xFF3
 13920                           intcon	equ	0xFF2
 13921                           postinc0	equ	0xFEE
 13922                           wreg	equ	0xFE8
 13923                           indf2	equ	0xFDF
 13924                           postinc2	equ	0xFDE
 13925                           fsr2h	equ	0xFDA
 13926                           fsr2l	equ	0xFD9
 13927                           status	equ	0xFD8
 13928                           
 13929 ;; *************** function _delay_set_quartz *****************
 13930 ;; Defined at:
 13931 ;;		line 115 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 13932 ;; Parameters:    Size  Location     Type
 13933 ;;  frequency       1    wreg     unsigned char 
 13934 ;; Auto vars:     Size  Location     Type
 13935 ;;  frequency       1   18[BANK0 ] unsigned char 
 13936 ;; Return value:  Size  Location     Type
 13937 ;;		None               void
 13938 ;; Registers used:
 13939 ;;		wreg
 13940 ;; Tracked objects:
 13941 ;;		On entry : 0/0
 13942 ;;		On exit  : 0/0
 13943 ;;		Unchanged: 0/0
 13944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13946 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13948 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13949 ;;Total ram usage:        1 bytes
 13950 ;; Hardware stack levels used:    1
 13951 ;; Hardware stack levels required when called:    3
 13952 ;; This function calls:
 13953 ;;		Nothing
 13954 ;; This function is called by:
 13955 ;;		_LCD_initialize
 13956 ;; This function uses a non-reentrant model
 13957 ;;
 13958                           
 13959                           	psect	text30
 13960  015E24                     __ptext30:
 13961                           	opt stack 0
 13962  015E24                     _delay_set_quartz:
 13963                           	opt stack 25
 13964                           
 13965                           ;incstack = 0
 13966                           ;delay_set_quartz@frequency stored from wreg
 13967  015E24  0100               	movlb	0	; () banked
 13968  015E26  6F72               	movwf	delay_set_quartz@frequency& (0+255),b
 13969                           
 13970                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 13971  015E28  C072  F0EC         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 13972  015E2C  0012               	return		;funcret
 13973  015E2E                     __end_of_delay_set_quartz:
 13974                           	opt stack 0
 13975                           tblptru	equ	0xFF8
 13976                           tblptrh	equ	0xFF7
 13977                           tblptrl	equ	0xFF6
 13978                           tablat	equ	0xFF5
 13979                           prodh	equ	0xFF4
 13980                           prodl	equ	0xFF3
 13981                           intcon	equ	0xFF2
 13982                           postinc0	equ	0xFEE
 13983                           wreg	equ	0xFE8
 13984                           indf2	equ	0xFDF
 13985                           postinc2	equ	0xFDE
 13986                           fsr2h	equ	0xFDA
 13987                           fsr2l	equ	0xFD9
 13988                           status	equ	0xFD8
 13989                           
 13990 ;; *************** function _LCD_cursor *****************
 13991 ;; Defined at:
 13992 ;;		line 266 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13993 ;; Parameters:    Size  Location     Type
 13994 ;;  active          1    wreg     unsigned char 
 13995 ;;  blinking        1   30[BANK0 ] unsigned char 
 13996 ;; Auto vars:     Size  Location     Type
 13997 ;;  active          1   31[BANK0 ] unsigned char 
 13998 ;; Return value:  Size  Location     Type
 13999 ;;		None               void
 14000 ;; Registers used:
 14001 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14002 ;; Tracked objects:
 14003 ;;		On entry : 0/0
 14004 ;;		On exit  : 0/0
 14005 ;;		Unchanged: 0/0
 14006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14007 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14008 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14010 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14011 ;;Total ram usage:        2 bytes
 14012 ;; Hardware stack levels used:    1
 14013 ;; Hardware stack levels required when called:    7
 14014 ;; This function calls:
 14015 ;;		_LCD_send_command
 14016 ;; This function is called by:
 14017 ;;		_LCD_initialize
 14018 ;; This function uses a non-reentrant model
 14019 ;;
 14020                           
 14021                           	psect	text31
 14022  015C70                     __ptext31:
 14023                           	opt stack 0
 14024  015C70                     _LCD_cursor:
 14025                           	opt stack 21
 14026                           
 14027                           ;incstack = 0
 14028                           ;LCD_cursor@active stored from wreg
 14029  015C70  0100               	movlb	0	; () banked
 14030  015C72  6F7F               	movwf	LCD_cursor@active& (0+255),b
 14031                           
 14032                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 14033  015C74  0E00               	movlw	0
 14034  015C76  0100               	movlb	0	; () banked
 14035  015C78  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14036  015C7A  0E00               	movlw	0
 14037  015C7C  0100               	movlb	0	; () banked
 14038  015C7E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14039  015C80  0E00               	movlw	0
 14040  015C82  0100               	movlb	0	; () banked
 14041  015C84  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14042  015C86  0E00               	movlw	0
 14043  015C88  ECAD  F0AD         	call	_LCD_send_command
 14044                           
 14045                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 14046  015C8C  0E01               	movlw	1
 14047  015C8E  0100               	movlb	0	; () banked
 14048  015C90  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14049  015C92  C07F  F07B         	movff	LCD_cursor@active,LCD_send_command@D1
 14050  015C96  C07E  F07C         	movff	LCD_cursor@blinking,LCD_send_command@D0
 14051  015C9A  0E01               	movlw	1
 14052  015C9C  ECAD  F0AD         	call	_LCD_send_command
 14053  015CA0  0012               	return		;funcret
 14054  015CA2                     __end_of_LCD_cursor:
 14055                           	opt stack 0
 14056                           tblptru	equ	0xFF8
 14057                           tblptrh	equ	0xFF7
 14058                           tblptrl	equ	0xFF6
 14059                           tablat	equ	0xFF5
 14060                           prodh	equ	0xFF4
 14061                           prodl	equ	0xFF3
 14062                           intcon	equ	0xFF2
 14063                           postinc0	equ	0xFEE
 14064                           wreg	equ	0xFE8
 14065                           indf2	equ	0xFDF
 14066                           postinc2	equ	0xFDE
 14067                           fsr2h	equ	0xFDA
 14068                           fsr2l	equ	0xFD9
 14069                           status	equ	0xFD8
 14070                           
 14071 ;; *************** function _LCD_clear *****************
 14072 ;; Defined at:
 14073 ;;		line 257 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14074 ;; Parameters:    Size  Location     Type
 14075 ;;		None
 14076 ;; Auto vars:     Size  Location     Type
 14077 ;;		None
 14078 ;; Return value:  Size  Location     Type
 14079 ;;		None               void
 14080 ;; Registers used:
 14081 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14082 ;; Tracked objects:
 14083 ;;		On entry : 0/0
 14084 ;;		On exit  : 0/0
 14085 ;;		Unchanged: 0/0
 14086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14091 ;;Total ram usage:        0 bytes
 14092 ;; Hardware stack levels used:    1
 14093 ;; Hardware stack levels required when called:    7
 14094 ;; This function calls:
 14095 ;;		_LCD_send_command
 14096 ;; This function is called by:
 14097 ;;		_LCD_initialize
 14098 ;;		_LCD_Handler
 14099 ;;		_board_initialization
 14100 ;; This function uses a non-reentrant model
 14101 ;;
 14102                           
 14103                           	psect	text32
 14104  015CA2                     __ptext32:
 14105                           	opt stack 0
 14106  015CA2                     _LCD_clear:
 14107                           	opt stack 21
 14108                           
 14109                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 14110                           
 14111                           ;incstack = 0
 14112  015CA2  0E00               	movlw	0
 14113  015CA4  0100               	movlb	0	; () banked
 14114  015CA6  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14115  015CA8  0E00               	movlw	0
 14116  015CAA  0100               	movlb	0	; () banked
 14117  015CAC  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14118  015CAE  0E00               	movlw	0
 14119  015CB0  0100               	movlb	0	; () banked
 14120  015CB2  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14121  015CB4  0E00               	movlw	0
 14122  015CB6  ECAD  F0AD         	call	_LCD_send_command
 14123                           
 14124                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 14125  015CBA  0E00               	movlw	0
 14126  015CBC  0100               	movlb	0	; () banked
 14127  015CBE  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14128  015CC0  0E00               	movlw	0
 14129  015CC2  0100               	movlb	0	; () banked
 14130  015CC4  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14131  015CC6  0E01               	movlw	1
 14132  015CC8  0100               	movlb	0	; () banked
 14133  015CCA  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14134  015CCC  0E00               	movlw	0
 14135  015CCE  ECAD  F0AD         	call	_LCD_send_command
 14136  015CD2  0012               	return		;funcret
 14137  015CD4                     __end_of_LCD_clear:
 14138                           	opt stack 0
 14139                           tblptru	equ	0xFF8
 14140                           tblptrh	equ	0xFF7
 14141                           tblptrl	equ	0xFF6
 14142                           tablat	equ	0xFF5
 14143                           prodh	equ	0xFF4
 14144                           prodl	equ	0xFF3
 14145                           intcon	equ	0xFF2
 14146                           postinc0	equ	0xFEE
 14147                           wreg	equ	0xFE8
 14148                           indf2	equ	0xFDF
 14149                           postinc2	equ	0xFDE
 14150                           fsr2h	equ	0xFDA
 14151                           fsr2l	equ	0xFD9
 14152                           status	equ	0xFD8
 14153                           
 14154 ;; *************** function _LCD_goto_xy *****************
 14155 ;; Defined at:
 14156 ;;		line 136 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14157 ;; Parameters:    Size  Location     Type
 14158 ;;  x               1    wreg     unsigned char 
 14159 ;;  y               1   33[BANK0 ] unsigned char 
 14160 ;; Auto vars:     Size  Location     Type
 14161 ;;  x               1   34[BANK0 ] unsigned char 
 14162 ;; Return value:  Size  Location     Type
 14163 ;;		None               void
 14164 ;; Registers used:
 14165 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14166 ;; Tracked objects:
 14167 ;;		On entry : 0/0
 14168 ;;		On exit  : 0/0
 14169 ;;		Unchanged: 0/0
 14170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14171 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14172 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14174 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14175 ;;Total ram usage:        2 bytes
 14176 ;; Hardware stack levels used:    1
 14177 ;; Hardware stack levels required when called:    8
 14178 ;; This function calls:
 14179 ;;		_LCD_goto_line
 14180 ;;		_LCD_shift_cursor
 14181 ;; This function is called by:
 14182 ;;		_LCD_Handler
 14183 ;; This function uses a non-reentrant model
 14184 ;;
 14185                           
 14186                           	psect	text33
 14187  015DA4                     __ptext33:
 14188                           	opt stack 0
 14189  015DA4                     _LCD_goto_xy:
 14190                           	opt stack 21
 14191                           
 14192                           ;incstack = 0
 14193                           ;LCD_goto_xy@x stored from wreg
 14194  015DA4  0100               	movlb	0	; () banked
 14195  015DA6  6F82               	movwf	LCD_goto_xy@x& (0+255),b
 14196                           
 14197                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 14198  015DA8  0100               	movlb	0	; () banked
 14199  015DAA  5181               	movf	LCD_goto_xy@y& (0+255),w,b
 14200  015DAC  ECF7  F0A9         	call	_LCD_goto_line
 14201                           
 14202                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 14203  015DB0  0100               	movlb	0	; () banked
 14204  015DB2  0582               	decf	LCD_goto_xy@x& (0+255),w,b
 14205  015DB4  0100               	movlb	0	; () banked
 14206  015DB6  6F7E               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 14207  015DB8  0E01               	movlw	1
 14208  015DBA  EC41  F0AD         	call	_LCD_shift_cursor
 14209  015DBE  0012               	return		;funcret
 14210  015DC0                     __end_of_LCD_goto_xy:
 14211                           	opt stack 0
 14212                           tblptru	equ	0xFF8
 14213                           tblptrh	equ	0xFF7
 14214                           tblptrl	equ	0xFF6
 14215                           tablat	equ	0xFF5
 14216                           prodh	equ	0xFF4
 14217                           prodl	equ	0xFF3
 14218                           intcon	equ	0xFF2
 14219                           postinc0	equ	0xFEE
 14220                           wreg	equ	0xFE8
 14221                           indf2	equ	0xFDF
 14222                           postinc2	equ	0xFDE
 14223                           fsr2h	equ	0xFDA
 14224                           fsr2l	equ	0xFD9
 14225                           status	equ	0xFD8
 14226                           
 14227 ;; *************** function _LCD_shift_cursor *****************
 14228 ;; Defined at:
 14229 ;;		line 98 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14230 ;; Parameters:    Size  Location     Type
 14231 ;;  shift           1    wreg     unsigned char 
 14232 ;;  number_of_sh    1   30[BANK0 ] unsigned char 
 14233 ;; Auto vars:     Size  Location     Type
 14234 ;;  shift           1   31[BANK0 ] unsigned char 
 14235 ;;  i               1   32[BANK0 ] unsigned char 
 14236 ;; Return value:  Size  Location     Type
 14237 ;;		None               void
 14238 ;; Registers used:
 14239 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14240 ;; Tracked objects:
 14241 ;;		On entry : 0/0
 14242 ;;		On exit  : 0/0
 14243 ;;		Unchanged: 0/0
 14244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14245 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14246 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14248 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14249 ;;Total ram usage:        3 bytes
 14250 ;; Hardware stack levels used:    1
 14251 ;; Hardware stack levels required when called:    7
 14252 ;; This function calls:
 14253 ;;		_LCD_send_command
 14254 ;; This function is called by:
 14255 ;;		_LCD_goto_xy
 14256 ;; This function uses a non-reentrant model
 14257 ;;
 14258                           
 14259                           	psect	text34
 14260  015A82                     __ptext34:
 14261                           	opt stack 0
 14262  015A82                     _LCD_shift_cursor:
 14263                           	opt stack 21
 14264                           
 14265                           ;incstack = 0
 14266                           ;LCD_shift_cursor@shift stored from wreg
 14267  015A82  0100               	movlb	0	; () banked
 14268  015A84  6F7F               	movwf	LCD_shift_cursor@shift& (0+255),b
 14269                           
 14270                           ;src\LCD_44780.c: 100: unsigned char i;
 14271                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 14272  015A86  0E00               	movlw	0
 14273  015A88  0100               	movlb	0	; () banked
 14274  015A8A  6F80               	movwf	LCD_shift_cursor@i& (0+255),b
 14275  015A8C  D019               	goto	l7786
 14276  015A8E                     l7782:
 14277                           
 14278                           ; BSR set to: 0
 14279                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 14280  015A8E  0E00               	movlw	0
 14281  015A90  0100               	movlb	0	; () banked
 14282  015A92  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14283  015A94  0E00               	movlw	0
 14284  015A96  0100               	movlb	0	; () banked
 14285  015A98  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14286  015A9A  0E01               	movlw	1
 14287  015A9C  0100               	movlb	0	; () banked
 14288  015A9E  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14289  015AA0  0E00               	movlw	0
 14290  015AA2  ECAD  F0AD         	call	_LCD_send_command
 14291                           
 14292                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 14293  015AA6  C07F  F07A         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 14294  015AAA  0E00               	movlw	0
 14295  015AAC  0100               	movlb	0	; () banked
 14296  015AAE  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14297  015AB0  0E00               	movlw	0
 14298  015AB2  0100               	movlb	0	; () banked
 14299  015AB4  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14300  015AB6  0E00               	movlw	0
 14301  015AB8  ECAD  F0AD         	call	_LCD_send_command
 14302  015ABC  0100               	movlb	0	; () banked
 14303  015ABE  2B80               	incf	LCD_shift_cursor@i& (0+255),f,b
 14304  015AC0                     l7786:
 14305                           
 14306                           ; BSR set to: 0
 14307  015AC0  0100               	movlb	0	; () banked
 14308  015AC2  517E               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 14309  015AC4  0100               	movlb	0	; () banked
 14310  015AC6  5D80               	subwf	LCD_shift_cursor@i& (0+255),w,b
 14311  015AC8  B0D8               	btfsc	status,0,c
 14312  015ACA  0012               	return	
 14313  015ACC  D7E0               	goto	l7782
 14314  015ACE                     __end_of_LCD_shift_cursor:
 14315                           	opt stack 0
 14316                           tblptru	equ	0xFF8
 14317                           tblptrh	equ	0xFF7
 14318                           tblptrl	equ	0xFF6
 14319                           tablat	equ	0xFF5
 14320                           prodh	equ	0xFF4
 14321                           prodl	equ	0xFF3
 14322                           intcon	equ	0xFF2
 14323                           postinc0	equ	0xFEE
 14324                           wreg	equ	0xFE8
 14325                           indf2	equ	0xFDF
 14326                           postinc2	equ	0xFDE
 14327                           fsr2h	equ	0xFDA
 14328                           fsr2l	equ	0xFD9
 14329                           status	equ	0xFD8
 14330                           
 14331 ;; *************** function _LCD_goto_line *****************
 14332 ;; Defined at:
 14333 ;;		line 111 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14334 ;; Parameters:    Size  Location     Type
 14335 ;;  line            1    wreg     unsigned char 
 14336 ;; Auto vars:     Size  Location     Type
 14337 ;;  line            1   30[BANK0 ] unsigned char 
 14338 ;; Return value:  Size  Location     Type
 14339 ;;		None               void
 14340 ;; Registers used:
 14341 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14342 ;; Tracked objects:
 14343 ;;		On entry : 0/0
 14344 ;;		On exit  : 0/0
 14345 ;;		Unchanged: 0/0
 14346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14348 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14350 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14351 ;;Total ram usage:        1 bytes
 14352 ;; Hardware stack levels used:    1
 14353 ;; Hardware stack levels required when called:    7
 14354 ;; This function calls:
 14355 ;;		_LCD_send_command
 14356 ;; This function is called by:
 14357 ;;		_LCD_goto_xy
 14358 ;;		_main
 14359 ;;		_LCD_Handler
 14360 ;;		_board_initialization
 14361 ;; This function uses a non-reentrant model
 14362 ;;
 14363                           
 14364                           	psect	text35
 14365  0153EE                     __ptext35:
 14366                           	opt stack 0
 14367  0153EE                     _LCD_goto_line:
 14368                           	opt stack 22
 14369                           
 14370                           ; BSR set to: 0
 14371                           ;incstack = 0
 14372                           ;LCD_goto_line@line stored from wreg
 14373  0153EE  0100               	movlb	0	; () banked
 14374  0153F0  6F7E               	movwf	LCD_goto_line@line& (0+255),b
 14375                           
 14376                           ;src\LCD_44780.c: 113: switch(line) {
 14377  0153F2  D064               	goto	l7798
 14378  0153F4                     l7790:
 14379  0153F4  0E00               	movlw	0
 14380  0153F6  0100               	movlb	0	; () banked
 14381  0153F8  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14382  0153FA  0E00               	movlw	0
 14383  0153FC  0100               	movlb	0	; () banked
 14384  0153FE  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14385  015400  0E00               	movlw	0
 14386  015402  0100               	movlb	0	; () banked
 14387  015404  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14388  015406  0E01               	movlw	1
 14389  015408  ECAD  F0AD         	call	_LCD_send_command
 14390                           
 14391                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 14392  01540C  0E00               	movlw	0
 14393  01540E  0100               	movlb	0	; () banked
 14394  015410  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14395  015412  0E00               	movlw	0
 14396  015414  0100               	movlb	0	; () banked
 14397  015416  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14398  015418  0E00               	movlw	0
 14399  01541A  0100               	movlb	0	; () banked
 14400  01541C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14401  01541E  0E00               	movlw	0
 14402  015420  ECAD  F0AD         	call	_LCD_send_command
 14403                           
 14404                           ;src\LCD_44780.c: 117: break;
 14405  015424  0012               	return	
 14406  015426                     l7792:
 14407  015426  0E01               	movlw	1
 14408  015428  0100               	movlb	0	; () banked
 14409  01542A  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14410  01542C  0E00               	movlw	0
 14411  01542E  0100               	movlb	0	; () banked
 14412  015430  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14413  015432  0E00               	movlw	0
 14414  015434  0100               	movlb	0	; () banked
 14415  015436  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14416  015438  0E01               	movlw	1
 14417  01543A  ECAD  F0AD         	call	_LCD_send_command
 14418                           
 14419                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 14420  01543E  0E00               	movlw	0
 14421  015440  0100               	movlb	0	; () banked
 14422  015442  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14423  015444  0E00               	movlw	0
 14424  015446  0100               	movlb	0	; () banked
 14425  015448  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14426  01544A  0E00               	movlw	0
 14427  01544C  0100               	movlb	0	; () banked
 14428  01544E  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14429  015450  0E00               	movlw	0
 14430  015452  ECAD  F0AD         	call	_LCD_send_command
 14431                           
 14432                           ;src\LCD_44780.c: 121: break;
 14433  015456  0012               	return	
 14434  015458                     l7794:
 14435  015458  0E00               	movlw	0
 14436  01545A  0100               	movlb	0	; () banked
 14437  01545C  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14438  01545E  0E00               	movlw	0
 14439  015460  0100               	movlb	0	; () banked
 14440  015462  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14441  015464  0E01               	movlw	1
 14442  015466  0100               	movlb	0	; () banked
 14443  015468  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14444  01546A  0E01               	movlw	1
 14445  01546C  ECAD  F0AD         	call	_LCD_send_command
 14446                           
 14447                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 14448  015470  0E01               	movlw	1
 14449  015472  0100               	movlb	0	; () banked
 14450  015474  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14451  015476  0E00               	movlw	0
 14452  015478  0100               	movlb	0	; () banked
 14453  01547A  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14454  01547C  0E00               	movlw	0
 14455  01547E  0100               	movlb	0	; () banked
 14456  015480  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14457  015482  0E00               	movlw	0
 14458  015484  ECAD  F0AD         	call	_LCD_send_command
 14459                           
 14460                           ;src\LCD_44780.c: 125: break;
 14461  015488  0012               	return	
 14462  01548A                     l7796:
 14463  01548A  0E01               	movlw	1
 14464  01548C  0100               	movlb	0	; () banked
 14465  01548E  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14466  015490  0E00               	movlw	0
 14467  015492  0100               	movlb	0	; () banked
 14468  015494  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14469  015496  0E01               	movlw	1
 14470  015498  0100               	movlb	0	; () banked
 14471  01549A  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14472  01549C  0E01               	movlw	1
 14473  01549E  ECAD  F0AD         	call	_LCD_send_command
 14474                           
 14475                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 14476  0154A2  0E01               	movlw	1
 14477  0154A4  0100               	movlb	0	; () banked
 14478  0154A6  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14479  0154A8  0E00               	movlw	0
 14480  0154AA  0100               	movlb	0	; () banked
 14481  0154AC  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14482  0154AE  0E00               	movlw	0
 14483  0154B0  0100               	movlb	0	; () banked
 14484  0154B2  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14485  0154B4  0E00               	movlw	0
 14486  0154B6  ECAD  F0AD         	call	_LCD_send_command
 14487                           
 14488                           ;src\LCD_44780.c: 129: }
 14489  0154BA  0012               	return	
 14490  0154BC                     l7798:
 14491  0154BC  0100               	movlb	0	; () banked
 14492  0154BE  517E               	movf	LCD_goto_line@line& (0+255),w,b
 14493                           
 14494                           ; Switch size 1, requested type "space"
 14495                           ; Number of cases is 4, Range of values is 1 to 4
 14496                           ; switch strategies available:
 14497                           ; Name         Instructions Cycles
 14498                           ; simple_byte           13     7 (average)
 14499                           ;	Chosen strategy is simple_byte
 14500  0154C0  0A01               	xorlw	1	; case 1
 14501  0154C2  B4D8               	btfsc	status,2,c
 14502  0154C4  D797               	goto	l7790
 14503  0154C6  0A03               	xorlw	3	; case 2
 14504  0154C8  B4D8               	btfsc	status,2,c
 14505  0154CA  D7AD               	goto	l7792
 14506  0154CC  0A01               	xorlw	1	; case 3
 14507  0154CE  B4D8               	btfsc	status,2,c
 14508  0154D0  D7C3               	goto	l7794
 14509  0154D2  0A07               	xorlw	7	; case 4
 14510  0154D4  A4D8               	btfss	status,2,c
 14511  0154D6  0012               	return	
 14512  0154D8  D7D8               	goto	l7796
 14513  0154DA                     __end_of_LCD_goto_line:
 14514                           	opt stack 0
 14515                           tblptru	equ	0xFF8
 14516                           tblptrh	equ	0xFF7
 14517                           tblptrl	equ	0xFF6
 14518                           tablat	equ	0xFF5
 14519                           prodh	equ	0xFF4
 14520                           prodl	equ	0xFF3
 14521                           intcon	equ	0xFF2
 14522                           postinc0	equ	0xFEE
 14523                           wreg	equ	0xFE8
 14524                           indf2	equ	0xFDF
 14525                           postinc2	equ	0xFDE
 14526                           fsr2h	equ	0xFDA
 14527                           fsr2l	equ	0xFD9
 14528                           status	equ	0xFD8
 14529                           
 14530 ;; *************** function _LCD_send_command *****************
 14531 ;; Defined at:
 14532 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14533 ;; Parameters:    Size  Location     Type
 14534 ;;  D3              1    wreg     unsigned char 
 14535 ;;  D2              1   26[BANK0 ] unsigned char 
 14536 ;;  D1              1   27[BANK0 ] unsigned char 
 14537 ;;  D0              1   28[BANK0 ] unsigned char 
 14538 ;; Auto vars:     Size  Location     Type
 14539 ;;  D3              1   29[BANK0 ] unsigned char 
 14540 ;; Return value:  Size  Location     Type
 14541 ;;		None               void
 14542 ;; Registers used:
 14543 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14544 ;; Tracked objects:
 14545 ;;		On entry : 0/0
 14546 ;;		On exit  : 0/0
 14547 ;;		Unchanged: 0/0
 14548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14549 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14550 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14552 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14553 ;;Total ram usage:        4 bytes
 14554 ;; Hardware stack levels used:    1
 14555 ;; Hardware stack levels required when called:    6
 14556 ;; This function calls:
 14557 ;;		_LCD_enable_pulse
 14558 ;; This function is called by:
 14559 ;;		_LCD_shift_cursor
 14560 ;;		_LCD_goto_line
 14561 ;;		_LCD_write_char
 14562 ;;		_LCD_clear
 14563 ;;		_LCD_cursor
 14564 ;;		_LCD_initialize
 14565 ;;		_LCD_home
 14566 ;;		_LCD_shift
 14567 ;; This function uses a non-reentrant model
 14568 ;;
 14569                           
 14570                           	psect	text36
 14571  015B5A                     __ptext36:
 14572                           	opt stack 0
 14573  015B5A                     _LCD_send_command:
 14574                           	opt stack 22
 14575                           
 14576                           ;incstack = 0
 14577                           ;LCD_send_command@D3 stored from wreg
 14578  015B5A  0100               	movlb	0	; () banked
 14579  015B5C  6F7D               	movwf	LCD_send_command@D3& (0+255),b
 14580                           
 14581                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 14582  015B5E  0100               	movlb	0	; () banked
 14583  015B60  B17C               	btfsc	LCD_send_command@D0& (0+255),0,b
 14584  015B62  D002               	bra	u9575
 14585  015B64  948B               	bcf	3979,2,c	;volatile
 14586  015B66  D001               	bra	u9576
 14587  015B68                     u9575:
 14588  015B68  848B               	bsf	3979,2,c	;volatile
 14589  015B6A                     u9576:
 14590                           
 14591                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 14592  015B6A  0100               	movlb	0	; () banked
 14593  015B6C  B17B               	btfsc	LCD_send_command@D1& (0+255),0,b
 14594  015B6E  D002               	bra	u9585
 14595  015B70  968B               	bcf	3979,3,c	;volatile
 14596  015B72  D001               	bra	u9586
 14597  015B74                     u9585:
 14598  015B74  868B               	bsf	3979,3,c	;volatile
 14599  015B76                     u9586:
 14600                           
 14601                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 14602  015B76  0100               	movlb	0	; () banked
 14603  015B78  B17A               	btfsc	LCD_send_command@D2& (0+255),0,b
 14604  015B7A  D002               	bra	u9595
 14605  015B7C  908C               	bcf	3980,0,c	;volatile
 14606  015B7E  D001               	bra	u9596
 14607  015B80                     u9595:
 14608  015B80  808C               	bsf	3980,0,c	;volatile
 14609  015B82                     u9596:
 14610                           
 14611                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 14612  015B82  0100               	movlb	0	; () banked
 14613  015B84  B17D               	btfsc	LCD_send_command@D3& (0+255),0,b
 14614  015B86  D002               	bra	u9605
 14615  015B88  928C               	bcf	3980,1,c	;volatile
 14616  015B8A  D001               	bra	u9606
 14617  015B8C                     u9605:
 14618  015B8C  828C               	bsf	3980,1,c	;volatile
 14619  015B8E                     u9606:
 14620                           
 14621                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 14622  015B8E  ECA4  F0AE         	call	_LCD_enable_pulse	;wreg free
 14623  015B92  0012               	return		;funcret
 14624  015B94                     __end_of_LCD_send_command:
 14625                           	opt stack 0
 14626                           tblptru	equ	0xFF8
 14627                           tblptrh	equ	0xFF7
 14628                           tblptrl	equ	0xFF6
 14629                           tablat	equ	0xFF5
 14630                           prodh	equ	0xFF4
 14631                           prodl	equ	0xFF3
 14632                           intcon	equ	0xFF2
 14633                           postinc0	equ	0xFEE
 14634                           wreg	equ	0xFE8
 14635                           indf2	equ	0xFDF
 14636                           postinc2	equ	0xFDE
 14637                           fsr2h	equ	0xFDA
 14638                           fsr2l	equ	0xFD9
 14639                           status	equ	0xFD8
 14640                           
 14641 ;; *************** function _LCD_enable_pulse *****************
 14642 ;; Defined at:
 14643 ;;		line 49 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14644 ;; Parameters:    Size  Location     Type
 14645 ;;		None
 14646 ;; Auto vars:     Size  Location     Type
 14647 ;;		None
 14648 ;; Return value:  Size  Location     Type
 14649 ;;		None               void
 14650 ;; Registers used:
 14651 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14652 ;; Tracked objects:
 14653 ;;		On entry : 0/0
 14654 ;;		On exit  : 0/0
 14655 ;;		Unchanged: 0/0
 14656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14661 ;;Total ram usage:        0 bytes
 14662 ;; Hardware stack levels used:    1
 14663 ;; Hardware stack levels required when called:    5
 14664 ;; This function calls:
 14665 ;;		_delay_ms
 14666 ;; This function is called by:
 14667 ;;		_LCD_send_command
 14668 ;; This function uses a non-reentrant model
 14669 ;;
 14670                           
 14671                           	psect	text37
 14672  015D48                     __ptext37:
 14673                           	opt stack 0
 14674  015D48                     _LCD_enable_pulse:
 14675                           	opt stack 22
 14676                           
 14677                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 14678                           
 14679                           ;incstack = 0
 14680  015D48  828B               	bsf	3979,1,c	;volatile
 14681                           
 14682                           ;src\LCD_44780.c: 52: delay_ms (1);
 14683  015D4A  0E00               	movlw	0
 14684  015D4C  0100               	movlb	0	; () banked
 14685  015D4E  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14686  015D50  0E01               	movlw	1
 14687  015D52  6F78               	movwf	delay_ms@value_ms& (0+255),b
 14688  015D54  ECCA  F0AD         	call	_delay_ms	;wreg free
 14689                           
 14690                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 14691  015D58  928B               	bcf	3979,1,c	;volatile
 14692                           
 14693                           ;src\LCD_44780.c: 54: delay_ms (1);
 14694  015D5A  0E00               	movlw	0
 14695  015D5C  0100               	movlb	0	; () banked
 14696  015D5E  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14697  015D60  0E01               	movlw	1
 14698  015D62  6F78               	movwf	delay_ms@value_ms& (0+255),b
 14699  015D64  ECCA  F0AD         	call	_delay_ms	;wreg free
 14700  015D68  0012               	return		;funcret
 14701  015D6A                     __end_of_LCD_enable_pulse:
 14702                           	opt stack 0
 14703                           tblptru	equ	0xFF8
 14704                           tblptrh	equ	0xFF7
 14705                           tblptrl	equ	0xFF6
 14706                           tablat	equ	0xFF5
 14707                           prodh	equ	0xFF4
 14708                           prodl	equ	0xFF3
 14709                           intcon	equ	0xFF2
 14710                           postinc0	equ	0xFEE
 14711                           wreg	equ	0xFE8
 14712                           indf2	equ	0xFDF
 14713                           postinc2	equ	0xFDE
 14714                           fsr2h	equ	0xFDA
 14715                           fsr2l	equ	0xFD9
 14716                           status	equ	0xFD8
 14717                           
 14718 ;; *************** function _delay_ms *****************
 14719 ;; Defined at:
 14720 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 14721 ;; Parameters:    Size  Location     Type
 14722 ;;  value_ms        2   24[BANK0 ] unsigned int 
 14723 ;; Auto vars:     Size  Location     Type
 14724 ;;		None
 14725 ;; Return value:  Size  Location     Type
 14726 ;;		None               void
 14727 ;; Registers used:
 14728 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14729 ;; Tracked objects:
 14730 ;;		On entry : 0/0
 14731 ;;		On exit  : 0/0
 14732 ;;		Unchanged: 0/0
 14733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14737 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14738 ;;Total ram usage:        2 bytes
 14739 ;; Hardware stack levels used:    1
 14740 ;; Hardware stack levels required when called:    4
 14741 ;; This function calls:
 14742 ;;		___wmul
 14743 ;; This function is called by:
 14744 ;;		_LCD_enable_pulse
 14745 ;;		_LCD_initialize
 14746 ;;		_main
 14747 ;;		_delay_s
 14748 ;; This function uses a non-reentrant model
 14749 ;;
 14750                           
 14751                           	psect	text38
 14752  015B94                     __ptext38:
 14753                           	opt stack 0
 14754  015B94                     _delay_ms:
 14755                           	opt stack 26
 14756                           
 14757                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 14758                           
 14759                           ;incstack = 0
 14760  015B94  C0EC  F072         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 14761  015B98  0100               	movlb	0	; () banked
 14762  015B9A  6B73               	clrf	(___wmul@multiplier+1)& (0+255),b
 14763  015B9C  C078  F074         	movff	delay_ms@value_ms,___wmul@multiplicand
 14764  015BA0  C079  F075         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 14765  015BA4  EC03  F0AE         	call	___wmul	;wreg free
 14766  015BA8  C072  F0E0         	movff	?___wmul,_clock_counter_reference	;volatile
 14767  015BAC  C073  F0E1         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 14768                           
 14769                           ;src\delay.c: 75: while (clock_counter_reference) {
 14770  015BB0  D007               	goto	l581
 14771  015BB2                     l7352:
 14772                           
 14773                           ;src\delay.c: 85: _delay(240);
 14774  015BB2  0E50               	movlw	80
 14775  015BB4                     u12097:
 14776  015BB4  2EE8               	decfsz	wreg,f,c
 14777  015BB6  D7FE               	goto	u12097
 14778                           
 14779                           ;src\delay.c: 88: clock_counter_reference--;
 14780  015BB8  0100               	movlb	0	; () banked
 14781  015BBA  07E0               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 14782  015BBC  A0D8               	btfss	status,0,c
 14783  015BBE  07E1               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 14784  015BC0                     l581:
 14785  015BC0  0100               	movlb	0	; () banked
 14786  015BC2  51E0               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 14787  015BC4  0100               	movlb	0	; () banked
 14788  015BC6  11E1               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 14789  015BC8  B4D8               	btfsc	status,2,c
 14790  015BCA  0012               	return	
 14791  015BCC  D7F2               	goto	l7352
 14792  015BCE                     __end_of_delay_ms:
 14793                           	opt stack 0
 14794                           tblptru	equ	0xFF8
 14795                           tblptrh	equ	0xFF7
 14796                           tblptrl	equ	0xFF6
 14797                           tablat	equ	0xFF5
 14798                           prodh	equ	0xFF4
 14799                           prodl	equ	0xFF3
 14800                           intcon	equ	0xFF2
 14801                           postinc0	equ	0xFEE
 14802                           wreg	equ	0xFE8
 14803                           indf2	equ	0xFDF
 14804                           postinc2	equ	0xFDE
 14805                           fsr2h	equ	0xFDA
 14806                           fsr2l	equ	0xFD9
 14807                           status	equ	0xFD8
 14808                           
 14809 ;; *************** function ___wmul *****************
 14810 ;; Defined at:
 14811 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 14812 ;; Parameters:    Size  Location     Type
 14813 ;;  multiplier      2   18[BANK0 ] unsigned int 
 14814 ;;  multiplicand    2   20[BANK0 ] unsigned int 
 14815 ;; Auto vars:     Size  Location     Type
 14816 ;;  product         2   22[BANK0 ] unsigned int 
 14817 ;; Return value:  Size  Location     Type
 14818 ;;                  2   18[BANK0 ] unsigned int 
 14819 ;; Registers used:
 14820 ;;		wreg, status,2, status,0, prodl, prodh
 14821 ;; Tracked objects:
 14822 ;;		On entry : 0/0
 14823 ;;		On exit  : 0/0
 14824 ;;		Unchanged: 0/0
 14825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14826 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14829 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14830 ;;Total ram usage:        6 bytes
 14831 ;; Hardware stack levels used:    1
 14832 ;; Hardware stack levels required when called:    3
 14833 ;; This function calls:
 14834 ;;		Nothing
 14835 ;; This function is called by:
 14836 ;;		_delay_ms
 14837 ;;		_sprintf
 14838 ;; This function uses a non-reentrant model
 14839 ;;
 14840                           
 14841                           	psect	text39
 14842  015C06                     __ptext39:
 14843                           	opt stack 0
 14844  015C06                     ___wmul:
 14845                           	opt stack 26
 14846                           
 14847                           ; BSR set to: 0
 14848                           ;incstack = 0
 14849  015C06  0100               	movlb	0	; () banked
 14850  015C08  5172               	movf	___wmul@multiplier& (0+255),w,b
 14851  015C0A  0100               	movlb	0	; () banked
 14852  015C0C  0374               	mulwf	___wmul@multiplicand& (0+255),b
 14853  015C0E  CFF3 F076          	movff	prodl,___wmul@product
 14854  015C12  CFF4 F077          	movff	prodh,___wmul@product+1
 14855  015C16  0100               	movlb	0	; () banked
 14856  015C18  5172               	movf	___wmul@multiplier& (0+255),w,b
 14857  015C1A  0100               	movlb	0	; () banked
 14858  015C1C  0375               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14859  015C1E  50F3               	movf	prodl,w,c
 14860  015C20  0100               	movlb	0	; () banked
 14861  015C22  2777               	addwf	(___wmul@product+1)& (0+255),f,b
 14862  015C24  0100               	movlb	0	; () banked
 14863  015C26  5173               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14864  015C28  0100               	movlb	0	; () banked
 14865  015C2A  0374               	mulwf	___wmul@multiplicand& (0+255),b
 14866  015C2C  50F3               	movf	prodl,w,c
 14867  015C2E  0100               	movlb	0	; () banked
 14868  015C30  2777               	addwf	(___wmul@product+1)& (0+255),f,b
 14869                           
 14870                           ; BSR set to: 0
 14871  015C32  C076  F072         	movff	___wmul@product,?___wmul
 14872  015C36  C077  F073         	movff	___wmul@product+1,?___wmul+1
 14873  015C3A  0012               	return	
 14874  015C3C                     __end_of___wmul:
 14875                           	opt stack 0
 14876                           tblptru	equ	0xFF8
 14877                           tblptrh	equ	0xFF7
 14878                           tblptrl	equ	0xFF6
 14879                           tablat	equ	0xFF5
 14880                           prodh	equ	0xFF4
 14881                           prodl	equ	0xFF3
 14882                           intcon	equ	0xFF2
 14883                           postinc0	equ	0xFEE
 14884                           wreg	equ	0xFE8
 14885                           indf2	equ	0xFDF
 14886                           postinc2	equ	0xFDE
 14887                           fsr2h	equ	0xFDA
 14888                           fsr2l	equ	0xFD9
 14889                           status	equ	0xFD8
 14890                           
 14891 ;; *************** function _Joystick_Polling *****************
 14892 ;; Defined at:
 14893 ;;		line 417 in file "RemoteCan.c"
 14894 ;; Parameters:    Size  Location     Type
 14895 ;;		None
 14896 ;; Auto vars:     Size  Location     Type
 14897 ;;  i               1   19[BANK0 ] unsigned char 
 14898 ;; Return value:  Size  Location     Type
 14899 ;;		None               void
 14900 ;; Registers used:
 14901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14902 ;; Tracked objects:
 14903 ;;		On entry : 0/0
 14904 ;;		On exit  : 0/0
 14905 ;;		Unchanged: 0/0
 14906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14908 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14909 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14910 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14911 ;;Total ram usage:        2 bytes
 14912 ;; Hardware stack levels used:    1
 14913 ;; Hardware stack levels required when called:    3
 14914 ;; This function calls:
 14915 ;;		Nothing
 14916 ;; This function is called by:
 14917 ;;		_main
 14918 ;; This function uses a non-reentrant model
 14919 ;;
 14920                           
 14921                           	psect	text40
 14922  015A2E                     __ptext40:
 14923                           	opt stack 0
 14924  015A2E                     _Joystick_Polling:
 14925                           	opt stack 27
 14926                           
 14927                           ;RemoteCan.c: 418: for (unsigned char i = 0; i < 2; i++) {
 14928                           
 14929                           ; BSR set to: 0
 14930                           ;incstack = 0
 14931  015A2E  0E00               	movlw	0
 14932  015A30  0100               	movlb	0	; () banked
 14933  015A32  6F73               	movwf	Joystick_Polling@i& (0+255),b
 14934  015A34                     l6710:
 14935                           
 14936                           ; BSR set to: 0
 14937  015A34  0E01               	movlw	1
 14938  015A36  0100               	movlb	0	; () banked
 14939  015A38  6573               	cpfsgt	Joystick_Polling@i& (0+255),b
 14940  015A3A  D001               	goto	l868
 14941  015A3C  0012               	return	
 14942  015A3E                     l868:
 14943                           
 14944                           ; BSR set to: 0
 14945                           ;RemoteCan.c: 419: ADCON0bits.GO = 1;
 14946  015A3E  82C2               	bsf	4034,1,c	;volatile
 14947  015A40                     l870:
 14948  015A40  B2C2               	btfsc	4034,1,c	;volatile
 14949  015A42  D7FE               	goto	l870
 14950                           
 14951                           ;RemoteCan.c: 421: JoystickValues[i] = ADRESH;
 14952  015A44  0100               	movlb	0	; () banked
 14953  015A46  5173               	movf	Joystick_Polling@i& (0+255),w,b
 14954  015A48  0D01               	mullw	1
 14955  015A4A  0EDC               	movlw	low _JoystickValues
 14956  015A4C  24F3               	addwf	prodl,w,c
 14957  015A4E  6ED9               	movwf	fsr2l,c
 14958  015A50  0E00               	movlw	high _JoystickValues
 14959  015A52  20F4               	addwfc	prodh,w,c
 14960  015A54  6EDA               	movwf	fsr2h,c
 14961  015A56  CFC4 FFDF          	movff	4036,indf2	;volatile
 14962                           
 14963                           ; BSR set to: 0
 14964                           ;RemoteCan.c: 422: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 14965  015A5A  A4C2               	btfss	4034,2,c	;volatile
 14966  015A5C  D002               	goto	u8550
 14967  015A5E  0E01               	movlw	1
 14968  015A60  D001               	goto	u8556
 14969  015A62                     u8550:
 14970  015A62  0E00               	movlw	0
 14971  015A64                     u8556:
 14972  015A64  0AFF               	xorlw	255
 14973  015A66  0100               	movlb	0	; () banked
 14974  015A68  6F72               	movwf	??_Joystick_Polling& (0+255),b
 14975  015A6A  0100               	movlb	0	; () banked
 14976  015A6C  4772               	rlncf	??_Joystick_Polling& (0+255),f,b
 14977  015A6E  4772               	rlncf	??_Joystick_Polling& (0+255),f,b
 14978  015A70  50C2               	movf	4034,w,c	;volatile
 14979  015A72  0100               	movlb	0	; () banked
 14980  015A74  1972               	xorwf	??_Joystick_Polling& (0+255),w,b
 14981  015A76  0BFB               	andlw	-5
 14982  015A78  1972               	xorwf	??_Joystick_Polling& (0+255),w,b
 14983  015A7A  6EC2               	movwf	4034,c	;volatile
 14984                           
 14985                           ; BSR set to: 0
 14986  015A7C  0100               	movlb	0	; () banked
 14987  015A7E  2B73               	incf	Joystick_Polling@i& (0+255),f,b
 14988  015A80  D7D9               	goto	l6710
 14989  015A82                     __end_of_Joystick_Polling:
 14990                           	opt stack 0
 14991                           tblptru	equ	0xFF8
 14992                           tblptrh	equ	0xFF7
 14993                           tblptrl	equ	0xFF6
 14994                           tablat	equ	0xFF5
 14995                           prodh	equ	0xFF4
 14996                           prodl	equ	0xFF3
 14997                           intcon	equ	0xFF2
 14998                           postinc0	equ	0xFEE
 14999                           wreg	equ	0xFE8
 15000                           indf2	equ	0xFDF
 15001                           postinc2	equ	0xFDE
 15002                           fsr2h	equ	0xFDA
 15003                           fsr2l	equ	0xFD9
 15004                           status	equ	0xFD8
 15005                           
 15006 ;; *************** function _F2_Button_Polling *****************
 15007 ;; Defined at:
 15008 ;;		line 407 in file "RemoteCan.c"
 15009 ;; Parameters:    Size  Location     Type
 15010 ;;		None
 15011 ;; Auto vars:     Size  Location     Type
 15012 ;;		None
 15013 ;; Return value:  Size  Location     Type
 15014 ;;		None               void
 15015 ;; Registers used:
 15016 ;;		None
 15017 ;; Tracked objects:
 15018 ;;		On entry : 0/0
 15019 ;;		On exit  : 0/0
 15020 ;;		Unchanged: 0/0
 15021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15026 ;;Total ram usage:        0 bytes
 15027 ;; Hardware stack levels used:    1
 15028 ;; Hardware stack levels required when called:    3
 15029 ;; This function calls:
 15030 ;;		Nothing
 15031 ;; This function is called by:
 15032 ;;		_main
 15033 ;; This function uses a non-reentrant model
 15034 ;;
 15035                           
 15036                           	psect	text41
 15037  015DC0                     __ptext41:
 15038                           	opt stack 0
 15039  015DC0                     _F2_Button_Polling:
 15040                           	opt stack 27
 15041                           
 15042                           ;RemoteCan.c: 408: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 15043                           
 15044                           ; BSR set to: 0
 15045                           ;incstack = 0
 15046  015DC0  A281               	btfss	3969,1,c	;volatile
 15047  015DC2  D002               	goto	l863
 15048  015DC4  B64C               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15049  015DC6  0012               	return	
 15050  015DC8                     l863:
 15051                           
 15052                           ;RemoteCan.c: 409: wait_low_3 = 0;
 15053  015DC8  964C               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15054                           
 15055                           ;RemoteCan.c: 410: if (PORTBbits.RB1 == 1) {
 15056  015DCA  A281               	btfss	3969,1,c	;volatile
 15057  015DCC  0012               	return	
 15058                           
 15059                           ;RemoteCan.c: 411: F2_switch = ~F2_switch;
 15060  015DCE  B44B               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 15061  015DD0  D002               	goto	u8480
 15062  015DD2  844B               	bsf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 15063  015DD4  D001               	goto	u8495
 15064  015DD6                     u8480:
 15065  015DD6  944B               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 15066  015DD8                     u8495:
 15067                           
 15068                           ;RemoteCan.c: 412: wait_low_3 = 1;
 15069  015DD8  864C               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15070  015DDA  0012               	return	
 15071  015DDC                     __end_of_F2_Button_Polling:
 15072                           	opt stack 0
 15073                           tblptru	equ	0xFF8
 15074                           tblptrh	equ	0xFF7
 15075                           tblptrl	equ	0xFF6
 15076                           tablat	equ	0xFF5
 15077                           prodh	equ	0xFF4
 15078                           prodl	equ	0xFF3
 15079                           intcon	equ	0xFF2
 15080                           postinc0	equ	0xFEE
 15081                           wreg	equ	0xFE8
 15082                           indf2	equ	0xFDF
 15083                           postinc2	equ	0xFDE
 15084                           fsr2h	equ	0xFDA
 15085                           fsr2l	equ	0xFD9
 15086                           status	equ	0xFD8
 15087                           
 15088 ;; *************** function _F1_Button_Polling *****************
 15089 ;; Defined at:
 15090 ;;		line 397 in file "RemoteCan.c"
 15091 ;; Parameters:    Size  Location     Type
 15092 ;;		None
 15093 ;; Auto vars:     Size  Location     Type
 15094 ;;		None
 15095 ;; Return value:  Size  Location     Type
 15096 ;;		None               void
 15097 ;; Registers used:
 15098 ;;		None
 15099 ;; Tracked objects:
 15100 ;;		On entry : 0/0
 15101 ;;		On exit  : 0/0
 15102 ;;		Unchanged: 0/0
 15103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15108 ;;Total ram usage:        0 bytes
 15109 ;; Hardware stack levels used:    1
 15110 ;; Hardware stack levels required when called:    3
 15111 ;; This function calls:
 15112 ;;		Nothing
 15113 ;; This function is called by:
 15114 ;;		_main
 15115 ;; This function uses a non-reentrant model
 15116 ;;
 15117                           
 15118                           	psect	text42
 15119  015DDC                     __ptext42:
 15120                           	opt stack 0
 15121  015DDC                     _F1_Button_Polling:
 15122                           	opt stack 27
 15123                           
 15124                           ;RemoteCan.c: 398: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 15125                           
 15126                           ;incstack = 0
 15127  015DDC  A881               	btfss	3969,4,c	;volatile
 15128  015DDE  D002               	goto	l856
 15129  015DE0  B44C               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15130  015DE2  0012               	return	
 15131  015DE4                     l856:
 15132                           
 15133                           ;RemoteCan.c: 399: wait_low_2 = 0;
 15134  015DE4  944C               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15135                           
 15136                           ;RemoteCan.c: 400: if (PORTBbits.RB4 == 1) {
 15137  015DE6  A881               	btfss	3969,4,c	;volatile
 15138  015DE8  0012               	return	
 15139                           
 15140                           ;RemoteCan.c: 401: F1_switch = ~F1_switch;
 15141  015DEA  B24B               	btfsc	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 15142  015DEC  D002               	goto	u8430
 15143  015DEE  824B               	bsf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 15144  015DF0  D001               	goto	u8445
 15145  015DF2                     u8430:
 15146  015DF2  924B               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 15147  015DF4                     u8445:
 15148                           
 15149                           ;RemoteCan.c: 402: wait_low_2 = 1;
 15150  015DF4  844C               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15151  015DF6  0012               	return	
 15152  015DF8                     __end_of_F1_Button_Polling:
 15153                           	opt stack 0
 15154                           tblptru	equ	0xFF8
 15155                           tblptrh	equ	0xFF7
 15156                           tblptrl	equ	0xFF6
 15157                           tablat	equ	0xFF5
 15158                           prodh	equ	0xFF4
 15159                           prodl	equ	0xFF3
 15160                           intcon	equ	0xFF2
 15161                           postinc0	equ	0xFEE
 15162                           wreg	equ	0xFE8
 15163                           indf2	equ	0xFDF
 15164                           postinc2	equ	0xFDE
 15165                           fsr2h	equ	0xFDA
 15166                           fsr2l	equ	0xFD9
 15167                           status	equ	0xFD8
 15168                           
 15169 ;; *************** function _CAN_interpreter *****************
 15170 ;; Defined at:
 15171 ;;		line 353 in file "RemoteCan.c"
 15172 ;; Parameters:    Size  Location     Type
 15173 ;;		None
 15174 ;; Auto vars:     Size  Location     Type
 15175 ;;		None
 15176 ;; Return value:  Size  Location     Type
 15177 ;;		None               void
 15178 ;; Registers used:
 15179 ;;		wreg, status,2, status,0
 15180 ;; Tracked objects:
 15181 ;;		On entry : 0/0
 15182 ;;		On exit  : 0/0
 15183 ;;		Unchanged: 0/0
 15184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15187 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15188 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15189 ;;Total ram usage:        4 bytes
 15190 ;; Hardware stack levels used:    1
 15191 ;; Hardware stack levels required when called:    3
 15192 ;; This function calls:
 15193 ;;		Nothing
 15194 ;; This function is called by:
 15195 ;;		_main
 15196 ;; This function uses a non-reentrant model
 15197 ;;
 15198                           
 15199                           	psect	text43
 15200  01570E                     __ptext43:
 15201                           	opt stack 0
 15202  01570E                     _CAN_interpreter:
 15203                           	opt stack 27
 15204                           
 15205                           ;RemoteCan.c: 354: if (id == 0b00000000010) {
 15206                           
 15207                           ;incstack = 0
 15208  01570E  0E02               	movlw	2
 15209  015710  1812               	xorwf	_id,w,c	;volatile
 15210  015712  1013               	iorwf	_id+1,w,c	;volatile
 15211  015714  1014               	iorwf	_id+2,w,c	;volatile
 15212  015716  1015               	iorwf	_id+3,w,c	;volatile
 15213  015718  A4D8               	btfss	status,2,c
 15214  01571A  D015               	goto	l6738
 15215                           
 15216                           ;RemoteCan.c: 355: if (RTR_Flag == 1) {
 15217  01571C  A84B               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 15218  01571E  D00C               	goto	l6728
 15219                           
 15220                           ;RemoteCan.c: 356: pr_time_4 = time_counter;
 15221  015720  C022  F01A         	movff	_time_counter,_pr_time_4	;volatile
 15222  015724  C023  F01B         	movff	_time_counter+1,_pr_time_4+1	;volatile
 15223  015728  C024  F01C         	movff	_time_counter+2,_pr_time_4+2	;volatile
 15224  01572C  C025  F01D         	movff	_time_counter+3,_pr_time_4+3	;volatile
 15225                           
 15226                           ;RemoteCan.c: 357: MotoreFlag = 1;
 15227  015730  864B               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 15228                           
 15229                           ;RemoteCan.c: 358: AbsFlag = 0;
 15230  015732  904B               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 15231                           
 15232                           ;RemoteCan.c: 359: SterzoFlag = 0;
 15233  015734  9A4B               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 15234                           
 15235                           ;RemoteCan.c: 360: } else {
 15236  015736  D007               	goto	l6738
 15237  015738                     l6728:
 15238                           
 15239                           ;RemoteCan.c: 361: if (data[0] == 0x01) {
 15240  015738  042C               	decf	_data,w,c
 15241  01573A  B4D8               	btfsc	status,2,c
 15242                           
 15243                           ;RemoteCan.c: 362: AbsFlag = 1;
 15244  01573C  804B               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 15245                           
 15246                           ;RemoteCan.c: 363: }
 15247                           ;RemoteCan.c: 364: if (data[0] == 0x02) {
 15248  01573E  0E02               	movlw	2
 15249  015740  182C               	xorwf	_data,w,c
 15250  015742  B4D8               	btfsc	status,2,c
 15251                           
 15252                           ;RemoteCan.c: 365: SterzoFlag = 1;
 15253  015744  8A4B               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 15254  015746                     l6738:
 15255                           
 15256                           ;RemoteCan.c: 372: }
 15257                           ;RemoteCan.c: 374: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 15258  015746  0E06               	movlw	6
 15259  015748  1812               	xorwf	_id,w,c	;volatile
 15260  01574A  1013               	iorwf	_id+1,w,c	;volatile
 15261  01574C  1014               	iorwf	_id+2,w,c	;volatile
 15262  01574E  1015               	iorwf	_id+3,w,c	;volatile
 15263  015750  B4D8               	btfsc	status,2,c
 15264  015752  B84B               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 15265  015754  D027               	goto	l6750
 15266                           
 15267                           ;RemoteCan.c: 375: left_speed = data_speed_rx[1];
 15268  015756  C002  F026         	movff	_data_speed_rx+1,_left_speed
 15269  01575A  6A27               	clrf	_left_speed+1,c
 15270                           
 15271                           ;RemoteCan.c: 376: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 15272  01575C  5026               	movf	_left_speed,w,c
 15273  01575E  0100               	movlb	0	; () banked
 15274  015760  6F72               	movwf	??_CAN_interpreter& (0+255),b
 15275  015762  5001               	movf	_data_speed_rx,w,c
 15276  015764  6E26               	movwf	_left_speed,c
 15277  015766  C072  F027         	movff	??_CAN_interpreter,_left_speed+1
 15278                           
 15279                           ; BSR set to: 0
 15280                           ;RemoteCan.c: 377: right_speed = data_speed_rx[3];
 15281  01576A  C004  F028         	movff	_data_speed_rx+3,_right_speed
 15282  01576E  6A29               	clrf	_right_speed+1,c
 15283                           
 15284                           ;RemoteCan.c: 378: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 15285  015770  5028               	movf	_right_speed,w,c
 15286  015772  0100               	movlb	0	; () banked
 15287  015774  6F72               	movwf	??_CAN_interpreter& (0+255),b
 15288  015776  5003               	movf	_data_speed_rx+2,w,c
 15289  015778  6E28               	movwf	_right_speed,c
 15290  01577A  C072  F029         	movff	??_CAN_interpreter,_right_speed+1
 15291                           
 15292                           ; BSR set to: 0
 15293                           ;RemoteCan.c: 379: actual_speed = (right_speed + left_speed) / 2;
 15294  01577E  5026               	movf	_left_speed,w,c
 15295  015780  2428               	addwf	_right_speed,w,c
 15296  015782  0100               	movlb	0	; () banked
 15297  015784  6F72               	movwf	??_CAN_interpreter& (0+255),b
 15298  015786  5027               	movf	_left_speed+1,w,c
 15299  015788  2029               	addwfc	_right_speed+1,w,c
 15300  01578A  0100               	movlb	0	; () banked
 15301  01578C  6F73               	movwf	(??_CAN_interpreter+1)& (0+255),b
 15302  01578E  90D8               	bcf	status,0,c
 15303  015790  0100               	movlb	0	; () banked
 15304  015792  3173               	rrcf	(??_CAN_interpreter+1)& (0+255),w,b
 15305  015794  0100               	movlb	0	; () banked
 15306  015796  6F74               	movwf	(??_CAN_interpreter+2)& (0+255),b
 15307  015798  0100               	movlb	0	; () banked
 15308  01579A  3172               	rrcf	??_CAN_interpreter& (0+255),w,b
 15309  01579C  0100               	movlb	0	; () banked
 15310  01579E  6FDE               	movwf	_actual_speed& (0+255),b
 15311  0157A0  C074  F0DF         	movff	??_CAN_interpreter+2,_actual_speed+1
 15312  0157A4                     l6750:
 15313                           
 15314                           ;RemoteCan.c: 380: }
 15315                           ;RemoteCan.c: 382: if (id == 0b00000001001) {
 15316  0157A4  0E09               	movlw	9
 15317  0157A6  1812               	xorwf	_id,w,c	;volatile
 15318  0157A8  1013               	iorwf	_id+1,w,c	;volatile
 15319  0157AA  1014               	iorwf	_id+2,w,c	;volatile
 15320  0157AC  1015               	iorwf	_id+3,w,c	;volatile
 15321  0157AE  A4D8               	btfss	status,2,c
 15322  0157B0  0012               	return	
 15323                           
 15324                           ;RemoteCan.c: 383: battery = data[0];
 15325  0157B2  C02C  F02A         	movff	_data,_battery	;volatile
 15326  0157B6  0012               	return	
 15327  0157B8                     __end_of_CAN_interpreter:
 15328                           	opt stack 0
 15329                           tblptru	equ	0xFF8
 15330                           tblptrh	equ	0xFF7
 15331                           tblptrl	equ	0xFF6
 15332                           tablat	equ	0xFF5
 15333                           prodh	equ	0xFF4
 15334                           prodl	equ	0xFF3
 15335                           intcon	equ	0xFF2
 15336                           postinc0	equ	0xFEE
 15337                           wreg	equ	0xFE8
 15338                           indf2	equ	0xFDF
 15339                           postinc2	equ	0xFDE
 15340                           fsr2h	equ	0xFDA
 15341                           fsr2l	equ	0xFD9
 15342                           status	equ	0xFD8
 15343                           
 15344 ;; *************** function _CAN_Send *****************
 15345 ;; Defined at:
 15346 ;;		line 288 in file "RemoteCan.c"
 15347 ;; Parameters:    Size  Location     Type
 15348 ;;		None
 15349 ;; Auto vars:     Size  Location     Type
 15350 ;;		None
 15351 ;; Return value:  Size  Location     Type
 15352 ;;		None               void
 15353 ;; Registers used:
 15354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15355 ;; Tracked objects:
 15356 ;;		On entry : 0/0
 15357 ;;		On exit  : 0/0
 15358 ;;		Unchanged: 0/0
 15359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15364 ;;Total ram usage:        0 bytes
 15365 ;; Hardware stack levels used:    1
 15366 ;; Hardware stack levels required when called:    4
 15367 ;; This function calls:
 15368 ;;		_CANisTxReady
 15369 ;;		_CANsendMessage
 15370 ;; This function is called by:
 15371 ;;		_main
 15372 ;; This function uses a non-reentrant model
 15373 ;;
 15374                           
 15375                           	psect	text44
 15376  015654                     __ptext44:
 15377                           	opt stack 0
 15378  015654                     _CAN_Send:
 15379                           	opt stack 26
 15380  015654                     l6690:
 15381  015654  EC92  F0AE         	call	_CANisTxReady	;wreg free
 15382  015658  06E8               	decf	wreg,f,c
 15383  01565A  A4D8               	btfss	status,2,c
 15384  01565C  D7FB               	goto	l6690
 15385                           
 15386                           ;RemoteCan.c: 290: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 15387  01565E  0E05               	movlw	5
 15388  015660  0100               	movlb	0	; () banked
 15389  015662  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 15390  015664  0E00               	movlw	0
 15391  015666  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15392  015668  0E00               	movlw	0
 15393  01566A  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15394  01566C  0E00               	movlw	0
 15395  01566E  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15396  015670  0EEB               	movlw	low _data_steering
 15397  015672  0100               	movlb	0	; () banked
 15398  015674  6F76               	movwf	CANsendMessage@data& (0+255),b
 15399  015676  0E00               	movlw	high _data_steering
 15400  015678  0100               	movlb	0	; () banked
 15401  01567A  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 15402  01567C  0E08               	movlw	8
 15403  01567E  0100               	movlb	0	; () banked
 15404  015680  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 15405  015682  0EBC               	movlw	188
 15406  015684  0100               	movlb	0	; () banked
 15407  015686  6F79               	movwf	CANsendMessage@flags& (0+255),b
 15408  015688  ECCD  F089         	call	_CANsendMessage	;wreg free
 15409                           
 15410                           ;RemoteCan.c: 291: data_speed[0] = set_speed;
 15411  01568C  C0E2  F0EA         	movff	_set_speed,_data_speed	;volatile
 15412                           
 15413                           ;RemoteCan.c: 292: data_speed[1] = (set_speed >> 8);
 15414  015690  0100               	movlb	0	; () banked
 15415  015692  51E3               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 15416  015694  0100               	movlb	0	; () banked
 15417  015696  6FEB               	movwf	(_data_speed+1)& (0+255),b
 15418                           
 15419                           ; BSR set to: 0
 15420                           ;RemoteCan.c: 293: data_speed[2] = dir;
 15421  015698  C0E4  F0EC         	movff	_dir,_data_speed+2	;volatile
 15422  01569C                     l6700:
 15423  01569C  EC92  F0AE         	call	_CANisTxReady	;wreg free
 15424  0156A0  06E8               	decf	wreg,f,c
 15425  0156A2  A4D8               	btfss	status,2,c
 15426  0156A4  D7FB               	goto	l6700
 15427                           
 15428                           ;RemoteCan.c: 295: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 15429  0156A6  0E03               	movlw	3
 15430  0156A8  0100               	movlb	0	; () banked
 15431  0156AA  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 15432  0156AC  0E00               	movlw	0
 15433  0156AE  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15434  0156B0  0E00               	movlw	0
 15435  0156B2  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15436  0156B4  0E00               	movlw	0
 15437  0156B6  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15438  0156B8  0EEA               	movlw	low _data_speed
 15439  0156BA  0100               	movlb	0	; () banked
 15440  0156BC  6F76               	movwf	CANsendMessage@data& (0+255),b
 15441  0156BE  0E00               	movlw	high _data_speed
 15442  0156C0  0100               	movlb	0	; () banked
 15443  0156C2  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 15444  0156C4  0E08               	movlw	8
 15445  0156C6  0100               	movlb	0	; () banked
 15446  0156C8  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 15447  0156CA  0EBC               	movlw	188
 15448  0156CC  0100               	movlb	0	; () banked
 15449  0156CE  6F79               	movwf	CANsendMessage@flags& (0+255),b
 15450  0156D0  ECCD  F089         	call	_CANsendMessage	;wreg free
 15451  0156D4                     l6704:
 15452  0156D4  EC92  F0AE         	call	_CANisTxReady	;wreg free
 15453  0156D8  06E8               	decf	wreg,f,c
 15454  0156DA  A4D8               	btfss	status,2,c
 15455  0156DC  D7FB               	goto	l6704
 15456                           
 15457                           ;RemoteCan.c: 297: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_1);
 15458  0156DE  0E04               	movlw	4
 15459  0156E0  0100               	movlb	0	; () banked
 15460  0156E2  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 15461  0156E4  0E00               	movlw	0
 15462  0156E6  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15463  0156E8  0E00               	movlw	0
 15464  0156EA  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15465  0156EC  0E00               	movlw	0
 15466  0156EE  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15467  0156F0  0EE9               	movlw	low _data_brake
 15468  0156F2  0100               	movlb	0	; () banked
 15469  0156F4  6F76               	movwf	CANsendMessage@data& (0+255),b
 15470  0156F6  0E00               	movlw	high _data_brake
 15471  0156F8  0100               	movlb	0	; () banked
 15472  0156FA  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 15473  0156FC  0E08               	movlw	8
 15474  0156FE  0100               	movlb	0	; () banked
 15475  015700  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 15476  015702  0EBD               	movlw	189
 15477  015704  0100               	movlb	0	; () banked
 15478  015706  6F79               	movwf	CANsendMessage@flags& (0+255),b
 15479  015708  ECCD  F089         	call	_CANsendMessage	;wreg free
 15480  01570C  0012               	return		;funcret
 15481  01570E                     __end_of_CAN_Send:
 15482                           	opt stack 0
 15483                           tblptru	equ	0xFF8
 15484                           tblptrh	equ	0xFF7
 15485                           tblptrl	equ	0xFF6
 15486                           tablat	equ	0xFF5
 15487                           prodh	equ	0xFF4
 15488                           prodl	equ	0xFF3
 15489                           intcon	equ	0xFF2
 15490                           postinc0	equ	0xFEE
 15491                           wreg	equ	0xFE8
 15492                           indf2	equ	0xFDF
 15493                           postinc2	equ	0xFDE
 15494                           fsr2h	equ	0xFDA
 15495                           fsr2l	equ	0xFD9
 15496                           status	equ	0xFD8
 15497                           
 15498 ;; *************** function _CANsendMessage *****************
 15499 ;; Defined at:
 15500 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 15501 ;; Parameters:    Size  Location     Type
 15502 ;;  identifier      4   18[BANK0 ] unsigned long 
 15503 ;;  data            2   22[BANK0 ] PTR unsigned char 
 15504 ;;		 -> data_speed(1), park_assist_state(8), data_brake(1), data_steering(1), 
 15505 ;;		 -> data(1), 
 15506 ;;  dataLength      1   24[BANK0 ] unsigned char 
 15507 ;;  flags           1   25[BANK0 ] enum E16909
 15508 ;; Auto vars:     Size  Location     Type
 15509 ;;  tamp            4   30[BANK0 ] unsigned long 
 15510 ;; Return value:  Size  Location     Type
 15511 ;;		None               void
 15512 ;; Registers used:
 15513 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15514 ;; Tracked objects:
 15515 ;;		On entry : 0/0
 15516 ;;		On exit  : 0/0
 15517 ;;		Unchanged: 0/0
 15518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15519 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15520 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15521 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15522 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15523 ;;Total ram usage:       16 bytes
 15524 ;; Hardware stack levels used:    1
 15525 ;; Hardware stack levels required when called:    3
 15526 ;; This function calls:
 15527 ;;		Nothing
 15528 ;; This function is called by:
 15529 ;;		_main
 15530 ;;		_CAN_Send
 15531 ;;		_LCD_Handler
 15532 ;; This function uses a non-reentrant model
 15533 ;;
 15534                           
 15535                           	psect	text45
 15536  01139A                     __ptext45:
 15537                           	opt stack 0
 15538  01139A                     _CANsendMessage:
 15539                           	opt stack 26
 15540                           
 15541                           ;inc\CANlib.h: 296: unsigned long tamp;
 15542                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 15543                           
 15544                           ;incstack = 0
 15545  01139A  010F               	movlb	15	; () banked
 15546  01139C  B740               	btfsc	64,3,b	;volatile
 15547  01139E  D13F               	goto	l375
 15548                           
 15549                           ; BSR set to: 15
 15550                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 15551  0113A0  C078  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 15552                           
 15553                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 15554  0113A4  0100               	movlb	0	; () banked
 15555  0113A6  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 15556  0113A8  D003               	goto	l376
 15557                           
 15558                           ; BSR set to: 0
 15559                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 15560  0113AA  010F               	movlb	15	; () banked
 15561  0113AC  8D45               	bsf	69,6,b	;volatile
 15562  0113AE  D002               	goto	l377
 15563  0113B0                     l376:
 15564                           
 15565                           ; BSR set to: 0
 15566                           ;inc\CANlib.h: 302: else
 15567                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 15568  0113B0  010F               	movlb	15	; () banked
 15569  0113B2  9D45               	bcf	69,6,b	;volatile
 15570  0113B4                     l377:
 15571                           
 15572                           ; BSR set to: 15
 15573                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 15574  0113B4  0100               	movlb	0	; () banked
 15575  0113B6  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 15576  0113B8  D079               	goto	l378
 15577                           
 15578                           ; BSR set to: 0
 15579                           ;inc\CANlib.h: 306: {
 15580                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 15581  0113BA  0100               	movlb	0	; () banked
 15582  0113BC  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 15583  0113BE  0100               	movlb	0	; () banked
 15584  0113C0  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 15585  0113C2  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15586  0113C4  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15587  0113C6  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15588                           
 15589                           ; BSR set to: 0
 15590                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 15591  0113C8  C07E  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 15592                           
 15593                           ; BSR set to: 0
 15594                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 15595  0113CC  0E00               	movlw	0
 15596  0113CE  0100               	movlb	0	; () banked
 15597  0113D0  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 15598  0113D2  0100               	movlb	0	; () banked
 15599  0113D4  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 15600  0113D6  0EFF               	movlw	255
 15601  0113D8  0100               	movlb	0	; () banked
 15602  0113DA  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15603  0113DC  0100               	movlb	0	; () banked
 15604  0113DE  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15605  0113E0  0E00               	movlw	0
 15606  0113E2  0100               	movlb	0	; () banked
 15607  0113E4  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15608  0113E6  0100               	movlb	0	; () banked
 15609  0113E8  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15610  0113EA  0E00               	movlw	0
 15611  0113EC  0100               	movlb	0	; () banked
 15612  0113EE  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15613  0113F0  0100               	movlb	0	; () banked
 15614  0113F2  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15615                           
 15616                           ; BSR set to: 0
 15617                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 15618  0113F4  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 15619  0113F8  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15620  0113FC  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15621  011400  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15622  011404  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 15623  011408  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 15624  01140C  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 15625  011410  0100               	movlb	0	; () banked
 15626  011412  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 15627  011414  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 15628  011418  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15629  01141C  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15630  011420  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15631                           
 15632                           ; BSR set to: 0
 15633                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 15634  011424  C07E  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 15635                           
 15636                           ; BSR set to: 0
 15637                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 15638  011428  0E00               	movlw	0
 15639  01142A  010F               	movlb	15	; () banked
 15640  01142C  6F42               	movwf	66,b	;volatile
 15641                           
 15642                           ; BSR set to: 15
 15643                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 15644  01142E  010F               	movlb	15	; () banked
 15645  011430  8742               	bsf	66,3,b	;volatile
 15646                           
 15647                           ; BSR set to: 15
 15648                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 15649  011432  0100               	movlb	0	; () banked
 15650  011434  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 15651  011436  D002               	goto	l379
 15652                           
 15653                           ; BSR set to: 0
 15654                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 15655  011438  010F               	movlb	15	; () banked
 15656  01143A  8142               	bsf	66,0,b	;volatile
 15657  01143C                     l379:
 15658                           
 15659                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 15660  01143C  0100               	movlb	0	; () banked
 15661  01143E  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 15662  011440  D002               	goto	l380
 15663                           
 15664                           ; BSR set to: 0
 15665                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 15666  011442  010F               	movlb	15	; () banked
 15667  011444  8342               	bsf	66,1,b	;volatile
 15668  011446                     l380:
 15669                           
 15670                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 15671  011446  0100               	movlb	0	; () banked
 15672  011448  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 15673  01144A  D002               	goto	l381
 15674                           
 15675                           ; BSR set to: 0
 15676                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 15677  01144C  010F               	movlb	15	; () banked
 15678  01144E  8B42               	bsf	66,5,b	;volatile
 15679  011450                     l381:
 15680                           
 15681                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 15682  011450  0100               	movlb	0	; () banked
 15683  011452  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 15684  011454  D002               	goto	l382
 15685                           
 15686                           ; BSR set to: 0
 15687                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 15688  011456  010F               	movlb	15	; () banked
 15689  011458  8D42               	bsf	66,6,b	;volatile
 15690  01145A                     l382:
 15691                           
 15692                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 15693  01145A  0100               	movlb	0	; () banked
 15694  01145C  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 15695  01145E  D002               	goto	l5842
 15696                           
 15697                           ; BSR set to: 0
 15698                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 15699  011460  010F               	movlb	15	; () banked
 15700  011462  8F42               	bsf	66,7,b	;volatile
 15701  011464                     l5842:
 15702                           
 15703                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 15704  011464  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 15705  011468  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15706  01146C  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15707  011470  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15708  011474  0E16               	movlw	22
 15709  011476  D006               	goto	u7180
 15710  011478                     u7185:
 15711  011478  0100               	movlb	0	; () banked
 15712  01147A  90D8               	bcf	status,0,c
 15713  01147C  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15714  01147E  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15715  011480  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15716  011482  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 15717  011484                     u7180:
 15718  011484  2EE8               	decfsz	wreg,f,c
 15719  011486  D7F8               	goto	u7185
 15720  011488  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 15721  01148C  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15722  011490  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15723  011494  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15724                           
 15725                           ; BSR set to: 0
 15726                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 15727  011498  0100               	movlb	0	; () banked
 15728  01149A  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 15729  01149C  0100               	movlb	0	; () banked
 15730  01149E  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 15731  0114A0  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15732  0114A2  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15733  0114A4  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15734                           
 15735                           ; BSR set to: 0
 15736                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 15737  0114A6  C07E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 15738                           
 15739                           ;inc\CANlib.h: 332: }
 15740  0114AA  D059               	goto	l5862
 15741  0114AC                     l378:
 15742                           
 15743                           ; BSR set to: 0
 15744                           ;inc\CANlib.h: 334: else
 15745                           ;inc\CANlib.h: 336: {
 15746                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 15747  0114AC  010F               	movlb	15	; () banked
 15748  0114AE  9742               	bcf	66,3,b	;volatile
 15749                           
 15750                           ; BSR set to: 15
 15751                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 15752  0114B0  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 15753  0114B4  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15754  0114B8  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15755  0114BC  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15756  0114C0  0E04               	movlw	4
 15757  0114C2  D006               	goto	u7190
 15758  0114C4                     u7195:
 15759  0114C4  0100               	movlb	0	; () banked
 15760  0114C6  90D8               	bcf	status,0,c
 15761  0114C8  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15762  0114CA  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15763  0114CC  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15764  0114CE  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 15765  0114D0                     u7190:
 15766  0114D0  2EE8               	decfsz	wreg,f,c
 15767  0114D2  D7F8               	goto	u7195
 15768  0114D4  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 15769  0114D8  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15770  0114DC  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15771  0114E0  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15772                           
 15773                           ; BSR set to: 0
 15774                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 15775  0114E4  0100               	movlb	0	; () banked
 15776  0114E6  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 15777  0114E8  0100               	movlb	0	; () banked
 15778  0114EA  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 15779  0114EC  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15780  0114EE  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15781  0114F0  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15782                           
 15783                           ; BSR set to: 0
 15784                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 15785  0114F2  C07E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 15786                           
 15787                           ; BSR set to: 0
 15788                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 15789  0114F6  0E07               	movlw	7
 15790  0114F8  0100               	movlb	0	; () banked
 15791  0114FA  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 15792  0114FC  0100               	movlb	0	; () banked
 15793  0114FE  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 15794  011500  0E00               	movlw	0
 15795  011502  0100               	movlb	0	; () banked
 15796  011504  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15797  011506  0100               	movlb	0	; () banked
 15798  011508  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15799  01150A  0E00               	movlw	0
 15800  01150C  0100               	movlb	0	; () banked
 15801  01150E  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15802  011510  0100               	movlb	0	; () banked
 15803  011512  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15804  011514  0E00               	movlw	0
 15805  011516  0100               	movlb	0	; () banked
 15806  011518  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15807  01151A  0100               	movlb	0	; () banked
 15808  01151C  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15809                           
 15810                           ; BSR set to: 0
 15811                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 15812  01151E  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 15813  011522  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15814  011526  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15815  01152A  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15816  01152E  0E05               	movlw	5
 15817  011530                     u7205:
 15818  011530  90D8               	bcf	status,0,c
 15819  011532  0100               	movlb	0	; () banked
 15820  011534  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 15821  011536  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 15822  011538  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 15823  01153A  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 15824  01153C  2EE8               	decfsz	wreg,f,c
 15825  01153E  D7F8               	goto	u7205
 15826  011540  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 15827  011544  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15828  011548  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15829  01154C  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15830                           
 15831                           ; BSR set to: 0
 15832                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 15833  011550  010F               	movlb	15	; () banked
 15834  011552  5142               	movf	66,w,b	;volatile
 15835  011554  0B1F               	andlw	31
 15836  011556  010F               	movlb	15	; () banked
 15837  011558  6F42               	movwf	66,b	;volatile
 15838                           
 15839                           ; BSR set to: 15
 15840                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 15841  01155A  C07E  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 15842  01155E                     l5862:
 15843                           
 15844                           ;inc\CANlib.h: 347: }
 15845                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 15846  01155E  0100               	movlb	0	; () banked
 15847  011560  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 15848  011562  D003               	goto	l385
 15849                           
 15850                           ; BSR set to: 0
 15851                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 15852  011564  010F               	movlb	15	; () banked
 15853  011566  8140               	bsf	64,0,b	;volatile
 15854  011568  D002               	goto	l386
 15855  01156A                     l385:
 15856                           
 15857                           ; BSR set to: 0
 15858                           ;inc\CANlib.h: 351: else
 15859                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 15860  01156A  010F               	movlb	15	; () banked
 15861  01156C  9140               	bcf	64,0,b	;volatile
 15862  01156E                     l386:
 15863                           
 15864                           ; BSR set to: 15
 15865                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 15866  01156E  0100               	movlb	0	; () banked
 15867  011570  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 15868  011572  D003               	goto	l387
 15869                           
 15870                           ; BSR set to: 0
 15871                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 15872  011574  010F               	movlb	15	; () banked
 15873  011576  8340               	bsf	64,1,b	;volatile
 15874  011578  D002               	goto	l5868
 15875  01157A                     l387:
 15876                           
 15877                           ; BSR set to: 0
 15878                           ;inc\CANlib.h: 355: else
 15879                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 15880  01157A  010F               	movlb	15	; () banked
 15881  01157C  9340               	bcf	64,1,b	;volatile
 15882  01157E                     l5868:
 15883                           
 15884                           ; BSR set to: 15
 15885                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 15886  01157E  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 15887  011582  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 15888  011586  50DF               	movf	indf2,w,c
 15889  011588  010F               	movlb	15	; () banked
 15890  01158A  6F46               	movwf	70,b	;volatile
 15891                           
 15892                           ; BSR set to: 15
 15893                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 15894  01158C  0100               	movlb	0	; () banked
 15895  01158E  EE20 F001          	lfsr	2,1
 15896  011592  5176               	movf	CANsendMessage@data& (0+255),w,b
 15897  011594  26D9               	addwf	fsr2l,f,c
 15898  011596  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15899  011598  22DA               	addwfc	fsr2h,f,c
 15900  01159A  50DF               	movf	indf2,w,c
 15901  01159C  010F               	movlb	15	; () banked
 15902  01159E  6F47               	movwf	71,b	;volatile
 15903                           
 15904                           ; BSR set to: 15
 15905                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 15906  0115A0  0100               	movlb	0	; () banked
 15907  0115A2  EE20 F002          	lfsr	2,2
 15908  0115A6  5176               	movf	CANsendMessage@data& (0+255),w,b
 15909  0115A8  26D9               	addwf	fsr2l,f,c
 15910  0115AA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15911  0115AC  22DA               	addwfc	fsr2h,f,c
 15912  0115AE  50DF               	movf	indf2,w,c
 15913  0115B0  010F               	movlb	15	; () banked
 15914  0115B2  6F48               	movwf	72,b	;volatile
 15915                           
 15916                           ; BSR set to: 15
 15917                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 15918  0115B4  0100               	movlb	0	; () banked
 15919  0115B6  EE20 F003          	lfsr	2,3
 15920  0115BA  5176               	movf	CANsendMessage@data& (0+255),w,b
 15921  0115BC  26D9               	addwf	fsr2l,f,c
 15922  0115BE  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15923  0115C0  22DA               	addwfc	fsr2h,f,c
 15924  0115C2  50DF               	movf	indf2,w,c
 15925  0115C4  010F               	movlb	15	; () banked
 15926  0115C6  6F49               	movwf	73,b	;volatile
 15927                           
 15928                           ; BSR set to: 15
 15929                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 15930  0115C8  0100               	movlb	0	; () banked
 15931  0115CA  EE20 F004          	lfsr	2,4
 15932  0115CE  5176               	movf	CANsendMessage@data& (0+255),w,b
 15933  0115D0  26D9               	addwf	fsr2l,f,c
 15934  0115D2  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15935  0115D4  22DA               	addwfc	fsr2h,f,c
 15936  0115D6  50DF               	movf	indf2,w,c
 15937  0115D8  010F               	movlb	15	; () banked
 15938  0115DA  6F4A               	movwf	74,b	;volatile
 15939                           
 15940                           ; BSR set to: 15
 15941                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 15942  0115DC  0100               	movlb	0	; () banked
 15943  0115DE  EE20 F005          	lfsr	2,5
 15944  0115E2  5176               	movf	CANsendMessage@data& (0+255),w,b
 15945  0115E4  26D9               	addwf	fsr2l,f,c
 15946  0115E6  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15947  0115E8  22DA               	addwfc	fsr2h,f,c
 15948  0115EA  50DF               	movf	indf2,w,c
 15949  0115EC  010F               	movlb	15	; () banked
 15950  0115EE  6F4B               	movwf	75,b	;volatile
 15951                           
 15952                           ; BSR set to: 15
 15953                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 15954  0115F0  0100               	movlb	0	; () banked
 15955  0115F2  EE20 F006          	lfsr	2,6
 15956  0115F6  5176               	movf	CANsendMessage@data& (0+255),w,b
 15957  0115F8  26D9               	addwf	fsr2l,f,c
 15958  0115FA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15959  0115FC  22DA               	addwfc	fsr2h,f,c
 15960  0115FE  50DF               	movf	indf2,w,c
 15961  011600  010F               	movlb	15	; () banked
 15962  011602  6F4C               	movwf	76,b	;volatile
 15963                           
 15964                           ; BSR set to: 15
 15965                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 15966  011604  0100               	movlb	0	; () banked
 15967  011606  EE20 F007          	lfsr	2,7
 15968  01160A  5176               	movf	CANsendMessage@data& (0+255),w,b
 15969  01160C  26D9               	addwf	fsr2l,f,c
 15970  01160E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15971  011610  22DA               	addwfc	fsr2h,f,c
 15972  011612  50DF               	movf	indf2,w,c
 15973  011614  010F               	movlb	15	; () banked
 15974  011616  6F4D               	movwf	77,b	;volatile
 15975                           
 15976                           ; BSR set to: 15
 15977                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 15978  011618  010F               	movlb	15	; () banked
 15979  01161A  8740               	bsf	64,3,b	;volatile
 15980                           
 15981                           ; BSR set to: 15
 15982                           ;inc\CANlib.h: 368: return;
 15983  01161C  0012               	return	
 15984  01161E                     l375:
 15985                           
 15986                           ; BSR set to: 15
 15987                           ;inc\CANlib.h: 369: }
 15988                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 15989  01161E  010F               	movlb	15	; () banked
 15990  011620  B730               	btfsc	48,3,b	;volatile
 15991  011622  D13F               	goto	l390
 15992                           
 15993                           ; BSR set to: 15
 15994                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 15995  011624  C078  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 15996                           
 15997                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 15998  011628  0100               	movlb	0	; () banked
 15999  01162A  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 16000  01162C  D003               	goto	l391
 16001                           
 16002                           ; BSR set to: 0
 16003                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 16004  01162E  010F               	movlb	15	; () banked
 16005  011630  8D35               	bsf	53,6,b	;volatile
 16006  011632  D002               	goto	l392
 16007  011634                     l391:
 16008                           
 16009                           ; BSR set to: 0
 16010                           ;inc\CANlib.h: 378: else
 16011                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 16012  011634  010F               	movlb	15	; () banked
 16013  011636  9D35               	bcf	53,6,b	;volatile
 16014  011638                     l392:
 16015                           
 16016                           ; BSR set to: 15
 16017                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 16018  011638  0100               	movlb	0	; () banked
 16019  01163A  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 16020  01163C  D079               	goto	l393
 16021                           
 16022                           ; BSR set to: 0
 16023                           ;inc\CANlib.h: 382: {
 16024                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 16025  01163E  0100               	movlb	0	; () banked
 16026  011640  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 16027  011642  0100               	movlb	0	; () banked
 16028  011644  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16029  011646  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16030  011648  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16031  01164A  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16032                           
 16033                           ; BSR set to: 0
 16034                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 16035  01164C  C07E  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 16036                           
 16037                           ; BSR set to: 0
 16038                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 16039  011650  0E00               	movlw	0
 16040  011652  0100               	movlb	0	; () banked
 16041  011654  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 16042  011656  0100               	movlb	0	; () banked
 16043  011658  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16044  01165A  0EFF               	movlw	255
 16045  01165C  0100               	movlb	0	; () banked
 16046  01165E  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16047  011660  0100               	movlb	0	; () banked
 16048  011662  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16049  011664  0E00               	movlw	0
 16050  011666  0100               	movlb	0	; () banked
 16051  011668  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16052  01166A  0100               	movlb	0	; () banked
 16053  01166C  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16054  01166E  0E00               	movlw	0
 16055  011670  0100               	movlb	0	; () banked
 16056  011672  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16057  011674  0100               	movlb	0	; () banked
 16058  011676  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16059                           
 16060                           ; BSR set to: 0
 16061                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 16062  011678  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 16063  01167C  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16064  011680  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16065  011684  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16066  011688  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 16067  01168C  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16068  011690  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16069  011694  0100               	movlb	0	; () banked
 16070  011696  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 16071  011698  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16072  01169C  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16073  0116A0  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16074  0116A4  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16075                           
 16076                           ; BSR set to: 0
 16077                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 16078  0116A8  C07E  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 16079                           
 16080                           ; BSR set to: 0
 16081                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 16082  0116AC  0E00               	movlw	0
 16083  0116AE  010F               	movlb	15	; () banked
 16084  0116B0  6F32               	movwf	50,b	;volatile
 16085                           
 16086                           ; BSR set to: 15
 16087                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 16088  0116B2  010F               	movlb	15	; () banked
 16089  0116B4  8732               	bsf	50,3,b	;volatile
 16090                           
 16091                           ; BSR set to: 15
 16092                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 16093  0116B6  0100               	movlb	0	; () banked
 16094  0116B8  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16095  0116BA  D002               	goto	l394
 16096                           
 16097                           ; BSR set to: 0
 16098                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 16099  0116BC  010F               	movlb	15	; () banked
 16100  0116BE  8132               	bsf	50,0,b	;volatile
 16101  0116C0                     l394:
 16102                           
 16103                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 16104  0116C0  0100               	movlb	0	; () banked
 16105  0116C2  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16106  0116C4  D002               	goto	l395
 16107                           
 16108                           ; BSR set to: 0
 16109                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 16110  0116C6  010F               	movlb	15	; () banked
 16111  0116C8  8332               	bsf	50,1,b	;volatile
 16112  0116CA                     l395:
 16113                           
 16114                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 16115  0116CA  0100               	movlb	0	; () banked
 16116  0116CC  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16117  0116CE  D002               	goto	l396
 16118                           
 16119                           ; BSR set to: 0
 16120                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 16121  0116D0  010F               	movlb	15	; () banked
 16122  0116D2  8B32               	bsf	50,5,b	;volatile
 16123  0116D4                     l396:
 16124                           
 16125                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 16126  0116D4  0100               	movlb	0	; () banked
 16127  0116D6  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16128  0116D8  D002               	goto	l397
 16129                           
 16130                           ; BSR set to: 0
 16131                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 16132  0116DA  010F               	movlb	15	; () banked
 16133  0116DC  8D32               	bsf	50,6,b	;volatile
 16134  0116DE                     l397:
 16135                           
 16136                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 16137  0116DE  0100               	movlb	0	; () banked
 16138  0116E0  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16139  0116E2  D002               	goto	l5918
 16140                           
 16141                           ; BSR set to: 0
 16142                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 16143  0116E4  010F               	movlb	15	; () banked
 16144  0116E6  8F32               	bsf	50,7,b	;volatile
 16145  0116E8                     l5918:
 16146                           
 16147                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 16148  0116E8  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 16149  0116EC  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16150  0116F0  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16151  0116F4  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16152  0116F8  0E16               	movlw	22
 16153  0116FA  D006               	goto	u7310
 16154  0116FC                     u7315:
 16155  0116FC  0100               	movlb	0	; () banked
 16156  0116FE  90D8               	bcf	status,0,c
 16157  011700  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16158  011702  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16159  011704  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16160  011706  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 16161  011708                     u7310:
 16162  011708  2EE8               	decfsz	wreg,f,c
 16163  01170A  D7F8               	goto	u7315
 16164  01170C  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16165  011710  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16166  011714  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16167  011718  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16168                           
 16169                           ; BSR set to: 0
 16170                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 16171  01171C  0100               	movlb	0	; () banked
 16172  01171E  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 16173  011720  0100               	movlb	0	; () banked
 16174  011722  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16175  011724  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16176  011726  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16177  011728  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16178                           
 16179                           ; BSR set to: 0
 16180                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 16181  01172A  C07E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 16182                           
 16183                           ;inc\CANlib.h: 407: }
 16184  01172E  D059               	goto	l5938
 16185  011730                     l393:
 16186                           
 16187                           ; BSR set to: 0
 16188                           ;inc\CANlib.h: 409: else
 16189                           ;inc\CANlib.h: 411: {
 16190                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 16191  011730  010F               	movlb	15	; () banked
 16192  011732  9732               	bcf	50,3,b	;volatile
 16193                           
 16194                           ; BSR set to: 15
 16195                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 16196  011734  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 16197  011738  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16198  01173C  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16199  011740  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16200  011744  0E04               	movlw	4
 16201  011746  D006               	goto	u7320
 16202  011748                     u7325:
 16203  011748  0100               	movlb	0	; () banked
 16204  01174A  90D8               	bcf	status,0,c
 16205  01174C  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16206  01174E  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16207  011750  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16208  011752  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 16209  011754                     u7320:
 16210  011754  2EE8               	decfsz	wreg,f,c
 16211  011756  D7F8               	goto	u7325
 16212  011758  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16213  01175C  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16214  011760  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16215  011764  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16216                           
 16217                           ; BSR set to: 0
 16218                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 16219  011768  0100               	movlb	0	; () banked
 16220  01176A  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 16221  01176C  0100               	movlb	0	; () banked
 16222  01176E  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16223  011770  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16224  011772  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16225  011774  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16226                           
 16227                           ; BSR set to: 0
 16228                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 16229  011776  C07E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 16230                           
 16231                           ; BSR set to: 0
 16232                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 16233  01177A  0E07               	movlw	7
 16234  01177C  0100               	movlb	0	; () banked
 16235  01177E  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 16236  011780  0100               	movlb	0	; () banked
 16237  011782  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16238  011784  0E00               	movlw	0
 16239  011786  0100               	movlb	0	; () banked
 16240  011788  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16241  01178A  0100               	movlb	0	; () banked
 16242  01178C  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16243  01178E  0E00               	movlw	0
 16244  011790  0100               	movlb	0	; () banked
 16245  011792  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16246  011794  0100               	movlb	0	; () banked
 16247  011796  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16248  011798  0E00               	movlw	0
 16249  01179A  0100               	movlb	0	; () banked
 16250  01179C  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16251  01179E  0100               	movlb	0	; () banked
 16252  0117A0  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16253                           
 16254                           ; BSR set to: 0
 16255                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 16256  0117A2  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 16257  0117A6  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16258  0117AA  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16259  0117AE  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16260  0117B2  0E05               	movlw	5
 16261  0117B4                     u7335:
 16262  0117B4  90D8               	bcf	status,0,c
 16263  0117B6  0100               	movlb	0	; () banked
 16264  0117B8  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 16265  0117BA  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 16266  0117BC  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 16267  0117BE  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 16268  0117C0  2EE8               	decfsz	wreg,f,c
 16269  0117C2  D7F8               	goto	u7335
 16270  0117C4  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16271  0117C8  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16272  0117CC  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16273  0117D0  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16274                           
 16275                           ; BSR set to: 0
 16276                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 16277  0117D4  010F               	movlb	15	; () banked
 16278  0117D6  5132               	movf	50,w,b	;volatile
 16279  0117D8  0B1F               	andlw	31
 16280  0117DA  010F               	movlb	15	; () banked
 16281  0117DC  6F32               	movwf	50,b	;volatile
 16282                           
 16283                           ; BSR set to: 15
 16284                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 16285  0117DE  C07E  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 16286  0117E2                     l5938:
 16287                           
 16288                           ;inc\CANlib.h: 422: }
 16289                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 16290  0117E2  0100               	movlb	0	; () banked
 16291  0117E4  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 16292  0117E6  D003               	goto	l400
 16293                           
 16294                           ; BSR set to: 0
 16295                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 16296  0117E8  010F               	movlb	15	; () banked
 16297  0117EA  8130               	bsf	48,0,b	;volatile
 16298  0117EC  D002               	goto	l401
 16299  0117EE                     l400:
 16300                           
 16301                           ; BSR set to: 0
 16302                           ;inc\CANlib.h: 426: else
 16303                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 16304  0117EE  010F               	movlb	15	; () banked
 16305  0117F0  9130               	bcf	48,0,b	;volatile
 16306  0117F2                     l401:
 16307                           
 16308                           ; BSR set to: 15
 16309                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 16310  0117F2  0100               	movlb	0	; () banked
 16311  0117F4  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 16312  0117F6  D003               	goto	l402
 16313                           
 16314                           ; BSR set to: 0
 16315                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 16316  0117F8  010F               	movlb	15	; () banked
 16317  0117FA  8330               	bsf	48,1,b	;volatile
 16318  0117FC  D002               	goto	l5944
 16319  0117FE                     l402:
 16320                           
 16321                           ; BSR set to: 0
 16322                           ;inc\CANlib.h: 430: else
 16323                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 16324  0117FE  010F               	movlb	15	; () banked
 16325  011800  9330               	bcf	48,1,b	;volatile
 16326  011802                     l5944:
 16327                           
 16328                           ; BSR set to: 15
 16329                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 16330  011802  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 16331  011806  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16332  01180A  50DF               	movf	indf2,w,c
 16333  01180C  010F               	movlb	15	; () banked
 16334  01180E  6F36               	movwf	54,b	;volatile
 16335                           
 16336                           ; BSR set to: 15
 16337                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 16338  011810  0100               	movlb	0	; () banked
 16339  011812  EE20 F001          	lfsr	2,1
 16340  011816  5176               	movf	CANsendMessage@data& (0+255),w,b
 16341  011818  26D9               	addwf	fsr2l,f,c
 16342  01181A  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16343  01181C  22DA               	addwfc	fsr2h,f,c
 16344  01181E  50DF               	movf	indf2,w,c
 16345  011820  010F               	movlb	15	; () banked
 16346  011822  6F37               	movwf	55,b	;volatile
 16347                           
 16348                           ; BSR set to: 15
 16349                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 16350  011824  0100               	movlb	0	; () banked
 16351  011826  EE20 F002          	lfsr	2,2
 16352  01182A  5176               	movf	CANsendMessage@data& (0+255),w,b
 16353  01182C  26D9               	addwf	fsr2l,f,c
 16354  01182E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16355  011830  22DA               	addwfc	fsr2h,f,c
 16356  011832  50DF               	movf	indf2,w,c
 16357  011834  010F               	movlb	15	; () banked
 16358  011836  6F38               	movwf	56,b	;volatile
 16359                           
 16360                           ; BSR set to: 15
 16361                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 16362  011838  0100               	movlb	0	; () banked
 16363  01183A  EE20 F003          	lfsr	2,3
 16364  01183E  5176               	movf	CANsendMessage@data& (0+255),w,b
 16365  011840  26D9               	addwf	fsr2l,f,c
 16366  011842  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16367  011844  22DA               	addwfc	fsr2h,f,c
 16368  011846  50DF               	movf	indf2,w,c
 16369  011848  010F               	movlb	15	; () banked
 16370  01184A  6F39               	movwf	57,b	;volatile
 16371                           
 16372                           ; BSR set to: 15
 16373                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 16374  01184C  0100               	movlb	0	; () banked
 16375  01184E  EE20 F004          	lfsr	2,4
 16376  011852  5176               	movf	CANsendMessage@data& (0+255),w,b
 16377  011854  26D9               	addwf	fsr2l,f,c
 16378  011856  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16379  011858  22DA               	addwfc	fsr2h,f,c
 16380  01185A  50DF               	movf	indf2,w,c
 16381  01185C  010F               	movlb	15	; () banked
 16382  01185E  6F3A               	movwf	58,b	;volatile
 16383                           
 16384                           ; BSR set to: 15
 16385                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 16386  011860  0100               	movlb	0	; () banked
 16387  011862  EE20 F005          	lfsr	2,5
 16388  011866  5176               	movf	CANsendMessage@data& (0+255),w,b
 16389  011868  26D9               	addwf	fsr2l,f,c
 16390  01186A  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16391  01186C  22DA               	addwfc	fsr2h,f,c
 16392  01186E  50DF               	movf	indf2,w,c
 16393  011870  010F               	movlb	15	; () banked
 16394  011872  6F3B               	movwf	59,b	;volatile
 16395                           
 16396                           ; BSR set to: 15
 16397                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 16398  011874  0100               	movlb	0	; () banked
 16399  011876  EE20 F006          	lfsr	2,6
 16400  01187A  5176               	movf	CANsendMessage@data& (0+255),w,b
 16401  01187C  26D9               	addwf	fsr2l,f,c
 16402  01187E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16403  011880  22DA               	addwfc	fsr2h,f,c
 16404  011882  50DF               	movf	indf2,w,c
 16405  011884  010F               	movlb	15	; () banked
 16406  011886  6F3C               	movwf	60,b	;volatile
 16407                           
 16408                           ; BSR set to: 15
 16409                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 16410  011888  0100               	movlb	0	; () banked
 16411  01188A  EE20 F007          	lfsr	2,7
 16412  01188E  5176               	movf	CANsendMessage@data& (0+255),w,b
 16413  011890  26D9               	addwf	fsr2l,f,c
 16414  011892  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16415  011894  22DA               	addwfc	fsr2h,f,c
 16416  011896  50DF               	movf	indf2,w,c
 16417  011898  010F               	movlb	15	; () banked
 16418  01189A  6F3D               	movwf	61,b	;volatile
 16419                           
 16420                           ; BSR set to: 15
 16421                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 16422  01189C  010F               	movlb	15	; () banked
 16423  01189E  8730               	bsf	48,3,b	;volatile
 16424                           
 16425                           ; BSR set to: 15
 16426                           ;inc\CANlib.h: 444: return;
 16427  0118A0  0012               	return	
 16428  0118A2                     l390:
 16429                           
 16430                           ; BSR set to: 15
 16431                           ;inc\CANlib.h: 445: }
 16432                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 16433  0118A2  010F               	movlb	15	; () banked
 16434  0118A4  B720               	btfsc	32,3,b	;volatile
 16435  0118A6  0012               	return	
 16436                           
 16437                           ; BSR set to: 15
 16438                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 16439  0118A8  C078  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 16440                           
 16441                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 16442  0118AC  0100               	movlb	0	; () banked
 16443  0118AE  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 16444  0118B0  D003               	goto	l405
 16445                           
 16446                           ; BSR set to: 0
 16447                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 16448  0118B2  010F               	movlb	15	; () banked
 16449  0118B4  8D25               	bsf	37,6,b	;volatile
 16450  0118B6  D002               	goto	l406
 16451  0118B8                     l405:
 16452                           
 16453                           ; BSR set to: 0
 16454                           ;inc\CANlib.h: 454: else
 16455                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 16456  0118B8  010F               	movlb	15	; () banked
 16457  0118BA  9D25               	bcf	37,6,b	;volatile
 16458  0118BC                     l406:
 16459                           
 16460                           ; BSR set to: 15
 16461                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 16462  0118BC  0100               	movlb	0	; () banked
 16463  0118BE  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 16464  0118C0  D079               	goto	l407
 16465                           
 16466                           ; BSR set to: 0
 16467                           ;inc\CANlib.h: 458: {
 16468                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 16469  0118C2  0100               	movlb	0	; () banked
 16470  0118C4  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 16471  0118C6  0100               	movlb	0	; () banked
 16472  0118C8  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16473  0118CA  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16474  0118CC  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16475  0118CE  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16476                           
 16477                           ; BSR set to: 0
 16478                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 16479  0118D0  C07E  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 16480                           
 16481                           ; BSR set to: 0
 16482                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 16483  0118D4  0E00               	movlw	0
 16484  0118D6  0100               	movlb	0	; () banked
 16485  0118D8  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 16486  0118DA  0100               	movlb	0	; () banked
 16487  0118DC  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16488  0118DE  0EFF               	movlw	255
 16489  0118E0  0100               	movlb	0	; () banked
 16490  0118E2  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16491  0118E4  0100               	movlb	0	; () banked
 16492  0118E6  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16493  0118E8  0E00               	movlw	0
 16494  0118EA  0100               	movlb	0	; () banked
 16495  0118EC  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16496  0118EE  0100               	movlb	0	; () banked
 16497  0118F0  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16498  0118F2  0E00               	movlw	0
 16499  0118F4  0100               	movlb	0	; () banked
 16500  0118F6  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16501  0118F8  0100               	movlb	0	; () banked
 16502  0118FA  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16503                           
 16504                           ; BSR set to: 0
 16505                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 16506  0118FC  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 16507  011900  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16508  011904  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16509  011908  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16510  01190C  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 16511  011910  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16512  011914  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16513  011918  0100               	movlb	0	; () banked
 16514  01191A  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 16515  01191C  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16516  011920  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16517  011924  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16518  011928  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16519                           
 16520                           ; BSR set to: 0
 16521                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 16522  01192C  C07E  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 16523                           
 16524                           ; BSR set to: 0
 16525                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 16526  011930  0E00               	movlw	0
 16527  011932  010F               	movlb	15	; () banked
 16528  011934  6F22               	movwf	34,b	;volatile
 16529                           
 16530                           ; BSR set to: 15
 16531                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 16532  011936  010F               	movlb	15	; () banked
 16533  011938  8722               	bsf	34,3,b	;volatile
 16534                           
 16535                           ; BSR set to: 15
 16536                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 16537  01193A  0100               	movlb	0	; () banked
 16538  01193C  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16539  01193E  D002               	goto	l408
 16540                           
 16541                           ; BSR set to: 0
 16542                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 16543  011940  010F               	movlb	15	; () banked
 16544  011942  8122               	bsf	34,0,b	;volatile
 16545  011944                     l408:
 16546                           
 16547                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 16548  011944  0100               	movlb	0	; () banked
 16549  011946  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16550  011948  D002               	goto	l409
 16551                           
 16552                           ; BSR set to: 0
 16553                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 16554  01194A  010F               	movlb	15	; () banked
 16555  01194C  8322               	bsf	34,1,b	;volatile
 16556  01194E                     l409:
 16557                           
 16558                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 16559  01194E  0100               	movlb	0	; () banked
 16560  011950  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16561  011952  D002               	goto	l410
 16562                           
 16563                           ; BSR set to: 0
 16564                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 16565  011954  010F               	movlb	15	; () banked
 16566  011956  8B22               	bsf	34,5,b	;volatile
 16567  011958                     l410:
 16568                           
 16569                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 16570  011958  0100               	movlb	0	; () banked
 16571  01195A  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16572  01195C  D002               	goto	l411
 16573                           
 16574                           ; BSR set to: 0
 16575                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 16576  01195E  010F               	movlb	15	; () banked
 16577  011960  8D22               	bsf	34,6,b	;volatile
 16578  011962                     l411:
 16579                           
 16580                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 16581  011962  0100               	movlb	0	; () banked
 16582  011964  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16583  011966  D002               	goto	l5994
 16584                           
 16585                           ; BSR set to: 0
 16586                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 16587  011968  010F               	movlb	15	; () banked
 16588  01196A  8F22               	bsf	34,7,b	;volatile
 16589  01196C                     l5994:
 16590                           
 16591                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 16592  01196C  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 16593  011970  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16594  011974  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16595  011978  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16596  01197C  0E16               	movlw	22
 16597  01197E  D006               	goto	u7440
 16598  011980                     u7445:
 16599  011980  0100               	movlb	0	; () banked
 16600  011982  90D8               	bcf	status,0,c
 16601  011984  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16602  011986  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16603  011988  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16604  01198A  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 16605  01198C                     u7440:
 16606  01198C  2EE8               	decfsz	wreg,f,c
 16607  01198E  D7F8               	goto	u7445
 16608  011990  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16609  011994  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16610  011998  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16611  01199C  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16612                           
 16613                           ; BSR set to: 0
 16614                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 16615  0119A0  0100               	movlb	0	; () banked
 16616  0119A2  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 16617  0119A4  0100               	movlb	0	; () banked
 16618  0119A6  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16619  0119A8  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16620  0119AA  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16621  0119AC  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16622                           
 16623                           ; BSR set to: 0
 16624                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 16625  0119AE  C07E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 16626                           
 16627                           ;inc\CANlib.h: 483: }
 16628  0119B2  D059               	goto	l6014
 16629  0119B4                     l407:
 16630                           
 16631                           ; BSR set to: 0
 16632                           ;inc\CANlib.h: 485: else
 16633                           ;inc\CANlib.h: 487: {
 16634                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 16635  0119B4  010F               	movlb	15	; () banked
 16636  0119B6  9722               	bcf	34,3,b	;volatile
 16637                           
 16638                           ; BSR set to: 15
 16639                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 16640  0119B8  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 16641  0119BC  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16642  0119C0  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16643  0119C4  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16644  0119C8  0E04               	movlw	4
 16645  0119CA  D006               	goto	u7450
 16646  0119CC                     u7455:
 16647  0119CC  0100               	movlb	0	; () banked
 16648  0119CE  90D8               	bcf	status,0,c
 16649  0119D0  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16650  0119D2  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16651  0119D4  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16652  0119D6  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 16653  0119D8                     u7450:
 16654  0119D8  2EE8               	decfsz	wreg,f,c
 16655  0119DA  D7F8               	goto	u7455
 16656  0119DC  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16657  0119E0  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16658  0119E4  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16659  0119E8  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16660                           
 16661                           ; BSR set to: 0
 16662                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 16663  0119EC  0100               	movlb	0	; () banked
 16664  0119EE  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 16665  0119F0  0100               	movlb	0	; () banked
 16666  0119F2  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16667  0119F4  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16668  0119F6  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16669  0119F8  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16670                           
 16671                           ; BSR set to: 0
 16672                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 16673  0119FA  C07E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 16674                           
 16675                           ; BSR set to: 0
 16676                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 16677  0119FE  0E07               	movlw	7
 16678  011A00  0100               	movlb	0	; () banked
 16679  011A02  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 16680  011A04  0100               	movlb	0	; () banked
 16681  011A06  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 16682  011A08  0E00               	movlw	0
 16683  011A0A  0100               	movlb	0	; () banked
 16684  011A0C  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16685  011A0E  0100               	movlb	0	; () banked
 16686  011A10  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16687  011A12  0E00               	movlw	0
 16688  011A14  0100               	movlb	0	; () banked
 16689  011A16  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16690  011A18  0100               	movlb	0	; () banked
 16691  011A1A  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16692  011A1C  0E00               	movlw	0
 16693  011A1E  0100               	movlb	0	; () banked
 16694  011A20  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16695  011A22  0100               	movlb	0	; () banked
 16696  011A24  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16697                           
 16698                           ; BSR set to: 0
 16699                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 16700  011A26  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 16701  011A2A  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16702  011A2E  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16703  011A32  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16704  011A36  0E05               	movlw	5
 16705  011A38                     u7465:
 16706  011A38  90D8               	bcf	status,0,c
 16707  011A3A  0100               	movlb	0	; () banked
 16708  011A3C  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 16709  011A3E  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 16710  011A40  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 16711  011A42  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 16712  011A44  2EE8               	decfsz	wreg,f,c
 16713  011A46  D7F8               	goto	u7465
 16714  011A48  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 16715  011A4C  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16716  011A50  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16717  011A54  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16718                           
 16719                           ; BSR set to: 0
 16720                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 16721  011A58  010F               	movlb	15	; () banked
 16722  011A5A  5122               	movf	34,w,b	;volatile
 16723  011A5C  0B1F               	andlw	31
 16724  011A5E  010F               	movlb	15	; () banked
 16725  011A60  6F22               	movwf	34,b	;volatile
 16726                           
 16727                           ; BSR set to: 15
 16728                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 16729  011A62  C07E  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 16730  011A66                     l6014:
 16731                           
 16732                           ;inc\CANlib.h: 498: }
 16733                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 16734  011A66  0100               	movlb	0	; () banked
 16735  011A68  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 16736  011A6A  D003               	goto	l414
 16737                           
 16738                           ; BSR set to: 0
 16739                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 16740  011A6C  010F               	movlb	15	; () banked
 16741  011A6E  8120               	bsf	32,0,b	;volatile
 16742  011A70  D002               	goto	l415
 16743  011A72                     l414:
 16744                           
 16745                           ; BSR set to: 0
 16746                           ;inc\CANlib.h: 502: else
 16747                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 16748  011A72  010F               	movlb	15	; () banked
 16749  011A74  9120               	bcf	32,0,b	;volatile
 16750  011A76                     l415:
 16751                           
 16752                           ; BSR set to: 15
 16753                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 16754  011A76  0100               	movlb	0	; () banked
 16755  011A78  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 16756  011A7A  D003               	goto	l416
 16757                           
 16758                           ; BSR set to: 0
 16759                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 16760  011A7C  010F               	movlb	15	; () banked
 16761  011A7E  8320               	bsf	32,1,b	;volatile
 16762  011A80  D002               	goto	l6020
 16763  011A82                     l416:
 16764                           
 16765                           ; BSR set to: 0
 16766                           ;inc\CANlib.h: 506: else
 16767                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 16768  011A82  010F               	movlb	15	; () banked
 16769  011A84  9320               	bcf	32,1,b	;volatile
 16770  011A86                     l6020:
 16771                           
 16772                           ; BSR set to: 15
 16773                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 16774  011A86  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 16775  011A8A  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16776  011A8E  50DF               	movf	indf2,w,c
 16777  011A90  010F               	movlb	15	; () banked
 16778  011A92  6F26               	movwf	38,b	;volatile
 16779                           
 16780                           ; BSR set to: 15
 16781                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 16782  011A94  0100               	movlb	0	; () banked
 16783  011A96  EE20 F001          	lfsr	2,1
 16784  011A9A  5176               	movf	CANsendMessage@data& (0+255),w,b
 16785  011A9C  26D9               	addwf	fsr2l,f,c
 16786  011A9E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16787  011AA0  22DA               	addwfc	fsr2h,f,c
 16788  011AA2  50DF               	movf	indf2,w,c
 16789  011AA4  010F               	movlb	15	; () banked
 16790  011AA6  6F27               	movwf	39,b	;volatile
 16791                           
 16792                           ; BSR set to: 15
 16793                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 16794  011AA8  0100               	movlb	0	; () banked
 16795  011AAA  EE20 F002          	lfsr	2,2
 16796  011AAE  5176               	movf	CANsendMessage@data& (0+255),w,b
 16797  011AB0  26D9               	addwf	fsr2l,f,c
 16798  011AB2  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16799  011AB4  22DA               	addwfc	fsr2h,f,c
 16800  011AB6  50DF               	movf	indf2,w,c
 16801  011AB8  010F               	movlb	15	; () banked
 16802  011ABA  6F28               	movwf	40,b	;volatile
 16803                           
 16804                           ; BSR set to: 15
 16805                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 16806  011ABC  0100               	movlb	0	; () banked
 16807  011ABE  EE20 F003          	lfsr	2,3
 16808  011AC2  5176               	movf	CANsendMessage@data& (0+255),w,b
 16809  011AC4  26D9               	addwf	fsr2l,f,c
 16810  011AC6  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16811  011AC8  22DA               	addwfc	fsr2h,f,c
 16812  011ACA  50DF               	movf	indf2,w,c
 16813  011ACC  010F               	movlb	15	; () banked
 16814  011ACE  6F29               	movwf	41,b	;volatile
 16815                           
 16816                           ; BSR set to: 15
 16817                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 16818  011AD0  0100               	movlb	0	; () banked
 16819  011AD2  EE20 F004          	lfsr	2,4
 16820  011AD6  5176               	movf	CANsendMessage@data& (0+255),w,b
 16821  011AD8  26D9               	addwf	fsr2l,f,c
 16822  011ADA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16823  011ADC  22DA               	addwfc	fsr2h,f,c
 16824  011ADE  50DF               	movf	indf2,w,c
 16825  011AE0  010F               	movlb	15	; () banked
 16826  011AE2  6F2A               	movwf	42,b	;volatile
 16827                           
 16828                           ; BSR set to: 15
 16829                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 16830  011AE4  0100               	movlb	0	; () banked
 16831  011AE6  EE20 F005          	lfsr	2,5
 16832  011AEA  5176               	movf	CANsendMessage@data& (0+255),w,b
 16833  011AEC  26D9               	addwf	fsr2l,f,c
 16834  011AEE  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16835  011AF0  22DA               	addwfc	fsr2h,f,c
 16836  011AF2  50DF               	movf	indf2,w,c
 16837  011AF4  010F               	movlb	15	; () banked
 16838  011AF6  6F2B               	movwf	43,b	;volatile
 16839                           
 16840                           ; BSR set to: 15
 16841                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 16842  011AF8  0100               	movlb	0	; () banked
 16843  011AFA  EE20 F006          	lfsr	2,6
 16844  011AFE  5176               	movf	CANsendMessage@data& (0+255),w,b
 16845  011B00  26D9               	addwf	fsr2l,f,c
 16846  011B02  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16847  011B04  22DA               	addwfc	fsr2h,f,c
 16848  011B06  50DF               	movf	indf2,w,c
 16849  011B08  010F               	movlb	15	; () banked
 16850  011B0A  6F2C               	movwf	44,b	;volatile
 16851                           
 16852                           ; BSR set to: 15
 16853                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 16854  011B0C  0100               	movlb	0	; () banked
 16855  011B0E  EE20 F007          	lfsr	2,7
 16856  011B12  5176               	movf	CANsendMessage@data& (0+255),w,b
 16857  011B14  26D9               	addwf	fsr2l,f,c
 16858  011B16  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16859  011B18  22DA               	addwfc	fsr2h,f,c
 16860  011B1A  50DF               	movf	indf2,w,c
 16861  011B1C  010F               	movlb	15	; () banked
 16862  011B1E  6F2D               	movwf	45,b	;volatile
 16863                           
 16864                           ; BSR set to: 15
 16865                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 16866  011B20  010F               	movlb	15	; () banked
 16867  011B22  8720               	bsf	32,3,b	;volatile
 16868                           
 16869                           ; BSR set to: 15
 16870                           ;inc\CANlib.h: 520: return;
 16871  011B24  0012               	return	
 16872  011B26                     __end_of_CANsendMessage:
 16873                           	opt stack 0
 16874                           tblptru	equ	0xFF8
 16875                           tblptrh	equ	0xFF7
 16876                           tblptrl	equ	0xFF6
 16877                           tablat	equ	0xFF5
 16878                           prodh	equ	0xFF4
 16879                           prodl	equ	0xFF3
 16880                           intcon	equ	0xFF2
 16881                           postinc0	equ	0xFEE
 16882                           wreg	equ	0xFE8
 16883                           indf2	equ	0xFDF
 16884                           postinc2	equ	0xFDE
 16885                           fsr2h	equ	0xFDA
 16886                           fsr2l	equ	0xFD9
 16887                           status	equ	0xFD8
 16888                           
 16889 ;; *************** function _CANisTxReady *****************
 16890 ;; Defined at:
 16891 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 16892 ;; Parameters:    Size  Location     Type
 16893 ;;		None
 16894 ;; Auto vars:     Size  Location     Type
 16895 ;;		None
 16896 ;; Return value:  Size  Location     Type
 16897 ;;                  1    wreg      unsigned char 
 16898 ;; Registers used:
 16899 ;;		wreg, status,2
 16900 ;; Tracked objects:
 16901 ;;		On entry : 0/0
 16902 ;;		On exit  : 0/0
 16903 ;;		Unchanged: 0/0
 16904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16906 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16908 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16909 ;;Total ram usage:        1 bytes
 16910 ;; Hardware stack levels used:    1
 16911 ;; Hardware stack levels required when called:    3
 16912 ;; This function calls:
 16913 ;;		Nothing
 16914 ;; This function is called by:
 16915 ;;		_main
 16916 ;;		_CAN_Send
 16917 ;;		_LCD_Handler
 16918 ;; This function uses a non-reentrant model
 16919 ;;
 16920                           
 16921                           	psect	text46
 16922  015D24                     __ptext46:
 16923                           	opt stack 0
 16924  015D24                     _CANisTxReady:
 16925                           	opt stack 26
 16926                           
 16927                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 16928                           
 16929                           ; BSR set to: 15
 16930                           ;incstack = 0
 16931  015D24  0E01               	movlw	1
 16932  015D26  0100               	movlb	0	; () banked
 16933  015D28  6F72               	movwf	_CANisTxReady$3235& (0+255),b
 16934                           
 16935                           ; BSR set to: 0
 16936  015D2A  010F               	movlb	15	; () banked
 16937  015D2C  A740               	btfss	64,3,b	;volatile
 16938  015D2E  D009               	goto	l568
 16939                           
 16940                           ; BSR set to: 15
 16941  015D30  010F               	movlb	15	; () banked
 16942  015D32  A730               	btfss	48,3,b	;volatile
 16943  015D34  D006               	goto	l568
 16944                           
 16945                           ; BSR set to: 15
 16946  015D36  010F               	movlb	15	; () banked
 16947  015D38  A720               	btfss	32,3,b	;volatile
 16948  015D3A  D003               	goto	l568
 16949                           
 16950                           ; BSR set to: 15
 16951  015D3C  0E00               	movlw	0
 16952  015D3E  0100               	movlb	0	; () banked
 16953  015D40  6F72               	movwf	_CANisTxReady$3235& (0+255),b
 16954  015D42                     l568:
 16955  015D42  0100               	movlb	0	; () banked
 16956  015D44  5172               	movf	_CANisTxReady$3235& (0+255),w,b
 16957  015D46  0012               	return	
 16958  015D48                     __end_of_CANisTxReady:
 16959                           	opt stack 0
 16960                           tblptru	equ	0xFF8
 16961                           tblptrh	equ	0xFF7
 16962                           tblptrl	equ	0xFF6
 16963                           tablat	equ	0xFF5
 16964                           prodh	equ	0xFF4
 16965                           prodl	equ	0xFF3
 16966                           intcon	equ	0xFF2
 16967                           postinc0	equ	0xFEE
 16968                           wreg	equ	0xFE8
 16969                           indf2	equ	0xFDF
 16970                           postinc2	equ	0xFDE
 16971                           fsr2h	equ	0xFDA
 16972                           fsr2l	equ	0xFD9
 16973                           status	equ	0xFD8
 16974                           
 16975 ;; *************** function _ISR_bassa *****************
 16976 ;; Defined at:
 16977 ;;		line 138 in file "RemoteCan.c"
 16978 ;; Parameters:    Size  Location     Type
 16979 ;;		None
 16980 ;; Auto vars:     Size  Location     Type
 16981 ;;		None
 16982 ;; Return value:  Size  Location     Type
 16983 ;;		None               void
 16984 ;; Registers used:
 16985 ;;		wreg, status,2, status,0
 16986 ;; Tracked objects:
 16987 ;;		On entry : 0/0
 16988 ;;		On exit  : 0/0
 16989 ;;		Unchanged: 0/0
 16990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16993 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16994 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16995 ;;Total ram usage:       17 bytes
 16996 ;; Hardware stack levels used:    1
 16997 ;; Hardware stack levels required when called:    2
 16998 ;; This function calls:
 16999 ;;		Nothing
 17000 ;; This function is called by:
 17001 ;;		Interrupt level 1
 17002 ;; This function uses a non-reentrant model
 17003 ;;
 17004                           
 17005                           	psect	intcodelo
 17006  000018                     __pintcodelo:
 17007                           	opt stack 0
 17008  000018                     _ISR_bassa:
 17009                           	opt stack 21
 17010                           
 17011                           ; BSR set to: 0
 17012                           ;incstack = 0
 17013  000018  804D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 17014  00001A  CFD8 F02D          	movff	status,??_ISR_bassa
 17015  00001E  CFE8 F02E          	movff	wreg,??_ISR_bassa+1
 17016  000022  CFE0 F02F          	movff	bsr,??_ISR_bassa+2
 17017  000026  CFFA F030          	movff	pclath,??_ISR_bassa+3
 17018  00002A  CFFB F031          	movff	pclatu,??_ISR_bassa+4
 17019  00002E  CFE9 F032          	movff	fsr0l,??_ISR_bassa+5
 17020  000032  CFEA F033          	movff	fsr0h,??_ISR_bassa+6
 17021  000036  CFE1 F034          	movff	fsr1l,??_ISR_bassa+7
 17022  00003A  CFE2 F035          	movff	fsr1h,??_ISR_bassa+8
 17023  00003E  CFD9 F036          	movff	fsr2l,??_ISR_bassa+9
 17024  000042  CFDA F037          	movff	fsr2h,??_ISR_bassa+10
 17025  000046  CFF3 F038          	movff	prodl,??_ISR_bassa+11
 17026  00004A  CFF4 F039          	movff	prodh,??_ISR_bassa+12
 17027  00004E  CFF6 F03A          	movff	tblptrl,??_ISR_bassa+13
 17028  000052  CFF7 F03B          	movff	tblptrh,??_ISR_bassa+14
 17029  000056  CFF8 F03C          	movff	tblptru,??_ISR_bassa+15
 17030  00005A  CFF5 F03D          	movff	tablat,??_ISR_bassa+16
 17031                           
 17032                           ;RemoteCan.c: 139: if (PIR2bits.TMR3IF == 1) {
 17033  00005E  A2A1               	btfss	4001,1,c	;volatile
 17034  000060  D00B               	goto	i1l766
 17035                           
 17036                           ;RemoteCan.c: 140: time_counter++;
 17037  000062  0E01               	movlw	1
 17038  000064  2622               	addwf	_time_counter,f,c	;volatile
 17039  000066  0E00               	movlw	0
 17040  000068  2223               	addwfc	_time_counter+1,f,c	;volatile
 17041  00006A  2224               	addwfc	_time_counter+2,f,c	;volatile
 17042  00006C  2225               	addwfc	_time_counter+3,f,c	;volatile
 17043                           
 17044                           ;RemoteCan.c: 141: TMR3H = 0x63;
 17045  00006E  0E63               	movlw	99
 17046  000070  6EB3               	movwf	4019,c	;volatile
 17047                           
 17048                           ;RemoteCan.c: 142: TMR3L = 0xC0;
 17049  000072  0EC0               	movlw	192
 17050  000074  6EB2               	movwf	4018,c	;volatile
 17051                           
 17052                           ;RemoteCan.c: 143: PIR2bits.TMR3IF = 0;
 17053  000076  92A1               	bcf	4001,1,c	;volatile
 17054  000078                     i1l766:
 17055  000078  C03D  FFF5         	movff	??_ISR_bassa+16,tablat
 17056  00007C  C03C  FFF8         	movff	??_ISR_bassa+15,tblptru
 17057  000080  C03B  FFF7         	movff	??_ISR_bassa+14,tblptrh
 17058  000084  C03A  FFF6         	movff	??_ISR_bassa+13,tblptrl
 17059  000088  C039  FFF4         	movff	??_ISR_bassa+12,prodh
 17060  00008C  C038  FFF3         	movff	??_ISR_bassa+11,prodl
 17061  000090  C037  FFDA         	movff	??_ISR_bassa+10,fsr2h
 17062  000094  C036  FFD9         	movff	??_ISR_bassa+9,fsr2l
 17063  000098  C035  FFE2         	movff	??_ISR_bassa+8,fsr1h
 17064  00009C  C034  FFE1         	movff	??_ISR_bassa+7,fsr1l
 17065  0000A0  C033  FFEA         	movff	??_ISR_bassa+6,fsr0h
 17066  0000A4  C032  FFE9         	movff	??_ISR_bassa+5,fsr0l
 17067  0000A8  C031  FFFB         	movff	??_ISR_bassa+4,pclatu
 17068  0000AC  C030  FFFA         	movff	??_ISR_bassa+3,pclath
 17069  0000B0  C02F  FFE0         	movff	??_ISR_bassa+2,bsr
 17070  0000B4  C02E  FFE8         	movff	??_ISR_bassa+1,wreg
 17071  0000B8  C02D  FFD8         	movff	??_ISR_bassa,status
 17072  0000BC  904D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 17073  0000BE  0010               	retfie	
 17074  0000C0                     __end_of_ISR_bassa:
 17075                           	opt stack 0
 17076                           pclatu	equ	0xFFB
 17077                           pclath	equ	0xFFA
 17078                           tblptru	equ	0xFF8
 17079                           tblptrh	equ	0xFF7
 17080                           tblptrl	equ	0xFF6
 17081                           tablat	equ	0xFF5
 17082                           prodh	equ	0xFF4
 17083                           prodl	equ	0xFF3
 17084                           intcon	equ	0xFF2
 17085                           postinc0	equ	0xFEE
 17086                           fsr0h	equ	0xFEA
 17087                           fsr0l	equ	0xFE9
 17088                           wreg	equ	0xFE8
 17089                           fsr1h	equ	0xFE2
 17090                           fsr1l	equ	0xFE1
 17091                           bsr	equ	0xFE0
 17092                           indf2	equ	0xFDF
 17093                           postinc2	equ	0xFDE
 17094                           fsr2h	equ	0xFDA
 17095                           fsr2l	equ	0xFD9
 17096                           status	equ	0xFD8
 17097                           
 17098 ;; *************** function _ISR_alta *****************
 17099 ;; Defined at:
 17100 ;;		line 103 in file "RemoteCan.c"
 17101 ;; Parameters:    Size  Location     Type
 17102 ;;		None
 17103 ;; Auto vars:     Size  Location     Type
 17104 ;;  i               1   29[COMRAM] unsigned char 
 17105 ;; Return value:  Size  Location     Type
 17106 ;;		None               void
 17107 ;; Registers used:
 17108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17109 ;; Tracked objects:
 17110 ;;		On entry : 0/0
 17111 ;;		On exit  : 0/0
 17112 ;;		Unchanged: 0/0
 17113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17116 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17117 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17118 ;;Total ram usage:       15 bytes
 17119 ;; Hardware stack levels used:    1
 17120 ;; Hardware stack levels required when called:    1
 17121 ;; This function calls:
 17122 ;;		_CANisRxReady
 17123 ;;		_CANreceiveMessage
 17124 ;;		i2_CANisTxReady
 17125 ;;		i2_CANsendMessage
 17126 ;; This function is called by:
 17127 ;;		Interrupt level 2
 17128 ;; This function uses a non-reentrant model
 17129 ;;
 17130                           
 17131                           	psect	intcode
 17132  000008                     __pintcode:
 17133                           	opt stack 0
 17134  000008                     _ISR_alta:
 17135                           	opt stack 21
 17136                           
 17137                           ;incstack = 0
 17138  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17139  00000A  CFFA F064          	movff	pclath,??_ISR_alta
 17140  00000E  CFFB F065          	movff	pclatu,??_ISR_alta+1
 17141  000012  EFCB  F0A8         	goto	int_func
 17142                           pclatu	equ	0xFFB
 17143                           pclath	equ	0xFFA
 17144                           tblptru	equ	0xFF8
 17145                           tblptrh	equ	0xFF7
 17146                           tblptrl	equ	0xFF6
 17147                           tablat	equ	0xFF5
 17148                           prodh	equ	0xFF4
 17149                           prodl	equ	0xFF3
 17150                           intcon	equ	0xFF2
 17151                           postinc0	equ	0xFEE
 17152                           fsr0h	equ	0xFEA
 17153                           fsr0l	equ	0xFE9
 17154                           wreg	equ	0xFE8
 17155                           fsr1h	equ	0xFE2
 17156                           fsr1l	equ	0xFE1
 17157                           bsr	equ	0xFE0
 17158                           indf2	equ	0xFDF
 17159                           postinc2	equ	0xFDE
 17160                           fsr2h	equ	0xFDA
 17161                           fsr2l	equ	0xFD9
 17162                           status	equ	0xFD8
 17163                           
 17164                           	psect	intcode_body
 17165  015196                     __pintcode_body:
 17166                           	opt stack 21
 17167  015196                     int_func:
 17168                           	opt stack 21
 17169  015196  CFE9 F066          	movff	fsr0l,??_ISR_alta+2
 17170  01519A  CFEA F067          	movff	fsr0h,??_ISR_alta+3
 17171  01519E  CFE1 F068          	movff	fsr1l,??_ISR_alta+4
 17172  0151A2  CFE2 F069          	movff	fsr1h,??_ISR_alta+5
 17173  0151A6  CFD9 F06A          	movff	fsr2l,??_ISR_alta+6
 17174  0151AA  CFDA F06B          	movff	fsr2h,??_ISR_alta+7
 17175  0151AE  CFF3 F06C          	movff	prodl,??_ISR_alta+8
 17176  0151B2  CFF4 F06D          	movff	prodh,??_ISR_alta+9
 17177  0151B6  CFF6 F06E          	movff	tblptrl,??_ISR_alta+10
 17178  0151BA  CFF7 F06F          	movff	tblptrh,??_ISR_alta+11
 17179  0151BE  CFF8 F070          	movff	tblptru,??_ISR_alta+12
 17180  0151C2  CFF5 F071          	movff	tablat,??_ISR_alta+13
 17181                           
 17182                           ;RemoteCan.c: 104: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 17183  0151C6  A2A4               	btfss	4004,1,c	;volatile
 17184  0151C8  B0A4               	btfsc	4004,0,c	;volatile
 17185  0151CA  D001               	goto	i2l8846
 17186  0151CC  D06C               	goto	i2l762
 17187  0151CE                     i2l8846:
 17188                           
 17189                           ;RemoteCan.c: 105: if (CANisRxReady()) {
 17190  0151CE  EC07  F0AF         	call	_CANisRxReady	;wreg free
 17191  0151D2  0900               	iorlw	0
 17192  0151D4  B4D8               	btfsc	status,2,c
 17193  0151D6  D063               	goto	i2l8884
 17194                           
 17195                           ;RemoteCan.c: 106: CANreceiveMessage(&msg);
 17196  0151D8  0E00               	movlw	low _msg
 17197  0151DA  6E3E               	movwf	CANreceiveMessage@msg,c
 17198  0151DC  0E01               	movlw	high _msg
 17199  0151DE  6E3F               	movwf	CANreceiveMessage@msg+1,c
 17200  0151E0  ECAB  F096         	call	_CANreceiveMessage	;wreg free
 17201                           
 17202                           ;RemoteCan.c: 107: RTR_Flag = msg.RTR;
 17203  0151E4  0101               	movlb	1	; () banked
 17204  0151E6  A10E               	btfss	(_msg+14)& (0+255),0,b
 17205  0151E8  D002               	goto	i2u1177_40
 17206  0151EA  884B               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17207  0151EC  D001               	goto	i2l8852
 17208  0151EE                     i2u1177_40:
 17209  0151EE  984B               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17210  0151F0                     i2l8852:
 17211                           
 17212                           ;RemoteCan.c: 108: id = msg.identifier;
 17213  0151F0  C100  F012         	movff	_msg,_id	;volatile
 17214  0151F4  C101  F013         	movff	_msg+1,_id+1	;volatile
 17215  0151F8  C102  F014         	movff	_msg+2,_id+2	;volatile
 17216  0151FC  C103  F015         	movff	_msg+3,_id+3	;volatile
 17217                           
 17218                           ;RemoteCan.c: 109: newMessageCan = 1;
 17219  015200  8E4B               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 17220                           
 17221                           ;RemoteCan.c: 110: if (id == 0b00000000110) {
 17222  015202  0E06               	movlw	6
 17223  015204  1812               	xorwf	_id,w,c	;volatile
 17224  015206  1013               	iorwf	_id+1,w,c	;volatile
 17225  015208  1014               	iorwf	_id+2,w,c	;volatile
 17226  01520A  1015               	iorwf	_id+3,w,c	;volatile
 17227  01520C  A4D8               	btfss	status,2,c
 17228  01520E  D01A               	goto	i2l8870
 17229                           
 17230                           ;RemoteCan.c: 111: for (unsigned char i = 0; i < 8; i++) {
 17231  015210  0E00               	movlw	0
 17232  015212  6E4A               	movwf	ISR_alta@i,c
 17233  015214                     i2l8860:
 17234  015214  0E07               	movlw	7
 17235  015216  644A               	cpfsgt	ISR_alta@i,c
 17236  015218  D001               	goto	i2l8864
 17237  01521A  D014               	goto	i2l8870
 17238  01521C                     i2l8864:
 17239                           
 17240                           ;RemoteCan.c: 112: data_speed_rx[i] = msg.data[i];
 17241  01521C  504A               	movf	ISR_alta@i,w,c
 17242  01521E  0D01               	mullw	1
 17243  015220  0E04               	movlw	low (_msg+4)
 17244  015222  24F3               	addwf	prodl,w,c
 17245  015224  6ED9               	movwf	fsr2l,c
 17246  015226  0E01               	movlw	high (_msg+4)
 17247  015228  20F4               	addwfc	prodh,w,c
 17248  01522A  6EDA               	movwf	fsr2h,c
 17249  01522C  504A               	movf	ISR_alta@i,w,c
 17250  01522E  0D01               	mullw	1
 17251  015230  0E01               	movlw	low _data_speed_rx
 17252  015232  24F3               	addwf	prodl,w,c
 17253  015234  6EE1               	movwf	fsr1l,c
 17254  015236  0E00               	movlw	high _data_speed_rx
 17255  015238  20F4               	addwfc	prodh,w,c
 17256  01523A  6EE2               	movwf	fsr1h,c
 17257  01523C  CFDF FFE7          	movff	indf2,indf1
 17258  015240  2A4A               	incf	ISR_alta@i,f,c
 17259  015242  D7E8               	goto	i2l8860
 17260  015244                     i2l8870:
 17261                           
 17262                           ;RemoteCan.c: 113: }
 17263                           ;RemoteCan.c: 114: }
 17264                           ;RemoteCan.c: 115: if (id == 0b00000000010) {
 17265  015244  0E02               	movlw	2
 17266  015246  1812               	xorwf	_id,w,c	;volatile
 17267  015248  1013               	iorwf	_id+1,w,c	;volatile
 17268  01524A  1014               	iorwf	_id+2,w,c	;volatile
 17269  01524C  1015               	iorwf	_id+3,w,c	;volatile
 17270  01524E  B4D8               	btfsc	status,2,c
 17271                           
 17272                           ;RemoteCan.c: 116: if (RTR_Flag == 1) {
 17273  015250  A84B               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17274  015252  D025               	goto	i2l8884
 17275                           
 17276                           ;RemoteCan.c: 117: pr_time_4 = time_counter;
 17277  015254  C022  F01A         	movff	_time_counter,_pr_time_4	;volatile
 17278  015258  C023  F01B         	movff	_time_counter+1,_pr_time_4+1	;volatile
 17279  01525C  C024  F01C         	movff	_time_counter+2,_pr_time_4+2	;volatile
 17280  015260  C025  F01D         	movff	_time_counter+3,_pr_time_4+3	;volatile
 17281                           
 17282                           ;RemoteCan.c: 118: data[0] = 0x03;
 17283  015264  0E03               	movlw	3
 17284  015266  6E2C               	movwf	_data,c
 17285                           
 17286                           ;RemoteCan.c: 119: _delay((unsigned long)((10)*(16000000/4000000.0)));
 17287  015268  0E0D               	movlw	13
 17288  01526A                     i2u1210_47:
 17289  01526A  2EE8               	decfsz	wreg,f,c
 17290  01526C  D7FE               	goto	i2u1210_47
 17291  01526E  F000               	nop	
 17292  015270                     i2l8880:
 17293  015270  ECB5  F0AE         	call	i2_CANisTxReady	;wreg free
 17294  015274  06E8               	decf	wreg,f,c
 17295  015276  A4D8               	btfss	status,2,c
 17296  015278  D7FB               	goto	i2l8880
 17297                           
 17298                           ;RemoteCan.c: 121: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 17299  01527A  0E02               	movlw	2
 17300  01527C  6E3E               	movwf	i2CANsendMessage@identifier,c
 17301  01527E  0E00               	movlw	0
 17302  015280  6E3F               	movwf	i2CANsendMessage@identifier+1,c
 17303  015282  0E00               	movlw	0
 17304  015284  6E40               	movwf	i2CANsendMessage@identifier+2,c
 17305  015286  0E00               	movlw	0
 17306  015288  6E41               	movwf	i2CANsendMessage@identifier+3,c
 17307  01528A  0E2C               	movlw	low _data
 17308  01528C  6E42               	movwf	i2CANsendMessage@data,c
 17309  01528E  0E00               	movlw	high _data
 17310  015290  6E43               	movwf	i2CANsendMessage@data+1,c
 17311  015292  0E08               	movlw	8
 17312  015294  6E44               	movwf	i2CANsendMessage@dataLength,c
 17313  015296  0EBC               	movlw	188
 17314  015298  6E45               	movwf	i2CANsendMessage@flags,c
 17315  01529A  EC93  F08D         	call	i2_CANsendMessage	;wreg free
 17316  01529E                     i2l8884:
 17317                           
 17318                           ;RemoteCan.c: 127: }
 17319                           ;RemoteCan.c: 129: }
 17320                           ;RemoteCan.c: 130: }
 17321                           ;RemoteCan.c: 131: LATDbits.LATD2 = 1;
 17322  01529E  848C               	bsf	3980,2,c	;volatile
 17323                           
 17324                           ;RemoteCan.c: 132: LATDbits.LATD3 = 1;
 17325  0152A0  868C               	bsf	3980,3,c	;volatile
 17326                           
 17327                           ;RemoteCan.c: 133: PIR3bits.RXB1IF = 0;
 17328  0152A2  92A4               	bcf	4004,1,c	;volatile
 17329                           
 17330                           ;RemoteCan.c: 134: PIR3bits.RXB0IF = 0;
 17331  0152A4  90A4               	bcf	4004,0,c	;volatile
 17332  0152A6                     i2l762:
 17333  0152A6  C071  FFF5         	movff	??_ISR_alta+13,tablat
 17334  0152AA  C070  FFF8         	movff	??_ISR_alta+12,tblptru
 17335  0152AE  C06F  FFF7         	movff	??_ISR_alta+11,tblptrh
 17336  0152B2  C06E  FFF6         	movff	??_ISR_alta+10,tblptrl
 17337  0152B6  C06D  FFF4         	movff	??_ISR_alta+9,prodh
 17338  0152BA  C06C  FFF3         	movff	??_ISR_alta+8,prodl
 17339  0152BE  C06B  FFDA         	movff	??_ISR_alta+7,fsr2h
 17340  0152C2  C06A  FFD9         	movff	??_ISR_alta+6,fsr2l
 17341  0152C6  C069  FFE2         	movff	??_ISR_alta+5,fsr1h
 17342  0152CA  C068  FFE1         	movff	??_ISR_alta+4,fsr1l
 17343  0152CE  C067  FFEA         	movff	??_ISR_alta+3,fsr0h
 17344  0152D2  C066  FFE9         	movff	??_ISR_alta+2,fsr0l
 17345  0152D6  C065  FFFB         	movff	??_ISR_alta+1,pclatu
 17346  0152DA  C064  FFFA         	movff	??_ISR_alta,pclath
 17347  0152DE  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17348  0152E0  0011               	retfie		f
 17349  0152E2                     __end_of_ISR_alta:
 17350                           	opt stack 0
 17351                           pclatu	equ	0xFFB
 17352                           pclath	equ	0xFFA
 17353                           tblptru	equ	0xFF8
 17354                           tblptrh	equ	0xFF7
 17355                           tblptrl	equ	0xFF6
 17356                           tablat	equ	0xFF5
 17357                           prodh	equ	0xFF4
 17358                           prodl	equ	0xFF3
 17359                           intcon	equ	0xFF2
 17360                           postinc0	equ	0xFEE
 17361                           fsr0h	equ	0xFEA
 17362                           fsr0l	equ	0xFE9
 17363                           wreg	equ	0xFE8
 17364                           indf1	equ	0xFE7
 17365                           fsr1h	equ	0xFE2
 17366                           fsr1l	equ	0xFE1
 17367                           bsr	equ	0xFE0
 17368                           indf2	equ	0xFDF
 17369                           postinc2	equ	0xFDE
 17370                           fsr2h	equ	0xFDA
 17371                           fsr2l	equ	0xFD9
 17372                           status	equ	0xFD8
 17373                           
 17374 ;; *************** function i2_CANsendMessage *****************
 17375 ;; Defined at:
 17376 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 17377 ;; Parameters:    Size  Location     Type
 17378 ;;  identifier      4   17[COMRAM] unsigned long 
 17379 ;;  data            2   21[COMRAM] PTR unsigned char 
 17380 ;;		 -> data_speed(1), park_assist_state(8), data_brake(1), data_steering(1), 
 17381 ;;		 -> data(1), 
 17382 ;;  dataLength      1   23[COMRAM] unsigned char 
 17383 ;;  flags           1   24[COMRAM] enum E16909
 17384 ;; Auto vars:     Size  Location     Type
 17385 ;;  CANsendMessa    4    0[BANK0 ] unsigned long 
 17386 ;; Return value:  Size  Location     Type
 17387 ;;		None               void
 17388 ;; Registers used:
 17389 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17390 ;; Tracked objects:
 17391 ;;		On entry : 0/0
 17392 ;;		On exit  : 0/0
 17393 ;;		Unchanged: 0/0
 17394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17395 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17396 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17397 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17398 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17399 ;;Total ram usage:       16 bytes
 17400 ;; Hardware stack levels used:    1
 17401 ;; This function calls:
 17402 ;;		Nothing
 17403 ;; This function is called by:
 17404 ;;		_ISR_alta
 17405 ;; This function uses a non-reentrant model
 17406 ;;
 17407                           
 17408                           	psect	text49
 17409  011B26                     __ptext49:
 17410                           	opt stack 0
 17411  011B26                     i2_CANsendMessage:
 17412                           	opt stack 21
 17413                           
 17414                           ;inc\CANlib.h: 296: unsigned long tamp;
 17415                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 17416                           
 17417                           ;incstack = 0
 17418  011B26  010F               	movlb	15	; () banked
 17419  011B28  B740               	btfsc	64,3,b	;volatile
 17420  011B2A  D122               	goto	i2l375
 17421                           
 17422                           ; BSR set to: 15
 17423                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 17424  011B2C  C044  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 17425                           
 17426                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 17427  011B30  AC45               	btfss	i2CANsendMessage@flags,6,c
 17428  011B32  D003               	goto	i2l376
 17429                           
 17430                           ; BSR set to: 15
 17431                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 17432  011B34  010F               	movlb	15	; () banked
 17433  011B36  8D45               	bsf	69,6,b	;volatile
 17434  011B38  D002               	goto	i2l377
 17435  011B3A                     i2l376:
 17436                           
 17437                           ; BSR set to: 15
 17438                           ;inc\CANlib.h: 302: else
 17439                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 17440  011B3A  010F               	movlb	15	; () banked
 17441  011B3C  9D45               	bcf	69,6,b	;volatile
 17442  011B3E                     i2l377:
 17443                           
 17444                           ; BSR set to: 15
 17445                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 17446  011B3E  A645               	btfss	i2CANsendMessage@flags,3,c
 17447  011B40  D06D               	goto	i2l378
 17448                           
 17449                           ; BSR set to: 15
 17450                           ;inc\CANlib.h: 306: {
 17451                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 17452  011B42  503E               	movf	i2CANsendMessage@identifier,w,c
 17453  011B44  0100               	movlb	0	; () banked
 17454  011B46  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17455  011B48  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 17456  011B4A  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 17457  011B4C  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 17458                           
 17459                           ; BSR set to: 0
 17460                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 17461  011B4E  C060  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 17462                           
 17463                           ; BSR set to: 0
 17464                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 17465  011B52  0E00               	movlw	0
 17466  011B54  143E               	andwf	i2CANsendMessage@identifier,w,c
 17467  011B56  0100               	movlb	0	; () banked
 17468  011B58  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17469  011B5A  0EFF               	movlw	255
 17470  011B5C  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 17471  011B5E  0100               	movlb	0	; () banked
 17472  011B60  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 17473  011B62  0E00               	movlw	0
 17474  011B64  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 17475  011B66  0100               	movlb	0	; () banked
 17476  011B68  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 17477  011B6A  0E00               	movlw	0
 17478  011B6C  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 17479  011B6E  0100               	movlb	0	; () banked
 17480  011B70  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 17481                           
 17482                           ; BSR set to: 0
 17483                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 17484  011B72  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17485  011B76  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17486  011B7A  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17487  011B7E  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17488  011B82  C047  F046         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 17489  011B86  C048  F047         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 17490  011B8A  C049  F048         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 17491  011B8E  6A49               	clrf	??i2_CANsendMessage+3,c
 17492  011B90  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17493  011B94  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17494  011B98  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17495  011B9C  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17496                           
 17497                           ; BSR set to: 0
 17498                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 17499  011BA0  C060  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 17500                           
 17501                           ; BSR set to: 0
 17502                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 17503  011BA4  0E00               	movlw	0
 17504  011BA6  010F               	movlb	15	; () banked
 17505  011BA8  6F42               	movwf	66,b	;volatile
 17506                           
 17507                           ; BSR set to: 15
 17508                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 17509  011BAA  010F               	movlb	15	; () banked
 17510  011BAC  8742               	bsf	66,3,b	;volatile
 17511                           
 17512                           ; BSR set to: 15
 17513                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 17514  011BAE  A040               	btfss	i2CANsendMessage@identifier+2,0,c
 17515  011BB0  D002               	goto	i2l379
 17516                           
 17517                           ; BSR set to: 15
 17518                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 17519  011BB2  010F               	movlb	15	; () banked
 17520  011BB4  8142               	bsf	66,0,b	;volatile
 17521  011BB6                     i2l379:
 17522                           
 17523                           ; BSR set to: 15
 17524                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 17525  011BB6  A240               	btfss	i2CANsendMessage@identifier+2,1,c
 17526  011BB8  D002               	goto	i2l380
 17527                           
 17528                           ; BSR set to: 15
 17529                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 17530  011BBA  010F               	movlb	15	; () banked
 17531  011BBC  8342               	bsf	66,1,b	;volatile
 17532  011BBE                     i2l380:
 17533                           
 17534                           ; BSR set to: 15
 17535                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 17536  011BBE  A440               	btfss	i2CANsendMessage@identifier+2,2,c
 17537  011BC0  D002               	goto	i2l381
 17538                           
 17539                           ; BSR set to: 15
 17540                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 17541  011BC2  010F               	movlb	15	; () banked
 17542  011BC4  8B42               	bsf	66,5,b	;volatile
 17543  011BC6                     i2l381:
 17544                           
 17545                           ; BSR set to: 15
 17546                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 17547  011BC6  A640               	btfss	i2CANsendMessage@identifier+2,3,c
 17548  011BC8  D002               	goto	i2l382
 17549                           
 17550                           ; BSR set to: 15
 17551                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 17552  011BCA  010F               	movlb	15	; () banked
 17553  011BCC  8D42               	bsf	66,6,b	;volatile
 17554  011BCE                     i2l382:
 17555                           
 17556                           ; BSR set to: 15
 17557                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 17558  011BCE  A840               	btfss	i2CANsendMessage@identifier+2,4,c
 17559  011BD0  D002               	goto	i2l8594
 17560                           
 17561                           ; BSR set to: 15
 17562                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 17563  011BD2  010F               	movlb	15	; () banked
 17564  011BD4  8F42               	bsf	66,7,b	;volatile
 17565  011BD6                     i2l8594:
 17566                           
 17567                           ; BSR set to: 15
 17568                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 17569  011BD6  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17570  011BDA  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17571  011BDE  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17572  011BE2  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17573  011BE6  0E16               	movlw	22
 17574  011BE8  D005               	goto	i2u1134_40
 17575  011BEA                     i2u1134_45:
 17576  011BEA  90D8               	bcf	status,0,c
 17577  011BEC  3249               	rrcf	??i2_CANsendMessage+3,f,c
 17578  011BEE  3248               	rrcf	??i2_CANsendMessage+2,f,c
 17579  011BF0  3247               	rrcf	??i2_CANsendMessage+1,f,c
 17580  011BF2  3246               	rrcf	??i2_CANsendMessage,f,c
 17581  011BF4                     i2u1134_40:
 17582  011BF4  2EE8               	decfsz	wreg,f,c
 17583  011BF6  D7F9               	goto	i2u1134_45
 17584  011BF8  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17585  011BFC  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17586  011C00  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17587  011C04  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17588                           
 17589                           ; BSR set to: 15
 17590                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17591  011C08  0100               	movlb	0	; () banked
 17592  011C0A  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 17593  011C0C  0100               	movlb	0	; () banked
 17594  011C0E  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17595  011C10  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 17596  011C12  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 17597  011C14  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 17598                           
 17599                           ; BSR set to: 0
 17600                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17601  011C16  C060  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 17602                           
 17603                           ;inc\CANlib.h: 332: }
 17604  011C1A  D053               	goto	i2l8614
 17605  011C1C                     i2l378:
 17606                           
 17607                           ; BSR set to: 15
 17608                           ;inc\CANlib.h: 334: else
 17609                           ;inc\CANlib.h: 336: {
 17610                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17611  011C1C  010F               	movlb	15	; () banked
 17612  011C1E  9742               	bcf	66,3,b	;volatile
 17613                           
 17614                           ; BSR set to: 15
 17615                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17616  011C20  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17617  011C24  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17618  011C28  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17619  011C2C  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17620  011C30  0E04               	movlw	4
 17621  011C32  D005               	goto	i2u1135_40
 17622  011C34                     i2u1135_45:
 17623  011C34  90D8               	bcf	status,0,c
 17624  011C36  3249               	rrcf	??i2_CANsendMessage+3,f,c
 17625  011C38  3248               	rrcf	??i2_CANsendMessage+2,f,c
 17626  011C3A  3247               	rrcf	??i2_CANsendMessage+1,f,c
 17627  011C3C  3246               	rrcf	??i2_CANsendMessage,f,c
 17628  011C3E                     i2u1135_40:
 17629  011C3E  2EE8               	decfsz	wreg,f,c
 17630  011C40  D7F9               	goto	i2u1135_45
 17631  011C42  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17632  011C46  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17633  011C4A  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17634  011C4E  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17635                           
 17636                           ; BSR set to: 15
 17637                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17638  011C52  0100               	movlb	0	; () banked
 17639  011C54  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 17640  011C56  0100               	movlb	0	; () banked
 17641  011C58  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17642  011C5A  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 17643  011C5C  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 17644  011C5E  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 17645                           
 17646                           ; BSR set to: 0
 17647                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17648  011C60  C060  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 17649                           
 17650                           ; BSR set to: 0
 17651                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17652  011C64  0E07               	movlw	7
 17653  011C66  143E               	andwf	i2CANsendMessage@identifier,w,c
 17654  011C68  0100               	movlb	0	; () banked
 17655  011C6A  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17656  011C6C  0E00               	movlw	0
 17657  011C6E  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 17658  011C70  0100               	movlb	0	; () banked
 17659  011C72  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 17660  011C74  0E00               	movlw	0
 17661  011C76  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 17662  011C78  0100               	movlb	0	; () banked
 17663  011C7A  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 17664  011C7C  0E00               	movlw	0
 17665  011C7E  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 17666  011C80  0100               	movlb	0	; () banked
 17667  011C82  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 17668                           
 17669                           ; BSR set to: 0
 17670                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17671  011C84  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17672  011C88  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17673  011C8C  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17674  011C90  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17675  011C94  0E05               	movlw	5
 17676  011C96                     i2u1136_45:
 17677  011C96  90D8               	bcf	status,0,c
 17678  011C98  3646               	rlcf	??i2_CANsendMessage,f,c
 17679  011C9A  3647               	rlcf	??i2_CANsendMessage+1,f,c
 17680  011C9C  3648               	rlcf	??i2_CANsendMessage+2,f,c
 17681  011C9E  3649               	rlcf	??i2_CANsendMessage+3,f,c
 17682  011CA0  2EE8               	decfsz	wreg,f,c
 17683  011CA2  D7F9               	goto	i2u1136_45
 17684  011CA4  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17685  011CA8  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17686  011CAC  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17687  011CB0  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17688                           
 17689                           ; BSR set to: 0
 17690                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17691  011CB4  010F               	movlb	15	; () banked
 17692  011CB6  5142               	movf	66,w,b	;volatile
 17693  011CB8  0B1F               	andlw	31
 17694  011CBA  010F               	movlb	15	; () banked
 17695  011CBC  6F42               	movwf	66,b	;volatile
 17696                           
 17697                           ; BSR set to: 15
 17698                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17699  011CBE  C060  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 17700  011CC2                     i2l8614:
 17701                           
 17702                           ;inc\CANlib.h: 347: }
 17703                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17704  011CC2  A045               	btfss	i2CANsendMessage@flags,0,c
 17705  011CC4  D003               	goto	i2l385
 17706                           
 17707                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17708  011CC6  010F               	movlb	15	; () banked
 17709  011CC8  8140               	bsf	64,0,b	;volatile
 17710  011CCA  D002               	goto	i2l386
 17711  011CCC                     i2l385:
 17712                           
 17713                           ;inc\CANlib.h: 351: else
 17714                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17715  011CCC  010F               	movlb	15	; () banked
 17716  011CCE  9140               	bcf	64,0,b	;volatile
 17717  011CD0                     i2l386:
 17718                           
 17719                           ; BSR set to: 15
 17720                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17721  011CD0  A245               	btfss	i2CANsendMessage@flags,1,c
 17722  011CD2  D003               	goto	i2l387
 17723                           
 17724                           ; BSR set to: 15
 17725                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 17726  011CD4  010F               	movlb	15	; () banked
 17727  011CD6  8340               	bsf	64,1,b	;volatile
 17728  011CD8  D002               	goto	i2l8620
 17729  011CDA                     i2l387:
 17730                           
 17731                           ; BSR set to: 15
 17732                           ;inc\CANlib.h: 355: else
 17733                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 17734  011CDA  010F               	movlb	15	; () banked
 17735  011CDC  9340               	bcf	64,1,b	;volatile
 17736  011CDE                     i2l8620:
 17737                           
 17738                           ; BSR set to: 15
 17739                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 17740  011CDE  C042  FFD9         	movff	i2CANsendMessage@data,fsr2l
 17741  011CE2  C043  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 17742  011CE6  50DF               	movf	indf2,w,c
 17743  011CE8  010F               	movlb	15	; () banked
 17744  011CEA  6F46               	movwf	70,b	;volatile
 17745                           
 17746                           ; BSR set to: 15
 17747                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 17748  011CEC  EE20 F001          	lfsr	2,1
 17749  011CF0  5042               	movf	i2CANsendMessage@data,w,c
 17750  011CF2  26D9               	addwf	fsr2l,f,c
 17751  011CF4  5043               	movf	i2CANsendMessage@data+1,w,c
 17752  011CF6  22DA               	addwfc	fsr2h,f,c
 17753  011CF8  50DF               	movf	indf2,w,c
 17754  011CFA  010F               	movlb	15	; () banked
 17755  011CFC  6F47               	movwf	71,b	;volatile
 17756                           
 17757                           ; BSR set to: 15
 17758                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 17759  011CFE  EE20 F002          	lfsr	2,2
 17760  011D02  5042               	movf	i2CANsendMessage@data,w,c
 17761  011D04  26D9               	addwf	fsr2l,f,c
 17762  011D06  5043               	movf	i2CANsendMessage@data+1,w,c
 17763  011D08  22DA               	addwfc	fsr2h,f,c
 17764  011D0A  50DF               	movf	indf2,w,c
 17765  011D0C  010F               	movlb	15	; () banked
 17766  011D0E  6F48               	movwf	72,b	;volatile
 17767                           
 17768                           ; BSR set to: 15
 17769                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 17770  011D10  EE20 F003          	lfsr	2,3
 17771  011D14  5042               	movf	i2CANsendMessage@data,w,c
 17772  011D16  26D9               	addwf	fsr2l,f,c
 17773  011D18  5043               	movf	i2CANsendMessage@data+1,w,c
 17774  011D1A  22DA               	addwfc	fsr2h,f,c
 17775  011D1C  50DF               	movf	indf2,w,c
 17776  011D1E  010F               	movlb	15	; () banked
 17777  011D20  6F49               	movwf	73,b	;volatile
 17778                           
 17779                           ; BSR set to: 15
 17780                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 17781  011D22  EE20 F004          	lfsr	2,4
 17782  011D26  5042               	movf	i2CANsendMessage@data,w,c
 17783  011D28  26D9               	addwf	fsr2l,f,c
 17784  011D2A  5043               	movf	i2CANsendMessage@data+1,w,c
 17785  011D2C  22DA               	addwfc	fsr2h,f,c
 17786  011D2E  50DF               	movf	indf2,w,c
 17787  011D30  010F               	movlb	15	; () banked
 17788  011D32  6F4A               	movwf	74,b	;volatile
 17789                           
 17790                           ; BSR set to: 15
 17791                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17792  011D34  EE20 F005          	lfsr	2,5
 17793  011D38  5042               	movf	i2CANsendMessage@data,w,c
 17794  011D3A  26D9               	addwf	fsr2l,f,c
 17795  011D3C  5043               	movf	i2CANsendMessage@data+1,w,c
 17796  011D3E  22DA               	addwfc	fsr2h,f,c
 17797  011D40  50DF               	movf	indf2,w,c
 17798  011D42  010F               	movlb	15	; () banked
 17799  011D44  6F4B               	movwf	75,b	;volatile
 17800                           
 17801                           ; BSR set to: 15
 17802                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17803  011D46  EE20 F006          	lfsr	2,6
 17804  011D4A  5042               	movf	i2CANsendMessage@data,w,c
 17805  011D4C  26D9               	addwf	fsr2l,f,c
 17806  011D4E  5043               	movf	i2CANsendMessage@data+1,w,c
 17807  011D50  22DA               	addwfc	fsr2h,f,c
 17808  011D52  50DF               	movf	indf2,w,c
 17809  011D54  010F               	movlb	15	; () banked
 17810  011D56  6F4C               	movwf	76,b	;volatile
 17811                           
 17812                           ; BSR set to: 15
 17813                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17814  011D58  EE20 F007          	lfsr	2,7
 17815  011D5C  5042               	movf	i2CANsendMessage@data,w,c
 17816  011D5E  26D9               	addwf	fsr2l,f,c
 17817  011D60  5043               	movf	i2CANsendMessage@data+1,w,c
 17818  011D62  22DA               	addwfc	fsr2h,f,c
 17819  011D64  50DF               	movf	indf2,w,c
 17820  011D66  010F               	movlb	15	; () banked
 17821  011D68  6F4D               	movwf	77,b	;volatile
 17822                           
 17823                           ; BSR set to: 15
 17824                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17825  011D6A  010F               	movlb	15	; () banked
 17826  011D6C  8740               	bsf	64,3,b	;volatile
 17827                           
 17828                           ; BSR set to: 15
 17829                           ;inc\CANlib.h: 368: return;
 17830  011D6E  0012               	return	
 17831  011D70                     i2l375:
 17832                           
 17833                           ; BSR set to: 15
 17834                           ;inc\CANlib.h: 369: }
 17835                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17836  011D70  010F               	movlb	15	; () banked
 17837  011D72  B730               	btfsc	48,3,b	;volatile
 17838  011D74  D122               	goto	i2l390
 17839                           
 17840                           ; BSR set to: 15
 17841                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17842  011D76  C044  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 17843                           
 17844                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17845  011D7A  AC45               	btfss	i2CANsendMessage@flags,6,c
 17846  011D7C  D003               	goto	i2l391
 17847                           
 17848                           ; BSR set to: 15
 17849                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17850  011D7E  010F               	movlb	15	; () banked
 17851  011D80  8D35               	bsf	53,6,b	;volatile
 17852  011D82  D002               	goto	i2l392
 17853  011D84                     i2l391:
 17854                           
 17855                           ; BSR set to: 15
 17856                           ;inc\CANlib.h: 378: else
 17857                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17858  011D84  010F               	movlb	15	; () banked
 17859  011D86  9D35               	bcf	53,6,b	;volatile
 17860  011D88                     i2l392:
 17861                           
 17862                           ; BSR set to: 15
 17863                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 17864  011D88  A645               	btfss	i2CANsendMessage@flags,3,c
 17865  011D8A  D06D               	goto	i2l393
 17866                           
 17867                           ; BSR set to: 15
 17868                           ;inc\CANlib.h: 382: {
 17869                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 17870  011D8C  503E               	movf	i2CANsendMessage@identifier,w,c
 17871  011D8E  0100               	movlb	0	; () banked
 17872  011D90  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17873  011D92  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 17874  011D94  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 17875  011D96  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 17876                           
 17877                           ; BSR set to: 0
 17878                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 17879  011D98  C060  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 17880                           
 17881                           ; BSR set to: 0
 17882                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 17883  011D9C  0E00               	movlw	0
 17884  011D9E  143E               	andwf	i2CANsendMessage@identifier,w,c
 17885  011DA0  0100               	movlb	0	; () banked
 17886  011DA2  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 17887  011DA4  0EFF               	movlw	255
 17888  011DA6  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 17889  011DA8  0100               	movlb	0	; () banked
 17890  011DAA  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 17891  011DAC  0E00               	movlw	0
 17892  011DAE  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 17893  011DB0  0100               	movlb	0	; () banked
 17894  011DB2  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 17895  011DB4  0E00               	movlw	0
 17896  011DB6  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 17897  011DB8  0100               	movlb	0	; () banked
 17898  011DBA  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 17899                           
 17900                           ; BSR set to: 0
 17901                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 17902  011DBC  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17903  011DC0  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17904  011DC4  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17905  011DC8  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17906  011DCC  C047  F046         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 17907  011DD0  C048  F047         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 17908  011DD4  C049  F048         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 17909  011DD8  6A49               	clrf	??i2_CANsendMessage+3,c
 17910  011DDA  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17911  011DDE  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17912  011DE2  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17913  011DE6  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17914                           
 17915                           ; BSR set to: 0
 17916                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 17917  011DEA  C060  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 17918                           
 17919                           ; BSR set to: 0
 17920                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 17921  011DEE  0E00               	movlw	0
 17922  011DF0  010F               	movlb	15	; () banked
 17923  011DF2  6F32               	movwf	50,b	;volatile
 17924                           
 17925                           ; BSR set to: 15
 17926                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 17927  011DF4  010F               	movlb	15	; () banked
 17928  011DF6  8732               	bsf	50,3,b	;volatile
 17929                           
 17930                           ; BSR set to: 15
 17931                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 17932  011DF8  A040               	btfss	i2CANsendMessage@identifier+2,0,c
 17933  011DFA  D002               	goto	i2l394
 17934                           
 17935                           ; BSR set to: 15
 17936                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 17937  011DFC  010F               	movlb	15	; () banked
 17938  011DFE  8132               	bsf	50,0,b	;volatile
 17939  011E00                     i2l394:
 17940                           
 17941                           ; BSR set to: 15
 17942                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 17943  011E00  A240               	btfss	i2CANsendMessage@identifier+2,1,c
 17944  011E02  D002               	goto	i2l395
 17945                           
 17946                           ; BSR set to: 15
 17947                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 17948  011E04  010F               	movlb	15	; () banked
 17949  011E06  8332               	bsf	50,1,b	;volatile
 17950  011E08                     i2l395:
 17951                           
 17952                           ; BSR set to: 15
 17953                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 17954  011E08  A440               	btfss	i2CANsendMessage@identifier+2,2,c
 17955  011E0A  D002               	goto	i2l396
 17956                           
 17957                           ; BSR set to: 15
 17958                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 17959  011E0C  010F               	movlb	15	; () banked
 17960  011E0E  8B32               	bsf	50,5,b	;volatile
 17961  011E10                     i2l396:
 17962                           
 17963                           ; BSR set to: 15
 17964                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 17965  011E10  A640               	btfss	i2CANsendMessage@identifier+2,3,c
 17966  011E12  D002               	goto	i2l397
 17967                           
 17968                           ; BSR set to: 15
 17969                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 17970  011E14  010F               	movlb	15	; () banked
 17971  011E16  8D32               	bsf	50,6,b	;volatile
 17972  011E18                     i2l397:
 17973                           
 17974                           ; BSR set to: 15
 17975                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 17976  011E18  A840               	btfss	i2CANsendMessage@identifier+2,4,c
 17977  011E1A  D002               	goto	i2l8670
 17978                           
 17979                           ; BSR set to: 15
 17980                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 17981  011E1C  010F               	movlb	15	; () banked
 17982  011E1E  8F32               	bsf	50,7,b	;volatile
 17983  011E20                     i2l8670:
 17984                           
 17985                           ; BSR set to: 15
 17986                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 17987  011E20  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17988  011E24  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17989  011E28  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17990  011E2C  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17991  011E30  0E16               	movlw	22
 17992  011E32  D005               	goto	i2u1147_40
 17993  011E34                     i2u1147_45:
 17994  011E34  90D8               	bcf	status,0,c
 17995  011E36  3249               	rrcf	??i2_CANsendMessage+3,f,c
 17996  011E38  3248               	rrcf	??i2_CANsendMessage+2,f,c
 17997  011E3A  3247               	rrcf	??i2_CANsendMessage+1,f,c
 17998  011E3C  3246               	rrcf	??i2_CANsendMessage,f,c
 17999  011E3E                     i2u1147_40:
 18000  011E3E  2EE8               	decfsz	wreg,f,c
 18001  011E40  D7F9               	goto	i2u1147_45
 18002  011E42  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18003  011E46  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18004  011E4A  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18005  011E4E  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18006                           
 18007                           ; BSR set to: 15
 18008                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 18009  011E52  0100               	movlb	0	; () banked
 18010  011E54  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 18011  011E56  0100               	movlb	0	; () banked
 18012  011E58  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18013  011E5A  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18014  011E5C  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18015  011E5E  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18016                           
 18017                           ; BSR set to: 0
 18018                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 18019  011E60  C060  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 18020                           
 18021                           ;inc\CANlib.h: 407: }
 18022  011E64  D053               	goto	i2l8690
 18023  011E66                     i2l393:
 18024                           
 18025                           ; BSR set to: 15
 18026                           ;inc\CANlib.h: 409: else
 18027                           ;inc\CANlib.h: 411: {
 18028                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 18029  011E66  010F               	movlb	15	; () banked
 18030  011E68  9732               	bcf	50,3,b	;volatile
 18031                           
 18032                           ; BSR set to: 15
 18033                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 18034  011E6A  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18035  011E6E  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18036  011E72  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18037  011E76  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18038  011E7A  0E04               	movlw	4
 18039  011E7C  D005               	goto	i2u1148_40
 18040  011E7E                     i2u1148_45:
 18041  011E7E  90D8               	bcf	status,0,c
 18042  011E80  3249               	rrcf	??i2_CANsendMessage+3,f,c
 18043  011E82  3248               	rrcf	??i2_CANsendMessage+2,f,c
 18044  011E84  3247               	rrcf	??i2_CANsendMessage+1,f,c
 18045  011E86  3246               	rrcf	??i2_CANsendMessage,f,c
 18046  011E88                     i2u1148_40:
 18047  011E88  2EE8               	decfsz	wreg,f,c
 18048  011E8A  D7F9               	goto	i2u1148_45
 18049  011E8C  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18050  011E90  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18051  011E94  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18052  011E98  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18053                           
 18054                           ; BSR set to: 15
 18055                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 18056  011E9C  0100               	movlb	0	; () banked
 18057  011E9E  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 18058  011EA0  0100               	movlb	0	; () banked
 18059  011EA2  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18060  011EA4  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18061  011EA6  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18062  011EA8  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18063                           
 18064                           ; BSR set to: 0
 18065                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 18066  011EAA  C060  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 18067                           
 18068                           ; BSR set to: 0
 18069                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 18070  011EAE  0E07               	movlw	7
 18071  011EB0  143E               	andwf	i2CANsendMessage@identifier,w,c
 18072  011EB2  0100               	movlb	0	; () banked
 18073  011EB4  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18074  011EB6  0E00               	movlw	0
 18075  011EB8  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 18076  011EBA  0100               	movlb	0	; () banked
 18077  011EBC  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 18078  011EBE  0E00               	movlw	0
 18079  011EC0  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 18080  011EC2  0100               	movlb	0	; () banked
 18081  011EC4  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 18082  011EC6  0E00               	movlw	0
 18083  011EC8  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 18084  011ECA  0100               	movlb	0	; () banked
 18085  011ECC  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 18086                           
 18087                           ; BSR set to: 0
 18088                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 18089  011ECE  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18090  011ED2  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18091  011ED6  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18092  011EDA  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18093  011EDE  0E05               	movlw	5
 18094  011EE0                     i2u1149_45:
 18095  011EE0  90D8               	bcf	status,0,c
 18096  011EE2  3646               	rlcf	??i2_CANsendMessage,f,c
 18097  011EE4  3647               	rlcf	??i2_CANsendMessage+1,f,c
 18098  011EE6  3648               	rlcf	??i2_CANsendMessage+2,f,c
 18099  011EE8  3649               	rlcf	??i2_CANsendMessage+3,f,c
 18100  011EEA  2EE8               	decfsz	wreg,f,c
 18101  011EEC  D7F9               	goto	i2u1149_45
 18102  011EEE  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18103  011EF2  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18104  011EF6  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18105  011EFA  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18106                           
 18107                           ; BSR set to: 0
 18108                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 18109  011EFE  010F               	movlb	15	; () banked
 18110  011F00  5132               	movf	50,w,b	;volatile
 18111  011F02  0B1F               	andlw	31
 18112  011F04  010F               	movlb	15	; () banked
 18113  011F06  6F32               	movwf	50,b	;volatile
 18114                           
 18115                           ; BSR set to: 15
 18116                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 18117  011F08  C060  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 18118  011F0C                     i2l8690:
 18119                           
 18120                           ;inc\CANlib.h: 422: }
 18121                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 18122  011F0C  A045               	btfss	i2CANsendMessage@flags,0,c
 18123  011F0E  D003               	goto	i2l400
 18124                           
 18125                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 18126  011F10  010F               	movlb	15	; () banked
 18127  011F12  8130               	bsf	48,0,b	;volatile
 18128  011F14  D002               	goto	i2l401
 18129  011F16                     i2l400:
 18130                           
 18131                           ;inc\CANlib.h: 426: else
 18132                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 18133  011F16  010F               	movlb	15	; () banked
 18134  011F18  9130               	bcf	48,0,b	;volatile
 18135  011F1A                     i2l401:
 18136                           
 18137                           ; BSR set to: 15
 18138                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 18139  011F1A  A245               	btfss	i2CANsendMessage@flags,1,c
 18140  011F1C  D003               	goto	i2l402
 18141                           
 18142                           ; BSR set to: 15
 18143                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 18144  011F1E  010F               	movlb	15	; () banked
 18145  011F20  8330               	bsf	48,1,b	;volatile
 18146  011F22  D002               	goto	i2l8696
 18147  011F24                     i2l402:
 18148                           
 18149                           ; BSR set to: 15
 18150                           ;inc\CANlib.h: 430: else
 18151                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 18152  011F24  010F               	movlb	15	; () banked
 18153  011F26  9330               	bcf	48,1,b	;volatile
 18154  011F28                     i2l8696:
 18155                           
 18156                           ; BSR set to: 15
 18157                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 18158  011F28  C042  FFD9         	movff	i2CANsendMessage@data,fsr2l
 18159  011F2C  C043  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 18160  011F30  50DF               	movf	indf2,w,c
 18161  011F32  010F               	movlb	15	; () banked
 18162  011F34  6F36               	movwf	54,b	;volatile
 18163                           
 18164                           ; BSR set to: 15
 18165                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 18166  011F36  EE20 F001          	lfsr	2,1
 18167  011F3A  5042               	movf	i2CANsendMessage@data,w,c
 18168  011F3C  26D9               	addwf	fsr2l,f,c
 18169  011F3E  5043               	movf	i2CANsendMessage@data+1,w,c
 18170  011F40  22DA               	addwfc	fsr2h,f,c
 18171  011F42  50DF               	movf	indf2,w,c
 18172  011F44  010F               	movlb	15	; () banked
 18173  011F46  6F37               	movwf	55,b	;volatile
 18174                           
 18175                           ; BSR set to: 15
 18176                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 18177  011F48  EE20 F002          	lfsr	2,2
 18178  011F4C  5042               	movf	i2CANsendMessage@data,w,c
 18179  011F4E  26D9               	addwf	fsr2l,f,c
 18180  011F50  5043               	movf	i2CANsendMessage@data+1,w,c
 18181  011F52  22DA               	addwfc	fsr2h,f,c
 18182  011F54  50DF               	movf	indf2,w,c
 18183  011F56  010F               	movlb	15	; () banked
 18184  011F58  6F38               	movwf	56,b	;volatile
 18185                           
 18186                           ; BSR set to: 15
 18187                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 18188  011F5A  EE20 F003          	lfsr	2,3
 18189  011F5E  5042               	movf	i2CANsendMessage@data,w,c
 18190  011F60  26D9               	addwf	fsr2l,f,c
 18191  011F62  5043               	movf	i2CANsendMessage@data+1,w,c
 18192  011F64  22DA               	addwfc	fsr2h,f,c
 18193  011F66  50DF               	movf	indf2,w,c
 18194  011F68  010F               	movlb	15	; () banked
 18195  011F6A  6F39               	movwf	57,b	;volatile
 18196                           
 18197                           ; BSR set to: 15
 18198                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 18199  011F6C  EE20 F004          	lfsr	2,4
 18200  011F70  5042               	movf	i2CANsendMessage@data,w,c
 18201  011F72  26D9               	addwf	fsr2l,f,c
 18202  011F74  5043               	movf	i2CANsendMessage@data+1,w,c
 18203  011F76  22DA               	addwfc	fsr2h,f,c
 18204  011F78  50DF               	movf	indf2,w,c
 18205  011F7A  010F               	movlb	15	; () banked
 18206  011F7C  6F3A               	movwf	58,b	;volatile
 18207                           
 18208                           ; BSR set to: 15
 18209                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 18210  011F7E  EE20 F005          	lfsr	2,5
 18211  011F82  5042               	movf	i2CANsendMessage@data,w,c
 18212  011F84  26D9               	addwf	fsr2l,f,c
 18213  011F86  5043               	movf	i2CANsendMessage@data+1,w,c
 18214  011F88  22DA               	addwfc	fsr2h,f,c
 18215  011F8A  50DF               	movf	indf2,w,c
 18216  011F8C  010F               	movlb	15	; () banked
 18217  011F8E  6F3B               	movwf	59,b	;volatile
 18218                           
 18219                           ; BSR set to: 15
 18220                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 18221  011F90  EE20 F006          	lfsr	2,6
 18222  011F94  5042               	movf	i2CANsendMessage@data,w,c
 18223  011F96  26D9               	addwf	fsr2l,f,c
 18224  011F98  5043               	movf	i2CANsendMessage@data+1,w,c
 18225  011F9A  22DA               	addwfc	fsr2h,f,c
 18226  011F9C  50DF               	movf	indf2,w,c
 18227  011F9E  010F               	movlb	15	; () banked
 18228  011FA0  6F3C               	movwf	60,b	;volatile
 18229                           
 18230                           ; BSR set to: 15
 18231                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 18232  011FA2  EE20 F007          	lfsr	2,7
 18233  011FA6  5042               	movf	i2CANsendMessage@data,w,c
 18234  011FA8  26D9               	addwf	fsr2l,f,c
 18235  011FAA  5043               	movf	i2CANsendMessage@data+1,w,c
 18236  011FAC  22DA               	addwfc	fsr2h,f,c
 18237  011FAE  50DF               	movf	indf2,w,c
 18238  011FB0  010F               	movlb	15	; () banked
 18239  011FB2  6F3D               	movwf	61,b	;volatile
 18240                           
 18241                           ; BSR set to: 15
 18242                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 18243  011FB4  010F               	movlb	15	; () banked
 18244  011FB6  8730               	bsf	48,3,b	;volatile
 18245                           
 18246                           ; BSR set to: 15
 18247                           ;inc\CANlib.h: 444: return;
 18248  011FB8  0012               	return	
 18249  011FBA                     i2l390:
 18250                           
 18251                           ; BSR set to: 15
 18252                           ;inc\CANlib.h: 445: }
 18253                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 18254  011FBA  010F               	movlb	15	; () banked
 18255  011FBC  B720               	btfsc	32,3,b	;volatile
 18256  011FBE  0012               	return	
 18257                           
 18258                           ; BSR set to: 15
 18259                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 18260  011FC0  C044  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 18261                           
 18262                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 18263  011FC4  AC45               	btfss	i2CANsendMessage@flags,6,c
 18264  011FC6  D003               	goto	i2l405
 18265                           
 18266                           ; BSR set to: 15
 18267                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 18268  011FC8  010F               	movlb	15	; () banked
 18269  011FCA  8D25               	bsf	37,6,b	;volatile
 18270  011FCC  D002               	goto	i2l406
 18271  011FCE                     i2l405:
 18272                           
 18273                           ; BSR set to: 15
 18274                           ;inc\CANlib.h: 454: else
 18275                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 18276  011FCE  010F               	movlb	15	; () banked
 18277  011FD0  9D25               	bcf	37,6,b	;volatile
 18278  011FD2                     i2l406:
 18279                           
 18280                           ; BSR set to: 15
 18281                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 18282  011FD2  A645               	btfss	i2CANsendMessage@flags,3,c
 18283  011FD4  D06D               	goto	i2l407
 18284                           
 18285                           ; BSR set to: 15
 18286                           ;inc\CANlib.h: 458: {
 18287                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 18288  011FD6  503E               	movf	i2CANsendMessage@identifier,w,c
 18289  011FD8  0100               	movlb	0	; () banked
 18290  011FDA  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18291  011FDC  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18292  011FDE  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18293  011FE0  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18294                           
 18295                           ; BSR set to: 0
 18296                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 18297  011FE2  C060  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 18298                           
 18299                           ; BSR set to: 0
 18300                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 18301  011FE6  0E00               	movlw	0
 18302  011FE8  143E               	andwf	i2CANsendMessage@identifier,w,c
 18303  011FEA  0100               	movlb	0	; () banked
 18304  011FEC  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18305  011FEE  0EFF               	movlw	255
 18306  011FF0  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 18307  011FF2  0100               	movlb	0	; () banked
 18308  011FF4  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 18309  011FF6  0E00               	movlw	0
 18310  011FF8  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 18311  011FFA  0100               	movlb	0	; () banked
 18312  011FFC  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 18313  011FFE  0E00               	movlw	0
 18314  012000  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 18315  012002  0100               	movlb	0	; () banked
 18316  012004  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 18317                           
 18318                           ; BSR set to: 0
 18319                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 18320  012006  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18321  01200A  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18322  01200E  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18323  012012  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18324  012016  C047  F046         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 18325  01201A  C048  F047         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 18326  01201E  C049  F048         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 18327  012022  6A49               	clrf	??i2_CANsendMessage+3,c
 18328  012024  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18329  012028  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18330  01202C  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18331  012030  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18332                           
 18333                           ; BSR set to: 0
 18334                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 18335  012034  C060  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 18336                           
 18337                           ; BSR set to: 0
 18338                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 18339  012038  0E00               	movlw	0
 18340  01203A  010F               	movlb	15	; () banked
 18341  01203C  6F22               	movwf	34,b	;volatile
 18342                           
 18343                           ; BSR set to: 15
 18344                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 18345  01203E  010F               	movlb	15	; () banked
 18346  012040  8722               	bsf	34,3,b	;volatile
 18347                           
 18348                           ; BSR set to: 15
 18349                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 18350  012042  A040               	btfss	i2CANsendMessage@identifier+2,0,c
 18351  012044  D002               	goto	i2l408
 18352                           
 18353                           ; BSR set to: 15
 18354                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 18355  012046  010F               	movlb	15	; () banked
 18356  012048  8122               	bsf	34,0,b	;volatile
 18357  01204A                     i2l408:
 18358                           
 18359                           ; BSR set to: 15
 18360                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 18361  01204A  A240               	btfss	i2CANsendMessage@identifier+2,1,c
 18362  01204C  D002               	goto	i2l409
 18363                           
 18364                           ; BSR set to: 15
 18365                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 18366  01204E  010F               	movlb	15	; () banked
 18367  012050  8322               	bsf	34,1,b	;volatile
 18368  012052                     i2l409:
 18369                           
 18370                           ; BSR set to: 15
 18371                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 18372  012052  A440               	btfss	i2CANsendMessage@identifier+2,2,c
 18373  012054  D002               	goto	i2l410
 18374                           
 18375                           ; BSR set to: 15
 18376                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 18377  012056  010F               	movlb	15	; () banked
 18378  012058  8B22               	bsf	34,5,b	;volatile
 18379  01205A                     i2l410:
 18380                           
 18381                           ; BSR set to: 15
 18382                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 18383  01205A  A640               	btfss	i2CANsendMessage@identifier+2,3,c
 18384  01205C  D002               	goto	i2l411
 18385                           
 18386                           ; BSR set to: 15
 18387                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 18388  01205E  010F               	movlb	15	; () banked
 18389  012060  8D22               	bsf	34,6,b	;volatile
 18390  012062                     i2l411:
 18391                           
 18392                           ; BSR set to: 15
 18393                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 18394  012062  A840               	btfss	i2CANsendMessage@identifier+2,4,c
 18395  012064  D002               	goto	i2l8746
 18396                           
 18397                           ; BSR set to: 15
 18398                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 18399  012066  010F               	movlb	15	; () banked
 18400  012068  8F22               	bsf	34,7,b	;volatile
 18401  01206A                     i2l8746:
 18402                           
 18403                           ; BSR set to: 15
 18404                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 18405  01206A  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18406  01206E  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18407  012072  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18408  012076  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18409  01207A  0E16               	movlw	22
 18410  01207C  D005               	goto	i2u1160_40
 18411  01207E                     i2u1160_45:
 18412  01207E  90D8               	bcf	status,0,c
 18413  012080  3249               	rrcf	??i2_CANsendMessage+3,f,c
 18414  012082  3248               	rrcf	??i2_CANsendMessage+2,f,c
 18415  012084  3247               	rrcf	??i2_CANsendMessage+1,f,c
 18416  012086  3246               	rrcf	??i2_CANsendMessage,f,c
 18417  012088                     i2u1160_40:
 18418  012088  2EE8               	decfsz	wreg,f,c
 18419  01208A  D7F9               	goto	i2u1160_45
 18420  01208C  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18421  012090  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18422  012094  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18423  012098  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18424                           
 18425                           ; BSR set to: 15
 18426                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 18427  01209C  0100               	movlb	0	; () banked
 18428  01209E  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 18429  0120A0  0100               	movlb	0	; () banked
 18430  0120A2  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18431  0120A4  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18432  0120A6  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18433  0120A8  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18434                           
 18435                           ; BSR set to: 0
 18436                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 18437  0120AA  C060  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 18438                           
 18439                           ;inc\CANlib.h: 483: }
 18440  0120AE  D053               	goto	i2l8766
 18441  0120B0                     i2l407:
 18442                           
 18443                           ; BSR set to: 15
 18444                           ;inc\CANlib.h: 485: else
 18445                           ;inc\CANlib.h: 487: {
 18446                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 18447  0120B0  010F               	movlb	15	; () banked
 18448  0120B2  9722               	bcf	34,3,b	;volatile
 18449                           
 18450                           ; BSR set to: 15
 18451                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 18452  0120B4  C03E  F046         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18453  0120B8  C03F  F047         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18454  0120BC  C040  F048         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18455  0120C0  C041  F049         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18456  0120C4  0E04               	movlw	4
 18457  0120C6  D005               	goto	i2u1161_40
 18458  0120C8                     i2u1161_45:
 18459  0120C8  90D8               	bcf	status,0,c
 18460  0120CA  3249               	rrcf	??i2_CANsendMessage+3,f,c
 18461  0120CC  3248               	rrcf	??i2_CANsendMessage+2,f,c
 18462  0120CE  3247               	rrcf	??i2_CANsendMessage+1,f,c
 18463  0120D0  3246               	rrcf	??i2_CANsendMessage,f,c
 18464  0120D2                     i2u1161_40:
 18465  0120D2  2EE8               	decfsz	wreg,f,c
 18466  0120D4  D7F9               	goto	i2u1161_45
 18467  0120D6  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18468  0120DA  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18469  0120DE  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18470  0120E2  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18471                           
 18472                           ; BSR set to: 15
 18473                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 18474  0120E6  0100               	movlb	0	; () banked
 18475  0120E8  5160               	movf	i2CANsendMessage@tamp& (0+255),w,b
 18476  0120EA  0100               	movlb	0	; () banked
 18477  0120EC  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18478  0120EE  6B61               	clrf	(i2CANsendMessage@tamp+1)& (0+255),b
 18479  0120F0  6B62               	clrf	(i2CANsendMessage@tamp+2)& (0+255),b
 18480  0120F2  6B63               	clrf	(i2CANsendMessage@tamp+3)& (0+255),b
 18481                           
 18482                           ; BSR set to: 0
 18483                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 18484  0120F4  C060  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 18485                           
 18486                           ; BSR set to: 0
 18487                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 18488  0120F8  0E07               	movlw	7
 18489  0120FA  143E               	andwf	i2CANsendMessage@identifier,w,c
 18490  0120FC  0100               	movlb	0	; () banked
 18491  0120FE  6F60               	movwf	i2CANsendMessage@tamp& (0+255),b
 18492  012100  0E00               	movlw	0
 18493  012102  143F               	andwf	i2CANsendMessage@identifier+1,w,c
 18494  012104  0100               	movlb	0	; () banked
 18495  012106  6F61               	movwf	(i2CANsendMessage@tamp+1)& (0+255),b
 18496  012108  0E00               	movlw	0
 18497  01210A  1440               	andwf	i2CANsendMessage@identifier+2,w,c
 18498  01210C  0100               	movlb	0	; () banked
 18499  01210E  6F62               	movwf	(i2CANsendMessage@tamp+2)& (0+255),b
 18500  012110  0E00               	movlw	0
 18501  012112  1441               	andwf	i2CANsendMessage@identifier+3,w,c
 18502  012114  0100               	movlb	0	; () banked
 18503  012116  6F63               	movwf	(i2CANsendMessage@tamp+3)& (0+255),b
 18504                           
 18505                           ; BSR set to: 0
 18506                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 18507  012118  C060  F046         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18508  01211C  C061  F047         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18509  012120  C062  F048         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18510  012124  C063  F049         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18511  012128  0E05               	movlw	5
 18512  01212A                     i2u1162_45:
 18513  01212A  90D8               	bcf	status,0,c
 18514  01212C  3646               	rlcf	??i2_CANsendMessage,f,c
 18515  01212E  3647               	rlcf	??i2_CANsendMessage+1,f,c
 18516  012130  3648               	rlcf	??i2_CANsendMessage+2,f,c
 18517  012132  3649               	rlcf	??i2_CANsendMessage+3,f,c
 18518  012134  2EE8               	decfsz	wreg,f,c
 18519  012136  D7F9               	goto	i2u1162_45
 18520  012138  C046  F060         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18521  01213C  C047  F061         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18522  012140  C048  F062         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18523  012144  C049  F063         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18524                           
 18525                           ; BSR set to: 0
 18526                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 18527  012148  010F               	movlb	15	; () banked
 18528  01214A  5122               	movf	34,w,b	;volatile
 18529  01214C  0B1F               	andlw	31
 18530  01214E  010F               	movlb	15	; () banked
 18531  012150  6F22               	movwf	34,b	;volatile
 18532                           
 18533                           ; BSR set to: 15
 18534                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18535  012152  C060  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 18536  012156                     i2l8766:
 18537                           
 18538                           ;inc\CANlib.h: 498: }
 18539                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18540  012156  A045               	btfss	i2CANsendMessage@flags,0,c
 18541  012158  D003               	goto	i2l414
 18542                           
 18543                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18544  01215A  010F               	movlb	15	; () banked
 18545  01215C  8120               	bsf	32,0,b	;volatile
 18546  01215E  D002               	goto	i2l415
 18547  012160                     i2l414:
 18548                           
 18549                           ;inc\CANlib.h: 502: else
 18550                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18551  012160  010F               	movlb	15	; () banked
 18552  012162  9120               	bcf	32,0,b	;volatile
 18553  012164                     i2l415:
 18554                           
 18555                           ; BSR set to: 15
 18556                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18557  012164  A245               	btfss	i2CANsendMessage@flags,1,c
 18558  012166  D003               	goto	i2l416
 18559                           
 18560                           ; BSR set to: 15
 18561                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18562  012168  010F               	movlb	15	; () banked
 18563  01216A  8320               	bsf	32,1,b	;volatile
 18564  01216C  D002               	goto	i2l8772
 18565  01216E                     i2l416:
 18566                           
 18567                           ; BSR set to: 15
 18568                           ;inc\CANlib.h: 506: else
 18569                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18570  01216E  010F               	movlb	15	; () banked
 18571  012170  9320               	bcf	32,1,b	;volatile
 18572  012172                     i2l8772:
 18573                           
 18574                           ; BSR set to: 15
 18575                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18576  012172  C042  FFD9         	movff	i2CANsendMessage@data,fsr2l
 18577  012176  C043  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 18578  01217A  50DF               	movf	indf2,w,c
 18579  01217C  010F               	movlb	15	; () banked
 18580  01217E  6F26               	movwf	38,b	;volatile
 18581                           
 18582                           ; BSR set to: 15
 18583                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18584  012180  EE20 F001          	lfsr	2,1
 18585  012184  5042               	movf	i2CANsendMessage@data,w,c
 18586  012186  26D9               	addwf	fsr2l,f,c
 18587  012188  5043               	movf	i2CANsendMessage@data+1,w,c
 18588  01218A  22DA               	addwfc	fsr2h,f,c
 18589  01218C  50DF               	movf	indf2,w,c
 18590  01218E  010F               	movlb	15	; () banked
 18591  012190  6F27               	movwf	39,b	;volatile
 18592                           
 18593                           ; BSR set to: 15
 18594                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18595  012192  EE20 F002          	lfsr	2,2
 18596  012196  5042               	movf	i2CANsendMessage@data,w,c
 18597  012198  26D9               	addwf	fsr2l,f,c
 18598  01219A  5043               	movf	i2CANsendMessage@data+1,w,c
 18599  01219C  22DA               	addwfc	fsr2h,f,c
 18600  01219E  50DF               	movf	indf2,w,c
 18601  0121A0  010F               	movlb	15	; () banked
 18602  0121A2  6F28               	movwf	40,b	;volatile
 18603                           
 18604                           ; BSR set to: 15
 18605                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18606  0121A4  EE20 F003          	lfsr	2,3
 18607  0121A8  5042               	movf	i2CANsendMessage@data,w,c
 18608  0121AA  26D9               	addwf	fsr2l,f,c
 18609  0121AC  5043               	movf	i2CANsendMessage@data+1,w,c
 18610  0121AE  22DA               	addwfc	fsr2h,f,c
 18611  0121B0  50DF               	movf	indf2,w,c
 18612  0121B2  010F               	movlb	15	; () banked
 18613  0121B4  6F29               	movwf	41,b	;volatile
 18614                           
 18615                           ; BSR set to: 15
 18616                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18617  0121B6  EE20 F004          	lfsr	2,4
 18618  0121BA  5042               	movf	i2CANsendMessage@data,w,c
 18619  0121BC  26D9               	addwf	fsr2l,f,c
 18620  0121BE  5043               	movf	i2CANsendMessage@data+1,w,c
 18621  0121C0  22DA               	addwfc	fsr2h,f,c
 18622  0121C2  50DF               	movf	indf2,w,c
 18623  0121C4  010F               	movlb	15	; () banked
 18624  0121C6  6F2A               	movwf	42,b	;volatile
 18625                           
 18626                           ; BSR set to: 15
 18627                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18628  0121C8  EE20 F005          	lfsr	2,5
 18629  0121CC  5042               	movf	i2CANsendMessage@data,w,c
 18630  0121CE  26D9               	addwf	fsr2l,f,c
 18631  0121D0  5043               	movf	i2CANsendMessage@data+1,w,c
 18632  0121D2  22DA               	addwfc	fsr2h,f,c
 18633  0121D4  50DF               	movf	indf2,w,c
 18634  0121D6  010F               	movlb	15	; () banked
 18635  0121D8  6F2B               	movwf	43,b	;volatile
 18636                           
 18637                           ; BSR set to: 15
 18638                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18639  0121DA  EE20 F006          	lfsr	2,6
 18640  0121DE  5042               	movf	i2CANsendMessage@data,w,c
 18641  0121E0  26D9               	addwf	fsr2l,f,c
 18642  0121E2  5043               	movf	i2CANsendMessage@data+1,w,c
 18643  0121E4  22DA               	addwfc	fsr2h,f,c
 18644  0121E6  50DF               	movf	indf2,w,c
 18645  0121E8  010F               	movlb	15	; () banked
 18646  0121EA  6F2C               	movwf	44,b	;volatile
 18647                           
 18648                           ; BSR set to: 15
 18649                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18650  0121EC  EE20 F007          	lfsr	2,7
 18651  0121F0  5042               	movf	i2CANsendMessage@data,w,c
 18652  0121F2  26D9               	addwf	fsr2l,f,c
 18653  0121F4  5043               	movf	i2CANsendMessage@data+1,w,c
 18654  0121F6  22DA               	addwfc	fsr2h,f,c
 18655  0121F8  50DF               	movf	indf2,w,c
 18656  0121FA  010F               	movlb	15	; () banked
 18657  0121FC  6F2D               	movwf	45,b	;volatile
 18658                           
 18659                           ; BSR set to: 15
 18660                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 18661  0121FE  010F               	movlb	15	; () banked
 18662  012200  8720               	bsf	32,3,b	;volatile
 18663                           
 18664                           ; BSR set to: 15
 18665                           ;inc\CANlib.h: 520: return;
 18666  012202  0012               	return	
 18667  012204                     __end_ofi2_CANsendMessage:
 18668                           	opt stack 0
 18669                           pclatu	equ	0xFFB
 18670                           pclath	equ	0xFFA
 18671                           tblptru	equ	0xFF8
 18672                           tblptrh	equ	0xFF7
 18673                           tblptrl	equ	0xFF6
 18674                           tablat	equ	0xFF5
 18675                           prodh	equ	0xFF4
 18676                           prodl	equ	0xFF3
 18677                           intcon	equ	0xFF2
 18678                           postinc0	equ	0xFEE
 18679                           fsr0h	equ	0xFEA
 18680                           fsr0l	equ	0xFE9
 18681                           wreg	equ	0xFE8
 18682                           indf1	equ	0xFE7
 18683                           fsr1h	equ	0xFE2
 18684                           fsr1l	equ	0xFE1
 18685                           bsr	equ	0xFE0
 18686                           indf2	equ	0xFDF
 18687                           postinc2	equ	0xFDE
 18688                           fsr2h	equ	0xFDA
 18689                           fsr2l	equ	0xFD9
 18690                           status	equ	0xFD8
 18691                           
 18692 ;; *************** function i2_CANisTxReady *****************
 18693 ;; Defined at:
 18694 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 18695 ;; Parameters:    Size  Location     Type
 18696 ;;		None
 18697 ;; Auto vars:     Size  Location     Type
 18698 ;;		None
 18699 ;; Return value:  Size  Location     Type
 18700 ;;                  1    wreg      unsigned char 
 18701 ;; Registers used:
 18702 ;;		wreg, status,2
 18703 ;; Tracked objects:
 18704 ;;		On entry : 0/0
 18705 ;;		On exit  : 0/0
 18706 ;;		Unchanged: 0/0
 18707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18709 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18711 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18712 ;;Total ram usage:        1 bytes
 18713 ;; Hardware stack levels used:    1
 18714 ;; This function calls:
 18715 ;;		Nothing
 18716 ;; This function is called by:
 18717 ;;		_ISR_alta
 18718 ;; This function uses a non-reentrant model
 18719 ;;
 18720                           
 18721                           	psect	text50
 18722  015D6A                     __ptext50:
 18723                           	opt stack 0
 18724  015D6A                     i2_CANisTxReady:
 18725                           	opt stack 21
 18726                           
 18727                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 18728                           
 18729                           ; BSR set to: 15
 18730                           ;incstack = 0
 18731  015D6A  0E01               	movlw	1
 18732  015D6C  6E3E               	movwf	i2_CANisTxReady$3235,c
 18733  015D6E  010F               	movlb	15	; () banked
 18734  015D70  A740               	btfss	64,3,b	;volatile
 18735  015D72  D008               	goto	i2l568
 18736                           
 18737                           ; BSR set to: 15
 18738  015D74  010F               	movlb	15	; () banked
 18739  015D76  A730               	btfss	48,3,b	;volatile
 18740  015D78  D005               	goto	i2l568
 18741                           
 18742                           ; BSR set to: 15
 18743  015D7A  010F               	movlb	15	; () banked
 18744  015D7C  A720               	btfss	32,3,b	;volatile
 18745  015D7E  D002               	goto	i2l568
 18746                           
 18747                           ; BSR set to: 15
 18748  015D80  0E00               	movlw	0
 18749  015D82  6E3E               	movwf	i2_CANisTxReady$3235,c
 18750  015D84                     i2l568:
 18751                           
 18752                           ; BSR set to: 15
 18753  015D84  503E               	movf	i2_CANisTxReady$3235,w,c
 18754  015D86  0012               	return	
 18755  015D88                     __end_ofi2_CANisTxReady:
 18756                           	opt stack 0
 18757                           pclatu	equ	0xFFB
 18758                           pclath	equ	0xFFA
 18759                           tblptru	equ	0xFF8
 18760                           tblptrh	equ	0xFF7
 18761                           tblptrl	equ	0xFF6
 18762                           tablat	equ	0xFF5
 18763                           prodh	equ	0xFF4
 18764                           prodl	equ	0xFF3
 18765                           intcon	equ	0xFF2
 18766                           postinc0	equ	0xFEE
 18767                           fsr0h	equ	0xFEA
 18768                           fsr0l	equ	0xFE9
 18769                           wreg	equ	0xFE8
 18770                           indf1	equ	0xFE7
 18771                           fsr1h	equ	0xFE2
 18772                           fsr1l	equ	0xFE1
 18773                           bsr	equ	0xFE0
 18774                           indf2	equ	0xFDF
 18775                           postinc2	equ	0xFDE
 18776                           fsr2h	equ	0xFDA
 18777                           fsr2l	equ	0xFD9
 18778                           status	equ	0xFD8
 18779                           
 18780 ;; *************** function _CANreceiveMessage *****************
 18781 ;; Defined at:
 18782 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 18783 ;; Parameters:    Size  Location     Type
 18784 ;;  msg             2   17[COMRAM] PTR struct .
 18785 ;;		 -> msg(15), 
 18786 ;; Auto vars:     Size  Location     Type
 18787 ;;  tamp            1   28[COMRAM] unsigned char 
 18788 ;;  error           1   27[COMRAM] unsigned char 
 18789 ;; Return value:  Size  Location     Type
 18790 ;;                  1    wreg      unsigned char 
 18791 ;; Registers used:
 18792 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18793 ;; Tracked objects:
 18794 ;;		On entry : 0/0
 18795 ;;		On exit  : 0/0
 18796 ;;		Unchanged: 0/0
 18797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18799 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18800 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18801 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18802 ;;Total ram usage:       12 bytes
 18803 ;; Hardware stack levels used:    1
 18804 ;; This function calls:
 18805 ;;		Nothing
 18806 ;; This function is called by:
 18807 ;;		_ISR_alta
 18808 ;; This function uses a non-reentrant model
 18809 ;;
 18810                           
 18811                           	psect	text51
 18812  012D56                     __ptext51:
 18813                           	opt stack 0
 18814  012D56                     _CANreceiveMessage:
 18815                           	opt stack 21
 18816                           
 18817                           ;inc\CANlib.h: 530: BYTE tamp;
 18818                           ;inc\CANlib.h: 531: BYTE error = 0;
 18819                           
 18820                           ; BSR set to: 15
 18821                           ;incstack = 0
 18822  012D56  0E00               	movlw	0
 18823  012D58  6E48               	movwf	CANreceiveMessage@error,c
 18824                           
 18825                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 18826  012D5A  BE74               	btfsc	3956,7,c	;volatile
 18827                           
 18828                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 18829  012D5C  8048               	bsf	CANreceiveMessage@error,0,c
 18830                           
 18831                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 18832  012D5E  BC74               	btfsc	3956,6,c	;volatile
 18833                           
 18834                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 18835  012D60  8248               	bsf	CANreceiveMessage@error,1,c
 18836                           
 18837                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 18838  012D62  010F               	movlb	15	; () banked
 18839  012D64  AF50               	btfss	80,7,b	;volatile
 18840  012D66  D143               	goto	i2l422
 18841                           
 18842                           ; BSR set to: 15
 18843                           ;inc\CANlib.h: 541: {
 18844                           ;inc\CANlib.h: 542: msg->identifier = 0;
 18845  012D68  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18846  012D6C  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18847  012D70  6ADE               	clrf	postinc2,c
 18848  012D72  6ADE               	clrf	postinc2,c
 18849  012D74  6ADE               	clrf	postinc2,c
 18850  012D76  6ADD               	clrf	postdec2,c
 18851                           
 18852                           ; BSR set to: 15
 18853                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 18854  012D78  EE20 F004          	lfsr	2,4
 18855  012D7C  503E               	movf	CANreceiveMessage@msg,w,c
 18856  012D7E  26D9               	addwf	fsr2l,f,c
 18857  012D80  503F               	movf	CANreceiveMessage@msg+1,w,c
 18858  012D82  22DA               	addwfc	fsr2h,f,c
 18859  012D84  CF56 FFDF          	movff	3926,indf2	;volatile
 18860                           
 18861                           ; BSR set to: 15
 18862                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 18863  012D88  EE20 F005          	lfsr	2,5
 18864  012D8C  503E               	movf	CANreceiveMessage@msg,w,c
 18865  012D8E  26D9               	addwf	fsr2l,f,c
 18866  012D90  503F               	movf	CANreceiveMessage@msg+1,w,c
 18867  012D92  22DA               	addwfc	fsr2h,f,c
 18868  012D94  CF57 FFDF          	movff	3927,indf2	;volatile
 18869                           
 18870                           ; BSR set to: 15
 18871                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 18872  012D98  EE20 F006          	lfsr	2,6
 18873  012D9C  503E               	movf	CANreceiveMessage@msg,w,c
 18874  012D9E  26D9               	addwf	fsr2l,f,c
 18875  012DA0  503F               	movf	CANreceiveMessage@msg+1,w,c
 18876  012DA2  22DA               	addwfc	fsr2h,f,c
 18877  012DA4  CF58 FFDF          	movff	3928,indf2	;volatile
 18878                           
 18879                           ; BSR set to: 15
 18880                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 18881  012DA8  EE20 F007          	lfsr	2,7
 18882  012DAC  503E               	movf	CANreceiveMessage@msg,w,c
 18883  012DAE  26D9               	addwf	fsr2l,f,c
 18884  012DB0  503F               	movf	CANreceiveMessage@msg+1,w,c
 18885  012DB2  22DA               	addwfc	fsr2h,f,c
 18886  012DB4  CF59 FFDF          	movff	3929,indf2	;volatile
 18887                           
 18888                           ; BSR set to: 15
 18889                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 18890  012DB8  EE20 F008          	lfsr	2,8
 18891  012DBC  503E               	movf	CANreceiveMessage@msg,w,c
 18892  012DBE  26D9               	addwf	fsr2l,f,c
 18893  012DC0  503F               	movf	CANreceiveMessage@msg+1,w,c
 18894  012DC2  22DA               	addwfc	fsr2h,f,c
 18895  012DC4  CF5A FFDF          	movff	3930,indf2	;volatile
 18896                           
 18897                           ; BSR set to: 15
 18898                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 18899  012DC8  EE20 F009          	lfsr	2,9
 18900  012DCC  503E               	movf	CANreceiveMessage@msg,w,c
 18901  012DCE  26D9               	addwf	fsr2l,f,c
 18902  012DD0  503F               	movf	CANreceiveMessage@msg+1,w,c
 18903  012DD2  22DA               	addwfc	fsr2h,f,c
 18904  012DD4  CF5B FFDF          	movff	3931,indf2	;volatile
 18905                           
 18906                           ; BSR set to: 15
 18907                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 18908  012DD8  EE20 F00A          	lfsr	2,10
 18909  012DDC  503E               	movf	CANreceiveMessage@msg,w,c
 18910  012DDE  26D9               	addwf	fsr2l,f,c
 18911  012DE0  503F               	movf	CANreceiveMessage@msg+1,w,c
 18912  012DE2  22DA               	addwfc	fsr2h,f,c
 18913  012DE4  CF5C FFDF          	movff	3932,indf2	;volatile
 18914                           
 18915                           ; BSR set to: 15
 18916                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 18917  012DE8  EE20 F00B          	lfsr	2,11
 18918  012DEC  503E               	movf	CANreceiveMessage@msg,w,c
 18919  012DEE  26D9               	addwf	fsr2l,f,c
 18920  012DF0  503F               	movf	CANreceiveMessage@msg+1,w,c
 18921  012DF2  22DA               	addwfc	fsr2h,f,c
 18922  012DF4  CF5D FFDF          	movff	3933,indf2	;volatile
 18923                           
 18924                           ; BSR set to: 15
 18925                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 18926  012DF8  EE20 F00E          	lfsr	2,14
 18927  012DFC  503E               	movf	CANreceiveMessage@msg,w,c
 18928  012DFE  26D9               	addwf	fsr2l,f,c
 18929  012E00  503F               	movf	CANreceiveMessage@msg+1,w,c
 18930  012E02  22DA               	addwfc	fsr2h,f,c
 18931  012E04  010F               	movlb	15	; () banked
 18932  012E06  AD55               	btfss	85,6,b	;volatile
 18933  012E08  D002               	goto	i2u812_40
 18934  012E0A  0E01               	movlw	1
 18935  012E0C  D001               	goto	i2u812_46
 18936  012E0E                     i2u812_40:
 18937  012E0E  0E00               	movlw	0
 18938  012E10                     i2u812_46:
 18939  012E10  6EDF               	movwf	indf2,c
 18940                           
 18941                           ; BSR set to: 15
 18942                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 18943  012E12  EE20 F00D          	lfsr	2,13
 18944  012E16  503E               	movf	CANreceiveMessage@msg,w,c
 18945  012E18  26D9               	addwf	fsr2l,f,c
 18946  012E1A  503F               	movf	CANreceiveMessage@msg+1,w,c
 18947  012E1C  22DA               	addwfc	fsr2h,f,c
 18948  012E1E  010F               	movlb	15	; () banked
 18949  012E20  5155               	movf	85,w,b	;volatile
 18950  012E22  0B0F               	andlw	15
 18951  012E24  6EDF               	movwf	indf2,c
 18952                           
 18953                           ; BSR set to: 15
 18954                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 18955  012E26  EE20 F00C          	lfsr	2,12
 18956  012E2A  503E               	movf	CANreceiveMessage@msg,w,c
 18957  012E2C  26D9               	addwf	fsr2l,f,c
 18958  012E2E  503F               	movf	CANreceiveMessage@msg+1,w,c
 18959  012E30  22DA               	addwfc	fsr2h,f,c
 18960  012E32  010F               	movlb	15	; () banked
 18961  012E34  A752               	btfss	82,3,b	;volatile
 18962  012E36  D002               	goto	i2u813_40
 18963  012E38  0E01               	movlw	1
 18964  012E3A  D001               	goto	i2u813_46
 18965  012E3C                     i2u813_40:
 18966  012E3C  0E00               	movlw	0
 18967  012E3E                     i2u813_46:
 18968  012E3E  6EDF               	movwf	indf2,c
 18969                           
 18970                           ; BSR set to: 15
 18971                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 18972  012E40  010F               	movlb	15	; () banked
 18973  012E42  B752               	btfsc	82,3,b	;volatile
 18974  012E44  D044               	goto	i2l6498
 18975                           
 18976                           ; BSR set to: 15
 18977                           ;inc\CANlib.h: 559: {
 18978                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 18979  012E46  CF51 F040          	movff	3921,??_CANreceiveMessage	;volatile
 18980  012E4A  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 18981  012E4C  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 18982  012E4E  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 18983  012E50  0E03               	movlw	3
 18984  012E52                     i2u815_45:
 18985  012E52  90D8               	bcf	status,0,c
 18986  012E54  3640               	rlcf	??_CANreceiveMessage,f,c
 18987  012E56  3641               	rlcf	??_CANreceiveMessage+1,f,c
 18988  012E58  3642               	rlcf	??_CANreceiveMessage+2,f,c
 18989  012E5A  3643               	rlcf	??_CANreceiveMessage+3,f,c
 18990  012E5C  2EE8               	decfsz	wreg,f,c
 18991  012E5E  D7F9               	goto	i2u815_45
 18992  012E60  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18993  012E64  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18994  012E68  C040  FFDE         	movff	??_CANreceiveMessage,postinc2
 18995  012E6C  C041  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 18996  012E70  C042  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 18997  012E74  C043  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 18998                           
 18999                           ; BSR set to: 15
 19000                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 19001  012E78  010F               	movlb	15	; () banked
 19002  012E7A  3952               	swapf	82,w,b	;volatile
 19003  012E7C  42E8               	rrncf	wreg,f,c
 19004  012E7E  0B07               	andlw	7
 19005  012E80  0B07               	andlw	7
 19006  012E82  6E49               	movwf	CANreceiveMessage@tamp,c
 19007                           
 19008                           ; BSR set to: 15
 19009                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 19010  012E84  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19011  012E88  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19012  012E8C  CFDE F040          	movff	postinc2,??_CANreceiveMessage
 19013  012E90  CFDE F041          	movff	postinc2,??_CANreceiveMessage+1
 19014  012E94  CFDE F042          	movff	postinc2,??_CANreceiveMessage+2
 19015  012E98  CFDE F043          	movff	postinc2,??_CANreceiveMessage+3
 19016  012E9C  5049               	movf	CANreceiveMessage@tamp,w,c
 19017  012E9E  2440               	addwf	??_CANreceiveMessage,w,c
 19018  012EA0  6E44               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 19019  012EA2  0E00               	movlw	0
 19020  012EA4  2041               	addwfc	??_CANreceiveMessage+1,w,c
 19021  012EA6  6E45               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 19022  012EA8  0E00               	movlw	0
 19023  012EAA  2042               	addwfc	??_CANreceiveMessage+2,w,c
 19024  012EAC  6E46               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 19025  012EAE  0E00               	movlw	0
 19026  012EB0  2043               	addwfc	??_CANreceiveMessage+3,w,c
 19027  012EB2  6E47               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 19028  012EB4  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19029  012EB8  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19030  012EBC  C044  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 19031  012EC0  C045  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 19032  012EC4  C046  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 19033  012EC8  C047  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 19034                           
 19035                           ;inc\CANlib.h: 563: }
 19036  012ECC  D08D               	goto	i2l6524
 19037  012ECE                     i2l6498:
 19038                           
 19039                           ; BSR set to: 15
 19040                           ;inc\CANlib.h: 564: else
 19041                           ;inc\CANlib.h: 565: {
 19042                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 19043  012ECE  CF54 F040          	movff	3924,??_CANreceiveMessage	;volatile
 19044  012ED2  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19045  012ED4  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19046  012ED6  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19047  012ED8  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19048  012EDC  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19049  012EE0  C040  FFDE         	movff	??_CANreceiveMessage,postinc2
 19050  012EE4  C041  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19051  012EE8  C042  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19052  012EEC  C043  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19053                           
 19054                           ; BSR set to: 15
 19055                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 19056  012EF0  CF53 F040          	movff	3923,??_CANreceiveMessage	;volatile
 19057  012EF4  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19058  012EF6  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19059  012EF8  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19060  012EFA  C042  F043         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 19061  012EFE  C041  F042         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 19062  012F02  C040  F041         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 19063  012F06  6A40               	clrf	??_CANreceiveMessage,c
 19064  012F08  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19065  012F0C  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19066  012F10  5040               	movf	??_CANreceiveMessage,w,c
 19067  012F12  26DE               	addwf	postinc2,f,c
 19068  012F14  5041               	movf	??_CANreceiveMessage+1,w,c
 19069  012F16  22DE               	addwfc	postinc2,f,c
 19070  012F18  5042               	movf	??_CANreceiveMessage+2,w,c
 19071  012F1A  22DE               	addwfc	postinc2,f,c
 19072  012F1C  5043               	movf	??_CANreceiveMessage+3,w,c
 19073  012F1E  22DE               	addwfc	postinc2,f,c
 19074                           
 19075                           ; BSR set to: 15
 19076                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 19077  012F20  010F               	movlb	15	; () banked
 19078  012F22  A152               	btfss	82,0,b	;volatile
 19079  012F24  D00C               	goto	i2l6506
 19080                           
 19081                           ; BSR set to: 15
 19082                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 19083  012F26  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19084  012F2A  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19085  012F2E  0E00               	movlw	0
 19086  012F30  12DE               	iorwf	postinc2,f,c
 19087  012F32  0E00               	movlw	0
 19088  012F34  12DE               	iorwf	postinc2,f,c
 19089  012F36  0E01               	movlw	1
 19090  012F38  12DE               	iorwf	postinc2,f,c
 19091  012F3A  0E00               	movlw	0
 19092  012F3C  12DE               	iorwf	postinc2,f,c
 19093  012F3E                     i2l6506:
 19094                           
 19095                           ; BSR set to: 15
 19096                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 19097  012F3E  010F               	movlb	15	; () banked
 19098  012F40  A352               	btfss	82,1,b	;volatile
 19099  012F42  D00C               	goto	i2l6510
 19100                           
 19101                           ; BSR set to: 15
 19102                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 19103  012F44  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19104  012F48  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19105  012F4C  0E00               	movlw	0
 19106  012F4E  12DE               	iorwf	postinc2,f,c
 19107  012F50  0E00               	movlw	0
 19108  012F52  12DE               	iorwf	postinc2,f,c
 19109  012F54  0E02               	movlw	2
 19110  012F56  12DE               	iorwf	postinc2,f,c
 19111  012F58  0E00               	movlw	0
 19112  012F5A  12DE               	iorwf	postinc2,f,c
 19113  012F5C                     i2l6510:
 19114                           
 19115                           ; BSR set to: 15
 19116                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 19117  012F5C  010F               	movlb	15	; () banked
 19118  012F5E  AB52               	btfss	82,5,b	;volatile
 19119  012F60  D00C               	goto	i2l6514
 19120                           
 19121                           ; BSR set to: 15
 19122                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 19123  012F62  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19124  012F66  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19125  012F6A  0E00               	movlw	0
 19126  012F6C  12DE               	iorwf	postinc2,f,c
 19127  012F6E  0E00               	movlw	0
 19128  012F70  12DE               	iorwf	postinc2,f,c
 19129  012F72  0E04               	movlw	4
 19130  012F74  12DE               	iorwf	postinc2,f,c
 19131  012F76  0E00               	movlw	0
 19132  012F78  12DE               	iorwf	postinc2,f,c
 19133  012F7A                     i2l6514:
 19134                           
 19135                           ; BSR set to: 15
 19136                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 19137  012F7A  010F               	movlb	15	; () banked
 19138  012F7C  AD52               	btfss	82,6,b	;volatile
 19139  012F7E  D00C               	goto	i2l6518
 19140                           
 19141                           ; BSR set to: 15
 19142                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 19143  012F80  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19144  012F84  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19145  012F88  0E00               	movlw	0
 19146  012F8A  12DE               	iorwf	postinc2,f,c
 19147  012F8C  0E00               	movlw	0
 19148  012F8E  12DE               	iorwf	postinc2,f,c
 19149  012F90  0E08               	movlw	8
 19150  012F92  12DE               	iorwf	postinc2,f,c
 19151  012F94  0E00               	movlw	0
 19152  012F96  12DE               	iorwf	postinc2,f,c
 19153  012F98                     i2l6518:
 19154                           
 19155                           ; BSR set to: 15
 19156                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 19157  012F98  010F               	movlb	15	; () banked
 19158  012F9A  AF52               	btfss	82,7,b	;volatile
 19159  012F9C  D00C               	goto	i2l6522
 19160                           
 19161                           ; BSR set to: 15
 19162                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 19163  012F9E  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19164  012FA2  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19165  012FA6  0E00               	movlw	0
 19166  012FA8  12DE               	iorwf	postinc2,f,c
 19167  012FAA  0E00               	movlw	0
 19168  012FAC  12DE               	iorwf	postinc2,f,c
 19169  012FAE  0E10               	movlw	16
 19170  012FB0  12DE               	iorwf	postinc2,f,c
 19171  012FB2  0E00               	movlw	0
 19172  012FB4  12DE               	iorwf	postinc2,f,c
 19173  012FB6                     i2l6522:
 19174                           
 19175                           ; BSR set to: 15
 19176                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 19177  012FB6  CF51 F040          	movff	3921,??_CANreceiveMessage	;volatile
 19178  012FBA  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19179  012FBC  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19180  012FBE  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19181  012FC0  0E15               	movlw	21
 19182  012FC2                     i2u821_45:
 19183  012FC2  90D8               	bcf	status,0,c
 19184  012FC4  3640               	rlcf	??_CANreceiveMessage,f,c
 19185  012FC6  3641               	rlcf	??_CANreceiveMessage+1,f,c
 19186  012FC8  3642               	rlcf	??_CANreceiveMessage+2,f,c
 19187  012FCA  3643               	rlcf	??_CANreceiveMessage+3,f,c
 19188  012FCC  2EE8               	decfsz	wreg,f,c
 19189  012FCE  D7F9               	goto	i2u821_45
 19190  012FD0  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19191  012FD4  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19192  012FD8  5040               	movf	??_CANreceiveMessage,w,c
 19193  012FDA  12DE               	iorwf	postinc2,f,c
 19194  012FDC  5041               	movf	??_CANreceiveMessage+1,w,c
 19195  012FDE  12DE               	iorwf	postinc2,f,c
 19196  012FE0  5042               	movf	??_CANreceiveMessage+2,w,c
 19197  012FE2  12DE               	iorwf	postinc2,f,c
 19198  012FE4  5043               	movf	??_CANreceiveMessage+3,w,c
 19199  012FE6  12DE               	iorwf	postinc2,f,c
 19200  012FE8                     i2l6524:
 19201                           
 19202                           ; BSR set to: 15
 19203                           ;inc\CANlib.h: 581: }
 19204                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 19205  012FE8  010F               	movlb	15	; () banked
 19206  012FEA  9F50               	bcf	80,7,b	;volatile
 19207                           
 19208                           ; BSR set to: 15
 19209                           ;inc\CANlib.h: 584: return (error);
 19210                           ;	Return value of _CANreceiveMessage is never used
 19211  012FEC  0012               	return	
 19212  012FEE                     i2l422:
 19213                           
 19214                           ; BSR set to: 15
 19215                           ;inc\CANlib.h: 585: }
 19216                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 19217  012FEE  AE60               	btfss	3936,7,c	;volatile
 19218  012FF0  0012               	return	
 19219                           
 19220                           ; BSR set to: 15
 19221                           ;inc\CANlib.h: 588: {
 19222                           ;inc\CANlib.h: 589: msg->identifier = 0;
 19223  012FF2  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19224  012FF6  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19225  012FFA  6ADE               	clrf	postinc2,c
 19226  012FFC  6ADE               	clrf	postinc2,c
 19227  012FFE  6ADE               	clrf	postinc2,c
 19228  013000  6ADD               	clrf	postdec2,c
 19229                           
 19230                           ; BSR set to: 15
 19231                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 19232  013002  EE20 F004          	lfsr	2,4
 19233  013006  503E               	movf	CANreceiveMessage@msg,w,c
 19234  013008  26D9               	addwf	fsr2l,f,c
 19235  01300A  503F               	movf	CANreceiveMessage@msg+1,w,c
 19236  01300C  22DA               	addwfc	fsr2h,f,c
 19237  01300E  CF66 FFDF          	movff	3942,indf2	;volatile
 19238                           
 19239                           ; BSR set to: 15
 19240                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 19241  013012  EE20 F005          	lfsr	2,5
 19242  013016  503E               	movf	CANreceiveMessage@msg,w,c
 19243  013018  26D9               	addwf	fsr2l,f,c
 19244  01301A  503F               	movf	CANreceiveMessage@msg+1,w,c
 19245  01301C  22DA               	addwfc	fsr2h,f,c
 19246  01301E  CF67 FFDF          	movff	3943,indf2	;volatile
 19247                           
 19248                           ; BSR set to: 15
 19249                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 19250  013022  EE20 F006          	lfsr	2,6
 19251  013026  503E               	movf	CANreceiveMessage@msg,w,c
 19252  013028  26D9               	addwf	fsr2l,f,c
 19253  01302A  503F               	movf	CANreceiveMessage@msg+1,w,c
 19254  01302C  22DA               	addwfc	fsr2h,f,c
 19255  01302E  CF68 FFDF          	movff	3944,indf2	;volatile
 19256                           
 19257                           ; BSR set to: 15
 19258                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 19259  013032  EE20 F007          	lfsr	2,7
 19260  013036  503E               	movf	CANreceiveMessage@msg,w,c
 19261  013038  26D9               	addwf	fsr2l,f,c
 19262  01303A  503F               	movf	CANreceiveMessage@msg+1,w,c
 19263  01303C  22DA               	addwfc	fsr2h,f,c
 19264  01303E  CF69 FFDF          	movff	3945,indf2	;volatile
 19265                           
 19266                           ; BSR set to: 15
 19267                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 19268  013042  EE20 F008          	lfsr	2,8
 19269  013046  503E               	movf	CANreceiveMessage@msg,w,c
 19270  013048  26D9               	addwf	fsr2l,f,c
 19271  01304A  503F               	movf	CANreceiveMessage@msg+1,w,c
 19272  01304C  22DA               	addwfc	fsr2h,f,c
 19273  01304E  CF6A FFDF          	movff	3946,indf2	;volatile
 19274                           
 19275                           ; BSR set to: 15
 19276                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 19277  013052  EE20 F009          	lfsr	2,9
 19278  013056  503E               	movf	CANreceiveMessage@msg,w,c
 19279  013058  26D9               	addwf	fsr2l,f,c
 19280  01305A  503F               	movf	CANreceiveMessage@msg+1,w,c
 19281  01305C  22DA               	addwfc	fsr2h,f,c
 19282  01305E  CF6B FFDF          	movff	3947,indf2	;volatile
 19283                           
 19284                           ; BSR set to: 15
 19285                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 19286  013062  EE20 F00A          	lfsr	2,10
 19287  013066  503E               	movf	CANreceiveMessage@msg,w,c
 19288  013068  26D9               	addwf	fsr2l,f,c
 19289  01306A  503F               	movf	CANreceiveMessage@msg+1,w,c
 19290  01306C  22DA               	addwfc	fsr2h,f,c
 19291  01306E  CF6C FFDF          	movff	3948,indf2	;volatile
 19292                           
 19293                           ; BSR set to: 15
 19294                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 19295  013072  EE20 F00B          	lfsr	2,11
 19296  013076  503E               	movf	CANreceiveMessage@msg,w,c
 19297  013078  26D9               	addwf	fsr2l,f,c
 19298  01307A  503F               	movf	CANreceiveMessage@msg+1,w,c
 19299  01307C  22DA               	addwfc	fsr2h,f,c
 19300  01307E  CF6D FFDF          	movff	3949,indf2	;volatile
 19301                           
 19302                           ; BSR set to: 15
 19303                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 19304  013082  EE20 F00E          	lfsr	2,14
 19305  013086  503E               	movf	CANreceiveMessage@msg,w,c
 19306  013088  26D9               	addwf	fsr2l,f,c
 19307  01308A  503F               	movf	CANreceiveMessage@msg+1,w,c
 19308  01308C  22DA               	addwfc	fsr2h,f,c
 19309  01308E  AC65               	btfss	3941,6,c	;volatile
 19310  013090  D002               	goto	i2u823_40
 19311  013092  0E01               	movlw	1
 19312  013094  D001               	goto	i2u823_46
 19313  013096                     i2u823_40:
 19314  013096  0E00               	movlw	0
 19315  013098                     i2u823_46:
 19316  013098  6EDF               	movwf	indf2,c
 19317                           
 19318                           ; BSR set to: 15
 19319                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 19320  01309A  EE20 F00D          	lfsr	2,13
 19321  01309E  503E               	movf	CANreceiveMessage@msg,w,c
 19322  0130A0  26D9               	addwf	fsr2l,f,c
 19323  0130A2  503F               	movf	CANreceiveMessage@msg+1,w,c
 19324  0130A4  22DA               	addwfc	fsr2h,f,c
 19325  0130A6  5065               	movf	3941,w,c	;volatile
 19326  0130A8  0B0F               	andlw	15
 19327  0130AA  6EDF               	movwf	indf2,c
 19328                           
 19329                           ; BSR set to: 15
 19330                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 19331  0130AC  EE20 F00C          	lfsr	2,12
 19332  0130B0  503E               	movf	CANreceiveMessage@msg,w,c
 19333  0130B2  26D9               	addwf	fsr2l,f,c
 19334  0130B4  503F               	movf	CANreceiveMessage@msg+1,w,c
 19335  0130B6  22DA               	addwfc	fsr2h,f,c
 19336  0130B8  A662               	btfss	3938,3,c	;volatile
 19337  0130BA  D002               	goto	i2u824_40
 19338  0130BC  0E01               	movlw	1
 19339  0130BE  D001               	goto	i2u824_46
 19340  0130C0                     i2u824_40:
 19341  0130C0  0E00               	movlw	0
 19342  0130C2                     i2u824_46:
 19343  0130C2  6EDF               	movwf	indf2,c
 19344                           
 19345                           ; BSR set to: 15
 19346                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 19347  0130C4  B662               	btfsc	3938,3,c	;volatile
 19348  0130C6  D043               	goto	i2l6560
 19349                           
 19350                           ; BSR set to: 15
 19351                           ;inc\CANlib.h: 606: {
 19352                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 19353  0130C8  CF61 F040          	movff	3937,??_CANreceiveMessage	;volatile
 19354  0130CC  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19355  0130CE  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19356  0130D0  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19357  0130D2  0E03               	movlw	3
 19358  0130D4                     i2u826_45:
 19359  0130D4  90D8               	bcf	status,0,c
 19360  0130D6  3640               	rlcf	??_CANreceiveMessage,f,c
 19361  0130D8  3641               	rlcf	??_CANreceiveMessage+1,f,c
 19362  0130DA  3642               	rlcf	??_CANreceiveMessage+2,f,c
 19363  0130DC  3643               	rlcf	??_CANreceiveMessage+3,f,c
 19364  0130DE  2EE8               	decfsz	wreg,f,c
 19365  0130E0  D7F9               	goto	i2u826_45
 19366  0130E2  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19367  0130E6  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19368  0130EA  C040  FFDE         	movff	??_CANreceiveMessage,postinc2
 19369  0130EE  C041  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19370  0130F2  C042  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19371  0130F6  C043  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19372                           
 19373                           ; BSR set to: 15
 19374                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 19375  0130FA  3862               	swapf	3938,w,c	;volatile
 19376  0130FC  42E8               	rrncf	wreg,f,c
 19377  0130FE  0B07               	andlw	7
 19378  013100  0B07               	andlw	7
 19379  013102  6E49               	movwf	CANreceiveMessage@tamp,c
 19380                           
 19381                           ; BSR set to: 15
 19382                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 19383  013104  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19384  013108  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19385  01310C  CFDE F040          	movff	postinc2,??_CANreceiveMessage
 19386  013110  CFDE F041          	movff	postinc2,??_CANreceiveMessage+1
 19387  013114  CFDE F042          	movff	postinc2,??_CANreceiveMessage+2
 19388  013118  CFDE F043          	movff	postinc2,??_CANreceiveMessage+3
 19389  01311C  5049               	movf	CANreceiveMessage@tamp,w,c
 19390  01311E  2440               	addwf	??_CANreceiveMessage,w,c
 19391  013120  6E44               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 19392  013122  0E00               	movlw	0
 19393  013124  2041               	addwfc	??_CANreceiveMessage+1,w,c
 19394  013126  6E45               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 19395  013128  0E00               	movlw	0
 19396  01312A  2042               	addwfc	??_CANreceiveMessage+2,w,c
 19397  01312C  6E46               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 19398  01312E  0E00               	movlw	0
 19399  013130  2043               	addwfc	??_CANreceiveMessage+3,w,c
 19400  013132  6E47               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 19401  013134  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19402  013138  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19403  01313C  C044  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 19404  013140  C045  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 19405  013144  C046  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 19406  013148  C047  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 19407                           
 19408                           ;inc\CANlib.h: 610: }
 19409  01314C  D088               	goto	i2l6586
 19410  01314E                     i2l6560:
 19411                           
 19412                           ; BSR set to: 15
 19413                           ;inc\CANlib.h: 611: else
 19414                           ;inc\CANlib.h: 612: {
 19415                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 19416  01314E  CF64 F040          	movff	3940,??_CANreceiveMessage	;volatile
 19417  013152  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19418  013154  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19419  013156  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19420  013158  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19421  01315C  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19422  013160  C040  FFDE         	movff	??_CANreceiveMessage,postinc2
 19423  013164  C041  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19424  013168  C042  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19425  01316C  C043  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19426                           
 19427                           ; BSR set to: 15
 19428                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 19429  013170  CF63 F040          	movff	3939,??_CANreceiveMessage	;volatile
 19430  013174  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19431  013176  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19432  013178  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19433  01317A  C042  F043         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 19434  01317E  C041  F042         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 19435  013182  C040  F041         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 19436  013186  6A40               	clrf	??_CANreceiveMessage,c
 19437  013188  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19438  01318C  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19439  013190  5040               	movf	??_CANreceiveMessage,w,c
 19440  013192  26DE               	addwf	postinc2,f,c
 19441  013194  5041               	movf	??_CANreceiveMessage+1,w,c
 19442  013196  22DE               	addwfc	postinc2,f,c
 19443  013198  5042               	movf	??_CANreceiveMessage+2,w,c
 19444  01319A  22DE               	addwfc	postinc2,f,c
 19445  01319C  5043               	movf	??_CANreceiveMessage+3,w,c
 19446  01319E  22DE               	addwfc	postinc2,f,c
 19447                           
 19448                           ; BSR set to: 15
 19449                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 19450  0131A0  A062               	btfss	3938,0,c	;volatile
 19451  0131A2  D00C               	goto	i2l6568
 19452                           
 19453                           ; BSR set to: 15
 19454                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 19455  0131A4  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19456  0131A8  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19457  0131AC  0E00               	movlw	0
 19458  0131AE  12DE               	iorwf	postinc2,f,c
 19459  0131B0  0E00               	movlw	0
 19460  0131B2  12DE               	iorwf	postinc2,f,c
 19461  0131B4  0E01               	movlw	1
 19462  0131B6  12DE               	iorwf	postinc2,f,c
 19463  0131B8  0E00               	movlw	0
 19464  0131BA  12DE               	iorwf	postinc2,f,c
 19465  0131BC                     i2l6568:
 19466                           
 19467                           ; BSR set to: 15
 19468                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 19469  0131BC  A262               	btfss	3938,1,c	;volatile
 19470  0131BE  D00C               	goto	i2l6572
 19471                           
 19472                           ; BSR set to: 15
 19473                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 19474  0131C0  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19475  0131C4  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19476  0131C8  0E00               	movlw	0
 19477  0131CA  12DE               	iorwf	postinc2,f,c
 19478  0131CC  0E00               	movlw	0
 19479  0131CE  12DE               	iorwf	postinc2,f,c
 19480  0131D0  0E02               	movlw	2
 19481  0131D2  12DE               	iorwf	postinc2,f,c
 19482  0131D4  0E00               	movlw	0
 19483  0131D6  12DE               	iorwf	postinc2,f,c
 19484  0131D8                     i2l6572:
 19485                           
 19486                           ; BSR set to: 15
 19487                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 19488  0131D8  AA62               	btfss	3938,5,c	;volatile
 19489  0131DA  D00C               	goto	i2l6576
 19490                           
 19491                           ; BSR set to: 15
 19492                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 19493  0131DC  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19494  0131E0  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19495  0131E4  0E00               	movlw	0
 19496  0131E6  12DE               	iorwf	postinc2,f,c
 19497  0131E8  0E00               	movlw	0
 19498  0131EA  12DE               	iorwf	postinc2,f,c
 19499  0131EC  0E04               	movlw	4
 19500  0131EE  12DE               	iorwf	postinc2,f,c
 19501  0131F0  0E00               	movlw	0
 19502  0131F2  12DE               	iorwf	postinc2,f,c
 19503  0131F4                     i2l6576:
 19504                           
 19505                           ; BSR set to: 15
 19506                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 19507  0131F4  AC62               	btfss	3938,6,c	;volatile
 19508  0131F6  D00C               	goto	i2l6580
 19509                           
 19510                           ; BSR set to: 15
 19511                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 19512  0131F8  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19513  0131FC  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19514  013200  0E00               	movlw	0
 19515  013202  12DE               	iorwf	postinc2,f,c
 19516  013204  0E00               	movlw	0
 19517  013206  12DE               	iorwf	postinc2,f,c
 19518  013208  0E08               	movlw	8
 19519  01320A  12DE               	iorwf	postinc2,f,c
 19520  01320C  0E00               	movlw	0
 19521  01320E  12DE               	iorwf	postinc2,f,c
 19522  013210                     i2l6580:
 19523                           
 19524                           ; BSR set to: 15
 19525                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 19526  013210  AE62               	btfss	3938,7,c	;volatile
 19527  013212  D00C               	goto	i2l6584
 19528                           
 19529                           ; BSR set to: 15
 19530                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 19531  013214  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19532  013218  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19533  01321C  0E00               	movlw	0
 19534  01321E  12DE               	iorwf	postinc2,f,c
 19535  013220  0E00               	movlw	0
 19536  013222  12DE               	iorwf	postinc2,f,c
 19537  013224  0E10               	movlw	16
 19538  013226  12DE               	iorwf	postinc2,f,c
 19539  013228  0E00               	movlw	0
 19540  01322A  12DE               	iorwf	postinc2,f,c
 19541  01322C                     i2l6584:
 19542                           
 19543                           ; BSR set to: 15
 19544                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 19545  01322C  CF61 F040          	movff	3937,??_CANreceiveMessage	;volatile
 19546  013230  6A41               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19547  013232  6A42               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19548  013234  6A43               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19549  013236  0E15               	movlw	21
 19550  013238                     i2u832_45:
 19551  013238  90D8               	bcf	status,0,c
 19552  01323A  3640               	rlcf	??_CANreceiveMessage,f,c
 19553  01323C  3641               	rlcf	??_CANreceiveMessage+1,f,c
 19554  01323E  3642               	rlcf	??_CANreceiveMessage+2,f,c
 19555  013240  3643               	rlcf	??_CANreceiveMessage+3,f,c
 19556  013242  2EE8               	decfsz	wreg,f,c
 19557  013244  D7F9               	goto	i2u832_45
 19558  013246  C03E  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19559  01324A  C03F  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19560  01324E  5040               	movf	??_CANreceiveMessage,w,c
 19561  013250  12DE               	iorwf	postinc2,f,c
 19562  013252  5041               	movf	??_CANreceiveMessage+1,w,c
 19563  013254  12DE               	iorwf	postinc2,f,c
 19564  013256  5042               	movf	??_CANreceiveMessage+2,w,c
 19565  013258  12DE               	iorwf	postinc2,f,c
 19566  01325A  5043               	movf	??_CANreceiveMessage+3,w,c
 19567  01325C  12DE               	iorwf	postinc2,f,c
 19568  01325E                     i2l6586:
 19569                           
 19570                           ; BSR set to: 15
 19571                           ;inc\CANlib.h: 629: }
 19572                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 19573  01325E  9E60               	bcf	3936,7,c	;volatile
 19574                           
 19575                           ; BSR set to: 15
 19576                           ;inc\CANlib.h: 632: return (error);
 19577                           ;	Return value of _CANreceiveMessage is never used
 19578  013260  0012               	return	
 19579  013262                     __end_of_CANreceiveMessage:
 19580                           	opt stack 0
 19581                           pclatu	equ	0xFFB
 19582                           pclath	equ	0xFFA
 19583                           tblptru	equ	0xFF8
 19584                           tblptrh	equ	0xFF7
 19585                           tblptrl	equ	0xFF6
 19586                           tablat	equ	0xFF5
 19587                           prodh	equ	0xFF4
 19588                           prodl	equ	0xFF3
 19589                           intcon	equ	0xFF2
 19590                           postinc0	equ	0xFEE
 19591                           fsr0h	equ	0xFEA
 19592                           fsr0l	equ	0xFE9
 19593                           wreg	equ	0xFE8
 19594                           indf1	equ	0xFE7
 19595                           fsr1h	equ	0xFE2
 19596                           fsr1l	equ	0xFE1
 19597                           bsr	equ	0xFE0
 19598                           indf2	equ	0xFDF
 19599                           postinc2	equ	0xFDE
 19600                           postdec2	equ	0xFDD
 19601                           fsr2h	equ	0xFDA
 19602                           fsr2l	equ	0xFD9
 19603                           status	equ	0xFD8
 19604                           
 19605 ;; *************** function _CANisRxReady *****************
 19606 ;; Defined at:
 19607 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 19608 ;; Parameters:    Size  Location     Type
 19609 ;;		None
 19610 ;; Auto vars:     Size  Location     Type
 19611 ;;		None
 19612 ;; Return value:  Size  Location     Type
 19613 ;;                  1    wreg      unsigned char 
 19614 ;; Registers used:
 19615 ;;		wreg, status,2
 19616 ;; Tracked objects:
 19617 ;;		On entry : 0/0
 19618 ;;		On exit  : 0/0
 19619 ;;		Unchanged: 0/0
 19620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19624 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19625 ;;Total ram usage:        1 bytes
 19626 ;; Hardware stack levels used:    1
 19627 ;; This function calls:
 19628 ;;		Nothing
 19629 ;; This function is called by:
 19630 ;;		_ISR_alta
 19631 ;; This function uses a non-reentrant model
 19632 ;;
 19633                           
 19634                           	psect	text52
 19635  015E0E                     __ptext52:
 19636                           	opt stack 0
 19637  015E0E                     _CANisRxReady:
 19638                           	opt stack 21
 19639                           
 19640                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 19641                           
 19642                           ; BSR set to: 15
 19643                           ;incstack = 0
 19644  015E0E  0E01               	movlw	1
 19645  015E10  6E3E               	movwf	_CANisRxReady$3237,c
 19646  015E12  BE60               	btfsc	3936,7,c	;volatile
 19647  015E14  D005               	goto	i2l573
 19648  015E16  010F               	movlb	15	; () banked
 19649  015E18  BF50               	btfsc	80,7,b	;volatile
 19650  015E1A  D002               	goto	i2l573
 19651                           
 19652                           ; BSR set to: 15
 19653  015E1C  0E00               	movlw	0
 19654  015E1E  6E3E               	movwf	_CANisRxReady$3237,c
 19655  015E20                     i2l573:
 19656  015E20  503E               	movf	_CANisRxReady$3237,w,c
 19657  015E22  0012               	return	
 19658  015E24                     __end_of_CANisRxReady:
 19659                           	opt stack 0
 19660                           pclatu	equ	0xFFB
 19661                           pclath	equ	0xFFA
 19662                           tblptru	equ	0xFF8
 19663                           tblptrh	equ	0xFF7
 19664                           tblptrl	equ	0xFF6
 19665                           tablat	equ	0xFF5
 19666                           prodh	equ	0xFF4
 19667                           prodl	equ	0xFF3
 19668                           intcon	equ	0xFF2
 19669                           postinc0	equ	0xFEE
 19670                           fsr0h	equ	0xFEA
 19671                           fsr0l	equ	0xFE9
 19672                           wreg	equ	0xFE8
 19673                           indf1	equ	0xFE7
 19674                           fsr1h	equ	0xFE2
 19675                           fsr1l	equ	0xFE1
 19676                           bsr	equ	0xFE0
 19677                           indf2	equ	0xFDF
 19678                           postinc2	equ	0xFDE
 19679                           postdec2	equ	0xFDD
 19680                           fsr2h	equ	0xFDA
 19681                           fsr2l	equ	0xFD9
 19682                           status	equ	0xFD8
 19683                           pclatu	equ	0xFFB
 19684                           pclath	equ	0xFFA
 19685                           tblptru	equ	0xFF8
 19686                           tblptrh	equ	0xFF7
 19687                           tblptrl	equ	0xFF6
 19688                           tablat	equ	0xFF5
 19689                           prodh	equ	0xFF4
 19690                           prodl	equ	0xFF3
 19691                           intcon	equ	0xFF2
 19692                           postinc0	equ	0xFEE
 19693                           fsr0h	equ	0xFEA
 19694                           fsr0l	equ	0xFE9
 19695                           wreg	equ	0xFE8
 19696                           indf1	equ	0xFE7
 19697                           fsr1h	equ	0xFE2
 19698                           fsr1l	equ	0xFE1
 19699                           bsr	equ	0xFE0
 19700                           indf2	equ	0xFDF
 19701                           postinc2	equ	0xFDE
 19702                           postdec2	equ	0xFDD
 19703                           fsr2h	equ	0xFDA
 19704                           fsr2l	equ	0xFD9
 19705                           status	equ	0xFD8
 19706                           
 19707                           	psect	rparam
 19708  0000                     pclatu	equ	0xFFB
 19709                           pclath	equ	0xFFA
 19710                           tblptru	equ	0xFF8
 19711                           tblptrh	equ	0xFF7
 19712                           tblptrl	equ	0xFF6
 19713                           tablat	equ	0xFF5
 19714                           prodh	equ	0xFF4
 19715                           prodl	equ	0xFF3
 19716                           intcon	equ	0xFF2
 19717                           postinc0	equ	0xFEE
 19718                           fsr0h	equ	0xFEA
 19719                           fsr0l	equ	0xFE9
 19720                           wreg	equ	0xFE8
 19721                           indf1	equ	0xFE7
 19722                           fsr1h	equ	0xFE2
 19723                           fsr1l	equ	0xFE1
 19724                           bsr	equ	0xFE0
 19725                           indf2	equ	0xFDF
 19726                           postinc2	equ	0xFDE
 19727                           postdec2	equ	0xFDD
 19728                           fsr2h	equ	0xFDA
 19729                           fsr2l	equ	0xFD9
 19730                           status	equ	0xFD8
 19731                           
 19732                           	psect	temp
 19733  00004D                     btemp:
 19734                           	opt stack 0
 19735  00004D                     	ds	1
 19736  0000                     int$flags	set	btemp
 19737                           pclatu	equ	0xFFB
 19738                           pclath	equ	0xFFA
 19739                           tblptru	equ	0xFF8
 19740                           tblptrh	equ	0xFF7
 19741                           tblptrl	equ	0xFF6
 19742                           tablat	equ	0xFF5
 19743                           prodh	equ	0xFF4
 19744                           prodl	equ	0xFF3
 19745                           intcon	equ	0xFF2
 19746                           postinc0	equ	0xFEE
 19747                           fsr0h	equ	0xFEA
 19748                           fsr0l	equ	0xFE9
 19749                           wreg	equ	0xFE8
 19750                           indf1	equ	0xFE7
 19751                           fsr1h	equ	0xFE2
 19752                           fsr1l	equ	0xFE1
 19753                           bsr	equ	0xFE0
 19754                           indf2	equ	0xFDF
 19755                           postinc2	equ	0xFDE
 19756                           postdec2	equ	0xFDD
 19757                           fsr2h	equ	0xFDA
 19758                           fsr2l	equ	0xFD9
 19759                           status	equ	0xFD8


Data Sizes:
    Strings     162
    Constant    144
    Data        1
    BSS         111
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      76
    BANK0           160    108     141
    BANK1           256     35      70
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_15(CODE[8]), STR_14(CODE[7]), STR_13(CODE[4]), STR_12(CODE[2]), 
		 -> STR_11(CODE[5]), STR_10(CODE[4]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_7(CODE[12]), STR_6(CODE[21]), STR_4(CODE[21]), STR_3(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK0[1]), park_assist_state(BANK1[8]), data_brake(BANK0[1]), data_steering(BANK0[1]), 
		 -> data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->_CANreceiveMessage
    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Send->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  251316
                                             27 BANK1      8     8      0
                           _CAN_Send
                    _CAN_interpreter
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                        _LCD_Handler
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51783
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             32 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  132076
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41624
                                            100 BANK0      8     0      8
                                              0 BANK1     27    27      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             57 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             18 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             57 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             32 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             24 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             18 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             18 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                             18 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             18 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             18 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             90 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             90 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             70 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             57 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             18 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             32 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9596
                                             35 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   10520
                                             35 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9377
                                             30 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   28104
                                             32 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8996
                                             30 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8857
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18214
                                             33 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    9033
                                             30 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8888
                                             30 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8857
                                             26 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1341
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1341
                                             24 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             18 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_interpreter                                      4     4      0       0
                                             18 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Send                                             0     0      0    4107
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4083
                                             18 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            15    15      0    4512
                                             29 COMRAM     1     1      0
                                              4 BANK0     14    14      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (10) i2_CANsendMessage                                   16     8      8    3197
                                             17 COMRAM    12     4      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (10) i2_CANisTxReady                                      1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (10) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Send
     _CANisTxReady
     _CANsendMessage
   _CAN_interpreter
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     23      46       7       27.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6C      8D       5       88.1%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     1E      4C       1       80.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11F      20        0.0%
DATA                 0      0     11F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Apr 15 16:11:46 2016

                   ___fldiv@aexp 0098                     ___fldiv@bexp 0097  
                              _x 00E7                                _y 0264  
                              _z 00E8        __size_of_delay_set_quartz 000A  
           __end_of_CANSetFilter 0B06                     ?_LCD_Handler 002D  
                   ___fldiv@sign 008C                     ___awdiv@sign 007D  
                             _id 0012                               bsr 000FE0  
            ___wmul@multiplicand 0074                      __CFG_BORV$3 000000  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                    __CFG_OSC$HS 000000                     __CFG_CP4$OFF 000000  
                   __CFG_CP5$OFF 000000                              l400 17EE  
                            l401 17F2                              l410 1958  
                            l402 17FE                              l411 1962  
                            l500 073A                              l405 18B8  
                            l501 0746                              l414 1A72  
                            l406 18BC                              l510 0852  
                            l502 074A                              l415 1A76  
                            l407 19B4                              l511 0856  
                            l503 0756                              l416 1A82  
                            l408 1944                              l520 0962  
                            l512 0862                              l504 075A  
                            l409 194E                              l521 096E  
                            l513 0866                              l505 0766  
                            l530 0A7A                              l522 0972  
                            l514 0872                              l450 419A  
                            l370 4A68                              l531 0A7E  
                            l523 097E                              l515 0876  
                            l451 419E                              l371 4A72  
                            l380 1446                              l532 0A8A  
                            l524 0982                              l516 0882  
                            l508 0842                              l460 42A6  
                            l452 41AA                              l444 416A  
                            l381 1450                              l533 0A8E  
                            l525 098E                              l509 0846  
                            l461 42B2                              l445 416E  
                            l390 18A2                              l382 145A  
                            l534 0A9A                              l526 0992  
                            l462 42B6                              l446 417A  
                            l391 1634                              l375 161E  
                            l535 0A9E                              l527 099E  
                            l519 095E                              l463 42C2  
                            l455 4282                              l447 417E  
                            l392 1638                              l376 13B0  
                            l536 0AAA                              l480 0514  
                            l456 4286                              l448 418A  
                            l393 1730                              l385 156A  
                            l377 13B4                              l537 0AAE  
                            l481 0520                              l457 4292  
                            l449 418E                              l394 16C0  
                            l386 156E                              l378 14AC  
                            l538 0ABA                              l490 062A  
                            l482 0524                              l458 4296  
                            l395 16CA                              l387 157A  
                            l379 143C                              l491 062E  
                            l483 0530                              l475 04F0  
                            l459 42A2                              l396 16D4  
                            l492 063A                              l476 04F4  
                            l397 16DE                              l581 5BC0  
                            l493 063E                              l477 0500  
                            l494 064A                              l486 060A  
                            l478 0504                              l487 060E  
                            l479 0510                              l568 5D42  
                            l488 061A                              l497 0726  
                            l489 061E                              l498 072A  
                            l499 0736                              l781 2462  
                            l870 5A40                              l863 5DC8  
                            l775 239A                              l856 5DE4  
                            l849 5D90                              l954 10FA  
                            l868 5A3E             ??_PWR_Button_Polling 0072  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                    ?_LCD_cursor 007E                              _dir 00E4  
                            _msg 0100                              _str 010F  
                   ___awmod@sign 0077                              prod 000FF3  
                            wreg 000FE8                     ___flmul@aexp 008D  
                   ___flmul@bexp 0092                     ___flmul@sign 008C  
                   ___flmul@temp 0097                     ___flmul@prod 0093  
                   __CFG_LVP$OFF 000000           __size_of_LCD_goto_line 00EC  
                   ___fltol@exp1 00C3                     __CFG_WDT$OFF 000000  
                           l1522 3DDE                             l1531 3E16  
                           l1179 5016                             l1283 4CFE  
                           l1372 5642                             l1276 4C3A  
                           l1533 3E84                             l1525 3D86  
                           l1189 4E50                             l1277 4C7E  
                           l1382 5986                             l1552 37BE  
                           l1561 3AC8                             l1466 3442  
                           l1483 35B6                             l1467 3436  
                           l1492 364A                             l1468 3402  
                           l1581 48D4                             l1574 4828  
                           l5022 41F4                             l1559 3A5A  
                           l5016 41AE                             l1569 3B6C  
                           l6020 1A86                             l1588 4930  
                           l5108 0230                             l1589 4948  
                           l6014 1A66                             l5230 0694  
                           l5126 02EA                             l5224 064E  
                           l5144 03A4                             l5072 00BE  
                           l5048 42C6                             l5162 045E  
                           l5090 0176                             l5332 09E8  
                           l5326 09A2                             l5190 0534  
                           l8000 4FE0                             l5360 0ABE  
                           l5264 07B0                             l6410 3E2A  
                           l6330 3BF2                             l5258 076A  
                           l6420 3E7E                             l6404 3E00  
                           l6324 3BCE                             l8020 4D5E  
                           l8100 55DC                             l5292 0886  
                           l5196 057A                             l6430 3ED4  
                           l6350 3C50                             l6334 3BFC  
                           l8006 4FFC                             l6344 3C2C  
                           l8024 4DAC                             l8120 5930  
                           l8008 500C                             l6434 3F02  
                           l6354 3C5A                             l8034 4E9C  
                           l8042 5BF4                             l5298 08CC  
                           l5802 4A7E                             l9002 2520  
                           l6700 569C                             l6444 3F48  
                           l6436 3F16                             l8028 4DFE  
                           l7404 3312                             l8052 5308  
                           l8108 5630                             l8124 5974  
                           l8116 591A                             l8140 4860  
                           l5804 4AC2                             l9004 2528  
                           l6710 5A34                             l6446 3F4C  
                           l6438 3F38                             l6374 3CDC  
                           l6366 3CAE                             l7510 35E8  
                           l7502 3596                             l8118 592A  
                           l8142 4868                             l8134 4838  
                           l8310 0E02                             l8302 0D7E  
                           l6704 56D4                             l7352 5BB2  
                           l6392 3D92                             l6384 3D5A  
                           l7520 360A                             l7416 3346  
                           l7408 331C                             l8080 53B6  
                           l8072 538A                             l8152 4912  
                           l8144 4878                             l7600 37A6  
                           l8400 1284                             l8312 0E18  
                           l8232 0B16                             l9016 2556  
                           l9024 2596                             l5842 1464  
                           l8082 53C0                             l8154 4922  
                           l8146 48B6                             l7610 37E6  
                           l7602 37AC                             l8402 1292  
                           l8322 0E9C                             l8306 0DB0  
                           l8410 12BA                             l8250 0BB0  
                           l9042 2740                             l7516 35FE  
                           l7460 341C                             l7380 32A4  
                           l8068 5376                             l8420 1308  
                           l8332 0F06                             l8308 0DC6  
                           l8260 0BE0                             l8252 0BCA  
                           l4956 5E00                             l9028 259A  
                           l5918 16E8                             l5862 155E  
                           l6750 57A4                             l8174 5C3E  
                           l8182 5D00                             l6398 3DDA  
                           l7550 36B2                             l7526 361E  
                           l7446 3382                             l7374 3280  
                           l8086 53DC                             l8078 53A6  
                           l8166 499A                             l7606 37D2  
                           l8350 0FD0                             l8318 0E6A  
                           l8262 0C0A                             l8246 0B66  
                           l8238 0B30                             l8430 136A  
                           l4990 40DE                             l4974 4028  
                           l9054 27C2                             l9038 26BC  
                           l5944 1802                             l6728 5738  
                           l7560 36E4                             l7536 3644  
                           l7528 3624                             l7464 3426  
                           l7392 32DA                             l7384 32AE  
                           l8096 55C6                             l7720 552A  
                           l8424 1338                             l8416 12E0  
                           l8408 12AC                             l8336 0F7E  
                           l8256 0BDA                             l8432 138C  
                           l9048 274A                             l5938 17E2  
                           l6690 5654                             l6738 5746  
                           l8178 5C58                             l8186 5D14  
                           l7554 36D4                             l7546 36A0  
                           l7482 34A4                             l7474 3466  
                           l7458 3416                             l8098 55D6  
                           l7722 5536                             l7714 550C  
                           l8354 0FFC                             l8338 0F84  
                           l5868 157E                             l7484 34AA  
                           l7492 34C6                             l7900 4BAC  
                           l7740 558E                             l7732 556C  
                           l7724 553C                             l7708 54F6  
                           l7652 3A44                             l8428 1364  
                           l8372 10C8                             l8356 1004  
                           l8364 10A0                             l8268 0C24  
                           l8508 4604                             l5796 4A60  
                           l7566 36F8                             l7558 36E0  
                           l7398 32EE                             l7582 374C  
                           l8390 1190                             l8374 10DC  
                           l8366 10AE                             l8294 0CFA  
                           l8278 0C76                             l8542 474E  
                           l8534 4720                             l5798 4A76  
                           l7488 34B4                             l7736 557A  
                           l7760 589C                             l7752 5878  
                           l7584 3752                             l7576 3728  
                           l7840 45AC                             l7832 44B4  
                           l8560 47CC                             l8544 4760  
                           l5994 196C                             l7906 4BE6  
                           l7762 58A8                             l7682 3B3E  
                           l7658 3A6E                             l7594 3782  
                           l7586 3764                             l8386 112E  
                           l8378 10FE                             l8546 4770  
                           l7940 4CC8                             l7764 58AE  
                           l7772 58E0                             l7756 5888  
                           l7692 3B8C                             l7684 3B52  
                           l7668 3AC2                             l7860 2A9E  
                           l8556 47B2                             l7790 53F4  
                           l7782 5A8E                             l7694 3B96  
                           l7678 3B18                             l7854 29CC  
                           l7792 5426                             l7936 4CB4  
                           l7776 58F4                             l7768 58D2  
                           l7872 2C52                             l7864 2AD0  
                           l7794 5458                             l7786 5AC0  
                           l7962 4EEC                             l7946 4CE4  
                           l7890 5CF4                             l7796 548A  
                           l7956 4EC6                             l7948 4CF4  
                           l8908 2244                             l7798 54BC  
                           l7878 2D24                             l8950 238A  
                           l7984 4F94                             l7976 4F40  
                           l8960 23B4                             l8944 2370  
                           l8938 22DA                             l7996 4FCC  
                           l8980 2488                             l8948 2382  
                           l8974 2464                             l8958 23A8  
                           STR_1 FF9C                             STR_2 FF72  
                           STR_3 FF5D                             l8994 24DC  
                           STR_4 FF9C                             STR_5 FFF0  
                           l8988 24CA                             STR_6 FF87  
                           STR_7 FFD0                             STR_8 FFB1  
                           STR_9 FFC2                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _LATD 000F8C                             _LATE 000F8D  
                           u6010 03DA                             u6100 0554  
                           u6015 03CE                             u6105 0548  
                           u6025 043A                             u5610 405A  
                           u6500 0ADE                             u6420 09C2  
                           u6340 08A6                             u6260 078A  
                           u6180 066E                             u5700 41CE  
                           u7205 1530                             u7310 1708  
                           u5615 404E                             u7320 1754  
                           u6505 0AD2                             u6425 09B6  
                           u6345 089A                             u6265 077E  
                           u6185 0662                             u5705 41C2  
                           u5625 40BA                             u5810 003A  
                           u5570 3FA4                             u7315 16FC  
                           u7180 1484                             u8060 3EE8  
              _F2_Button_Polling 5DC0                             u7325 1748  
                           u7190 14D0                             u7335 17B4  
                           u5815 002E                             u5575 3F98  
                           u7440 198C                             u7185 1478  
                           u5905 020C                             u5825 009A  
                           u5585 4004                             u7450 19D8  
                           u5930 0266                             u5850 00F2  
                           u7195 14C4                             u5780 42E6  
                           u7445 1980                             u8430 5DF2  
                           u7455 19CC                             u5935 025A  
                           u5855 00E6                             u7465 1A38  
                           u5945 02C6                             u5865 0152  
                           u5785 42DA                             u5970 0320  
                           u5890 01AC                             u8380 5D9E  
                           u8445 5DF4                             u8550 5A62  
                           u5975 0314                             u5895 01A0  
                           u8480 5DD6                             u5985 0380  
                           u8395 5DA0                             u8556 5A64  
                           u9700 33CC                             u9605 5B8C  
                           u9606 5B8E                             u9710 33E4  
                           u8495 5DD8                             u9720 33E6  
                           u9575 5B68                             u9576 5B6A  
                           u9585 5B74                             u9586 5B76  
                           u9595 5B80                             u9596 5B82  
            __size_of_CANSetMask 039E                     ?_LCD_goto_xy 0081  
                           _data 002C                             _main 2204  
             ?_F2_Button_Polling 002D        __size_of_LCD_send_command 003A  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           btemp 004D                             pclat 000FFA  
                           prodh 000FF4                             prodl 000FF3  
                           start 00C0                    __CFG_IESO$OFF 000000  
                ___fldiv@new_exp 0091               __size_of_LCD_clear 0032  
               __end_of_CAN_Send 570E                     _sprintf$4215 0125  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000010  
            ??_F2_Button_Polling 0072         __end_of_LCD_enable_pulse 5D6A  
               _CANOperationMode 5DF8          __size_of_LCD_initialize 016E  
     __size_of_CANreceiveMessage 050C                    ___fltol@sign1 00C2  
                __end_of___fladd 370A                            ?_main 002D  
                __end_of___fldiv 3F70                  __end_of___awdiv 5598  
                __end_of___flneg 5C06                            STR_10 FFF5  
                          STR_11 FFEB                            STR_12 FFFD  
                          STR_13 FFF9                            STR_14 FFE4  
                          STR_15 FFDC                  __end_of___awmod 58FE  
                __end_of___flmul 3BB0                  __end_of___flsub 5B16  
                __end_of___fltol 53EE                  __end_of___lldiv 5654  
                          u11100 10F2                            u10160 3B2C  
                          u10080 39E6                            u10411 4B88  
                          u10085 39DA                            u10431 4BC2  
                ___awdiv@divisor 007A                            u12070 27AE  
                          u10640 5328                            u12080 2826  
                __end_of___llmod 5998                            u10645 531C  
                          u12097 5BB4                            u11920 241E  
                          _T3CON 000FB1                            u11930 2436  
                          u11860 233E                            u11870 2356  
                          u11936 2438                            u11955 245E  
                          u11876 2358                            u11957 2460  
                          i2l400 1F16                            i2l401 1F1A  
                          i2l410 205A                            i2l402 1F24  
                          i2l411 2062                            i2l405 1FCE  
                          i2l422 2FEE                            i2l414 2160  
                          i2l406 1FD2                            i2l415 2164  
                          i2l407 20B0                            i2l416 216E  
                          i2l408 204A                            i2l409 2052  
                          i2l380 1BBE                            i2l381 1BC6  
                          i2l390 1FBA                            i2l382 1BCE  
                          i1l766 0078                            i2l391 1D84  
                          i2l375 1D70                            i2l392 1D88  
                          i2l376 1B3A                            i2l393 1E66  
                          i2l385 1CCC                            i2l377 1B3E  
                          i2l394 1E00                            i2l386 1CD0  
                          i2l378 1C1C                            i2l395 1E08  
                          i2l387 1CDA                            i2l379 1BB6  
                          i2l396 1E10                            i2l573 5E20  
                          i2l397 1E18                            i2l568 5D84  
                          i2l762 52A6                  ___awdiv@counter 007C  
                          _TMR3H 000FB3                            _TMR3L 000FB2  
              _CANisRxReady$3237 003E                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                  __CFG_PWRT$OFF 000000                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                    __CFG_WRT4$OFF 000000  
             __size_of_ISR_bassa 00A8                    __CFG_WRT5$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000               CANInitialize@flags 0084  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                 __CFG_EBTR4$OFF 000000                 __end_of_ISR_alta 52E2  
                 __CFG_EBTR5$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000        __end_of_F2_Button_Polling 5DDC  
                __end_of_dpowers FF5D                            _scale 283C  
                __end_of_isdigit 5CFE        __size_of_LCD_shift_cursor 004C  
                 __pbitbssCOMRAM 0258             __end_of_CANisRxReady 5E24  
                          tablat 000FF5             __end_of_CANisTxReady 5D48  
                          status 000FD8                  __end_of_sprintf 139A  
            __size_of_LCD_cursor 0032                  __initialization 5B16  
                   __end_of_main 283C    __size_of_board_initialization 00A4  
                  _LCD_goto_line 53EE                ?_Joystick_Polling 002D  
             ??_Joystick_Polling 0072                ?_LCD_write_string 0083  
                         ??_main 013E        __size_ofi2_CANsendMessage 06DE  
                  __activetblptr 000003                   _JoystickValues 00DC  
             ??_LCD_write_string 0085             __size_of__tdiv_to_l_ 019E  
              _CANisTxReady$3235 0072         __size_of_CAN_interpreter 00AA  
              __end_of_LCD_clear 5CD4            i2CANsendMessage@flags 0045  
         LCD_write_string@buffer 0083                           _ADCON1 000FC1  
                         _CANCON 000F6F                 ___llmod@dividend 0072  
                         ?_scale 0099                           _ADRESH 000FC4  
               ___awdiv@dividend 0078                  __CFG_BBSIZ$1024 000000  
                         i2l6510 2F5C                           i2l6522 2FB6  
                         i2l6514 2F7A                           i2l6506 2F3E  
                         i2l6524 2FE8                           i2l6518 2F98  
                         i2l6560 314E                           i2l6580 3210  
                         i2l6572 31D8                           i2l6584 322C  
                         i2l6576 31F4                           i2l6568 31BC  
                         i2l6586 325E                           i2l6498 2ECE  
                         i2l8620 1CDE                           i2l8614 1CC2  
                         i2l8670 1E20                           i2l8746 206A  
                         i2l8690 1F0C                           i2l8594 1BD6  
                         i2l8772 2172                           i2l8860 5214  
                         i2l8852 51F0                           i2l8766 2156  
                         i2l8870 5244                           i2l8846 51CE  
                         i2l8696 1F28                           i2l8880 5270  
                         i2l8864 521C                           i2l8884 529E  
                         _RXB0D0 000F66                           _RXB0D1 000F67  
                         _RXB0D2 000F68                           _RXB0D3 000F69  
                         _RXB0D4 000F6A                           _RXB1D0 000F56  
                         _RXB0D5 000F6B                           _RXB1D1 000F57  
                         _RXB0D6 000F6C                           _RXB1D2 000F58  
                         _RXB0D7 000F6D                           _RXB1D3 000F59  
                         _RXB1D4 000F5A                           _RXB1D5 000F5B  
                         _RXB1D6 000F5C                           _RXB1D7 000F5D  
                         _TXB0D0 000F46                           _TXB0D1 000F47  
                         _TXB0D2 000F48                           _TXB0D3 000F49  
                         _TXB1D0 000F36                           _TXB0D4 000F4A  
                         _TXB1D1 000F37                           _TXB0D5 000F4B  
                         _TXB1D2 000F38                           _TXB0D6 000F4C  
                         _TXB1D3 000F39                           _TXB0D7 000F4D  
                         _TXB2D0 000F26                           _TXB1D4 000F3A  
                         _TXB2D1 000F27                           _TXB1D5 000F3B  
                         _TXB2D2 000F28                           _TXB1D6 000F3C  
                         _TXB2D3 000F29                           _TXB1D7 000F3D  
                         _TXB2D4 000F2A                           _TXB2D5 000F2B  
                         _TXB2D6 000F2C                           _TXB2D7 000F2D  
             CANsendMessage@data 0076               CANsendMessage@tamp 007E  
               __end_of___xxtofl 49AC                  _switch_position 00E6  
               __end_of_delay_ms 5BCE            __size_of_CANSetFilter 0B06  
                 __CFG_XINST$OFF 000000                __end_of_ISR_bassa 00C0  
               __end_of__powers_ FF35                       _MotoreFlag 025B  
                 ?_LCD_goto_line 002D                           ___flge 4D10  
                      ??___fladd 00AE                 _delay_set_quartz 5E24  
                         ___wmul 5C06                        ??___fldiv 0088  
                      ??___awdiv 007C                        ??___flneg 009D  
                 __CFG_STVREN$ON 000000                        ??___awmod 0076  
                      ??___flmul 0088                        ??___flsub 00C2  
                      ??___fltol 00BE                        ??___lldiv 007A  
                      ??___llmod 007A                     ??_CANSetMask 0077  
        __size_of_LCD_write_char 0096                           _fround 430E  
 LCD_initialize@quartz_frequency 0080                           clear_0 5B1C  
                         clear_1 5B28                           clear_2 5B38  
               ___awdiv@quotient 007E                  ___awmod@divisor 0074  
           __size_of_LCD_Handler 01DA                  ___awmod@counter 0076  
                __CFG_BOREN$BOHW 000000                _JoystickConstants 00CC  
                      ??_isdigit 0072                     __mediumconst FECC  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ?_CAN_Send 002D  
     __size_of_F2_Button_Polling 001C                        ??_sprintf 0123  
                   _CANSetFilter 0000                       ___flge@ff1 0072  
                     ___flge@ff2 0076                     ___xxtofl@arg 007C  
                   ___xxtofl@exp 007B                     ___xxtofl@val 0072  
                     __accesstop 0060          __end_of__initialization 5B50  
             __end_of_CANSetMask 430E                  __CFG_PBADEN$OFF 000000  
                     _SterzoFlag 025D                       ___flneg@f1 0099  
               _LCD_send_command 5B5A                    ___rparam_used 000001  
                     ___fltol@f1 00BA             __size_of_LCD_goto_xy 001C  
                 __pcstackCOMRAM 002D                     __pidataBANK0 5E2E  
                      ?_ISR_alta 002D                     LCD_goto_xy@x 0082  
                   LCD_goto_xy@y 0081                    __end_of_scale 2D56  
                 _LCD_initialize 5028                _LCD_write_message 5C3C  
          CANSetFilter@numBuffer 007B               ?_LCD_write_message 0083  
                     __div_to_l_ 4EA0                     ??_LCD_cursor 007F  
                  _newMessageCan 025F                     _actual_speed 00DE  
          __size_of_CANisRxReady 0016            __size_of_CANisTxReady 0024  
                     ??_CAN_Send 0082                  __div_to_l_@exp1 007F  
            ??_LCD_write_message 0085                  __div_to_l_@cntr 007E  
                        ??_scale 009D                 _LCD_shift_cursor 5A82  
                __div_to_l_@quot 007A         __end_of_CANOperationMode 5E0E  
                     __pbssBANK0 00CC                       __pbssBANK1 0100  
              ??_CAN_interpreter 0072                       _data_brake 00E9  
        __size_of_CANsendMessage 078C                       _data_speed 00EA  
                  __div_to_l_@f1 0072                    __div_to_l_@f2 0076  
                ??_LCD_goto_line 007E               __end_of_LCD_cursor 5CA2  
         __end_of_LCD_initialize 5196                          ?___flge 0072  
                        ?___wmul 0072                       ??_ISR_alta 0064  
      __end_of_LCD_write_message 5C70                ?_LCD_enable_pulse 002D  
                        ?_fround 0099                     _CANisRxReady 5E0E  
                        _CANSTAT 000F6E               ??_LCD_enable_pulse 007A  
                   _CANisTxReady 5D24                        ISR_alta@i 004A  
                        _BRGCON1 000F70                          _BRGCON2 000F71  
                        _BRGCON3 000F72                 i2_CANsendMessage 1B26  
    __size_of_PWR_Button_Polling 001C                        ?___xxtofl 0072  
        __size_ofi2_CANisTxReady 001E           __size_of_CANInitialize 01C6  
               LCD_cursor@active 007F                        ?_delay_ms 0078  
                        _RXB0DLC 000F65                          _RXB1DLC 000F55  
                        _RXB0CON 000F60                          _RXB1CON 000F50  
                        _TXB0DLC 000F45                          _TXB1DLC 000F35  
                        _TXB2DLC 000F25              CANsendMessage@flags 0079  
                        _AbsFlag 0258                __end_of__npowers_ FF01  
                        __Hparam 0000                       _left_speed 0026  
                     _scale$4214 009D                          __Lparam 0000  
               delay_ms@value_ms 0078                  ?_LCD_initialize 002D  
                __size_of___flge 0190                          ___fladd 3262  
                        ___fldiv 3BB0                          ___awdiv 54DA  
                        ___flneg 5BCE                          ___awmod 585C  
                        ___flmul 370A                          ___flsub 5ACE  
                        ___fltol 52E2                          ___lldiv 5598  
                __size_of___wmul 0036                   _LCD_write_char 5998  
                        ___llmod 58FE             CANInitialize@propSeg 0089  
                        __pcinit 5B16                          _battery 002A  
                __size_of_fround 02F6                          __ramtop 0D00  
            LCD_write_char@value 0082                          __ptext0 2204  
                        __ptext1 57B8                          __ptext2 49AC  
                        __ptext3 3F70                          __ptext4 0000  
                        __ptext5 5DF8                          __ptext6 5D88  
                        __ptext7 4604                          __ptext8 0B06  
                        __ptext9 283C                      ?__div_to_l_ 0072  
               LCD_write_char@D0 0081                 LCD_write_char@D1 0080  
               LCD_write_char@D2 007F                 LCD_write_char@D3 007E  
                      _F1_switch 0259                          _dpowers FF35  
                      _F2_switch 025A                          _isdigit 5CD4  
                     ??___xxtofl 0076                 ___awmod@dividend 0072  
                     ??_delay_ms 007A           CANreceiveMessage@error 0048  
   __end_of_board_initialization 585C        __size_of_Joystick_Polling 0054  
       __end_of_delay_set_quartz 5E2E                          _sprintf 0B06  
                 __pintcode_body 5196                        _LCD_clear 5CA2  
           end_of_initialization 5B50        __size_of_LCD_write_string 0026  
                        int_func 5196                        i2u1210_47 526A  
                      i2u1134_40 1BF4                        i2u1134_45 1BEA  
                      i2u1135_40 1C3E                        i2u1135_45 1C34  
                      i2u1160_40 2088                        i2u1160_45 207E  
                      i2u1136_45 1C96                        i2u1161_40 20D2  
                      i2u1161_45 20C8                        i2u1162_45 212A  
                      i2u1147_40 1E3E                        i2u1147_45 1E34  
                      i2u1148_40 1E88                        i2u1148_45 1E7E  
                      i2u1149_45 1EE0                        i2u1177_40 51EE  
                  _CANInitialize 49AC                  ___lldiv@divisor 0076  
             LCD_cursor@blinking 007E                    _parking_state 00E5  
                ___lldiv@counter 007E           __end_of_LCD_write_char 5A2E  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE       __size_of_LCD_write_message 0034  
                 __tdiv_to_l_@f1 0072                   __tdiv_to_l_@f2 0076  
                     _wait_low_1 0261                       _wait_low_2 0262  
                     _wait_low_3 0263                        _ISR_bassa 0018  
                  ??__tdiv_to_l_ 007A                        _PORTAbits 000F80  
                      _PORTBbits 000F81                   CANSetMask@mask 0072  
                      _PORTDbits 000F83                   CANSetMask@tamp 007C  
       __end_of_LCD_send_command 5B94                   CANSetMask@type 0076  
                    ___fladd@grs 00B9                    ___xxtofl@sign 007A  
                    ___fldiv@grs 0093                      ___fldiv@rem 008D  
              _F1_Button_Polling 5DDC                       ?_LCD_clear 002D  
             ?_F1_Button_Polling 002D                __size_of_CAN_Send 00BA  
        _clock_counter_reference 00E0                      ___flmul@grs 008E  
                 _CANsendMessage 139A                 CANInitialize@BRP 0083  
               CANInitialize@SJW 0082                   ?_CANInitialize 0080  
            ??_F1_Button_Polling 0072              __size_of__div_to_l_ 0188  
        LCD_write_integer@F17272 0008                  ?_LCD_write_char 002D  
                  ??_LCD_Handler 00CC         __end_of_LCD_shift_cursor 5ACE  
                 __end_of___flge 4EA0                       ?_ISR_bassa 002D  
                 __end_of___wmul 5C3C                __size_of_ISR_alta 52DA  
              LCD_shift_cursor@i 0080                   __end_of_fround 4604  
                _CAN_interpreter 570E                   i2_CANisTxReady 5D6A  
      __end_of_F1_Button_Polling 5DF8              start_initialization 5B16  
            __end_of__tdiv_to_l_ 4D10              CANSetMask@numBuffer 007B  
                  _data_speed_rx 0001           __end_of_CANsendMessage 1B26  
              ?_CANOperationMode 002D                    _data_steering 00EB  
                  ??_LCD_goto_xy 0082       i2CANsendMessage@dataLength 0044  
           i2CANsendMessage@data 0042               ??_CANOperationMode 0072  
           i2CANsendMessage@tamp 0060                  ___llmod@divisor 0076  
       __end_ofi2_CANsendMessage 2204       CANInitialize@FilterConfig1 008A  
     CANInitialize@FilterConfig2 008B                  ___llmod@counter 007A  
                       ??___flge 007A             _board_initialization 57B8  
                       ??___wmul 0076                      __pdataBANK0 00EC  
               __CFG_LPT1OSC$OFF 000000                         ??_fround 009D  
         __end_ofi2_CANisTxReady 5D88                    sprintf@tmpval 0133  
                      ___fladd@a 00AA                        ___fladd@b 00A6  
         CANInitialize@phaseSeg1 0080           CANInitialize@phaseSeg2 0081  
                     fround@prec 00A5              __end_of_LCD_Handler 47DE  
                      ___fldiv@a 0084                        ___fldiv@b 0080  
                      ___flmul@a 0084                        ___flmul@b 0080  
                    __pbssCOMRAM 0001                        ___flsub@a 00BE  
                      ___flsub@b 00BA                    __pcstackBANK0 0060  
                  __pcstackBANK1 0123                      _BRGCON2bits 000F71  
                    _BRGCON3bits 000F72                 _Joystick_Polling 5A2E  
              __size_of___xxtofl 01CE        __size_of_LCD_enable_pulse 0022  
                   _isdigit$3797 0073       i2CANsendMessage@identifier 003E  
              _park_assist_state 011B                __size_of_delay_ms 003A  
                    ??_LCD_clear 007E                  ?_CANsendMessage 0072  
        LCD_write_message@buffer 0083                 _LCD_write_string 5CFE  
                ??_CANInitialize 0085                      sprintf@flag 012B  
                    sprintf@fval 0139                      sprintf@prec 0137  
               ??_LCD_initialize 0080               CANSetFilter@filter 0072  
      delay_set_quartz@frequency 0072               LCD_send_command@D0 007C  
             LCD_send_command@D1 007B               LCD_send_command@D2 007A  
             LCD_send_command@D3 007D              __end_of_LCD_goto_xy 5DC0  
          __end_of_LCD_goto_line 54DA            ?_board_initialization 002D  
                      __pintcode 0008                    __pmediumconst FECC  
                       ?___fladd 00A6                         ?___fldiv 0080  
                       ?___awdiv 0078                         ?___flneg 0099  
                       ?___awmod 0072                         ?___flmul 0080  
        __end_of_CAN_interpreter 57B8                         ?___flsub 00BA  
                       ?___fltol 00BA                         ?___lldiv 0072  
                       ?___llmod 0072                        __npowers_ FECD  
                    ??_ISR_bassa 002D                      __pintcodelo 0018  
     __end_of_PWR_Button_Polling 5DA4                  ?i2_CANisTxReady 002D  
                    __tdiv_to_l_ 4B72                     ??__div_to_l_ 007A  
                    _COMSTATbits 000F74                         ?_isdigit 002D  
     __size_of_F1_Button_Polling 001C                         _CAN_Send 5654  
                       ?_sprintf 00C4                   __size_of_scale 051A  
              ?_delay_set_quartz 002D            CANreceiveMessage@tamp 0049  
             ??_delay_set_quartz 0072                   ___wmul@product 0076  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                       _LATEbits 000F8D                         _IPR2bits 000FA2  
   _delay_quartz_frequency_value 00EC                         _IPR3bits 000FA5  
                       _PIE2bits 000FA0                         _PIE3bits 000FA3  
             __end_of__div_to_l_ 5028                         _PIR2bits 000FA1  
                       _PIR3bits 000FA4                         i2u812_40 2E0E  
                       i2u812_46 2E10                         i2u813_40 2E3C  
                       i2u821_45 2FC2                         i2u813_46 2E3E  
                       i2u823_40 3096                         i2u815_45 2E52  
                       i2u823_46 3098                         i2u824_40 30C0  
                       i2u832_45 3238                         i2u824_46 30C2  
                       i2u826_45 30D4                         _RXB0EIDH 000F63  
                       _RXB0EIDL 000F64                         _RXB1EIDH 000F53  
                      _pr_time_1 00D4                        _pr_time_2 00D8  
                       _RXB1EIDL 000F54                        _pr_time_3 0016  
                      _pr_time_4 001A                        _pr_time_5 001E  
                      _set_speed 00E2                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                         _RXB0SIDH 000F61  
                       _RXB0SIDL 000F62                         _RXF0EIDH 000F02  
                       _RXB1SIDH 000F51                         _RXF0EIDL 000F03  
                       _RXB1SIDL 000F52                         _RXF1EIDH 000F06  
                       _RXF1EIDL 000F07                         _RXF2EIDH 000F0A  
                       _RXF2EIDL 000F0B                         _RXF3EIDH 000F0E  
                       _RXF3EIDL 000F0F                         _RXF4EIDH 000F12  
                       _RXF4EIDL 000F13                         _RXF5EIDH 000F16  
                       _RXF5EIDL 000F17                         _RXF0SIDH 000F00  
                       _RXF0SIDL 000F01                         _TXB0EIDH 000F43  
                       _RXF1SIDH 000F04                         _TXB0EIDL 000F44  
                       _RXF1SIDL 000F05                         _TXB1EIDH 000F33  
                       _RXF2SIDH 000F08                         _TXB1EIDL 000F34  
                       _RXF2SIDL 000F09                         _ISR_alta 0008  
                       _TXB2EIDH 000F23                         _RXF3SIDH 000F0C  
                       _TXB2EIDL 000F24                         _RXF3SIDL 000F0D  
                       _RXF4SIDH 000F10                         _RXF4SIDL 000F11  
                       _RXF5SIDH 000F14                         _RXF5SIDL 000F15  
                       _RXM0EIDH 000F1A                         _RXM0EIDL 000F1B  
                       _TXB0SIDH 000F41                         _RXM1EIDH 000F1E  
                       _TXB0SIDL 000F42                         _RXM1EIDL 000F1F  
                       _TXB1SIDH 000F31                         _TXB1SIDL 000F32  
                       _TXB2SIDH 000F21                         _TXB2SIDL 000F22  
                    _LCD_Handler 4604                         _RXM0SIDH 000F18  
                       _RXM0SIDL 000F19                         _RXM1SIDH 000F1C  
                       _RXM1SIDL 000F1D                         _RXERRCNT 000F75  
                       _TXERRCNT 000F76                       _ADCON0bits 000FC2  
                     _ADCON2bits 000FC0                ___wmul@multiplier 0072  
                       _RTR_Flag 025C                ?_LCD_send_command 007A  
               _actual_speed_kmh 000E               ??_LCD_send_command 007D  
                  ?_CANSetFilter 0072                       _CANCONbits 000F6F  
                    _LCD_goto_xy 5DA4                 ??_LCD_write_char 007E  
              LCD_goto_line@line 007E                         __Hrparam 0000  
                   _RXB0SIDLbits 000F62           ??_board_initialization 008C  
                       __Lrparam 0000                     _RXB1SIDLbits 000F52  
               ?_CAN_interpreter 002D                 __size_of___fladd 04A8  
                     _CANSetMask 3F70                 __size_of___fldiv 03C0  
               __size_of___awdiv 00BE                 __size_of___flneg 0038  
               __size_of___awmod 00A2                 __size_of___flmul 04A6  
              ?_LCD_shift_cursor 007E                 __size_of___flsub 0048  
               __size_of___fltol 010C                 __size_of___lldiv 00BC  
               __size_of___llmod 009A                      _fround$4212 00A1  
                    _fround$4213 009D               ??_LCD_shift_cursor 007F  
                     sprintf@exp 0131                       sprintf@val 012D  
                       ___xxtofl 47DE                     _RXF0SIDLbits 000F01  
               __size_of_isdigit 002A                         _delay_ms 5B94  
                   _RXF1SIDLbits 000F05                   ??_CANSetFilter 0077  
               _LCD_enable_pulse 5D48                         __ptext10 5CD4  
                       __ptext11 430E                         __ptext20 52E2  
                       __ptext12 370A                         __ptext21 5ACE  
                       __ptext13 585C                         __ptext30 5E24  
                       __ptext22 3262                         __ptext14 54DA  
                       __ptext31 5C70                         __ptext23 5BCE  
                       __ptext15 4B72                         __ptext40 5A2E  
                       __ptext32 5CA2                         __ptext24 4D10  
                       __ptext16 4EA0                         __ptext41 5DC0  
                       __ptext33 5DA4                         __ptext25 3BB0  
                       __ptext17 47DE                         __ptext50 5D6A  
                       __ptext42 5DDC                         __ptext34 5A82  
                       __ptext26 5CFE                         __ptext18 58FE  
                       __ptext51 2D56                         __ptext43 570E  
                       __ptext35 53EE                         __ptext27 5C3C  
                       __ptext19 5598                         __ptext52 5E0E  
                       __ptext44 5654                         __ptext36 5B5A  
                       __ptext28 5998                         __ptext45 139A  
                       __ptext37 5D48                         __ptext29 5028  
                       __ptext46 5D24                         __ptext38 5B94  
                       __ptext39 5C06                         __ptext49 1B26  
                   _RXF2SIDLbits 000F09                         __powers_ FF01  
                   _RXF3SIDLbits 000F0D                 __size_of_sprintf 0894  
                   _RXF4SIDLbits 000F11                     _RXF5SIDLbits 000F15  
       CANsendMessage@dataLength 0078                    __size_of_main 0638  
              ?i2_CANsendMessage 003E             CANreceiveMessage@msg 003E  
          LCD_shift_cursor@shift 007F              i2_CANisTxReady$3235 003E  
                   _TXB0SIDLbits 000F42                Joystick_Polling@i 0073  
             ??i2_CANsendMessage 0046                     _TXB1SIDLbits 000F32  
       __end_of_Joystick_Polling 5A82                     _TXB2SIDLbits 000F22  
                       int$flags 004D        __size_of_CANOperationMode 0016  
                  ?_CANisRxReady 002D                    ?_CANisTxReady 002D  
       __end_of_LCD_write_string 5D24                      _RXB0DLCbits 000F65  
                    _RXB1DLCbits 000F55                     _RXM0SIDLbits 000F19  
                    _RXB0CONbits 000F60                       _LCD_cursor 5C70  
                    _RXB1CONbits 000F50                _CANreceiveMessage 2D56  
                   _RXM1SIDLbits 000F1D                       _INTCONbits 000FF2  
                   _set_steering 002B                 ??_CANsendMessage 007A  
             ?_CANreceiveMessage 003E                         isdigit@c 0074  
                       scale@scl 00A1         CANsendMessage@identifier 0072  
                   _time_counter 0022                         intlevel1 0000  
                       intlevel2 0000                        sprintf@ap 0129  
               __tdiv_to_l_@exp1 0082                        sprintf@sp 00C4  
               __tdiv_to_l_@cntr 0081                 CANSetFilter@tamp 007C  
               __tdiv_to_l_@quot 007D                 CANSetFilter@type 0076  
            ??_CANreceiveMessage 0040                 ___lldiv@dividend 0072  
                    _TXB0DLCbits 000F45                      _right_speed 0028  
                    _TXB1DLCbits 000F35                      _TXB0CONbits 000F40  
                    _TXB2DLCbits 000F25                      _TXB1CONbits 000F30  
                    _TXB2CONbits 000F20                  _display_refresh 025E  
               ??i2_CANisTxReady 003E             CANOperationMode@mode 0072  
                 ??_CANisRxReady 003E                      ?_CANSetMask 0072  
                 ??_CANisTxReady 0072                     ?__tdiv_to_l_ 0072  
      __end_of_CANreceiveMessage 3262                         sprintf@c 013D  
                       sprintf@f 00C6                 ___lldiv@quotient 007A  
LCD_shift_cursor@number_of_shift 007E                    ___fladd@signs 00B6  
             _PWR_Button_Polling 5D88                     ___fladd@aexp 00B7  
                   ___fladd@bexp 00B8            __end_of_CANInitialize 4B72  
            ?_PWR_Button_Polling 002D                     _power_switch 0260  
