

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jun 11 18:30:59 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    86  0000                     
    87                           	psect	idataBANK0
    88  016188                     __pidataBANK0:
    89                           	opt stack 0
    90                           
    91                           ;initializer for _delay_quartz_frequency_value
    92  016188  10                 	db	16
    93                           
    94                           	psect	mediumconst
    95  00FCF6                     __pmediumconst:
    96                           	opt stack 0
    97  00FCF6  00                 	db	0
    98  00FCF7                     __npowers_:
    99                           	opt stack 0
   100  00FCF7  0000               	dw	0
   101  00FCF9  3F80               	dw	16256
   102  00FCFB  CCCD               	dw	52429
   103  00FCFD  3DCC               	dw	15820
   104  00FCFF  D70A               	dw	55050
   105  00FD01  3C23               	dw	15395
   106  00FD03  126F               	dw	4719
   107  00FD05  3A83               	dw	14979
   108  00FD07  B717               	dw	46871
   109  00FD09  38D1               	dw	14545
   110  00FD0B  C5AC               	dw	50604
   111  00FD0D  3727               	dw	14119
   112  00FD0F  37BD               	dw	14269
   113  00FD11  3586               	dw	13702
   114  00FD13  BF95               	dw	49045
   115  00FD15  33D6               	dw	13270
   116  00FD17  CC77               	dw	52343
   117  00FD19  322B               	dw	12843
   118  00FD1B  705F               	dw	28767
   119  00FD1D  3089               	dw	12425
   120  00FD1F  E6FF               	dw	59135
   121  00FD21  2EDB               	dw	11995
   122  00FD23  E508               	dw	58632
   123  00FD25  1E3C               	dw	7740
   124  00FD27  4260               	dw	16992
   125  00FD29  0DA2               	dw	3490
   126  00FD2B                     __end_of__npowers_:
   127                           	opt stack 0
   128  00FD2B                     __powers_:
   129                           	opt stack 0
   130  00FD2B  0000               	dw	0
   131  00FD2D  3F80               	dw	16256
   132  00FD2F  0000               	dw	0
   133  00FD31  4120               	dw	16672
   134  00FD33  0000               	dw	0
   135  00FD35  42C8               	dw	17096
   136  00FD37  0000               	dw	0
   137  00FD39  447A               	dw	17530
   138  00FD3B  4000               	dw	16384
   139  00FD3D  461C               	dw	17948
   140  00FD3F  5000               	dw	20480
   141  00FD41  47C3               	dw	18371
   142  00FD43  2400               	dw	9216
   143  00FD45  4974               	dw	18804
   144  00FD47  9680               	dw	38528
   145  00FD49  4B18               	dw	19224
   146  00FD4B  BC20               	dw	48160
   147  00FD4D  4CBE               	dw	19646
   148  00FD4F  6B28               	dw	27432
   149  00FD51  4E6E               	dw	20078
   150  00FD53  02F9               	dw	761
   151  00FD55  5015               	dw	20501
   152  00FD57  78EC               	dw	30956
   153  00FD59  60AD               	dw	24749
   154  00FD5B  F2CA               	dw	62154
   155  00FD5D  7149               	dw	29001
   156  00FD5F                     __end_of__powers_:
   157                           	opt stack 0
   158  00FD5F                     _dpowers:
   159                           	opt stack 0
   160  00FD5F  0001               	dw	1
   161  00FD61  0000               	dw	0
   162  00FD63  000A               	dw	10
   163  00FD65  0000               	dw	0
   164  00FD67  0064               	dw	100
   165  00FD69  0000               	dw	0
   166  00FD6B  03E8               	dw	1000
   167  00FD6D  0000               	dw	0
   168  00FD6F  2710               	dw	10000
   169  00FD71  0000               	dw	0
   170  00FD73  86A0               	dw	34464
   171  00FD75  0001               	dw	1
   172  00FD77  4240               	dw	16960
   173  00FD79  000F               	dw	15
   174  00FD7B  9680               	dw	38528
   175  00FD7D  0098               	dw	152
   176  00FD7F  E100               	dw	57600
   177  00FD81  05F5               	dw	1525
   178  00FD83  CA00               	dw	51712
   179  00FD85  3B9A               	dw	15258
   180  00FD87                     __end_of_dpowers:
   181                           	opt stack 0
   182  0000                     _RXB1CON	set	3920
   183  0000                     _RXB1CONbits	set	3920
   184  0000                     _RXB1D0	set	3926
   185  0000                     _RXB1D1	set	3927
   186  0000                     _RXB1D2	set	3928
   187  0000                     _RXB1D3	set	3929
   188  0000                     _RXB1D4	set	3930
   189  0000                     _RXB1D5	set	3931
   190  0000                     _RXB1D6	set	3932
   191  0000                     _RXB1D7	set	3933
   192  0000                     _RXB1DLC	set	3925
   193  0000                     _RXB1DLCbits	set	3925
   194  0000                     _RXB1EIDH	set	3923
   195  0000                     _RXB1EIDL	set	3924
   196  0000                     _RXB1SIDH	set	3921
   197  0000                     _RXB1SIDL	set	3922
   198  0000                     _RXB1SIDLbits	set	3922
   199  0000                     _RXF0EIDH	set	3842
   200  0000                     _RXF0EIDL	set	3843
   201  0000                     _RXF0SIDH	set	3840
   202  0000                     _RXF0SIDL	set	3841
   203  0000                     _RXF0SIDLbits	set	3841
   204  0000                     _RXF1EIDH	set	3846
   205  0000                     _RXF1EIDL	set	3847
   206  0000                     _RXF1SIDH	set	3844
   207  0000                     _RXF1SIDL	set	3845
   208  0000                     _RXF1SIDLbits	set	3845
   209  0000                     _RXF2EIDH	set	3850
   210  0000                     _RXF2EIDL	set	3851
   211  0000                     _RXF2SIDH	set	3848
   212  0000                     _RXF2SIDL	set	3849
   213  0000                     _RXF2SIDLbits	set	3849
   214  0000                     _RXF3EIDH	set	3854
   215  0000                     _RXF3EIDL	set	3855
   216  0000                     _RXF3SIDH	set	3852
   217  0000                     _RXF3SIDL	set	3853
   218  0000                     _RXF3SIDLbits	set	3853
   219  0000                     _RXF4EIDH	set	3858
   220  0000                     _RXF4EIDL	set	3859
   221  0000                     _RXF4SIDH	set	3856
   222  0000                     _RXF4SIDL	set	3857
   223  0000                     _RXF4SIDLbits	set	3857
   224  0000                     _RXF5EIDH	set	3862
   225  0000                     _RXF5EIDL	set	3863
   226  0000                     _RXF5SIDH	set	3860
   227  0000                     _RXF5SIDL	set	3861
   228  0000                     _RXF5SIDLbits	set	3861
   229  0000                     _RXM0EIDH	set	3866
   230  0000                     _RXM0EIDL	set	3867
   231  0000                     _RXM0SIDH	set	3864
   232  0000                     _RXM0SIDL	set	3865
   233  0000                     _RXM0SIDLbits	set	3865
   234  0000                     _RXM1EIDH	set	3870
   235  0000                     _RXM1EIDL	set	3871
   236  0000                     _RXM1SIDH	set	3868
   237  0000                     _RXM1SIDL	set	3869
   238  0000                     _RXM1SIDLbits	set	3869
   239  0000                     _TXB0CONbits	set	3904
   240  0000                     _TXB0D0	set	3910
   241  0000                     _TXB0D1	set	3911
   242  0000                     _TXB0D2	set	3912
   243  0000                     _TXB0D3	set	3913
   244  0000                     _TXB0D4	set	3914
   245  0000                     _TXB0D5	set	3915
   246  0000                     _TXB0D6	set	3916
   247  0000                     _TXB0D7	set	3917
   248  0000                     _TXB0DLC	set	3909
   249  0000                     _TXB0DLCbits	set	3909
   250  0000                     _TXB0EIDH	set	3907
   251  0000                     _TXB0EIDL	set	3908
   252  0000                     _TXB0SIDH	set	3905
   253  0000                     _TXB0SIDL	set	3906
   254  0000                     _TXB0SIDLbits	set	3906
   255  0000                     _TXB1CONbits	set	3888
   256  0000                     _TXB1D0	set	3894
   257  0000                     _TXB1D1	set	3895
   258  0000                     _TXB1D2	set	3896
   259  0000                     _TXB1D3	set	3897
   260  0000                     _TXB1D4	set	3898
   261  0000                     _TXB1D5	set	3899
   262  0000                     _TXB1D6	set	3900
   263  0000                     _TXB1D7	set	3901
   264  0000                     _TXB1DLC	set	3893
   265  0000                     _TXB1DLCbits	set	3893
   266  0000                     _TXB1EIDH	set	3891
   267  0000                     _TXB1EIDL	set	3892
   268  0000                     _TXB1SIDH	set	3889
   269  0000                     _TXB1SIDL	set	3890
   270  0000                     _TXB1SIDLbits	set	3890
   271  0000                     _TXB2CONbits	set	3872
   272  0000                     _TXB2D0	set	3878
   273  0000                     _TXB2D1	set	3879
   274  0000                     _TXB2D2	set	3880
   275  0000                     _TXB2D3	set	3881
   276  0000                     _TXB2D4	set	3882
   277  0000                     _TXB2D5	set	3883
   278  0000                     _TXB2D6	set	3884
   279  0000                     _TXB2D7	set	3885
   280  0000                     _TXB2DLC	set	3877
   281  0000                     _TXB2DLCbits	set	3877
   282  0000                     _TXB2EIDH	set	3875
   283  0000                     _TXB2EIDL	set	3876
   284  0000                     _TXB2SIDH	set	3873
   285  0000                     _TXB2SIDL	set	3874
   286  0000                     _TXB2SIDLbits	set	3874
   287  0000                     _ADCON0bits	set	4034
   288  0000                     _ADCON1	set	4033
   289  0000                     _ADCON2bits	set	4032
   290  0000                     _ADRESH	set	4036
   291  0000                     _BRGCON1	set	3952
   292  0000                     _BRGCON2	set	3953
   293  0000                     _BRGCON2bits	set	3953
   294  0000                     _BRGCON3	set	3954
   295  0000                     _BRGCON3bits	set	3954
   296  0000                     _CANCON	set	3951
   297  0000                     _CANCONbits	set	3951
   298  0000                     _CANSTAT	set	3950
   299  0000                     _COMSTATbits	set	3956
   300  0000                     _INTCONbits	set	4082
   301  0000                     _IPR2bits	set	4002
   302  0000                     _IPR3bits	set	4005
   303  0000                     _LATA	set	3977
   304  0000                     _LATB	set	3978
   305  0000                     _LATC	set	3979
   306  0000                     _LATCbits	set	3979
   307  0000                     _LATD	set	3980
   308  0000                     _LATDbits	set	3980
   309  0000                     _LATE	set	3981
   310  0000                     _LATEbits	set	3981
   311  0000                     _PIE2bits	set	4000
   312  0000                     _PIE3bits	set	4003
   313  0000                     _PIR2bits	set	4001
   314  0000                     _PIR3bits	set	4004
   315  0000                     _PORTAbits	set	3968
   316  0000                     _PORTBbits	set	3969
   317  0000                     _PORTDbits	set	3971
   318  0000                     _RCONbits	set	4048
   319  0000                     _RXB0CON	set	3936
   320  0000                     _RXB0CONbits	set	3936
   321  0000                     _RXB0D0	set	3942
   322  0000                     _RXB0D1	set	3943
   323  0000                     _RXB0D2	set	3944
   324  0000                     _RXB0D3	set	3945
   325  0000                     _RXB0D4	set	3946
   326  0000                     _RXB0D5	set	3947
   327  0000                     _RXB0D6	set	3948
   328  0000                     _RXB0D7	set	3949
   329  0000                     _RXB0DLC	set	3941
   330  0000                     _RXB0DLCbits	set	3941
   331  0000                     _RXB0EIDH	set	3939
   332  0000                     _RXB0EIDL	set	3940
   333  0000                     _RXB0SIDH	set	3937
   334  0000                     _RXB0SIDL	set	3938
   335  0000                     _RXB0SIDLbits	set	3938
   336  0000                     _RXERRCNT	set	3957
   337  0000                     _T3CON	set	4017
   338  0000                     _TMR3H	set	4019
   339  0000                     _TMR3L	set	4018
   340  0000                     _TRISA	set	3986
   341  0000                     _TRISB	set	3987
   342  0000                     _TRISC	set	3988
   343  0000                     _TRISD	set	3989
   344  0000                     _TRISE	set	3990
   345  0000                     _TXERRCNT	set	3958
   346  00FD87                     STR_11:
   347  00FD87  44                 	db	68	;'D'
   348  00FD88  69                 	db	105	;'i'
   349  00FD89  72                 	db	114	;'r'
   350  00FD8A  65                 	db	101	;'e'
   351  00FD8B  63                 	db	99	;'c'
   352  00FD8C  74                 	db	116	;'t'
   353  00FD8D  69                 	db	105	;'i'
   354  00FD8E  6F                 	db	111	;'o'
   355  00FD8F  6E                 	db	110	;'n'
   356  00FD90  3A                 	db	58	;':'
   357  00FD91  20                 	db	32
   358  00FD92  20                 	db	32
   359  00FD93  20                 	db	32
   360  00FD94  20                 	db	32
   361  00FD95  20                 	db	32
   362  00FD96  20                 	db	32
   363  00FD97  20                 	db	32
   364  00FD98  20                 	db	32
   365  00FD99  20                 	db	32
   366  00FD9A  20                 	db	32
   367  00FD9B  00                 	db	0
   368  00FD9C                     STR_38:
   369  00FD9C  20                 	db	32
   370  00FD9D  20                 	db	32
   371  00FD9E  20                 	db	32
   372  00FD9F  20                 	db	32
   373  00FDA0  20                 	db	32
   374  00FDA1  20                 	db	32
   375  00FDA2  20                 	db	32
   376  00FDA3  46                 	db	70	;'F'
   377  00FDA4  41                 	db	65	;'A'
   378  00FDA5  49                 	db	73	;'I'
   379  00FDA6  4C                 	db	76	;'L'
   380  00FDA7  45                 	db	69	;'E'
   381  00FDA8  44                 	db	68	;'D'
   382  00FDA9  21                 	db	33
   383  00FDAA  20                 	db	32
   384  00FDAB  20                 	db	32
   385  00FDAC  20                 	db	32
   386  00FDAD  20                 	db	32
   387  00FDAE  20                 	db	32
   388  00FDAF  20                 	db	32
   389  00FDB0  00                 	db	0
   390  00FDB1                     STR_35:
   391  00FDB1  20                 	db	32
   392  00FDB2  20                 	db	32
   393  00FDB3  20                 	db	32
   394  00FDB4  20                 	db	32
   395  00FDB5  20                 	db	32
   396  00FDB6  43                 	db	67	;'C'
   397  00FDB7  4F                 	db	79	;'O'
   398  00FDB8  4D                 	db	77	;'M'
   399  00FDB9  50                 	db	80	;'P'
   400  00FDBA  4C                 	db	76	;'L'
   401  00FDBB  45                 	db	69	;'E'
   402  00FDBC  54                 	db	84	;'T'
   403  00FDBD  45                 	db	69	;'E'
   404  00FDBE  44                 	db	68	;'D'
   405  00FDBF  21                 	db	33
   406  00FDC0  20                 	db	32
   407  00FDC1  20                 	db	32
   408  00FDC2  20                 	db	32
   409  00FDC3  20                 	db	32
   410  00FDC4  20                 	db	32
   411  00FDC5  00                 	db	0
   412  00FDC6                     STR_34:
   413  00FDC6  20                 	db	32
   414  00FDC7  20                 	db	32
   415  00FDC8  20                 	db	32
   416  00FDC9  20                 	db	32
   417  00FDCA  53                 	db	83	;'S'
   418  00FDCB  55                 	db	85	;'U'
   419  00FDCC  43                 	db	67	;'C'
   420  00FDCD  43                 	db	67	;'C'
   421  00FDCE  45                 	db	69	;'E'
   422  00FDCF  53                 	db	83	;'S'
   423  00FDD0  53                 	db	83	;'S'
   424  00FDD1  46                 	db	70	;'F'
   425  00FDD2  55                 	db	85	;'U'
   426  00FDD3  4C                 	db	76	;'L'
   427  00FDD4  4C                 	db	76	;'L'
   428  00FDD5  59                 	db	89	;'Y'
   429  00FDD6  20                 	db	32
   430  00FDD7  20                 	db	32
   431  00FDD8  20                 	db	32
   432  00FDD9  20                 	db	32
   433  00FDDA  00                 	db	0
   434  00FDDB                     STR_27:
   435  00FDDB  20                 	db	32
   436  00FDDC  20                 	db	32
   437  00FDDD  20                 	db	32
   438  00FDDE  73                 	db	115	;'s'
   439  00FDDF  74                 	db	116	;'t'
   440  00FDE0  61                 	db	97	;'a'
   441  00FDE1  72                 	db	114	;'r'
   442  00FDE2  74                 	db	116	;'t'
   443  00FDE3  20                 	db	32
   444  00FDE4  70                 	db	112	;'p'
   445  00FDE5  61                 	db	97	;'a'
   446  00FDE6  72                 	db	114	;'r'
   447  00FDE7  6B                 	db	107	;'k'
   448  00FDE8  69                 	db	105	;'i'
   449  00FDE9  6E                 	db	110	;'n'
   450  00FDEA  67                 	db	103	;'g'
   451  00FDEB  20                 	db	32
   452  00FDEC  20                 	db	32
   453  00FDED  20                 	db	32
   454  00FDEE  20                 	db	32
   455  00FDEF  00                 	db	0
   456  00FDF0                     STR_43:
   457  00FDF0  20                 	db	32
   458  00FDF1  20                 	db	32
   459  00FDF2  53                 	db	83	;'S'
   460  00FDF3  69                 	db	105	;'i'
   461  00FDF4  6D                 	db	109	;'m'
   462  00FDF5  6F                 	db	111	;'o'
   463  00FDF6  6E                 	db	110	;'n'
   464  00FDF7  65                 	db	101	;'e'
   465  00FDF8  20                 	db	32
   466  00FDF9  52                 	db	82	;'R'
   467  00FDFA  69                 	db	105	;'i'
   468  00FDFB  67                 	db	103	;'g'
   469  00FDFC  68                 	db	104	;'h'
   470  00FDFD  65                 	db	101	;'e'
   471  00FDFE  74                 	db	116	;'t'
   472  00FDFF  74                 	db	116	;'t'
   473  00FE00  69                 	db	105	;'i'
   474  00FE01  20                 	db	32
   475  00FE02  20                 	db	32
   476  00FE03  20                 	db	32
   477  00FE04  00                 	db	0
   478  00FE05                     STR_41:
   479  00FE05  20                 	db	32
   480  00FE06  20                 	db	32
   481  00FE07  4D                 	db	77	;'M'
   482  00FE08  61                 	db	97	;'a'
   483  00FE09  73                 	db	115	;'s'
   484  00FE0A  73                 	db	115	;'s'
   485  00FE0B  69                 	db	105	;'i'
   486  00FE0C  6D                 	db	109	;'m'
   487  00FE0D  6F                 	db	111	;'o'
   488  00FE0E  20                 	db	32
   489  00FE0F  43                 	db	67	;'C'
   490  00FE10  6C                 	db	108	;'l'
   491  00FE11  65                 	db	101	;'e'
   492  00FE12  6D                 	db	109	;'m'
   493  00FE13  65                 	db	101	;'e'
   494  00FE14  6E                 	db	110	;'n'
   495  00FE15  74                 	db	116	;'t'
   496  00FE16  69                 	db	105	;'i'
   497  00FE17  20                 	db	32
   498  00FE18  20                 	db	32
   499  00FE19  00                 	db	0
   500  00FE1A                     STR_3:
   501  00FE1A  20                 	db	32
   502  00FE1B  20                 	db	32
   503  00FE1C  50                 	db	80	;'P'
   504  00FE1D  72                 	db	114	;'r'
   505  00FE1E  65                 	db	101	;'e'
   506  00FE1F  73                 	db	115	;'s'
   507  00FE20  73                 	db	115	;'s'
   508  00FE21  20                 	db	32
   509  00FE22  74                 	db	116	;'t'
   510  00FE23  68                 	db	104	;'h'
   511  00FE24  65                 	db	101	;'e'
   512  00FE25  20                 	db	32
   513  00FE26  62                 	db	98	;'b'
   514  00FE27  75                 	db	117	;'u'
   515  00FE28  74                 	db	116	;'t'
   516  00FE29  74                 	db	116	;'t'
   517  00FE2A  6F                 	db	111	;'o'
   518  00FE2B  6E                 	db	110	;'n'
   519  00FE2C  20                 	db	32
   520  00FE2D  20                 	db	32
   521  00FE2E  00                 	db	0
   522  00FE2F                     STR_39:
   523  00FE2F  20                 	db	32
   524  00FE30  20                 	db	32
   525  00FE31  20                 	db	32
   526  00FE32  64                 	db	100	;'d'
   527  00FE33  75                 	db	117	;'u'
   528  00FE34  65                 	db	101	;'e'
   529  00FE35  20                 	db	32
   530  00FE36  74                 	db	116	;'t'
   531  00FE37  6F                 	db	111	;'o'
   532  00FE38  20                 	db	32
   533  00FE39  61                 	db	97	;'a'
   534  00FE3A  6E                 	db	110	;'n'
   535  00FE3B  20                 	db	32
   536  00FE3C  65                 	db	101	;'e'
   537  00FE3D  72                 	db	114	;'r'
   538  00FE3E  72                 	db	114	;'r'
   539  00FE3F  6F                 	db	111	;'o'
   540  00FE40  72                 	db	114	;'r'
   541  00FE41  20                 	db	32
   542  00FE42  20                 	db	32
   543  00FE43  00                 	db	0
   544  00FE44                     STR_18:
   545  00FE44  42                 	db	66	;'B'
   546  00FE45  61                 	db	97	;'a'
   547  00FE46  74                 	db	116	;'t'
   548  00FE47  74                 	db	116	;'t'
   549  00FE48  65                 	db	101	;'e'
   550  00FE49  72                 	db	114	;'r'
   551  00FE4A  79                 	db	121	;'y'
   552  00FE4B  20                 	db	32
   553  00FE4C  63                 	db	99	;'c'
   554  00FE4D  68                 	db	104	;'h'
   555  00FE4E  61                 	db	97	;'a'
   556  00FE4F  72                 	db	114	;'r'
   557  00FE50  67                 	db	103	;'g'
   558  00FE51  69                 	db	105	;'i'
   559  00FE52  6E                 	db	110	;'n'
   560  00FE53  67                 	db	103	;'g'
   561  00FE54  2E                 	db	46
   562  00FE55  2E                 	db	46
   563  00FE56  2E                 	db	46
   564  00FE57  20                 	db	32
   565  00FE58  00                 	db	0
   566  00FE59                     STR_23:
   567  00FE59  20                 	db	32
   568  00FE5A  75                 	db	117	;'u'
   569  00FE5B  6E                 	db	110	;'n'
   570  00FE5C  74                 	db	116	;'t'
   571  00FE5D  69                 	db	105	;'i'
   572  00FE5E  6C                 	db	108	;'l'
   573  00FE5F  20                 	db	32
   574  00FE60  6E                 	db	110	;'n'
   575  00FE61  65                 	db	101	;'e'
   576  00FE62  78                 	db	120	;'x'
   577  00FE63  74                 	db	116	;'t'
   578  00FE64  20                 	db	32
   579  00FE65  6D                 	db	109	;'m'
   580  00FE66  65                 	db	101	;'e'
   581  00FE67  73                 	db	115	;'s'
   582  00FE68  73                 	db	115	;'s'
   583  00FE69  61                 	db	97	;'a'
   584  00FE6A  67                 	db	103	;'g'
   585  00FE6B  65                 	db	101	;'e'
   586  00FE6C  20                 	db	32
   587  00FE6D  00                 	db	0
   588  00FE6E                     STR_26:
   589  00FE6E  50                 	db	80	;'P'
   590  00FE6F  72                 	db	114	;'r'
   591  00FE70  65                 	db	101	;'e'
   592  00FE71  73                 	db	115	;'s'
   593  00FE72  73                 	db	115	;'s'
   594  00FE73  20                 	db	32
   595  00FE74  74                 	db	116	;'t'
   596  00FE75  68                 	db	104	;'h'
   597  00FE76  65                 	db	101	;'e'
   598  00FE77  20                 	db	32
   599  00FE78  42                 	db	66	;'B'
   600  00FE79  55                 	db	85	;'U'
   601  00FE7A  54                 	db	84	;'T'
   602  00FE7B  54                 	db	84	;'T'
   603  00FE7C  4F                 	db	79	;'O'
   604  00FE7D  4E                 	db	78	;'N'
   605  00FE7E  20                 	db	32
   606  00FE7F  74                 	db	116	;'t'
   607  00FE80  6F                 	db	111	;'o'
   608  00FE81  20                 	db	32
   609  00FE82  00                 	db	0
   610  00FE83                     STR_42:
   611  00FE83  20                 	db	32
   612  00FE84  20                 	db	32
   613  00FE85  47                 	db	71	;'G'
   614  00FE86  69                 	db	105	;'i'
   615  00FE87  61                 	db	97	;'a'
   616  00FE88  6E                 	db	110	;'n'
   617  00FE89  6C                 	db	108	;'l'
   618  00FE8A  6F                 	db	111	;'o'
   619  00FE8B  72                 	db	114	;'r'
   620  00FE8C  65                 	db	101	;'e'
   621  00FE8D  6E                 	db	110	;'n'
   622  00FE8E  7A                 	db	122	;'z'
   623  00FE8F  6F                 	db	111	;'o'
   624  00FE90  20                 	db	32
   625  00FE91  4D                 	db	77	;'M'
   626  00FE92  6F                 	db	111	;'o'
   627  00FE93  73                 	db	115	;'s'
   628  00FE94  65                 	db	101	;'e'
   629  00FE95  72                 	db	114	;'r'
   630  00FE96  20                 	db	32
   631  00FE97  00                 	db	0
   632  00FE98                     STR_33:
   633  00FE98  20                 	db	32
   634  00FE99  50                 	db	80	;'P'
   635  00FE9A  61                 	db	97	;'a'
   636  00FE9B  72                 	db	114	;'r'
   637  00FE9C  6B                 	db	107	;'k'
   638  00FE9D  69                 	db	105	;'i'
   639  00FE9E  6E                 	db	110	;'n'
   640  00FE9F  67                 	db	103	;'g'
   641  00FEA0  20                 	db	32
   642  00FEA1  70                 	db	112	;'p'
   643  00FEA2  72                 	db	114	;'r'
   644  00FEA3  6F                 	db	111	;'o'
   645  00FEA4  63                 	db	99	;'c'
   646  00FEA5  65                 	db	101	;'e'
   647  00FEA6  64                 	db	100	;'d'
   648  00FEA7  75                 	db	117	;'u'
   649  00FEA8  72                 	db	114	;'r'
   650  00FEA9  65                 	db	101	;'e'
   651  00FEAA  73                 	db	115	;'s'
   652  00FEAB  20                 	db	32
   653  00FEAC  00                 	db	0
   654  00FEAD                     STR_25:
   655  00FEAD  2D                 	db	45
   656  00FEAE  20                 	db	32
   657  00FEAF  44                 	db	68	;'D'
   658  00FEB0  69                 	db	105	;'i'
   659  00FEB1  73                 	db	115	;'s'
   660  00FEB2  74                 	db	116	;'t'
   661  00FEB3  61                 	db	97	;'a'
   662  00FEB4  6E                 	db	110	;'n'
   663  00FEB5  63                 	db	99	;'c'
   664  00FEB6  65                 	db	101	;'e'
   665  00FEB7  20                 	db	32
   666  00FEB8  52                 	db	82	;'R'
   667  00FEB9  45                 	db	69	;'E'
   668  00FEBA  41                 	db	65	;'A'
   669  00FEBB  43                 	db	67	;'C'
   670  00FEBC  48                 	db	72	;'H'
   671  00FEBD  45                 	db	69	;'E'
   672  00FEBE  44                 	db	68	;'D'
   673  00FEBF  20                 	db	32
   674  00FEC0  2D                 	db	45
   675  00FEC1  00                 	db	0
   676  00FEC2                     STR_22:
   677  00FEC2  2D                 	db	45
   678  00FEC3  3E                 	db	62	;'>'
   679  00FEC4  20                 	db	32
   680  00FEC5  20                 	db	32
   681  00FEC6  4B                 	db	75	;'K'
   682  00FEC7  45                 	db	69	;'E'
   683  00FEC8  45                 	db	69	;'E'
   684  00FEC9  50                 	db	80	;'P'
   685  00FECA  20                 	db	32
   686  00FECB  4D                 	db	77	;'M'
   687  00FECC  4F                 	db	79	;'O'
   688  00FECD  56                 	db	86	;'V'
   689  00FECE  49                 	db	73	;'I'
   690  00FECF  4E                 	db	78	;'N'
   691  00FED0  47                 	db	71	;'G'
   692  00FED1  20                 	db	32
   693  00FED2  20                 	db	32
   694  00FED3  20                 	db	32
   695  00FED4  3C                 	db	60	;'<'
   696  00FED5  2D                 	db	45
   697  00FED6  00                 	db	0
   698  00FED7                     STR_15:
   699  00FED7  2D                 	db	45
   700  00FED8  3E                 	db	62	;'>'
   701  00FED9  20                 	db	32
   702  00FEDA  53                 	db	83	;'S'
   703  00FEDB  61                 	db	97	;'a'
   704  00FEDC  66                 	db	102	;'f'
   705  00FEDD  65                 	db	101	;'e'
   706  00FEDE  74                 	db	116	;'t'
   707  00FEDF  79                 	db	121	;'y'
   708  00FEE0  20                 	db	32
   709  00FEE1  62                 	db	98	;'b'
   710  00FEE2  72                 	db	114	;'r'
   711  00FEE3  61                 	db	97	;'a'
   712  00FEE4  6B                 	db	107	;'k'
   713  00FEE5  65                 	db	101	;'e'
   714  00FEE6  20                 	db	32
   715  00FEE7  4F                 	db	79	;'O'
   716  00FEE8  4E                 	db	78	;'N'
   717  00FEE9  3C                 	db	60	;'<'
   718  00FEEA  2D                 	db	45
   719  00FEEB  00                 	db	0
   720  00FEEC                     STR_29:
   721  00FEEC  3D                 	db	61	;'='
   722  00FEED  20                 	db	32
   723  00FEEE  20                 	db	32
   724  00FEEF  20                 	db	32
   725  00FEF0  20                 	db	32
   726  00FEF1  50                 	db	80	;'P'
   727  00FEF2  61                 	db	97	;'a'
   728  00FEF3  72                 	db	114	;'r'
   729  00FEF4  6B                 	db	107	;'k'
   730  00FEF5  69                 	db	105	;'i'
   731  00FEF6  6E                 	db	110	;'n'
   732  00FEF7  67                 	db	103	;'g'
   733  00FEF8  20                 	db	32
   734  00FEF9  69                 	db	105	;'i'
   735  00FEFA  6E                 	db	110	;'n'
   736  00FEFB  20                 	db	32
   737  00FEFC  20                 	db	32
   738  00FEFD  20                 	db	32
   739  00FEFE  20                 	db	32
   740  00FEFF  3D                 	db	61	;'='
   741  00FF00  00                 	db	0
   742  00FF01                     STR_30:
   743  00FF01  3D                 	db	61	;'='
   744  00FF02  20                 	db	32
   745  00FF03  20                 	db	32
   746  00FF04  20                 	db	32
   747  00FF05  20                 	db	32
   748  00FF06  70                 	db	112	;'p'
   749  00FF07  72                 	db	114	;'r'
   750  00FF08  6F                 	db	111	;'o'
   751  00FF09  67                 	db	103	;'g'
   752  00FF0A  72                 	db	114	;'r'
   753  00FF0B  65                 	db	101	;'e'
   754  00FF0C  73                 	db	115	;'s'
   755  00FF0D  73                 	db	115	;'s'
   756  00FF0E  2E                 	db	46
   757  00FF0F  2E                 	db	46
   758  00FF10  2E                 	db	46
   759  00FF11  20                 	db	32
   760  00FF12  20                 	db	32
   761  00FF13  20                 	db	32
   762  00FF14  3D                 	db	61	;'='
   763  00FF15  00                 	db	0
   764  00FF16                     STR_20:
   765  00FF16  3D                 	db	61	;'='
   766  00FF17  20                 	db	32
   767  00FF18  50                 	db	80	;'P'
   768  00FF19  41                 	db	65	;'A'
   769  00FF1A  52                 	db	82	;'R'
   770  00FF1B  4B                 	db	75	;'K'
   771  00FF1C  49                 	db	73	;'I'
   772  00FF1D  4E                 	db	78	;'N'
   773  00FF1E  47                 	db	71	;'G'
   774  00FF1F  20                 	db	32
   775  00FF20  4D                 	db	77	;'M'
   776  00FF21  45                 	db	69	;'E'
   777  00FF22  53                 	db	83	;'S'
   778  00FF23  53                 	db	83	;'S'
   779  00FF24  41                 	db	65	;'A'
   780  00FF25  47                 	db	71	;'G'
   781  00FF26  45                 	db	69	;'E'
   782  00FF27  53                 	db	83	;'S'
   783  00FF28  20                 	db	32
   784  00FF29  3D                 	db	61	;'='
   785  00FF2A  00                 	db	0
   786  00FF2B                     STR_40:
   787  00FF2B  3D                 	db	61	;'='
   788  00FF2C  3E                 	db	62	;'>'
   789  00FF2D  20                 	db	32
   790  00FF2E  20                 	db	32
   791  00FF2F  20                 	db	32
   792  00FF30  20                 	db	32
   793  00FF31  43                 	db	67	;'C'
   794  00FF32  52                 	db	82	;'R'
   795  00FF33  45                 	db	69	;'E'
   796  00FF34  44                 	db	68	;'D'
   797  00FF35  49                 	db	73	;'I'
   798  00FF36  54                 	db	84	;'T'
   799  00FF37  53                 	db	83	;'S'
   800  00FF38  21                 	db	33
   801  00FF39  20                 	db	32
   802  00FF3A  20                 	db	32
   803  00FF3B  20                 	db	32
   804  00FF3C  20                 	db	32
   805  00FF3D  3C                 	db	60	;'<'
   806  00FF3E  3D                 	db	61	;'='
   807  00FF3F  00                 	db	0
   808  00FF40                     STR_2:
   809  00FF40  3D                 	db	61	;'='
   810  00FF41  3D                 	db	61	;'='
   811  00FF42  3E                 	db	62	;'>'
   812  00FF43  20                 	db	32
   813  00FF44  56                 	db	86	;'V'
   814  00FF45  45                 	db	69	;'E'
   815  00FF46  48                 	db	72	;'H'
   816  00FF47  49                 	db	73	;'I'
   817  00FF48  43                 	db	67	;'C'
   818  00FF49  4C                 	db	76	;'L'
   819  00FF4A  45                 	db	69	;'E'
   820  00FF4B  20                 	db	32
   821  00FF4C  20                 	db	32
   822  00FF4D  4F                 	db	79	;'O'
   823  00FF4E  46                 	db	70	;'F'
   824  00FF4F  46                 	db	70	;'F'
   825  00FF50  20                 	db	32
   826  00FF51  3C                 	db	60	;'<'
   827  00FF52  3D                 	db	61	;'='
   828  00FF53  3D                 	db	61	;'='
   829  00FF54  00                 	db	0
   830  00FF55                     STR_6:
   831  00FF55  3D                 	db	61	;'='
   832  00FF56  3D                 	db	61	;'='
   833  00FF57  3D                 	db	61	;'='
   834  00FF58  20                 	db	32
   835  00FF59  56                 	db	86	;'V'
   836  00FF5A  45                 	db	69	;'E'
   837  00FF5B  48                 	db	72	;'H'
   838  00FF5C  49                 	db	73	;'I'
   839  00FF5D  43                 	db	67	;'C'
   840  00FF5E  4C                 	db	76	;'L'
   841  00FF5F  45                 	db	69	;'E'
   842  00FF60  20                 	db	32
   843  00FF61  44                 	db	68	;'D'
   844  00FF62  41                 	db	65	;'A'
   845  00FF63  54                 	db	84	;'T'
   846  00FF64  41                 	db	65	;'A'
   847  00FF65  20                 	db	32
   848  00FF66  3D                 	db	61	;'='
   849  00FF67  3D                 	db	61	;'='
   850  00FF68  3D                 	db	61	;'='
   851  00FF69  00                 	db	0
   852  00FF6A                     STR_1:
   853  00FF6A  3D                 	db	61	;'='
   854  00FF6B  3D                 	db	61	;'='
   855  00FF6C  3D                 	db	61	;'='
   856  00FF6D  3D                 	db	61	;'='
   857  00FF6E  3D                 	db	61	;'='
   858  00FF6F  3D                 	db	61	;'='
   859  00FF70  3D                 	db	61	;'='
   860  00FF71  3D                 	db	61	;'='
   861  00FF72  3D                 	db	61	;'='
   862  00FF73  3D                 	db	61	;'='
   863  00FF74  3D                 	db	61	;'='
   864  00FF75  3D                 	db	61	;'='
   865  00FF76  3D                 	db	61	;'='
   866  00FF77  3D                 	db	61	;'='
   867  00FF78  3D                 	db	61	;'='
   868  00FF79  3D                 	db	61	;'='
   869  00FF7A  3D                 	db	61	;'='
   870  00FF7B  3D                 	db	61	;'='
   871  00FF7C  3D                 	db	61	;'='
   872  00FF7D  3D                 	db	61	;'='
   873  00FF7E  00                 	db	0
   874  00FF7F                     STR_21:
   875  00FF7F  20                 	db	32
   876  00FF80  50                 	db	80	;'P'
   877  00FF81  61                 	db	97	;'a'
   878  00FF82  72                 	db	114	;'r'
   879  00FF83  6B                 	db	107	;'k'
   880  00FF84  69                 	db	105	;'i'
   881  00FF85  6E                 	db	110	;'n'
   882  00FF86  67                 	db	103	;'g'
   883  00FF87  20                 	db	32
   884  00FF88  73                 	db	115	;'s'
   885  00FF89  70                 	db	112	;'p'
   886  00FF8A  61                 	db	97	;'a'
   887  00FF8B  63                 	db	99	;'c'
   888  00FF8C  65                 	db	101	;'e'
   889  00FF8D  20                 	db	32
   890  00FF8E  46                 	db	70	;'F'
   891  00FF8F  4F                 	db	79	;'O'
   892  00FF90  55                 	db	85	;'U'
   893  00FF91  4E                 	db	78	;'N'
   894  00FF92  44                 	db	68	;'D'
   895  00FF93  00                 	db	0
   896  00FF94                     STR_19:
   897  00FF94  5B                 	db	91	;'['
   898  00FF95  21                 	db	33
   899  00FF96  5D                 	db	93	;']'
   900  00FF97  20                 	db	32
   901  00FF98  20                 	db	32
   902  00FF99  4C                 	db	76	;'L'
   903  00FF9A  6F                 	db	111	;'o'
   904  00FF9B  77                 	db	119	;'w'
   905  00FF9C  20                 	db	32
   906  00FF9D  62                 	db	98	;'b'
   907  00FF9E  61                 	db	97	;'a'
   908  00FF9F  74                 	db	116	;'t'
   909  00FFA0  74                 	db	116	;'t'
   910  00FFA1  65                 	db	101	;'e'
   911  00FFA2  72                 	db	114	;'r'
   912  00FFA3  79                 	db	121	;'y'
   913  00FFA4  20                 	db	32
   914  00FFA5  5B                 	db	91	;'['
   915  00FFA6  21                 	db	33
   916  00FFA7  5D                 	db	93	;']'
   917  00FFA8  00                 	db	0
   918  00FFA9                     STR_8:
   919  00FFA9  53                 	db	83	;'S'
   920  00FFAA  70                 	db	112	;'p'
   921  00FFAB  65                 	db	101	;'e'
   922  00FFAC  65                 	db	101	;'e'
   923  00FFAD  64                 	db	100	;'d'
   924  00FFAE  3A                 	db	58	;':'
   925  00FFAF  20                 	db	32
   926  00FFB0  30                 	db	48	;'0'
   927  00FFB1  2E                 	db	46
   928  00FFB2  30                 	db	48	;'0'
   929  00FFB3  30                 	db	48	;'0'
   930  00FFB4  20                 	db	32
   931  00FFB5  4B                 	db	75	;'K'
   932  00FFB6  6D                 	db	109	;'m'
   933  00FFB7  2F                 	db	47
   934  00FFB8  68                 	db	104	;'h'
   935  00FFB9  00                 	db	0
   936  00FFBA                     STR_9:
   937  00FFBA  50                 	db	80	;'P'
   938  00FFBB  61                 	db	97	;'a'
   939  00FFBC  72                 	db	114	;'r'
   940  00FFBD  6B                 	db	107	;'k'
   941  00FFBE  20                 	db	32
   942  00FFBF  61                 	db	97	;'a'
   943  00FFC0  73                 	db	115	;'s'
   944  00FFC1  73                 	db	115	;'s'
   945  00FFC2  69                 	db	105	;'i'
   946  00FFC3  73                 	db	115	;'s'
   947  00FFC4  74                 	db	116	;'t'
   948  00FFC5  3A                 	db	58	;':'
   949  00FFC6  20                 	db	32
   950  00FFC7  00                 	db	0
   951  00FFC8                     STR_7:
   952  00FFC8  44                 	db	68	;'D'
   953  00FFC9  69                 	db	105	;'i'
   954  00FFCA  72                 	db	114	;'r'
   955  00FFCB  65                 	db	101	;'e'
   956  00FFCC  63                 	db	99	;'c'
   957  00FFCD  74                 	db	116	;'t'
   958  00FFCE  69                 	db	105	;'i'
   959  00FFCF  6F                 	db	111	;'o'
   960  00FFD0  6E                 	db	110	;'n'
   961  00FFD1  3A                 	db	58	;':'
   962  00FFD2  20                 	db	32
   963  00FFD3  00                 	db	0
   964  00FFD4                     STR_16:
   965  00FFD4  4F                 	db	79	;'O'
   966  00FFD5  46                 	db	70	;'F'
   967  00FFD6  46                 	db	70	;'F'
   968  00FFD7  20                 	db	32
   969  00FFD8  20                 	db	32
   970  00FFD9  20                 	db	32
   971  00FFDA  20                 	db	32
   972  00FFDB  00                 	db	0
   973  00FFDC                     STR_17:
   974  00FFDC  53                 	db	83	;'S'
   975  00FFDD  45                 	db	69	;'E'
   976  00FFDE  41                 	db	65	;'A'
   977  00FFDF  52                 	db	82	;'R'
   978  00FFE0  43                 	db	67	;'C'
   979  00FFE1  48                 	db	72	;'H'
   980  00FFE2  20                 	db	32
   981  00FFE3  00                 	db	0
   982  00FFE4                     STR_10:
   983  00FFE4  44                 	db	68	;'D'
   984  00FFE5  61                 	db	97	;'a'
   985  00FFE6  74                 	db	116	;'t'
   986  00FFE7  61                 	db	97	;'a'
   987  00FFE8  3A                 	db	58	;':'
   988  00FFE9  20                 	db	32
   989  00FFEA  00                 	db	0
   990  00FFEB                     STR_14:
   991  00FFEB  50                 	db	80	;'P'
   992  00FFEC  20                 	db	32
   993  00FFED  20                 	db	32
   994  00FFEE  20                 	db	32
   995  00FFEF  00                 	db	0
   996  00FFF0                     STR_12:
   997  00FFF0  46                 	db	70	;'F'
   998  00FFF1  57                 	db	87	;'W'
   999  00FFF2  44                 	db	68	;'D'
  1000  00FFF3  20                 	db	32
  1001  00FFF4  00                 	db	0
  1002  00FFF5                     STR_13:
  1003  00FFF5  42                 	db	66	;'B'
  1004  00FFF6  4B                 	db	75	;'K'
  1005  00FFF7  57                 	db	87	;'W'
  1006  00FFF8  44                 	db	68	;'D'
  1007  00FFF9  00                 	db	0
  1008  00FFFA                     STR_5:
  1009  00FFFA  25                 	db	37
  1010  00FFFB  2E                 	db	46
  1011  00FFFC  32                 	db	50	;'2'
  1012  00FFFD  66                 	db	102	;'f'
  1013  00FFFE  00                 	db	0
  1014  0000                     
  1015                           ; #config settings
  1016  00FFFF  00                 	db	0	; dummy byte at the end
  1017  0000                     
  1018                           	psect	cinit
  1019  015D90                     __pcinit:
  1020                           	opt stack 0
  1021  015D90                     start_initialization:
  1022                           	opt stack 0
  1023  015D90                     __initialization:
  1024                           	opt stack 0
  1025                           
  1026                           ; Clear objects allocated to BANK1 (54 bytes)
  1027  015D90  EE01  F000         	lfsr	0,__pbssBANK1
  1028  015D94  0E36               	movlw	54
  1029  015D96                     clear_0:
  1030  015D96  6AEE               	clrf	postinc0,c
  1031  015D98  06E8               	decf	wreg,f,c
  1032  015D9A  E1FD               	bnz	clear_0
  1033                           
  1034                           ; Clear objects allocated to BANK0 (51 bytes)
  1035  015D9C  EE00  F0B5         	lfsr	0,__pbssBANK0
  1036  015DA0  0E33               	movlw	51
  1037  015DA2                     clear_1:
  1038  015DA2  6AEE               	clrf	postinc0,c
  1039  015DA4  06E8               	decf	wreg,f,c
  1040  015DA6  E1FD               	bnz	clear_1
  1041                           
  1042                           ; Clear objects allocated to BITCOMRAM (3 bytes)
  1043  015DA8  6A4C               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
  1044  015DAA  6A4B               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
  1045  015DAC  6A4A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  1046                           
  1047                           ; Clear objects allocated to COMRAM (40 bytes)
  1048  015DAE  EE00  F001         	lfsr	0,__pbssCOMRAM
  1049  015DB2  0E28               	movlw	40
  1050  015DB4                     clear_2:
  1051  015DB4  6AEE               	clrf	postinc0,c
  1052  015DB6  06E8               	decf	wreg,f,c
  1053  015DB8  E1FD               	bnz	clear_2
  1054                           
  1055                           ; Initialize objects allocated to BANK0 (1 bytes)
  1056                           ; load TBLPTR registers with __pidataBANK0
  1057  015DBA  0E88               	movlw	low __pidataBANK0
  1058  015DBC  6EF6               	movwf	tblptrl,c
  1059  015DBE  0E61               	movlw	high __pidataBANK0
  1060  015DC0  6EF7               	movwf	tblptrh,c
  1061  015DC2  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1062  015DC4  6EF8               	movwf	tblptru,c
  1063  015DC6  0009               	tblrd		*+	;fetch initializer
  1064  015DC8  CFF5 F0E8          	movff	tablat,__pdataBANK0
  1065  015DCC                     end_of_initialization:
  1066                           	opt stack 0
  1067  015DCC                     __end_of__initialization:
  1068                           	opt stack 0
  1069  015DCC  0100               	movlb	0
  1070  015DCE  EF95  F085         	goto	_main	;jump to C main() function
  1071                           tblptru	equ	0xFF8
  1072                           tblptrh	equ	0xFF7
  1073                           tblptrl	equ	0xFF6
  1074                           tablat	equ	0xFF5
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           
  1078                           	psect	bitbssCOMRAM
  1079  000250                     __pbitbssCOMRAM:
  1080                           	opt stack 0
  1081  000250                     _Can_Tx_Force:
  1082                           	opt stack 0
  1083  000250                     	ds	1
  1084  000251                     _F1_switch:
  1085                           	opt stack 0
  1086  000251                     	ds	1
  1087  000252                     _F2_switch:
  1088                           	opt stack 0
  1089  000252                     	ds	1
  1090  000253                     _LCD_4TH_ROW_MODE:
  1091                           	opt stack 0
  1092  000253                     	ds	1
  1093  000254                     _RTR_Flag:
  1094                           	opt stack 0
  1095  000254                     	ds	1
  1096  000255                     _battery_charging:
  1097                           	opt stack 0
  1098  000255                     	ds	1
  1099  000256                     _collision_msg:
  1100                           	opt stack 0
  1101  000256                     	ds	1
  1102  000257                     _display_refresh:
  1103                           	opt stack 0
  1104  000257                     	ds	1
  1105  000258                     _low_battery:
  1106                           	opt stack 0
  1107  000258                     	ds	1
  1108  000259                     _parking_error:
  1109                           	opt stack 0
  1110  000259                     	ds	1
  1111  00025A                     _parking_message_E:
  1112                           	opt stack 0
  1113  00025A                     	ds	1
  1114  00025B                     _power_switch:
  1115                           	opt stack 0
  1116  00025B                     	ds	1
  1117  00025C                     _pwr_credits:
  1118                           	opt stack 0
  1119  00025C                     	ds	1
  1120  00025D                     _row_refresh:
  1121                           	opt stack 0
  1122  00025D                     	ds	1
  1123  00025E                     _space_available:
  1124                           	opt stack 0
  1125  00025E                     	ds	1
  1126  00025F                     _space_gap_reached:
  1127                           	opt stack 0
  1128  00025F                     	ds	1
  1129  000260                     _steering_correction_dir:
  1130                           	opt stack 0
  1131  000260                     	ds	1
  1132  000261                     _wait_low_1:
  1133                           	opt stack 0
  1134  000261                     	ds	1
  1135  000262                     _wait_low_2:
  1136                           	opt stack 0
  1137  000262                     	ds	1
  1138  000263                     _wait_low_3:
  1139                           	opt stack 0
  1140  000263                     	ds	1
  1141  000264                     _x:
  1142                           	opt stack 0
  1143  000264                     	ds	1
  1144  000265                     _y:
  1145                           	opt stack 0
  1146  000265                     	ds	1
  1147  000266                     _z:
  1148                           	opt stack 0
  1149  000266                     	ds	1
  1150                           tblptru	equ	0xFF8
  1151                           tblptrh	equ	0xFF7
  1152                           tblptrl	equ	0xFF6
  1153                           tablat	equ	0xFF5
  1154                           postinc0	equ	0xFEE
  1155                           wreg	equ	0xFE8
  1156                           
  1157                           	psect	bssCOMRAM
  1158  000001                     __pbssCOMRAM:
  1159                           	opt stack 0
  1160  000001                     _id:
  1161                           	opt stack 0
  1162  000001                     	ds	4
  1163  000005                     _time_counter:
  1164                           	opt stack 0
  1165  000005                     	ds	4
  1166  000009                     _collision_sensor_distance:
  1167                           	opt stack 0
  1168  000009                     	ds	2
  1169  00000B                     _left_speed:
  1170                           	opt stack 0
  1171  00000B                     	ds	2
  1172  00000D                     _right_speed:
  1173                           	opt stack 0
  1174  00000D                     	ds	2
  1175  00000F                     _user_data:
  1176                           	opt stack 0
  1177  00000F                     	ds	2
  1178  000011                     _set_steering:
  1179                           	opt stack 0
  1180  000011                     	ds	1
  1181  000012                     _msg:
  1182                           	opt stack 0
  1183  000012                     	ds	15
  1184  000021                     _data_brake:
  1185                           	opt stack 0
  1186  000021                     	ds	8
  1187                           tblptru	equ	0xFF8
  1188                           tblptrh	equ	0xFF7
  1189                           tblptrl	equ	0xFF6
  1190                           tablat	equ	0xFF5
  1191                           postinc0	equ	0xFEE
  1192                           wreg	equ	0xFE8
  1193                           
  1194                           	psect	bssBANK0
  1195  0000B5                     __pbssBANK0:
  1196                           	opt stack 0
  1197  0000B5                     _JoystickConstants:
  1198                           	opt stack 0
  1199  0000B5                     	ds	8
  1200  0000BD                     _actual_speed_kmh:
  1201                           	opt stack 0
  1202  0000BD                     	ds	4
  1203  0000C1                     _check:
  1204                           	opt stack 0
  1205  0000C1                     	ds	4
  1206  0000C5                     _pr_time_1:
  1207                           	opt stack 0
  1208  0000C5                     	ds	4
  1209  0000C9                     _pr_time_2:
  1210                           	opt stack 0
  1211  0000C9                     	ds	4
  1212  0000CD                     _pr_time_3:
  1213                           	opt stack 0
  1214  0000CD                     	ds	4
  1215  0000D1                     _pr_time_5:
  1216                           	opt stack 0
  1217  0000D1                     	ds	4
  1218  0000D5                     _pr_time_6:
  1219                           	opt stack 0
  1220  0000D5                     	ds	4
  1221  0000D9                     _JoystickValues:
  1222                           	opt stack 0
  1223  0000D9                     	ds	2
  1224  0000DB                     _actual_speed:
  1225                           	opt stack 0
  1226  0000DB                     	ds	2
  1227  0000DD                     _clock_counter_reference:
  1228                           	opt stack 0
  1229  0000DD                     	ds	2
  1230  0000DF                     _set_speed:
  1231                           	opt stack 0
  1232  0000DF                     	ds	2
  1233  0000E1                     _center_value_Y:
  1234                           	opt stack 0
  1235  0000E1                     	ds	1
  1236  0000E2                     _collision_risk_value:
  1237                           	opt stack 0
  1238  0000E2                     	ds	1
  1239  0000E3                     _dir:
  1240                           	opt stack 0
  1241  0000E3                     	ds	1
  1242  0000E4                     _parking_message_ID:
  1243                           	opt stack 0
  1244  0000E4                     	ds	1
  1245  0000E5                     _parking_state:
  1246                           	opt stack 0
  1247  0000E5                     	ds	1
  1248  0000E6                     _steering_correction:
  1249                           	opt stack 0
  1250  0000E6                     	ds	1
  1251  0000E7                     _switch_position:
  1252                           	opt stack 0
  1253  0000E7                     	ds	1
  1254                           tblptru	equ	0xFF8
  1255                           tblptrh	equ	0xFF7
  1256                           tblptrl	equ	0xFF6
  1257                           tablat	equ	0xFF5
  1258                           postinc0	equ	0xFEE
  1259                           wreg	equ	0xFE8
  1260                           
  1261                           	psect	dataBANK0
  1262  0000E8                     __pdataBANK0:
  1263                           	opt stack 0
  1264  0000E8                     _delay_quartz_frequency_value:
  1265                           	opt stack 0
  1266  0000E8                     	ds	1
  1267                           tblptru	equ	0xFF8
  1268                           tblptrh	equ	0xFF7
  1269                           tblptrl	equ	0xFF6
  1270                           tablat	equ	0xFF5
  1271                           postinc0	equ	0xFEE
  1272                           wreg	equ	0xFE8
  1273                           
  1274                           	psect	bssBANK1
  1275  000100                     __pbssBANK1:
  1276                           	opt stack 0
  1277  000100                     LCD_write_integer@F17326:
  1278                           	opt stack 0
  1279  000100                     	ds	6
  1280  000106                     _pr_time_4:
  1281                           	opt stack 0
  1282  000106                     	ds	4
  1283  00010A                     _str:
  1284                           	opt stack 0
  1285  00010A                     	ds	12
  1286  000116                     _data:
  1287                           	opt stack 0
  1288  000116                     	ds	8
  1289  00011E                     _data_speed:
  1290                           	opt stack 0
  1291  00011E                     	ds	8
  1292  000126                     _data_steering:
  1293                           	opt stack 0
  1294  000126                     	ds	8
  1295  00012E                     _park_assist_state:
  1296                           	opt stack 0
  1297  00012E                     	ds	8
  1298                           tblptru	equ	0xFF8
  1299                           tblptrh	equ	0xFF7
  1300                           tblptrl	equ	0xFF6
  1301                           tablat	equ	0xFF5
  1302                           postinc0	equ	0xFEE
  1303                           wreg	equ	0xFE8
  1304                           
  1305                           	psect	cstackBANK1
  1306  000136                     __pcstackBANK1:
  1307                           	opt stack 0
  1308  000136                     ?_sprintf:
  1309                           	opt stack 0
  1310  000136                     sprintf@sp:
  1311                           	opt stack 0
  1312                           
  1313                           ; 2 bytes @ 0x0
  1314  000136                     	ds	2
  1315  000138                     sprintf@f:
  1316                           	opt stack 0
  1317                           
  1318                           ; 2 bytes @ 0x2
  1319  000138                     	ds	6
  1320  00013E                     _sprintf$4244:
  1321                           	opt stack 0
  1322                           
  1323                           ; 4 bytes @ 0x8
  1324  00013E                     	ds	4
  1325  000142                     sprintf@ap:
  1326                           	opt stack 0
  1327                           
  1328                           ; 2 bytes @ 0xC
  1329  000142                     	ds	2
  1330  000144                     sprintf@flag:
  1331                           	opt stack 0
  1332                           
  1333                           ; 2 bytes @ 0xE
  1334  000144                     	ds	2
  1335  000146                     sprintf@val:
  1336                           	opt stack 0
  1337                           
  1338                           ; 4 bytes @ 0x10
  1339  000146                     	ds	4
  1340  00014A                     sprintf@exp:
  1341                           	opt stack 0
  1342                           
  1343                           ; 2 bytes @ 0x14
  1344  00014A                     	ds	2
  1345  00014C                     sprintf@tmpval:
  1346                           	opt stack 0
  1347                           
  1348                           ; 4 bytes @ 0x16
  1349  00014C                     	ds	4
  1350  000150                     sprintf@prec:
  1351                           	opt stack 0
  1352                           
  1353                           ; 2 bytes @ 0x1A
  1354  000150                     	ds	2
  1355  000152                     sprintf@fval:
  1356                           	opt stack 0
  1357                           
  1358                           ; 4 bytes @ 0x1C
  1359  000152                     	ds	4
  1360  000156                     sprintf@c:
  1361                           	opt stack 0
  1362                           
  1363                           ; 1 bytes @ 0x20
  1364  000156                     	ds	1
  1365  000157                     ??_main:
  1366                           
  1367                           ; 0 bytes @ 0x21
  1368  000157                     	ds	8
  1369                           tblptru	equ	0xFF8
  1370                           tblptrh	equ	0xFF7
  1371                           tblptrl	equ	0xFF6
  1372                           tablat	equ	0xFF5
  1373                           postinc0	equ	0xFEE
  1374                           wreg	equ	0xFE8
  1375                           
  1376                           	psect	cstackBANK0
  1377  000060                     __pcstackBANK0:
  1378                           	opt stack 0
  1379  000060                     ??_ISR_alta:
  1380                           
  1381                           ; 0 bytes @ 0x0
  1382  000060                     	ds	18
  1383  000072                     ??_isdigit:
  1384  000072                     ?___wmul:
  1385                           	opt stack 0
  1386  000072                     ?___awmod:
  1387                           	opt stack 0
  1388  000072                     ?___lwdiv:
  1389                           	opt stack 0
  1390  000072                     ?___lwmod:
  1391                           	opt stack 0
  1392  000072                     ?__tdiv_to_l_:
  1393                           	opt stack 0
  1394  000072                     ?__div_to_l_:
  1395                           	opt stack 0
  1396  000072                     ?___flpack:
  1397                           	opt stack 0
  1398  000072                     ?___lldiv:
  1399                           	opt stack 0
  1400  000072                     ?___llmod:
  1401                           	opt stack 0
  1402  000072                     CANOperationMode@mode:
  1403                           	opt stack 0
  1404  000072                     _CANisTxReady$3255:
  1405                           	opt stack 0
  1406  000072                     delay_set_quartz@frequency:
  1407                           	opt stack 0
  1408  000072                     Joystick_Polling@i:
  1409                           	opt stack 0
  1410  000072                     ___wmul@multiplier:
  1411                           	opt stack 0
  1412  000072                     ___awmod@dividend:
  1413                           	opt stack 0
  1414  000072                     ___lwdiv@dividend:
  1415                           	opt stack 0
  1416  000072                     ___lwmod@dividend:
  1417                           	opt stack 0
  1418  000072                     CANsendMessage@identifier:
  1419                           	opt stack 0
  1420  000072                     CANSetMask@mask:
  1421                           	opt stack 0
  1422  000072                     CANSetFilter@filter:
  1423                           	opt stack 0
  1424  000072                     ___flpack@arg:
  1425                           	opt stack 0
  1426  000072                     __div_to_l_@f1:
  1427                           	opt stack 0
  1428  000072                     ___flge@ff1:
  1429                           	opt stack 0
  1430  000072                     __tdiv_to_l_@f1:
  1431                           	opt stack 0
  1432  000072                     ___lldiv@dividend:
  1433                           	opt stack 0
  1434  000072                     ___llmod@dividend:
  1435                           	opt stack 0
  1436                           
  1437                           ; 4 bytes @ 0x12
  1438  000072                     	ds	1
  1439  000073                     _isdigit$3917:
  1440                           	opt stack 0
  1441                           
  1442                           ; 1 bytes @ 0x13
  1443  000073                     	ds	1
  1444  000074                     isdigit@c:
  1445                           	opt stack 0
  1446  000074                     ___wmul@multiplicand:
  1447                           	opt stack 0
  1448  000074                     ___awmod@divisor:
  1449                           	opt stack 0
  1450  000074                     ___lwdiv@divisor:
  1451                           	opt stack 0
  1452  000074                     ___lwmod@divisor:
  1453                           	opt stack 0
  1454                           
  1455                           ; 2 bytes @ 0x14
  1456  000074                     	ds	2
  1457  000076                     CANSetMask@type:
  1458                           	opt stack 0
  1459  000076                     CANSetFilter@type:
  1460                           	opt stack 0
  1461  000076                     ___awmod@counter:
  1462                           	opt stack 0
  1463  000076                     ___flpack@exp:
  1464                           	opt stack 0
  1465  000076                     ___lwmod@counter:
  1466                           	opt stack 0
  1467  000076                     CANsendMessage@data:
  1468                           	opt stack 0
  1469  000076                     ___wmul@product:
  1470                           	opt stack 0
  1471  000076                     ___lwdiv@quotient:
  1472                           	opt stack 0
  1473  000076                     __div_to_l_@f2:
  1474                           	opt stack 0
  1475  000076                     ___flge@ff2:
  1476                           	opt stack 0
  1477  000076                     __tdiv_to_l_@f2:
  1478                           	opt stack 0
  1479  000076                     ___lldiv@divisor:
  1480                           	opt stack 0
  1481  000076                     ___llmod@divisor:
  1482                           	opt stack 0
  1483                           
  1484                           ; 4 bytes @ 0x16
  1485  000076                     	ds	1
  1486  000077                     ??_CANSetMask:
  1487  000077                     ??_CANSetFilter:
  1488  000077                     ___awmod@sign:
  1489                           	opt stack 0
  1490  000077                     ___flpack@sign:
  1491                           	opt stack 0
  1492                           
  1493                           ; 1 bytes @ 0x17
  1494  000077                     	ds	1
  1495  000078                     ??___flpack:
  1496  000078                     ?___awdiv:
  1497                           	opt stack 0
  1498  000078                     CANsendMessage@dataLength:
  1499                           	opt stack 0
  1500  000078                     ___lwdiv@counter:
  1501                           	opt stack 0
  1502  000078                     delay_ms@value_ms:
  1503                           	opt stack 0
  1504  000078                     ___awdiv@dividend:
  1505                           	opt stack 0
  1506                           
  1507                           ; 2 bytes @ 0x18
  1508  000078                     	ds	1
  1509  000079                     CANsendMessage@flags:
  1510                           	opt stack 0
  1511  000079                     utoa@buf:
  1512                           	opt stack 0
  1513                           
  1514                           ; 2 bytes @ 0x19
  1515  000079                     	ds	1
  1516  00007A                     ??__tdiv_to_l_:
  1517  00007A                     ??_CANsendMessage:
  1518  00007A                     ??___flge:
  1519  00007A                     LCD_send_command@D2:
  1520                           	opt stack 0
  1521  00007A                     ___llmod@counter:
  1522                           	opt stack 0
  1523  00007A                     ___awdiv@divisor:
  1524                           	opt stack 0
  1525  00007A                     __div_to_l_@quot:
  1526                           	opt stack 0
  1527  00007A                     ___lldiv@quotient:
  1528                           	opt stack 0
  1529                           
  1530                           ; 4 bytes @ 0x1A
  1531  00007A                     	ds	1
  1532  00007B                     CANSetMask@numBuffer:
  1533                           	opt stack 0
  1534  00007B                     CANSetFilter@numBuffer:
  1535                           	opt stack 0
  1536  00007B                     LCD_send_command@D1:
  1537                           	opt stack 0
  1538  00007B                     utoa@val:
  1539                           	opt stack 0
  1540                           
  1541                           ; 2 bytes @ 0x1B
  1542  00007B                     	ds	1
  1543  00007C                     ?___awtofl:
  1544                           	opt stack 0
  1545  00007C                     ?___lbtofl:
  1546                           	opt stack 0
  1547  00007C                     ?___lltofl:
  1548                           	opt stack 0
  1549  00007C                     ?___lwtofl:
  1550                           	opt stack 0
  1551  00007C                     LCD_send_command@D0:
  1552                           	opt stack 0
  1553  00007C                     ___awdiv@counter:
  1554                           	opt stack 0
  1555  00007C                     ___awtofl@c:
  1556                           	opt stack 0
  1557  00007C                     ___lwtofl@c:
  1558                           	opt stack 0
  1559  00007C                     CANSetMask@tamp:
  1560                           	opt stack 0
  1561  00007C                     CANSetFilter@tamp:
  1562                           	opt stack 0
  1563  00007C                     ___lltofl@c:
  1564                           	opt stack 0
  1565                           
  1566                           ; 4 bytes @ 0x1C
  1567  00007C                     	ds	1
  1568  00007D                     LCD_send_command@D3:
  1569                           	opt stack 0
  1570  00007D                     ___awdiv@sign:
  1571                           	opt stack 0
  1572  00007D                     utoa@base:
  1573                           	opt stack 0
  1574  00007D                     __tdiv_to_l_@quot:
  1575                           	opt stack 0
  1576                           
  1577                           ; 4 bytes @ 0x1D
  1578  00007D                     	ds	1
  1579  00007E                     LCD_shift_cursor@number_of_shift:
  1580                           	opt stack 0
  1581  00007E                     LCD_goto_line@line:
  1582                           	opt stack 0
  1583  00007E                     LCD_write_char@D3:
  1584                           	opt stack 0
  1585  00007E                     LCD_cursor@blinking:
  1586                           	opt stack 0
  1587  00007E                     __div_to_l_@cntr:
  1588                           	opt stack 0
  1589  00007E                     ___lldiv@counter:
  1590                           	opt stack 0
  1591  00007E                     ___awdiv@quotient:
  1592                           	opt stack 0
  1593  00007E                     CANsendMessage@tamp:
  1594                           	opt stack 0
  1595                           
  1596                           ; 4 bytes @ 0x1E
  1597  00007E                     	ds	1
  1598  00007F                     LCD_shift_cursor@shift:
  1599                           	opt stack 0
  1600  00007F                     LCD_write_char@D2:
  1601                           	opt stack 0
  1602  00007F                     LCD_cursor@active:
  1603                           	opt stack 0
  1604  00007F                     __div_to_l_@exp1:
  1605                           	opt stack 0
  1606  00007F                     utoa@v:
  1607                           	opt stack 0
  1608                           
  1609                           ; 2 bytes @ 0x1F
  1610  00007F                     	ds	1
  1611  000080                     ?___fldiv:
  1612                           	opt stack 0
  1613  000080                     CANInitialize@phaseSeg1:
  1614                           	opt stack 0
  1615  000080                     LCD_shift_cursor@i:
  1616                           	opt stack 0
  1617  000080                     LCD_write_char@D1:
  1618                           	opt stack 0
  1619  000080                     LCD_initialize@quartz_frequency:
  1620                           	opt stack 0
  1621  000080                     ___awtofl@sign:
  1622                           	opt stack 0
  1623  000080                     ___lbtofl@c:
  1624                           	opt stack 0
  1625  000080                     ___fldiv@f1:
  1626                           	opt stack 0
  1627                           
  1628                           ; 4 bytes @ 0x20
  1629  000080                     	ds	1
  1630  000081                     ?___flmul:
  1631                           	opt stack 0
  1632  000081                     CANInitialize@phaseSeg2:
  1633                           	opt stack 0
  1634  000081                     LCD_goto_xy@y:
  1635                           	opt stack 0
  1636  000081                     LCD_write_char@D0:
  1637                           	opt stack 0
  1638  000081                     __tdiv_to_l_@cntr:
  1639                           	opt stack 0
  1640  000081                     utoa@c:
  1641                           	opt stack 0
  1642  000081                     ___flmul@f1:
  1643                           	opt stack 0
  1644                           
  1645                           ; 4 bytes @ 0x21
  1646  000081                     	ds	1
  1647  000082                     CANInitialize@SJW:
  1648                           	opt stack 0
  1649  000082                     LCD_goto_xy@x:
  1650                           	opt stack 0
  1651  000082                     LCD_write_char@value:
  1652                           	opt stack 0
  1653  000082                     __tdiv_to_l_@exp1:
  1654                           	opt stack 0
  1655  000082                     itoa@buf:
  1656                           	opt stack 0
  1657                           
  1658                           ; 2 bytes @ 0x22
  1659  000082                     	ds	1
  1660  000083                     CANInitialize@BRP:
  1661                           	opt stack 0
  1662  000083                     LCD_write_message@buffer:
  1663                           	opt stack 0
  1664  000083                     LCD_write_string@buffer:
  1665                           	opt stack 0
  1666                           
  1667                           ; 2 bytes @ 0x23
  1668  000083                     	ds	1
  1669  000084                     CANInitialize@flags:
  1670                           	opt stack 0
  1671  000084                     itoa@val:
  1672                           	opt stack 0
  1673  000084                     ___fldiv@f2:
  1674                           	opt stack 0
  1675                           
  1676                           ; 4 bytes @ 0x24
  1677  000084                     	ds	1
  1678  000085                     ??_CANInitialize:
  1679  000085                     ___flmul@f2:
  1680                           	opt stack 0
  1681                           
  1682                           ; 4 bytes @ 0x25
  1683  000085                     	ds	1
  1684  000086                     itoa@base:
  1685                           	opt stack 0
  1686                           
  1687                           ; 2 bytes @ 0x26
  1688  000086                     	ds	2
  1689  000088                     itoa@cp:
  1690                           	opt stack 0
  1691  000088                     ___fldiv@f3:
  1692                           	opt stack 0
  1693                           
  1694                           ; 4 bytes @ 0x28
  1695  000088                     	ds	1
  1696  000089                     CANInitialize@propSeg:
  1697                           	opt stack 0
  1698  000089                     ___flmul@exp:
  1699                           	opt stack 0
  1700                           
  1701                           ; 1 bytes @ 0x29
  1702  000089                     	ds	1
  1703  00008A                     CANInitialize@FilterConfig1:
  1704                           	opt stack 0
  1705  00008A                     LCD_write_integer@value:
  1706                           	opt stack 0
  1707  00008A                     ___flmul@f3_as_product:
  1708                           	opt stack 0
  1709                           
  1710                           ; 4 bytes @ 0x2A
  1711  00008A                     	ds	1
  1712  00008B                     CANInitialize@FilterConfig2:
  1713                           	opt stack 0
  1714                           
  1715                           ; 1 bytes @ 0x2B
  1716  00008B                     	ds	1
  1717  00008C                     LCD_write_integer@number_of_digits:
  1718                           	opt stack 0
  1719  00008C                     ___fldiv@cntr:
  1720                           	opt stack 0
  1721                           
  1722                           ; 1 bytes @ 0x2C
  1723  00008C                     	ds	1
  1724  00008D                     LCD_write_integer@zero_cleaning:
  1725                           	opt stack 0
  1726  00008D                     ___fldiv@exp:
  1727                           	opt stack 0
  1728                           
  1729                           ; 1 bytes @ 0x2D
  1730  00008D                     	ds	1
  1731  00008E                     ??_LCD_write_integer:
  1732  00008E                     ___fldiv@sign:
  1733                           	opt stack 0
  1734  00008E                     ___flmul@cntr:
  1735                           	opt stack 0
  1736                           
  1737                           ; 1 bytes @ 0x2E
  1738  00008E                     	ds	1
  1739  00008F                     ___flmul@sign:
  1740                           	opt stack 0
  1741                           
  1742                           ; 1 bytes @ 0x2F
  1743  00008F                     	ds	1
  1744  000090                     ?_fround:
  1745                           	opt stack 0
  1746  000090                     ?_scale:
  1747                           	opt stack 0
  1748  000090                     ?___flneg:
  1749                           	opt stack 0
  1750  000090                     ___flneg@f1:
  1751                           	opt stack 0
  1752                           
  1753                           ; 4 bytes @ 0x30
  1754  000090                     	ds	3
  1755  000093                     LCD_write_integer@convertedInt:
  1756                           	opt stack 0
  1757                           
  1758                           ; 6 bytes @ 0x33
  1759  000093                     	ds	1
  1760  000094                     _fround$4242:
  1761                           	opt stack 0
  1762  000094                     _scale$4243:
  1763                           	opt stack 0
  1764                           
  1765                           ; 4 bytes @ 0x34
  1766  000094                     	ds	4
  1767  000098                     scale@scl:
  1768                           	opt stack 0
  1769  000098                     _fround$4241:
  1770                           	opt stack 0
  1771                           
  1772                           ; 4 bytes @ 0x38
  1773  000098                     	ds	1
  1774  000099                     LCD_write_integer@index:
  1775                           	opt stack 0
  1776                           
  1777                           ; 1 bytes @ 0x39
  1778  000099                     	ds	3
  1779  00009C                     fround@prec:
  1780                           	opt stack 0
  1781                           
  1782                           ; 1 bytes @ 0x3C
  1783  00009C                     	ds	1
  1784  00009D                     ?___fladd:
  1785                           	opt stack 0
  1786  00009D                     ___fladd@f1:
  1787                           	opt stack 0
  1788                           
  1789                           ; 4 bytes @ 0x3D
  1790  00009D                     	ds	4
  1791  0000A1                     ___fladd@f2:
  1792                           	opt stack 0
  1793                           
  1794                           ; 4 bytes @ 0x41
  1795  0000A1                     	ds	4
  1796  0000A5                     ??___fladd:
  1797                           
  1798                           ; 0 bytes @ 0x45
  1799  0000A5                     	ds	1
  1800  0000A6                     ___fladd@sign:
  1801                           	opt stack 0
  1802                           
  1803                           ; 1 bytes @ 0x46
  1804  0000A6                     	ds	1
  1805  0000A7                     ___fladd@exp2:
  1806                           	opt stack 0
  1807                           
  1808                           ; 1 bytes @ 0x47
  1809  0000A7                     	ds	1
  1810  0000A8                     ___fladd@exp1:
  1811                           	opt stack 0
  1812                           
  1813                           ; 1 bytes @ 0x48
  1814  0000A8                     	ds	1
  1815  0000A9                     ?___flsub:
  1816                           	opt stack 0
  1817  0000A9                     ?___fltol:
  1818                           	opt stack 0
  1819  0000A9                     ___flsub@f1:
  1820                           	opt stack 0
  1821  0000A9                     ___fltol@f1:
  1822                           	opt stack 0
  1823                           
  1824                           ; 4 bytes @ 0x49
  1825  0000A9                     	ds	4
  1826  0000AD                     ??___fltol:
  1827  0000AD                     ___flsub@f2:
  1828                           	opt stack 0
  1829                           
  1830                           ; 4 bytes @ 0x4D
  1831  0000AD                     	ds	4
  1832  0000B1                     ___fltol@sign1:
  1833                           	opt stack 0
  1834                           
  1835                           ; 1 bytes @ 0x51
  1836  0000B1                     	ds	1
  1837  0000B2                     ___fltol@exp1:
  1838                           	opt stack 0
  1839                           
  1840                           ; 1 bytes @ 0x52
  1841  0000B2                     	ds	1
  1842  0000B3                     ??_sprintf:
  1843                           
  1844                           ; 0 bytes @ 0x53
  1845  0000B3                     	ds	2
  1846  0000B5                     tblptru	equ	0xFF8
  1847                           tblptrh	equ	0xFF7
  1848                           tblptrl	equ	0xFF6
  1849                           tablat	equ	0xFF5
  1850                           postinc0	equ	0xFEE
  1851                           wreg	equ	0xFE8
  1852                           
  1853                           ; 0 bytes @ 0x55
  1854                           
  1855                           	psect	cstackCOMRAM
  1856  000029                     __pcstackCOMRAM:
  1857                           	opt stack 0
  1858  000029                     ??_ISR_bassa:
  1859  000029                     
  1860                           ; 1 bytes @ 0x0
  1861  000029                     	ds	17
  1862  00003A                     _CANisRxReady$3257:
  1863                           	opt stack 0
  1864  00003A                     i2_CANisTxReady$3255:
  1865                           	opt stack 0
  1866  00003A                     CANreceiveMessage@msg:
  1867                           	opt stack 0
  1868  00003A                     i2CANsendMessage@identifier:
  1869                           	opt stack 0
  1870                           
  1871                           ; 4 bytes @ 0x11
  1872  00003A                     	ds	2
  1873  00003C                     ??_CANreceiveMessage:
  1874                           
  1875                           ; 0 bytes @ 0x13
  1876  00003C                     	ds	2
  1877  00003E                     i2CANsendMessage@data:
  1878                           	opt stack 0
  1879                           
  1880                           ; 2 bytes @ 0x15
  1881  00003E                     	ds	2
  1882  000040                     i2CANsendMessage@dataLength:
  1883                           	opt stack 0
  1884                           
  1885                           ; 1 bytes @ 0x17
  1886  000040                     	ds	1
  1887  000041                     i2CANsendMessage@flags:
  1888                           	opt stack 0
  1889                           
  1890                           ; 1 bytes @ 0x18
  1891  000041                     	ds	1
  1892  000042                     ??i2_CANsendMessage:
  1893                           
  1894                           ; 0 bytes @ 0x19
  1895  000042                     	ds	2
  1896  000044                     CANreceiveMessage@error:
  1897                           	opt stack 0
  1898                           
  1899                           ; 1 bytes @ 0x1B
  1900  000044                     	ds	1
  1901  000045                     CANreceiveMessage@tamp:
  1902                           	opt stack 0
  1903                           
  1904                           ; 1 bytes @ 0x1C
  1905  000045                     	ds	1
  1906  000046                     i2CANsendMessage@tamp:
  1907                           	opt stack 0
  1908                           
  1909                           ; 4 bytes @ 0x1D
  1910  000046                     	ds	4
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           postinc0	equ	0xFEE
  1916                           wreg	equ	0xFE8
  1917                           
  1918 ;;
  1919 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1920 ;;
  1921 ;; *************** function _main *****************
  1922 ;; Defined at:
  1923 ;;		line 217 in file "RemoteCan.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;		None               void
  1930 ;; Registers used:
  1931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1939 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1940 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1941 ;;Total ram usage:        8 bytes
  1942 ;; Hardware stack levels required when called:   11
  1943 ;; This function calls:
  1944 ;;		_CAN_Tx
  1945 ;;		_CANisTxReady
  1946 ;;		_CANsendMessage
  1947 ;;		_Credits
  1948 ;;		_F1_Button_Polling
  1949 ;;		_F2_Button_Polling
  1950 ;;		_Joystick_Polling
  1951 ;;		_LCD_End
  1952 ;;		_LCD_Error
  1953 ;;		_LCD_Gap
  1954 ;;		_LCD_Handler
  1955 ;;		_LCD_Park
  1956 ;;		_LCD_Parking
  1957 ;;		_LCD_goto_line
  1958 ;;		_LCD_initialize
  1959 ;;		_LCD_write_message
  1960 ;;		_PWR_Button_Polling
  1961 ;;		___awdiv
  1962 ;;		___awtofl
  1963 ;;		___fladd
  1964 ;;		___flmul
  1965 ;;		___flneg
  1966 ;;		___fltol
  1967 ;;		___lbtofl
  1968 ;;		_board_initialization
  1969 ;;		_delay_ms
  1970 ;; This function is called by:
  1971 ;;		Startup code after reset
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text0
  1976  010B2A                     __ptext0:
  1977                           	opt stack 0
  1978  010B2A                     _main:
  1979                           	opt stack 20
  1980                           
  1981                           ;RemoteCan.c: 218: board_initialization();
  1982                           
  1983                           ;incstack = 0
  1984  010B2A  EC93  F0AB         	call	_board_initialization	;wreg free
  1985                           
  1986                           ;RemoteCan.c: 220: JoystickConstants[0] = 0.703;
  1987  010B2E  0ECF               	movlw	207
  1988  010B30  0100               	movlb	0	; () banked
  1989  010B32  6FB5               	movwf	_JoystickConstants& (0+255),b	;volatile
  1990  010B34  0EF7               	movlw	247
  1991  010B36  6FB6               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1992  010B38  0E33               	movlw	51
  1993  010B3A  6FB7               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1994  010B3C  0E3F               	movlw	63
  1995  010B3E  6FB8               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;RemoteCan.c: 221: JoystickConstants[1] = 25;
  1999  010B40  0E00               	movlw	0
  2000  010B42  0100               	movlb	0	; () banked
  2001  010B44  6FB9               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2002  010B46  0E00               	movlw	0
  2003  010B48  6FBA               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2004  010B4A  0EC8               	movlw	200
  2005  010B4C  6FBB               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2006  010B4E  0E41               	movlw	65
  2007  010B50  6FBC               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;RemoteCan.c: 223: data_brake [1] = 0;
  2011  010B52  0E00               	movlw	0
  2012  010B54  6E22               	movwf	_data_brake+1,c
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;RemoteCan.c: 225: if (PORTBbits.RB1 == 1) {
  2016  010B56  A281               	btfss	3969,1,c	;volatile
  2017  010B58  D002               	goto	l8745
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;RemoteCan.c: 226: LCD_4TH_ROW_MODE = 1;
  2021  010B5A  864A               	bsf	_LCD_4TH_ROW_MODE/(0+8),_LCD_4TH_ROW_MODE& (0+7),c	;volatile
  2022  010B5C  D000               	goto	l8745
  2023  010B5E                     l8745:
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;RemoteCan.c: 227: }
  2027                           ;RemoteCan.c: 229: Joystick_Polling();
  2028  010B5E  ECE9  F0AE         	call	_Joystick_Polling	;wreg free
  2029                           
  2030                           ;RemoteCan.c: 230: center_value_Y = JoystickValues[1];
  2031  010B62  C0DA  F0E1         	movff	_JoystickValues+1,_center_value_Y	;volatile
  2032  010B66  D000               	goto	l8749
  2033  010B68                     l8749:
  2034                           
  2035                           ;RemoteCan.c: 235: PWR_Button_Polling();
  2036  010B68  EC9E  F0B0         	call	_PWR_Button_Polling	;wreg free
  2037                           
  2038                           ;RemoteCan.c: 236: F1_Button_Polling();
  2039  010B6C  ECB4  F0B0         	call	_F1_Button_Polling	;wreg free
  2040                           
  2041                           ;RemoteCan.c: 237: F2_Button_Polling();
  2042  010B70  ECA9  F0B0         	call	_F2_Button_Polling	;wreg free
  2043                           
  2044                           ;RemoteCan.c: 240: if (power_switch == 0) {
  2045  010B74  B64B               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  2046  010B76  D09E               	goto	l820
  2047                           
  2048                           ;RemoteCan.c: 241: dir = 1;
  2049  010B78  0E01               	movlw	1
  2050  010B7A  0100               	movlb	0	; () banked
  2051  010B7C  6FE3               	movwf	_dir& (0+255),b	;volatile
  2052                           
  2053                           ;RemoteCan.c: 242: set_speed = 0;
  2054  010B7E  0E00               	movlw	0
  2055  010B80  0100               	movlb	0	; () banked
  2056  010B82  6FE0               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2057  010B84  0E00               	movlw	0
  2058  010B86  6FDF               	movwf	_set_speed& (0+255),b	;volatile
  2059                           
  2060                           ;RemoteCan.c: 243: data_steering [0] = 90;
  2061  010B88  0E5A               	movlw	90
  2062  010B8A  0101               	movlb	1	; () banked
  2063  010B8C  6F26               	movwf	_data_steering& (0+255),b
  2064                           
  2065                           ;RemoteCan.c: 244: data_brake [0] = 0b00000000;
  2066  010B8E  0E00               	movlw	0
  2067  010B90  6E21               	movwf	_data_brake,c
  2068                           
  2069                           ; BSR set to: 1
  2070                           ;RemoteCan.c: 245: CAN_Tx();
  2071  010B92  ECD9  F0AA         	call	_CAN_Tx	;wreg free
  2072                           
  2073                           ;RemoteCan.c: 246: PORTDbits.RD6 = 0;
  2074  010B96  9C83               	bcf	3971,6,c	;volatile
  2075                           
  2076                           ;RemoteCan.c: 247: PORTDbits.RD5 = 0;
  2077  010B98  9A83               	bcf	3971,5,c	;volatile
  2078                           
  2079                           ;RemoteCan.c: 248: LCD_initialize(16);
  2080  010B9A  0E10               	movlw	16
  2081  010B9C  EC28  F0A6         	call	_LCD_initialize
  2082                           
  2083                           ;RemoteCan.c: 249: LCD_goto_line(1);
  2084  010BA0  0E01               	movlw	1
  2085  010BA2  EC35  F0A9         	call	_LCD_goto_line
  2086                           
  2087                           ;RemoteCan.c: 250: LCD_write_message("====================");
  2088  010BA6  0E6A               	movlw	low STR_1
  2089  010BA8  0100               	movlb	0	; () banked
  2090  010BAA  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  2091  010BAC  0EFF               	movlw	high STR_1
  2092  010BAE  0100               	movlb	0	; () banked
  2093  010BB0  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2094  010BB2  EC99  F0AF         	call	_LCD_write_message	;wreg free
  2095                           
  2096                           ;RemoteCan.c: 251: LCD_goto_line(2);
  2097  010BB6  0E02               	movlw	2
  2098  010BB8  EC35  F0A9         	call	_LCD_goto_line
  2099                           
  2100                           ;RemoteCan.c: 252: LCD_write_message("==> VEHICLE  OFF <==");
  2101  010BBC  0E40               	movlw	low STR_2
  2102  010BBE  0100               	movlb	0	; () banked
  2103  010BC0  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  2104  010BC2  0EFF               	movlw	high STR_2
  2105  010BC4  0100               	movlb	0	; () banked
  2106  010BC6  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2107  010BC8  EC99  F0AF         	call	_LCD_write_message	;wreg free
  2108                           
  2109                           ;RemoteCan.c: 253: LCD_goto_line(3);
  2110  010BCC  0E03               	movlw	3
  2111  010BCE  EC35  F0A9         	call	_LCD_goto_line
  2112                           
  2113                           ;RemoteCan.c: 254: LCD_write_message("  Press the button  ");
  2114  010BD2  0E1A               	movlw	low STR_3
  2115  010BD4  0100               	movlb	0	; () banked
  2116  010BD6  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  2117  010BD8  0EFE               	movlw	high STR_3
  2118  010BDA  0100               	movlb	0	; () banked
  2119  010BDC  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2120  010BDE  EC99  F0AF         	call	_LCD_write_message	;wreg free
  2121                           
  2122                           ;RemoteCan.c: 255: LCD_goto_line(4);
  2123  010BE2  0E04               	movlw	4
  2124  010BE4  EC35  F0A9         	call	_LCD_goto_line
  2125                           
  2126                           ;RemoteCan.c: 256: LCD_write_message("====================");
  2127  010BE8  0E6A               	movlw	low STR_1
  2128  010BEA  0100               	movlb	0	; () banked
  2129  010BEC  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  2130  010BEE  0EFF               	movlw	high STR_1
  2131  010BF0  0100               	movlb	0	; () banked
  2132  010BF2  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2133  010BF4  EC99  F0AF         	call	_LCD_write_message	;wreg free
  2134                           
  2135                           ;RemoteCan.c: 257: while (power_switch == 0) {
  2136  010BF8  D056               	goto	l8801
  2137  010BFA                     l8783:
  2138                           
  2139                           ;RemoteCan.c: 258: if ((time_counter - pr_time_1) >= 30) {
  2140  010BFA  C0C5  F157         	movff	_pr_time_1,??_main	;volatile
  2141  010BFE  C0C6  F158         	movff	_pr_time_1+1,??_main+1	;volatile
  2142  010C02  C0C7  F159         	movff	_pr_time_1+2,??_main+2	;volatile
  2143  010C06  C0C8  F15A         	movff	_pr_time_1+3,??_main+3	;volatile
  2144  010C0A  0101               	movlb	1	; () banked
  2145  010C0C  1F57               	comf	??_main& (0+255),f,b
  2146  010C0E  1F58               	comf	(??_main+1)& (0+255),f,b
  2147  010C10  1F59               	comf	(??_main+2)& (0+255),f,b
  2148  010C12  1F5A               	comf	(??_main+3)& (0+255),f,b
  2149  010C14  2B57               	incf	??_main& (0+255),f,b
  2150  010C16  0E00               	movlw	0
  2151  010C18  2358               	addwfc	(??_main+1)& (0+255),f,b
  2152  010C1A  2359               	addwfc	(??_main+2)& (0+255),f,b
  2153  010C1C  235A               	addwfc	(??_main+3)& (0+255),f,b
  2154  010C1E  5005               	movf	_time_counter,w,c	;volatile
  2155  010C20  0101               	movlb	1	; () banked
  2156  010C22  2557               	addwf	??_main& (0+255),w,b
  2157  010C24  0101               	movlb	1	; () banked
  2158  010C26  6F5B               	movwf	(??_main+4)& (0+255),b
  2159  010C28  5006               	movf	_time_counter+1,w,c	;volatile
  2160  010C2A  0101               	movlb	1	; () banked
  2161  010C2C  2158               	addwfc	(??_main+1)& (0+255),w,b
  2162  010C2E  0101               	movlb	1	; () banked
  2163  010C30  6F5C               	movwf	(??_main+5)& (0+255),b
  2164  010C32  5007               	movf	_time_counter+2,w,c	;volatile
  2165  010C34  0101               	movlb	1	; () banked
  2166  010C36  2159               	addwfc	(??_main+2)& (0+255),w,b
  2167  010C38  0101               	movlb	1	; () banked
  2168  010C3A  6F5D               	movwf	(??_main+6)& (0+255),b
  2169  010C3C  5008               	movf	_time_counter+3,w,c	;volatile
  2170  010C3E  0101               	movlb	1	; () banked
  2171  010C40  215A               	addwfc	(??_main+3)& (0+255),w,b
  2172  010C42  0101               	movlb	1	; () banked
  2173  010C44  6F5E               	movwf	(??_main+7)& (0+255),b
  2174  010C46  0101               	movlb	1	; () banked
  2175  010C48  515E               	movf	(??_main+7)& (0+255),w,b
  2176  010C4A  0101               	movlb	1	; () banked
  2177  010C4C  115D               	iorwf	(??_main+6)& (0+255),w,b
  2178  010C4E  0101               	movlb	1	; () banked
  2179  010C50  115C               	iorwf	(??_main+5)& (0+255),w,b
  2180  010C52  E105               	bnz	u11030
  2181  010C54  0E1E               	movlw	30
  2182  010C56  0101               	movlb	1	; () banked
  2183  010C58  5D5B               	subwf	(??_main+4)& (0+255),w,b
  2184  010C5A  A0D8               	btfss	status,0,c
  2185  010C5C  D00F               	goto	l823
  2186  010C5E                     u11030:
  2187                           
  2188                           ; BSR set to: 1
  2189                           ;RemoteCan.c: 259: pr_time_1 = time_counter;
  2190  010C5E  C005  F0C5         	movff	_time_counter,_pr_time_1	;volatile
  2191  010C62  C006  F0C6         	movff	_time_counter+1,_pr_time_1+1	;volatile
  2192  010C66  C007  F0C7         	movff	_time_counter+2,_pr_time_1+2	;volatile
  2193  010C6A  C008  F0C8         	movff	_time_counter+3,_pr_time_1+3	;volatile
  2194                           
  2195                           ;RemoteCan.c: 260: if (pwr_credits == 0) {
  2196  010C6E  B84B               	btfsc	_pwr_credits/(0+8),_pwr_credits& (0+7),c	;volatile
  2197  010C70  D002               	goto	l824
  2198                           
  2199                           ; BSR set to: 1
  2200                           ;RemoteCan.c: 261: PORTDbits.RD7 = ~PORTDbits.RD7;
  2201  010C72  7E83               	btg	3971,7,c	;volatile
  2202                           
  2203                           ;RemoteCan.c: 262: } else {
  2204  010C74  D003               	goto	l823
  2205  010C76                     l824:
  2206                           
  2207                           ; BSR set to: 1
  2208                           ;RemoteCan.c: 263: PORTDbits.RD6 = ~PORTDbits.RD6;
  2209  010C76  7C83               	btg	3971,6,c	;volatile
  2210                           
  2211                           ;RemoteCan.c: 264: PORTDbits.RD5 = ~PORTDbits.RD5;
  2212  010C78  7A83               	btg	3971,5,c	;volatile
  2213  010C7A  D000               	goto	l823
  2214  010C7C                     l823:
  2215                           
  2216                           ; BSR set to: 1
  2217                           ;RemoteCan.c: 265: }
  2218                           ;RemoteCan.c: 266: }
  2219                           ;RemoteCan.c: 267: if (((PORTBbits.RB1 == 1)&&(PORTBbits.RB4 == 1))&&(pwr_credits == 0))
      +                           {
  2220  010C7C  B281               	btfsc	3969,1,c	;volatile
  2221                           
  2222                           ; BSR set to: 1
  2223  010C7E  A881               	btfss	3969,4,c	;volatile
  2224  010C80  D008               	goto	l8797
  2225                           
  2226                           ; BSR set to: 1
  2227  010C82  B84B               	btfsc	_pwr_credits/(0+8),_pwr_credits& (0+7),c	;volatile
  2228  010C84  D006               	goto	l8797
  2229                           
  2230                           ; BSR set to: 1
  2231                           ;RemoteCan.c: 268: pwr_credits = 1;
  2232  010C86  884B               	bsf	_pwr_credits/(0+8),_pwr_credits& (0+7),c	;volatile
  2233                           
  2234                           ;RemoteCan.c: 269: PORTDbits.RD7 = 1;
  2235  010C88  8E83               	bsf	3971,7,c	;volatile
  2236                           
  2237                           ;RemoteCan.c: 270: PORTDbits.RD6 = 1;
  2238  010C8A  8C83               	bsf	3971,6,c	;volatile
  2239                           
  2240                           ; BSR set to: 1
  2241                           ;RemoteCan.c: 271: Credits();
  2242  010C8C  ECF3  F0AD         	call	_Credits	;wreg free
  2243  010C90  D000               	goto	l8797
  2244  010C92                     l8797:
  2245                           
  2246                           ;RemoteCan.c: 272: }
  2247                           ;RemoteCan.c: 273: PWR_Button_Polling();
  2248  010C92  EC9E  F0B0         	call	_PWR_Button_Polling	;wreg free
  2249                           
  2250                           ;RemoteCan.c: 274: delay_ms(10);
  2251  010C96  0E00               	movlw	0
  2252  010C98  0100               	movlb	0	; () banked
  2253  010C9A  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2254  010C9C  0E0A               	movlw	10
  2255  010C9E  6F78               	movwf	delay_ms@value_ms& (0+255),b
  2256  010CA0  EC45  F0AF         	call	_delay_ms	;wreg free
  2257  010CA4  D000               	goto	l8801
  2258  010CA6                     l8801:
  2259  010CA6  A64B               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  2260  010CA8  D7A8               	goto	l8783
  2261                           
  2262                           ;RemoteCan.c: 275: }
  2263                           ;RemoteCan.c: 276: pwr_credits = 0;
  2264  010CAA  984B               	bcf	_pwr_credits/(0+8),_pwr_credits& (0+7),c	;volatile
  2265                           
  2266                           ;RemoteCan.c: 277: PORTDbits.RD6 = 0;
  2267  010CAC  9C83               	bcf	3971,6,c	;volatile
  2268                           
  2269                           ;RemoteCan.c: 278: PORTDbits.RD5 = 0;
  2270  010CAE  9A83               	bcf	3971,5,c	;volatile
  2271                           
  2272                           ;RemoteCan.c: 279: PORTDbits.RD7 = 0;
  2273  010CB0  9E83               	bcf	3971,7,c	;volatile
  2274                           
  2275                           ;RemoteCan.c: 280: display_refresh = 1;
  2276  010CB2  8E4A               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  2277  010CB4                     l820:
  2278                           
  2279                           ;RemoteCan.c: 281: }
  2280                           ;RemoteCan.c: 284: if (PORTAbits.RA2 == 1) {
  2281  010CB4  A480               	btfss	3968,2,c	;volatile
  2282  010CB6  D004               	goto	l828
  2283                           
  2284                           ;RemoteCan.c: 285: switch_position = 0;
  2285  010CB8  0E00               	movlw	0
  2286  010CBA  0100               	movlb	0	; () banked
  2287  010CBC  6FE7               	movwf	_switch_position& (0+255),b	;volatile
  2288                           
  2289                           ;RemoteCan.c: 286: } else {
  2290  010CBE  D00E               	goto	l8809
  2291  010CC0                     l828:
  2292                           
  2293                           ;RemoteCan.c: 287: if (PORTAbits.RA3 == 0) {
  2294  010CC0  B680               	btfsc	3968,3,c	;volatile
  2295  010CC2  D005               	goto	l8807
  2296                           
  2297                           ;RemoteCan.c: 288: switch_position = 1;
  2298  010CC4  0E01               	movlw	1
  2299  010CC6  0100               	movlb	0	; () banked
  2300  010CC8  6FE7               	movwf	_switch_position& (0+255),b	;volatile
  2301                           
  2302                           ;RemoteCan.c: 289: dir = 1;
  2303  010CCA  0E01               	movlw	1
  2304  010CCC  D004               	goto	L1
  2305  010CCE                     l8807:
  2306                           
  2307                           ;RemoteCan.c: 291: switch_position = 2;
  2308  010CCE  0E02               	movlw	2
  2309  010CD0  0100               	movlb	0	; () banked
  2310  010CD2  6FE7               	movwf	_switch_position& (0+255),b	;volatile
  2311                           
  2312                           ;RemoteCan.c: 292: dir = 0;
  2313  010CD4  0E00               	movlw	0
  2314  010CD6                     L1:
  2315  010CD6  0100               	movlb	0	; () banked
  2316  010CD8  6FE3               	movwf	_dir& (0+255),b	;volatile
  2317                           
  2318                           ; BSR set to: 0
  2319  010CDA  D000               	goto	l8809
  2320  010CDC                     l8809:
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;RemoteCan.c: 293: }
  2324                           ;RemoteCan.c: 294: }
  2325                           ;RemoteCan.c: 297: if (F1_switch == 1) {
  2326  010CDC  A24A               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  2327  010CDE  D0A9               	goto	l832
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;RemoteCan.c: 298: y = 0;
  2331  010CE0  9A4C               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  2332                           
  2333                           ;RemoteCan.c: 299: if ((x == 0)&&(F2_switch == 0)) {
  2334  010CE2  A84C               	btfss	_x/(0+8),_x& (0+7),c	;volatile
  2335                           
  2336                           ; BSR set to: 0
  2337  010CE4  B44A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2338  010CE6  D02F               	goto	l8827
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;RemoteCan.c: 300: space_available = 0;
  2342  010CE8  9C4B               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;RemoteCan.c: 301: parking_state = 1;
  2346  010CEA  0E01               	movlw	1
  2347  010CEC  0100               	movlb	0	; () banked
  2348  010CEE  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  2349                           
  2350                           ;RemoteCan.c: 302: JoystickConstants[1] = 8;
  2351  010CF0  0E00               	movlw	0
  2352  010CF2  0100               	movlb	0	; () banked
  2353  010CF4  6FB9               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2354  010CF6  0E00               	movlw	0
  2355  010CF8  6FBA               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2356  010CFA  0E00               	movlw	0
  2357  010CFC  6FBB               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2358  010CFE  0E41               	movlw	65
  2359  010D00  6FBC               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2360                           
  2361                           ; BSR set to: 0
  2362                           
  2363                           ;RemoteCan.c: 303: while (!CANisTxReady());
  2364  010D02  D000               	goto	l8819
  2365  010D04                     l8819:
  2366  010D04  EC44  F0B0         	call	_CANisTxReady	;wreg free
  2367  010D08  0900               	iorlw	0
  2368  010D0A  B4D8               	btfsc	status,2,c
  2369  010D0C  D7FB               	goto	l8819
  2370                           
  2371                           ;RemoteCan.c: 304: park_assist_state[0] = 0b00000001;
  2372  010D0E  0E01               	movlw	1
  2373  010D10  0101               	movlb	1	; () banked
  2374  010D12  6F2E               	movwf	_park_assist_state& (0+255),b
  2375                           
  2376                           ; BSR set to: 1
  2377                           ;RemoteCan.c: 305: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2378  010D14  0E0C               	movlw	12
  2379  010D16  0100               	movlb	0	; () banked
  2380  010D18  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  2381  010D1A  0E00               	movlw	0
  2382  010D1C  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2383  010D1E  0E00               	movlw	0
  2384  010D20  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2385  010D22  0E00               	movlw	0
  2386  010D24  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2387  010D26  0E2E               	movlw	low _park_assist_state
  2388  010D28  0100               	movlb	0	; () banked
  2389  010D2A  6F76               	movwf	CANsendMessage@data& (0+255),b
  2390  010D2C  0E01               	movlw	high _park_assist_state
  2391  010D2E  0100               	movlb	0	; () banked
  2392  010D30  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  2393  010D32  0E08               	movlw	8
  2394  010D34  0100               	movlb	0	; () banked
  2395  010D36  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  2396  010D38  0EBC               	movlw	188
  2397  010D3A  0100               	movlb	0	; () banked
  2398  010D3C  6F79               	movwf	CANsendMessage@flags& (0+255),b
  2399  010D3E  ECA8  F08E         	call	_CANsendMessage	;wreg free
  2400                           
  2401                           ;RemoteCan.c: 306: x = 1;
  2402  010D42  884C               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  2403  010D44  D000               	goto	l8827
  2404  010D46                     l8827:
  2405                           
  2406                           ;RemoteCan.c: 307: }
  2407                           ;RemoteCan.c: 309: if ((F2_switch == 1)&&(space_available == 1)&&(space_gap_reached == 1
      +                          )) {
  2408  010D46  B44A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2409  010D48  AC4B               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2410  010D4A  D02A               	goto	l837
  2411  010D4C  AE4B               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2412  010D4E  D028               	goto	l837
  2413                           
  2414                           ;RemoteCan.c: 310: if (z == 0) {
  2415  010D50  BC4C               	btfsc	_z/(0+8),_z& (0+7),c	;volatile
  2416  010D52  D028               	goto	l8845
  2417                           
  2418                           ;RemoteCan.c: 311: parking_message_ID = 4;
  2419  010D54  0E04               	movlw	4
  2420  010D56  0100               	movlb	0	; () banked
  2421  010D58  6FE4               	movwf	_parking_message_ID& (0+255),b	;volatile
  2422                           
  2423                           ;RemoteCan.c: 312: parking_state = 2;
  2424  010D5A  0E02               	movlw	2
  2425  010D5C  0100               	movlb	0	; () banked
  2426  010D5E  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  2427                           
  2428                           ; BSR set to: 0
  2429                           
  2430                           ;RemoteCan.c: 313: while (!CANisTxReady());
  2431  010D60  D000               	goto	l8837
  2432  010D62                     l8837:
  2433  010D62  EC44  F0B0         	call	_CANisTxReady	;wreg free
  2434  010D66  0900               	iorlw	0
  2435  010D68  B4D8               	btfsc	status,2,c
  2436  010D6A  D7FB               	goto	l8837
  2437                           
  2438                           ;RemoteCan.c: 314: CANsendMessage(0b00000001110, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  2439  010D6C  0E0E               	movlw	14
  2440  010D6E  0100               	movlb	0	; () banked
  2441  010D70  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  2442  010D72  0E00               	movlw	0
  2443  010D74  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2444  010D76  0E00               	movlw	0
  2445  010D78  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2446  010D7A  0E00               	movlw	0
  2447  010D7C  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2448  010D7E  0E16               	movlw	low _data
  2449  010D80  0100               	movlb	0	; () banked
  2450  010D82  6F76               	movwf	CANsendMessage@data& (0+255),b
  2451  010D84  0E01               	movlw	high _data
  2452  010D86  0100               	movlb	0	; () banked
  2453  010D88  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  2454  010D8A  0E08               	movlw	8
  2455  010D8C  0100               	movlb	0	; () banked
  2456  010D8E  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  2457  010D90  0EBC               	movlw	188
  2458  010D92  0100               	movlb	0	; () banked
  2459  010D94  6F79               	movwf	CANsendMessage@flags& (0+255),b
  2460  010D96  ECA8  F08E         	call	_CANsendMessage	;wreg free
  2461                           
  2462                           ;RemoteCan.c: 315: x = 0;
  2463  010D9A  984C               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2464                           
  2465                           ;RemoteCan.c: 316: z = 1;
  2466  010D9C  8C4C               	bsf	_z/(0+8),_z& (0+7),c	;volatile
  2467                           
  2468                           ;RemoteCan.c: 317: }
  2469                           ;RemoteCan.c: 318: } else {
  2470  010D9E  D002               	goto	l8845
  2471  010DA0                     l837:
  2472                           
  2473                           ;RemoteCan.c: 319: z = 0;
  2474  010DA0  9C4C               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2475  010DA2  D000               	goto	l8845
  2476  010DA4                     l8845:
  2477                           
  2478                           ;RemoteCan.c: 320: }
  2479                           ;RemoteCan.c: 322: if ((time_counter - pr_time_5) >= 30) {
  2480  010DA4  C0D1  F157         	movff	_pr_time_5,??_main	;volatile
  2481  010DA8  C0D2  F158         	movff	_pr_time_5+1,??_main+1	;volatile
  2482  010DAC  C0D3  F159         	movff	_pr_time_5+2,??_main+2	;volatile
  2483  010DB0  C0D4  F15A         	movff	_pr_time_5+3,??_main+3	;volatile
  2484  010DB4  0101               	movlb	1	; () banked
  2485  010DB6  1F57               	comf	??_main& (0+255),f,b
  2486  010DB8  1F58               	comf	(??_main+1)& (0+255),f,b
  2487  010DBA  1F59               	comf	(??_main+2)& (0+255),f,b
  2488  010DBC  1F5A               	comf	(??_main+3)& (0+255),f,b
  2489  010DBE  2B57               	incf	??_main& (0+255),f,b
  2490  010DC0  0E00               	movlw	0
  2491  010DC2  2358               	addwfc	(??_main+1)& (0+255),f,b
  2492  010DC4  2359               	addwfc	(??_main+2)& (0+255),f,b
  2493  010DC6  235A               	addwfc	(??_main+3)& (0+255),f,b
  2494  010DC8  5005               	movf	_time_counter,w,c	;volatile
  2495  010DCA  0101               	movlb	1	; () banked
  2496  010DCC  2557               	addwf	??_main& (0+255),w,b
  2497  010DCE  0101               	movlb	1	; () banked
  2498  010DD0  6F5B               	movwf	(??_main+4)& (0+255),b
  2499  010DD2  5006               	movf	_time_counter+1,w,c	;volatile
  2500  010DD4  0101               	movlb	1	; () banked
  2501  010DD6  2158               	addwfc	(??_main+1)& (0+255),w,b
  2502  010DD8  0101               	movlb	1	; () banked
  2503  010DDA  6F5C               	movwf	(??_main+5)& (0+255),b
  2504  010DDC  5007               	movf	_time_counter+2,w,c	;volatile
  2505  010DDE  0101               	movlb	1	; () banked
  2506  010DE0  2159               	addwfc	(??_main+2)& (0+255),w,b
  2507  010DE2  0101               	movlb	1	; () banked
  2508  010DE4  6F5D               	movwf	(??_main+6)& (0+255),b
  2509  010DE6  5008               	movf	_time_counter+3,w,c	;volatile
  2510  010DE8  0101               	movlb	1	; () banked
  2511  010DEA  215A               	addwfc	(??_main+3)& (0+255),w,b
  2512  010DEC  0101               	movlb	1	; () banked
  2513  010DEE  6F5E               	movwf	(??_main+7)& (0+255),b
  2514  010DF0  0101               	movlb	1	; () banked
  2515  010DF2  515E               	movf	(??_main+7)& (0+255),w,b
  2516  010DF4  0101               	movlb	1	; () banked
  2517  010DF6  115D               	iorwf	(??_main+6)& (0+255),w,b
  2518  010DF8  0101               	movlb	1	; () banked
  2519  010DFA  115C               	iorwf	(??_main+5)& (0+255),w,b
  2520  010DFC  E105               	bnz	u11200
  2521  010DFE  0E1E               	movlw	30
  2522  010E00  0101               	movlb	1	; () banked
  2523  010E02  5D5B               	subwf	(??_main+4)& (0+255),w,b
  2524  010E04  A0D8               	btfss	status,0,c
  2525  010E06  D050               	goto	l8869
  2526  010E08                     u11200:
  2527                           
  2528                           ; BSR set to: 1
  2529                           ;RemoteCan.c: 323: pr_time_5 = time_counter;
  2530  010E08  C005  F0D1         	movff	_time_counter,_pr_time_5	;volatile
  2531  010E0C  C006  F0D2         	movff	_time_counter+1,_pr_time_5+1	;volatile
  2532  010E10  C007  F0D3         	movff	_time_counter+2,_pr_time_5+2	;volatile
  2533  010E14  C008  F0D4         	movff	_time_counter+3,_pr_time_5+3	;volatile
  2534                           
  2535                           ;RemoteCan.c: 324: if ((space_available == 1)&&(space_gap_reached == 1)) {
  2536  010E18  BC4B               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2537                           
  2538                           ; BSR set to: 1
  2539  010E1A  AE4B               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2540  010E1C  D007               	goto	l844
  2541                           
  2542                           ; BSR set to: 1
  2543                           ;RemoteCan.c: 325: PORTDbits.RD6 = 1;
  2544  010E1E  8C83               	bsf	3971,6,c	;volatile
  2545                           
  2546                           ;RemoteCan.c: 326: if (F2_switch == 0) {
  2547  010E20  B44A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2548  010E22  D002               	goto	l845
  2549                           
  2550                           ; BSR set to: 1
  2551                           ;RemoteCan.c: 327: PORTDbits.RD5 = ~PORTDbits.RD5;
  2552  010E24  7A83               	btg	3971,5,c	;volatile
  2553                           
  2554                           ;RemoteCan.c: 328: } else {
  2555  010E26  D040               	goto	l8869
  2556  010E28                     l845:
  2557                           
  2558                           ; BSR set to: 1
  2559                           ;RemoteCan.c: 329: PORTDbits.RD5 = 1;
  2560  010E28  8A83               	bsf	3971,5,c	;volatile
  2561                           
  2562                           ; BSR set to: 1
  2563                           ;RemoteCan.c: 330: }
  2564                           ;RemoteCan.c: 331: } else {
  2565  010E2A  D03E               	goto	l8869
  2566  010E2C                     l844:
  2567                           
  2568                           ; BSR set to: 1
  2569                           ;RemoteCan.c: 332: PORTDbits.RD6 = ~PORTDbits.RD6;
  2570  010E2C  7C83               	btg	3971,6,c	;volatile
  2571  010E2E  D03A               	goto	l8867
  2572                           
  2573                           ; BSR set to: 1
  2574                           ;RemoteCan.c: 334: }
  2575                           ;RemoteCan.c: 335: }
  2576                           ;RemoteCan.c: 336: } else {
  2577                           
  2578                           ; BSR set to: 1
  2579                           
  2580                           ;RemoteCan.c: 333: PORTDbits.RD5 = 0;
  2581  010E30  D03B               	goto	l8869
  2582  010E32                     l832:
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;RemoteCan.c: 337: x = 0;
  2586  010E32  984C               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2587                           
  2588                           ;RemoteCan.c: 338: z = 0;
  2589  010E34  9C4C               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2590                           
  2591                           ;RemoteCan.c: 339: parking_message_E = 0;
  2592  010E36  944B               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  2593                           
  2594                           ;RemoteCan.c: 340: F2_switch = 0;
  2595  010E38  944A               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2596                           
  2597                           ;RemoteCan.c: 341: space_available = 0;
  2598  010E3A  9C4B               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2599                           
  2600                           ;RemoteCan.c: 342: space_gap_reached = 0;
  2601  010E3C  9E4B               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2602                           
  2603                           ;RemoteCan.c: 343: PORTDbits.RD5 = 0;
  2604  010E3E  9A83               	bcf	3971,5,c	;volatile
  2605                           
  2606                           ;RemoteCan.c: 344: PORTDbits.RD6 = 0;
  2607  010E40  9C83               	bcf	3971,6,c	;volatile
  2608                           
  2609                           ;RemoteCan.c: 345: if (y == 0) {
  2610  010E42  BA4C               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2611  010E44  D02E               	goto	l8865
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;RemoteCan.c: 346: parking_state = 0;
  2615  010E46  0E00               	movlw	0
  2616  010E48  0100               	movlb	0	; () banked
  2617  010E4A  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  2618                           
  2619                           ;RemoteCan.c: 347: JoystickConstants[1] = 25;
  2620  010E4C  0E00               	movlw	0
  2621  010E4E  0100               	movlb	0	; () banked
  2622  010E50  6FB9               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2623  010E52  0E00               	movlw	0
  2624  010E54  6FBA               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2625  010E56  0EC8               	movlw	200
  2626  010E58  6FBB               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2627  010E5A  0E41               	movlw	65
  2628  010E5C  6FBC               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2629                           
  2630                           ; BSR set to: 0
  2631                           
  2632                           ;RemoteCan.c: 348: while (!CANisTxReady());
  2633  010E5E  D000               	goto	l8857
  2634  010E60                     l8857:
  2635  010E60  EC44  F0B0         	call	_CANisTxReady	;wreg free
  2636  010E64  0900               	iorlw	0
  2637  010E66  B4D8               	btfsc	status,2,c
  2638  010E68  D7FB               	goto	l8857
  2639                           
  2640                           ;RemoteCan.c: 349: park_assist_state[0] = 0b00000000;
  2641  010E6A  0E00               	movlw	0
  2642  010E6C  0101               	movlb	1	; () banked
  2643  010E6E  6F2E               	movwf	_park_assist_state& (0+255),b
  2644                           
  2645                           ; BSR set to: 1
  2646                           ;RemoteCan.c: 350: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2647  010E70  0E0C               	movlw	12
  2648  010E72  0100               	movlb	0	; () banked
  2649  010E74  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  2650  010E76  0E00               	movlw	0
  2651  010E78  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2652  010E7A  0E00               	movlw	0
  2653  010E7C  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2654  010E7E  0E00               	movlw	0
  2655  010E80  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2656  010E82  0E2E               	movlw	low _park_assist_state
  2657  010E84  0100               	movlb	0	; () banked
  2658  010E86  6F76               	movwf	CANsendMessage@data& (0+255),b
  2659  010E88  0E01               	movlw	high _park_assist_state
  2660  010E8A  0100               	movlb	0	; () banked
  2661  010E8C  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  2662  010E8E  0E08               	movlw	8
  2663  010E90  0100               	movlb	0	; () banked
  2664  010E92  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  2665  010E94  0EBC               	movlw	188
  2666  010E96  0100               	movlb	0	; () banked
  2667  010E98  6F79               	movwf	CANsendMessage@flags& (0+255),b
  2668  010E9A  ECA8  F08E         	call	_CANsendMessage	;wreg free
  2669                           
  2670                           ;RemoteCan.c: 351: y = 1;
  2671  010E9E  8A4C               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2672  010EA0  D000               	goto	l8865
  2673  010EA2                     l8865:
  2674                           
  2675                           ;RemoteCan.c: 352: }
  2676                           ;RemoteCan.c: 353: PORTDbits.RD6 = 0;
  2677  010EA2  9C83               	bcf	3971,6,c	;volatile
  2678  010EA4                     l8867:
  2679                           
  2680                           ;RemoteCan.c: 354: PORTDbits.RD5 = 0;
  2681  010EA4  9A83               	bcf	3971,5,c	;volatile
  2682  010EA6  D000               	goto	l8869
  2683  010EA8                     l8869:
  2684                           
  2685                           ;RemoteCan.c: 355: }
  2686                           ;RemoteCan.c: 357: Joystick_Polling();
  2687  010EA8  ECE9  F0AE         	call	_Joystick_Polling	;wreg free
  2688                           
  2689                           ;RemoteCan.c: 359: if ((JoystickValues[1] < 10)&&(parking_state == 2)) {
  2690  010EAC  0E0A               	movlw	10
  2691  010EAE  0100               	movlb	0	; () banked
  2692  010EB0  61DA               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2693  010EB2  D02E               	goto	l8885
  2694                           
  2695                           ; BSR set to: 0
  2696  010EB4  0E02               	movlw	2
  2697  010EB6  0100               	movlb	0	; () banked
  2698  010EB8  19E5               	xorwf	_parking_state& (0+255),w,b	;volatile
  2699  010EBA  A4D8               	btfss	status,2,c
  2700  010EBC  D029               	goto	l8885
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;RemoteCan.c: 360: F1_switch = 0;
  2704  010EBE  924A               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;RemoteCan.c: 361: parking_state = 0;
  2708  010EC0  0E00               	movlw	0
  2709  010EC2  0100               	movlb	0	; () banked
  2710  010EC4  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  2711                           
  2712                           ;RemoteCan.c: 362: parking_message_ID = 0;
  2713  010EC6  0E00               	movlw	0
  2714  010EC8  0100               	movlb	0	; () banked
  2715  010ECA  6FE4               	movwf	_parking_message_ID& (0+255),b	;volatile
  2716                           
  2717                           ;RemoteCan.c: 363: park_assist_state[0] = 0b00000000;
  2718  010ECC  0E00               	movlw	0
  2719  010ECE  0101               	movlb	1	; () banked
  2720  010ED0  6F2E               	movwf	_park_assist_state& (0+255),b
  2721                           
  2722                           ; BSR set to: 1
  2723                           
  2724                           ;RemoteCan.c: 364: while (!CANisTxReady());
  2725  010ED2  D000               	goto	l8879
  2726  010ED4                     l8879:
  2727  010ED4  EC44  F0B0         	call	_CANisTxReady	;wreg free
  2728  010ED8  0900               	iorlw	0
  2729  010EDA  B4D8               	btfsc	status,2,c
  2730  010EDC  D7FB               	goto	l8879
  2731                           
  2732                           ;RemoteCan.c: 365: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2733  010EDE  0E0C               	movlw	12
  2734  010EE0  0100               	movlb	0	; () banked
  2735  010EE2  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  2736  010EE4  0E00               	movlw	0
  2737  010EE6  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2738  010EE8  0E00               	movlw	0
  2739  010EEA  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2740  010EEC  0E00               	movlw	0
  2741  010EEE  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2742  010EF0  0E2E               	movlw	low _park_assist_state
  2743  010EF2  0100               	movlb	0	; () banked
  2744  010EF4  6F76               	movwf	CANsendMessage@data& (0+255),b
  2745  010EF6  0E01               	movlw	high _park_assist_state
  2746  010EF8  0100               	movlb	0	; () banked
  2747  010EFA  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  2748  010EFC  0E08               	movlw	8
  2749  010EFE  0100               	movlb	0	; () banked
  2750  010F00  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  2751  010F02  0EBC               	movlw	188
  2752  010F04  0100               	movlb	0	; () banked
  2753  010F06  6F79               	movwf	CANsendMessage@flags& (0+255),b
  2754  010F08  ECA8  F08E         	call	_CANsendMessage	;wreg free
  2755                           
  2756                           ;RemoteCan.c: 366: Can_Tx_Force = 1;
  2757  010F0C  804A               	bsf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2758  010F0E  D000               	goto	l8885
  2759  010F10                     l8885:
  2760                           
  2761                           ;RemoteCan.c: 367: }
  2762                           ;RemoteCan.c: 370: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2763  010F10  0E00               	movlw	0
  2764  010F12  0100               	movlb	0	; () banked
  2765  010F14  6FA1               	movwf	___fladd@f2& (0+255),b
  2766  010F16  0E00               	movlw	0
  2767  010F18  6FA2               	movwf	(___fladd@f2+1)& (0+255),b
  2768  010F1A  0E34               	movlw	52
  2769  010F1C  6FA3               	movwf	(___fladd@f2+2)& (0+255),b
  2770  010F1E  0E43               	movlw	67
  2771  010F20  6FA4               	movwf	(___fladd@f2+3)& (0+255),b
  2772  010F22  C0B5  F085         	movff	_JoystickConstants,___flmul@f2	;volatile
  2773  010F26  C0B6  F086         	movff	_JoystickConstants+1,___flmul@f2+1	;volatile
  2774  010F2A  C0B7  F087         	movff	_JoystickConstants+2,___flmul@f2+2	;volatile
  2775  010F2E  C0B8  F088         	movff	_JoystickConstants+3,___flmul@f2+3	;volatile
  2776  010F32  0100               	movlb	0	; () banked
  2777  010F34  51D9               	movf	_JoystickValues& (0+255),w,b	;volatile
  2778  010F36  EC7E  F0AF         	call	___lbtofl
  2779  010F3A  C07C  F081         	movff	?___lbtofl,___flmul@f1
  2780  010F3E  C07D  F082         	movff	?___lbtofl+1,___flmul@f1+1
  2781  010F42  C07E  F083         	movff	?___lbtofl+2,___flmul@f1+2
  2782  010F46  C07F  F084         	movff	?___lbtofl+3,___flmul@f1+3
  2783  010F4A  ECDF  F0A6         	call	___flmul	;wreg free
  2784  010F4E  C081  F090         	movff	?___flmul,___flneg@f1
  2785  010F52  C082  F091         	movff	?___flmul+1,___flneg@f1+1
  2786  010F56  C083  F092         	movff	?___flmul+2,___flneg@f1+2
  2787  010F5A  C084  F093         	movff	?___flmul+3,___flneg@f1+3
  2788  010F5E  EC0A  F0AF         	call	___flneg	;wreg free
  2789  010F62  C090  F09D         	movff	?___flneg,___fladd@f1
  2790  010F66  C091  F09E         	movff	?___flneg+1,___fladd@f1+1
  2791  010F6A  C092  F09F         	movff	?___flneg+2,___fladd@f1+2
  2792  010F6E  C093  F0A0         	movff	?___flneg+3,___fladd@f1+3
  2793  010F72  ECC9  F0A0         	call	___fladd	;wreg free
  2794  010F76  C09D  F0A9         	movff	?___fladd,___fltol@f1
  2795  010F7A  C09E  F0AA         	movff	?___fladd+1,___fltol@f1+1
  2796  010F7E  C09F  F0AB         	movff	?___fladd+2,___fltol@f1+2
  2797  010F82  C0A0  F0AC         	movff	?___fladd+3,___fltol@f1+3
  2798  010F86  EC2C  F0A8         	call	___fltol	;wreg free
  2799  010F8A  0100               	movlb	0	; () banked
  2800  010F8C  51A9               	movf	?___fltol& (0+255),w,b
  2801  010F8E  0101               	movlb	1	; () banked
  2802  010F90  6F26               	movwf	_data_steering& (0+255),b
  2803                           
  2804                           ; BSR set to: 1
  2805                           ;RemoteCan.c: 371: if (parking_state == 1) {
  2806  010F92  0100               	movlb	0	; () banked
  2807  010F94  05E5               	decf	_parking_state& (0+255),w,b	;volatile
  2808  010F96  A4D8               	btfss	status,2,c
  2809  010F98  D05C               	goto	l857
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;RemoteCan.c: 372: if (steering_correction_dir == 1) {
  2813  010F9A  A04C               	btfss	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2814  010F9C  D00F               	goto	l8893
  2815                           
  2816                           ; BSR set to: 0
  2817                           ;RemoteCan.c: 373: check = data_steering[0] + steering_correction;
  2818  010F9E  0100               	movlb	0	; () banked
  2819  010FA0  51E6               	movf	_steering_correction& (0+255),w,b	;volatile
  2820  010FA2  C126  F157         	movff	_data_steering,??_main
  2821  010FA6  0101               	movlb	1	; () banked
  2822  010FA8  6B58               	clrf	(??_main+1)& (0+255),b
  2823  010FAA  0101               	movlb	1	; () banked
  2824  010FAC  2757               	addwf	??_main& (0+255),f,b
  2825  010FAE  0E00               	movlw	0
  2826  010FB0  2358               	addwfc	(??_main+1)& (0+255),f,b
  2827  010FB2  C157  F0C1         	movff	??_main,_check	;volatile
  2828  010FB6  C158  F0C2         	movff	??_main+1,_check+1	;volatile
  2829  010FBA  D01B               	goto	L2
  2830  010FBC                     l8893:
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;RemoteCan.c: 375: check = data_steering[0] - steering_correction;
  2834  010FBC  0100               	movlb	0	; () banked
  2835  010FBE  51E6               	movf	_steering_correction& (0+255),w,b	;volatile
  2836  010FC0  0101               	movlb	1	; () banked
  2837  010FC2  6F57               	movwf	??_main& (0+255),b
  2838  010FC4  6B58               	clrf	(??_main+1)& (0+255),b
  2839  010FC6  0101               	movlb	1	; () banked
  2840  010FC8  1F57               	comf	??_main& (0+255),f,b
  2841  010FCA  1F58               	comf	(??_main+1)& (0+255),f,b
  2842  010FCC  4B57               	infsnz	??_main& (0+255),f,b
  2843  010FCE  2B58               	incf	(??_main+1)& (0+255),f,b
  2844  010FD0  0101               	movlb	1	; () banked
  2845  010FD2  5126               	movf	_data_steering& (0+255),w,b
  2846  010FD4  0101               	movlb	1	; () banked
  2847  010FD6  6F59               	movwf	(??_main+2)& (0+255),b
  2848  010FD8  6B5A               	clrf	(??_main+3)& (0+255),b
  2849  010FDA  0101               	movlb	1	; () banked
  2850  010FDC  5157               	movf	??_main& (0+255),w,b
  2851  010FDE  0101               	movlb	1	; () banked
  2852  010FE0  2759               	addwf	(??_main+2)& (0+255),f,b
  2853  010FE2  0101               	movlb	1	; () banked
  2854  010FE4  5158               	movf	(??_main+1)& (0+255),w,b
  2855  010FE6  0101               	movlb	1	; () banked
  2856  010FE8  235A               	addwfc	(??_main+3)& (0+255),f,b
  2857  010FEA  C159  F0C1         	movff	??_main+2,_check	;volatile
  2858  010FEE  C15A  F0C2         	movff	??_main+3,_check+1	;volatile
  2859  010FF2                     L2:
  2860  010FF2  0100               	movlb	0	; () banked
  2861  010FF4  0E00               	movlw	0
  2862  010FF6  BFC2               	btfsc	(_check+1)& (0+255),7,b	;volatile
  2863  010FF8  0EFF               	movlw	-1
  2864  010FFA  6FC3               	movwf	(_check+2)& (0+255),b	;volatile
  2865  010FFC  6FC4               	movwf	(_check+3)& (0+255),b	;volatile
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;RemoteCan.c: 376: }
  2869                           ;RemoteCan.c: 377: if ((check >= 0)&&(check <= 180)) {
  2870  010FFE  0100               	movlb	0	; () banked
  2871  011000  BFC4               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2872  011002  D012               	goto	l8899
  2873                           
  2874                           ; BSR set to: 0
  2875  011004  0100               	movlb	0	; () banked
  2876  011006  BFC4               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2877  011008  D00C               	goto	l8897
  2878  01100A  0100               	movlb	0	; () banked
  2879  01100C  51C4               	movf	(_check+3)& (0+255),w,b	;volatile
  2880  01100E  0100               	movlb	0	; () banked
  2881  011010  11C3               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2882  011012  0100               	movlb	0	; () banked
  2883  011014  11C2               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2884  011016  E108               	bnz	l8899
  2885  011018  0EB5               	movlw	181
  2886  01101A  0100               	movlb	0	; () banked
  2887  01101C  5DC1               	subwf	_check& (0+255),w,b	;volatile
  2888  01101E  B0D8               	btfsc	status,0,c
  2889  011020  D003               	goto	l8899
  2890  011022                     l8897:
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;RemoteCan.c: 378: data_steering[0] = check;
  2894  011022  C0C1  F126         	movff	_check,_data_steering	;volatile
  2895                           
  2896                           ;RemoteCan.c: 379: } else {
  2897  011026  D019               	goto	l864
  2898  011028                     l8899:
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;RemoteCan.c: 380: if (check > 180) {
  2902  011028  0100               	movlb	0	; () banked
  2903  01102A  BFC4               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2904  01102C  D00E               	goto	l8903
  2905  01102E  0100               	movlb	0	; () banked
  2906  011030  51C4               	movf	(_check+3)& (0+255),w,b	;volatile
  2907  011032  0100               	movlb	0	; () banked
  2908  011034  11C3               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2909  011036  0100               	movlb	0	; () banked
  2910  011038  11C2               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2911  01103A  E105               	bnz	u11330
  2912  01103C  0EB5               	movlw	181
  2913  01103E  0100               	movlb	0	; () banked
  2914  011040  5DC1               	subwf	_check& (0+255),w,b	;volatile
  2915  011042  A0D8               	btfss	status,0,c
  2916  011044  D002               	goto	l8903
  2917  011046                     u11330:
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;RemoteCan.c: 381: data_steering[0] = 180;
  2921  011046  0EB4               	movlw	180
  2922  011048  D001               	goto	L3
  2923  01104A                     l8903:
  2924                           
  2925                           ;RemoteCan.c: 383: data_steering[0] = 0;
  2926  01104A  0E00               	movlw	0
  2927  01104C                     L3:
  2928  01104C  0101               	movlb	1	; () banked
  2929  01104E  6F26               	movwf	_data_steering& (0+255),b
  2930                           
  2931                           ; BSR set to: 1
  2932                           ;RemoteCan.c: 384: }
  2933                           ;RemoteCan.c: 385: }
  2934                           ;RemoteCan.c: 386: } else {
  2935                           
  2936                           ; BSR set to: 1
  2937  011050  D004               	goto	l864
  2938  011052                     l857:
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;RemoteCan.c: 387: steering_correction_dir = 0;
  2942  011052  904C               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;RemoteCan.c: 388: steering_correction = 0;
  2946  011054  0E00               	movlw	0
  2947  011056  0100               	movlb	0	; () banked
  2948  011058  6FE6               	movwf	_steering_correction& (0+255),b	;volatile
  2949  01105A                     l864:
  2950                           
  2951                           ;RemoteCan.c: 389: }
  2952                           ;RemoteCan.c: 393: if (switch_position != 0) {
  2953  01105A  0100               	movlb	0	; () banked
  2954  01105C  51E7               	movf	_switch_position& (0+255),w,b	;volatile
  2955  01105E  B4D8               	btfsc	status,2,c
  2956  011060  D0CC               	goto	l8941
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;RemoteCan.c: 394: if (JoystickValues[1] > (center_value_Y + 2)) {
  2960  011062  0100               	movlb	0	; () banked
  2961  011064  51DA               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2962  011066  0101               	movlb	1	; () banked
  2963  011068  6F57               	movwf	??_main& (0+255),b
  2964  01106A  6B58               	clrf	(??_main+1)& (0+255),b
  2965  01106C  0100               	movlb	0	; () banked
  2966  01106E  51E1               	movf	_center_value_Y& (0+255),w,b	;volatile
  2967  011070  0101               	movlb	1	; () banked
  2968  011072  6F59               	movwf	(??_main+2)& (0+255),b
  2969  011074  6B5A               	clrf	(??_main+3)& (0+255),b
  2970  011076  0E02               	movlw	2
  2971  011078  0101               	movlb	1	; () banked
  2972  01107A  2759               	addwf	(??_main+2)& (0+255),f,b
  2973  01107C  0E00               	movlw	0
  2974  01107E  235A               	addwfc	(??_main+3)& (0+255),f,b
  2975  011080  0101               	movlb	1	; () banked
  2976  011082  5157               	movf	??_main& (0+255),w,b
  2977  011084  0101               	movlb	1	; () banked
  2978  011086  5D59               	subwf	(??_main+2)& (0+255),w,b
  2979  011088  0101               	movlb	1	; () banked
  2980  01108A  515A               	movf	(??_main+3)& (0+255),w,b
  2981  01108C  0A80               	xorlw	128
  2982  01108E  0101               	movlb	1	; () banked
  2983  011090  6F5B               	movwf	(??_main+4)& (0+255),b
  2984  011092  0101               	movlb	1	; () banked
  2985  011094  5158               	movf	(??_main+1)& (0+255),w,b
  2986  011096  0A80               	xorlw	128
  2987  011098  0101               	movlb	1	; () banked
  2988  01109A  595B               	subwfb	(??_main+4)& (0+255),w,b
  2989  01109C  B0D8               	btfsc	status,0,c
  2990  01109E  D048               	goto	l8915
  2991                           
  2992                           ; BSR set to: 1
  2993                           ;RemoteCan.c: 395: set_speed = (JoystickValues[1] - center_value_Y + 2)*(JoystickConstan
      +                          ts[1]);
  2994  0110A0  C0B9  F085         	movff	_JoystickConstants+4,___flmul@f2	;volatile
  2995  0110A4  C0BA  F086         	movff	_JoystickConstants+5,___flmul@f2+1	;volatile
  2996  0110A8  C0BB  F087         	movff	_JoystickConstants+6,___flmul@f2+2	;volatile
  2997  0110AC  C0BC  F088         	movff	_JoystickConstants+7,___flmul@f2+3	;volatile
  2998  0110B0  0100               	movlb	0	; () banked
  2999  0110B2  51E1               	movf	_center_value_Y& (0+255),w,b	;volatile
  3000  0110B4  0101               	movlb	1	; () banked
  3001  0110B6  6F57               	movwf	??_main& (0+255),b
  3002  0110B8  6B58               	clrf	(??_main+1)& (0+255),b
  3003  0110BA  0101               	movlb	1	; () banked
  3004  0110BC  1F57               	comf	??_main& (0+255),f,b
  3005  0110BE  1F58               	comf	(??_main+1)& (0+255),f,b
  3006  0110C0  4B57               	infsnz	??_main& (0+255),f,b
  3007  0110C2  2B58               	incf	(??_main+1)& (0+255),f,b
  3008  0110C4  0100               	movlb	0	; () banked
  3009  0110C6  51DA               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  3010  0110C8  0101               	movlb	1	; () banked
  3011  0110CA  6F59               	movwf	(??_main+2)& (0+255),b
  3012  0110CC  6B5A               	clrf	(??_main+3)& (0+255),b
  3013  0110CE  0101               	movlb	1	; () banked
  3014  0110D0  5157               	movf	??_main& (0+255),w,b
  3015  0110D2  0101               	movlb	1	; () banked
  3016  0110D4  2759               	addwf	(??_main+2)& (0+255),f,b
  3017  0110D6  0101               	movlb	1	; () banked
  3018  0110D8  5158               	movf	(??_main+1)& (0+255),w,b
  3019  0110DA  0101               	movlb	1	; () banked
  3020  0110DC  235A               	addwfc	(??_main+3)& (0+255),f,b
  3021  0110DE  0E02               	movlw	2
  3022  0110E0  0101               	movlb	1	; () banked
  3023  0110E2  2559               	addwf	(??_main+2)& (0+255),w,b
  3024  0110E4  0100               	movlb	0	; () banked
  3025  0110E6  6F7C               	movwf	___awtofl@c& (0+255),b
  3026  0110E8  0E00               	movlw	0
  3027  0110EA  0101               	movlb	1	; () banked
  3028  0110EC  215A               	addwfc	(??_main+3)& (0+255),w,b
  3029  0110EE  0100               	movlb	0	; () banked
  3030  0110F0  6F7D               	movwf	(___awtofl@c+1)& (0+255),b
  3031  0110F2  EC7C  F0AE         	call	___awtofl	;wreg free
  3032  0110F6  C07C  F081         	movff	?___awtofl,___flmul@f1
  3033  0110FA  C07D  F082         	movff	?___awtofl+1,___flmul@f1+1
  3034  0110FE  C07E  F083         	movff	?___awtofl+2,___flmul@f1+2
  3035  011102  C07F  F084         	movff	?___awtofl+3,___flmul@f1+3
  3036  011106  ECDF  F0A6         	call	___flmul	;wreg free
  3037  01110A  C081  F0A9         	movff	?___flmul,___fltol@f1
  3038  01110E  C082  F0AA         	movff	?___flmul+1,___fltol@f1+1
  3039  011112  C083  F0AB         	movff	?___flmul+2,___fltol@f1+2
  3040  011116  C084  F0AC         	movff	?___flmul+3,___fltol@f1+3
  3041  01111A  EC2C  F0A8         	call	___fltol	;wreg free
  3042  01111E  C0A9  F0DF         	movff	?___fltol,_set_speed	;volatile
  3043  011122  C0AA  F0E0         	movff	?___fltol+1,_set_speed+1	;volatile
  3044                           
  3045                           ;RemoteCan.c: 396: data_brake [0] = 3;
  3046  011126  0E03               	movlw	3
  3047  011128  D01F               	goto	L4
  3048  01112A                     l8913:
  3049                           
  3050                           ;RemoteCan.c: 397: data_brake [1] = 0;
  3051  01112A  0E00               	movlw	0
  3052  01112C  6E22               	movwf	_data_brake+1,c
  3053                           
  3054                           ;RemoteCan.c: 398: } else {
  3055  01112E  D01F               	goto	l8929
  3056  011130                     l8915:
  3057                           
  3058                           ;RemoteCan.c: 399: set_speed = 0;
  3059  011130  0E00               	movlw	0
  3060  011132  0100               	movlb	0	; () banked
  3061  011134  6FE0               	movwf	(_set_speed+1)& (0+255),b	;volatile
  3062  011136  0E00               	movlw	0
  3063  011138  6FDF               	movwf	_set_speed& (0+255),b	;volatile
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;RemoteCan.c: 400: if (JoystickValues[1] <= 65) {
  3067  01113A  0E42               	movlw	66
  3068  01113C  0100               	movlb	0	; () banked
  3069  01113E  61DA               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  3070  011140  D005               	goto	l8921
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;RemoteCan.c: 401: data_brake [0] = 0b00000010;
  3074  011142  0E02               	movlw	2
  3075  011144  6E21               	movwf	_data_brake,c
  3076                           
  3077                           ;RemoteCan.c: 402: data_brake [1] = 0;
  3078  011146  0E00               	movlw	0
  3079  011148  6E22               	movwf	_data_brake+1,c
  3080  01114A  D000               	goto	l8921
  3081  01114C                     l8921:
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;RemoteCan.c: 403: }
  3085                           ;RemoteCan.c: 404: if (JoystickValues[1] <= 20) {
  3086  01114C  0E15               	movlw	21
  3087  01114E  0100               	movlb	0	; () banked
  3088  011150  61DA               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  3089  011152  D005               	goto	l8925
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;RemoteCan.c: 405: data_brake [0] = 0b00000001;
  3093  011154  0E01               	movlw	1
  3094  011156  6E21               	movwf	_data_brake,c
  3095                           
  3096                           ;RemoteCan.c: 406: data_brake [1] = 0;
  3097  011158  0E00               	movlw	0
  3098  01115A  6E22               	movwf	_data_brake+1,c
  3099  01115C  D000               	goto	l8925
  3100  01115E                     l8925:
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;RemoteCan.c: 407: }
  3104                           ;RemoteCan.c: 408: if (JoystickValues[1] <= 5) {
  3105  01115E  0E06               	movlw	6
  3106  011160  0100               	movlb	0	; () banked
  3107  011162  61DA               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  3108  011164  D004               	goto	l8929
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;RemoteCan.c: 409: data_brake [0] = 0b00000000;
  3112  011166  0E00               	movlw	0
  3113  011168                     L4:
  3114  011168  6E21               	movwf	_data_brake,c
  3115  01116A  D7DF               	goto	l8913
  3116                           
  3117                           ; BSR set to: 0
  3118                           
  3119                           ;RemoteCan.c: 410: data_brake [1] = 0;
  3120  01116C  D000               	goto	l8929
  3121  01116E                     l8929:
  3122                           
  3123                           ;RemoteCan.c: 411: }
  3124                           ;RemoteCan.c: 412: }
  3125                           ;RemoteCan.c: 414: if ((JoystickValues[1] >= center_value_Y)&&(parking_state == 0)) {
  3126  01116E  0100               	movlb	0	; () banked
  3127  011170  51E1               	movf	_center_value_Y& (0+255),w,b	;volatile
  3128  011172  0100               	movlb	0	; () banked
  3129  011174  5DDA               	subwf	(_JoystickValues+1)& (0+255),w,b	;volatile
  3130  011176  A0D8               	btfss	status,0,c
  3131  011178  D03E               	goto	l871
  3132                           
  3133                           ; BSR set to: 0
  3134  01117A  0100               	movlb	0	; () banked
  3135  01117C  51E5               	movf	_parking_state& (0+255),w,b	;volatile
  3136  01117E  A4D8               	btfss	status,2,c
  3137  011180  D03A               	goto	l871
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;RemoteCan.c: 416: collision_risk_value = ((JoystickValues[1] - center_value_Y) / 3) + 4
      +                          ;
  3141  011182  0100               	movlb	0	; () banked
  3142  011184  51E1               	movf	_center_value_Y& (0+255),w,b	;volatile
  3143  011186  0101               	movlb	1	; () banked
  3144  011188  6F57               	movwf	??_main& (0+255),b
  3145  01118A  6B58               	clrf	(??_main+1)& (0+255),b
  3146  01118C  0101               	movlb	1	; () banked
  3147  01118E  1F57               	comf	??_main& (0+255),f,b
  3148  011190  1F58               	comf	(??_main+1)& (0+255),f,b
  3149  011192  4B57               	infsnz	??_main& (0+255),f,b
  3150  011194  2B58               	incf	(??_main+1)& (0+255),f,b
  3151  011196  0100               	movlb	0	; () banked
  3152  011198  51DA               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  3153  01119A  0101               	movlb	1	; () banked
  3154  01119C  2557               	addwf	??_main& (0+255),w,b
  3155  01119E  0100               	movlb	0	; () banked
  3156  0111A0  6F78               	movwf	___awdiv@dividend& (0+255),b
  3157  0111A2  0E00               	movlw	0
  3158  0111A4  0101               	movlb	1	; () banked
  3159  0111A6  2158               	addwfc	(??_main+1)& (0+255),w,b
  3160  0111A8  0100               	movlb	0	; () banked
  3161  0111AA  6F79               	movwf	(___awdiv@dividend+1)& (0+255),b
  3162  0111AC  0E00               	movlw	0
  3163  0111AE  0100               	movlb	0	; () banked
  3164  0111B0  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  3165  0111B2  0E03               	movlw	3
  3166  0111B4  6F7A               	movwf	___awdiv@divisor& (0+255),b
  3167  0111B6  ECAC  F0A9         	call	___awdiv	;wreg free
  3168  0111BA  0100               	movlb	0	; () banked
  3169  0111BC  5178               	movf	?___awdiv& (0+255),w,b
  3170  0111BE  0F04               	addlw	4
  3171  0111C0  0100               	movlb	0	; () banked
  3172  0111C2  6FE2               	movwf	_collision_risk_value& (0+255),b	;volatile
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;RemoteCan.c: 417: if (collision_sensor_distance[dir] < collision_risk_value) {
  3176  0111C4  0100               	movlb	0	; () banked
  3177  0111C6  51E3               	movf	_dir& (0+255),w,b	;volatile
  3178  0111C8  0D01               	mullw	1
  3179  0111CA  0E09               	movlw	low _collision_sensor_distance
  3180  0111CC  24F3               	addwf	prodl,w,c
  3181  0111CE  6ED9               	movwf	fsr2l,c
  3182  0111D0  0E00               	movlw	high _collision_sensor_distance
  3183  0111D2  20F4               	addwfc	prodh,w,c
  3184  0111D4  6EDA               	movwf	fsr2h,c
  3185  0111D6  0100               	movlb	0	; () banked
  3186  0111D8  51E2               	movf	_collision_risk_value& (0+255),w,b	;volatile
  3187  0111DA  5CDE               	subwf	postinc2,w,c
  3188  0111DC  B0D8               	btfsc	status,0,c
  3189  0111DE  D009               	goto	l872
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;RemoteCan.c: 418: set_speed = 0;
  3193  0111E0  0E00               	movlw	0
  3194  0111E2  0100               	movlb	0	; () banked
  3195  0111E4  6FE0               	movwf	(_set_speed+1)& (0+255),b	;volatile
  3196  0111E6  0E00               	movlw	0
  3197  0111E8  6FDF               	movwf	_set_speed& (0+255),b	;volatile
  3198                           
  3199                           ;RemoteCan.c: 419: data_brake [0] = 0b00000000;
  3200  0111EA  0E00               	movlw	0
  3201  0111EC  6E21               	movwf	_data_brake,c
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;RemoteCan.c: 420: collision_msg = 1;
  3205  0111EE  8C4A               	bsf	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  3206                           
  3207                           ;RemoteCan.c: 421: } else {
  3208  0111F0  D030               	goto	l8949
  3209  0111F2                     l872:
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;RemoteCan.c: 422: collision_msg = 0;
  3213  0111F2  9C4A               	bcf	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;RemoteCan.c: 423: }
  3217                           ;RemoteCan.c: 424: } else {
  3218  0111F4  D02E               	goto	l8949
  3219  0111F6                     l871:
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;RemoteCan.c: 425: collision_msg = 0;
  3223  0111F6  9C4A               	bcf	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;RemoteCan.c: 426: }
  3227                           ;RemoteCan.c: 427: } else {
  3228  0111F8  D02C               	goto	l8949
  3229  0111FA                     l8941:
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;RemoteCan.c: 428: set_speed = 0;
  3233  0111FA  0E00               	movlw	0
  3234  0111FC  0100               	movlb	0	; () banked
  3235  0111FE  6FE0               	movwf	(_set_speed+1)& (0+255),b	;volatile
  3236  011200  0E00               	movlw	0
  3237  011202  6FDF               	movwf	_set_speed& (0+255),b	;volatile
  3238                           
  3239                           ;RemoteCan.c: 429: data_brake [0] = 0b00000000;
  3240  011204  0E00               	movlw	0
  3241  011206  6E21               	movwf	_data_brake,c
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;RemoteCan.c: 430: collision_risk_value = ((JoystickValues[1] - 130) / 3) + 4;
  3245  011208  0E7E               	movlw	126
  3246  01120A  0100               	movlb	0	; () banked
  3247  01120C  25DA               	addwf	(_JoystickValues+1)& (0+255),w,b	;volatile
  3248  01120E  0100               	movlb	0	; () banked
  3249  011210  6F78               	movwf	___awdiv@dividend& (0+255),b
  3250  011212  0100               	movlb	0	; () banked
  3251  011214  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  3252  011216  0EFF               	movlw	255
  3253  011218  2379               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
  3254  01121A  0E00               	movlw	0
  3255  01121C  0100               	movlb	0	; () banked
  3256  01121E  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  3257  011220  0E03               	movlw	3
  3258  011222  6F7A               	movwf	___awdiv@divisor& (0+255),b
  3259  011224  ECAC  F0A9         	call	___awdiv	;wreg free
  3260  011228  0100               	movlb	0	; () banked
  3261  01122A  5178               	movf	?___awdiv& (0+255),w,b
  3262  01122C  0F04               	addlw	4
  3263  01122E  0100               	movlb	0	; () banked
  3264  011230  6FE2               	movwf	_collision_risk_value& (0+255),b	;volatile
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;RemoteCan.c: 431: if (collision_sensor_distance[dir] > collision_risk_value) {
  3268  011232  0100               	movlb	0	; () banked
  3269  011234  51E3               	movf	_dir& (0+255),w,b	;volatile
  3270  011236  0D01               	mullw	1
  3271  011238  0E09               	movlw	low _collision_sensor_distance
  3272  01123A  24F3               	addwf	prodl,w,c
  3273  01123C  6ED9               	movwf	fsr2l,c
  3274  01123E  0E00               	movlw	high _collision_sensor_distance
  3275  011240  20F4               	addwfc	prodh,w,c
  3276  011242  6EDA               	movwf	fsr2h,c
  3277  011244  50DE               	movf	postinc2,w,c
  3278  011246  0100               	movlb	0	; () banked
  3279  011248  5DE2               	subwf	_collision_risk_value& (0+255),w,b	;volatile
  3280  01124A  B0D8               	btfsc	status,0,c
  3281  01124C  D002               	goto	l8949
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;RemoteCan.c: 432: collision_msg = 0;
  3285  01124E  9C4A               	bcf	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  3286                           
  3287                           ; BSR set to: 0
  3288  011250  D000               	goto	l8949
  3289  011252                     l8949:
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;RemoteCan.c: 433: }
  3293                           ;RemoteCan.c: 434: }
  3294                           ;RemoteCan.c: 436: if ((((time_counter - pr_time_2) >= 2) && (parking_message_ID < 2)) |
      +                          | (Can_Tx_Force == 1)) {
  3295  011252  C0C9  F157         	movff	_pr_time_2,??_main	;volatile
  3296  011256  C0CA  F158         	movff	_pr_time_2+1,??_main+1	;volatile
  3297  01125A  C0CB  F159         	movff	_pr_time_2+2,??_main+2	;volatile
  3298  01125E  C0CC  F15A         	movff	_pr_time_2+3,??_main+3	;volatile
  3299  011262  0101               	movlb	1	; () banked
  3300  011264  1F57               	comf	??_main& (0+255),f,b
  3301  011266  1F58               	comf	(??_main+1)& (0+255),f,b
  3302  011268  1F59               	comf	(??_main+2)& (0+255),f,b
  3303  01126A  1F5A               	comf	(??_main+3)& (0+255),f,b
  3304  01126C  2B57               	incf	??_main& (0+255),f,b
  3305  01126E  0E00               	movlw	0
  3306  011270  2358               	addwfc	(??_main+1)& (0+255),f,b
  3307  011272  2359               	addwfc	(??_main+2)& (0+255),f,b
  3308  011274  235A               	addwfc	(??_main+3)& (0+255),f,b
  3309  011276  5005               	movf	_time_counter,w,c	;volatile
  3310  011278  0101               	movlb	1	; () banked
  3311  01127A  2557               	addwf	??_main& (0+255),w,b
  3312  01127C  0101               	movlb	1	; () banked
  3313  01127E  6F5B               	movwf	(??_main+4)& (0+255),b
  3314  011280  5006               	movf	_time_counter+1,w,c	;volatile
  3315  011282  0101               	movlb	1	; () banked
  3316  011284  2158               	addwfc	(??_main+1)& (0+255),w,b
  3317  011286  0101               	movlb	1	; () banked
  3318  011288  6F5C               	movwf	(??_main+5)& (0+255),b
  3319  01128A  5007               	movf	_time_counter+2,w,c	;volatile
  3320  01128C  0101               	movlb	1	; () banked
  3321  01128E  2159               	addwfc	(??_main+2)& (0+255),w,b
  3322  011290  0101               	movlb	1	; () banked
  3323  011292  6F5D               	movwf	(??_main+6)& (0+255),b
  3324  011294  5008               	movf	_time_counter+3,w,c	;volatile
  3325  011296  0101               	movlb	1	; () banked
  3326  011298  215A               	addwfc	(??_main+3)& (0+255),w,b
  3327  01129A  0101               	movlb	1	; () banked
  3328  01129C  6F5E               	movwf	(??_main+7)& (0+255),b
  3329  01129E  0101               	movlb	1	; () banked
  3330  0112A0  515E               	movf	(??_main+7)& (0+255),w,b
  3331  0112A2  0101               	movlb	1	; () banked
  3332  0112A4  115D               	iorwf	(??_main+6)& (0+255),w,b
  3333  0112A6  0101               	movlb	1	; () banked
  3334  0112A8  115C               	iorwf	(??_main+5)& (0+255),w,b
  3335  0112AA  E105               	bnz	u11430
  3336  0112AC  0E02               	movlw	2
  3337  0112AE  0101               	movlb	1	; () banked
  3338  0112B0  5D5B               	subwf	(??_main+4)& (0+255),w,b
  3339  0112B2  A0D8               	btfss	status,0,c
  3340  0112B4  D004               	goto	l881
  3341  0112B6                     u11430:
  3342                           
  3343                           ; BSR set to: 1
  3344  0112B6  0E01               	movlw	1
  3345  0112B8  0100               	movlb	0	; () banked
  3346  0112BA  65E4               	cpfsgt	_parking_message_ID& (0+255),b	;volatile
  3347  0112BC  D002               	goto	l879
  3348  0112BE                     l881:
  3349  0112BE  A04A               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  3350  0112C0  D01C               	goto	l8961
  3351  0112C2                     l879:
  3352                           
  3353                           ;RemoteCan.c: 437: if (Can_Tx_Force == 1) {
  3354  0112C2  A04A               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  3355  0112C4  D00F               	goto	l8957
  3356                           
  3357                           ;RemoteCan.c: 438: dir = 1;
  3358  0112C6  0E01               	movlw	1
  3359  0112C8  0100               	movlb	0	; () banked
  3360  0112CA  6FE3               	movwf	_dir& (0+255),b	;volatile
  3361                           
  3362                           ;RemoteCan.c: 439: set_speed = 0;
  3363  0112CC  0E00               	movlw	0
  3364  0112CE  0100               	movlb	0	; () banked
  3365  0112D0  6FE0               	movwf	(_set_speed+1)& (0+255),b	;volatile
  3366  0112D2  0E00               	movlw	0
  3367  0112D4  6FDF               	movwf	_set_speed& (0+255),b	;volatile
  3368                           
  3369                           ;RemoteCan.c: 440: data_steering [0] = 90;
  3370  0112D6  0E5A               	movlw	90
  3371  0112D8  0101               	movlb	1	; () banked
  3372  0112DA  6F26               	movwf	_data_steering& (0+255),b
  3373                           
  3374                           ;RemoteCan.c: 441: data_brake [0] = 0b00000000;
  3375  0112DC  0E00               	movlw	0
  3376  0112DE  6E21               	movwf	_data_brake,c
  3377                           
  3378                           ; BSR set to: 1
  3379                           ;RemoteCan.c: 442: Can_Tx_Force = 0;
  3380  0112E0  904A               	bcf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  3381  0112E2  D000               	goto	l8957
  3382  0112E4                     l8957:
  3383                           
  3384                           ;RemoteCan.c: 443: }
  3385                           ;RemoteCan.c: 444: pr_time_2 = time_counter;
  3386  0112E4  C005  F0C9         	movff	_time_counter,_pr_time_2	;volatile
  3387  0112E8  C006  F0CA         	movff	_time_counter+1,_pr_time_2+1	;volatile
  3388  0112EC  C007  F0CB         	movff	_time_counter+2,_pr_time_2+2	;volatile
  3389  0112F0  C008  F0CC         	movff	_time_counter+3,_pr_time_2+3	;volatile
  3390                           
  3391                           ;RemoteCan.c: 445: CAN_Tx();
  3392  0112F4  ECD9  F0AA         	call	_CAN_Tx	;wreg free
  3393  0112F8  D000               	goto	l8961
  3394  0112FA                     l8961:
  3395                           
  3396                           ;RemoteCan.c: 446: }
  3397                           ;RemoteCan.c: 449: if (time_counter >= pr_time_6) {
  3398  0112FA  0100               	movlb	0	; () banked
  3399  0112FC  51D5               	movf	_pr_time_6& (0+255),w,b	;volatile
  3400  0112FE  5C05               	subwf	_time_counter,w,c	;volatile
  3401  011300  0100               	movlb	0	; () banked
  3402  011302  51D6               	movf	(_pr_time_6+1)& (0+255),w,b	;volatile
  3403  011304  5806               	subwfb	_time_counter+1,w,c	;volatile
  3404  011306  0100               	movlb	0	; () banked
  3405  011308  51D7               	movf	(_pr_time_6+2)& (0+255),w,b	;volatile
  3406  01130A  5807               	subwfb	_time_counter+2,w,c	;volatile
  3407  01130C  0100               	movlb	0	; () banked
  3408  01130E  51D8               	movf	(_pr_time_6+3)& (0+255),w,b	;volatile
  3409  011310  5808               	subwfb	_time_counter+3,w,c	;volatile
  3410  011312  A0D8               	btfss	status,0,c
  3411  011314  D061               	goto	l8989
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;RemoteCan.c: 450: if ((time_counter - pr_time_3) >= (100 / 10)) {
  3415  011316  C0CD  F157         	movff	_pr_time_3,??_main	;volatile
  3416  01131A  C0CE  F158         	movff	_pr_time_3+1,??_main+1	;volatile
  3417  01131E  C0CF  F159         	movff	_pr_time_3+2,??_main+2	;volatile
  3418  011322  C0D0  F15A         	movff	_pr_time_3+3,??_main+3	;volatile
  3419  011326  0101               	movlb	1	; () banked
  3420  011328  1F57               	comf	??_main& (0+255),f,b
  3421  01132A  1F58               	comf	(??_main+1)& (0+255),f,b
  3422  01132C  1F59               	comf	(??_main+2)& (0+255),f,b
  3423  01132E  1F5A               	comf	(??_main+3)& (0+255),f,b
  3424  011330  2B57               	incf	??_main& (0+255),f,b
  3425  011332  0E00               	movlw	0
  3426  011334  2358               	addwfc	(??_main+1)& (0+255),f,b
  3427  011336  2359               	addwfc	(??_main+2)& (0+255),f,b
  3428  011338  235A               	addwfc	(??_main+3)& (0+255),f,b
  3429  01133A  5005               	movf	_time_counter,w,c	;volatile
  3430  01133C  0101               	movlb	1	; () banked
  3431  01133E  2557               	addwf	??_main& (0+255),w,b
  3432  011340  0101               	movlb	1	; () banked
  3433  011342  6F5B               	movwf	(??_main+4)& (0+255),b
  3434  011344  5006               	movf	_time_counter+1,w,c	;volatile
  3435  011346  0101               	movlb	1	; () banked
  3436  011348  2158               	addwfc	(??_main+1)& (0+255),w,b
  3437  01134A  0101               	movlb	1	; () banked
  3438  01134C  6F5C               	movwf	(??_main+5)& (0+255),b
  3439  01134E  5007               	movf	_time_counter+2,w,c	;volatile
  3440  011350  0101               	movlb	1	; () banked
  3441  011352  2159               	addwfc	(??_main+2)& (0+255),w,b
  3442  011354  0101               	movlb	1	; () banked
  3443  011356  6F5D               	movwf	(??_main+6)& (0+255),b
  3444  011358  5008               	movf	_time_counter+3,w,c	;volatile
  3445  01135A  0101               	movlb	1	; () banked
  3446  01135C  215A               	addwfc	(??_main+3)& (0+255),w,b
  3447  01135E  0101               	movlb	1	; () banked
  3448  011360  6F5E               	movwf	(??_main+7)& (0+255),b
  3449  011362  0101               	movlb	1	; () banked
  3450  011364  515E               	movf	(??_main+7)& (0+255),w,b
  3451  011366  0101               	movlb	1	; () banked
  3452  011368  115D               	iorwf	(??_main+6)& (0+255),w,b
  3453  01136A  0101               	movlb	1	; () banked
  3454  01136C  115C               	iorwf	(??_main+5)& (0+255),w,b
  3455  01136E  E106               	bnz	u11480
  3456  011370  0E0A               	movlw	10
  3457  011372  0101               	movlb	1	; () banked
  3458  011374  5D5B               	subwf	(??_main+4)& (0+255),w,b
  3459  011376  A0D8               	btfss	status,0,c
  3460  011378  EFB4  F085         	goto	l8749
  3461  01137C                     u11480:
  3462                           
  3463                           ; BSR set to: 1
  3464                           ;RemoteCan.c: 451: pr_time_3 = time_counter;
  3465  01137C  C005  F0CD         	movff	_time_counter,_pr_time_3	;volatile
  3466  011380  C006  F0CE         	movff	_time_counter+1,_pr_time_3+1	;volatile
  3467  011384  C007  F0CF         	movff	_time_counter+2,_pr_time_3+2	;volatile
  3468  011388  C008  F0D0         	movff	_time_counter+3,_pr_time_3+3	;volatile
  3469                           
  3470                           ;RemoteCan.c: 452: if (parking_message_E == 1) {
  3471  01138C  A44B               	btfss	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3472  01138E  D020               	goto	l8987
  3473                           
  3474                           ; BSR set to: 1
  3475                           ;RemoteCan.c: 453: display_refresh = 1;
  3476  011390  8E4A               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  3477                           
  3478                           ; BSR set to: 1
  3479                           ;RemoteCan.c: 454: if (parking_message_ID == 0) {
  3480  011392  0100               	movlb	0	; () banked
  3481  011394  51E4               	movf	_parking_message_ID& (0+255),w,b	;volatile
  3482  011396  A4D8               	btfss	status,2,c
  3483  011398  D005               	goto	l8975
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;RemoteCan.c: 455: LCD_Gap();
  3487  01139A  EC5D  F0AD         	call	_LCD_Gap	;wreg free
  3488                           
  3489                           ;RemoteCan.c: 456: parking_message_ID++;
  3490  01139E  0100               	movlb	0	; () banked
  3491  0113A0  2BE4               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3492  0113A2  D000               	goto	l8975
  3493  0113A4                     l8975:
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;RemoteCan.c: 457: }
  3497                           ;RemoteCan.c: 458: if (parking_message_ID == 2) {
  3498  0113A4  0E02               	movlw	2
  3499  0113A6  0100               	movlb	0	; () banked
  3500  0113A8  19E4               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3501  0113AA  A4D8               	btfss	status,2,c
  3502  0113AC  D005               	goto	l8981
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;RemoteCan.c: 459: LCD_Park();
  3506  0113AE  EC2B  F0AD         	call	_LCD_Park	;wreg free
  3507                           
  3508                           ;RemoteCan.c: 460: parking_message_ID++;
  3509  0113B2  0100               	movlb	0	; () banked
  3510  0113B4  2BE4               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3511  0113B6  D000               	goto	l8981
  3512  0113B8                     l8981:
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;RemoteCan.c: 461: }
  3516                           ;RemoteCan.c: 462: if (parking_message_ID == 4) {
  3517  0113B8  0E04               	movlw	4
  3518  0113BA  0100               	movlb	0	; () banked
  3519  0113BC  19E4               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3520  0113BE  A4D8               	btfss	status,2,c
  3521  0113C0  EFB4  F085         	goto	l8749
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;RemoteCan.c: 463: LCD_Parking();
  3525  0113C4  ECF9  F0AC         	call	_LCD_Parking	;wreg free
  3526                           
  3527                           ;RemoteCan.c: 464: parking_message_ID++;
  3528  0113C8  0100               	movlb	0	; () banked
  3529  0113CA  2BE4               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;RemoteCan.c: 465: }
  3533                           ;RemoteCan.c: 466: } else {
  3534  0113CC  EFB4  F085         	goto	l8749
  3535  0113D0                     l8987:
  3536                           
  3537                           ;RemoteCan.c: 467: LCD_Handler();
  3538  0113D0  EC8F  F09F         	call	_LCD_Handler	;wreg free
  3539                           
  3540                           ;RemoteCan.c: 468: }
  3541                           ;RemoteCan.c: 469: }
  3542                           ;RemoteCan.c: 470: } else {
  3543  0113D4  EFB4  F085         	goto	l8749
  3544  0113D8                     l8989:
  3545                           
  3546                           ;RemoteCan.c: 471: if (parking_message_ID == 6) {
  3547  0113D8  0E06               	movlw	6
  3548  0113DA  0100               	movlb	0	; () banked
  3549  0113DC  19E4               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3550  0113DE  A4D8               	btfss	status,2,c
  3551  0113E0  EFB4  F085         	goto	l8749
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;RemoteCan.c: 472: if (parking_error == 1) {
  3555  0113E4  A24B               	btfss	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3556  0113E6  D023               	goto	l9003
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;RemoteCan.c: 473: parking_error = 0;
  3560  0113E8  924B               	bcf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;RemoteCan.c: 474: LCD_Error();
  3564  0113EA  EC8F  F0AD         	call	_LCD_Error	;wreg free
  3565                           
  3566                           ;RemoteCan.c: 475: while (CANisTxReady() != 1);
  3567  0113EE  D000               	goto	l8997
  3568  0113F0                     l8997:
  3569  0113F0  EC44  F0B0         	call	_CANisTxReady	;wreg free
  3570  0113F4  06E8               	decf	wreg,f,c
  3571  0113F6  A4D8               	btfss	status,2,c
  3572  0113F8  D7FB               	goto	l8997
  3573                           
  3574                           ;RemoteCan.c: 476: data_brake [0] = 0b00000000;
  3575  0113FA  0E00               	movlw	0
  3576  0113FC  6E21               	movwf	_data_brake,c
  3577                           
  3578                           ;RemoteCan.c: 477: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3579  0113FE  0E06               	movlw	6
  3580  011400  0100               	movlb	0	; () banked
  3581  011402  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  3582  011404  0E00               	movlw	0
  3583  011406  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3584  011408  0E00               	movlw	0
  3585  01140A  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3586  01140C  0E00               	movlw	0
  3587  01140E  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3588  011410  0E21               	movlw	low _data_brake
  3589  011412  0100               	movlb	0	; () banked
  3590  011414  6F76               	movwf	CANsendMessage@data& (0+255),b
  3591  011416  0E00               	movlw	high _data_brake
  3592  011418  0100               	movlb	0	; () banked
  3593  01141A  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  3594  01141C  0E08               	movlw	8
  3595  01141E  0100               	movlb	0	; () banked
  3596  011420  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  3597  011422  0EBC               	movlw	188
  3598  011424  0100               	movlb	0	; () banked
  3599  011426  6F79               	movwf	CANsendMessage@flags& (0+255),b
  3600  011428  ECA8  F08E         	call	_CANsendMessage	;wreg free
  3601                           
  3602                           ;RemoteCan.c: 478: } else {
  3603  01142C  D003               	goto	l9005
  3604  01142E                     l9003:
  3605                           
  3606                           ;RemoteCan.c: 479: LCD_End();
  3607  01142E  ECC1  F0AD         	call	_LCD_End	;wreg free
  3608  011432  D000               	goto	l9005
  3609  011434                     l9005:
  3610                           
  3611                           ;RemoteCan.c: 480: }
  3612                           ;RemoteCan.c: 481: parking_message_ID = 0;
  3613  011434  0E00               	movlw	0
  3614  011436  0100               	movlb	0	; () banked
  3615  011438  6FE4               	movwf	_parking_message_ID& (0+255),b	;volatile
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;RemoteCan.c: 482: parking_message_E = 0;
  3619  01143A  944B               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3620                           
  3621                           ; BSR set to: 0
  3622                           
  3623                           ; BSR set to: 0
  3624                           
  3625                           ; BSR set to: 0
  3626  01143C  EFB4  F085         	goto	l8749
  3627                           
  3628                           ; BSR set to: 0
  3629                           
  3630                           ; BSR set to: 0
  3631  011440  EF5F  F000         	goto	start
  3632  011444                     __end_of_main:
  3633                           	opt stack 0
  3634                           tblptru	equ	0xFF8
  3635                           tblptrh	equ	0xFF7
  3636                           tblptrl	equ	0xFF6
  3637                           tablat	equ	0xFF5
  3638                           prodh	equ	0xFF4
  3639                           prodl	equ	0xFF3
  3640                           postinc0	equ	0xFEE
  3641                           wreg	equ	0xFE8
  3642                           postinc2	equ	0xFDE
  3643                           fsr2h	equ	0xFDA
  3644                           fsr2l	equ	0xFD9
  3645                           status	equ	0xFD8
  3646                           
  3647 ;; *************** function _board_initialization *****************
  3648 ;; Defined at:
  3649 ;;		line 701 in file "RemoteCan.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;		None
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;		None
  3654 ;; Return value:  Size  Location     Type
  3655 ;;		None               void
  3656 ;; Registers used:
  3657 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3667 ;;Total ram usage:        0 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    9
  3670 ;; This function calls:
  3671 ;;		_CANInitialize
  3672 ;;		_LCD_clear
  3673 ;;		_LCD_goto_line
  3674 ;;		_LCD_initialize
  3675 ;; This function is called by:
  3676 ;;		_main
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text1
  3681  015726                     __ptext1:
  3682                           	opt stack 0
  3683  015726                     _board_initialization:
  3684                           	opt stack 21
  3685                           
  3686                           ;RemoteCan.c: 703: LATA = 0x00;
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;incstack = 0
  3690  015726  0E00               	movlw	0
  3691  015728  6E89               	movwf	3977,c	;volatile
  3692                           
  3693                           ;RemoteCan.c: 704: TRISA = 0b00011111;
  3694  01572A  0E1F               	movlw	31
  3695  01572C  6E92               	movwf	3986,c	;volatile
  3696                           
  3697                           ;RemoteCan.c: 705: LATB = 0x00;
  3698  01572E  0E00               	movlw	0
  3699  015730  6E8A               	movwf	3978,c	;volatile
  3700                           
  3701                           ;RemoteCan.c: 706: TRISB = 0b11111011;
  3702  015732  0EFB               	movlw	251
  3703  015734  6E93               	movwf	3987,c	;volatile
  3704                           
  3705                           ;RemoteCan.c: 707: LATC = 0x00;
  3706  015736  0E00               	movlw	0
  3707  015738  6E8B               	movwf	3979,c	;volatile
  3708                           
  3709                           ;RemoteCan.c: 708: TRISC = 0b11110000;
  3710  01573A  0EF0               	movlw	240
  3711  01573C  6E94               	movwf	3988,c	;volatile
  3712                           
  3713                           ;RemoteCan.c: 709: LATD = 0x00;
  3714  01573E  0E00               	movlw	0
  3715  015740  6E8C               	movwf	3980,c	;volatile
  3716                           
  3717                           ;RemoteCan.c: 710: TRISD = 0x00;
  3718  015742  0E00               	movlw	0
  3719  015744  6E95               	movwf	3989,c	;volatile
  3720                           
  3721                           ;RemoteCan.c: 711: LATE = 0x00;
  3722  015746  0E00               	movlw	0
  3723  015748  6E8D               	movwf	3981,c	;volatile
  3724                           
  3725                           ;RemoteCan.c: 712: TRISE = 0x00;
  3726  01574A  0E00               	movlw	0
  3727  01574C  6E96               	movwf	3990,c	;volatile
  3728                           
  3729                           ;RemoteCan.c: 714: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3730  01574E  0E06               	movlw	6
  3731  015750  0100               	movlb	0	; () banked
  3732  015752  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3733  015754  0E05               	movlw	5
  3734  015756  0100               	movlb	0	; () banked
  3735  015758  6F81               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3736  01575A  0E01               	movlw	1
  3737  01575C  0100               	movlb	0	; () banked
  3738  01575E  6F82               	movwf	CANInitialize@SJW& (0+255),b
  3739  015760  0E03               	movlw	3
  3740  015762  0100               	movlb	0	; () banked
  3741  015764  6F83               	movwf	CANInitialize@BRP& (0+255),b
  3742  015766  0E9D               	movlw	157
  3743  015768  0100               	movlb	0	; () banked
  3744  01576A  6F84               	movwf	CANInitialize@flags& (0+255),b
  3745  01576C  0E04               	movlw	4
  3746  01576E  ECFF  F0A1         	call	_CANInitialize
  3747                           
  3748                           ;RemoteCan.c: 718: PIR2bits.TMR3IF = 0;
  3749  015772  92A1               	bcf	4001,1,c	;volatile
  3750                           
  3751                           ;RemoteCan.c: 719: PIR3bits.RXB1IF = 0;
  3752  015774  92A4               	bcf	4004,1,c	;volatile
  3753                           
  3754                           ;RemoteCan.c: 720: PIR3bits.RXB0IF = 0;
  3755  015776  90A4               	bcf	4004,0,c	;volatile
  3756                           
  3757                           ;RemoteCan.c: 723: RCONbits.IPEN = 1;
  3758  015778  8ED0               	bsf	4048,7,c	;volatile
  3759                           
  3760                           ;RemoteCan.c: 724: IPR3bits.RXB1IP = 1;
  3761  01577A  82A5               	bsf	4005,1,c	;volatile
  3762                           
  3763                           ;RemoteCan.c: 725: IPR3bits.RXB0IP = 1;
  3764  01577C  80A5               	bsf	4005,0,c	;volatile
  3765                           
  3766                           ;RemoteCan.c: 726: IPR2bits.TMR3IP = 0;
  3767  01577E  92A2               	bcf	4002,1,c	;volatile
  3768                           
  3769                           ;RemoteCan.c: 729: ADCON1 = 0b00001101;
  3770  015780  0E0D               	movlw	13
  3771  015782  6EC1               	movwf	4033,c	;volatile
  3772                           
  3773                           ;RemoteCan.c: 730: ADCON0bits.CHS2 = 0;
  3774  015784  98C2               	bcf	4034,4,c	;volatile
  3775                           
  3776                           ;RemoteCan.c: 731: ADCON0bits.CHS1 = 0;
  3777  015786  96C2               	bcf	4034,3,c	;volatile
  3778                           
  3779                           ;RemoteCan.c: 732: ADCON0bits.CHS0 = 0;
  3780  015788  94C2               	bcf	4034,2,c	;volatile
  3781                           
  3782                           ;RemoteCan.c: 733: ADCON2bits.ACQT2 = 1;
  3783  01578A  8AC0               	bsf	4032,5,c	;volatile
  3784                           
  3785                           ;RemoteCan.c: 734: ADCON2bits.ACQT1 = 1;
  3786  01578C  88C0               	bsf	4032,4,c	;volatile
  3787                           
  3788                           ;RemoteCan.c: 735: ADCON2bits.ACQT0 = 0;
  3789  01578E  96C0               	bcf	4032,3,c	;volatile
  3790                           
  3791                           ;RemoteCan.c: 736: ADCON2bits.ADCS2 = 1;
  3792  015790  84C0               	bsf	4032,2,c	;volatile
  3793                           
  3794                           ;RemoteCan.c: 737: ADCON2bits.ADCS1 = 0;
  3795  015792  92C0               	bcf	4032,1,c	;volatile
  3796                           
  3797                           ;RemoteCan.c: 738: ADCON2bits.ADCS0 = 1;
  3798  015794  80C0               	bsf	4032,0,c	;volatile
  3799                           
  3800                           ;RemoteCan.c: 739: ADCON2bits.ADFM = 0;
  3801  015796  9EC0               	bcf	4032,7,c	;volatile
  3802                           
  3803                           ;RemoteCan.c: 740: ADCON0bits.ADON = 1;
  3804  015798  80C2               	bsf	4034,0,c	;volatile
  3805                           
  3806                           ;RemoteCan.c: 743: LCD_initialize(16);
  3807  01579A  0E10               	movlw	16
  3808  01579C  EC28  F0A6         	call	_LCD_initialize
  3809                           
  3810                           ;RemoteCan.c: 745: LCD_clear();
  3811  0157A0  EC00  F0B0         	call	_LCD_clear	;wreg free
  3812                           
  3813                           ;RemoteCan.c: 746: LCD_goto_line(1);
  3814  0157A4  0E01               	movlw	1
  3815  0157A6  EC35  F0A9         	call	_LCD_goto_line
  3816                           
  3817                           ;RemoteCan.c: 750: PORTDbits.RD2 = 0;
  3818  0157AA  9483               	bcf	3971,2,c	;volatile
  3819                           
  3820                           ;RemoteCan.c: 751: PORTDbits.RD3 = 0;
  3821  0157AC  9683               	bcf	3971,3,c	;volatile
  3822                           
  3823                           ;RemoteCan.c: 754: TMR3H = 0x63;
  3824  0157AE  0E63               	movlw	99
  3825  0157B0  6EB3               	movwf	4019,c	;volatile
  3826                           
  3827                           ;RemoteCan.c: 755: TMR3L = 0xC0;
  3828  0157B2  0EC0               	movlw	192
  3829  0157B4  6EB2               	movwf	4018,c	;volatile
  3830                           
  3831                           ;RemoteCan.c: 758: PIE3bits.RXB1IE = 1;
  3832  0157B6  82A3               	bsf	4003,1,c	;volatile
  3833                           
  3834                           ;RemoteCan.c: 759: PIE3bits.RXB0IE = 1;
  3835  0157B8  80A3               	bsf	4003,0,c	;volatile
  3836                           
  3837                           ;RemoteCan.c: 760: PIE2bits.TMR3IE = 1;
  3838  0157BA  82A0               	bsf	4000,1,c	;volatile
  3839                           
  3840                           ;RemoteCan.c: 763: T3CON = 0x01;
  3841  0157BC  0E01               	movlw	1
  3842  0157BE  6EB1               	movwf	4017,c	;volatile
  3843                           
  3844                           ;RemoteCan.c: 764: LCD_clear();
  3845  0157C0  EC00  F0B0         	call	_LCD_clear	;wreg free
  3846                           
  3847                           ;RemoteCan.c: 765: INTCONbits.GIEH = 1;
  3848  0157C4  8EF2               	bsf	intcon,7,c	;volatile
  3849                           
  3850                           ;RemoteCan.c: 766: INTCONbits.GIEL = 1;
  3851  0157C6  8CF2               	bsf	intcon,6,c	;volatile
  3852  0157C8  0012               	return		;funcret
  3853  0157CA                     __end_of_board_initialization:
  3854                           	opt stack 0
  3855                           tblptru	equ	0xFF8
  3856                           tblptrh	equ	0xFF7
  3857                           tblptrl	equ	0xFF6
  3858                           tablat	equ	0xFF5
  3859                           prodh	equ	0xFF4
  3860                           prodl	equ	0xFF3
  3861                           intcon	equ	0xFF2
  3862                           postinc0	equ	0xFEE
  3863                           wreg	equ	0xFE8
  3864                           postinc2	equ	0xFDE
  3865                           fsr2h	equ	0xFDA
  3866                           fsr2l	equ	0xFD9
  3867                           status	equ	0xFD8
  3868                           
  3869 ;; *************** function _CANInitialize *****************
  3870 ;; Defined at:
  3871 ;;		line 218 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  propSeg         1    wreg     unsigned char 
  3874 ;;  phaseSeg1       1   32[BANK0 ] unsigned char 
  3875 ;;  phaseSeg2       1   33[BANK0 ] unsigned char 
  3876 ;;  SJW             1   34[BANK0 ] unsigned char 
  3877 ;;  BRP             1   35[BANK0 ] unsigned char 
  3878 ;;  flags           1   36[BANK0 ] enum E16928
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;  propSeg         1   41[BANK0 ] unsigned char 
  3881 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  3882 ;;  FilterConfig    1   42[BANK0 ] unsigned char 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;		None               void
  3885 ;; Registers used:
  3886 ;;		wreg, status,2, status,0, cstack
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3892 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3893 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3894 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3895 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3896 ;;Total ram usage:       12 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:    4
  3899 ;; This function calls:
  3900 ;;		_CANOperationMode
  3901 ;;		_CANSetFilter
  3902 ;;		_CANSetMask
  3903 ;; This function is called by:
  3904 ;;		_board_initialization
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text2
  3909  0143FE                     __ptext2:
  3910                           	opt stack 0
  3911  0143FE                     _CANInitialize:
  3912                           	opt stack 25
  3913                           
  3914                           ;incstack = 0
  3915                           ;CANInitialize@propSeg stored from wreg
  3916  0143FE  0100               	movlb	0	; () banked
  3917  014400  6F89               	movwf	CANInitialize@propSeg& (0+255),b
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3921                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3922                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3923  014402  0E80               	movlw	128
  3924  014404  EC86  F0B0         	call	_CANOperationMode
  3925                           
  3926                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3927  014408  0E00               	movlw	0
  3928  01440A  6E70               	movwf	3952,c	;volatile
  3929                           
  3930                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3931  01440C  0E00               	movlw	0
  3932  01440E  6E71               	movwf	3953,c	;volatile
  3933                           
  3934                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3935  014410  0E00               	movlw	0
  3936  014412  6E72               	movwf	3954,c	;volatile
  3937                           
  3938                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3939  014414  0100               	movlb	0	; () banked
  3940  014416  4182               	rrncf	CANInitialize@SJW& (0+255),w,b
  3941  014418  42E8               	rrncf	wreg,f,c
  3942  01441A  0BC0               	andlw	192
  3943  01441C  0100               	movlb	0	; () banked
  3944  01441E  6F82               	movwf	CANInitialize@SJW& (0+255),b
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3948  014420  0100               	movlb	0	; () banked
  3949  014422  5182               	movf	CANInitialize@SJW& (0+255),w,b
  3950  014424  1270               	iorwf	3952,f,c	;volatile
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3954  014426  0100               	movlb	0	; () banked
  3955  014428  5183               	movf	CANInitialize@BRP& (0+255),w,b
  3956  01442A  1270               	iorwf	3952,f,c	;volatile
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3960  01442C  0100               	movlb	0	; () banked
  3961  01442E  5189               	movf	CANInitialize@propSeg& (0+255),w,b
  3962  014430  1271               	iorwf	3953,f,c	;volatile
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3966  014432  0100               	movlb	0	; () banked
  3967  014434  3980               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3968  014436  42E8               	rrncf	wreg,f,c
  3969  014438  0BF8               	andlw	248
  3970  01443A  0100               	movlb	0	; () banked
  3971  01443C  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3975  01443E  0100               	movlb	0	; () banked
  3976  014440  5180               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3977  014442  1271               	iorwf	3953,f,c	;volatile
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3981  014444  0100               	movlb	0	; () banked
  3982  014446  A584               	btfss	CANInitialize@flags& (0+255),2,b
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3986  014448  8C71               	bsf	3953,6,c	;volatile
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3990  01444A  0100               	movlb	0	; () banked
  3991  01444C  A184               	btfss	CANInitialize@flags& (0+255),0,b
  3992  01444E  D002               	goto	l5743
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3996  014450  8E71               	bsf	3953,7,c	;volatile
  3997  014452  D000               	goto	l5743
  3998  014454                     l5743:
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  4002  014454  0100               	movlb	0	; () banked
  4003  014456  5181               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  4004  014458  1272               	iorwf	3954,f,c	;volatile
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  4008  01445A  0100               	movlb	0	; () banked
  4009  01445C  A384               	btfss	CANInitialize@flags& (0+255),1,b
  4010  01445E  D002               	goto	l5749
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  4014  014460  8C72               	bsf	3954,6,c	;volatile
  4015  014462  D000               	goto	l5749
  4016  014464                     l5749:
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  4020  014464  0100               	movlb	0	; () banked
  4021  014466  5184               	movf	CANInitialize@flags& (0+255),w,b
  4022  014468  0B60               	andlw	96
  4023  01446A  6E60               	movwf	3936,c	;volatile
  4024                           
  4025                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  4026  01446C  0100               	movlb	0	; () banked
  4027  01446E  5184               	movf	CANInitialize@flags& (0+255),w,b
  4028  014470  0B10               	andlw	16
  4029  014472  0AFF               	xorlw	255
  4030  014474  B4D8               	btfsc	status,2,c
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  4034  014476  8460               	bsf	3936,2,c	;volatile
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  4038  014478  CF60 FF50          	movff	3936,3920	;volatile
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  4042  01447C  0E00               	movlw	0
  4043  01447E  0100               	movlb	0	; () banked
  4044  014480  6F72               	movwf	CANSetMask@mask& (0+255),b
  4045  014482  0E00               	movlw	0
  4046  014484  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  4047  014486  0E00               	movlw	0
  4048  014488  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  4049  01448A  0E00               	movlw	0
  4050  01448C  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  4051  01448E  0EF7               	movlw	247
  4052  014490  0100               	movlb	0	; () banked
  4053  014492  6F76               	movwf	CANSetMask@type& (0+255),b
  4054  014494  0E01               	movlw	1
  4055  014496  ECF5  F09A         	call	_CANSetMask
  4056                           
  4057                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  4058  01449A  0E00               	movlw	0
  4059  01449C  0100               	movlb	0	; () banked
  4060  01449E  6F72               	movwf	CANSetMask@mask& (0+255),b
  4061  0144A0  0E00               	movlw	0
  4062  0144A2  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  4063  0144A4  0E00               	movlw	0
  4064  0144A6  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  4065  0144A8  0E00               	movlw	0
  4066  0144AA  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  4067  0144AC  0EF7               	movlw	247
  4068  0144AE  0100               	movlb	0	; () banked
  4069  0144B0  6F76               	movwf	CANSetMask@type& (0+255),b
  4070  0144B2  0E02               	movlw	2
  4071  0144B4  ECF5  F09A         	call	_CANSetMask
  4072                           
  4073                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  4074  0144B8  D00F               	goto	l5761
  4075  0144BA                     l5755:
  4076                           
  4077                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  4078  0144BA  0EF7               	movlw	247
  4079  0144BC  0100               	movlb	0	; () banked
  4080  0144BE  6F8A               	movwf	CANInitialize@FilterConfig1& (0+255),b
  4081  0144C0  D007               	goto	l5757
  4082  0144C2                     l380:
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  4086  0144C2  0100               	movlb	0	; () banked
  4087  0144C4  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  4088                           
  4089                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  4090  0144C6  0100               	movlb	0	; () banked
  4091  0144C8  698B               	setf	CANInitialize@FilterConfig2& (0+255),b
  4092                           
  4093                           ;inc\CANlib.h: 273: break;
  4094  0144CA  D028               	goto	l5763
  4095  0144CC                     l381:
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  4099  0144CC  0100               	movlb	0	; () banked
  4100  0144CE  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  4101  0144D0                     l5757:
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  4105  0144D0  0EF7               	movlw	247
  4106  0144D2  0100               	movlb	0	; () banked
  4107  0144D4  6F8B               	movwf	CANInitialize@FilterConfig2& (0+255),b
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;inc\CANlib.h: 278: }
  4111                           
  4112                           ;inc\CANlib.h: 277: break;
  4113  0144D6  D022               	goto	l5763
  4114  0144D8                     l5761:
  4115  0144D8  0E9F               	movlw	159
  4116  0144DA  0100               	movlb	0	; () banked
  4117  0144DC  6F85               	movwf	??_CANInitialize& (0+255),b
  4118  0144DE  0EFF               	movlw	255
  4119  0144E0  0100               	movlb	0	; () banked
  4120  0144E2  6F86               	movwf	(??_CANInitialize+1)& (0+255),b
  4121  0144E4  0100               	movlb	0	; () banked
  4122  0144E6  5184               	movf	CANInitialize@flags& (0+255),w,b
  4123  0144E8  0B60               	andlw	96
  4124  0144EA  0100               	movlb	0	; () banked
  4125  0144EC  6F87               	movwf	(??_CANInitialize+2)& (0+255),b
  4126  0144EE  6B88               	clrf	(??_CANInitialize+3)& (0+255),b
  4127  0144F0  0100               	movlb	0	; () banked
  4128  0144F2  5185               	movf	??_CANInitialize& (0+255),w,b
  4129  0144F4  0100               	movlb	0	; () banked
  4130  0144F6  1387               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  4131  0144F8  0100               	movlb	0	; () banked
  4132  0144FA  5186               	movf	(??_CANInitialize+1)& (0+255),w,b
  4133  0144FC  0100               	movlb	0	; () banked
  4134  0144FE  1388               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  4135                           
  4136                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4137                           ; Switch size 1, requested type "space"
  4138                           ; Number of cases is 1, Range of values is 0 to 0
  4139                           ; switch strategies available:
  4140                           ; Name         Instructions Cycles
  4141                           ; simple_byte            4     3 (average)
  4142                           ;	Chosen strategy is simple_byte
  4143  014500  0100               	movlb	0	; () banked
  4144  014502  5188               	movf	(??_CANInitialize+3)& (0+255),w,b
  4145  014504  0A00               	xorlw	0	; case 0
  4146  014506  A4D8               	btfss	status,2,c
  4147  014508  D7E1               	goto	l381
  4148                           
  4149                           ; BSR set to: 0
  4150                           ; Switch size 1, requested type "space"
  4151                           ; Number of cases is 2, Range of values is 191 to 223
  4152                           ; switch strategies available:
  4153                           ; Name         Instructions Cycles
  4154                           ; simple_byte            7     4 (average)
  4155                           ;	Chosen strategy is simple_byte
  4156  01450A  0100               	movlb	0	; () banked
  4157  01450C  5187               	movf	(??_CANInitialize+2)& (0+255),w,b
  4158  01450E  0ABF               	xorlw	191	; case 191
  4159  014510  B4D8               	btfsc	status,2,c
  4160  014512  D7D7               	goto	l380
  4161  014514  0A60               	xorlw	96	; case 223
  4162  014516  B4D8               	btfsc	status,2,c
  4163  014518  D7D0               	goto	l5755
  4164  01451A  D7D8               	goto	l381
  4165  01451C                     l5763:
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  4169  01451C  0E00               	movlw	0
  4170  01451E  0100               	movlb	0	; () banked
  4171  014520  6F72               	movwf	CANSetFilter@filter& (0+255),b
  4172  014522  0E00               	movlw	0
  4173  014524  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4174  014526  0E00               	movlw	0
  4175  014528  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4176  01452A  0E00               	movlw	0
  4177  01452C  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4178  01452E  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  4179  014532  0E00               	movlw	0
  4180  014534  EC00  F080         	call	_CANSetFilter
  4181                           
  4182                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  4183  014538  0E00               	movlw	0
  4184  01453A  0100               	movlb	0	; () banked
  4185  01453C  6F72               	movwf	CANSetFilter@filter& (0+255),b
  4186  01453E  0E00               	movlw	0
  4187  014540  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4188  014542  0E00               	movlw	0
  4189  014544  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4190  014546  0E00               	movlw	0
  4191  014548  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4192  01454A  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  4193  01454E  0E01               	movlw	1
  4194  014550  EC00  F080         	call	_CANSetFilter
  4195                           
  4196                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  4197  014554  0E00               	movlw	0
  4198  014556  0100               	movlb	0	; () banked
  4199  014558  6F72               	movwf	CANSetFilter@filter& (0+255),b
  4200  01455A  0E00               	movlw	0
  4201  01455C  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4202  01455E  0E00               	movlw	0
  4203  014560  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4204  014562  0E00               	movlw	0
  4205  014564  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4206  014566  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4207  01456A  0E02               	movlw	2
  4208  01456C  EC00  F080         	call	_CANSetFilter
  4209                           
  4210                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  4211  014570  0E00               	movlw	0
  4212  014572  0100               	movlb	0	; () banked
  4213  014574  6F72               	movwf	CANSetFilter@filter& (0+255),b
  4214  014576  0E00               	movlw	0
  4215  014578  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4216  01457A  0E00               	movlw	0
  4217  01457C  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4218  01457E  0E00               	movlw	0
  4219  014580  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4220  014582  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4221  014586  0E03               	movlw	3
  4222  014588  EC00  F080         	call	_CANSetFilter
  4223                           
  4224                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  4225  01458C  0E00               	movlw	0
  4226  01458E  0100               	movlb	0	; () banked
  4227  014590  6F72               	movwf	CANSetFilter@filter& (0+255),b
  4228  014592  0E00               	movlw	0
  4229  014594  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4230  014596  0E00               	movlw	0
  4231  014598  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4232  01459A  0E00               	movlw	0
  4233  01459C  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4234  01459E  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4235  0145A2  0E04               	movlw	4
  4236  0145A4  EC00  F080         	call	_CANSetFilter
  4237                           
  4238                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  4239  0145A8  0E00               	movlw	0
  4240  0145AA  0100               	movlb	0	; () banked
  4241  0145AC  6F72               	movwf	CANSetFilter@filter& (0+255),b
  4242  0145AE  0E00               	movlw	0
  4243  0145B0  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4244  0145B2  0E00               	movlw	0
  4245  0145B4  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4246  0145B6  0E00               	movlw	0
  4247  0145B8  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4248  0145BA  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4249  0145BE  0E05               	movlw	5
  4250  0145C0  EC00  F080         	call	_CANSetFilter
  4251                           
  4252                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  4253  0145C4  0E00               	movlw	0
  4254  0145C6  EC86  F0B0         	call	_CANOperationMode
  4255  0145CA  0012               	return		;funcret
  4256  0145CC                     __end_of_CANInitialize:
  4257                           	opt stack 0
  4258                           tblptru	equ	0xFF8
  4259                           tblptrh	equ	0xFF7
  4260                           tblptrl	equ	0xFF6
  4261                           tablat	equ	0xFF5
  4262                           prodh	equ	0xFF4
  4263                           prodl	equ	0xFF3
  4264                           intcon	equ	0xFF2
  4265                           postinc0	equ	0xFEE
  4266                           wreg	equ	0xFE8
  4267                           postinc2	equ	0xFDE
  4268                           fsr2h	equ	0xFDA
  4269                           fsr2l	equ	0xFD9
  4270                           status	equ	0xFD8
  4271                           
  4272 ;; *************** function _CANSetMask *****************
  4273 ;; Defined at:
  4274 ;;		line 640 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  numBuffer       1    wreg     enum E16962
  4277 ;;  mask            4   18[BANK0 ] unsigned long 
  4278 ;;  type            1   22[BANK0 ] enum E16928
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;  numBuffer       1   27[BANK0 ] enum E16962
  4281 ;;  tamp            4   28[BANK0 ] unsigned long 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;		None               void
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, status,0
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4291 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4292 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4293 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4294 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4295 ;;Total ram usage:       14 bytes
  4296 ;; Hardware stack levels used:    1
  4297 ;; Hardware stack levels required when called:    3
  4298 ;; This function calls:
  4299 ;;		Nothing
  4300 ;; This function is called by:
  4301 ;;		_CANInitialize
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           	psect	text3
  4306  0135EA                     __ptext3:
  4307                           	opt stack 0
  4308  0135EA                     _CANSetMask:
  4309                           	opt stack 25
  4310                           
  4311                           ;incstack = 0
  4312                           ;CANSetMask@numBuffer stored from wreg
  4313  0135EA  0100               	movlb	0	; () banked
  4314  0135EC  6F7B               	movwf	CANSetMask@numBuffer& (0+255),b
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  4318  0135EE  0100               	movlb	0	; () banked
  4319  0135F0  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  4320  0135F2  A4D8               	btfss	status,2,c
  4321  0135F4  D057               	goto	l4975
  4322                           
  4323                           ; BSR set to: 0
  4324  0135F6  0100               	movlb	0	; () banked
  4325  0135F8  2976               	incf	CANSetMask@type& (0+255),w,b
  4326  0135FA  A4D8               	btfss	status,2,c
  4327  0135FC  D053               	goto	l4975
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;inc\CANlib.h: 644: {
  4331                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  4332  0135FE  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  4333  013602  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4334  013606  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4335  01360A  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4336  01360E  0E04               	movlw	4
  4337  013610  D006               	goto	u5260
  4338  013612                     u5265:
  4339  013612  0100               	movlb	0	; () banked
  4340  013614  90D8               	bcf	status,0,c
  4341  013616  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4342  013618  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4343  01361A  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4344  01361C  3377               	rrcf	??_CANSetMask& (0+255),f,b
  4345  01361E                     u5260:
  4346  01361E  2EE8               	decfsz	wreg,f,c
  4347  013620  D7F8               	goto	u5265
  4348  013622  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4349  013626  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4350  01362A  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4351  01362E  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  4355  013632  0100               	movlb	0	; () banked
  4356  013634  517C               	movf	CANSetMask@tamp& (0+255),w,b
  4357  013636  0100               	movlb	0	; () banked
  4358  013638  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4359  01363A  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4360  01363C  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4361  01363E  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  4365  013640  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  4369  013644  0E07               	movlw	7
  4370  013646  0100               	movlb	0	; () banked
  4371  013648  1572               	andwf	CANSetMask@mask& (0+255),w,b
  4372  01364A  0100               	movlb	0	; () banked
  4373  01364C  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4374  01364E  0E00               	movlw	0
  4375  013650  0100               	movlb	0	; () banked
  4376  013652  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4377  013654  0100               	movlb	0	; () banked
  4378  013656  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4379  013658  0E00               	movlw	0
  4380  01365A  0100               	movlb	0	; () banked
  4381  01365C  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4382  01365E  0100               	movlb	0	; () banked
  4383  013660  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4384  013662  0E00               	movlw	0
  4385  013664  0100               	movlb	0	; () banked
  4386  013666  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4387  013668  0100               	movlb	0	; () banked
  4388  01366A  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  4392  01366C  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  4393  013670  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4394  013674  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4395  013678  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4396  01367C  0E05               	movlw	5
  4397  01367E                     u5275:
  4398  01367E  90D8               	bcf	status,0,c
  4399  013680  0100               	movlb	0	; () banked
  4400  013682  3777               	rlcf	??_CANSetMask& (0+255),f,b
  4401  013684  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4402  013686  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4403  013688  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4404  01368A  2EE8               	decfsz	wreg,f,c
  4405  01368C  D7F8               	goto	u5275
  4406  01368E  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4407  013692  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4408  013696  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4409  01369A  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  4413  01369E  C07C  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4414  0136A2  D000               	goto	l4975
  4415  0136A4                     l4975:
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;inc\CANlib.h: 652: }
  4419                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4420  0136A4  0E02               	movlw	2
  4421  0136A6  0100               	movlb	0	; () banked
  4422  0136A8  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4423  0136AA  A4D8               	btfss	status,2,c
  4424  0136AC  D057               	goto	l4991
  4425                           
  4426                           ; BSR set to: 0
  4427  0136AE  0100               	movlb	0	; () banked
  4428  0136B0  2976               	incf	CANSetMask@type& (0+255),w,b
  4429  0136B2  A4D8               	btfss	status,2,c
  4430  0136B4  D053               	goto	l4991
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;inc\CANlib.h: 655: {
  4434                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  4435  0136B6  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  4436  0136BA  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4437  0136BE  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4438  0136C2  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4439  0136C6  0E04               	movlw	4
  4440  0136C8  D006               	goto	u5300
  4441  0136CA                     u5305:
  4442  0136CA  0100               	movlb	0	; () banked
  4443  0136CC  90D8               	bcf	status,0,c
  4444  0136CE  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4445  0136D0  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4446  0136D2  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4447  0136D4  3377               	rrcf	??_CANSetMask& (0+255),f,b
  4448  0136D6                     u5300:
  4449  0136D6  2EE8               	decfsz	wreg,f,c
  4450  0136D8  D7F8               	goto	u5305
  4451  0136DA  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4452  0136DE  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4453  0136E2  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4454  0136E6  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  4458  0136EA  0100               	movlb	0	; () banked
  4459  0136EC  517C               	movf	CANSetMask@tamp& (0+255),w,b
  4460  0136EE  0100               	movlb	0	; () banked
  4461  0136F0  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4462  0136F2  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4463  0136F4  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4464  0136F6  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4468  0136F8  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  4472  0136FC  0E07               	movlw	7
  4473  0136FE  0100               	movlb	0	; () banked
  4474  013700  1572               	andwf	CANSetMask@mask& (0+255),w,b
  4475  013702  0100               	movlb	0	; () banked
  4476  013704  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4477  013706  0E00               	movlw	0
  4478  013708  0100               	movlb	0	; () banked
  4479  01370A  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4480  01370C  0100               	movlb	0	; () banked
  4481  01370E  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4482  013710  0E00               	movlw	0
  4483  013712  0100               	movlb	0	; () banked
  4484  013714  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4485  013716  0100               	movlb	0	; () banked
  4486  013718  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4487  01371A  0E00               	movlw	0
  4488  01371C  0100               	movlb	0	; () banked
  4489  01371E  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4490  013720  0100               	movlb	0	; () banked
  4491  013722  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4495  013724  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  4496  013728  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4497  01372C  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4498  013730  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4499  013734  0E05               	movlw	5
  4500  013736                     u5315:
  4501  013736  90D8               	bcf	status,0,c
  4502  013738  0100               	movlb	0	; () banked
  4503  01373A  3777               	rlcf	??_CANSetMask& (0+255),f,b
  4504  01373C  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4505  01373E  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4506  013740  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4507  013742  2EE8               	decfsz	wreg,f,c
  4508  013744  D7F8               	goto	u5315
  4509  013746  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4510  01374A  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4511  01374E  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4512  013752  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4516  013756  C07C  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4517  01375A  D000               	goto	l4991
  4518  01375C                     l4991:
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;inc\CANlib.h: 663: }
  4522                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4523  01375C  0100               	movlb	0	; () banked
  4524  01375E  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  4525  013760  A4D8               	btfss	status,2,c
  4526  013762  D089               	goto	l5023
  4527                           
  4528                           ; BSR set to: 0
  4529  013764  0EF7               	movlw	247
  4530  013766  0100               	movlb	0	; () banked
  4531  013768  1976               	xorwf	CANSetMask@type& (0+255),w,b
  4532  01376A  A4D8               	btfss	status,2,c
  4533  01376C  D084               	goto	l5023
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;inc\CANlib.h: 666: {
  4537                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4538  01376E  0100               	movlb	0	; () banked
  4539  013770  5172               	movf	CANSetMask@mask& (0+255),w,b
  4540  013772  0100               	movlb	0	; () banked
  4541  013774  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4542  013776  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4543  013778  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4544  01377A  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4548  01377C  C07C  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4552  013780  0E00               	movlw	0
  4553  013782  0100               	movlb	0	; () banked
  4554  013784  1572               	andwf	CANSetMask@mask& (0+255),w,b
  4555  013786  0100               	movlb	0	; () banked
  4556  013788  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4557  01378A  0EFF               	movlw	255
  4558  01378C  0100               	movlb	0	; () banked
  4559  01378E  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4560  013790  0100               	movlb	0	; () banked
  4561  013792  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4562  013794  0E00               	movlw	0
  4563  013796  0100               	movlb	0	; () banked
  4564  013798  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4565  01379A  0100               	movlb	0	; () banked
  4566  01379C  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4567  01379E  0E00               	movlw	0
  4568  0137A0  0100               	movlb	0	; () banked
  4569  0137A2  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4570  0137A4  0100               	movlb	0	; () banked
  4571  0137A6  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4575  0137A8  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  4576  0137AC  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4577  0137B0  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4578  0137B4  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4579  0137B8  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  4580  0137BC  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  4581  0137C0  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  4582  0137C4  0100               	movlb	0	; () banked
  4583  0137C6  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  4584  0137C8  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4585  0137CC  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4586  0137D0  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4587  0137D4  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4591  0137D8  C07C  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4595  0137DC  0100               	movlb	0	; () banked
  4596  0137DE  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4597  0137E0  D003               	goto	l454
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4601  0137E2  010F               	movlb	15	; () banked
  4602  0137E4  8119               	bsf	25,0,b	;volatile
  4603  0137E6  D002               	goto	l455
  4604  0137E8                     l454:
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;inc\CANlib.h: 676: else
  4608                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4609  0137E8  010F               	movlb	15	; () banked
  4610  0137EA  9119               	bcf	25,0,b	;volatile
  4611  0137EC                     l455:
  4612                           
  4613                           ; BSR set to: 15
  4614                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4615  0137EC  0100               	movlb	0	; () banked
  4616  0137EE  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4617  0137F0  D003               	goto	l456
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4621  0137F2  010F               	movlb	15	; () banked
  4622  0137F4  8319               	bsf	25,1,b	;volatile
  4623  0137F6  D002               	goto	l457
  4624  0137F8                     l456:
  4625                           
  4626                           ; BSR set to: 0
  4627                           ;inc\CANlib.h: 681: else
  4628                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4629  0137F8  010F               	movlb	15	; () banked
  4630  0137FA  9319               	bcf	25,1,b	;volatile
  4631  0137FC                     l457:
  4632                           
  4633                           ; BSR set to: 15
  4634                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4635  0137FC  0100               	movlb	0	; () banked
  4636  0137FE  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4637  013800  D003               	goto	l458
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4641  013802  010F               	movlb	15	; () banked
  4642  013804  8B19               	bsf	25,5,b	;volatile
  4643  013806  D002               	goto	l459
  4644  013808                     l458:
  4645                           
  4646                           ; BSR set to: 0
  4647                           ;inc\CANlib.h: 686: else
  4648                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4649  013808  010F               	movlb	15	; () banked
  4650  01380A  9B19               	bcf	25,5,b	;volatile
  4651  01380C                     l459:
  4652                           
  4653                           ; BSR set to: 15
  4654                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4655  01380C  0100               	movlb	0	; () banked
  4656  01380E  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4657  013810  D003               	goto	l460
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4661  013812  010F               	movlb	15	; () banked
  4662  013814  8D19               	bsf	25,6,b	;volatile
  4663  013816  D002               	goto	l461
  4664  013818                     l460:
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;inc\CANlib.h: 691: else
  4668                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4669  013818  010F               	movlb	15	; () banked
  4670  01381A  9D19               	bcf	25,6,b	;volatile
  4671  01381C                     l461:
  4672                           
  4673                           ; BSR set to: 15
  4674                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4675  01381C  0100               	movlb	0	; () banked
  4676  01381E  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4677  013820  D003               	goto	l462
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4681  013822  010F               	movlb	15	; () banked
  4682  013824  8F19               	bsf	25,7,b	;volatile
  4683  013826  D003               	goto	l5017
  4684  013828                     l462:
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;inc\CANlib.h: 696: else
  4688                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4689  013828  010F               	movlb	15	; () banked
  4690  01382A  9F19               	bcf	25,7,b	;volatile
  4691  01382C  D000               	goto	l5017
  4692  01382E                     l5017:
  4693                           
  4694                           ; BSR set to: 15
  4695                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4696  01382E  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  4697  013832  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4698  013836  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4699  01383A  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4700  01383E  0E16               	movlw	22
  4701  013840  D006               	goto	u5390
  4702  013842                     u5395:
  4703  013842  0100               	movlb	0	; () banked
  4704  013844  90D8               	bcf	status,0,c
  4705  013846  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4706  013848  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4707  01384A  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4708  01384C  3377               	rrcf	??_CANSetMask& (0+255),f,b
  4709  01384E                     u5390:
  4710  01384E  2EE8               	decfsz	wreg,f,c
  4711  013850  D7F8               	goto	u5395
  4712  013852  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4713  013856  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4714  01385A  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4715  01385E  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4719  013862  0100               	movlb	0	; () banked
  4720  013864  517C               	movf	CANSetMask@tamp& (0+255),w,b
  4721  013866  0100               	movlb	0	; () banked
  4722  013868  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4723  01386A  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4724  01386C  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4725  01386E  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4729  013870  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4730  013874  D000               	goto	l5023
  4731  013876                     l5023:
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;inc\CANlib.h: 702: }
  4735                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4736  013876  0E02               	movlw	2
  4737  013878  0100               	movlb	0	; () banked
  4738  01387A  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4739  01387C  A4D8               	btfss	status,2,c
  4740  01387E  0012               	return	
  4741                           
  4742                           ; BSR set to: 0
  4743  013880  0EF7               	movlw	247
  4744  013882  0100               	movlb	0	; () banked
  4745  013884  1976               	xorwf	CANSetMask@type& (0+255),w,b
  4746  013886  A4D8               	btfss	status,2,c
  4747  013888  0012               	return	
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;inc\CANlib.h: 705: {
  4751                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4752  01388A  0100               	movlb	0	; () banked
  4753  01388C  5172               	movf	CANSetMask@mask& (0+255),w,b
  4754  01388E  0100               	movlb	0	; () banked
  4755  013890  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4756  013892  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4757  013894  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4758  013896  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4762  013898  C07C  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4766  01389C  0E00               	movlw	0
  4767  01389E  0100               	movlb	0	; () banked
  4768  0138A0  1572               	andwf	CANSetMask@mask& (0+255),w,b
  4769  0138A2  0100               	movlb	0	; () banked
  4770  0138A4  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4771  0138A6  0EFF               	movlw	255
  4772  0138A8  0100               	movlb	0	; () banked
  4773  0138AA  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4774  0138AC  0100               	movlb	0	; () banked
  4775  0138AE  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4776  0138B0  0E00               	movlw	0
  4777  0138B2  0100               	movlb	0	; () banked
  4778  0138B4  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4779  0138B6  0100               	movlb	0	; () banked
  4780  0138B8  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4781  0138BA  0E00               	movlw	0
  4782  0138BC  0100               	movlb	0	; () banked
  4783  0138BE  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4784  0138C0  0100               	movlb	0	; () banked
  4785  0138C2  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4789  0138C4  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  4790  0138C8  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4791  0138CC  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4792  0138D0  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4793  0138D4  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  4794  0138D8  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  4795  0138DC  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  4796  0138E0  0100               	movlb	0	; () banked
  4797  0138E2  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  4798  0138E4  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4799  0138E8  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4800  0138EC  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4801  0138F0  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4805  0138F4  C07C  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4809  0138F8  0100               	movlb	0	; () banked
  4810  0138FA  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4811  0138FC  D003               	goto	l465
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4815  0138FE  010F               	movlb	15	; () banked
  4816  013900  811D               	bsf	29,0,b	;volatile
  4817  013902  D002               	goto	l466
  4818  013904                     l465:
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;inc\CANlib.h: 715: else
  4822                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4823  013904  010F               	movlb	15	; () banked
  4824  013906  911D               	bcf	29,0,b	;volatile
  4825  013908                     l466:
  4826                           
  4827                           ; BSR set to: 15
  4828                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4829  013908  0100               	movlb	0	; () banked
  4830  01390A  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4831  01390C  D003               	goto	l467
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4835  01390E  010F               	movlb	15	; () banked
  4836  013910  831D               	bsf	29,1,b	;volatile
  4837  013912  D002               	goto	l468
  4838  013914                     l467:
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;inc\CANlib.h: 720: else
  4842                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4843  013914  010F               	movlb	15	; () banked
  4844  013916  931D               	bcf	29,1,b	;volatile
  4845  013918                     l468:
  4846                           
  4847                           ; BSR set to: 15
  4848                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4849  013918  0100               	movlb	0	; () banked
  4850  01391A  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4851  01391C  D003               	goto	l469
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4855  01391E  010F               	movlb	15	; () banked
  4856  013920  8B1D               	bsf	29,5,b	;volatile
  4857  013922  D002               	goto	l470
  4858  013924                     l469:
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;inc\CANlib.h: 725: else
  4862                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4863  013924  010F               	movlb	15	; () banked
  4864  013926  9B1D               	bcf	29,5,b	;volatile
  4865  013928                     l470:
  4866                           
  4867                           ; BSR set to: 15
  4868                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4869  013928  0100               	movlb	0	; () banked
  4870  01392A  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4871  01392C  D003               	goto	l471
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4875  01392E  010F               	movlb	15	; () banked
  4876  013930  8D1D               	bsf	29,6,b	;volatile
  4877  013932  D002               	goto	l472
  4878  013934                     l471:
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;inc\CANlib.h: 730: else
  4882                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4883  013934  010F               	movlb	15	; () banked
  4884  013936  9D1D               	bcf	29,6,b	;volatile
  4885  013938                     l472:
  4886                           
  4887                           ; BSR set to: 15
  4888                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4889  013938  0100               	movlb	0	; () banked
  4890  01393A  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4891  01393C  D003               	goto	l473
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4895  01393E  010F               	movlb	15	; () banked
  4896  013940  8F1D               	bsf	29,7,b	;volatile
  4897  013942  D003               	goto	l5049
  4898  013944                     l473:
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;inc\CANlib.h: 735: else
  4902                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4903  013944  010F               	movlb	15	; () banked
  4904  013946  9F1D               	bcf	29,7,b	;volatile
  4905  013948  D000               	goto	l5049
  4906  01394A                     l5049:
  4907                           
  4908                           ; BSR set to: 15
  4909                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4910  01394A  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  4911  01394E  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4912  013952  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4913  013956  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4914  01395A  0E16               	movlw	22
  4915  01395C  D006               	goto	u5470
  4916  01395E                     u5475:
  4917  01395E  0100               	movlb	0	; () banked
  4918  013960  90D8               	bcf	status,0,c
  4919  013962  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4920  013964  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4921  013966  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4922  013968  3377               	rrcf	??_CANSetMask& (0+255),f,b
  4923  01396A                     u5470:
  4924  01396A  2EE8               	decfsz	wreg,f,c
  4925  01396C  D7F8               	goto	u5475
  4926  01396E  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4927  013972  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4928  013976  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4929  01397A  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4933  01397E  0100               	movlb	0	; () banked
  4934  013980  517C               	movf	CANSetMask@tamp& (0+255),w,b
  4935  013982  0100               	movlb	0	; () banked
  4936  013984  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4937  013986  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4938  013988  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4939  01398A  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4943  01398C  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4944  013990  0012               	return	
  4945                           
  4946                           ; BSR set to: 0
  4947                           
  4948                           ; BSR set to: 0
  4949  013992  0012               	return		;funcret
  4950  013994                     __end_of_CANSetMask:
  4951                           	opt stack 0
  4952                           tblptru	equ	0xFF8
  4953                           tblptrh	equ	0xFF7
  4954                           tblptrl	equ	0xFF6
  4955                           tablat	equ	0xFF5
  4956                           prodh	equ	0xFF4
  4957                           prodl	equ	0xFF3
  4958                           intcon	equ	0xFF2
  4959                           postinc0	equ	0xFEE
  4960                           wreg	equ	0xFE8
  4961                           postinc2	equ	0xFDE
  4962                           fsr2h	equ	0xFDA
  4963                           fsr2l	equ	0xFD9
  4964                           status	equ	0xFD8
  4965                           
  4966 ;; *************** function _CANSetFilter *****************
  4967 ;; Defined at:
  4968 ;;		line 748 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;  numBuffer       1    wreg     enum E16965
  4971 ;;  filter          4   18[BANK0 ] unsigned long 
  4972 ;;  type            1   22[BANK0 ] enum E16928
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  numBuffer       1   27[BANK0 ] enum E16965
  4975 ;;  tamp            4   28[BANK0 ] unsigned long 
  4976 ;; Return value:  Size  Location     Type
  4977 ;;		None               void
  4978 ;; Registers used:
  4979 ;;		wreg, status,2, status,0
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4985 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4986 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4987 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4988 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4989 ;;Total ram usage:       14 bytes
  4990 ;; Hardware stack levels used:    1
  4991 ;; Hardware stack levels required when called:    3
  4992 ;; This function calls:
  4993 ;;		Nothing
  4994 ;; This function is called by:
  4995 ;;		_CANInitialize
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	text4
  5000  010000                     __ptext4:
  5001                           	opt stack 0
  5002  010000                     _CANSetFilter:
  5003                           	opt stack 25
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;incstack = 0
  5007                           ;CANSetFilter@numBuffer stored from wreg
  5008  010000  0100               	movlb	0	; () banked
  5009  010002  6F7B               	movwf	CANSetFilter@numBuffer& (0+255),b
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;inc\CANlib.h: 750: unsigned long tamp;
  5013                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  5014  010004  0100               	movlb	0	; () banked
  5015  010006  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5016  010008  0100               	movlb	0	; () banked
  5017  01000A  A4D8               	btfss	status,2,c
  5018  01000C  D059               	goto	l5073
  5019                           
  5020                           ; BSR set to: 0
  5021  01000E  0100               	movlb	0	; () banked
  5022  010010  2976               	incf	CANSetFilter@type& (0+255),w,b
  5023  010012  A4D8               	btfss	status,2,c
  5024  010014  D055               	goto	l5073
  5025                           
  5026                           ; BSR set to: 0
  5027                           ;inc\CANlib.h: 753: {
  5028                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  5029  010016  010F               	movlb	15	; () banked
  5030  010018  9701               	bcf	1,3,b	;volatile
  5031                           
  5032                           ; BSR set to: 15
  5033                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  5034  01001A  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5035  01001E  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5036  010022  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5037  010026  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5038  01002A  0E04               	movlw	4
  5039  01002C  D006               	goto	u5500
  5040  01002E                     u5505:
  5041  01002E  0100               	movlb	0	; () banked
  5042  010030  90D8               	bcf	status,0,c
  5043  010032  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5044  010034  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5045  010036  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5046  010038  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5047  01003A                     u5500:
  5048  01003A  2EE8               	decfsz	wreg,f,c
  5049  01003C  D7F8               	goto	u5505
  5050  01003E  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5051  010042  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5052  010046  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5053  01004A  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  5057  01004E  0100               	movlb	0	; () banked
  5058  010050  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5059  010052  0100               	movlb	0	; () banked
  5060  010054  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5061  010056  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5062  010058  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5063  01005A  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  5067  01005C  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  5071  010060  0E07               	movlw	7
  5072  010062  0100               	movlb	0	; () banked
  5073  010064  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5074  010066  0100               	movlb	0	; () banked
  5075  010068  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5076  01006A  0E00               	movlw	0
  5077  01006C  0100               	movlb	0	; () banked
  5078  01006E  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5079  010070  0100               	movlb	0	; () banked
  5080  010072  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5081  010074  0E00               	movlw	0
  5082  010076  0100               	movlb	0	; () banked
  5083  010078  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5084  01007A  0100               	movlb	0	; () banked
  5085  01007C  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5086  01007E  0E00               	movlw	0
  5087  010080  0100               	movlb	0	; () banked
  5088  010082  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5089  010084  0100               	movlb	0	; () banked
  5090  010086  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  5094  010088  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5095  01008C  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5096  010090  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5097  010094  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5098  010098  0E05               	movlw	5
  5099  01009A                     u5515:
  5100  01009A  90D8               	bcf	status,0,c
  5101  01009C  0100               	movlb	0	; () banked
  5102  01009E  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  5103  0100A0  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5104  0100A2  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5105  0100A4  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5106  0100A6  2EE8               	decfsz	wreg,f,c
  5107  0100A8  D7F8               	goto	u5515
  5108  0100AA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5109  0100AE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5110  0100B2  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5111  0100B6  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  5115  0100BA  C07C  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  5116  0100BE  D000               	goto	l5073
  5117  0100C0                     l5073:
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;inc\CANlib.h: 763: }
  5121                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  5122  0100C0  0100               	movlb	0	; () banked
  5123  0100C2  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5124  0100C4  A4D8               	btfss	status,2,c
  5125  0100C6  D059               	goto	l5091
  5126                           
  5127                           ; BSR set to: 0
  5128  0100C8  0100               	movlb	0	; () banked
  5129  0100CA  2976               	incf	CANSetFilter@type& (0+255),w,b
  5130  0100CC  A4D8               	btfss	status,2,c
  5131  0100CE  D055               	goto	l5091
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;inc\CANlib.h: 766: {
  5135                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  5136  0100D0  010F               	movlb	15	; () banked
  5137  0100D2  9705               	bcf	5,3,b	;volatile
  5138                           
  5139                           ; BSR set to: 15
  5140                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  5141  0100D4  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5142  0100D8  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5143  0100DC  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5144  0100E0  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5145  0100E4  0E04               	movlw	4
  5146  0100E6  D006               	goto	u5540
  5147  0100E8                     u5545:
  5148  0100E8  0100               	movlb	0	; () banked
  5149  0100EA  90D8               	bcf	status,0,c
  5150  0100EC  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5151  0100EE  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5152  0100F0  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5153  0100F2  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5154  0100F4                     u5540:
  5155  0100F4  2EE8               	decfsz	wreg,f,c
  5156  0100F6  D7F8               	goto	u5545
  5157  0100F8  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5158  0100FC  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5159  010100  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5160  010104  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  5164  010108  0100               	movlb	0	; () banked
  5165  01010A  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5166  01010C  0100               	movlb	0	; () banked
  5167  01010E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5168  010110  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5169  010112  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5170  010114  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  5174  010116  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  5178  01011A  0E07               	movlw	7
  5179  01011C  0100               	movlb	0	; () banked
  5180  01011E  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5181  010120  0100               	movlb	0	; () banked
  5182  010122  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5183  010124  0E00               	movlw	0
  5184  010126  0100               	movlb	0	; () banked
  5185  010128  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5186  01012A  0100               	movlb	0	; () banked
  5187  01012C  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5188  01012E  0E00               	movlw	0
  5189  010130  0100               	movlb	0	; () banked
  5190  010132  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5191  010134  0100               	movlb	0	; () banked
  5192  010136  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5193  010138  0E00               	movlw	0
  5194  01013A  0100               	movlb	0	; () banked
  5195  01013C  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5196  01013E  0100               	movlb	0	; () banked
  5197  010140  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  5201  010142  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5202  010146  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5203  01014A  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5204  01014E  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5205  010152  0E05               	movlw	5
  5206  010154                     u5555:
  5207  010154  90D8               	bcf	status,0,c
  5208  010156  0100               	movlb	0	; () banked
  5209  010158  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  5210  01015A  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5211  01015C  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5212  01015E  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5213  010160  2EE8               	decfsz	wreg,f,c
  5214  010162  D7F8               	goto	u5555
  5215  010164  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5216  010168  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5217  01016C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5218  010170  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  5222  010174  C07C  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  5223  010178  D000               	goto	l5091
  5224  01017A                     l5091:
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;inc\CANlib.h: 776: }
  5228                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  5229  01017A  0E02               	movlw	2
  5230  01017C  0100               	movlb	0	; () banked
  5231  01017E  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5232  010180  A4D8               	btfss	status,2,c
  5233  010182  D059               	goto	l5109
  5234                           
  5235                           ; BSR set to: 0
  5236  010184  0100               	movlb	0	; () banked
  5237  010186  2976               	incf	CANSetFilter@type& (0+255),w,b
  5238  010188  A4D8               	btfss	status,2,c
  5239  01018A  D055               	goto	l5109
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;inc\CANlib.h: 779: {
  5243                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  5244  01018C  010F               	movlb	15	; () banked
  5245  01018E  9709               	bcf	9,3,b	;volatile
  5246                           
  5247                           ; BSR set to: 15
  5248                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  5249  010190  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5250  010194  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5251  010198  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5252  01019C  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5253  0101A0  0E04               	movlw	4
  5254  0101A2  D006               	goto	u5580
  5255  0101A4                     u5585:
  5256  0101A4  0100               	movlb	0	; () banked
  5257  0101A6  90D8               	bcf	status,0,c
  5258  0101A8  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5259  0101AA  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5260  0101AC  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5261  0101AE  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5262  0101B0                     u5580:
  5263  0101B0  2EE8               	decfsz	wreg,f,c
  5264  0101B2  D7F8               	goto	u5585
  5265  0101B4  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5266  0101B8  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5267  0101BC  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5268  0101C0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5269                           
  5270                           ; BSR set to: 0
  5271                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  5272  0101C4  0100               	movlb	0	; () banked
  5273  0101C6  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5274  0101C8  0100               	movlb	0	; () banked
  5275  0101CA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5276  0101CC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5277  0101CE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5278  0101D0  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  5282  0101D2  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  5286  0101D6  0E07               	movlw	7
  5287  0101D8  0100               	movlb	0	; () banked
  5288  0101DA  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5289  0101DC  0100               	movlb	0	; () banked
  5290  0101DE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5291  0101E0  0E00               	movlw	0
  5292  0101E2  0100               	movlb	0	; () banked
  5293  0101E4  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5294  0101E6  0100               	movlb	0	; () banked
  5295  0101E8  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5296  0101EA  0E00               	movlw	0
  5297  0101EC  0100               	movlb	0	; () banked
  5298  0101EE  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5299  0101F0  0100               	movlb	0	; () banked
  5300  0101F2  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5301  0101F4  0E00               	movlw	0
  5302  0101F6  0100               	movlb	0	; () banked
  5303  0101F8  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5304  0101FA  0100               	movlb	0	; () banked
  5305  0101FC  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  5309  0101FE  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5310  010202  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5311  010206  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5312  01020A  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5313  01020E  0E05               	movlw	5
  5314  010210                     u5595:
  5315  010210  90D8               	bcf	status,0,c
  5316  010212  0100               	movlb	0	; () banked
  5317  010214  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  5318  010216  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5319  010218  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5320  01021A  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5321  01021C  2EE8               	decfsz	wreg,f,c
  5322  01021E  D7F8               	goto	u5595
  5323  010220  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5324  010224  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5325  010228  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5326  01022C  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  5330  010230  C07C  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  5331  010234  D000               	goto	l5109
  5332  010236                     l5109:
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;inc\CANlib.h: 789: }
  5336                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  5337  010236  0E03               	movlw	3
  5338  010238  0100               	movlb	0	; () banked
  5339  01023A  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5340  01023C  A4D8               	btfss	status,2,c
  5341  01023E  D059               	goto	l5127
  5342                           
  5343                           ; BSR set to: 0
  5344  010240  0100               	movlb	0	; () banked
  5345  010242  2976               	incf	CANSetFilter@type& (0+255),w,b
  5346  010244  A4D8               	btfss	status,2,c
  5347  010246  D055               	goto	l5127
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;inc\CANlib.h: 792: {
  5351                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  5352  010248  010F               	movlb	15	; () banked
  5353  01024A  970D               	bcf	13,3,b	;volatile
  5354                           
  5355                           ; BSR set to: 15
  5356                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  5357  01024C  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5358  010250  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5359  010254  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5360  010258  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5361  01025C  0E04               	movlw	4
  5362  01025E  D006               	goto	u5620
  5363  010260                     u5625:
  5364  010260  0100               	movlb	0	; () banked
  5365  010262  90D8               	bcf	status,0,c
  5366  010264  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5367  010266  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5368  010268  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5369  01026A  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5370  01026C                     u5620:
  5371  01026C  2EE8               	decfsz	wreg,f,c
  5372  01026E  D7F8               	goto	u5625
  5373  010270  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5374  010274  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5375  010278  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5376  01027C  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  5380  010280  0100               	movlb	0	; () banked
  5381  010282  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5382  010284  0100               	movlb	0	; () banked
  5383  010286  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5384  010288  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5385  01028A  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5386  01028C  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  5390  01028E  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  5394  010292  0E07               	movlw	7
  5395  010294  0100               	movlb	0	; () banked
  5396  010296  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5397  010298  0100               	movlb	0	; () banked
  5398  01029A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5399  01029C  0E00               	movlw	0
  5400  01029E  0100               	movlb	0	; () banked
  5401  0102A0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5402  0102A2  0100               	movlb	0	; () banked
  5403  0102A4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5404  0102A6  0E00               	movlw	0
  5405  0102A8  0100               	movlb	0	; () banked
  5406  0102AA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5407  0102AC  0100               	movlb	0	; () banked
  5408  0102AE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5409  0102B0  0E00               	movlw	0
  5410  0102B2  0100               	movlb	0	; () banked
  5411  0102B4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5412  0102B6  0100               	movlb	0	; () banked
  5413  0102B8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  5417  0102BA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5418  0102BE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5419  0102C2  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5420  0102C6  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5421  0102CA  0E05               	movlw	5
  5422  0102CC                     u5635:
  5423  0102CC  90D8               	bcf	status,0,c
  5424  0102CE  0100               	movlb	0	; () banked
  5425  0102D0  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  5426  0102D2  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5427  0102D4  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5428  0102D6  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5429  0102D8  2EE8               	decfsz	wreg,f,c
  5430  0102DA  D7F8               	goto	u5635
  5431  0102DC  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5432  0102E0  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5433  0102E4  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5434  0102E8  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5438  0102EC  C07C  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5439  0102F0  D000               	goto	l5127
  5440  0102F2                     l5127:
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;inc\CANlib.h: 802: }
  5444                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5445  0102F2  0E04               	movlw	4
  5446  0102F4  0100               	movlb	0	; () banked
  5447  0102F6  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5448  0102F8  A4D8               	btfss	status,2,c
  5449  0102FA  D059               	goto	l5145
  5450                           
  5451                           ; BSR set to: 0
  5452  0102FC  0100               	movlb	0	; () banked
  5453  0102FE  2976               	incf	CANSetFilter@type& (0+255),w,b
  5454  010300  A4D8               	btfss	status,2,c
  5455  010302  D055               	goto	l5145
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;inc\CANlib.h: 805: {
  5459                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5460  010304  010F               	movlb	15	; () banked
  5461  010306  9711               	bcf	17,3,b	;volatile
  5462                           
  5463                           ; BSR set to: 15
  5464                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  5465  010308  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5466  01030C  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5467  010310  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5468  010314  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5469  010318  0E04               	movlw	4
  5470  01031A  D006               	goto	u5660
  5471  01031C                     u5665:
  5472  01031C  0100               	movlb	0	; () banked
  5473  01031E  90D8               	bcf	status,0,c
  5474  010320  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5475  010322  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5476  010324  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5477  010326  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5478  010328                     u5660:
  5479  010328  2EE8               	decfsz	wreg,f,c
  5480  01032A  D7F8               	goto	u5665
  5481  01032C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5482  010330  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5483  010334  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5484  010338  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5488  01033C  0100               	movlb	0	; () banked
  5489  01033E  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5490  010340  0100               	movlb	0	; () banked
  5491  010342  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5492  010344  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5493  010346  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5494  010348  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5498  01034A  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5502  01034E  0E07               	movlw	7
  5503  010350  0100               	movlb	0	; () banked
  5504  010352  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5505  010354  0100               	movlb	0	; () banked
  5506  010356  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5507  010358  0E00               	movlw	0
  5508  01035A  0100               	movlb	0	; () banked
  5509  01035C  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5510  01035E  0100               	movlb	0	; () banked
  5511  010360  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5512  010362  0E00               	movlw	0
  5513  010364  0100               	movlb	0	; () banked
  5514  010366  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5515  010368  0100               	movlb	0	; () banked
  5516  01036A  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5517  01036C  0E00               	movlw	0
  5518  01036E  0100               	movlb	0	; () banked
  5519  010370  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5520  010372  0100               	movlb	0	; () banked
  5521  010374  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5525  010376  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5526  01037A  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5527  01037E  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5528  010382  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5529  010386  0E05               	movlw	5
  5530  010388                     u5675:
  5531  010388  90D8               	bcf	status,0,c
  5532  01038A  0100               	movlb	0	; () banked
  5533  01038C  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  5534  01038E  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5535  010390  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5536  010392  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5537  010394  2EE8               	decfsz	wreg,f,c
  5538  010396  D7F8               	goto	u5675
  5539  010398  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5540  01039C  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5541  0103A0  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5542  0103A4  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5546  0103A8  C07C  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5547  0103AC  D000               	goto	l5145
  5548  0103AE                     l5145:
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;inc\CANlib.h: 815: }
  5552                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5553  0103AE  0E05               	movlw	5
  5554  0103B0  0100               	movlb	0	; () banked
  5555  0103B2  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5556  0103B4  A4D8               	btfss	status,2,c
  5557  0103B6  D059               	goto	l5163
  5558                           
  5559                           ; BSR set to: 0
  5560  0103B8  0100               	movlb	0	; () banked
  5561  0103BA  2976               	incf	CANSetFilter@type& (0+255),w,b
  5562  0103BC  A4D8               	btfss	status,2,c
  5563  0103BE  D055               	goto	l5163
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;inc\CANlib.h: 818: {
  5567                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5568  0103C0  010F               	movlb	15	; () banked
  5569  0103C2  9715               	bcf	21,3,b	;volatile
  5570                           
  5571                           ; BSR set to: 15
  5572                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5573  0103C4  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5574  0103C8  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5575  0103CC  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5576  0103D0  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5577  0103D4  0E04               	movlw	4
  5578  0103D6  D006               	goto	u5700
  5579  0103D8                     u5705:
  5580  0103D8  0100               	movlb	0	; () banked
  5581  0103DA  90D8               	bcf	status,0,c
  5582  0103DC  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5583  0103DE  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5584  0103E0  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5585  0103E2  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5586  0103E4                     u5700:
  5587  0103E4  2EE8               	decfsz	wreg,f,c
  5588  0103E6  D7F8               	goto	u5705
  5589  0103E8  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5590  0103EC  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5591  0103F0  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5592  0103F4  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5596  0103F8  0100               	movlb	0	; () banked
  5597  0103FA  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5598  0103FC  0100               	movlb	0	; () banked
  5599  0103FE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5600  010400  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5601  010402  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5602  010404  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5603                           
  5604                           ; BSR set to: 0
  5605                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5606  010406  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5610  01040A  0E07               	movlw	7
  5611  01040C  0100               	movlb	0	; () banked
  5612  01040E  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5613  010410  0100               	movlb	0	; () banked
  5614  010412  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5615  010414  0E00               	movlw	0
  5616  010416  0100               	movlb	0	; () banked
  5617  010418  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5618  01041A  0100               	movlb	0	; () banked
  5619  01041C  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5620  01041E  0E00               	movlw	0
  5621  010420  0100               	movlb	0	; () banked
  5622  010422  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5623  010424  0100               	movlb	0	; () banked
  5624  010426  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5625  010428  0E00               	movlw	0
  5626  01042A  0100               	movlb	0	; () banked
  5627  01042C  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5628  01042E  0100               	movlb	0	; () banked
  5629  010430  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5633  010432  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5634  010436  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5635  01043A  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5636  01043E  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5637  010442  0E05               	movlw	5
  5638  010444                     u5715:
  5639  010444  90D8               	bcf	status,0,c
  5640  010446  0100               	movlb	0	; () banked
  5641  010448  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  5642  01044A  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5643  01044C  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5644  01044E  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5645  010450  2EE8               	decfsz	wreg,f,c
  5646  010452  D7F8               	goto	u5715
  5647  010454  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5648  010458  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5649  01045C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5650  010460  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5654  010464  C07C  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5655  010468  D000               	goto	l5163
  5656  01046A                     l5163:
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;inc\CANlib.h: 828: }
  5660                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5661  01046A  0100               	movlb	0	; () banked
  5662  01046C  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5663  01046E  0100               	movlb	0	; () banked
  5664  010470  A4D8               	btfss	status,2,c
  5665  010472  D08B               	goto	l5197
  5666                           
  5667                           ; BSR set to: 0
  5668  010474  0EF7               	movlw	247
  5669  010476  0100               	movlb	0	; () banked
  5670  010478  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5671  01047A  A4D8               	btfss	status,2,c
  5672  01047C  D086               	goto	l5197
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;inc\CANlib.h: 832: {
  5676                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5677  01047E  010F               	movlb	15	; () banked
  5678  010480  8701               	bsf	1,3,b	;volatile
  5679                           
  5680                           ; BSR set to: 15
  5681                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5682  010482  0100               	movlb	0	; () banked
  5683  010484  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5684  010486  0100               	movlb	0	; () banked
  5685  010488  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5686  01048A  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5687  01048C  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5688  01048E  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5689                           
  5690                           ; BSR set to: 0
  5691                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5692  010490  C07C  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5696  010494  0E00               	movlw	0
  5697  010496  0100               	movlb	0	; () banked
  5698  010498  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5699  01049A  0100               	movlb	0	; () banked
  5700  01049C  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5701  01049E  0EFF               	movlw	255
  5702  0104A0  0100               	movlb	0	; () banked
  5703  0104A2  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5704  0104A4  0100               	movlb	0	; () banked
  5705  0104A6  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5706  0104A8  0E00               	movlw	0
  5707  0104AA  0100               	movlb	0	; () banked
  5708  0104AC  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5709  0104AE  0100               	movlb	0	; () banked
  5710  0104B0  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5711  0104B2  0E00               	movlw	0
  5712  0104B4  0100               	movlb	0	; () banked
  5713  0104B6  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5714  0104B8  0100               	movlb	0	; () banked
  5715  0104BA  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5719  0104BC  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5720  0104C0  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5721  0104C4  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5722  0104C8  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5723  0104CC  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5724  0104D0  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5725  0104D4  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5726  0104D8  0100               	movlb	0	; () banked
  5727  0104DA  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5728  0104DC  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5729  0104E0  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5730  0104E4  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5731  0104E8  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5735  0104EC  C07C  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5739  0104F0  0100               	movlb	0	; () banked
  5740  0104F2  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5741  0104F4  D003               	goto	l485
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5745  0104F6  010F               	movlb	15	; () banked
  5746  0104F8  8101               	bsf	1,0,b	;volatile
  5747  0104FA  D002               	goto	l486
  5748  0104FC                     l485:
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;inc\CANlib.h: 844: else
  5752                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5753  0104FC  010F               	movlb	15	; () banked
  5754  0104FE  9101               	bcf	1,0,b	;volatile
  5755  010500                     l486:
  5756                           
  5757                           ; BSR set to: 15
  5758                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5759  010500  0100               	movlb	0	; () banked
  5760  010502  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5761  010504  D003               	goto	l487
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5765  010506  010F               	movlb	15	; () banked
  5766  010508  8301               	bsf	1,1,b	;volatile
  5767  01050A  D002               	goto	l488
  5768  01050C                     l487:
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;inc\CANlib.h: 849: else
  5772                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5773  01050C  010F               	movlb	15	; () banked
  5774  01050E  9301               	bcf	1,1,b	;volatile
  5775  010510                     l488:
  5776                           
  5777                           ; BSR set to: 15
  5778                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5779  010510  0100               	movlb	0	; () banked
  5780  010512  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5781  010514  D003               	goto	l489
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5785  010516  010F               	movlb	15	; () banked
  5786  010518  8B01               	bsf	1,5,b	;volatile
  5787  01051A  D002               	goto	l490
  5788  01051C                     l489:
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;inc\CANlib.h: 854: else
  5792                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5793  01051C  010F               	movlb	15	; () banked
  5794  01051E  9B01               	bcf	1,5,b	;volatile
  5795  010520                     l490:
  5796                           
  5797                           ; BSR set to: 15
  5798                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5799  010520  0100               	movlb	0	; () banked
  5800  010522  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5801  010524  D003               	goto	l491
  5802                           
  5803                           ; BSR set to: 0
  5804                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5805  010526  010F               	movlb	15	; () banked
  5806  010528  8D01               	bsf	1,6,b	;volatile
  5807  01052A  D002               	goto	l492
  5808  01052C                     l491:
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;inc\CANlib.h: 859: else
  5812                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5813  01052C  010F               	movlb	15	; () banked
  5814  01052E  9D01               	bcf	1,6,b	;volatile
  5815  010530                     l492:
  5816                           
  5817                           ; BSR set to: 15
  5818                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5819  010530  0100               	movlb	0	; () banked
  5820  010532  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5821  010534  D003               	goto	l493
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5825  010536  010F               	movlb	15	; () banked
  5826  010538  8F01               	bsf	1,7,b	;volatile
  5827  01053A  D003               	goto	l5191
  5828  01053C                     l493:
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;inc\CANlib.h: 864: else
  5832                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5833  01053C  010F               	movlb	15	; () banked
  5834  01053E  9F01               	bcf	1,7,b	;volatile
  5835  010540  D000               	goto	l5191
  5836  010542                     l5191:
  5837                           
  5838                           ; BSR set to: 15
  5839                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5840  010542  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5841  010546  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5842  01054A  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5843  01054E  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5844  010552  0E16               	movlw	22
  5845  010554  D006               	goto	u5790
  5846  010556                     u5795:
  5847  010556  0100               	movlb	0	; () banked
  5848  010558  90D8               	bcf	status,0,c
  5849  01055A  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5850  01055C  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5851  01055E  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5852  010560  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5853  010562                     u5790:
  5854  010562  2EE8               	decfsz	wreg,f,c
  5855  010564  D7F8               	goto	u5795
  5856  010566  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5857  01056A  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5858  01056E  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5859  010572  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5860                           
  5861                           ; BSR set to: 0
  5862                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5863  010576  0100               	movlb	0	; () banked
  5864  010578  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5865  01057A  0100               	movlb	0	; () banked
  5866  01057C  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5867  01057E  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5868  010580  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5869  010582  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5873  010584  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5874  010588  D000               	goto	l5197
  5875  01058A                     l5197:
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;inc\CANlib.h: 870: }
  5879                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5880  01058A  0100               	movlb	0	; () banked
  5881  01058C  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5882  01058E  A4D8               	btfss	status,2,c
  5883  010590  D08B               	goto	l5231
  5884                           
  5885                           ; BSR set to: 0
  5886  010592  0EF7               	movlw	247
  5887  010594  0100               	movlb	0	; () banked
  5888  010596  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5889  010598  A4D8               	btfss	status,2,c
  5890  01059A  D086               	goto	l5231
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;inc\CANlib.h: 873: {
  5894                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5895  01059C  010F               	movlb	15	; () banked
  5896  01059E  8705               	bsf	5,3,b	;volatile
  5897                           
  5898                           ; BSR set to: 15
  5899                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5900  0105A0  0100               	movlb	0	; () banked
  5901  0105A2  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5902  0105A4  0100               	movlb	0	; () banked
  5903  0105A6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5904  0105A8  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5905  0105AA  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5906  0105AC  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5907                           
  5908                           ; BSR set to: 0
  5909                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5910  0105AE  C07C  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5914  0105B2  0E00               	movlw	0
  5915  0105B4  0100               	movlb	0	; () banked
  5916  0105B6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5917  0105B8  0100               	movlb	0	; () banked
  5918  0105BA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5919  0105BC  0EFF               	movlw	255
  5920  0105BE  0100               	movlb	0	; () banked
  5921  0105C0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5922  0105C2  0100               	movlb	0	; () banked
  5923  0105C4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5924  0105C6  0E00               	movlw	0
  5925  0105C8  0100               	movlb	0	; () banked
  5926  0105CA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5927  0105CC  0100               	movlb	0	; () banked
  5928  0105CE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5929  0105D0  0E00               	movlw	0
  5930  0105D2  0100               	movlb	0	; () banked
  5931  0105D4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5932  0105D6  0100               	movlb	0	; () banked
  5933  0105D8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5937  0105DA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5938  0105DE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5939  0105E2  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5940  0105E6  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5941  0105EA  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5942  0105EE  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5943  0105F2  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5944  0105F6  0100               	movlb	0	; () banked
  5945  0105F8  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5946  0105FA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5947  0105FE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5948  010602  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5949  010606  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5953  01060A  C07C  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5957  01060E  0100               	movlb	0	; () banked
  5958  010610  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5959  010612  D003               	goto	l496
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5963  010614  010F               	movlb	15	; () banked
  5964  010616  8105               	bsf	5,0,b	;volatile
  5965  010618  D002               	goto	l497
  5966  01061A                     l496:
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;inc\CANlib.h: 885: else
  5970                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5971  01061A  010F               	movlb	15	; () banked
  5972  01061C  9105               	bcf	5,0,b	;volatile
  5973  01061E                     l497:
  5974                           
  5975                           ; BSR set to: 15
  5976                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5977  01061E  0100               	movlb	0	; () banked
  5978  010620  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5979  010622  D003               	goto	l498
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5983  010624  010F               	movlb	15	; () banked
  5984  010626  8305               	bsf	5,1,b	;volatile
  5985  010628  D002               	goto	l499
  5986  01062A                     l498:
  5987                           
  5988                           ; BSR set to: 0
  5989                           ;inc\CANlib.h: 890: else
  5990                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5991  01062A  010F               	movlb	15	; () banked
  5992  01062C  9305               	bcf	5,1,b	;volatile
  5993  01062E                     l499:
  5994                           
  5995                           ; BSR set to: 15
  5996                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5997  01062E  0100               	movlb	0	; () banked
  5998  010630  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5999  010632  D003               	goto	l500
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  6003  010634  010F               	movlb	15	; () banked
  6004  010636  8B05               	bsf	5,5,b	;volatile
  6005  010638  D002               	goto	l501
  6006  01063A                     l500:
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;inc\CANlib.h: 895: else
  6010                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  6011  01063A  010F               	movlb	15	; () banked
  6012  01063C  9B05               	bcf	5,5,b	;volatile
  6013  01063E                     l501:
  6014                           
  6015                           ; BSR set to: 15
  6016                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  6017  01063E  0100               	movlb	0	; () banked
  6018  010640  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6019  010642  D003               	goto	l502
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  6023  010644  010F               	movlb	15	; () banked
  6024  010646  8D05               	bsf	5,6,b	;volatile
  6025  010648  D002               	goto	l503
  6026  01064A                     l502:
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;inc\CANlib.h: 900: else
  6030                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  6031  01064A  010F               	movlb	15	; () banked
  6032  01064C  9D05               	bcf	5,6,b	;volatile
  6033  01064E                     l503:
  6034                           
  6035                           ; BSR set to: 15
  6036                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  6037  01064E  0100               	movlb	0	; () banked
  6038  010650  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6039  010652  D003               	goto	l504
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  6043  010654  010F               	movlb	15	; () banked
  6044  010656  8F05               	bsf	5,7,b	;volatile
  6045  010658  D003               	goto	l5225
  6046  01065A                     l504:
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;inc\CANlib.h: 905: else
  6050                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  6051  01065A  010F               	movlb	15	; () banked
  6052  01065C  9F05               	bcf	5,7,b	;volatile
  6053  01065E  D000               	goto	l5225
  6054  010660                     l5225:
  6055                           
  6056                           ; BSR set to: 15
  6057                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  6058  010660  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  6059  010664  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6060  010668  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6061  01066C  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6062  010670  0E16               	movlw	22
  6063  010672  D006               	goto	u5870
  6064  010674                     u5875:
  6065  010674  0100               	movlb	0	; () banked
  6066  010676  90D8               	bcf	status,0,c
  6067  010678  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6068  01067A  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6069  01067C  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6070  01067E  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  6071  010680                     u5870:
  6072  010680  2EE8               	decfsz	wreg,f,c
  6073  010682  D7F8               	goto	u5875
  6074  010684  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6075  010688  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6076  01068C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6077  010690  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6078                           
  6079                           ; BSR set to: 0
  6080                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  6081  010694  0100               	movlb	0	; () banked
  6082  010696  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  6083  010698  0100               	movlb	0	; () banked
  6084  01069A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6085  01069C  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6086  01069E  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6087  0106A0  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  6091  0106A2  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  6092  0106A6  D000               	goto	l5231
  6093  0106A8                     l5231:
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;inc\CANlib.h: 911: }
  6097                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  6098  0106A8  0E02               	movlw	2
  6099  0106AA  0100               	movlb	0	; () banked
  6100  0106AC  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6101  0106AE  A4D8               	btfss	status,2,c
  6102  0106B0  D08B               	goto	l5265
  6103                           
  6104                           ; BSR set to: 0
  6105  0106B2  0EF7               	movlw	247
  6106  0106B4  0100               	movlb	0	; () banked
  6107  0106B6  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  6108  0106B8  A4D8               	btfss	status,2,c
  6109  0106BA  D086               	goto	l5265
  6110                           
  6111                           ; BSR set to: 0
  6112                           ;inc\CANlib.h: 915: {
  6113                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  6114  0106BC  010F               	movlb	15	; () banked
  6115  0106BE  8709               	bsf	9,3,b	;volatile
  6116                           
  6117                           ; BSR set to: 15
  6118                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  6119  0106C0  0100               	movlb	0	; () banked
  6120  0106C2  5172               	movf	CANSetFilter@filter& (0+255),w,b
  6121  0106C4  0100               	movlb	0	; () banked
  6122  0106C6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6123  0106C8  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6124  0106CA  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6125  0106CC  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  6129  0106CE  C07C  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  6133  0106D2  0E00               	movlw	0
  6134  0106D4  0100               	movlb	0	; () banked
  6135  0106D6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  6136  0106D8  0100               	movlb	0	; () banked
  6137  0106DA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6138  0106DC  0EFF               	movlw	255
  6139  0106DE  0100               	movlb	0	; () banked
  6140  0106E0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6141  0106E2  0100               	movlb	0	; () banked
  6142  0106E4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6143  0106E6  0E00               	movlw	0
  6144  0106E8  0100               	movlb	0	; () banked
  6145  0106EA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6146  0106EC  0100               	movlb	0	; () banked
  6147  0106EE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6148  0106F0  0E00               	movlw	0
  6149  0106F2  0100               	movlb	0	; () banked
  6150  0106F4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6151  0106F6  0100               	movlb	0	; () banked
  6152  0106F8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6153                           
  6154                           ; BSR set to: 0
  6155                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  6156  0106FA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  6157  0106FE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6158  010702  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6159  010706  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6160  01070A  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  6161  01070E  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6162  010712  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6163  010716  0100               	movlb	0	; () banked
  6164  010718  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  6165  01071A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6166  01071E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6167  010722  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6168  010726  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6169                           
  6170                           ; BSR set to: 0
  6171                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  6172  01072A  C07C  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  6176  01072E  0100               	movlb	0	; () banked
  6177  010730  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6178  010732  D003               	goto	l507
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  6182  010734  010F               	movlb	15	; () banked
  6183  010736  8109               	bsf	9,0,b	;volatile
  6184  010738  D002               	goto	l508
  6185  01073A                     l507:
  6186                           
  6187                           ; BSR set to: 0
  6188                           ;inc\CANlib.h: 927: else
  6189                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  6190  01073A  010F               	movlb	15	; () banked
  6191  01073C  9109               	bcf	9,0,b	;volatile
  6192  01073E                     l508:
  6193                           
  6194                           ; BSR set to: 15
  6195                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  6196  01073E  0100               	movlb	0	; () banked
  6197  010740  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6198  010742  D003               	goto	l509
  6199                           
  6200                           ; BSR set to: 0
  6201                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  6202  010744  010F               	movlb	15	; () banked
  6203  010746  8309               	bsf	9,1,b	;volatile
  6204  010748  D002               	goto	l510
  6205  01074A                     l509:
  6206                           
  6207                           ; BSR set to: 0
  6208                           ;inc\CANlib.h: 932: else
  6209                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  6210  01074A  010F               	movlb	15	; () banked
  6211  01074C  9309               	bcf	9,1,b	;volatile
  6212  01074E                     l510:
  6213                           
  6214                           ; BSR set to: 15
  6215                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  6216  01074E  0100               	movlb	0	; () banked
  6217  010750  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6218  010752  D003               	goto	l511
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  6222  010754  010F               	movlb	15	; () banked
  6223  010756  8B09               	bsf	9,5,b	;volatile
  6224  010758  D002               	goto	l512
  6225  01075A                     l511:
  6226                           
  6227                           ; BSR set to: 0
  6228                           ;inc\CANlib.h: 937: else
  6229                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  6230  01075A  010F               	movlb	15	; () banked
  6231  01075C  9B09               	bcf	9,5,b	;volatile
  6232  01075E                     l512:
  6233                           
  6234                           ; BSR set to: 15
  6235                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  6236  01075E  0100               	movlb	0	; () banked
  6237  010760  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6238  010762  D003               	goto	l513
  6239                           
  6240                           ; BSR set to: 0
  6241                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  6242  010764  010F               	movlb	15	; () banked
  6243  010766  8D09               	bsf	9,6,b	;volatile
  6244  010768  D002               	goto	l514
  6245  01076A                     l513:
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;inc\CANlib.h: 942: else
  6249                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  6250  01076A  010F               	movlb	15	; () banked
  6251  01076C  9D09               	bcf	9,6,b	;volatile
  6252  01076E                     l514:
  6253                           
  6254                           ; BSR set to: 15
  6255                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  6256  01076E  0100               	movlb	0	; () banked
  6257  010770  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6258  010772  D003               	goto	l515
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  6262  010774  010F               	movlb	15	; () banked
  6263  010776  8F09               	bsf	9,7,b	;volatile
  6264  010778  D003               	goto	l5259
  6265  01077A                     l515:
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;inc\CANlib.h: 947: else
  6269                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  6270  01077A  010F               	movlb	15	; () banked
  6271  01077C  9F09               	bcf	9,7,b	;volatile
  6272  01077E  D000               	goto	l5259
  6273  010780                     l5259:
  6274                           
  6275                           ; BSR set to: 15
  6276                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  6277  010780  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  6278  010784  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6279  010788  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6280  01078C  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6281  010790  0E16               	movlw	22
  6282  010792  D006               	goto	u5950
  6283  010794                     u5955:
  6284  010794  0100               	movlb	0	; () banked
  6285  010796  90D8               	bcf	status,0,c
  6286  010798  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6287  01079A  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6288  01079C  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6289  01079E  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  6290  0107A0                     u5950:
  6291  0107A0  2EE8               	decfsz	wreg,f,c
  6292  0107A2  D7F8               	goto	u5955
  6293  0107A4  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6294  0107A8  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6295  0107AC  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6296  0107B0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6297                           
  6298                           ; BSR set to: 0
  6299                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  6300  0107B4  0100               	movlb	0	; () banked
  6301  0107B6  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  6302  0107B8  0100               	movlb	0	; () banked
  6303  0107BA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6304  0107BC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6305  0107BE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6306  0107C0  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6307                           
  6308                           ; BSR set to: 0
  6309                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  6310  0107C2  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  6311  0107C6  D000               	goto	l5265
  6312  0107C8                     l5265:
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;inc\CANlib.h: 953: }
  6316                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  6317  0107C8  0E03               	movlw	3
  6318  0107CA  0100               	movlb	0	; () banked
  6319  0107CC  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6320  0107CE  A4D8               	btfss	status,2,c
  6321  0107D0  D08B               	goto	l5299
  6322                           
  6323                           ; BSR set to: 0
  6324  0107D2  0EF7               	movlw	247
  6325  0107D4  0100               	movlb	0	; () banked
  6326  0107D6  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  6327  0107D8  A4D8               	btfss	status,2,c
  6328  0107DA  D086               	goto	l5299
  6329                           
  6330                           ; BSR set to: 0
  6331                           ;inc\CANlib.h: 956: {
  6332                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  6333  0107DC  010F               	movlb	15	; () banked
  6334  0107DE  870D               	bsf	13,3,b	;volatile
  6335                           
  6336                           ; BSR set to: 15
  6337                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  6338  0107E0  0100               	movlb	0	; () banked
  6339  0107E2  5172               	movf	CANSetFilter@filter& (0+255),w,b
  6340  0107E4  0100               	movlb	0	; () banked
  6341  0107E6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6342  0107E8  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6343  0107EA  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6344  0107EC  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6345                           
  6346                           ; BSR set to: 0
  6347                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  6348  0107EE  C07C  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  6349                           
  6350                           ; BSR set to: 0
  6351                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  6352  0107F2  0E00               	movlw	0
  6353  0107F4  0100               	movlb	0	; () banked
  6354  0107F6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  6355  0107F8  0100               	movlb	0	; () banked
  6356  0107FA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6357  0107FC  0EFF               	movlw	255
  6358  0107FE  0100               	movlb	0	; () banked
  6359  010800  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6360  010802  0100               	movlb	0	; () banked
  6361  010804  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6362  010806  0E00               	movlw	0
  6363  010808  0100               	movlb	0	; () banked
  6364  01080A  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6365  01080C  0100               	movlb	0	; () banked
  6366  01080E  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6367  010810  0E00               	movlw	0
  6368  010812  0100               	movlb	0	; () banked
  6369  010814  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6370  010816  0100               	movlb	0	; () banked
  6371  010818  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  6375  01081A  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  6376  01081E  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6377  010822  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6378  010826  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6379  01082A  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  6380  01082E  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6381  010832  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6382  010836  0100               	movlb	0	; () banked
  6383  010838  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  6384  01083A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6385  01083E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6386  010842  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6387  010846  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6388                           
  6389                           ; BSR set to: 0
  6390                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  6391  01084A  C07C  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  6392                           
  6393                           ; BSR set to: 0
  6394                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  6395  01084E  0100               	movlb	0	; () banked
  6396  010850  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6397  010852  D003               	goto	l518
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  6401  010854  010F               	movlb	15	; () banked
  6402  010856  810D               	bsf	13,0,b	;volatile
  6403  010858  D002               	goto	l519
  6404  01085A                     l518:
  6405                           
  6406                           ; BSR set to: 0
  6407                           ;inc\CANlib.h: 968: else
  6408                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  6409  01085A  010F               	movlb	15	; () banked
  6410  01085C  910D               	bcf	13,0,b	;volatile
  6411  01085E                     l519:
  6412                           
  6413                           ; BSR set to: 15
  6414                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  6415  01085E  0100               	movlb	0	; () banked
  6416  010860  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6417  010862  D003               	goto	l520
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  6421  010864  010F               	movlb	15	; () banked
  6422  010866  830D               	bsf	13,1,b	;volatile
  6423  010868  D002               	goto	l521
  6424  01086A                     l520:
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;inc\CANlib.h: 973: else
  6428                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  6429  01086A  010F               	movlb	15	; () banked
  6430  01086C  930D               	bcf	13,1,b	;volatile
  6431  01086E                     l521:
  6432                           
  6433                           ; BSR set to: 15
  6434                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  6435  01086E  0100               	movlb	0	; () banked
  6436  010870  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6437  010872  D003               	goto	l522
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6441  010874  010F               	movlb	15	; () banked
  6442  010876  8B0D               	bsf	13,5,b	;volatile
  6443  010878  D002               	goto	l523
  6444  01087A                     l522:
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;inc\CANlib.h: 978: else
  6448                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6449  01087A  010F               	movlb	15	; () banked
  6450  01087C  9B0D               	bcf	13,5,b	;volatile
  6451  01087E                     l523:
  6452                           
  6453                           ; BSR set to: 15
  6454                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  6455  01087E  0100               	movlb	0	; () banked
  6456  010880  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6457  010882  D003               	goto	l524
  6458                           
  6459                           ; BSR set to: 0
  6460                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6461  010884  010F               	movlb	15	; () banked
  6462  010886  8D0D               	bsf	13,6,b	;volatile
  6463  010888  D002               	goto	l525
  6464  01088A                     l524:
  6465                           
  6466                           ; BSR set to: 0
  6467                           ;inc\CANlib.h: 983: else
  6468                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6469  01088A  010F               	movlb	15	; () banked
  6470  01088C  9D0D               	bcf	13,6,b	;volatile
  6471  01088E                     l525:
  6472                           
  6473                           ; BSR set to: 15
  6474                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  6475  01088E  0100               	movlb	0	; () banked
  6476  010890  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6477  010892  D003               	goto	l526
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6481  010894  010F               	movlb	15	; () banked
  6482  010896  8F0D               	bsf	13,7,b	;volatile
  6483  010898  D003               	goto	l5293
  6484  01089A                     l526:
  6485                           
  6486                           ; BSR set to: 0
  6487                           ;inc\CANlib.h: 988: else
  6488                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6489  01089A  010F               	movlb	15	; () banked
  6490  01089C  9F0D               	bcf	13,7,b	;volatile
  6491  01089E  D000               	goto	l5293
  6492  0108A0                     l5293:
  6493                           
  6494                           ; BSR set to: 15
  6495                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6496  0108A0  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  6497  0108A4  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6498  0108A8  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6499  0108AC  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6500  0108B0  0E16               	movlw	22
  6501  0108B2  D006               	goto	u6030
  6502  0108B4                     u6035:
  6503  0108B4  0100               	movlb	0	; () banked
  6504  0108B6  90D8               	bcf	status,0,c
  6505  0108B8  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6506  0108BA  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6507  0108BC  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6508  0108BE  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  6509  0108C0                     u6030:
  6510  0108C0  2EE8               	decfsz	wreg,f,c
  6511  0108C2  D7F8               	goto	u6035
  6512  0108C4  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6513  0108C8  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6514  0108CC  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6515  0108D0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6516                           
  6517                           ; BSR set to: 0
  6518                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6519  0108D4  0100               	movlb	0	; () banked
  6520  0108D6  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  6521  0108D8  0100               	movlb	0	; () banked
  6522  0108DA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6523  0108DC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6524  0108DE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6525  0108E0  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6526                           
  6527                           ; BSR set to: 0
  6528                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6529  0108E2  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6530  0108E6  D000               	goto	l5299
  6531  0108E8                     l5299:
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;inc\CANlib.h: 994: }
  6535                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6536  0108E8  0E04               	movlw	4
  6537  0108EA  0100               	movlb	0	; () banked
  6538  0108EC  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6539  0108EE  A4D8               	btfss	status,2,c
  6540  0108F0  D08B               	goto	l5333
  6541                           
  6542                           ; BSR set to: 0
  6543  0108F2  0EF7               	movlw	247
  6544  0108F4  0100               	movlb	0	; () banked
  6545  0108F6  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  6546  0108F8  A4D8               	btfss	status,2,c
  6547  0108FA  D086               	goto	l5333
  6548                           
  6549                           ; BSR set to: 0
  6550                           ;inc\CANlib.h: 997: {
  6551                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6552  0108FC  010F               	movlb	15	; () banked
  6553  0108FE  8711               	bsf	17,3,b	;volatile
  6554                           
  6555                           ; BSR set to: 15
  6556                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6557  010900  0100               	movlb	0	; () banked
  6558  010902  5172               	movf	CANSetFilter@filter& (0+255),w,b
  6559  010904  0100               	movlb	0	; () banked
  6560  010906  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6561  010908  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6562  01090A  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6563  01090C  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6564                           
  6565                           ; BSR set to: 0
  6566                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6567  01090E  C07C  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6568                           
  6569                           ; BSR set to: 0
  6570                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6571  010912  0E00               	movlw	0
  6572  010914  0100               	movlb	0	; () banked
  6573  010916  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  6574  010918  0100               	movlb	0	; () banked
  6575  01091A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6576  01091C  0EFF               	movlw	255
  6577  01091E  0100               	movlb	0	; () banked
  6578  010920  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6579  010922  0100               	movlb	0	; () banked
  6580  010924  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6581  010926  0E00               	movlw	0
  6582  010928  0100               	movlb	0	; () banked
  6583  01092A  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6584  01092C  0100               	movlb	0	; () banked
  6585  01092E  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6586  010930  0E00               	movlw	0
  6587  010932  0100               	movlb	0	; () banked
  6588  010934  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6589  010936  0100               	movlb	0	; () banked
  6590  010938  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6594  01093A  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  6595  01093E  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6596  010942  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6597  010946  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6598  01094A  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  6599  01094E  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6600  010952  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6601  010956  0100               	movlb	0	; () banked
  6602  010958  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  6603  01095A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6604  01095E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6605  010962  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6606  010966  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6610  01096A  C07C  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6614  01096E  0100               	movlb	0	; () banked
  6615  010970  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6616  010972  D003               	goto	l529
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6620  010974  010F               	movlb	15	; () banked
  6621  010976  8111               	bsf	17,0,b	;volatile
  6622  010978  D002               	goto	l530
  6623  01097A                     l529:
  6624                           
  6625                           ; BSR set to: 0
  6626                           ;inc\CANlib.h: 1009: else
  6627                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6628  01097A  010F               	movlb	15	; () banked
  6629  01097C  9111               	bcf	17,0,b	;volatile
  6630  01097E                     l530:
  6631                           
  6632                           ; BSR set to: 15
  6633                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6634  01097E  0100               	movlb	0	; () banked
  6635  010980  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6636  010982  D003               	goto	l531
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6640  010984  010F               	movlb	15	; () banked
  6641  010986  8311               	bsf	17,1,b	;volatile
  6642  010988  D002               	goto	l532
  6643  01098A                     l531:
  6644                           
  6645                           ; BSR set to: 0
  6646                           ;inc\CANlib.h: 1014: else
  6647                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6648  01098A  010F               	movlb	15	; () banked
  6649  01098C  9311               	bcf	17,1,b	;volatile
  6650  01098E                     l532:
  6651                           
  6652                           ; BSR set to: 15
  6653                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6654  01098E  0100               	movlb	0	; () banked
  6655  010990  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6656  010992  D003               	goto	l533
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6660  010994  010F               	movlb	15	; () banked
  6661  010996  8B11               	bsf	17,5,b	;volatile
  6662  010998  D002               	goto	l534
  6663  01099A                     l533:
  6664                           
  6665                           ; BSR set to: 0
  6666                           ;inc\CANlib.h: 1019: else
  6667                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6668  01099A  010F               	movlb	15	; () banked
  6669  01099C  9B11               	bcf	17,5,b	;volatile
  6670  01099E                     l534:
  6671                           
  6672                           ; BSR set to: 15
  6673                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6674  01099E  0100               	movlb	0	; () banked
  6675  0109A0  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6676  0109A2  D003               	goto	l535
  6677                           
  6678                           ; BSR set to: 0
  6679                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6680  0109A4  010F               	movlb	15	; () banked
  6681  0109A6  8D11               	bsf	17,6,b	;volatile
  6682  0109A8  D002               	goto	l536
  6683  0109AA                     l535:
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;inc\CANlib.h: 1024: else
  6687                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6688  0109AA  010F               	movlb	15	; () banked
  6689  0109AC  9D11               	bcf	17,6,b	;volatile
  6690  0109AE                     l536:
  6691                           
  6692                           ; BSR set to: 15
  6693                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6694  0109AE  0100               	movlb	0	; () banked
  6695  0109B0  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6696  0109B2  D003               	goto	l537
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6700  0109B4  010F               	movlb	15	; () banked
  6701  0109B6  8F11               	bsf	17,7,b	;volatile
  6702  0109B8  D003               	goto	l5327
  6703  0109BA                     l537:
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;inc\CANlib.h: 1029: else
  6707                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6708  0109BA  010F               	movlb	15	; () banked
  6709  0109BC  9F11               	bcf	17,7,b	;volatile
  6710  0109BE  D000               	goto	l5327
  6711  0109C0                     l5327:
  6712                           
  6713                           ; BSR set to: 15
  6714                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6715  0109C0  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  6716  0109C4  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6717  0109C8  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6718  0109CC  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6719  0109D0  0E16               	movlw	22
  6720  0109D2  D006               	goto	u6110
  6721  0109D4                     u6115:
  6722  0109D4  0100               	movlb	0	; () banked
  6723  0109D6  90D8               	bcf	status,0,c
  6724  0109D8  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6725  0109DA  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6726  0109DC  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6727  0109DE  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  6728  0109E0                     u6110:
  6729  0109E0  2EE8               	decfsz	wreg,f,c
  6730  0109E2  D7F8               	goto	u6115
  6731  0109E4  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6732  0109E8  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6733  0109EC  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6734  0109F0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6735                           
  6736                           ; BSR set to: 0
  6737                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6738  0109F4  0100               	movlb	0	; () banked
  6739  0109F6  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  6740  0109F8  0100               	movlb	0	; () banked
  6741  0109FA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6742  0109FC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6743  0109FE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6744  010A00  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6748  010A02  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6749  010A06  D000               	goto	l5333
  6750  010A08                     l5333:
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;inc\CANlib.h: 1035: }
  6754                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6755  010A08  0E05               	movlw	5
  6756  010A0A  0100               	movlb	0	; () banked
  6757  010A0C  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6758  010A0E  A4D8               	btfss	status,2,c
  6759  010A10  0012               	return	
  6760                           
  6761                           ; BSR set to: 0
  6762  010A12  0EF7               	movlw	247
  6763  010A14  0100               	movlb	0	; () banked
  6764  010A16  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  6765  010A18  A4D8               	btfss	status,2,c
  6766  010A1A  0012               	return	
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;inc\CANlib.h: 1038: {
  6770                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6771  010A1C  010F               	movlb	15	; () banked
  6772  010A1E  8715               	bsf	21,3,b	;volatile
  6773                           
  6774                           ; BSR set to: 15
  6775                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6776  010A20  0100               	movlb	0	; () banked
  6777  010A22  5172               	movf	CANSetFilter@filter& (0+255),w,b
  6778  010A24  0100               	movlb	0	; () banked
  6779  010A26  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6780  010A28  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6781  010A2A  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6782  010A2C  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6786  010A2E  C07C  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6790  010A32  0E00               	movlw	0
  6791  010A34  0100               	movlb	0	; () banked
  6792  010A36  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  6793  010A38  0100               	movlb	0	; () banked
  6794  010A3A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6795  010A3C  0EFF               	movlw	255
  6796  010A3E  0100               	movlb	0	; () banked
  6797  010A40  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6798  010A42  0100               	movlb	0	; () banked
  6799  010A44  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6800  010A46  0E00               	movlw	0
  6801  010A48  0100               	movlb	0	; () banked
  6802  010A4A  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6803  010A4C  0100               	movlb	0	; () banked
  6804  010A4E  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6805  010A50  0E00               	movlw	0
  6806  010A52  0100               	movlb	0	; () banked
  6807  010A54  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6808  010A56  0100               	movlb	0	; () banked
  6809  010A58  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6813  010A5A  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  6814  010A5E  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6815  010A62  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6816  010A66  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6817  010A6A  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  6818  010A6E  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6819  010A72  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6820  010A76  0100               	movlb	0	; () banked
  6821  010A78  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  6822  010A7A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6823  010A7E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6824  010A82  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6825  010A86  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6829  010A8A  C07C  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6833  010A8E  0100               	movlb	0	; () banked
  6834  010A90  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6835  010A92  D003               	goto	l540
  6836                           
  6837                           ; BSR set to: 0
  6838                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6839  010A94  010F               	movlb	15	; () banked
  6840  010A96  8115               	bsf	21,0,b	;volatile
  6841  010A98  D002               	goto	l541
  6842  010A9A                     l540:
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;inc\CANlib.h: 1050: else
  6846                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6847  010A9A  010F               	movlb	15	; () banked
  6848  010A9C  9115               	bcf	21,0,b	;volatile
  6849  010A9E                     l541:
  6850                           
  6851                           ; BSR set to: 15
  6852                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6853  010A9E  0100               	movlb	0	; () banked
  6854  010AA0  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6855  010AA2  D003               	goto	l542
  6856                           
  6857                           ; BSR set to: 0
  6858                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6859  010AA4  010F               	movlb	15	; () banked
  6860  010AA6  8315               	bsf	21,1,b	;volatile
  6861  010AA8  D002               	goto	l543
  6862  010AAA                     l542:
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;inc\CANlib.h: 1055: else
  6866                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6867  010AAA  010F               	movlb	15	; () banked
  6868  010AAC  9315               	bcf	21,1,b	;volatile
  6869  010AAE                     l543:
  6870                           
  6871                           ; BSR set to: 15
  6872                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6873  010AAE  0100               	movlb	0	; () banked
  6874  010AB0  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6875  010AB2  D003               	goto	l544
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6879  010AB4  010F               	movlb	15	; () banked
  6880  010AB6  8B15               	bsf	21,5,b	;volatile
  6881  010AB8  D002               	goto	l545
  6882  010ABA                     l544:
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;inc\CANlib.h: 1060: else
  6886                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6887  010ABA  010F               	movlb	15	; () banked
  6888  010ABC  9B15               	bcf	21,5,b	;volatile
  6889  010ABE                     l545:
  6890                           
  6891                           ; BSR set to: 15
  6892                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6893  010ABE  0100               	movlb	0	; () banked
  6894  010AC0  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6895  010AC2  D003               	goto	l546
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6899  010AC4  010F               	movlb	15	; () banked
  6900  010AC6  8D15               	bsf	21,6,b	;volatile
  6901  010AC8  D002               	goto	l547
  6902  010ACA                     l546:
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;inc\CANlib.h: 1065: else
  6906                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6907  010ACA  010F               	movlb	15	; () banked
  6908  010ACC  9D15               	bcf	21,6,b	;volatile
  6909  010ACE                     l547:
  6910                           
  6911                           ; BSR set to: 15
  6912                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6913  010ACE  0100               	movlb	0	; () banked
  6914  010AD0  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6915  010AD2  D003               	goto	l548
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6919  010AD4  010F               	movlb	15	; () banked
  6920  010AD6  8F15               	bsf	21,7,b	;volatile
  6921  010AD8  D003               	goto	l5361
  6922  010ADA                     l548:
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;inc\CANlib.h: 1070: else
  6926                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6927  010ADA  010F               	movlb	15	; () banked
  6928  010ADC  9F15               	bcf	21,7,b	;volatile
  6929  010ADE  D000               	goto	l5361
  6930  010AE0                     l5361:
  6931                           
  6932                           ; BSR set to: 15
  6933                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6934  010AE0  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  6935  010AE4  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6936  010AE8  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6937  010AEC  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6938  010AF0  0E16               	movlw	22
  6939  010AF2  D006               	goto	u6190
  6940  010AF4                     u6195:
  6941  010AF4  0100               	movlb	0	; () banked
  6942  010AF6  90D8               	bcf	status,0,c
  6943  010AF8  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6944  010AFA  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6945  010AFC  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6946  010AFE  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  6947  010B00                     u6190:
  6948  010B00  2EE8               	decfsz	wreg,f,c
  6949  010B02  D7F8               	goto	u6195
  6950  010B04  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6951  010B08  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6952  010B0C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6953  010B10  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6957  010B14  0100               	movlb	0	; () banked
  6958  010B16  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  6959  010B18  0100               	movlb	0	; () banked
  6960  010B1A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6961  010B1C  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6962  010B1E  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6963  010B20  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6967  010B22  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6968  010B26  0012               	return	
  6969                           
  6970                           ; BSR set to: 0
  6971                           
  6972                           ; BSR set to: 0
  6973  010B28  0012               	return		;funcret
  6974  010B2A                     __end_of_CANSetFilter:
  6975                           	opt stack 0
  6976                           tblptru	equ	0xFF8
  6977                           tblptrh	equ	0xFF7
  6978                           tblptrl	equ	0xFF6
  6979                           tablat	equ	0xFF5
  6980                           prodh	equ	0xFF4
  6981                           prodl	equ	0xFF3
  6982                           intcon	equ	0xFF2
  6983                           postinc0	equ	0xFEE
  6984                           wreg	equ	0xFE8
  6985                           postinc2	equ	0xFDE
  6986                           fsr2h	equ	0xFDA
  6987                           fsr2l	equ	0xFD9
  6988                           status	equ	0xFD8
  6989                           
  6990 ;; *************** function _CANOperationMode *****************
  6991 ;; Defined at:
  6992 ;;		line 206 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;  mode            1    wreg     enum E16922
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;  mode            1   18[BANK0 ] enum E16922
  6997 ;; Return value:  Size  Location     Type
  6998 ;;		None               void
  6999 ;; Registers used:
  7000 ;;		wreg, status,2, status,0
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7009 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7010 ;;Total ram usage:        1 bytes
  7011 ;; Hardware stack levels used:    1
  7012 ;; Hardware stack levels required when called:    3
  7013 ;; This function calls:
  7014 ;;		Nothing
  7015 ;; This function is called by:
  7016 ;;		_CANInitialize
  7017 ;; This function uses a non-reentrant model
  7018 ;;
  7019                           
  7020                           	psect	text5
  7021  01610C                     __ptext5:
  7022                           	opt stack 0
  7023  01610C                     _CANOperationMode:
  7024                           	opt stack 25
  7025                           
  7026                           ; BSR set to: 0
  7027                           ;incstack = 0
  7028                           ;CANOperationMode@mode stored from wreg
  7029  01610C  0100               	movlb	0	; () banked
  7030  01610E  6F72               	movwf	CANOperationMode@mode& (0+255),b
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;inc\CANlib.h: 208: CANCON = mode;
  7034  016110  C072  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  7035                           
  7036                           ; BSR set to: 0
  7037                           
  7038                           ;inc\CANlib.h: 210: while((CANSTAT & 0b11100000) != mode );
  7039  016114  D000               	goto	l4957
  7040  016116                     l4957:
  7041                           
  7042                           ; BSR set to: 0
  7043  016116  506E               	movf	3950,w,c	;volatile
  7044  016118  0BE0               	andlw	224
  7045  01611A  0100               	movlb	0	; () banked
  7046  01611C  1972               	xorwf	CANOperationMode@mode& (0+255),w,b
  7047  01611E  A4D8               	btfss	status,2,c
  7048  016120  D7FA               	goto	l4957
  7049                           
  7050                           ; BSR set to: 0
  7051                           
  7052                           ; BSR set to: 0
  7053  016122  0012               	return		;funcret
  7054  016124                     __end_of_CANOperationMode:
  7055                           	opt stack 0
  7056                           tblptru	equ	0xFF8
  7057                           tblptrh	equ	0xFF7
  7058                           tblptrl	equ	0xFF6
  7059                           tablat	equ	0xFF5
  7060                           prodh	equ	0xFF4
  7061                           prodl	equ	0xFF3
  7062                           intcon	equ	0xFF2
  7063                           postinc0	equ	0xFEE
  7064                           wreg	equ	0xFE8
  7065                           postinc2	equ	0xFDE
  7066                           fsr2h	equ	0xFDA
  7067                           fsr2l	equ	0xFD9
  7068                           status	equ	0xFD8
  7069                           
  7070 ;; *************** function ___lbtofl *****************
  7071 ;; Defined at:
  7072 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtofl.c"
  7073 ;; Parameters:    Size  Location     Type
  7074 ;;  c               1    wreg     unsigned char 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;  c               1   32[BANK0 ] unsigned char 
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  4   28[BANK0 ] unsigned char 
  7079 ;; Registers used:
  7080 ;;		wreg, status,2, status,0, cstack
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7086 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;Total ram usage:        5 bytes
  7091 ;; Hardware stack levels used:    1
  7092 ;; Hardware stack levels required when called:    4
  7093 ;; This function calls:
  7094 ;;		___flpack
  7095 ;; This function is called by:
  7096 ;;		_main
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text6
  7101  015EFC                     __ptext6:
  7102                           	opt stack 0
  7103  015EFC                     ___lbtofl:
  7104                           	opt stack 26
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;incstack = 0
  7108                           ;___lbtofl@c stored from wreg
  7109  015EFC  0100               	movlb	0	; () banked
  7110  015EFE  6F80               	movwf	___lbtofl@c& (0+255),b
  7111                           
  7112                           ; BSR set to: 0
  7113  015F00  0100               	movlb	0	; () banked
  7114  015F02  5180               	movf	___lbtofl@c& (0+255),w,b
  7115  015F04  0100               	movlb	0	; () banked
  7116  015F06  6F72               	movwf	___flpack@arg& (0+255),b
  7117  015F08  6B73               	clrf	(___flpack@arg+1)& (0+255),b
  7118  015F0A  6B74               	clrf	(___flpack@arg+2)& (0+255),b
  7119  015F0C  6B75               	clrf	(___flpack@arg+3)& (0+255),b
  7120  015F0E  0E96               	movlw	150
  7121  015F10  0100               	movlb	0	; () banked
  7122  015F12  6F76               	movwf	___flpack@exp& (0+255),b
  7123  015F14  0E00               	movlw	0
  7124  015F16  0100               	movlb	0	; () banked
  7125  015F18  6F77               	movwf	___flpack@sign& (0+255),b
  7126  015F1A  EC68  F0A5         	call	___flpack	;wreg free
  7127  015F1E  C072  F07C         	movff	?___flpack,?___lbtofl
  7128  015F22  C073  F07D         	movff	?___flpack+1,?___lbtofl+1
  7129  015F26  C074  F07E         	movff	?___flpack+2,?___lbtofl+2
  7130  015F2A  C075  F07F         	movff	?___flpack+3,?___lbtofl+3
  7131  015F2E  0012               	return	
  7132  015F30  0012               	return		;funcret
  7133  015F32                     __end_of___lbtofl:
  7134                           	opt stack 0
  7135                           tblptru	equ	0xFF8
  7136                           tblptrh	equ	0xFF7
  7137                           tblptrl	equ	0xFF6
  7138                           tablat	equ	0xFF5
  7139                           prodh	equ	0xFF4
  7140                           prodl	equ	0xFF3
  7141                           intcon	equ	0xFF2
  7142                           postinc0	equ	0xFEE
  7143                           wreg	equ	0xFE8
  7144                           postinc2	equ	0xFDE
  7145                           fsr2h	equ	0xFDA
  7146                           fsr2l	equ	0xFD9
  7147                           status	equ	0xFD8
  7148                           
  7149 ;; *************** function ___awtofl *****************
  7150 ;; Defined at:
  7151 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtofl.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;  c               2   28[BANK0 ] int 
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;  f1              4    0        int 
  7156 ;;  sign            1   32[BANK0 ] unsigned char 
  7157 ;; Return value:  Size  Location     Type
  7158 ;;                  4   28[BANK0 ] unsigned char 
  7159 ;; Registers used:
  7160 ;;		wreg, status,2, status,0, cstack
  7161 ;; Tracked objects:
  7162 ;;		On entry : 0/0
  7163 ;;		On exit  : 0/0
  7164 ;;		Unchanged: 0/0
  7165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7166 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7169 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7170 ;;Total ram usage:        5 bytes
  7171 ;; Hardware stack levels used:    1
  7172 ;; Hardware stack levels required when called:    4
  7173 ;; This function calls:
  7174 ;;		___flpack
  7175 ;; This function is called by:
  7176 ;;		_main
  7177 ;; This function uses a non-reentrant model
  7178 ;;
  7179                           
  7180                           	psect	text7
  7181  015CF8                     __ptext7:
  7182                           	opt stack 0
  7183  015CF8                     ___awtofl:
  7184                           	opt stack 26
  7185                           
  7186                           ;incstack = 0
  7187  015CF8  0E00               	movlw	0
  7188  015CFA  0100               	movlb	0	; () banked
  7189  015CFC  6F80               	movwf	___awtofl@sign& (0+255),b
  7190                           
  7191                           ; BSR set to: 0
  7192  015CFE  0100               	movlb	0	; () banked
  7193  015D00  AF7D               	btfss	(___awtofl@c+1)& (0+255),7,b
  7194  015D02  D008               	goto	l8615
  7195                           
  7196                           ; BSR set to: 0
  7197  015D04  0100               	movlb	0	; () banked
  7198  015D06  6D7C               	negf	___awtofl@c& (0+255),b
  7199  015D08  1F7D               	comf	(___awtofl@c+1)& (0+255),f,b
  7200  015D0A  B0D8               	btfsc	status,0,c
  7201  015D0C  2B7D               	incf	(___awtofl@c+1)& (0+255),f,b
  7202  015D0E  0100               	movlb	0	; () banked
  7203  015D10  2B80               	incf	___awtofl@sign& (0+255),f,b
  7204  015D12  D000               	goto	l8615
  7205  015D14                     l8615:
  7206                           
  7207                           ; BSR set to: 0
  7208  015D14  C07C  F072         	movff	___awtofl@c,___flpack@arg
  7209  015D18  C07D  F073         	movff	___awtofl@c+1,___flpack@arg+1
  7210  015D1C  0100               	movlb	0	; () banked
  7211  015D1E  6B74               	clrf	(___flpack@arg+2)& (0+255),b
  7212  015D20  6B75               	clrf	(___flpack@arg+3)& (0+255),b
  7213  015D22  0E96               	movlw	150
  7214  015D24  0100               	movlb	0	; () banked
  7215  015D26  6F76               	movwf	___flpack@exp& (0+255),b
  7216  015D28  C080  F077         	movff	___awtofl@sign,___flpack@sign
  7217  015D2C  EC68  F0A5         	call	___flpack	;wreg free
  7218  015D30  C072  F07C         	movff	?___flpack,?___awtofl
  7219  015D34  C073  F07D         	movff	?___flpack+1,?___awtofl+1
  7220  015D38  C074  F07E         	movff	?___flpack+2,?___awtofl+2
  7221  015D3C  C075  F07F         	movff	?___flpack+3,?___awtofl+3
  7222  015D40  0012               	return	
  7223  015D42  0012               	return		;funcret
  7224  015D44                     __end_of___awtofl:
  7225                           	opt stack 0
  7226                           tblptru	equ	0xFF8
  7227                           tblptrh	equ	0xFF7
  7228                           tblptrl	equ	0xFF6
  7229                           tablat	equ	0xFF5
  7230                           prodh	equ	0xFF4
  7231                           prodl	equ	0xFF3
  7232                           intcon	equ	0xFF2
  7233                           postinc0	equ	0xFEE
  7234                           wreg	equ	0xFE8
  7235                           postinc2	equ	0xFDE
  7236                           fsr2h	equ	0xFDA
  7237                           fsr2l	equ	0xFD9
  7238                           status	equ	0xFD8
  7239                           
  7240 ;; *************** function _PWR_Button_Polling *****************
  7241 ;; Defined at:
  7242 ;;		line 644 in file "RemoteCan.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;		None
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;		None
  7247 ;; Return value:  Size  Location     Type
  7248 ;;		None               void
  7249 ;; Registers used:
  7250 ;;		None
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7260 ;;Total ram usage:        0 bytes
  7261 ;; Hardware stack levels used:    1
  7262 ;; Hardware stack levels required when called:    3
  7263 ;; This function calls:
  7264 ;;		Nothing
  7265 ;; This function is called by:
  7266 ;;		_main
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           	psect	text8
  7271  01613C                     __ptext8:
  7272                           	opt stack 0
  7273  01613C                     _PWR_Button_Polling:
  7274                           	opt stack 27
  7275                           
  7276                           ;RemoteCan.c: 645: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  7277                           
  7278                           ;incstack = 0
  7279  01613C  AA81               	btfss	3969,5,c	;volatile
  7280  01613E  D002               	goto	l948
  7281  016140  B24C               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  7282  016142  0012               	return	
  7283  016144                     l948:
  7284                           
  7285                           ;RemoteCan.c: 646: wait_low_1 = 0;
  7286  016144  924C               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  7287                           
  7288                           ;RemoteCan.c: 647: if (PORTBbits.RB5 == 1) {
  7289  016146  AA81               	btfss	3969,5,c	;volatile
  7290  016148  0012               	return	
  7291                           
  7292                           ;RemoteCan.c: 648: power_switch = ~power_switch;
  7293  01614A  764B               	btg	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  7294                           
  7295                           ;RemoteCan.c: 649: wait_low_1 = 1;
  7296  01614C  824C               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  7297  01614E  0012               	return	
  7298  016150  0012               	return		;funcret
  7299  016152                     __end_of_PWR_Button_Polling:
  7300                           	opt stack 0
  7301                           tblptru	equ	0xFF8
  7302                           tblptrh	equ	0xFF7
  7303                           tblptrl	equ	0xFF6
  7304                           tablat	equ	0xFF5
  7305                           prodh	equ	0xFF4
  7306                           prodl	equ	0xFF3
  7307                           intcon	equ	0xFF2
  7308                           postinc0	equ	0xFEE
  7309                           wreg	equ	0xFE8
  7310                           postinc2	equ	0xFDE
  7311                           fsr2h	equ	0xFDA
  7312                           fsr2l	equ	0xFD9
  7313                           status	equ	0xFD8
  7314                           
  7315 ;; *************** function _LCD_Parking *****************
  7316 ;; Defined at:
  7317 ;;		line 592 in file "RemoteCan.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;		None
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;		None
  7322 ;; Return value:  Size  Location     Type
  7323 ;;		None               void
  7324 ;; Registers used:
  7325 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7335 ;;Total ram usage:        0 bytes
  7336 ;; Hardware stack levels used:    1
  7337 ;; Hardware stack levels required when called:    9
  7338 ;; This function calls:
  7339 ;;		_LCD_clear
  7340 ;;		_LCD_goto_line
  7341 ;;		_LCD_initialize
  7342 ;;		_LCD_write_message
  7343 ;; This function is called by:
  7344 ;;		_main
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348                           	psect	text9
  7349  0159F2                     __ptext9:
  7350                           	opt stack 0
  7351  0159F2                     _LCD_Parking:
  7352                           	opt stack 21
  7353                           
  7354                           ;RemoteCan.c: 593: LCD_initialize(16);
  7355                           
  7356                           ;incstack = 0
  7357  0159F2  0E10               	movlw	16
  7358  0159F4  EC28  F0A6         	call	_LCD_initialize
  7359                           
  7360                           ;RemoteCan.c: 594: LCD_clear();
  7361  0159F8  EC00  F0B0         	call	_LCD_clear	;wreg free
  7362                           
  7363                           ;RemoteCan.c: 595: LCD_goto_line(1);
  7364  0159FC  0E01               	movlw	1
  7365  0159FE  EC35  F0A9         	call	_LCD_goto_line
  7366                           
  7367                           ;RemoteCan.c: 596: LCD_write_message("= PARKING MESSAGES =");
  7368  015A02  0E16               	movlw	low STR_20
  7369  015A04  0100               	movlb	0	; () banked
  7370  015A06  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7371  015A08  0EFF               	movlw	high STR_20
  7372  015A0A  0100               	movlb	0	; () banked
  7373  015A0C  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7374  015A0E  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7375                           
  7376                           ;RemoteCan.c: 597: LCD_goto_line(2);
  7377  015A12  0E02               	movlw	2
  7378  015A14  EC35  F0A9         	call	_LCD_goto_line
  7379                           
  7380                           ;RemoteCan.c: 598: LCD_write_message("=    Parking in    =");
  7381  015A18  0EEC               	movlw	low STR_29
  7382  015A1A  0100               	movlb	0	; () banked
  7383  015A1C  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7384  015A1E  0EFE               	movlw	high STR_29
  7385  015A20  0100               	movlb	0	; () banked
  7386  015A22  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7387  015A24  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7388                           
  7389                           ;RemoteCan.c: 599: LCD_goto_line(3);
  7390  015A28  0E03               	movlw	3
  7391  015A2A  EC35  F0A9         	call	_LCD_goto_line
  7392                           
  7393                           ;RemoteCan.c: 600: LCD_write_message("=    progress...   =");
  7394  015A2E  0E01               	movlw	low STR_30
  7395  015A30  0100               	movlb	0	; () banked
  7396  015A32  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7397  015A34  0EFF               	movlw	high STR_30
  7398  015A36  0100               	movlb	0	; () banked
  7399  015A38  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7400  015A3A  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7401                           
  7402                           ;RemoteCan.c: 601: LCD_goto_line(4);
  7403  015A3E  0E04               	movlw	4
  7404  015A40  EC35  F0A9         	call	_LCD_goto_line
  7405                           
  7406                           ;RemoteCan.c: 602: LCD_write_message("====================");
  7407  015A44  0E6A               	movlw	low STR_1
  7408  015A46  0100               	movlb	0	; () banked
  7409  015A48  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7410  015A4A  0EFF               	movlw	high STR_1
  7411  015A4C  0100               	movlb	0	; () banked
  7412  015A4E  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7413  015A50  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7414  015A54  0012               	return		;funcret
  7415  015A56                     __end_of_LCD_Parking:
  7416                           	opt stack 0
  7417                           tblptru	equ	0xFF8
  7418                           tblptrh	equ	0xFF7
  7419                           tblptrl	equ	0xFF6
  7420                           tablat	equ	0xFF5
  7421                           prodh	equ	0xFF4
  7422                           prodl	equ	0xFF3
  7423                           intcon	equ	0xFF2
  7424                           postinc0	equ	0xFEE
  7425                           wreg	equ	0xFE8
  7426                           postinc2	equ	0xFDE
  7427                           fsr2h	equ	0xFDA
  7428                           fsr2l	equ	0xFD9
  7429                           status	equ	0xFD8
  7430                           
  7431 ;; *************** function _LCD_Park *****************
  7432 ;; Defined at:
  7433 ;;		line 579 in file "RemoteCan.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;		None
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;		None
  7438 ;; Return value:  Size  Location     Type
  7439 ;;		None               void
  7440 ;; Registers used:
  7441 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7451 ;;Total ram usage:        0 bytes
  7452 ;; Hardware stack levels used:    1
  7453 ;; Hardware stack levels required when called:    9
  7454 ;; This function calls:
  7455 ;;		_LCD_clear
  7456 ;;		_LCD_goto_line
  7457 ;;		_LCD_initialize
  7458 ;;		_LCD_write_message
  7459 ;; This function is called by:
  7460 ;;		_main
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           
  7464                           	psect	text10
  7465  015A56                     __ptext10:
  7466                           	opt stack 0
  7467  015A56                     _LCD_Park:
  7468                           	opt stack 21
  7469                           
  7470                           ;RemoteCan.c: 580: LCD_initialize(16);
  7471                           
  7472                           ;incstack = 0
  7473  015A56  0E10               	movlw	16
  7474  015A58  EC28  F0A6         	call	_LCD_initialize
  7475                           
  7476                           ;RemoteCan.c: 581: LCD_clear();
  7477  015A5C  EC00  F0B0         	call	_LCD_clear	;wreg free
  7478                           
  7479                           ;RemoteCan.c: 582: LCD_goto_line(1);
  7480  015A60  0E01               	movlw	1
  7481  015A62  EC35  F0A9         	call	_LCD_goto_line
  7482                           
  7483                           ;RemoteCan.c: 583: LCD_write_message("= PARKING MESSAGES =");
  7484  015A66  0E16               	movlw	low STR_20
  7485  015A68  0100               	movlb	0	; () banked
  7486  015A6A  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7487  015A6C  0EFF               	movlw	high STR_20
  7488  015A6E  0100               	movlb	0	; () banked
  7489  015A70  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7490  015A72  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7491                           
  7492                           ;RemoteCan.c: 584: LCD_goto_line(2);
  7493  015A76  0E02               	movlw	2
  7494  015A78  EC35  F0A9         	call	_LCD_goto_line
  7495                           
  7496                           ;RemoteCan.c: 585: LCD_write_message("- Distance REACHED -");
  7497  015A7C  0EAD               	movlw	low STR_25
  7498  015A7E  0100               	movlb	0	; () banked
  7499  015A80  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7500  015A82  0EFE               	movlw	high STR_25
  7501  015A84  0100               	movlb	0	; () banked
  7502  015A86  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7503  015A88  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7504                           
  7505                           ;RemoteCan.c: 586: LCD_goto_line(3);
  7506  015A8C  0E03               	movlw	3
  7507  015A8E  EC35  F0A9         	call	_LCD_goto_line
  7508                           
  7509                           ;RemoteCan.c: 587: LCD_write_message("Press the BUTTON to ");
  7510  015A92  0E6E               	movlw	low STR_26
  7511  015A94  0100               	movlb	0	; () banked
  7512  015A96  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7513  015A98  0EFE               	movlw	high STR_26
  7514  015A9A  0100               	movlb	0	; () banked
  7515  015A9C  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7516  015A9E  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7517                           
  7518                           ;RemoteCan.c: 588: LCD_goto_line(4);
  7519  015AA2  0E04               	movlw	4
  7520  015AA4  EC35  F0A9         	call	_LCD_goto_line
  7521                           
  7522                           ;RemoteCan.c: 589: LCD_write_message("   start parking    ");
  7523  015AA8  0EDB               	movlw	low STR_27
  7524  015AAA  0100               	movlb	0	; () banked
  7525  015AAC  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7526  015AAE  0EFD               	movlw	high STR_27
  7527  015AB0  0100               	movlb	0	; () banked
  7528  015AB2  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7529  015AB4  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7530  015AB8  0012               	return		;funcret
  7531  015ABA                     __end_of_LCD_Park:
  7532                           	opt stack 0
  7533                           tblptru	equ	0xFF8
  7534                           tblptrh	equ	0xFF7
  7535                           tblptrl	equ	0xFF6
  7536                           tablat	equ	0xFF5
  7537                           prodh	equ	0xFF4
  7538                           prodl	equ	0xFF3
  7539                           intcon	equ	0xFF2
  7540                           postinc0	equ	0xFEE
  7541                           wreg	equ	0xFE8
  7542                           postinc2	equ	0xFDE
  7543                           fsr2h	equ	0xFDA
  7544                           fsr2l	equ	0xFD9
  7545                           status	equ	0xFD8
  7546                           
  7547 ;; *************** function _LCD_Handler *****************
  7548 ;; Defined at:
  7549 ;;		line 488 in file "RemoteCan.c"
  7550 ;; Parameters:    Size  Location     Type
  7551 ;;		None
  7552 ;; Auto vars:     Size  Location     Type
  7553 ;;		None
  7554 ;; Return value:  Size  Location     Type
  7555 ;;		None               void
  7556 ;; Registers used:
  7557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7558 ;; Tracked objects:
  7559 ;;		On entry : 0/0
  7560 ;;		On exit  : 0/0
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7567 ;;Total ram usage:        0 bytes
  7568 ;; Hardware stack levels used:    1
  7569 ;; Hardware stack levels required when called:   10
  7570 ;; This function calls:
  7571 ;;		_CANisTxReady
  7572 ;;		_CANsendMessage
  7573 ;;		_LCD_clear
  7574 ;;		_LCD_goto_line
  7575 ;;		_LCD_goto_xy
  7576 ;;		_LCD_initialize
  7577 ;;		_LCD_write_integer
  7578 ;;		_LCD_write_message
  7579 ;;		_LCD_write_string
  7580 ;;		___fldiv
  7581 ;;		___lwtofl
  7582 ;;		_sprintf
  7583 ;; This function is called by:
  7584 ;;		_main
  7585 ;; This function uses a non-reentrant model
  7586 ;;
  7587                           
  7588                           	psect	text11
  7589  013F1E                     __ptext11:
  7590                           	opt stack 0
  7591  013F1E                     _LCD_Handler:
  7592                           	opt stack 20
  7593                           
  7594                           ;RemoteCan.c: 490: while (CANisTxReady() != 1);
  7595                           
  7596                           ;incstack = 0
  7597  013F1E  D000               	goto	l8501
  7598  013F20                     l8501:
  7599  013F20  EC44  F0B0         	call	_CANisTxReady	;wreg free
  7600  013F24  06E8               	decf	wreg,f,c
  7601  013F26  A4D8               	btfss	status,2,c
  7602  013F28  D7FB               	goto	l8501
  7603                           
  7604                           ;RemoteCan.c: 491: CANsendMessage(0b00000001000, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  7605  013F2A  0E08               	movlw	8
  7606  013F2C  0100               	movlb	0	; () banked
  7607  013F2E  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  7608  013F30  0E00               	movlw	0
  7609  013F32  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  7610  013F34  0E00               	movlw	0
  7611  013F36  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  7612  013F38  0E00               	movlw	0
  7613  013F3A  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  7614  013F3C  0E1E               	movlw	low _data_speed
  7615  013F3E  0100               	movlb	0	; () banked
  7616  013F40  6F76               	movwf	CANsendMessage@data& (0+255),b
  7617  013F42  0E01               	movlw	high _data_speed
  7618  013F44  0100               	movlb	0	; () banked
  7619  013F46  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  7620  013F48  0E08               	movlw	8
  7621  013F4A  0100               	movlb	0	; () banked
  7622  013F4C  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  7623  013F4E  0EFC               	movlw	252
  7624  013F50  0100               	movlb	0	; () banked
  7625  013F52  6F79               	movwf	CANsendMessage@flags& (0+255),b
  7626  013F54  ECA8  F08E         	call	_CANsendMessage	;wreg free
  7627                           
  7628                           ;RemoteCan.c: 493: actual_speed_kmh = ((actual_speed) / 278.0);
  7629  013F58  C0DB  F07C         	movff	_actual_speed,___lwtofl@c	;volatile
  7630  013F5C  C0DC  F07D         	movff	_actual_speed+1,___lwtofl@c+1	;volatile
  7631  013F60  ECCE  F0AF         	call	___lwtofl	;wreg free
  7632  013F64  C07C  F080         	movff	?___lwtofl,___fldiv@f1
  7633  013F68  C07D  F081         	movff	?___lwtofl+1,___fldiv@f1+1
  7634  013F6C  C07E  F082         	movff	?___lwtofl+2,___fldiv@f1+2
  7635  013F70  C07F  F083         	movff	?___lwtofl+3,___fldiv@f1+3
  7636  013F74  0E00               	movlw	0
  7637  013F76  0100               	movlb	0	; () banked
  7638  013F78  6F84               	movwf	___fldiv@f2& (0+255),b
  7639  013F7A  0E00               	movlw	0
  7640  013F7C  6F85               	movwf	(___fldiv@f2+1)& (0+255),b
  7641  013F7E  0E8B               	movlw	139
  7642  013F80  6F86               	movwf	(___fldiv@f2+2)& (0+255),b
  7643  013F82  0E43               	movlw	67
  7644  013F84  6F87               	movwf	(___fldiv@f2+3)& (0+255),b
  7645  013F86  EC91  F0A7         	call	___fldiv	;wreg free
  7646  013F8A  C080  F0BD         	movff	?___fldiv,_actual_speed_kmh	;volatile
  7647  013F8E  C081  F0BE         	movff	?___fldiv+1,_actual_speed_kmh+1	;volatile
  7648  013F92  C082  F0BF         	movff	?___fldiv+2,_actual_speed_kmh+2	;volatile
  7649  013F96  C083  F0C0         	movff	?___fldiv+3,_actual_speed_kmh+3	;volatile
  7650                           
  7651                           ;RemoteCan.c: 494: sprintf(str, "%.2f", actual_speed_kmh);
  7652  013F9A  0E0A               	movlw	low _str
  7653  013F9C  0101               	movlb	1	; () banked
  7654  013F9E  6F36               	movwf	sprintf@sp& (0+255),b
  7655  013FA0  0E01               	movlw	high _str
  7656  013FA2  0101               	movlb	1	; () banked
  7657  013FA4  6F37               	movwf	(sprintf@sp+1)& (0+255),b
  7658  013FA6  0EFA               	movlw	low STR_5
  7659  013FA8  0101               	movlb	1	; () banked
  7660  013FAA  6F38               	movwf	sprintf@f& (0+255),b
  7661  013FAC  0EFF               	movlw	high STR_5
  7662  013FAE  0101               	movlb	1	; () banked
  7663  013FB0  6F39               	movwf	(sprintf@f+1)& (0+255),b
  7664  013FB2  C0BD  F13A         	movff	_actual_speed_kmh,?_sprintf+4	;volatile
  7665  013FB6  C0BE  F13B         	movff	_actual_speed_kmh+1,?_sprintf+5	;volatile
  7666  013FBA  C0BF  F13C         	movff	_actual_speed_kmh+2,?_sprintf+6	;volatile
  7667  013FBE  C0C0  F13D         	movff	_actual_speed_kmh+3,?_sprintf+7	;volatile
  7668  013FC2  EC22  F08A         	call	_sprintf	;wreg free
  7669                           
  7670                           ;RemoteCan.c: 495: str[11] = '\0';
  7671  013FC6  0E00               	movlw	0
  7672  013FC8  0101               	movlb	1	; () banked
  7673  013FCA  6F15               	movwf	(_str+11)& (0+255),b	;volatile
  7674                           
  7675                           ; BSR set to: 1
  7676                           ;RemoteCan.c: 497: if (display_refresh == 1) {
  7677  013FCC  AE4A               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  7678  013FCE  D03F               	goto	l8531
  7679                           
  7680                           ; BSR set to: 1
  7681                           ;RemoteCan.c: 498: LCD_initialize(16);
  7682  013FD0  0E10               	movlw	16
  7683  013FD2  EC28  F0A6         	call	_LCD_initialize
  7684                           
  7685                           ;RemoteCan.c: 499: LCD_clear();
  7686  013FD6  EC00  F0B0         	call	_LCD_clear	;wreg free
  7687                           
  7688                           ;RemoteCan.c: 500: LCD_goto_line(1);
  7689  013FDA  0E01               	movlw	1
  7690  013FDC  EC35  F0A9         	call	_LCD_goto_line
  7691                           
  7692                           ;RemoteCan.c: 501: LCD_write_message("=== VEHICLE DATA ===");
  7693  013FE0  0E55               	movlw	low STR_6
  7694  013FE2  0100               	movlb	0	; () banked
  7695  013FE4  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7696  013FE6  0EFF               	movlw	high STR_6
  7697  013FE8  0100               	movlb	0	; () banked
  7698  013FEA  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7699  013FEC  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7700                           
  7701                           ;RemoteCan.c: 502: LCD_goto_line(2);
  7702  013FF0  0E02               	movlw	2
  7703  013FF2  EC35  F0A9         	call	_LCD_goto_line
  7704                           
  7705                           ;RemoteCan.c: 503: LCD_write_message("Direction: ");
  7706  013FF6  0EC8               	movlw	low STR_7
  7707  013FF8  0100               	movlb	0	; () banked
  7708  013FFA  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7709  013FFC  0EFF               	movlw	high STR_7
  7710  013FFE  0100               	movlb	0	; () banked
  7711  014000  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7712  014002  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7713                           
  7714                           ;RemoteCan.c: 504: LCD_goto_line(3);
  7715  014006  0E03               	movlw	3
  7716  014008  EC35  F0A9         	call	_LCD_goto_line
  7717                           
  7718                           ;RemoteCan.c: 505: LCD_write_message("Speed: 0.00 Km/h");
  7719  01400C  0EA9               	movlw	low STR_8
  7720  01400E  0100               	movlb	0	; () banked
  7721  014010  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7722  014012  0EFF               	movlw	high STR_8
  7723  014014  0100               	movlb	0	; () banked
  7724  014016  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7725  014018  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7726                           
  7727                           ;RemoteCan.c: 506: LCD_goto_line(4);
  7728  01401C  0E04               	movlw	4
  7729  01401E  EC35  F0A9         	call	_LCD_goto_line
  7730                           
  7731                           ;RemoteCan.c: 507: if (LCD_4TH_ROW_MODE == 0) {
  7732  014022  B64A               	btfsc	_LCD_4TH_ROW_MODE/(0+8),_LCD_4TH_ROW_MODE& (0+7),c	;volatile
  7733  014024  D009               	goto	l8527
  7734                           
  7735                           ;RemoteCan.c: 508: LCD_write_message("Park assist: ");
  7736  014026  0EBA               	movlw	low STR_9
  7737  014028  0100               	movlb	0	; () banked
  7738  01402A  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7739  01402C  0EFF               	movlw	high STR_9
  7740  01402E  0100               	movlb	0	; () banked
  7741  014030  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7742  014032  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7743                           
  7744                           ;RemoteCan.c: 509: } else {
  7745  014036  D009               	goto	l8529
  7746  014038                     l8527:
  7747                           
  7748                           ;RemoteCan.c: 510: LCD_write_message("Data: ");
  7749  014038  0EE4               	movlw	low STR_10
  7750  01403A  0100               	movlb	0	; () banked
  7751  01403C  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7752  01403E  0EFF               	movlw	high STR_10
  7753  014040  0100               	movlb	0	; () banked
  7754  014042  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7755  014044  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7756  014048  D000               	goto	l8529
  7757  01404A                     l8529:
  7758                           
  7759                           ;RemoteCan.c: 511: }
  7760                           ;RemoteCan.c: 512: display_refresh = 0;
  7761  01404A  9E4A               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  7762  01404C  D000               	goto	l8531
  7763  01404E                     l8531:
  7764                           
  7765                           ;RemoteCan.c: 513: }
  7766                           ;RemoteCan.c: 515: if (collision_msg == 0) {
  7767  01404E  BC4A               	btfsc	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  7768  014050  D038               	goto	l908
  7769                           
  7770                           ;RemoteCan.c: 516: if (row_refresh == 1) {
  7771  014052  AA4B               	btfss	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7772  014054  D00D               	goto	l8541
  7773                           
  7774                           ;RemoteCan.c: 517: LCD_goto_line(2);
  7775  014056  0E02               	movlw	2
  7776  014058  EC35  F0A9         	call	_LCD_goto_line
  7777                           
  7778                           ;RemoteCan.c: 518: LCD_write_message("Direction:          ");
  7779  01405C  0E87               	movlw	low STR_11
  7780  01405E  0100               	movlb	0	; () banked
  7781  014060  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7782  014062  0EFD               	movlw	high STR_11
  7783  014064  0100               	movlb	0	; () banked
  7784  014066  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7785  014068  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7786                           
  7787                           ;RemoteCan.c: 519: row_refresh = 0;
  7788  01406C  9A4B               	bcf	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7789  01406E  D000               	goto	l8541
  7790  014070                     l8541:
  7791                           
  7792                           ;RemoteCan.c: 520: }
  7793                           ;RemoteCan.c: 522: LCD_goto_xy(12, 2);
  7794  014070  0E02               	movlw	2
  7795  014072  0100               	movlb	0	; () banked
  7796  014074  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  7797  014076  0E0C               	movlw	12
  7798  014078  EC78  F0B0         	call	_LCD_goto_xy
  7799                           
  7800                           ;RemoteCan.c: 523: if (switch_position != 0) {
  7801  01407C  0100               	movlb	0	; () banked
  7802  01407E  51E7               	movf	_switch_position& (0+255),w,b	;volatile
  7803  014080  B4D8               	btfsc	status,2,c
  7804  014082  D016               	goto	l8551
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;RemoteCan.c: 524: if (dir == 1) {
  7808  014084  0100               	movlb	0	; () banked
  7809  014086  05E3               	decf	_dir& (0+255),w,b	;volatile
  7810  014088  A4D8               	btfss	status,2,c
  7811  01408A  D009               	goto	l8549
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;RemoteCan.c: 525: LCD_write_message("FWD ");
  7815  01408C  0EF0               	movlw	low STR_12
  7816  01408E  0100               	movlb	0	; () banked
  7817  014090  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7818  014092  0EFF               	movlw	high STR_12
  7819  014094  0100               	movlb	0	; () banked
  7820  014096  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7821  014098  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7822                           
  7823                           ;RemoteCan.c: 526: } else {
  7824  01409C  D01F               	goto	l8557
  7825  01409E                     l8549:
  7826                           
  7827                           ;RemoteCan.c: 527: LCD_write_message("BKWD");
  7828  01409E  0EF5               	movlw	low STR_13
  7829  0140A0  0100               	movlb	0	; () banked
  7830  0140A2  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7831  0140A4  0EFF               	movlw	high STR_13
  7832  0140A6  0100               	movlb	0	; () banked
  7833  0140A8  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7834  0140AA  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7835                           
  7836                           ;RemoteCan.c: 528: }
  7837                           ;RemoteCan.c: 529: } else {
  7838  0140AE  D016               	goto	l8557
  7839  0140B0                     l8551:
  7840                           
  7841                           ;RemoteCan.c: 530: LCD_write_message("P   ");
  7842  0140B0  0EEB               	movlw	low STR_14
  7843  0140B2  0100               	movlb	0	; () banked
  7844  0140B4  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7845  0140B6  0EFF               	movlw	high STR_14
  7846  0140B8  0100               	movlb	0	; () banked
  7847  0140BA  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7848  0140BC  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7849                           
  7850                           ;RemoteCan.c: 531: }
  7851                           ;RemoteCan.c: 532: } else {
  7852  0140C0  D00D               	goto	l8557
  7853  0140C2                     l908:
  7854                           
  7855                           ;RemoteCan.c: 533: row_refresh = 1;
  7856  0140C2  8A4B               	bsf	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7857                           
  7858                           ;RemoteCan.c: 534: LCD_goto_line(2);
  7859  0140C4  0E02               	movlw	2
  7860  0140C6  EC35  F0A9         	call	_LCD_goto_line
  7861                           
  7862                           ;RemoteCan.c: 535: LCD_write_message("-> Safety brake ON<-");
  7863  0140CA  0ED7               	movlw	low STR_15
  7864  0140CC  0100               	movlb	0	; () banked
  7865  0140CE  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7866  0140D0  0EFE               	movlw	high STR_15
  7867  0140D2  0100               	movlb	0	; () banked
  7868  0140D4  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7869  0140D6  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7870  0140DA  D000               	goto	l8557
  7871  0140DC                     l8557:
  7872                           
  7873                           ;RemoteCan.c: 536: }
  7874                           ;RemoteCan.c: 539: LCD_goto_xy(8, 3);
  7875  0140DC  0E03               	movlw	3
  7876  0140DE  0100               	movlb	0	; () banked
  7877  0140E0  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  7878  0140E2  0E08               	movlw	8
  7879  0140E4  EC78  F0B0         	call	_LCD_goto_xy
  7880                           
  7881                           ;RemoteCan.c: 540: LCD_write_string(str);
  7882  0140E8  0E0A               	movlw	low _str
  7883  0140EA  0100               	movlb	0	; () banked
  7884  0140EC  6F83               	movwf	LCD_write_string@buffer& (0+255),b
  7885  0140EE  0E01               	movlw	high _str
  7886  0140F0  0100               	movlb	0	; () banked
  7887  0140F2  6F84               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  7888  0140F4  EC30  F0B0         	call	_LCD_write_string	;wreg free
  7889                           
  7890                           ;RemoteCan.c: 542: if ((low_battery == 0) || (battery_charging == 0)) {
  7891  0140F8  A04B               	btfss	_low_battery/(0+8),_low_battery& (0+7),c	;volatile
  7892  0140FA  D002               	goto	l917
  7893  0140FC  BA4A               	btfsc	_battery_charging/(0+8),_battery_charging& (0+7),c	;volatile
  7894  0140FE  D031               	goto	l8577
  7895  014100                     l917:
  7896                           
  7897                           ;RemoteCan.c: 543: if (LCD_4TH_ROW_MODE == 0) {
  7898  014100  B64A               	btfsc	_LCD_4TH_ROW_MODE/(0+8),_LCD_4TH_ROW_MODE& (0+7),c	;volatile
  7899  014102  D01C               	goto	l8573
  7900                           
  7901                           ;RemoteCan.c: 545: LCD_goto_xy(14, 4);
  7902  014104  0E04               	movlw	4
  7903  014106  0100               	movlb	0	; () banked
  7904  014108  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  7905  01410A  0E0E               	movlw	14
  7906  01410C  EC78  F0B0         	call	_LCD_goto_xy
  7907                           
  7908                           ;RemoteCan.c: 546: if (parking_state == 0) {
  7909  014110  0100               	movlb	0	; () banked
  7910  014112  51E5               	movf	_parking_state& (0+255),w,b	;volatile
  7911  014114  A4D8               	btfss	status,2,c
  7912  014116  D009               	goto	l8571
  7913                           
  7914                           ; BSR set to: 0
  7915                           ;RemoteCan.c: 547: LCD_write_message("OFF    ");
  7916  014118  0ED4               	movlw	low STR_16
  7917  01411A  0100               	movlb	0	; () banked
  7918  01411C  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7919  01411E  0EFF               	movlw	high STR_16
  7920  014120  0100               	movlb	0	; () banked
  7921  014122  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7922  014124  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7923                           
  7924                           ;RemoteCan.c: 548: } else {
  7925  014128  0012               	return	
  7926  01412A                     l8571:
  7927                           
  7928                           ;RemoteCan.c: 549: LCD_write_message("SEARCH ");
  7929  01412A  0EDC               	movlw	low STR_17
  7930  01412C  0100               	movlb	0	; () banked
  7931  01412E  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7932  014130  0EFF               	movlw	high STR_17
  7933  014132  0100               	movlb	0	; () banked
  7934  014134  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7935  014136  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7936                           
  7937                           ;RemoteCan.c: 550: }
  7938                           ;RemoteCan.c: 551: } else {
  7939  01413A  0012               	return	
  7940  01413C                     l8573:
  7941                           
  7942                           ;RemoteCan.c: 553: LCD_goto_xy(7, 4);
  7943  01413C  0E04               	movlw	4
  7944  01413E  0100               	movlb	0	; () banked
  7945  014140  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  7946  014142  0E07               	movlw	7
  7947  014144  EC78  F0B0         	call	_LCD_goto_xy
  7948                           
  7949                           ;RemoteCan.c: 554: LCD_write_integer(user_data, 0, 0x01);
  7950  014148  C00F  F08A         	movff	_user_data,LCD_write_integer@value	;volatile
  7951  01414C  C010  F08B         	movff	_user_data+1,LCD_write_integer@value+1	;volatile
  7952  014150  0E00               	movlw	0
  7953  014152  0100               	movlb	0	; () banked
  7954  014154  6F8C               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  7955  014156  0E01               	movlw	1
  7956  014158  0100               	movlb	0	; () banked
  7957  01415A  6F8D               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  7958  01415C  ECE6  F0A2         	call	_LCD_write_integer	;wreg free
  7959                           
  7960                           ;RemoteCan.c: 555: }
  7961                           ;RemoteCan.c: 556: } else {
  7962  014160  0012               	return	
  7963  014162                     l8577:
  7964                           
  7965                           ;RemoteCan.c: 557: LCD_goto_line(4);
  7966  014162  0E04               	movlw	4
  7967  014164  EC35  F0A9         	call	_LCD_goto_line
  7968                           
  7969                           ;RemoteCan.c: 558: if (battery_charging == 1) {
  7970  014168  AA4A               	btfss	_battery_charging/(0+8),_battery_charging& (0+7),c	;volatile
  7971  01416A  D009               	goto	l8583
  7972                           
  7973                           ;RemoteCan.c: 559: LCD_write_message("Battery charging... ");
  7974  01416C  0E44               	movlw	low STR_18
  7975  01416E  0100               	movlb	0	; () banked
  7976  014170  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7977  014172  0EFE               	movlw	high STR_18
  7978  014174  0100               	movlb	0	; () banked
  7979  014176  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7980  014178  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7981                           
  7982                           ;RemoteCan.c: 560: } else {
  7983  01417C  0012               	return	
  7984  01417E                     l8583:
  7985                           
  7986                           ;RemoteCan.c: 561: LCD_write_message("[!]  Low battery [!]");
  7987  01417E  0E94               	movlw	low STR_19
  7988  014180  0100               	movlb	0	; () banked
  7989  014182  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7990  014184  0EFF               	movlw	high STR_19
  7991  014186  0100               	movlb	0	; () banked
  7992  014188  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7993  01418A  EC99  F0AF         	call	_LCD_write_message	;wreg free
  7994  01418E  0012               	return	
  7995  014190  0012               	return		;funcret
  7996  014192                     __end_of_LCD_Handler:
  7997                           	opt stack 0
  7998                           tblptru	equ	0xFF8
  7999                           tblptrh	equ	0xFF7
  8000                           tblptrl	equ	0xFF6
  8001                           tablat	equ	0xFF5
  8002                           prodh	equ	0xFF4
  8003                           prodl	equ	0xFF3
  8004                           intcon	equ	0xFF2
  8005                           postinc0	equ	0xFEE
  8006                           wreg	equ	0xFE8
  8007                           postinc2	equ	0xFDE
  8008                           fsr2h	equ	0xFDA
  8009                           fsr2l	equ	0xFD9
  8010                           status	equ	0xFD8
  8011                           
  8012 ;; *************** function _sprintf *****************
  8013 ;; Defined at:
  8014 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;  sp              2    0[BANK1 ] PTR unsigned char 
  8017 ;;		 -> str(12), 
  8018 ;;  f               2    2[BANK1 ] PTR const unsigned char 
  8019 ;;		 -> STR_5(5), 
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;  fval            4   28[BANK1 ] PTR const unsigned char 
  8022 ;;  tmpval          4   22[BANK1 ] struct .
  8023 ;;  val             4   16[BANK1 ] unsigned long 
  8024 ;;  cp              3    0        PTR const unsigned char 
  8025 ;;  prec            2   26[BANK1 ] int 
  8026 ;;  exp             2   20[BANK1 ] int 
  8027 ;;  flag            2   14[BANK1 ] unsigned short 
  8028 ;;  ap              2   12[BANK1 ] PTR void [1]
  8029 ;;		 -> ?_sprintf(2), 
  8030 ;;  len             2    0        unsigned int 
  8031 ;;  width           2    0        int 
  8032 ;;  c               1   32[BANK1 ] char 
  8033 ;;  d               1    0        unsigned char 
  8034 ;; Return value:  Size  Location     Type
  8035 ;;                  2    0[BANK1 ] int 
  8036 ;; Registers used:
  8037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8038 ;; Tracked objects:
  8039 ;;		On entry : 0/0
  8040 ;;		On exit  : 0/0
  8041 ;;		Unchanged: 0/0
  8042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8043 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8044 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  8045 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8046 ;;      Totals:         0       2      33       0       0       0       0       0       0       0       0       0       
      +0       0
  8047 ;;Total ram usage:       35 bytes
  8048 ;; Hardware stack levels used:    1
  8049 ;; Hardware stack levels required when called:    6
  8050 ;; This function calls:
  8051 ;;		___awdiv
  8052 ;;		___fladd
  8053 ;;		___flge
  8054 ;;		___flmul
  8055 ;;		___flneg
  8056 ;;		___flsub
  8057 ;;		___fltol
  8058 ;;		___lldiv
  8059 ;;		___llmod
  8060 ;;		___lltofl
  8061 ;;		___wmul
  8062 ;;		__div_to_l_
  8063 ;;		__tdiv_to_l_
  8064 ;;		_fround
  8065 ;;		_isdigit
  8066 ;;		_scale
  8067 ;; This function is called by:
  8068 ;;		_LCD_Handler
  8069 ;; This function uses a non-reentrant model
  8070 ;;
  8071                           
  8072                           	psect	text12
  8073  011444                     __ptext12:
  8074                           	opt stack 0
  8075  011444                     _sprintf:
  8076                           	opt stack 23
  8077                           
  8078                           ;doprnt.c: 494: va_list ap;
  8079                           ;doprnt.c: 499: signed char c;
  8080                           ;doprnt.c: 501: int width;
  8081                           ;doprnt.c: 504: int prec;
  8082                           ;doprnt.c: 508: unsigned short flag;
  8083                           ;doprnt.c: 515: char d;
  8084                           ;doprnt.c: 516: double fval;
  8085                           ;doprnt.c: 517: int exp;
  8086                           ;doprnt.c: 523: union {
  8087                           ;doprnt.c: 524: unsigned long vd;
  8088                           ;doprnt.c: 525: double integ;
  8089                           ;doprnt.c: 526: } tmpval;
  8090                           ;doprnt.c: 528: unsigned long val;
  8091                           ;doprnt.c: 529: unsigned len;
  8092                           ;doprnt.c: 530: const char * cp;
  8093                           ;doprnt.c: 533: *ap = __va_start();
  8094                           
  8095                           ;incstack = 0
  8096  011444  0E3A               	movlw	low (?_sprintf+4)
  8097  011446  0101               	movlb	1	; () banked
  8098  011448  6F42               	movwf	sprintf@ap& (0+255),b
  8099  01144A  0E01               	movlw	high (?_sprintf+4)
  8100  01144C  0101               	movlb	1	; () banked
  8101  01144E  6F43               	movwf	(sprintf@ap+1)& (0+255),b
  8102                           
  8103                           ;doprnt.c: 536: while(c = *f++) {
  8104  011450  EF8D  F08E         	goto	l8331
  8105  011454                     l8133:
  8106                           
  8107                           ; BSR set to: 1
  8108                           ;doprnt.c: 538: if(c != '%')
  8109  011454  0E25               	movlw	37
  8110  011456  0101               	movlb	1	; () banked
  8111  011458  1956               	xorwf	sprintf@c& (0+255),w,b
  8112  01145A  B4D8               	btfsc	status,2,c
  8113  01145C  D008               	goto	l8139
  8114                           
  8115                           ; BSR set to: 1
  8116                           ;doprnt.c: 540: {
  8117                           ;doprnt.c: 541: ((*sp++ = (c)));
  8118  01145E  C136  FFD9         	movff	sprintf@sp,fsr2l
  8119  011462  C137  FFDA         	movff	sprintf@sp+1,fsr2h
  8120  011466  C156  FFDF         	movff	sprintf@c,indf2
  8121  01146A  EF89  F08E         	goto	l8329
  8122  01146E                     l8139:
  8123                           
  8124                           ; BSR set to: 1
  8125                           ;doprnt.c: 543: }
  8126                           ;doprnt.c: 548: flag = 0;
  8127  01146E  0E00               	movlw	0
  8128  011470  0101               	movlb	1	; () banked
  8129  011472  6F45               	movwf	(sprintf@flag+1)& (0+255),b
  8130  011474  0E00               	movlw	0
  8131  011476  6F44               	movwf	sprintf@flag& (0+255),b
  8132                           
  8133                           ; BSR set to: 1
  8134                           ;doprnt.c: 611: if(*f == '.') {
  8135  011478  C138  FFF6         	movff	sprintf@f,tblptrl
  8136  01147C  C139  FFF7         	movff	sprintf@f+1,tblptrh
  8137  011480                     	if	0	;tblptru may be non-zero
  8138  011480                     	endif
  8139  011480                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8140  011480  0E00               	movlw	low (__mediumconst shr (0+16))
  8141  011482  6EF8               	movwf	tblptru,c
  8142  011484                     	endif
  8143  011484  0008               	tblrd		*
  8144  011486  50F5               	movf	tablat,w,c
  8145  011488  0A2E               	xorlw	46
  8146  01148A  A4D8               	btfss	status,2,c
  8147  01148C  D03F               	goto	l8153
  8148                           
  8149                           ; BSR set to: 1
  8150                           ;doprnt.c: 612: flag |= 0x4000;
  8151  01148E  0101               	movlb	1	; () banked
  8152  011490  8D45               	bsf	(sprintf@flag+1)& (0+255),6,b
  8153                           
  8154                           ;doprnt.c: 613: f++;
  8155  011492  0101               	movlb	1	; () banked
  8156  011494  4B38               	infsnz	sprintf@f& (0+255),f,b
  8157  011496  2B39               	incf	(sprintf@f+1)& (0+255),f,b
  8158                           
  8159                           ; BSR set to: 1
  8160                           ;doprnt.c: 620: {
  8161                           ;doprnt.c: 621: prec = 0;
  8162  011498  0E00               	movlw	0
  8163  01149A  0101               	movlb	1	; () banked
  8164  01149C  6F51               	movwf	(sprintf@prec+1)& (0+255),b
  8165  01149E  0E00               	movlw	0
  8166  0114A0  6F50               	movwf	sprintf@prec& (0+255),b
  8167                           
  8168                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  8169  0114A2  D026               	goto	l8151
  8170  0114A4                     l8147:
  8171                           
  8172                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  8173  0114A4  C150  F072         	movff	sprintf@prec,___wmul@multiplier
  8174  0114A8  C151  F073         	movff	sprintf@prec+1,___wmul@multiplier+1
  8175  0114AC  0E00               	movlw	0
  8176  0114AE  0100               	movlb	0	; () banked
  8177  0114B0  6F75               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8178  0114B2  0E0A               	movlw	10
  8179  0114B4  6F74               	movwf	___wmul@multiplicand& (0+255),b
  8180  0114B6  EC62  F0AF         	call	___wmul	;wreg free
  8181  0114BA  C138  FFF6         	movff	sprintf@f,tblptrl
  8182  0114BE  C139  FFF7         	movff	sprintf@f+1,tblptrh
  8183  0114C2                     	if	0	;tblptru may be non-zero
  8184  0114C2                     	endif
  8185  0114C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8186  0114C2  0E00               	movlw	low (__mediumconst shr (0+16))
  8187  0114C4  6EF8               	movwf	tblptru,c
  8188  0114C6                     	endif
  8189  0114C6  0008               	tblrd		*
  8190  0114C8  50F5               	movf	tablat,w,c
  8191  0114CA  0100               	movlb	0	; () banked
  8192  0114CC  2772               	addwf	?___wmul& (0+255),f,b
  8193  0114CE  0E00               	movlw	0
  8194  0114D0  0100               	movlb	0	; () banked
  8195  0114D2  2373               	addwfc	(?___wmul+1)& (0+255),f,b
  8196  0114D4  0ED0               	movlw	208
  8197  0114D6  0100               	movlb	0	; () banked
  8198  0114D8  2572               	addwf	?___wmul& (0+255),w,b
  8199  0114DA  0101               	movlb	1	; () banked
  8200  0114DC  6F50               	movwf	sprintf@prec& (0+255),b
  8201  0114DE  0EFF               	movlw	255
  8202  0114E0  0100               	movlb	0	; () banked
  8203  0114E2  2173               	addwfc	(?___wmul+1)& (0+255),w,b
  8204  0114E4  0101               	movlb	1	; () banked
  8205  0114E6  6F51               	movwf	(sprintf@prec+1)& (0+255),b
  8206                           
  8207                           ; BSR set to: 1
  8208  0114E8  0101               	movlb	1	; () banked
  8209  0114EA  4B38               	infsnz	sprintf@f& (0+255),f,b
  8210  0114EC  2B39               	incf	(sprintf@f+1)& (0+255),f,b
  8211  0114EE  D000               	goto	l8151
  8212  0114F0                     l8151:
  8213                           
  8214                           ; BSR set to: 1
  8215  0114F0  C138  FFF6         	movff	sprintf@f,tblptrl
  8216  0114F4  C139  FFF7         	movff	sprintf@f+1,tblptrh
  8217  0114F8                     	if	0	;tblptru may be non-zero
  8218  0114F8                     	endif
  8219  0114F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8220  0114F8  0E00               	movlw	low (__mediumconst shr (0+16))
  8221  0114FA  6EF8               	movwf	tblptru,c
  8222  0114FC                     	endif
  8223  0114FC  0008               	tblrd		*
  8224  0114FE  50F5               	movf	tablat,w,c
  8225  011500  EC19  F0B0         	call	_isdigit
  8226  011504  A0D8               	btfss	status,0,c
  8227  011506  D011               	goto	l8161
  8228  011508  D7CD               	goto	l8147
  8229                           
  8230                           ;doprnt.c: 624: }
  8231                           ;doprnt.c: 625: } else {
  8232  01150A  D00F               	goto	l8161
  8233  01150C                     l8153:
  8234                           
  8235                           ;doprnt.c: 626: prec = 0;
  8236  01150C  0E00               	movlw	0
  8237  01150E  0101               	movlb	1	; () banked
  8238  011510  6F51               	movwf	(sprintf@prec+1)& (0+255),b
  8239  011512  0E00               	movlw	0
  8240  011514  6F50               	movwf	sprintf@prec& (0+255),b
  8241                           
  8242                           ; BSR set to: 1
  8243                           ;doprnt.c: 628: flag |= 0x1000;
  8244  011516  0101               	movlb	1	; () banked
  8245  011518  8945               	bsf	(sprintf@flag+1)& (0+255),4,b
  8246                           
  8247                           ; BSR set to: 1
  8248                           ;doprnt.c: 630: }
  8249                           ;doprnt.c: 635: switch(c = *f++) {
  8250  01151A  D007               	goto	l8161
  8251                           
  8252                           ; BSR set to: 1
  8253                           ;doprnt.c: 638: goto alldone;
  8254                           
  8255                           ;doprnt.c: 637: case 0:
  8256  01151C  EFA0  F08E         	goto	l8333
  8257  011520                     l8157:
  8258                           
  8259                           ; BSR set to: 1
  8260                           ;doprnt.c: 663: flag |= 0x400;
  8261  011520  0101               	movlb	1	; () banked
  8262  011522  8545               	bsf	(sprintf@flag+1)& (0+255),2,b
  8263                           
  8264                           ;doprnt.c: 664: break;
  8265  011524  D017               	goto	l8163
  8266                           
  8267                           ; BSR set to: 1
  8268                           ;doprnt.c: 813: continue;
  8269                           
  8270                           ;doprnt.c: 802: default:
  8271  011526  D3F9               	goto	l8331
  8272                           
  8273                           ; BSR set to: 1
  8274                           ;doprnt.c: 822: }
  8275  011528  D015               	goto	l8163
  8276  01152A                     l8161:
  8277  01152A  C138  FFF6         	movff	sprintf@f,tblptrl
  8278  01152E  C139  FFF7         	movff	sprintf@f+1,tblptrh
  8279  011532  0101               	movlb	1	; () banked
  8280  011534  4B38               	infsnz	sprintf@f& (0+255),f,b
  8281  011536  2B39               	incf	(sprintf@f+1)& (0+255),f,b
  8282  011538                     	if	0	;tblptru may be non-zero
  8283  011538                     	endif
  8284  011538                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8285  011538  0E00               	movlw	low (__mediumconst shr (0+16))
  8286  01153A  6EF8               	movwf	tblptru,c
  8287  01153C                     	endif
  8288  01153C  0008               	tblrd		*
  8289  01153E  CFF5 F156          	movff	tablat,sprintf@c
  8290  011542  0101               	movlb	1	; () banked
  8291  011544  5156               	movf	sprintf@c& (0+255),w,b
  8292                           
  8293                           ; Switch size 1, requested type "space"
  8294                           ; Number of cases is 2, Range of values is 0 to 102
  8295                           ; switch strategies available:
  8296                           ; Name         Instructions Cycles
  8297                           ; simple_byte            7     4 (average)
  8298                           ;	Chosen strategy is simple_byte
  8299  011546  0A00               	xorlw	0	; case 0
  8300  011548  B4D8               	btfsc	status,2,c
  8301  01154A  D3FA               	goto	l8333
  8302  01154C  0A66               	xorlw	102	; case 102
  8303  01154E  B4D8               	btfsc	status,2,c
  8304  011550  D7E7               	goto	l8157
  8305  011552  D3E3               	goto	l8331
  8306  011554                     l8163:
  8307                           
  8308                           ; BSR set to: 1
  8309                           ;doprnt.c: 825: if(flag & (0x700)) {
  8310  011554  0E07               	movlw	7
  8311  011556  0101               	movlb	1	; () banked
  8312  011558  1545               	andwf	(sprintf@flag+1)& (0+255),w,b
  8313  01155A  B4D8               	btfsc	status,2,c
  8314  01155C  D383               	goto	l8311
  8315                           
  8316                           ; BSR set to: 1
  8317                           ;doprnt.c: 827: if(flag & 0x1000)
  8318  01155E  0101               	movlb	1	; () banked
  8319  011560  A945               	btfss	(sprintf@flag+1)& (0+255),4,b
  8320  011562  D006               	goto	l8169
  8321                           
  8322                           ; BSR set to: 1
  8323                           ;doprnt.c: 829: prec = 6;
  8324  011564  0E00               	movlw	0
  8325  011566  0101               	movlb	1	; () banked
  8326  011568  6F51               	movwf	(sprintf@prec+1)& (0+255),b
  8327  01156A  0E06               	movlw	6
  8328  01156C  6F50               	movwf	sprintf@prec& (0+255),b
  8329  01156E  D000               	goto	l8169
  8330  011570                     l8169:
  8331                           
  8332                           ; BSR set to: 1
  8333                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  8334  011570  C142  FFD9         	movff	sprintf@ap,fsr2l
  8335  011574  C143  FFDA         	movff	sprintf@ap+1,fsr2h
  8336  011578  CFDE F152          	movff	postinc2,sprintf@fval
  8337  01157C  CFDE F153          	movff	postinc2,sprintf@fval+1
  8338  011580  CFDE F154          	movff	postinc2,sprintf@fval+2
  8339  011584  CFDE F155          	movff	postinc2,sprintf@fval+3
  8340                           
  8341                           ; BSR set to: 1
  8342  011588  0E04               	movlw	4
  8343  01158A  0101               	movlb	1	; () banked
  8344  01158C  2742               	addwf	sprintf@ap& (0+255),f,b
  8345  01158E  0E00               	movlw	0
  8346  011590  2343               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8347                           
  8348                           ; BSR set to: 1
  8349                           ;doprnt.c: 831: if(fval < 0.0) {
  8350  011592  0101               	movlb	1	; () banked
  8351  011594  AF55               	btfss	(sprintf@fval+3)& (0+255),7,b
  8352  011596  D016               	goto	l8179
  8353                           
  8354                           ; BSR set to: 1
  8355                           ;doprnt.c: 832: fval = -fval;
  8356  011598  C152  F090         	movff	sprintf@fval,___flneg@f1
  8357  01159C  C153  F091         	movff	sprintf@fval+1,___flneg@f1+1
  8358  0115A0  C154  F092         	movff	sprintf@fval+2,___flneg@f1+2
  8359  0115A4  C155  F093         	movff	sprintf@fval+3,___flneg@f1+3
  8360  0115A8  EC0A  F0AF         	call	___flneg	;wreg free
  8361  0115AC  C090  F152         	movff	?___flneg,sprintf@fval
  8362  0115B0  C091  F153         	movff	?___flneg+1,sprintf@fval+1
  8363  0115B4  C092  F154         	movff	?___flneg+2,sprintf@fval+2
  8364  0115B8  C093  F155         	movff	?___flneg+3,sprintf@fval+3
  8365                           
  8366                           ;doprnt.c: 833: flag |= 0x03;
  8367  0115BC  0E03               	movlw	3
  8368  0115BE  0101               	movlb	1	; () banked
  8369  0115C0  1344               	iorwf	sprintf@flag& (0+255),f,b
  8370  0115C2  D000               	goto	l8179
  8371  0115C4                     l8179:
  8372                           
  8373                           ; BSR set to: 1
  8374                           ;doprnt.c: 834: }
  8375                           ;doprnt.c: 835: exp = 0;
  8376  0115C4  0E00               	movlw	0
  8377  0115C6  0101               	movlb	1	; () banked
  8378  0115C8  6F4B               	movwf	(sprintf@exp+1)& (0+255),b
  8379  0115CA  0E00               	movlw	0
  8380  0115CC  6F4A               	movwf	sprintf@exp& (0+255),b
  8381                           
  8382                           ; BSR set to: 1
  8383                           ;doprnt.c: 836: if( fval!=0) {
  8384  0115CE  0101               	movlb	1	; () banked
  8385  0115D0  5152               	movf	sprintf@fval& (0+255),w,b
  8386  0115D2  0101               	movlb	1	; () banked
  8387  0115D4  1153               	iorwf	(sprintf@fval+1)& (0+255),w,b
  8388  0115D6  0101               	movlb	1	; () banked
  8389  0115D8  1154               	iorwf	(sprintf@fval+2)& (0+255),w,b
  8390  0115DA  0101               	movlb	1	; () banked
  8391  0115DC  1155               	iorwf	(sprintf@fval+3)& (0+255),w,b
  8392  0115DE  B4D8               	btfsc	status,2,c
  8393  0115E0  D090               	goto	l8207
  8394                           
  8395                           ; BSR set to: 1
  8396                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  8397  0115E2  0101               	movlb	1	; () banked
  8398  0115E4  3554               	rlcf	(sprintf@fval+2)& (0+255),w,b
  8399  0115E6  3555               	rlcf	(sprintf@fval+3)& (0+255),w,b
  8400  0115E8  0F82               	addlw	130
  8401  0115EA  0101               	movlb	1	; () banked
  8402  0115EC  6F4A               	movwf	sprintf@exp& (0+255),b
  8403  0115EE  0101               	movlb	1	; () banked
  8404  0115F0  6B4B               	clrf	(sprintf@exp+1)& (0+255),b
  8405  0115F2  0EFF               	movlw	255
  8406  0115F4  234B               	addwfc	(sprintf@exp+1)& (0+255),f,b
  8407                           
  8408                           ; BSR set to: 1
  8409                           ;doprnt.c: 838: exp--;
  8410  0115F6  0101               	movlb	1	; () banked
  8411  0115F8  074A               	decf	sprintf@exp& (0+255),f,b
  8412  0115FA  A0D8               	btfss	status,0,c
  8413  0115FC  074B               	decf	(sprintf@exp+1)& (0+255),f,b
  8414                           
  8415                           ; BSR set to: 1
  8416                           ;doprnt.c: 839: exp *= 3;
  8417  0115FE  C14A  F072         	movff	sprintf@exp,___wmul@multiplier
  8418  011602  C14B  F073         	movff	sprintf@exp+1,___wmul@multiplier+1
  8419  011606  0E00               	movlw	0
  8420  011608  0100               	movlb	0	; () banked
  8421  01160A  6F75               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8422  01160C  0E03               	movlw	3
  8423  01160E  6F74               	movwf	___wmul@multiplicand& (0+255),b
  8424  011610  EC62  F0AF         	call	___wmul	;wreg free
  8425  011614  C072  F14A         	movff	?___wmul,sprintf@exp
  8426  011618  C073  F14B         	movff	?___wmul+1,sprintf@exp+1
  8427                           
  8428                           ;doprnt.c: 840: exp /= 10;
  8429  01161C  C14A  F078         	movff	sprintf@exp,___awdiv@dividend
  8430  011620  C14B  F079         	movff	sprintf@exp+1,___awdiv@dividend+1
  8431  011624  0E00               	movlw	0
  8432  011626  0100               	movlb	0	; () banked
  8433  011628  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8434  01162A  0E0A               	movlw	10
  8435  01162C  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8436  01162E  ECAC  F0A9         	call	___awdiv	;wreg free
  8437  011632  C078  F14A         	movff	?___awdiv,sprintf@exp
  8438  011636  C079  F14B         	movff	?___awdiv+1,sprintf@exp+1
  8439                           
  8440                           ;doprnt.c: 841: if(exp < 0)
  8441  01163A  0101               	movlb	1	; () banked
  8442  01163C  AF4B               	btfss	(sprintf@exp+1)& (0+255),7,b
  8443  01163E  D005               	goto	l8195
  8444                           
  8445                           ; BSR set to: 1
  8446                           ;doprnt.c: 842: exp--;
  8447  011640  0101               	movlb	1	; () banked
  8448  011642  074A               	decf	sprintf@exp& (0+255),f,b
  8449  011644  A0D8               	btfss	status,0,c
  8450  011646  074B               	decf	(sprintf@exp+1)& (0+255),f,b
  8451  011648  D000               	goto	l8195
  8452  01164A                     l8195:
  8453                           
  8454                           ; BSR set to: 1
  8455                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  8456  01164A  0101               	movlb	1	; () banked
  8457  01164C  514A               	movf	sprintf@exp& (0+255),w,b
  8458  01164E  0800               	sublw	0
  8459  011650  EC61  F098         	call	_scale
  8460  011654  C090  F14C         	movff	?_scale,sprintf@tmpval
  8461  011658  C091  F14D         	movff	?_scale+1,sprintf@tmpval+1
  8462  01165C  C092  F14E         	movff	?_scale+2,sprintf@tmpval+2
  8463  011660  C093  F14F         	movff	?_scale+3,sprintf@tmpval+3
  8464                           
  8465                           ;doprnt.c: 847: tmpval.integ *= fval;
  8466  011664  C14C  F081         	movff	sprintf@tmpval,___flmul@f1
  8467  011668  C14D  F082         	movff	sprintf@tmpval+1,___flmul@f1+1
  8468  01166C  C14E  F083         	movff	sprintf@tmpval+2,___flmul@f1+2
  8469  011670  C14F  F084         	movff	sprintf@tmpval+3,___flmul@f1+3
  8470  011674  C152  F085         	movff	sprintf@fval,___flmul@f2
  8471  011678  C153  F086         	movff	sprintf@fval+1,___flmul@f2+1
  8472  01167C  C154  F087         	movff	sprintf@fval+2,___flmul@f2+2
  8473  011680  C155  F088         	movff	sprintf@fval+3,___flmul@f2+3
  8474  011684  ECDF  F0A6         	call	___flmul	;wreg free
  8475  011688  C081  F14C         	movff	?___flmul,sprintf@tmpval
  8476  01168C  C082  F14D         	movff	?___flmul+1,sprintf@tmpval+1
  8477  011690  C083  F14E         	movff	?___flmul+2,sprintf@tmpval+2
  8478  011694  C084  F14F         	movff	?___flmul+3,sprintf@tmpval+3
  8479                           
  8480                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  8481  011698  C14C  F072         	movff	sprintf@tmpval,___flge@ff1
  8482  01169C  C14D  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  8483  0116A0  C14E  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  8484  0116A4  C14F  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  8485  0116A8  0E00               	movlw	0
  8486  0116AA  0100               	movlb	0	; () banked
  8487  0116AC  6F76               	movwf	___flge@ff2& (0+255),b
  8488  0116AE  0E00               	movlw	0
  8489  0116B0  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  8490  0116B2  0E80               	movlw	128
  8491  0116B4  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  8492  0116B6  0E3F               	movlw	63
  8493  0116B8  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  8494  0116BA  ECB9  F0A8         	call	___flge	;wreg free
  8495  0116BE  0100               	movlb	0	; () banked
  8496  0116C0  B0D8               	btfsc	status,0,c
  8497  0116C2  D005               	goto	l8203
  8498                           
  8499                           ; BSR set to: 0
  8500                           ;doprnt.c: 849: exp--;
  8501  0116C4  0101               	movlb	1	; () banked
  8502  0116C6  074A               	decf	sprintf@exp& (0+255),f,b
  8503  0116C8  A0D8               	btfss	status,0,c
  8504  0116CA  074B               	decf	(sprintf@exp+1)& (0+255),f,b
  8505  0116CC  D01A               	goto	l8207
  8506  0116CE                     l8203:
  8507                           
  8508                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  8509  0116CE  C14C  F072         	movff	sprintf@tmpval,___flge@ff1
  8510  0116D2  C14D  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  8511  0116D6  C14E  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  8512  0116DA  C14F  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  8513  0116DE  0E00               	movlw	0
  8514  0116E0  0100               	movlb	0	; () banked
  8515  0116E2  6F76               	movwf	___flge@ff2& (0+255),b
  8516  0116E4  0E00               	movlw	0
  8517  0116E6  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  8518  0116E8  0E20               	movlw	32
  8519  0116EA  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  8520  0116EC  0E41               	movlw	65
  8521  0116EE  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  8522  0116F0  ECB9  F0A8         	call	___flge	;wreg free
  8523  0116F4  0100               	movlb	0	; () banked
  8524  0116F6  A0D8               	btfss	status,0,c
  8525  0116F8  D004               	goto	l8207
  8526                           
  8527                           ; BSR set to: 0
  8528                           ;doprnt.c: 851: exp++;
  8529  0116FA  0101               	movlb	1	; () banked
  8530  0116FC  4B4A               	infsnz	sprintf@exp& (0+255),f,b
  8531  0116FE  2B4B               	incf	(sprintf@exp+1)& (0+255),f,b
  8532                           
  8533                           ; BSR set to: 1
  8534                           
  8535                           ; BSR set to: 1
  8536  011700  D000               	goto	l8207
  8537  011702                     l8207:
  8538                           
  8539                           ;doprnt.c: 852: }
  8540                           ;doprnt.c: 1112: if(prec <= 12)
  8541  011702  0101               	movlb	1	; () banked
  8542  011704  BF51               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8543  011706  D008               	goto	l8209
  8544  011708  0101               	movlb	1	; () banked
  8545  01170A  5151               	movf	(sprintf@prec+1)& (0+255),w,b
  8546  01170C  E124               	bnz	l8211
  8547  01170E  0E0D               	movlw	13
  8548  011710  0101               	movlb	1	; () banked
  8549  011712  5D50               	subwf	sprintf@prec& (0+255),w,b
  8550  011714  B0D8               	btfsc	status,0,c
  8551  011716  D01F               	goto	l8211
  8552  011718                     l8209:
  8553                           
  8554                           ; BSR set to: 1
  8555                           ;doprnt.c: 1113: fval += fround(prec);
  8556  011718  C152  F09D         	movff	sprintf@fval,___fladd@f1
  8557  01171C  C153  F09E         	movff	sprintf@fval+1,___fladd@f1+1
  8558  011720  C154  F09F         	movff	sprintf@fval+2,___fladd@f1+2
  8559  011724  C155  F0A0         	movff	sprintf@fval+3,___fladd@f1+3
  8560  011728  0101               	movlb	1	; () banked
  8561  01172A  5150               	movf	sprintf@prec& (0+255),w,b
  8562  01172C  ECCA  F09C         	call	_fround
  8563  011730  C090  F0A1         	movff	?_fround,___fladd@f2
  8564  011734  C091  F0A2         	movff	?_fround+1,___fladd@f2+1
  8565  011738  C092  F0A3         	movff	?_fround+2,___fladd@f2+2
  8566  01173C  C093  F0A4         	movff	?_fround+3,___fladd@f2+3
  8567  011740  ECC9  F0A0         	call	___fladd	;wreg free
  8568  011744  C09D  F152         	movff	?___fladd,sprintf@fval
  8569  011748  C09E  F153         	movff	?___fladd+1,sprintf@fval+1
  8570  01174C  C09F  F154         	movff	?___fladd+2,sprintf@fval+2
  8571  011750  C0A0  F155         	movff	?___fladd+3,sprintf@fval+3
  8572  011754  D000               	goto	l8211
  8573  011756                     l8211:
  8574                           
  8575                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  8576  011756  0101               	movlb	1	; () banked
  8577  011758  BF4B               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8578  01175A  D008               	goto	l8213
  8579  01175C  0101               	movlb	1	; () banked
  8580  01175E  514B               	movf	(sprintf@exp+1)& (0+255),w,b
  8581  011760  E130               	bnz	l8219
  8582  011762  0E0A               	movlw	10
  8583  011764  0101               	movlb	1	; () banked
  8584  011766  5D4A               	subwf	sprintf@exp& (0+255),w,b
  8585  011768  B0D8               	btfsc	status,0,c
  8586  01176A  D02B               	goto	l8219
  8587  01176C                     l8213:
  8588                           
  8589                           ; BSR set to: 1
  8590  01176C  0101               	movlb	1	; () banked
  8591  01176E  5152               	movf	sprintf@fval& (0+255),w,b
  8592  011770  0101               	movlb	1	; () banked
  8593  011772  1153               	iorwf	(sprintf@fval+1)& (0+255),w,b
  8594  011774  0101               	movlb	1	; () banked
  8595  011776  1154               	iorwf	(sprintf@fval+2)& (0+255),w,b
  8596  011778  0101               	movlb	1	; () banked
  8597  01177A  1155               	iorwf	(sprintf@fval+3)& (0+255),w,b
  8598  01177C  B4D8               	btfsc	status,2,c
  8599  01177E  D08C               	goto	l8233
  8600                           
  8601                           ; BSR set to: 1
  8602  011780  C152  F0A9         	movff	sprintf@fval,___fltol@f1
  8603  011784  C153  F0AA         	movff	sprintf@fval+1,___fltol@f1+1
  8604  011788  C154  F0AB         	movff	sprintf@fval+2,___fltol@f1+2
  8605  01178C  C155  F0AC         	movff	sprintf@fval+3,___fltol@f1+3
  8606  011790  EC2C  F0A8         	call	___fltol	;wreg free
  8607  011794  0100               	movlb	0	; () banked
  8608  011796  51A9               	movf	?___fltol& (0+255),w,b
  8609  011798  0100               	movlb	0	; () banked
  8610  01179A  11AA               	iorwf	(?___fltol+1)& (0+255),w,b
  8611  01179C  0100               	movlb	0	; () banked
  8612  01179E  11AB               	iorwf	(?___fltol+2)& (0+255),w,b
  8613  0117A0  0100               	movlb	0	; () banked
  8614  0117A2  11AC               	iorwf	(?___fltol+3)& (0+255),w,b
  8615  0117A4  A4D8               	btfss	status,2,c
  8616  0117A6  D078               	goto	l8233
  8617                           
  8618                           ; BSR set to: 0
  8619  0117A8  0101               	movlb	1	; () banked
  8620  0117AA  BF4B               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8621  0117AC  D075               	goto	l8233
  8622  0117AE  0101               	movlb	1	; () banked
  8623  0117B0  514B               	movf	(sprintf@exp+1)& (0+255),w,b
  8624  0117B2  E107               	bnz	l8219
  8625  0117B4  0E02               	movlw	2
  8626  0117B6  0101               	movlb	1	; () banked
  8627  0117B8  5D4A               	subwf	sprintf@exp& (0+255),w,b
  8628  0117BA  B0D8               	btfsc	status,0,c
  8629  0117BC  D002               	goto	l8219
  8630  0117BE  D06C               	goto	l8233
  8631  0117C0  D000               	goto	l8219
  8632  0117C2                     l8219:
  8633                           
  8634                           ; BSR set to: 1
  8635                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  8636  0117C2  C14C  F072         	movff	sprintf@tmpval,___flge@ff1
  8637  0117C6  C14D  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  8638  0117CA  C14E  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  8639  0117CE  C14F  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  8640  0117D2  0E5F               	movlw	95
  8641  0117D4  0100               	movlb	0	; () banked
  8642  0117D6  6F76               	movwf	___flge@ff2& (0+255),b
  8643  0117D8  0E70               	movlw	112
  8644  0117DA  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  8645  0117DC  0E89               	movlw	137
  8646  0117DE  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  8647  0117E0  0E40               	movlw	64
  8648  0117E2  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  8649  0117E4  ECB9  F0A8         	call	___flge	;wreg free
  8650  0117E8  0100               	movlb	0	; () banked
  8651  0117EA  B0D8               	btfsc	status,0,c
  8652  0117EC  D003               	goto	l8223
  8653                           
  8654                           ; BSR set to: 0
  8655                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  8656  0117EE  0101               	movlb	1	; () banked
  8657  0117F0  0EF7               	movlw	247
  8658  0117F2  D002               	goto	L5
  8659  0117F4                     l8223:
  8660                           
  8661                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  8662  0117F4  0101               	movlb	1	; () banked
  8663  0117F6  0EF8               	movlw	248
  8664  0117F8                     L5:
  8665  0117F8  274A               	addwf	sprintf@exp& (0+255),f,b
  8666  0117FA  0EFF               	movlw	255
  8667  0117FC  234B               	addwfc	(sprintf@exp+1)& (0+255),f,b
  8668  0117FE  D000               	goto	l8225
  8669  011800                     l8225:
  8670                           
  8671                           ; BSR set to: 1
  8672                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  8673  011800  0101               	movlb	1	; () banked
  8674  011802  514A               	movf	sprintf@exp& (0+255),w,b
  8675  011804  EC61  F098         	call	_scale
  8676  011808  C090  F14C         	movff	?_scale,sprintf@tmpval
  8677  01180C  C091  F14D         	movff	?_scale+1,sprintf@tmpval+1
  8678  011810  C092  F14E         	movff	?_scale+2,sprintf@tmpval+2
  8679  011814  C093  F14F         	movff	?_scale+3,sprintf@tmpval+3
  8680  011818  C152  F072         	movff	sprintf@fval,__div_to_l_@f1
  8681  01181C  C153  F073         	movff	sprintf@fval+1,__div_to_l_@f1+1
  8682  011820  C154  F074         	movff	sprintf@fval+2,__div_to_l_@f1+2
  8683  011824  C155  F075         	movff	sprintf@fval+3,__div_to_l_@f1+3
  8684  011828  C14C  F076         	movff	sprintf@tmpval,__div_to_l_@f2
  8685  01182C  C14D  F077         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  8686  011830  C14E  F078         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  8687  011834  C14F  F079         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  8688  011838  EC9E  F0A4         	call	__div_to_l_	;wreg free
  8689  01183C  C072  F146         	movff	?__div_to_l_,sprintf@val
  8690  011840  C073  F147         	movff	?__div_to_l_+1,sprintf@val+1
  8691  011844  C074  F148         	movff	?__div_to_l_+2,sprintf@val+2
  8692  011848  C075  F149         	movff	?__div_to_l_+3,sprintf@val+3
  8693  01184C  D01B               	goto	l8231
  8694  01184E  C152  F072         	movff	sprintf@fval,__tdiv_to_l_@f1
  8695  011852  C153  F073         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  8696  011856  C154  F074         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  8697  01185A  C155  F075         	movff	sprintf@fval+3,__tdiv_to_l_@f1+3
  8698  01185E  C14C  F076         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  8699  011862  C14D  F077         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  8700  011866  C14E  F078         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  8701  01186A  C14F  F079         	movff	sprintf@tmpval+3,__tdiv_to_l_@f2+3
  8702  01186E  ECCB  F0A3         	call	__tdiv_to_l_	;wreg free
  8703  011872  C072  F146         	movff	?__tdiv_to_l_,sprintf@val
  8704  011876  C073  F147         	movff	?__tdiv_to_l_+1,sprintf@val+1
  8705  01187A  C074  F148         	movff	?__tdiv_to_l_+2,sprintf@val+2
  8706  01187E  C075  F149         	movff	?__tdiv_to_l_+3,sprintf@val+3
  8707  011882  D000               	goto	l8231
  8708  011884                     l8231:
  8709                           
  8710                           ;doprnt.c: 1129: fval = 0.0;
  8711  011884  0E00               	movlw	0
  8712  011886  0101               	movlb	1	; () banked
  8713  011888  6F52               	movwf	sprintf@fval& (0+255),b
  8714  01188A  0E00               	movlw	0
  8715  01188C  6F53               	movwf	(sprintf@fval+1)& (0+255),b
  8716  01188E  0E00               	movlw	0
  8717  011890  6F54               	movwf	(sprintf@fval+2)& (0+255),b
  8718  011892  0E00               	movlw	0
  8719  011894  6F55               	movwf	(sprintf@fval+3)& (0+255),b
  8720                           
  8721                           ;doprnt.c: 1130: } else {
  8722  011896  D03C               	goto	l8237
  8723  011898                     l8233:
  8724                           
  8725                           ;doprnt.c: 1131: val = (unsigned long)fval;
  8726  011898  C152  F0A9         	movff	sprintf@fval,___fltol@f1
  8727  01189C  C153  F0AA         	movff	sprintf@fval+1,___fltol@f1+1
  8728  0118A0  C154  F0AB         	movff	sprintf@fval+2,___fltol@f1+2
  8729  0118A4  C155  F0AC         	movff	sprintf@fval+3,___fltol@f1+3
  8730  0118A8  EC2C  F0A8         	call	___fltol	;wreg free
  8731  0118AC  C0A9  F146         	movff	?___fltol,sprintf@val
  8732  0118B0  C0AA  F147         	movff	?___fltol+1,sprintf@val+1
  8733  0118B4  C0AB  F148         	movff	?___fltol+2,sprintf@val+2
  8734  0118B8  C0AC  F149         	movff	?___fltol+3,sprintf@val+3
  8735                           
  8736                           ;doprnt.c: 1132: fval -= (double)val;
  8737  0118BC  C152  F0A9         	movff	sprintf@fval,___flsub@f1
  8738  0118C0  C153  F0AA         	movff	sprintf@fval+1,___flsub@f1+1
  8739  0118C4  C154  F0AB         	movff	sprintf@fval+2,___flsub@f1+2
  8740  0118C8  C155  F0AC         	movff	sprintf@fval+3,___flsub@f1+3
  8741  0118CC  C146  F07C         	movff	sprintf@val,___lltofl@c
  8742  0118D0  C147  F07D         	movff	sprintf@val+1,___lltofl@c+1
  8743  0118D4  C148  F07E         	movff	sprintf@val+2,___lltofl@c+2
  8744  0118D8  C149  F07F         	movff	sprintf@val+3,___lltofl@c+3
  8745  0118DC  ECB4  F0AF         	call	___lltofl	;wreg free
  8746  0118E0  C07C  F0AD         	movff	?___lltofl,___flsub@f2
  8747  0118E4  C07D  F0AE         	movff	?___lltofl+1,___flsub@f2+1
  8748  0118E8  C07E  F0AF         	movff	?___lltofl+2,___flsub@f2+2
  8749  0118EC  C07F  F0B0         	movff	?___lltofl+3,___flsub@f2+3
  8750  0118F0  EC25  F0AE         	call	___flsub	;wreg free
  8751  0118F4  C0A9  F152         	movff	?___flsub,sprintf@fval
  8752  0118F8  C0AA  F153         	movff	?___flsub+1,sprintf@fval+1
  8753  0118FC  C0AB  F154         	movff	?___flsub+2,sprintf@fval+2
  8754  011900  C0AC  F155         	movff	?___flsub+3,sprintf@fval+3
  8755                           
  8756                           ;doprnt.c: 1133: exp = 0;
  8757  011904  0E00               	movlw	0
  8758  011906  0101               	movlb	1	; () banked
  8759  011908  6F4B               	movwf	(sprintf@exp+1)& (0+255),b
  8760  01190A  0E00               	movlw	0
  8761  01190C  6F4A               	movwf	sprintf@exp& (0+255),b
  8762  01190E  D000               	goto	l8237
  8763  011910                     l8237:
  8764                           
  8765                           ; BSR set to: 1
  8766                           ;doprnt.c: 1134: }
  8767                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8768  011910  0E01               	movlw	1
  8769  011912  0101               	movlb	1	; () banked
  8770  011914  6F56               	movwf	sprintf@c& (0+255),b
  8771  011916                     l8239:
  8772                           
  8773                           ; BSR set to: 1
  8774  011916  0E0A               	movlw	10
  8775  011918  0101               	movlb	1	; () banked
  8776  01191A  1956               	xorwf	sprintf@c& (0+255),w,b
  8777  01191C  B4D8               	btfsc	status,2,c
  8778  01191E  D025               	goto	l8251
  8779  011920  D001               	goto	l8243
  8780                           
  8781                           ; BSR set to: 1
  8782  011922  D023               	goto	l8251
  8783  011924                     l8243:
  8784                           
  8785                           ; BSR set to: 1
  8786                           ;doprnt.c: 1137: if(val < dpowers[c])
  8787  011924  0101               	movlb	1	; () banked
  8788  011926  5156               	movf	sprintf@c& (0+255),w,b
  8789  011928  0D04               	mullw	4
  8790  01192A  0E5F               	movlw	low _dpowers
  8791  01192C  24F3               	addwf	prodl,w,c
  8792  01192E  6EF6               	movwf	tblptrl,c
  8793  011930  0EFD               	movlw	high _dpowers
  8794  011932  20F4               	addwfc	prodh,w,c
  8795  011934  6EF7               	movwf	tblptrh,c
  8796  011936                     	if	1	;There are 3 active tblptr bytes
  8797  011936  6AF8               	clrf	tblptru,c
  8798  011938  0E00               	movlw	low (__mediumconst shr (0+16))
  8799  01193A  22F8               	addwfc	tblptru,f,c
  8800  01193C                     	endif
  8801  01193C  0009               	tblrd		*+
  8802  01193E  50F5               	movf	tablat,w,c
  8803  011940  0101               	movlb	1	; () banked
  8804  011942  5D46               	subwf	sprintf@val& (0+255),w,b
  8805  011944  0009               	tblrd		*+
  8806  011946  50F5               	movf	tablat,w,c
  8807  011948  0101               	movlb	1	; () banked
  8808  01194A  5947               	subwfb	(sprintf@val+1)& (0+255),w,b
  8809  01194C  0009               	tblrd		*+
  8810  01194E  50F5               	movf	tablat,w,c
  8811  011950  0101               	movlb	1	; () banked
  8812  011952  5948               	subwfb	(sprintf@val+2)& (0+255),w,b
  8813  011954  0009               	tblrd		*+
  8814  011956  50F5               	movf	tablat,w,c
  8815  011958  0101               	movlb	1	; () banked
  8816  01195A  5949               	subwfb	(sprintf@val+3)& (0+255),w,b
  8817  01195C  A0D8               	btfss	status,0,c
  8818  01195E  D005               	goto	l8251
  8819  011960  D001               	goto	l8247
  8820                           
  8821                           ; BSR set to: 1
  8822                           ;doprnt.c: 1138: break;
  8823  011962  D003               	goto	l8251
  8824  011964                     l8247:
  8825                           
  8826                           ; BSR set to: 1
  8827  011964  0101               	movlb	1	; () banked
  8828  011966  2B56               	incf	sprintf@c& (0+255),f,b
  8829  011968  D7D6               	goto	l8239
  8830  01196A                     l8251:
  8831                           
  8832                           ; BSR set to: 1
  8833                           ;doprnt.c: 1175: {
  8834                           ;doprnt.c: 1188: if(flag & 0x03)
  8835  01196A  0E03               	movlw	3
  8836  01196C  0101               	movlb	1	; () banked
  8837  01196E  1544               	andwf	sprintf@flag& (0+255),w,b
  8838  011970  0100               	movlb	0	; () banked
  8839  011972  6FB3               	movwf	??_sprintf& (0+255),b
  8840  011974  0E00               	movlw	0
  8841  011976  0101               	movlb	1	; () banked
  8842  011978  1545               	andwf	(sprintf@flag+1)& (0+255),w,b
  8843  01197A  0100               	movlb	0	; () banked
  8844  01197C  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  8845  01197E  0100               	movlb	0	; () banked
  8846  011980  51B3               	movf	??_sprintf& (0+255),w,b
  8847  011982  0100               	movlb	0	; () banked
  8848  011984  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  8849  011986  B4D8               	btfsc	status,2,c
  8850  011988  D058               	goto	l8265
  8851                           
  8852                           ; BSR set to: 0
  8853                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  8854  01198A  C136  FFD9         	movff	sprintf@sp,fsr2l
  8855  01198E  C137  FFDA         	movff	sprintf@sp+1,fsr2h
  8856  011992  0E2D               	movlw	45
  8857  011994  D050               	goto	L6
  8858  011996                     l8255:
  8859                           
  8860                           ; BSR set to: 0
  8861  011996  0101               	movlb	1	; () banked
  8862  011998  4B36               	infsnz	sprintf@sp& (0+255),f,b
  8863  01199A  2B37               	incf	(sprintf@sp+1)& (0+255),f,b
  8864                           
  8865                           ; BSR set to: 1
  8866                           ;doprnt.c: 1195: }
  8867                           ;doprnt.c: 1196: while(c--) {
  8868  01199C  D04E               	goto	l8265
  8869  01199E                     l8257:
  8870                           
  8871                           ; BSR set to: 1
  8872                           ;doprnt.c: 1200: {
  8873                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  8874  01199E  C146  F072         	movff	sprintf@val,___lldiv@dividend
  8875  0119A2  C147  F073         	movff	sprintf@val+1,___lldiv@dividend+1
  8876  0119A6  C148  F074         	movff	sprintf@val+2,___lldiv@dividend+2
  8877  0119AA  C149  F075         	movff	sprintf@val+3,___lldiv@dividend+3
  8878  0119AE  0101               	movlb	1	; () banked
  8879  0119B0  5156               	movf	sprintf@c& (0+255),w,b
  8880  0119B2  0D04               	mullw	4
  8881  0119B4  0E5F               	movlw	low _dpowers
  8882  0119B6  24F3               	addwf	prodl,w,c
  8883  0119B8  6EF6               	movwf	tblptrl,c
  8884  0119BA  0EFD               	movlw	high _dpowers
  8885  0119BC  20F4               	addwfc	prodh,w,c
  8886  0119BE  6EF7               	movwf	tblptrh,c
  8887  0119C0                     	if	1	;There are 3 active tblptr bytes
  8888  0119C0  6AF8               	clrf	tblptru,c
  8889  0119C2  0E00               	movlw	low (__mediumconst shr (0+16))
  8890  0119C4  22F8               	addwfc	tblptru,f,c
  8891  0119C6                     	endif
  8892  0119C6  0009               	tblrd		*+
  8893  0119C8  CFF5 F076          	movff	tablat,___lldiv@divisor
  8894  0119CC  0009               	tblrd		*+
  8895  0119CE  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  8896  0119D2  0009               	tblrd		*+
  8897  0119D4  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  8898  0119D8  000A               	tblrd		*-
  8899  0119DA  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  8900  0119DE  EC14  F0AA         	call	___lldiv	;wreg free
  8901  0119E2  C072  F14C         	movff	?___lldiv,sprintf@tmpval
  8902  0119E6  C073  F14D         	movff	?___lldiv+1,sprintf@tmpval+1
  8903  0119EA  C074  F14E         	movff	?___lldiv+2,sprintf@tmpval+2
  8904  0119EE  C075  F14F         	movff	?___lldiv+3,sprintf@tmpval+3
  8905                           
  8906                           ;doprnt.c: 1202: tmpval.vd %= 10;
  8907  0119F2  C14C  F072         	movff	sprintf@tmpval,___llmod@dividend
  8908  0119F6  C14D  F073         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8909  0119FA  C14E  F074         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8910  0119FE  C14F  F075         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8911  011A02  0E0A               	movlw	10
  8912  011A04  0100               	movlb	0	; () banked
  8913  011A06  6F76               	movwf	___llmod@divisor& (0+255),b
  8914  011A08  0E00               	movlw	0
  8915  011A0A  6F77               	movwf	(___llmod@divisor+1)& (0+255),b
  8916  011A0C  0E00               	movlw	0
  8917  011A0E  6F78               	movwf	(___llmod@divisor+2)& (0+255),b
  8918  011A10  0E00               	movlw	0
  8919  011A12  6F79               	movwf	(___llmod@divisor+3)& (0+255),b
  8920  011A14  ECE5  F0AB         	call	___llmod	;wreg free
  8921  011A18  C072  F14C         	movff	?___llmod,sprintf@tmpval
  8922  011A1C  C073  F14D         	movff	?___llmod+1,sprintf@tmpval+1
  8923  011A20  C074  F14E         	movff	?___llmod+2,sprintf@tmpval+2
  8924  011A24  C075  F14F         	movff	?___llmod+3,sprintf@tmpval+3
  8925                           
  8926                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  8927  011A28  0101               	movlb	1	; () banked
  8928  011A2A  514C               	movf	sprintf@tmpval& (0+255),w,b
  8929  011A2C  0F30               	addlw	48
  8930  011A2E  C136  FFD9         	movff	sprintf@sp,fsr2l
  8931  011A32  C137  FFDA         	movff	sprintf@sp+1,fsr2h
  8932  011A36                     L6:
  8933  011A36  6EDF               	movwf	indf2,c
  8934  011A38  D7AE               	goto	l8255
  8935  011A3A                     l8265:
  8936  011A3A  0101               	movlb	1	; () banked
  8937  011A3C  0756               	decf	sprintf@c& (0+255),f,b
  8938  011A3E  0101               	movlb	1	; () banked
  8939  011A40  2956               	incf	sprintf@c& (0+255),w,b
  8940  011A42  B4D8               	btfsc	status,2,c
  8941  011A44  D010               	goto	l8273
  8942  011A46  D7AB               	goto	l8257
  8943                           
  8944                           ; BSR set to: 1
  8945                           ;doprnt.c: 1204: }
  8946                           ;doprnt.c: 1206: }
  8947                           ;doprnt.c: 1207: while(exp > 0) {
  8948  011A48  D00E               	goto	l8273
  8949  011A4A                     l8267:
  8950                           
  8951                           ; BSR set to: 1
  8952                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  8953  011A4A  C136  FFD9         	movff	sprintf@sp,fsr2l
  8954  011A4E  C137  FFDA         	movff	sprintf@sp+1,fsr2h
  8955  011A52  0E30               	movlw	48
  8956  011A54  6EDF               	movwf	indf2,c
  8957                           
  8958                           ; BSR set to: 1
  8959  011A56  0101               	movlb	1	; () banked
  8960  011A58  4B36               	infsnz	sprintf@sp& (0+255),f,b
  8961  011A5A  2B37               	incf	(sprintf@sp+1)& (0+255),f,b
  8962                           
  8963                           ; BSR set to: 1
  8964                           ;doprnt.c: 1209: exp--;
  8965  011A5C  0101               	movlb	1	; () banked
  8966  011A5E  074A               	decf	sprintf@exp& (0+255),f,b
  8967  011A60  A0D8               	btfss	status,0,c
  8968  011A62  074B               	decf	(sprintf@exp+1)& (0+255),f,b
  8969  011A64  D000               	goto	l8273
  8970  011A66                     l8273:
  8971                           
  8972                           ; BSR set to: 1
  8973  011A66  0101               	movlb	1	; () banked
  8974  011A68  BF4B               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8975  011A6A  D007               	goto	l8275
  8976  011A6C  0101               	movlb	1	; () banked
  8977  011A6E  514B               	movf	(sprintf@exp+1)& (0+255),w,b
  8978  011A70  E1EC               	bnz	l8267
  8979  011A72  0101               	movlb	1	; () banked
  8980  011A74  054A               	decf	sprintf@exp& (0+255),w,b
  8981  011A76  B0D8               	btfsc	status,0,c
  8982  011A78  D7E8               	goto	l8267
  8983  011A7A                     l8275:
  8984                           
  8985                           ; BSR set to: 1
  8986                           ;doprnt.c: 1210: }
  8987                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  8988  011A7A  0101               	movlb	1	; () banked
  8989  011A7C  BF51               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8990  011A7E  D00C               	goto	l1065
  8991  011A80  0101               	movlb	1	; () banked
  8992  011A82  5151               	movf	(sprintf@prec+1)& (0+255),w,b
  8993  011A84  E105               	bnz	u10520
  8994  011A86  0E09               	movlw	9
  8995  011A88  0101               	movlb	1	; () banked
  8996  011A8A  5D50               	subwf	sprintf@prec& (0+255),w,b
  8997  011A8C  A0D8               	btfss	status,0,c
  8998  011A8E  D004               	goto	l1065
  8999  011A90                     u10520:
  9000                           
  9001                           ; BSR set to: 1
  9002                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  9003  011A90  0E08               	movlw	8
  9004  011A92  0101               	movlb	1	; () banked
  9005  011A94  6F56               	movwf	sprintf@c& (0+255),b
  9006  011A96  D003               	goto	l8279
  9007  011A98                     l1065:
  9008                           
  9009                           ; BSR set to: 1
  9010                           ;doprnt.c: 1213: else
  9011                           ;doprnt.c: 1214: c = prec;
  9012  011A98  C150  F156         	movff	sprintf@prec,sprintf@c
  9013  011A9C  D000               	goto	l8279
  9014  011A9E                     l8279:
  9015                           
  9016                           ; BSR set to: 1
  9017                           ;doprnt.c: 1215: prec -= c;
  9018  011A9E  0101               	movlb	1	; () banked
  9019  011AA0  5156               	movf	sprintf@c& (0+255),w,b
  9020  011AA2  0101               	movlb	1	; () banked
  9021  011AA4  5F50               	subwf	sprintf@prec& (0+255),f,b
  9022  011AA6  0E00               	movlw	0
  9023  011AA8  0101               	movlb	1	; () banked
  9024  011AAA  BF56               	btfsc	sprintf@c& (0+255),7,b
  9025  011AAC  0EFF               	movlw	255
  9026  011AAE  0101               	movlb	1	; () banked
  9027  011AB0  5B51               	subwfb	(sprintf@prec+1)& (0+255),f,b
  9028                           
  9029                           ; BSR set to: 1
  9030                           ;doprnt.c: 1219: if(c)
  9031  011AB2  0101               	movlb	1	; () banked
  9032  011AB4  5156               	movf	sprintf@c& (0+255),w,b
  9033  011AB6  0101               	movlb	1	; () banked
  9034  011AB8  B4D8               	btfsc	status,2,c
  9035  011ABA  D00A               	goto	l8287
  9036                           
  9037                           ; BSR set to: 1
  9038                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  9039  011ABC  C136  FFD9         	movff	sprintf@sp,fsr2l
  9040  011AC0  C137  FFDA         	movff	sprintf@sp+1,fsr2h
  9041  011AC4  0E2E               	movlw	46
  9042  011AC6  6EDF               	movwf	indf2,c
  9043                           
  9044                           ; BSR set to: 1
  9045  011AC8  0101               	movlb	1	; () banked
  9046  011ACA  4B36               	infsnz	sprintf@sp& (0+255),f,b
  9047  011ACC  2B37               	incf	(sprintf@sp+1)& (0+255),f,b
  9048  011ACE  D000               	goto	l8287
  9049  011AD0                     l8287:
  9050                           
  9051                           ; BSR set to: 1
  9052                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9053  011AD0  0101               	movlb	1	; () banked
  9054  011AD2  5156               	movf	sprintf@c& (0+255),w,b
  9055  011AD4  EC61  F098         	call	_scale
  9056  011AD8  C090  F13E         	movff	?_scale,_sprintf$4244
  9057  011ADC  C091  F13F         	movff	?_scale+1,_sprintf$4244+1
  9058  011AE0  C092  F140         	movff	?_scale+2,_sprintf$4244+2
  9059  011AE4  C093  F141         	movff	?_scale+3,_sprintf$4244+3
  9060                           
  9061                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9062  011AE8  C152  F085         	movff	sprintf@fval,___flmul@f2
  9063  011AEC  C153  F086         	movff	sprintf@fval+1,___flmul@f2+1
  9064  011AF0  C154  F087         	movff	sprintf@fval+2,___flmul@f2+2
  9065  011AF4  C155  F088         	movff	sprintf@fval+3,___flmul@f2+3
  9066  011AF8  C13E  F081         	movff	_sprintf$4244,___flmul@f1
  9067  011AFC  C13F  F082         	movff	_sprintf$4244+1,___flmul@f1+1
  9068  011B00  C140  F083         	movff	_sprintf$4244+2,___flmul@f1+2
  9069  011B04  C141  F084         	movff	_sprintf$4244+3,___flmul@f1+3
  9070  011B08  ECDF  F0A6         	call	___flmul	;wreg free
  9071  011B0C  C081  F0A9         	movff	?___flmul,___fltol@f1
  9072  011B10  C082  F0AA         	movff	?___flmul+1,___fltol@f1+1
  9073  011B14  C083  F0AB         	movff	?___flmul+2,___fltol@f1+2
  9074  011B18  C084  F0AC         	movff	?___flmul+3,___fltol@f1+3
  9075  011B1C  EC2C  F0A8         	call	___fltol	;wreg free
  9076  011B20  C0A9  F146         	movff	?___fltol,sprintf@val
  9077  011B24  C0AA  F147         	movff	?___fltol+1,sprintf@val+1
  9078  011B28  C0AB  F148         	movff	?___fltol+2,sprintf@val+2
  9079  011B2C  C0AC  F149         	movff	?___fltol+3,sprintf@val+3
  9080                           
  9081                           ;doprnt.c: 1228: while(c--) {
  9082  011B30  D07B               	goto	l8301
  9083  011B32                     l8291:
  9084                           
  9085                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  9086  011B32  C146  F072         	movff	sprintf@val,___lldiv@dividend
  9087  011B36  C147  F073         	movff	sprintf@val+1,___lldiv@dividend+1
  9088  011B3A  C148  F074         	movff	sprintf@val+2,___lldiv@dividend+2
  9089  011B3E  C149  F075         	movff	sprintf@val+3,___lldiv@dividend+3
  9090  011B42  0101               	movlb	1	; () banked
  9091  011B44  5156               	movf	sprintf@c& (0+255),w,b
  9092  011B46  0D04               	mullw	4
  9093  011B48  0E5F               	movlw	low _dpowers
  9094  011B4A  24F3               	addwf	prodl,w,c
  9095  011B4C  6EF6               	movwf	tblptrl,c
  9096  011B4E  0EFD               	movlw	high _dpowers
  9097  011B50  20F4               	addwfc	prodh,w,c
  9098  011B52  6EF7               	movwf	tblptrh,c
  9099  011B54                     	if	1	;There are 3 active tblptr bytes
  9100  011B54  6AF8               	clrf	tblptru,c
  9101  011B56  0E00               	movlw	low (__mediumconst shr (0+16))
  9102  011B58  22F8               	addwfc	tblptru,f,c
  9103  011B5A                     	endif
  9104  011B5A  0009               	tblrd		*+
  9105  011B5C  CFF5 F076          	movff	tablat,___lldiv@divisor
  9106  011B60  0009               	tblrd		*+
  9107  011B62  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  9108  011B66  0009               	tblrd		*+
  9109  011B68  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  9110  011B6C  000A               	tblrd		*-
  9111  011B6E  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  9112  011B72  EC14  F0AA         	call	___lldiv	;wreg free
  9113  011B76  C072  F14C         	movff	?___lldiv,sprintf@tmpval
  9114  011B7A  C073  F14D         	movff	?___lldiv+1,sprintf@tmpval+1
  9115  011B7E  C074  F14E         	movff	?___lldiv+2,sprintf@tmpval+2
  9116  011B82  C075  F14F         	movff	?___lldiv+3,sprintf@tmpval+3
  9117                           
  9118                           ;doprnt.c: 1230: tmpval.vd %= 10;
  9119  011B86  C14C  F072         	movff	sprintf@tmpval,___llmod@dividend
  9120  011B8A  C14D  F073         	movff	sprintf@tmpval+1,___llmod@dividend+1
  9121  011B8E  C14E  F074         	movff	sprintf@tmpval+2,___llmod@dividend+2
  9122  011B92  C14F  F075         	movff	sprintf@tmpval+3,___llmod@dividend+3
  9123  011B96  0E0A               	movlw	10
  9124  011B98  0100               	movlb	0	; () banked
  9125  011B9A  6F76               	movwf	___llmod@divisor& (0+255),b
  9126  011B9C  0E00               	movlw	0
  9127  011B9E  6F77               	movwf	(___llmod@divisor+1)& (0+255),b
  9128  011BA0  0E00               	movlw	0
  9129  011BA2  6F78               	movwf	(___llmod@divisor+2)& (0+255),b
  9130  011BA4  0E00               	movlw	0
  9131  011BA6  6F79               	movwf	(___llmod@divisor+3)& (0+255),b
  9132  011BA8  ECE5  F0AB         	call	___llmod	;wreg free
  9133  011BAC  C072  F14C         	movff	?___llmod,sprintf@tmpval
  9134  011BB0  C073  F14D         	movff	?___llmod+1,sprintf@tmpval+1
  9135  011BB4  C074  F14E         	movff	?___llmod+2,sprintf@tmpval+2
  9136  011BB8  C075  F14F         	movff	?___llmod+3,sprintf@tmpval+3
  9137                           
  9138                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  9139  011BBC  0101               	movlb	1	; () banked
  9140  011BBE  514C               	movf	sprintf@tmpval& (0+255),w,b
  9141  011BC0  0F30               	addlw	48
  9142  011BC2  C136  FFD9         	movff	sprintf@sp,fsr2l
  9143  011BC6  C137  FFDA         	movff	sprintf@sp+1,fsr2h
  9144  011BCA  6EDF               	movwf	indf2,c
  9145                           
  9146                           ; BSR set to: 1
  9147  011BCC  0101               	movlb	1	; () banked
  9148  011BCE  4B36               	infsnz	sprintf@sp& (0+255),f,b
  9149  011BD0  2B37               	incf	(sprintf@sp+1)& (0+255),f,b
  9150                           
  9151                           ; BSR set to: 1
  9152                           ;doprnt.c: 1232: val %= dpowers[c];
  9153  011BD2  C146  F072         	movff	sprintf@val,___llmod@dividend
  9154  011BD6  C147  F073         	movff	sprintf@val+1,___llmod@dividend+1
  9155  011BDA  C148  F074         	movff	sprintf@val+2,___llmod@dividend+2
  9156  011BDE  C149  F075         	movff	sprintf@val+3,___llmod@dividend+3
  9157  011BE2  0101               	movlb	1	; () banked
  9158  011BE4  5156               	movf	sprintf@c& (0+255),w,b
  9159  011BE6  0D04               	mullw	4
  9160  011BE8  0E5F               	movlw	low _dpowers
  9161  011BEA  24F3               	addwf	prodl,w,c
  9162  011BEC  6EF6               	movwf	tblptrl,c
  9163  011BEE  0EFD               	movlw	high _dpowers
  9164  011BF0  20F4               	addwfc	prodh,w,c
  9165  011BF2  6EF7               	movwf	tblptrh,c
  9166  011BF4                     	if	1	;There are 3 active tblptr bytes
  9167  011BF4  6AF8               	clrf	tblptru,c
  9168  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
  9169  011BF8  22F8               	addwfc	tblptru,f,c
  9170  011BFA                     	endif
  9171  011BFA  0009               	tblrd		*+
  9172  011BFC  CFF5 F076          	movff	tablat,___llmod@divisor
  9173  011C00  0009               	tblrd		*+
  9174  011C02  CFF5 F077          	movff	tablat,___llmod@divisor+1
  9175  011C06  0009               	tblrd		*+
  9176  011C08  CFF5 F078          	movff	tablat,___llmod@divisor+2
  9177  011C0C  000A               	tblrd		*-
  9178  011C0E  CFF5 F079          	movff	tablat,___llmod@divisor+3
  9179  011C12  ECE5  F0AB         	call	___llmod	;wreg free
  9180  011C16  C072  F146         	movff	?___llmod,sprintf@val
  9181  011C1A  C073  F147         	movff	?___llmod+1,sprintf@val+1
  9182  011C1E  C074  F148         	movff	?___llmod+2,sprintf@val+2
  9183  011C22  C075  F149         	movff	?___llmod+3,sprintf@val+3
  9184  011C26  D000               	goto	l8301
  9185  011C28                     l8301:
  9186  011C28  0101               	movlb	1	; () banked
  9187  011C2A  0756               	decf	sprintf@c& (0+255),f,b
  9188  011C2C  0101               	movlb	1	; () banked
  9189  011C2E  2956               	incf	sprintf@c& (0+255),w,b
  9190  011C30  B4D8               	btfsc	status,2,c
  9191  011C32  D010               	goto	l8309
  9192  011C34  D77E               	goto	l8291
  9193                           
  9194                           ; BSR set to: 1
  9195                           ;doprnt.c: 1233: }
  9196                           ;doprnt.c: 1235: while(prec) {
  9197  011C36  D00E               	goto	l8309
  9198  011C38                     l8303:
  9199                           
  9200                           ; BSR set to: 1
  9201                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  9202  011C38  C136  FFD9         	movff	sprintf@sp,fsr2l
  9203  011C3C  C137  FFDA         	movff	sprintf@sp+1,fsr2h
  9204  011C40  0E30               	movlw	48
  9205  011C42  6EDF               	movwf	indf2,c
  9206                           
  9207                           ; BSR set to: 1
  9208  011C44  0101               	movlb	1	; () banked
  9209  011C46  4B36               	infsnz	sprintf@sp& (0+255),f,b
  9210  011C48  2B37               	incf	(sprintf@sp+1)& (0+255),f,b
  9211                           
  9212                           ; BSR set to: 1
  9213                           ;doprnt.c: 1237: prec--;
  9214  011C4A  0101               	movlb	1	; () banked
  9215  011C4C  0750               	decf	sprintf@prec& (0+255),f,b
  9216  011C4E  A0D8               	btfss	status,0,c
  9217  011C50  0751               	decf	(sprintf@prec+1)& (0+255),f,b
  9218  011C52  D000               	goto	l8309
  9219  011C54                     l8309:
  9220                           
  9221                           ; BSR set to: 1
  9222  011C54  0101               	movlb	1	; () banked
  9223  011C56  5150               	movf	sprintf@prec& (0+255),w,b
  9224  011C58  0101               	movlb	1	; () banked
  9225  011C5A  1151               	iorwf	(sprintf@prec+1)& (0+255),w,b
  9226  011C5C  B4D8               	btfsc	status,2,c
  9227  011C5E  D05D               	goto	l8331
  9228  011C60  D7EB               	goto	l8303
  9229                           
  9230                           ; BSR set to: 1
  9231                           ;doprnt.c: 1238: }
  9232                           ;doprnt.c: 1245: continue;
  9233  011C62  D05B               	goto	l8331
  9234  011C64                     l8311:
  9235                           
  9236                           ; BSR set to: 1
  9237                           ;doprnt.c: 1246: }
  9238                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  9239  011C64  0101               	movlb	1	; () banked
  9240  011C66  5150               	movf	sprintf@prec& (0+255),w,b
  9241  011C68  0101               	movlb	1	; () banked
  9242  011C6A  1151               	iorwf	(sprintf@prec+1)& (0+255),w,b
  9243  011C6C  A4D8               	btfss	status,2,c
  9244  011C6E  D00E               	goto	l8317
  9245                           
  9246                           ; BSR set to: 1
  9247  011C70  0101               	movlb	1	; () banked
  9248  011C72  5146               	movf	sprintf@val& (0+255),w,b
  9249  011C74  0101               	movlb	1	; () banked
  9250  011C76  1147               	iorwf	(sprintf@val+1)& (0+255),w,b
  9251  011C78  0101               	movlb	1	; () banked
  9252  011C7A  1148               	iorwf	(sprintf@val+2)& (0+255),w,b
  9253  011C7C  0101               	movlb	1	; () banked
  9254  011C7E  1149               	iorwf	(sprintf@val+3)& (0+255),w,b
  9255  011C80  A4D8               	btfss	status,2,c
  9256  011C82  D004               	goto	l8317
  9257                           
  9258                           ; BSR set to: 1
  9259                           ;doprnt.c: 1291: prec++;
  9260  011C84  0101               	movlb	1	; () banked
  9261  011C86  4B50               	infsnz	sprintf@prec& (0+255),f,b
  9262  011C88  2B51               	incf	(sprintf@prec+1)& (0+255),f,b
  9263  011C8A  D000               	goto	l8317
  9264  011C8C                     l8317:
  9265                           
  9266                           ; BSR set to: 1
  9267                           ;doprnt.c: 1339: if(c < prec)
  9268  011C8C  0E80               	movlw	128
  9269  011C8E  0101               	movlb	1	; () banked
  9270  011C90  BF56               	btfsc	sprintf@c& (0+255),7,b
  9271  011C92  0E7F               	movlw	127
  9272  011C94  0100               	movlb	0	; () banked
  9273  011C96  6FB3               	movwf	??_sprintf& (0+255),b
  9274  011C98  0101               	movlb	1	; () banked
  9275  011C9A  5150               	movf	sprintf@prec& (0+255),w,b
  9276  011C9C  0101               	movlb	1	; () banked
  9277  011C9E  5D56               	subwf	sprintf@c& (0+255),w,b
  9278  011CA0  0101               	movlb	1	; () banked
  9279  011CA2  5151               	movf	(sprintf@prec+1)& (0+255),w,b
  9280  011CA4  0A80               	xorlw	128
  9281  011CA6  0100               	movlb	0	; () banked
  9282  011CA8  59B3               	subwfb	??_sprintf& (0+255),w,b
  9283  011CAA  B0D8               	btfsc	status,0,c
  9284  011CAC  D003               	goto	l8321
  9285                           
  9286                           ; BSR set to: 0
  9287                           ;doprnt.c: 1340: c = prec;
  9288  011CAE  C150  F156         	movff	sprintf@prec,sprintf@c
  9289  011CB2  D019               	goto	l8325
  9290  011CB4                     l8321:
  9291                           
  9292                           ; BSR set to: 0
  9293                           ;doprnt.c: 1341: else if(prec < c)
  9294  011CB4  0101               	movlb	1	; () banked
  9295  011CB6  5151               	movf	(sprintf@prec+1)& (0+255),w,b
  9296  011CB8  0A80               	xorlw	128
  9297  011CBA  0100               	movlb	0	; () banked
  9298  011CBC  6FB3               	movwf	??_sprintf& (0+255),b
  9299  011CBE  0101               	movlb	1	; () banked
  9300  011CC0  5156               	movf	sprintf@c& (0+255),w,b
  9301  011CC2  0101               	movlb	1	; () banked
  9302  011CC4  5D50               	subwf	sprintf@prec& (0+255),w,b
  9303  011CC6  0E80               	movlw	128
  9304  011CC8  0101               	movlb	1	; () banked
  9305  011CCA  BF56               	btfsc	sprintf@c& (0+255),7,b
  9306  011CCC  0E7F               	movlw	127
  9307  011CCE  0100               	movlb	0	; () banked
  9308  011CD0  59B3               	subwfb	??_sprintf& (0+255),w,b
  9309  011CD2  B0D8               	btfsc	status,0,c
  9310  011CD4  D008               	goto	l8325
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;doprnt.c: 1342: prec = c;
  9314  011CD6  0101               	movlb	1	; () banked
  9315  011CD8  5156               	movf	sprintf@c& (0+255),w,b
  9316  011CDA  0101               	movlb	1	; () banked
  9317  011CDC  6F50               	movwf	sprintf@prec& (0+255),b
  9318  011CDE  6B51               	clrf	(sprintf@prec+1)& (0+255),b
  9319  011CE0  BF50               	btfsc	sprintf@prec& (0+255),7,b
  9320  011CE2  0751               	decf	(sprintf@prec+1)& (0+255),f,b
  9321                           
  9322                           ; BSR set to: 1
  9323  011CE4  D000               	goto	l8325
  9324  011CE6                     l8325:
  9325                           
  9326                           ;doprnt.c: 1422: {
  9327                           ;doprnt.c: 1438: if(flag & 0x03)
  9328  011CE6  0E03               	movlw	3
  9329  011CE8  0101               	movlb	1	; () banked
  9330  011CEA  1544               	andwf	sprintf@flag& (0+255),w,b
  9331  011CEC  0100               	movlb	0	; () banked
  9332  011CEE  6FB3               	movwf	??_sprintf& (0+255),b
  9333  011CF0  0E00               	movlw	0
  9334  011CF2  0101               	movlb	1	; () banked
  9335  011CF4  1545               	andwf	(sprintf@flag+1)& (0+255),w,b
  9336  011CF6  0100               	movlb	0	; () banked
  9337  011CF8  6FB4               	movwf	(??_sprintf+1)& (0+255),b
  9338  011CFA  0100               	movlb	0	; () banked
  9339  011CFC  51B3               	movf	??_sprintf& (0+255),w,b
  9340  011CFE  0100               	movlb	0	; () banked
  9341  011D00  11B4               	iorwf	(??_sprintf+1)& (0+255),w,b
  9342  011D02  B4D8               	btfsc	status,2,c
  9343  011D04  D00A               	goto	l8331
  9344                           
  9345                           ; BSR set to: 0
  9346                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  9347  011D06  C136  FFD9         	movff	sprintf@sp,fsr2l
  9348  011D0A  C137  FFDA         	movff	sprintf@sp+1,fsr2h
  9349  011D0E  0E2D               	movlw	45
  9350  011D10  6EDF               	movwf	indf2,c
  9351  011D12                     l8329:
  9352                           
  9353                           ; BSR set to: 0
  9354  011D12  0101               	movlb	1	; () banked
  9355  011D14  4B36               	infsnz	sprintf@sp& (0+255),f,b
  9356  011D16  2B37               	incf	(sprintf@sp+1)& (0+255),f,b
  9357                           
  9358                           ; BSR set to: 1
  9359  011D18  D000               	goto	l8331
  9360  011D1A                     l8331:
  9361  011D1A  C138  FFF6         	movff	sprintf@f,tblptrl
  9362  011D1E  C139  FFF7         	movff	sprintf@f+1,tblptrh
  9363  011D22  0101               	movlb	1	; () banked
  9364  011D24  4B38               	infsnz	sprintf@f& (0+255),f,b
  9365  011D26  2B39               	incf	(sprintf@f+1)& (0+255),f,b
  9366  011D28                     	if	0	;tblptru may be non-zero
  9367  011D28                     	endif
  9368  011D28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9369  011D28  0E00               	movlw	low (__mediumconst shr (0+16))
  9370  011D2A  6EF8               	movwf	tblptru,c
  9371  011D2C                     	endif
  9372  011D2C  0008               	tblrd		*
  9373  011D2E  CFF5 F156          	movff	tablat,sprintf@c
  9374  011D32  0101               	movlb	1	; () banked
  9375  011D34  5156               	movf	sprintf@c& (0+255),w,b
  9376  011D36  B4D8               	btfsc	status,2,c
  9377  011D38  D003               	goto	l8333
  9378  011D3A  EF2A  F08A         	goto	l8133
  9379                           
  9380                           ; BSR set to: 1
  9381  011D3E  D000               	goto	l8333
  9382  011D40                     l8333:
  9383                           
  9384                           ; BSR set to: 1
  9385                           ;doprnt.c: 1538: *sp = 0;
  9386  011D40  C136  FFD9         	movff	sprintf@sp,fsr2l
  9387  011D44  C137  FFDA         	movff	sprintf@sp+1,fsr2h
  9388  011D48  0E00               	movlw	0
  9389  011D4A  6EDF               	movwf	indf2,c
  9390  011D4C  0012               	return	
  9391                           
  9392                           ; BSR set to: 1
  9393                           
  9394                           ; BSR set to: 1
  9395                           ;doprnt.c: 1540: return 0;
  9396                           ;	Return value of _sprintf is never used
  9397  011D4E  0012               	return		;funcret
  9398  011D50                     __end_of_sprintf:
  9399                           	opt stack 0
  9400                           tblptru	equ	0xFF8
  9401                           tblptrh	equ	0xFF7
  9402                           tblptrl	equ	0xFF6
  9403                           tablat	equ	0xFF5
  9404                           prodh	equ	0xFF4
  9405                           prodl	equ	0xFF3
  9406                           intcon	equ	0xFF2
  9407                           postinc0	equ	0xFEE
  9408                           wreg	equ	0xFE8
  9409                           indf2	equ	0xFDF
  9410                           postinc2	equ	0xFDE
  9411                           fsr2h	equ	0xFDA
  9412                           fsr2l	equ	0xFD9
  9413                           status	equ	0xFD8
  9414                           
  9415 ;; *************** function _scale *****************
  9416 ;; Defined at:
  9417 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  9418 ;; Parameters:    Size  Location     Type
  9419 ;;  scl             1    wreg     char 
  9420 ;; Auto vars:     Size  Location     Type
  9421 ;;  scl             1   56[BANK0 ] char 
  9422 ;; Return value:  Size  Location     Type
  9423 ;;                  4   48[BANK0 ] char 
  9424 ;; Registers used:
  9425 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9426 ;; Tracked objects:
  9427 ;;		On entry : 0/0
  9428 ;;		On exit  : 0/0
  9429 ;;		Unchanged: 0/0
  9430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9431 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9432 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9434 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9435 ;;Total ram usage:        9 bytes
  9436 ;; Hardware stack levels used:    1
  9437 ;; Hardware stack levels required when called:    5
  9438 ;; This function calls:
  9439 ;;		___awdiv
  9440 ;;		___awmod
  9441 ;;		___flmul
  9442 ;; This function is called by:
  9443 ;;		_sprintf
  9444 ;; This function uses a non-reentrant model
  9445 ;;
  9446                           
  9447                           	psect	text13
  9448  0130C2                     __ptext13:
  9449                           	opt stack 0
  9450  0130C2                     _scale:
  9451                           	opt stack 23
  9452                           
  9453                           ; BSR set to: 1
  9454                           ;incstack = 0
  9455                           ;scale@scl stored from wreg
  9456  0130C2  0100               	movlb	0	; () banked
  9457  0130C4  6F98               	movwf	scale@scl& (0+255),b
  9458                           
  9459                           ; BSR set to: 0
  9460                           ;doprnt.c: 428: if(scl < 0) {
  9461  0130C6  0100               	movlb	0	; () banked
  9462  0130C8  AF98               	btfss	scale@scl& (0+255),7,b
  9463  0130CA  D148               	goto	l7785
  9464                           
  9465                           ; BSR set to: 0
  9466                           ;doprnt.c: 429: scl = -scl;
  9467  0130CC  0100               	movlb	0	; () banked
  9468  0130CE  6D98               	negf	scale@scl& (0+255),b
  9469                           
  9470                           ;doprnt.c: 430: if(scl>=110)
  9471  0130D0  0100               	movlb	0	; () banked
  9472  0130D2  5198               	movf	scale@scl& (0+255),w,b
  9473  0130D4  0A80               	xorlw	128
  9474  0130D6  0F12               	addlw	-238
  9475  0130D8  A0D8               	btfss	status,0,c
  9476  0130DA  D0BC               	goto	l7775
  9477                           
  9478                           ; BSR set to: 0
  9479                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9480  0130DC  0E00               	movlw	0
  9481  0130DE  0100               	movlb	0	; () banked
  9482  0130E0  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9483  0130E2  0E0A               	movlw	10
  9484  0130E4  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9485  0130E6  0E00               	movlw	0
  9486  0130E8  0100               	movlb	0	; () banked
  9487  0130EA  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9488  0130EC  0E64               	movlw	100
  9489  0130EE  6F74               	movwf	___awmod@divisor& (0+255),b
  9490  0130F0  0100               	movlb	0	; () banked
  9491  0130F2  5198               	movf	scale@scl& (0+255),w,b
  9492  0130F4  0100               	movlb	0	; () banked
  9493  0130F6  6F72               	movwf	___awmod@dividend& (0+255),b
  9494  0130F8  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9495  0130FA  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  9496  0130FC  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  9497  0130FE  EC39  F0AB         	call	___awmod	;wreg free
  9498  013102  C072  F078         	movff	?___awmod,___awdiv@dividend
  9499  013106  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  9500  01310A  ECAC  F0A9         	call	___awdiv	;wreg free
  9501  01310E  0100               	movlb	0	; () banked
  9502  013110  90D8               	bcf	status,0,c
  9503  013112  3778               	rlcf	?___awdiv& (0+255),f,b
  9504  013114  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9505  013116  0100               	movlb	0	; () banked
  9506  013118  90D8               	bcf	status,0,c
  9507  01311A  3778               	rlcf	?___awdiv& (0+255),f,b
  9508  01311C  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9509  01311E  0E24               	movlw	36
  9510  013120  0100               	movlb	0	; () banked
  9511  013122  2778               	addwf	?___awdiv& (0+255),f,b
  9512  013124  0E00               	movlw	0
  9513  013126  0100               	movlb	0	; () banked
  9514  013128  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9515  01312A  0EF7               	movlw	low __npowers_
  9516  01312C  0100               	movlb	0	; () banked
  9517  01312E  2578               	addwf	?___awdiv& (0+255),w,b
  9518  013130  6EF6               	movwf	tblptrl,c
  9519  013132  0EFC               	movlw	high __npowers_
  9520  013134  0100               	movlb	0	; () banked
  9521  013136  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9522  013138  6EF7               	movwf	tblptrh,c
  9523  01313A                     	if	1	;There are 3 active tblptr bytes
  9524  01313A  6AF8               	clrf	tblptru,c
  9525  01313C  0E00               	movlw	low (__mediumconst shr (0+16))
  9526  01313E  22F8               	addwfc	tblptru,f,c
  9527  013140                     	endif
  9528  013140  0009               	tblrd		*+
  9529  013142  CFF5 F085          	movff	tablat,___flmul@f2
  9530  013146  0009               	tblrd		*+
  9531  013148  CFF5 F086          	movff	tablat,___flmul@f2+1
  9532  01314C  0009               	tblrd		*+
  9533  01314E  CFF5 F087          	movff	tablat,___flmul@f2+2
  9534  013152  000A               	tblrd		*-
  9535  013154  CFF5 F088          	movff	tablat,___flmul@f2+3
  9536  013158  0E00               	movlw	0
  9537  01315A  0100               	movlb	0	; () banked
  9538  01315C  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9539  01315E  0E64               	movlw	100
  9540  013160  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9541  013162  0100               	movlb	0	; () banked
  9542  013164  5198               	movf	scale@scl& (0+255),w,b
  9543  013166  0100               	movlb	0	; () banked
  9544  013168  6F78               	movwf	___awdiv@dividend& (0+255),b
  9545  01316A  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  9546  01316C  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  9547  01316E  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9548  013170  ECAC  F0A9         	call	___awdiv	;wreg free
  9549  013174  0100               	movlb	0	; () banked
  9550  013176  90D8               	bcf	status,0,c
  9551  013178  3778               	rlcf	?___awdiv& (0+255),f,b
  9552  01317A  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9553  01317C  0100               	movlb	0	; () banked
  9554  01317E  90D8               	bcf	status,0,c
  9555  013180  3778               	rlcf	?___awdiv& (0+255),f,b
  9556  013182  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9557  013184  0E48               	movlw	72
  9558  013186  0100               	movlb	0	; () banked
  9559  013188  2778               	addwf	?___awdiv& (0+255),f,b
  9560  01318A  0E00               	movlw	0
  9561  01318C  0100               	movlb	0	; () banked
  9562  01318E  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9563  013190  0EF7               	movlw	low __npowers_
  9564  013192  0100               	movlb	0	; () banked
  9565  013194  2578               	addwf	?___awdiv& (0+255),w,b
  9566  013196  6EF6               	movwf	tblptrl,c
  9567  013198  0EFC               	movlw	high __npowers_
  9568  01319A  0100               	movlb	0	; () banked
  9569  01319C  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9570  01319E  6EF7               	movwf	tblptrh,c
  9571  0131A0                     	if	1	;There are 3 active tblptr bytes
  9572  0131A0  6AF8               	clrf	tblptru,c
  9573  0131A2  0E00               	movlw	low (__mediumconst shr (0+16))
  9574  0131A4  22F8               	addwfc	tblptru,f,c
  9575  0131A6                     	endif
  9576  0131A6  0009               	tblrd		*+
  9577  0131A8  CFF5 F081          	movff	tablat,___flmul@f1
  9578  0131AC  0009               	tblrd		*+
  9579  0131AE  CFF5 F082          	movff	tablat,___flmul@f1+1
  9580  0131B2  0009               	tblrd		*+
  9581  0131B4  CFF5 F083          	movff	tablat,___flmul@f1+2
  9582  0131B8  000A               	tblrd		*-
  9583  0131BA  CFF5 F084          	movff	tablat,___flmul@f1+3
  9584  0131BE  ECDF  F0A6         	call	___flmul	;wreg free
  9585  0131C2  C081  F094         	movff	?___flmul,_scale$4243
  9586  0131C6  C082  F095         	movff	?___flmul+1,_scale$4243+1
  9587  0131CA  C083  F096         	movff	?___flmul+2,_scale$4243+2
  9588  0131CE  C084  F097         	movff	?___flmul+3,_scale$4243+3
  9589                           
  9590                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9591  0131D2  C094  F081         	movff	_scale$4243,___flmul@f1
  9592  0131D6  C095  F082         	movff	_scale$4243+1,___flmul@f1+1
  9593  0131DA  C096  F083         	movff	_scale$4243+2,___flmul@f1+2
  9594  0131DE  C097  F084         	movff	_scale$4243+3,___flmul@f1+3
  9595  0131E2  0E00               	movlw	0
  9596  0131E4  0100               	movlb	0	; () banked
  9597  0131E6  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9598  0131E8  0E0A               	movlw	10
  9599  0131EA  6F74               	movwf	___awmod@divisor& (0+255),b
  9600  0131EC  0100               	movlb	0	; () banked
  9601  0131EE  5198               	movf	scale@scl& (0+255),w,b
  9602  0131F0  0100               	movlb	0	; () banked
  9603  0131F2  6F72               	movwf	___awmod@dividend& (0+255),b
  9604  0131F4  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9605  0131F6  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  9606  0131F8  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  9607  0131FA  EC39  F0AB         	call	___awmod	;wreg free
  9608  0131FE  0100               	movlb	0	; () banked
  9609  013200  90D8               	bcf	status,0,c
  9610  013202  3772               	rlcf	?___awmod& (0+255),f,b
  9611  013204  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9612  013206  0100               	movlb	0	; () banked
  9613  013208  90D8               	bcf	status,0,c
  9614  01320A  3772               	rlcf	?___awmod& (0+255),f,b
  9615  01320C  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9616  01320E  0EF7               	movlw	low __npowers_
  9617  013210  0100               	movlb	0	; () banked
  9618  013212  2572               	addwf	?___awmod& (0+255),w,b
  9619  013214  6EF6               	movwf	tblptrl,c
  9620  013216  0EFC               	movlw	high __npowers_
  9621  013218  0100               	movlb	0	; () banked
  9622  01321A  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  9623  01321C  6EF7               	movwf	tblptrh,c
  9624  01321E                     	if	1	;There are 3 active tblptr bytes
  9625  01321E  6AF8               	clrf	tblptru,c
  9626  013220  0E00               	movlw	low (__mediumconst shr (0+16))
  9627  013222  22F8               	addwfc	tblptru,f,c
  9628  013224                     	endif
  9629  013224  0009               	tblrd		*+
  9630  013226  CFF5 F085          	movff	tablat,___flmul@f2
  9631  01322A  0009               	tblrd		*+
  9632  01322C  CFF5 F086          	movff	tablat,___flmul@f2+1
  9633  013230  0009               	tblrd		*+
  9634  013232  CFF5 F087          	movff	tablat,___flmul@f2+2
  9635  013236  000A               	tblrd		*-
  9636  013238  CFF5 F088          	movff	tablat,___flmul@f2+3
  9637  01323C  ECDF  F0A6         	call	___flmul	;wreg free
  9638  013240  C081  F090         	movff	?___flmul,?_scale
  9639  013244  C082  F091         	movff	?___flmul+1,?_scale+1
  9640  013248  C083  F092         	movff	?___flmul+2,?_scale+2
  9641  01324C  C084  F093         	movff	?___flmul+3,?_scale+3
  9642  013250  0012               	return	
  9643  013252  D06B               	goto	l7781
  9644  013254                     l7775:
  9645                           
  9646                           ;doprnt.c: 432: else if(scl > 10)
  9647  013254  0100               	movlb	0	; () banked
  9648  013256  5198               	movf	scale@scl& (0+255),w,b
  9649  013258  0A80               	xorlw	128
  9650  01325A  0F75               	addlw	-139
  9651  01325C  A0D8               	btfss	status,0,c
  9652  01325E  D065               	goto	l7781
  9653                           
  9654                           ; BSR set to: 0
  9655                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  9656  013260  0E00               	movlw	0
  9657  013262  0100               	movlb	0	; () banked
  9658  013264  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9659  013266  0E0A               	movlw	10
  9660  013268  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9661  01326A  0100               	movlb	0	; () banked
  9662  01326C  5198               	movf	scale@scl& (0+255),w,b
  9663  01326E  0100               	movlb	0	; () banked
  9664  013270  6F78               	movwf	___awdiv@dividend& (0+255),b
  9665  013272  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  9666  013274  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  9667  013276  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9668  013278  ECAC  F0A9         	call	___awdiv	;wreg free
  9669  01327C  0100               	movlb	0	; () banked
  9670  01327E  90D8               	bcf	status,0,c
  9671  013280  3778               	rlcf	?___awdiv& (0+255),f,b
  9672  013282  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9673  013284  0100               	movlb	0	; () banked
  9674  013286  90D8               	bcf	status,0,c
  9675  013288  3778               	rlcf	?___awdiv& (0+255),f,b
  9676  01328A  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9677  01328C  0E24               	movlw	36
  9678  01328E  0100               	movlb	0	; () banked
  9679  013290  2778               	addwf	?___awdiv& (0+255),f,b
  9680  013292  0E00               	movlw	0
  9681  013294  0100               	movlb	0	; () banked
  9682  013296  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9683  013298  0EF7               	movlw	low __npowers_
  9684  01329A  0100               	movlb	0	; () banked
  9685  01329C  2578               	addwf	?___awdiv& (0+255),w,b
  9686  01329E  6EF6               	movwf	tblptrl,c
  9687  0132A0  0EFC               	movlw	high __npowers_
  9688  0132A2  0100               	movlb	0	; () banked
  9689  0132A4  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9690  0132A6  6EF7               	movwf	tblptrh,c
  9691  0132A8                     	if	1	;There are 3 active tblptr bytes
  9692  0132A8  6AF8               	clrf	tblptru,c
  9693  0132AA  0E00               	movlw	low (__mediumconst shr (0+16))
  9694  0132AC  22F8               	addwfc	tblptru,f,c
  9695  0132AE                     	endif
  9696  0132AE  0009               	tblrd		*+
  9697  0132B0  CFF5 F081          	movff	tablat,___flmul@f1
  9698  0132B4  0009               	tblrd		*+
  9699  0132B6  CFF5 F082          	movff	tablat,___flmul@f1+1
  9700  0132BA  0009               	tblrd		*+
  9701  0132BC  CFF5 F083          	movff	tablat,___flmul@f1+2
  9702  0132C0  000A               	tblrd		*-
  9703  0132C2  CFF5 F084          	movff	tablat,___flmul@f1+3
  9704  0132C6  0E00               	movlw	0
  9705  0132C8  0100               	movlb	0	; () banked
  9706  0132CA  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9707  0132CC  0E0A               	movlw	10
  9708  0132CE  6F74               	movwf	___awmod@divisor& (0+255),b
  9709  0132D0  0100               	movlb	0	; () banked
  9710  0132D2  5198               	movf	scale@scl& (0+255),w,b
  9711  0132D4  0100               	movlb	0	; () banked
  9712  0132D6  6F72               	movwf	___awmod@dividend& (0+255),b
  9713  0132D8  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9714  0132DA  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  9715  0132DC  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  9716  0132DE  EC39  F0AB         	call	___awmod	;wreg free
  9717  0132E2  0100               	movlb	0	; () banked
  9718  0132E4  90D8               	bcf	status,0,c
  9719  0132E6  3772               	rlcf	?___awmod& (0+255),f,b
  9720  0132E8  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9721  0132EA  0100               	movlb	0	; () banked
  9722  0132EC  90D8               	bcf	status,0,c
  9723  0132EE  3772               	rlcf	?___awmod& (0+255),f,b
  9724  0132F0  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9725  0132F2  0EF7               	movlw	low __npowers_
  9726  0132F4  0100               	movlb	0	; () banked
  9727  0132F6  2572               	addwf	?___awmod& (0+255),w,b
  9728  0132F8  6EF6               	movwf	tblptrl,c
  9729  0132FA  0EFC               	movlw	high __npowers_
  9730  0132FC  0100               	movlb	0	; () banked
  9731  0132FE  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  9732  013300  6EF7               	movwf	tblptrh,c
  9733  013302                     	if	1	;There are 3 active tblptr bytes
  9734  013302  6AF8               	clrf	tblptru,c
  9735  013304  0E00               	movlw	low (__mediumconst shr (0+16))
  9736  013306  22F8               	addwfc	tblptru,f,c
  9737  013308                     	endif
  9738  013308  0009               	tblrd		*+
  9739  01330A  CFF5 F085          	movff	tablat,___flmul@f2
  9740  01330E  0009               	tblrd		*+
  9741  013310  CFF5 F086          	movff	tablat,___flmul@f2+1
  9742  013314  0009               	tblrd		*+
  9743  013316  CFF5 F087          	movff	tablat,___flmul@f2+2
  9744  01331A  000A               	tblrd		*-
  9745  01331C  CFF5 F088          	movff	tablat,___flmul@f2+3
  9746  013320  ECDF  F0A6         	call	___flmul	;wreg free
  9747  013324  D78D               	goto	L7
  9748  013326  0012               	return	
  9749  013328  D000               	goto	l7781
  9750  01332A                     l7781:
  9751                           
  9752                           ;doprnt.c: 434: return _npowers_[scl];
  9753  01332A  0100               	movlb	0	; () banked
  9754  01332C  5198               	movf	scale@scl& (0+255),w,b
  9755  01332E  0D04               	mullw	4
  9756  013330  0EF7               	movlw	low __npowers_
  9757  013332  24F3               	addwf	prodl,w,c
  9758  013334  6EF6               	movwf	tblptrl,c
  9759  013336  0EFC               	movlw	high __npowers_
  9760  013338  20F4               	addwfc	prodh,w,c
  9761  01333A  6EF7               	movwf	tblptrh,c
  9762  01333C                     	if	1	;There are 3 active tblptr bytes
  9763  01333C  6AF8               	clrf	tblptru,c
  9764  01333E  0E00               	movlw	low (__mediumconst shr (0+16))
  9765  013340  22F8               	addwfc	tblptru,f,c
  9766  013342                     	endif
  9767  013342  0009               	tblrd		*+
  9768  013344  CFF5 F090          	movff	tablat,?_scale
  9769  013348  0009               	tblrd		*+
  9770  01334A  CFF5 F091          	movff	tablat,?_scale+1
  9771  01334E  0009               	tblrd		*+
  9772  013350  CFF5 F092          	movff	tablat,?_scale+2
  9773  013354  000A               	tblrd		*-
  9774  013356  CFF5 F093          	movff	tablat,?_scale+3
  9775                           
  9776                           ; BSR set to: 0
  9777  01335A  0012               	return	
  9778  01335C                     l7785:
  9779                           
  9780                           ; BSR set to: 0
  9781                           ;doprnt.c: 435: }
  9782                           ;doprnt.c: 436: if(scl>=110)
  9783  01335C  0100               	movlb	0	; () banked
  9784  01335E  5198               	movf	scale@scl& (0+255),w,b
  9785  013360  0A80               	xorlw	128
  9786  013362  0F12               	addlw	-238
  9787  013364  A0D8               	btfss	status,0,c
  9788  013366  D0BC               	goto	l7793
  9789                           
  9790                           ; BSR set to: 0
  9791                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9792  013368  0E00               	movlw	0
  9793  01336A  0100               	movlb	0	; () banked
  9794  01336C  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9795  01336E  0E0A               	movlw	10
  9796  013370  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9797  013372  0E00               	movlw	0
  9798  013374  0100               	movlb	0	; () banked
  9799  013376  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9800  013378  0E64               	movlw	100
  9801  01337A  6F74               	movwf	___awmod@divisor& (0+255),b
  9802  01337C  0100               	movlb	0	; () banked
  9803  01337E  5198               	movf	scale@scl& (0+255),w,b
  9804  013380  0100               	movlb	0	; () banked
  9805  013382  6F72               	movwf	___awmod@dividend& (0+255),b
  9806  013384  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9807  013386  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  9808  013388  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  9809  01338A  EC39  F0AB         	call	___awmod	;wreg free
  9810  01338E  C072  F078         	movff	?___awmod,___awdiv@dividend
  9811  013392  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  9812  013396  ECAC  F0A9         	call	___awdiv	;wreg free
  9813  01339A  0100               	movlb	0	; () banked
  9814  01339C  90D8               	bcf	status,0,c
  9815  01339E  3778               	rlcf	?___awdiv& (0+255),f,b
  9816  0133A0  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9817  0133A2  0100               	movlb	0	; () banked
  9818  0133A4  90D8               	bcf	status,0,c
  9819  0133A6  3778               	rlcf	?___awdiv& (0+255),f,b
  9820  0133A8  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9821  0133AA  0E24               	movlw	36
  9822  0133AC  0100               	movlb	0	; () banked
  9823  0133AE  2778               	addwf	?___awdiv& (0+255),f,b
  9824  0133B0  0E00               	movlw	0
  9825  0133B2  0100               	movlb	0	; () banked
  9826  0133B4  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9827  0133B6  0E2B               	movlw	low __powers_
  9828  0133B8  0100               	movlb	0	; () banked
  9829  0133BA  2578               	addwf	?___awdiv& (0+255),w,b
  9830  0133BC  6EF6               	movwf	tblptrl,c
  9831  0133BE  0EFD               	movlw	high __powers_
  9832  0133C0  0100               	movlb	0	; () banked
  9833  0133C2  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9834  0133C4  6EF7               	movwf	tblptrh,c
  9835  0133C6                     	if	1	;There are 3 active tblptr bytes
  9836  0133C6  6AF8               	clrf	tblptru,c
  9837  0133C8  0E00               	movlw	low (__mediumconst shr (0+16))
  9838  0133CA  22F8               	addwfc	tblptru,f,c
  9839  0133CC                     	endif
  9840  0133CC  0009               	tblrd		*+
  9841  0133CE  CFF5 F085          	movff	tablat,___flmul@f2
  9842  0133D2  0009               	tblrd		*+
  9843  0133D4  CFF5 F086          	movff	tablat,___flmul@f2+1
  9844  0133D8  0009               	tblrd		*+
  9845  0133DA  CFF5 F087          	movff	tablat,___flmul@f2+2
  9846  0133DE  000A               	tblrd		*-
  9847  0133E0  CFF5 F088          	movff	tablat,___flmul@f2+3
  9848  0133E4  0E00               	movlw	0
  9849  0133E6  0100               	movlb	0	; () banked
  9850  0133E8  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9851  0133EA  0E64               	movlw	100
  9852  0133EC  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9853  0133EE  0100               	movlb	0	; () banked
  9854  0133F0  5198               	movf	scale@scl& (0+255),w,b
  9855  0133F2  0100               	movlb	0	; () banked
  9856  0133F4  6F78               	movwf	___awdiv@dividend& (0+255),b
  9857  0133F6  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  9858  0133F8  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  9859  0133FA  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9860  0133FC  ECAC  F0A9         	call	___awdiv	;wreg free
  9861  013400  0100               	movlb	0	; () banked
  9862  013402  90D8               	bcf	status,0,c
  9863  013404  3778               	rlcf	?___awdiv& (0+255),f,b
  9864  013406  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9865  013408  0100               	movlb	0	; () banked
  9866  01340A  90D8               	bcf	status,0,c
  9867  01340C  3778               	rlcf	?___awdiv& (0+255),f,b
  9868  01340E  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9869  013410  0E48               	movlw	72
  9870  013412  0100               	movlb	0	; () banked
  9871  013414  2778               	addwf	?___awdiv& (0+255),f,b
  9872  013416  0E00               	movlw	0
  9873  013418  0100               	movlb	0	; () banked
  9874  01341A  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9875  01341C  0E2B               	movlw	low __powers_
  9876  01341E  0100               	movlb	0	; () banked
  9877  013420  2578               	addwf	?___awdiv& (0+255),w,b
  9878  013422  6EF6               	movwf	tblptrl,c
  9879  013424  0EFD               	movlw	high __powers_
  9880  013426  0100               	movlb	0	; () banked
  9881  013428  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9882  01342A  6EF7               	movwf	tblptrh,c
  9883  01342C                     	if	1	;There are 3 active tblptr bytes
  9884  01342C  6AF8               	clrf	tblptru,c
  9885  01342E  0E00               	movlw	low (__mediumconst shr (0+16))
  9886  013430  22F8               	addwfc	tblptru,f,c
  9887  013432                     	endif
  9888  013432  0009               	tblrd		*+
  9889  013434  CFF5 F081          	movff	tablat,___flmul@f1
  9890  013438  0009               	tblrd		*+
  9891  01343A  CFF5 F082          	movff	tablat,___flmul@f1+1
  9892  01343E  0009               	tblrd		*+
  9893  013440  CFF5 F083          	movff	tablat,___flmul@f1+2
  9894  013444  000A               	tblrd		*-
  9895  013446  CFF5 F084          	movff	tablat,___flmul@f1+3
  9896  01344A  ECDF  F0A6         	call	___flmul	;wreg free
  9897  01344E  C081  F094         	movff	?___flmul,_scale$4243
  9898  013452  C082  F095         	movff	?___flmul+1,_scale$4243+1
  9899  013456  C083  F096         	movff	?___flmul+2,_scale$4243+2
  9900  01345A  C084  F097         	movff	?___flmul+3,_scale$4243+3
  9901                           
  9902                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9903  01345E  C094  F081         	movff	_scale$4243,___flmul@f1
  9904  013462  C095  F082         	movff	_scale$4243+1,___flmul@f1+1
  9905  013466  C096  F083         	movff	_scale$4243+2,___flmul@f1+2
  9906  01346A  C097  F084         	movff	_scale$4243+3,___flmul@f1+3
  9907  01346E  0E00               	movlw	0
  9908  013470  0100               	movlb	0	; () banked
  9909  013472  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9910  013474  0E0A               	movlw	10
  9911  013476  6F74               	movwf	___awmod@divisor& (0+255),b
  9912  013478  0100               	movlb	0	; () banked
  9913  01347A  5198               	movf	scale@scl& (0+255),w,b
  9914  01347C  0100               	movlb	0	; () banked
  9915  01347E  6F72               	movwf	___awmod@dividend& (0+255),b
  9916  013480  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9917  013482  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  9918  013484  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  9919  013486  EC39  F0AB         	call	___awmod	;wreg free
  9920  01348A  0100               	movlb	0	; () banked
  9921  01348C  90D8               	bcf	status,0,c
  9922  01348E  3772               	rlcf	?___awmod& (0+255),f,b
  9923  013490  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9924  013492  0100               	movlb	0	; () banked
  9925  013494  90D8               	bcf	status,0,c
  9926  013496  3772               	rlcf	?___awmod& (0+255),f,b
  9927  013498  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9928  01349A  0E2B               	movlw	low __powers_
  9929  01349C  0100               	movlb	0	; () banked
  9930  01349E  2572               	addwf	?___awmod& (0+255),w,b
  9931  0134A0  6EF6               	movwf	tblptrl,c
  9932  0134A2  0EFD               	movlw	high __powers_
  9933  0134A4  0100               	movlb	0	; () banked
  9934  0134A6  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  9935  0134A8  6EF7               	movwf	tblptrh,c
  9936  0134AA                     	if	1	;There are 3 active tblptr bytes
  9937  0134AA  6AF8               	clrf	tblptru,c
  9938  0134AC  0E00               	movlw	low (__mediumconst shr (0+16))
  9939  0134AE  22F8               	addwfc	tblptru,f,c
  9940  0134B0                     	endif
  9941  0134B0  0009               	tblrd		*+
  9942  0134B2  CFF5 F085          	movff	tablat,___flmul@f2
  9943  0134B6  0009               	tblrd		*+
  9944  0134B8  CFF5 F086          	movff	tablat,___flmul@f2+1
  9945  0134BC  0009               	tblrd		*+
  9946  0134BE  CFF5 F087          	movff	tablat,___flmul@f2+2
  9947  0134C2  000A               	tblrd		*-
  9948  0134C4  CFF5 F088          	movff	tablat,___flmul@f2+3
  9949  0134C8  ECDF  F0A6         	call	___flmul	;wreg free
  9950  0134CC  C081  F090         	movff	?___flmul,?_scale
  9951  0134D0  C082  F091         	movff	?___flmul+1,?_scale+1
  9952  0134D4  C083  F092         	movff	?___flmul+2,?_scale+2
  9953  0134D8  C084  F093         	movff	?___flmul+3,?_scale+3
  9954  0134DC  0012               	return	
  9955  0134DE  D06B               	goto	l7799
  9956  0134E0                     l7793:
  9957                           
  9958                           ;doprnt.c: 438: else if(scl > 10)
  9959  0134E0  0100               	movlb	0	; () banked
  9960  0134E2  5198               	movf	scale@scl& (0+255),w,b
  9961  0134E4  0A80               	xorlw	128
  9962  0134E6  0F75               	addlw	-139
  9963  0134E8  A0D8               	btfss	status,0,c
  9964  0134EA  D065               	goto	l7799
  9965                           
  9966                           ; BSR set to: 0
  9967                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9968  0134EC  0E00               	movlw	0
  9969  0134EE  0100               	movlb	0	; () banked
  9970  0134F0  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9971  0134F2  0E0A               	movlw	10
  9972  0134F4  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9973  0134F6  0100               	movlb	0	; () banked
  9974  0134F8  5198               	movf	scale@scl& (0+255),w,b
  9975  0134FA  0100               	movlb	0	; () banked
  9976  0134FC  6F78               	movwf	___awdiv@dividend& (0+255),b
  9977  0134FE  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  9978  013500  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  9979  013502  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9980  013504  ECAC  F0A9         	call	___awdiv	;wreg free
  9981  013508  0100               	movlb	0	; () banked
  9982  01350A  90D8               	bcf	status,0,c
  9983  01350C  3778               	rlcf	?___awdiv& (0+255),f,b
  9984  01350E  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9985  013510  0100               	movlb	0	; () banked
  9986  013512  90D8               	bcf	status,0,c
  9987  013514  3778               	rlcf	?___awdiv& (0+255),f,b
  9988  013516  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9989  013518  0E24               	movlw	36
  9990  01351A  0100               	movlb	0	; () banked
  9991  01351C  2778               	addwf	?___awdiv& (0+255),f,b
  9992  01351E  0E00               	movlw	0
  9993  013520  0100               	movlb	0	; () banked
  9994  013522  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9995  013524  0E2B               	movlw	low __powers_
  9996  013526  0100               	movlb	0	; () banked
  9997  013528  2578               	addwf	?___awdiv& (0+255),w,b
  9998  01352A  6EF6               	movwf	tblptrl,c
  9999  01352C  0EFD               	movlw	high __powers_
 10000  01352E  0100               	movlb	0	; () banked
 10001  013530  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
 10002  013532  6EF7               	movwf	tblptrh,c
 10003  013534                     	if	1	;There are 3 active tblptr bytes
 10004  013534  6AF8               	clrf	tblptru,c
 10005  013536  0E00               	movlw	low (__mediumconst shr (0+16))
 10006  013538  22F8               	addwfc	tblptru,f,c
 10007  01353A                     	endif
 10008  01353A  0009               	tblrd		*+
 10009  01353C  CFF5 F081          	movff	tablat,___flmul@f1
 10010  013540  0009               	tblrd		*+
 10011  013542  CFF5 F082          	movff	tablat,___flmul@f1+1
 10012  013546  0009               	tblrd		*+
 10013  013548  CFF5 F083          	movff	tablat,___flmul@f1+2
 10014  01354C  000A               	tblrd		*-
 10015  01354E  CFF5 F084          	movff	tablat,___flmul@f1+3
 10016  013552  0E00               	movlw	0
 10017  013554  0100               	movlb	0	; () banked
 10018  013556  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
 10019  013558  0E0A               	movlw	10
 10020  01355A  6F74               	movwf	___awmod@divisor& (0+255),b
 10021  01355C  0100               	movlb	0	; () banked
 10022  01355E  5198               	movf	scale@scl& (0+255),w,b
 10023  013560  0100               	movlb	0	; () banked
 10024  013562  6F72               	movwf	___awmod@dividend& (0+255),b
 10025  013564  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
 10026  013566  BF72               	btfsc	___awmod@dividend& (0+255),7,b
 10027  013568  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
 10028  01356A  EC39  F0AB         	call	___awmod	;wreg free
 10029  01356E  0100               	movlb	0	; () banked
 10030  013570  90D8               	bcf	status,0,c
 10031  013572  3772               	rlcf	?___awmod& (0+255),f,b
 10032  013574  3773               	rlcf	(?___awmod+1)& (0+255),f,b
 10033  013576  0100               	movlb	0	; () banked
 10034  013578  90D8               	bcf	status,0,c
 10035  01357A  3772               	rlcf	?___awmod& (0+255),f,b
 10036  01357C  3773               	rlcf	(?___awmod+1)& (0+255),f,b
 10037  01357E  0E2B               	movlw	low __powers_
 10038  013580  0100               	movlb	0	; () banked
 10039  013582  2572               	addwf	?___awmod& (0+255),w,b
 10040  013584  6EF6               	movwf	tblptrl,c
 10041  013586  0EFD               	movlw	high __powers_
 10042  013588  0100               	movlb	0	; () banked
 10043  01358A  2173               	addwfc	(?___awmod+1)& (0+255),w,b
 10044  01358C  6EF7               	movwf	tblptrh,c
 10045  01358E                     	if	1	;There are 3 active tblptr bytes
 10046  01358E  6AF8               	clrf	tblptru,c
 10047  013590  0E00               	movlw	low (__mediumconst shr (0+16))
 10048  013592  22F8               	addwfc	tblptru,f,c
 10049  013594                     	endif
 10050  013594  0009               	tblrd		*+
 10051  013596  CFF5 F085          	movff	tablat,___flmul@f2
 10052  01359A  0009               	tblrd		*+
 10053  01359C  CFF5 F086          	movff	tablat,___flmul@f2+1
 10054  0135A0  0009               	tblrd		*+
 10055  0135A2  CFF5 F087          	movff	tablat,___flmul@f2+2
 10056  0135A6  000A               	tblrd		*-
 10057  0135A8  CFF5 F088          	movff	tablat,___flmul@f2+3
 10058  0135AC  ECDF  F0A6         	call	___flmul	;wreg free
 10059  0135B0  D78D               	goto	L8
 10060  0135B2  0012               	return	
 10061  0135B4  D000               	goto	l7799
 10062  0135B6                     l7799:
 10063                           
 10064                           ;doprnt.c: 440: return _powers_[scl];
 10065  0135B6  0100               	movlb	0	; () banked
 10066  0135B8  5198               	movf	scale@scl& (0+255),w,b
 10067  0135BA  0D04               	mullw	4
 10068  0135BC  0E2B               	movlw	low __powers_
 10069  0135BE  24F3               	addwf	prodl,w,c
 10070  0135C0  6EF6               	movwf	tblptrl,c
 10071  0135C2  0EFD               	movlw	high __powers_
 10072  0135C4  20F4               	addwfc	prodh,w,c
 10073  0135C6  6EF7               	movwf	tblptrh,c
 10074  0135C8                     	if	1	;There are 3 active tblptr bytes
 10075  0135C8  6AF8               	clrf	tblptru,c
 10076  0135CA  0E00               	movlw	low (__mediumconst shr (0+16))
 10077  0135CC  22F8               	addwfc	tblptru,f,c
 10078  0135CE                     	endif
 10079  0135CE  0009               	tblrd		*+
 10080  0135D0  CFF5 F090          	movff	tablat,?_scale
 10081  0135D4  0009               	tblrd		*+
 10082  0135D6  CFF5 F091          	movff	tablat,?_scale+1
 10083  0135DA  0009               	tblrd		*+
 10084  0135DC  CFF5 F092          	movff	tablat,?_scale+2
 10085  0135E0  000A               	tblrd		*-
 10086  0135E2  CFF5 F093          	movff	tablat,?_scale+3
 10087  0135E6  0012               	return	
 10088                           
 10089                           ; BSR set to: 0
 10090  0135E8  0012               	return		;funcret
 10091  0135EA                     __end_of_scale:
 10092                           	opt stack 0
 10093                           tblptru	equ	0xFF8
 10094                           tblptrh	equ	0xFF7
 10095                           tblptrl	equ	0xFF6
 10096                           tablat	equ	0xFF5
 10097                           prodh	equ	0xFF4
 10098                           prodl	equ	0xFF3
 10099                           intcon	equ	0xFF2
 10100                           postinc0	equ	0xFEE
 10101                           wreg	equ	0xFE8
 10102                           indf2	equ	0xFDF
 10103                           postinc2	equ	0xFDE
 10104                           fsr2h	equ	0xFDA
 10105                           fsr2l	equ	0xFD9
 10106                           status	equ	0xFD8
 10107                           
 10108 ;; *************** function _isdigit *****************
 10109 ;; Defined at:
 10110 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;  c               1    wreg     unsigned char 
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;  c               1   20[BANK0 ] unsigned char 
 10115 ;; Return value:  Size  Location     Type
 10116 ;;		None               void
 10117 ;; Registers used:
 10118 ;;		wreg, status,2, status,0
 10119 ;; Tracked objects:
 10120 ;;		On entry : 0/0
 10121 ;;		On exit  : 0/0
 10122 ;;		Unchanged: 0/0
 10123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10125 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10126 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10127 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10128 ;;Total ram usage:        3 bytes
 10129 ;; Hardware stack levels used:    1
 10130 ;; Hardware stack levels required when called:    3
 10131 ;; This function calls:
 10132 ;;		Nothing
 10133 ;; This function is called by:
 10134 ;;		_sprintf
 10135 ;; This function uses a non-reentrant model
 10136 ;;
 10137                           
 10138                           	psect	text14
 10139  016032                     __ptext14:
 10140                           	opt stack 0
 10141  016032                     _isdigit:
 10142                           	opt stack 25
 10143                           
 10144                           ;incstack = 0
 10145                           ;isdigit@c stored from wreg
 10146  016032  0100               	movlb	0	; () banked
 10147  016034  6F74               	movwf	isdigit@c& (0+255),b
 10148                           
 10149                           ; BSR set to: 0
 10150  016036  0E00               	movlw	0
 10151  016038  0100               	movlb	0	; () banked
 10152  01603A  6F73               	movwf	_isdigit$3917& (0+255),b
 10153                           
 10154                           ; BSR set to: 0
 10155  01603C  0E3A               	movlw	58
 10156  01603E  0100               	movlb	0	; () banked
 10157  016040  6174               	cpfslt	isdigit@c& (0+255),b
 10158  016042  D008               	goto	l7811
 10159                           
 10160                           ; BSR set to: 0
 10161  016044  0E2F               	movlw	47
 10162  016046  0100               	movlb	0	; () banked
 10163  016048  6574               	cpfsgt	isdigit@c& (0+255),b
 10164  01604A  D004               	goto	l7811
 10165                           
 10166                           ; BSR set to: 0
 10167  01604C  0E01               	movlw	1
 10168  01604E  0100               	movlb	0	; () banked
 10169  016050  6F73               	movwf	_isdigit$3917& (0+255),b
 10170  016052  D000               	goto	l7811
 10171  016054                     l7811:
 10172                           
 10173                           ; BSR set to: 0
 10174  016054  C073  F072         	movff	_isdigit$3917,??_isdigit
 10175  016058  0100               	movlb	0	; () banked
 10176  01605A  3172               	rrcf	??_isdigit& (0+255),w,b
 10177  01605C  0012               	return	
 10178                           
 10179                           ; BSR set to: 0
 10180                           
 10181                           ; BSR set to: 0
 10182  01605E  0012               	return		;funcret
 10183  016060                     __end_of_isdigit:
 10184                           	opt stack 0
 10185                           tblptru	equ	0xFF8
 10186                           tblptrh	equ	0xFF7
 10187                           tblptrl	equ	0xFF6
 10188                           tablat	equ	0xFF5
 10189                           prodh	equ	0xFF4
 10190                           prodl	equ	0xFF3
 10191                           intcon	equ	0xFF2
 10192                           postinc0	equ	0xFEE
 10193                           wreg	equ	0xFE8
 10194                           indf2	equ	0xFDF
 10195                           postinc2	equ	0xFDE
 10196                           fsr2h	equ	0xFDA
 10197                           fsr2l	equ	0xFD9
 10198                           status	equ	0xFD8
 10199                           
 10200 ;; *************** function _fround *****************
 10201 ;; Defined at:
 10202 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 10203 ;; Parameters:    Size  Location     Type
 10204 ;;  prec            1    wreg     unsigned char 
 10205 ;; Auto vars:     Size  Location     Type
 10206 ;;  prec            1   60[BANK0 ] unsigned char 
 10207 ;; Return value:  Size  Location     Type
 10208 ;;                  4   48[BANK0 ] unsigned char 
 10209 ;; Registers used:
 10210 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10211 ;; Tracked objects:
 10212 ;;		On entry : 0/0
 10213 ;;		On exit  : 0/0
 10214 ;;		Unchanged: 0/0
 10215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10216 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10217 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10219 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10220 ;;Total ram usage:       13 bytes
 10221 ;; Hardware stack levels used:    1
 10222 ;; Hardware stack levels required when called:    5
 10223 ;; This function calls:
 10224 ;;		___awdiv
 10225 ;;		___awmod
 10226 ;;		___flmul
 10227 ;; This function is called by:
 10228 ;;		_sprintf
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           	psect	text15
 10233  013994                     __ptext15:
 10234                           	opt stack 0
 10235  013994                     _fround:
 10236                           	opt stack 23
 10237                           
 10238                           ; BSR set to: 0
 10239                           ;incstack = 0
 10240                           ;fround@prec stored from wreg
 10241  013994  0100               	movlb	0	; () banked
 10242  013996  6F9C               	movwf	fround@prec& (0+255),b
 10243                           
 10244                           ; BSR set to: 0
 10245                           ;doprnt.c: 413: if(prec>=110)
 10246  013998  0E6D               	movlw	109
 10247  01399A  0100               	movlb	0	; () banked
 10248  01399C  659C               	cpfsgt	fround@prec& (0+255),b
 10249  01399E  D0CE               	goto	l7753
 10250                           
 10251                           ; BSR set to: 0
 10252                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10253  0139A0  0E00               	movlw	0
 10254  0139A2  0100               	movlb	0	; () banked
 10255  0139A4  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
 10256  0139A6  0E0A               	movlw	10
 10257  0139A8  6F7A               	movwf	___awdiv@divisor& (0+255),b
 10258  0139AA  0E00               	movlw	0
 10259  0139AC  0100               	movlb	0	; () banked
 10260  0139AE  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
 10261  0139B0  0E64               	movlw	100
 10262  0139B2  6F74               	movwf	___awmod@divisor& (0+255),b
 10263  0139B4  C09C  F072         	movff	fround@prec,___awmod@dividend
 10264  0139B8  0100               	movlb	0	; () banked
 10265  0139BA  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
 10266  0139BC  EC39  F0AB         	call	___awmod	;wreg free
 10267  0139C0  C072  F078         	movff	?___awmod,___awdiv@dividend
 10268  0139C4  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
 10269  0139C8  ECAC  F0A9         	call	___awdiv	;wreg free
 10270  0139CC  0100               	movlb	0	; () banked
 10271  0139CE  90D8               	bcf	status,0,c
 10272  0139D0  3778               	rlcf	?___awdiv& (0+255),f,b
 10273  0139D2  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
 10274  0139D4  0100               	movlb	0	; () banked
 10275  0139D6  90D8               	bcf	status,0,c
 10276  0139D8  3778               	rlcf	?___awdiv& (0+255),f,b
 10277  0139DA  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
 10278  0139DC  0E24               	movlw	36
 10279  0139DE  0100               	movlb	0	; () banked
 10280  0139E0  2778               	addwf	?___awdiv& (0+255),f,b
 10281  0139E2  0E00               	movlw	0
 10282  0139E4  0100               	movlb	0	; () banked
 10283  0139E6  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
 10284  0139E8  0EF7               	movlw	low __npowers_
 10285  0139EA  0100               	movlb	0	; () banked
 10286  0139EC  2578               	addwf	?___awdiv& (0+255),w,b
 10287  0139EE  6EF6               	movwf	tblptrl,c
 10288  0139F0  0EFC               	movlw	high __npowers_
 10289  0139F2  0100               	movlb	0	; () banked
 10290  0139F4  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
 10291  0139F6  6EF7               	movwf	tblptrh,c
 10292  0139F8                     	if	1	;There are 3 active tblptr bytes
 10293  0139F8  6AF8               	clrf	tblptru,c
 10294  0139FA  0E00               	movlw	low (__mediumconst shr (0+16))
 10295  0139FC  22F8               	addwfc	tblptru,f,c
 10296  0139FE                     	endif
 10297  0139FE  0009               	tblrd		*+
 10298  013A00  CFF5 F085          	movff	tablat,___flmul@f2
 10299  013A04  0009               	tblrd		*+
 10300  013A06  CFF5 F086          	movff	tablat,___flmul@f2+1
 10301  013A0A  0009               	tblrd		*+
 10302  013A0C  CFF5 F087          	movff	tablat,___flmul@f2+2
 10303  013A10  000A               	tblrd		*-
 10304  013A12  CFF5 F088          	movff	tablat,___flmul@f2+3
 10305  013A16  0E00               	movlw	0
 10306  013A18  0100               	movlb	0	; () banked
 10307  013A1A  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
 10308  013A1C  0E64               	movlw	100
 10309  013A1E  6F7A               	movwf	___awdiv@divisor& (0+255),b
 10310  013A20  C09C  F078         	movff	fround@prec,___awdiv@dividend
 10311  013A24  0100               	movlb	0	; () banked
 10312  013A26  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
 10313  013A28  ECAC  F0A9         	call	___awdiv	;wreg free
 10314  013A2C  0100               	movlb	0	; () banked
 10315  013A2E  90D8               	bcf	status,0,c
 10316  013A30  3778               	rlcf	?___awdiv& (0+255),f,b
 10317  013A32  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
 10318  013A34  0100               	movlb	0	; () banked
 10319  013A36  90D8               	bcf	status,0,c
 10320  013A38  3778               	rlcf	?___awdiv& (0+255),f,b
 10321  013A3A  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
 10322  013A3C  0E48               	movlw	72
 10323  013A3E  0100               	movlb	0	; () banked
 10324  013A40  2778               	addwf	?___awdiv& (0+255),f,b
 10325  013A42  0E00               	movlw	0
 10326  013A44  0100               	movlb	0	; () banked
 10327  013A46  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
 10328  013A48  0EF7               	movlw	low __npowers_
 10329  013A4A  0100               	movlb	0	; () banked
 10330  013A4C  2578               	addwf	?___awdiv& (0+255),w,b
 10331  013A4E  6EF6               	movwf	tblptrl,c
 10332  013A50  0EFC               	movlw	high __npowers_
 10333  013A52  0100               	movlb	0	; () banked
 10334  013A54  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
 10335  013A56  6EF7               	movwf	tblptrh,c
 10336  013A58                     	if	1	;There are 3 active tblptr bytes
 10337  013A58  6AF8               	clrf	tblptru,c
 10338  013A5A  0E00               	movlw	low (__mediumconst shr (0+16))
 10339  013A5C  22F8               	addwfc	tblptru,f,c
 10340  013A5E                     	endif
 10341  013A5E  0009               	tblrd		*+
 10342  013A60  CFF5 F081          	movff	tablat,___flmul@f1
 10343  013A64  0009               	tblrd		*+
 10344  013A66  CFF5 F082          	movff	tablat,___flmul@f1+1
 10345  013A6A  0009               	tblrd		*+
 10346  013A6C  CFF5 F083          	movff	tablat,___flmul@f1+2
 10347  013A70  000A               	tblrd		*-
 10348  013A72  CFF5 F084          	movff	tablat,___flmul@f1+3
 10349  013A76  ECDF  F0A6         	call	___flmul	;wreg free
 10350  013A7A  C081  F098         	movff	?___flmul,_fround$4241
 10351  013A7E  C082  F099         	movff	?___flmul+1,_fround$4241+1
 10352  013A82  C083  F09A         	movff	?___flmul+2,_fround$4241+2
 10353  013A86  C084  F09B         	movff	?___flmul+3,_fround$4241+3
 10354                           
 10355                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10356  013A8A  0E00               	movlw	0
 10357  013A8C  0100               	movlb	0	; () banked
 10358  013A8E  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
 10359  013A90  0E0A               	movlw	10
 10360  013A92  6F74               	movwf	___awmod@divisor& (0+255),b
 10361  013A94  C09C  F072         	movff	fround@prec,___awmod@dividend
 10362  013A98  0100               	movlb	0	; () banked
 10363  013A9A  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
 10364  013A9C  EC39  F0AB         	call	___awmod	;wreg free
 10365  013AA0  0100               	movlb	0	; () banked
 10366  013AA2  90D8               	bcf	status,0,c
 10367  013AA4  3772               	rlcf	?___awmod& (0+255),f,b
 10368  013AA6  3773               	rlcf	(?___awmod+1)& (0+255),f,b
 10369  013AA8  0100               	movlb	0	; () banked
 10370  013AAA  90D8               	bcf	status,0,c
 10371  013AAC  3772               	rlcf	?___awmod& (0+255),f,b
 10372  013AAE  3773               	rlcf	(?___awmod+1)& (0+255),f,b
 10373  013AB0  0EF7               	movlw	low __npowers_
 10374  013AB2  0100               	movlb	0	; () banked
 10375  013AB4  2572               	addwf	?___awmod& (0+255),w,b
 10376  013AB6  6EF6               	movwf	tblptrl,c
 10377  013AB8  0EFC               	movlw	high __npowers_
 10378  013ABA  0100               	movlb	0	; () banked
 10379  013ABC  2173               	addwfc	(?___awmod+1)& (0+255),w,b
 10380  013ABE  6EF7               	movwf	tblptrh,c
 10381  013AC0                     	if	1	;There are 3 active tblptr bytes
 10382  013AC0  6AF8               	clrf	tblptru,c
 10383  013AC2  0E00               	movlw	low (__mediumconst shr (0+16))
 10384  013AC4  22F8               	addwfc	tblptru,f,c
 10385  013AC6                     	endif
 10386  013AC6  0009               	tblrd		*+
 10387  013AC8  CFF5 F085          	movff	tablat,___flmul@f2
 10388  013ACC  0009               	tblrd		*+
 10389  013ACE  CFF5 F086          	movff	tablat,___flmul@f2+1
 10390  013AD2  0009               	tblrd		*+
 10391  013AD4  CFF5 F087          	movff	tablat,___flmul@f2+2
 10392  013AD8  000A               	tblrd		*-
 10393  013ADA  CFF5 F088          	movff	tablat,___flmul@f2+3
 10394  013ADE  C098  F081         	movff	_fround$4241,___flmul@f1
 10395  013AE2  C099  F082         	movff	_fround$4241+1,___flmul@f1+1
 10396  013AE6  C09A  F083         	movff	_fround$4241+2,___flmul@f1+2
 10397  013AEA  C09B  F084         	movff	_fround$4241+3,___flmul@f1+3
 10398  013AEE  ECDF  F0A6         	call	___flmul	;wreg free
 10399  013AF2  C081  F094         	movff	?___flmul,_fround$4242
 10400  013AF6  C082  F095         	movff	?___flmul+1,_fround$4242+1
 10401  013AFA  C083  F096         	movff	?___flmul+2,_fround$4242+2
 10402  013AFE  C084  F097         	movff	?___flmul+3,_fround$4242+3
 10403                           
 10404                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10405  013B02  C094  F081         	movff	_fround$4242,___flmul@f1
 10406  013B06  C095  F082         	movff	_fround$4242+1,___flmul@f1+1
 10407  013B0A  C096  F083         	movff	_fround$4242+2,___flmul@f1+2
 10408  013B0E  C097  F084         	movff	_fround$4242+3,___flmul@f1+3
 10409  013B12  0E00               	movlw	0
 10410  013B14  0100               	movlb	0	; () banked
 10411  013B16  6F85               	movwf	___flmul@f2& (0+255),b
 10412  013B18  0E00               	movlw	0
 10413  013B1A  6F86               	movwf	(___flmul@f2+1)& (0+255),b
 10414  013B1C  0E00               	movlw	0
 10415  013B1E  6F87               	movwf	(___flmul@f2+2)& (0+255),b
 10416  013B20  0E3F               	movlw	63
 10417  013B22  6F88               	movwf	(___flmul@f2+3)& (0+255),b
 10418  013B24  ECDF  F0A6         	call	___flmul	;wreg free
 10419  013B28  C081  F090         	movff	?___flmul,?_fround
 10420  013B2C  C082  F091         	movff	?___flmul+1,?_fround+1
 10421  013B30  C083  F092         	movff	?___flmul+2,?_fround+2
 10422  013B34  C084  F093         	movff	?___flmul+3,?_fround+3
 10423  013B38  0012               	return	
 10424  013B3A  D07E               	goto	l7761
 10425  013B3C                     l7753:
 10426                           
 10427                           ;doprnt.c: 415: else if(prec > 10)
 10428  013B3C  0E0A               	movlw	10
 10429  013B3E  0100               	movlb	0	; () banked
 10430  013B40  659C               	cpfsgt	fround@prec& (0+255),b
 10431  013B42  D07A               	goto	l7761
 10432                           
 10433                           ; BSR set to: 0
 10434                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10435  013B44  0E00               	movlw	0
 10436  013B46  0100               	movlb	0	; () banked
 10437  013B48  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
 10438  013B4A  0E0A               	movlw	10
 10439  013B4C  6F74               	movwf	___awmod@divisor& (0+255),b
 10440  013B4E  C09C  F072         	movff	fround@prec,___awmod@dividend
 10441  013B52  0100               	movlb	0	; () banked
 10442  013B54  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
 10443  013B56  EC39  F0AB         	call	___awmod	;wreg free
 10444  013B5A  0100               	movlb	0	; () banked
 10445  013B5C  90D8               	bcf	status,0,c
 10446  013B5E  3772               	rlcf	?___awmod& (0+255),f,b
 10447  013B60  3773               	rlcf	(?___awmod+1)& (0+255),f,b
 10448  013B62  0100               	movlb	0	; () banked
 10449  013B64  90D8               	bcf	status,0,c
 10450  013B66  3772               	rlcf	?___awmod& (0+255),f,b
 10451  013B68  3773               	rlcf	(?___awmod+1)& (0+255),f,b
 10452  013B6A  0EF7               	movlw	low __npowers_
 10453  013B6C  0100               	movlb	0	; () banked
 10454  013B6E  2572               	addwf	?___awmod& (0+255),w,b
 10455  013B70  6EF6               	movwf	tblptrl,c
 10456  013B72  0EFC               	movlw	high __npowers_
 10457  013B74  0100               	movlb	0	; () banked
 10458  013B76  2173               	addwfc	(?___awmod+1)& (0+255),w,b
 10459  013B78  6EF7               	movwf	tblptrh,c
 10460  013B7A                     	if	1	;There are 3 active tblptr bytes
 10461  013B7A  6AF8               	clrf	tblptru,c
 10462  013B7C  0E00               	movlw	low (__mediumconst shr (0+16))
 10463  013B7E  22F8               	addwfc	tblptru,f,c
 10464  013B80                     	endif
 10465  013B80  0009               	tblrd		*+
 10466  013B82  CFF5 F085          	movff	tablat,___flmul@f2
 10467  013B86  0009               	tblrd		*+
 10468  013B88  CFF5 F086          	movff	tablat,___flmul@f2+1
 10469  013B8C  0009               	tblrd		*+
 10470  013B8E  CFF5 F087          	movff	tablat,___flmul@f2+2
 10471  013B92  000A               	tblrd		*-
 10472  013B94  CFF5 F088          	movff	tablat,___flmul@f2+3
 10473  013B98  0E00               	movlw	0
 10474  013B9A  0100               	movlb	0	; () banked
 10475  013B9C  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
 10476  013B9E  0E0A               	movlw	10
 10477  013BA0  6F7A               	movwf	___awdiv@divisor& (0+255),b
 10478  013BA2  C09C  F078         	movff	fround@prec,___awdiv@dividend
 10479  013BA6  0100               	movlb	0	; () banked
 10480  013BA8  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
 10481  013BAA  ECAC  F0A9         	call	___awdiv	;wreg free
 10482  013BAE  0100               	movlb	0	; () banked
 10483  013BB0  90D8               	bcf	status,0,c
 10484  013BB2  3778               	rlcf	?___awdiv& (0+255),f,b
 10485  013BB4  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
 10486  013BB6  0100               	movlb	0	; () banked
 10487  013BB8  90D8               	bcf	status,0,c
 10488  013BBA  3778               	rlcf	?___awdiv& (0+255),f,b
 10489  013BBC  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
 10490  013BBE  0E24               	movlw	36
 10491  013BC0  0100               	movlb	0	; () banked
 10492  013BC2  2778               	addwf	?___awdiv& (0+255),f,b
 10493  013BC4  0E00               	movlw	0
 10494  013BC6  0100               	movlb	0	; () banked
 10495  013BC8  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
 10496  013BCA  0EF7               	movlw	low __npowers_
 10497  013BCC  0100               	movlb	0	; () banked
 10498  013BCE  2578               	addwf	?___awdiv& (0+255),w,b
 10499  013BD0  6EF6               	movwf	tblptrl,c
 10500  013BD2  0EFC               	movlw	high __npowers_
 10501  013BD4  0100               	movlb	0	; () banked
 10502  013BD6  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
 10503  013BD8  6EF7               	movwf	tblptrh,c
 10504  013BDA                     	if	1	;There are 3 active tblptr bytes
 10505  013BDA  6AF8               	clrf	tblptru,c
 10506  013BDC  0E00               	movlw	low (__mediumconst shr (0+16))
 10507  013BDE  22F8               	addwfc	tblptru,f,c
 10508  013BE0                     	endif
 10509  013BE0  0009               	tblrd		*+
 10510  013BE2  CFF5 F081          	movff	tablat,___flmul@f1
 10511  013BE6  0009               	tblrd		*+
 10512  013BE8  CFF5 F082          	movff	tablat,___flmul@f1+1
 10513  013BEC  0009               	tblrd		*+
 10514  013BEE  CFF5 F083          	movff	tablat,___flmul@f1+2
 10515  013BF2  000A               	tblrd		*-
 10516  013BF4  CFF5 F084          	movff	tablat,___flmul@f1+3
 10517  013BF8  ECDF  F0A6         	call	___flmul	;wreg free
 10518  013BFC  C081  F098         	movff	?___flmul,_fround$4241
 10519  013C00  C082  F099         	movff	?___flmul+1,_fround$4241+1
 10520  013C04  C083  F09A         	movff	?___flmul+2,_fround$4241+2
 10521  013C08  C084  F09B         	movff	?___flmul+3,_fround$4241+3
 10522                           
 10523                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10524  013C0C  C098  F081         	movff	_fround$4241,___flmul@f1
 10525  013C10  C099  F082         	movff	_fround$4241+1,___flmul@f1+1
 10526  013C14  C09A  F083         	movff	_fround$4241+2,___flmul@f1+2
 10527  013C18  C09B  F084         	movff	_fround$4241+3,___flmul@f1+3
 10528  013C1C  0E00               	movlw	0
 10529  013C1E  0100               	movlb	0	; () banked
 10530  013C20  6F85               	movwf	___flmul@f2& (0+255),b
 10531  013C22  0E00               	movlw	0
 10532  013C24  6F86               	movwf	(___flmul@f2+1)& (0+255),b
 10533  013C26  0E00               	movlw	0
 10534  013C28  6F87               	movwf	(___flmul@f2+2)& (0+255),b
 10535  013C2A  0E3F               	movlw	63
 10536  013C2C  6F88               	movwf	(___flmul@f2+3)& (0+255),b
 10537  013C2E  ECDF  F0A6         	call	___flmul	;wreg free
 10538  013C32  D77A               	goto	L9
 10539  013C34  0012               	return	
 10540  013C36  D000               	goto	l7761
 10541  013C38                     l7761:
 10542                           
 10543                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 10544  013C38  0100               	movlb	0	; () banked
 10545  013C3A  519C               	movf	fround@prec& (0+255),w,b
 10546  013C3C  0D04               	mullw	4
 10547  013C3E  0EF7               	movlw	low __npowers_
 10548  013C40  24F3               	addwf	prodl,w,c
 10549  013C42  6EF6               	movwf	tblptrl,c
 10550  013C44  0EFC               	movlw	high __npowers_
 10551  013C46  20F4               	addwfc	prodh,w,c
 10552  013C48  6EF7               	movwf	tblptrh,c
 10553  013C4A                     	if	1	;There are 3 active tblptr bytes
 10554  013C4A  6AF8               	clrf	tblptru,c
 10555  013C4C  0E00               	movlw	low (__mediumconst shr (0+16))
 10556  013C4E  22F8               	addwfc	tblptru,f,c
 10557  013C50                     	endif
 10558  013C50  0009               	tblrd		*+
 10559  013C52  CFF5 F081          	movff	tablat,___flmul@f1
 10560  013C56  0009               	tblrd		*+
 10561  013C58  CFF5 F082          	movff	tablat,___flmul@f1+1
 10562  013C5C  0009               	tblrd		*+
 10563  013C5E  CFF5 F083          	movff	tablat,___flmul@f1+2
 10564  013C62  000A               	tblrd		*-
 10565  013C64  CFF5 F084          	movff	tablat,___flmul@f1+3
 10566  013C68  0E00               	movlw	0
 10567  013C6A  0100               	movlb	0	; () banked
 10568  013C6C  6F85               	movwf	___flmul@f2& (0+255),b
 10569  013C6E  0E00               	movlw	0
 10570  013C70  6F86               	movwf	(___flmul@f2+1)& (0+255),b
 10571  013C72  0E00               	movlw	0
 10572  013C74  6F87               	movwf	(___flmul@f2+2)& (0+255),b
 10573  013C76  0E3F               	movlw	63
 10574  013C78  6F88               	movwf	(___flmul@f2+3)& (0+255),b
 10575  013C7A  ECDF  F0A6         	call	___flmul	;wreg free
 10576  013C7E  C081  F090         	movff	?___flmul,?_fround
 10577  013C82  C082  F091         	movff	?___flmul+1,?_fround+1
 10578  013C86  C083  F092         	movff	?___flmul+2,?_fround+2
 10579  013C8A  C084  F093         	movff	?___flmul+3,?_fround+3
 10580  013C8E  0012               	return	
 10581  013C90  0012               	return		;funcret
 10582  013C92                     __end_of_fround:
 10583                           	opt stack 0
 10584                           tblptru	equ	0xFF8
 10585                           tblptrh	equ	0xFF7
 10586                           tblptrl	equ	0xFF6
 10587                           tablat	equ	0xFF5
 10588                           prodh	equ	0xFF4
 10589                           prodl	equ	0xFF3
 10590                           intcon	equ	0xFF2
 10591                           postinc0	equ	0xFEE
 10592                           wreg	equ	0xFE8
 10593                           indf2	equ	0xFDF
 10594                           postinc2	equ	0xFDE
 10595                           fsr2h	equ	0xFDA
 10596                           fsr2l	equ	0xFD9
 10597                           status	equ	0xFD8
 10598                           
 10599 ;; *************** function ___flmul *****************
 10600 ;; Defined at:
 10601 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flmul.c"
 10602 ;; Parameters:    Size  Location     Type
 10603 ;;  f1              4   33[BANK0 ] unsigned char 
 10604 ;;  f2              4   37[BANK0 ] unsigned char 
 10605 ;; Auto vars:     Size  Location     Type
 10606 ;;  f3_as_produc    4   42[BANK0 ] unsigned long 
 10607 ;;  sign            1   47[BANK0 ] unsigned char 
 10608 ;;  cntr            1   46[BANK0 ] unsigned char 
 10609 ;;  exp             1   41[BANK0 ] unsigned char 
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  4   33[BANK0 ] unsigned char 
 10612 ;; Registers used:
 10613 ;;		wreg, status,2, status,0, cstack
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10619 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10620 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10622 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10623 ;;Total ram usage:       15 bytes
 10624 ;; Hardware stack levels used:    1
 10625 ;; Hardware stack levels required when called:    4
 10626 ;; This function calls:
 10627 ;;		___flpack
 10628 ;; This function is called by:
 10629 ;;		_main
 10630 ;;		_fround
 10631 ;;		_scale
 10632 ;;		_sprintf
 10633 ;; This function uses a non-reentrant model
 10634 ;;
 10635                           
 10636                           	psect	text16
 10637  014DBE                     __ptext16:
 10638                           	opt stack 0
 10639  014DBE                     ___flmul:
 10640                           	opt stack 26
 10641                           
 10642                           ;incstack = 0
 10643  014DBE  0100               	movlb	0	; () banked
 10644  014DC0  3583               	rlcf	(___flmul@f1+2)& (0+255),w,b
 10645  014DC2  3584               	rlcf	(___flmul@f1+3)& (0+255),w,b
 10646  014DC4  0100               	movlb	0	; () banked
 10647  014DC6  6F89               	movwf	___flmul@exp& (0+255),b
 10648  014DC8  0100               	movlb	0	; () banked
 10649  014DCA  5189               	movf	___flmul@exp& (0+255),w,b
 10650  014DCC  A4D8               	btfss	status,2,c
 10651  014DCE  D00A               	goto	l7587
 10652                           
 10653                           ; BSR set to: 0
 10654  014DD0  0E00               	movlw	0
 10655  014DD2  0100               	movlb	0	; () banked
 10656  014DD4  6F81               	movwf	?___flmul& (0+255),b
 10657  014DD6  0E00               	movlw	0
 10658  014DD8  6F82               	movwf	(?___flmul+1)& (0+255),b
 10659  014DDA  0E00               	movlw	0
 10660  014DDC  6F83               	movwf	(?___flmul+2)& (0+255),b
 10661  014DDE  0E00               	movlw	0
 10662  014DE0  6F84               	movwf	(?___flmul+3)& (0+255),b
 10663                           
 10664                           ; BSR set to: 0
 10665  014DE2  0012               	return	
 10666  014DE4                     l7587:
 10667                           
 10668                           ; BSR set to: 0
 10669  014DE4  0100               	movlb	0	; () banked
 10670  014DE6  3587               	rlcf	(___flmul@f2+2)& (0+255),w,b
 10671  014DE8  3588               	rlcf	(___flmul@f2+3)& (0+255),w,b
 10672  014DEA  0100               	movlb	0	; () banked
 10673  014DEC  6F8F               	movwf	___flmul@sign& (0+255),b
 10674  014DEE  0100               	movlb	0	; () banked
 10675  014DF0  518F               	movf	___flmul@sign& (0+255),w,b
 10676  014DF2  A4D8               	btfss	status,2,c
 10677  014DF4  D00A               	goto	l7593
 10678                           
 10679                           ; BSR set to: 0
 10680  014DF6  0E00               	movlw	0
 10681  014DF8  0100               	movlb	0	; () banked
 10682  014DFA  6F81               	movwf	?___flmul& (0+255),b
 10683  014DFC  0E00               	movlw	0
 10684  014DFE  6F82               	movwf	(?___flmul+1)& (0+255),b
 10685  014E00  0E00               	movlw	0
 10686  014E02  6F83               	movwf	(?___flmul+2)& (0+255),b
 10687  014E04  0E00               	movlw	0
 10688  014E06  6F84               	movwf	(?___flmul+3)& (0+255),b
 10689                           
 10690                           ; BSR set to: 0
 10691  014E08  0012               	return	
 10692  014E0A                     l7593:
 10693                           
 10694                           ; BSR set to: 0
 10695  014E0A  0100               	movlb	0	; () banked
 10696  014E0C  518F               	movf	___flmul@sign& (0+255),w,b
 10697  014E0E  0F7B               	addlw	123
 10698  014E10  0100               	movlb	0	; () banked
 10699  014E12  2789               	addwf	___flmul@exp& (0+255),f,b
 10700                           
 10701                           ; BSR set to: 0
 10702  014E14  C084  F08F         	movff	___flmul@f1+3,___flmul@sign
 10703  014E18  0100               	movlb	0	; () banked
 10704  014E1A  5188               	movf	(___flmul@f2+3)& (0+255),w,b
 10705  014E1C  0100               	movlb	0	; () banked
 10706  014E1E  1B8F               	xorwf	___flmul@sign& (0+255),f,b
 10707  014E20  0E80               	movlw	128
 10708  014E22  0100               	movlb	0	; () banked
 10709  014E24  178F               	andwf	___flmul@sign& (0+255),f,b
 10710                           
 10711                           ; BSR set to: 0
 10712  014E26  0100               	movlb	0	; () banked
 10713  014E28  8F83               	bsf	(___flmul@f1+2)& (0+255),7,b
 10714                           
 10715                           ; BSR set to: 0
 10716  014E2A  0100               	movlb	0	; () banked
 10717  014E2C  8F87               	bsf	(___flmul@f2+2)& (0+255),7,b
 10718  014E2E  0EFF               	movlw	255
 10719  014E30  0100               	movlb	0	; () banked
 10720  014E32  1785               	andwf	___flmul@f2& (0+255),f,b
 10721  014E34  0EFF               	movlw	255
 10722  014E36  1786               	andwf	(___flmul@f2+1)& (0+255),f,b
 10723  014E38  0EFF               	movlw	255
 10724  014E3A  1787               	andwf	(___flmul@f2+2)& (0+255),f,b
 10725  014E3C  0E00               	movlw	0
 10726  014E3E  1788               	andwf	(___flmul@f2+3)& (0+255),f,b
 10727                           
 10728                           ; BSR set to: 0
 10729  014E40  0E00               	movlw	0
 10730  014E42  0100               	movlb	0	; () banked
 10731  014E44  6F8A               	movwf	___flmul@f3_as_product& (0+255),b
 10732  014E46  0E00               	movlw	0
 10733  014E48  6F8B               	movwf	(___flmul@f3_as_product+1)& (0+255),b
 10734  014E4A  0E00               	movlw	0
 10735  014E4C  6F8C               	movwf	(___flmul@f3_as_product+2)& (0+255),b
 10736  014E4E  0E00               	movlw	0
 10737  014E50  6F8D               	movwf	(___flmul@f3_as_product+3)& (0+255),b
 10738                           
 10739                           ; BSR set to: 0
 10740  014E52  0E07               	movlw	7
 10741  014E54  0100               	movlb	0	; () banked
 10742  014E56  6F8E               	movwf	___flmul@cntr& (0+255),b
 10743  014E58  D000               	goto	l7605
 10744  014E5A                     l7605:
 10745                           
 10746                           ; BSR set to: 0
 10747  014E5A  0100               	movlb	0	; () banked
 10748  014E5C  A181               	btfss	___flmul@f1& (0+255),0,b
 10749  014E5E  D011               	goto	l7609
 10750                           
 10751                           ; BSR set to: 0
 10752  014E60  0100               	movlb	0	; () banked
 10753  014E62  5185               	movf	___flmul@f2& (0+255),w,b
 10754  014E64  0100               	movlb	0	; () banked
 10755  014E66  278A               	addwf	___flmul@f3_as_product& (0+255),f,b
 10756  014E68  0100               	movlb	0	; () banked
 10757  014E6A  5186               	movf	(___flmul@f2+1)& (0+255),w,b
 10758  014E6C  0100               	movlb	0	; () banked
 10759  014E6E  238B               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
 10760  014E70  0100               	movlb	0	; () banked
 10761  014E72  5187               	movf	(___flmul@f2+2)& (0+255),w,b
 10762  014E74  0100               	movlb	0	; () banked
 10763  014E76  238C               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
 10764  014E78  0100               	movlb	0	; () banked
 10765  014E7A  5188               	movf	(___flmul@f2+3)& (0+255),w,b
 10766  014E7C  0100               	movlb	0	; () banked
 10767  014E7E  238D               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
 10768  014E80  D000               	goto	l7609
 10769  014E82                     l7609:
 10770                           
 10771                           ; BSR set to: 0
 10772  014E82  0100               	movlb	0	; () banked
 10773  014E84  90D8               	bcf	status,0,c
 10774  014E86  3384               	rrcf	(___flmul@f1+3)& (0+255),f,b
 10775  014E88  3383               	rrcf	(___flmul@f1+2)& (0+255),f,b
 10776  014E8A  3382               	rrcf	(___flmul@f1+1)& (0+255),f,b
 10777  014E8C  3381               	rrcf	___flmul@f1& (0+255),f,b
 10778                           
 10779                           ; BSR set to: 0
 10780  014E8E  0100               	movlb	0	; () banked
 10781  014E90  90D8               	bcf	status,0,c
 10782  014E92  3785               	rlcf	___flmul@f2& (0+255),f,b
 10783  014E94  3786               	rlcf	(___flmul@f2+1)& (0+255),f,b
 10784  014E96  3787               	rlcf	(___flmul@f2+2)& (0+255),f,b
 10785  014E98  3788               	rlcf	(___flmul@f2+3)& (0+255),f,b
 10786                           
 10787                           ; BSR set to: 0
 10788  014E9A  0100               	movlb	0	; () banked
 10789  014E9C  2F8E               	decfsz	___flmul@cntr& (0+255),f,b
 10790  014E9E  D7DD               	goto	l7605
 10791  014EA0  D000               	goto	l7615
 10792  014EA2                     l7615:
 10793                           
 10794                           ; BSR set to: 0
 10795  014EA2  0E11               	movlw	17
 10796  014EA4  0100               	movlb	0	; () banked
 10797  014EA6  6F8E               	movwf	___flmul@cntr& (0+255),b
 10798  014EA8  D000               	goto	l7617
 10799  014EAA                     l7617:
 10800                           
 10801                           ; BSR set to: 0
 10802  014EAA  0100               	movlb	0	; () banked
 10803  014EAC  A181               	btfss	___flmul@f1& (0+255),0,b
 10804  014EAE  D011               	goto	l7621
 10805                           
 10806                           ; BSR set to: 0
 10807  014EB0  0100               	movlb	0	; () banked
 10808  014EB2  5185               	movf	___flmul@f2& (0+255),w,b
 10809  014EB4  0100               	movlb	0	; () banked
 10810  014EB6  278A               	addwf	___flmul@f3_as_product& (0+255),f,b
 10811  014EB8  0100               	movlb	0	; () banked
 10812  014EBA  5186               	movf	(___flmul@f2+1)& (0+255),w,b
 10813  014EBC  0100               	movlb	0	; () banked
 10814  014EBE  238B               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
 10815  014EC0  0100               	movlb	0	; () banked
 10816  014EC2  5187               	movf	(___flmul@f2+2)& (0+255),w,b
 10817  014EC4  0100               	movlb	0	; () banked
 10818  014EC6  238C               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
 10819  014EC8  0100               	movlb	0	; () banked
 10820  014ECA  5188               	movf	(___flmul@f2+3)& (0+255),w,b
 10821  014ECC  0100               	movlb	0	; () banked
 10822  014ECE  238D               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
 10823  014ED0  D000               	goto	l7621
 10824  014ED2                     l7621:
 10825                           
 10826                           ; BSR set to: 0
 10827  014ED2  0100               	movlb	0	; () banked
 10828  014ED4  90D8               	bcf	status,0,c
 10829  014ED6  3384               	rrcf	(___flmul@f1+3)& (0+255),f,b
 10830  014ED8  3383               	rrcf	(___flmul@f1+2)& (0+255),f,b
 10831  014EDA  3382               	rrcf	(___flmul@f1+1)& (0+255),f,b
 10832  014EDC  3381               	rrcf	___flmul@f1& (0+255),f,b
 10833                           
 10834                           ; BSR set to: 0
 10835  014EDE  0100               	movlb	0	; () banked
 10836  014EE0  90D8               	bcf	status,0,c
 10837  014EE2  338D               	rrcf	(___flmul@f3_as_product+3)& (0+255),f,b
 10838  014EE4  338C               	rrcf	(___flmul@f3_as_product+2)& (0+255),f,b
 10839  014EE6  338B               	rrcf	(___flmul@f3_as_product+1)& (0+255),f,b
 10840  014EE8  338A               	rrcf	___flmul@f3_as_product& (0+255),f,b
 10841                           
 10842                           ; BSR set to: 0
 10843  014EEA  0100               	movlb	0	; () banked
 10844  014EEC  2F8E               	decfsz	___flmul@cntr& (0+255),f,b
 10845  014EEE  D7DD               	goto	l7617
 10846  014EF0  D000               	goto	l7627
 10847  014EF2                     l7627:
 10848                           
 10849                           ; BSR set to: 0
 10850  014EF2  C08A  F072         	movff	___flmul@f3_as_product,___flpack@arg
 10851  014EF6  C08B  F073         	movff	___flmul@f3_as_product+1,___flpack@arg+1
 10852  014EFA  C08C  F074         	movff	___flmul@f3_as_product+2,___flpack@arg+2
 10853  014EFE  C08D  F075         	movff	___flmul@f3_as_product+3,___flpack@arg+3
 10854  014F02  C089  F076         	movff	___flmul@exp,___flpack@exp
 10855  014F06  C08F  F077         	movff	___flmul@sign,___flpack@sign
 10856  014F0A  EC68  F0A5         	call	___flpack	;wreg free
 10857  014F0E  C072  F081         	movff	?___flpack,?___flmul
 10858  014F12  C073  F082         	movff	?___flpack+1,?___flmul+1
 10859  014F16  C074  F083         	movff	?___flpack+2,?___flmul+2
 10860  014F1A  C075  F084         	movff	?___flpack+3,?___flmul+3
 10861  014F1E  0012               	return	
 10862  014F20  0012               	return		;funcret
 10863  014F22                     __end_of___flmul:
 10864                           	opt stack 0
 10865                           tblptru	equ	0xFF8
 10866                           tblptrh	equ	0xFF7
 10867                           tblptrl	equ	0xFF6
 10868                           tablat	equ	0xFF5
 10869                           prodh	equ	0xFF4
 10870                           prodl	equ	0xFF3
 10871                           intcon	equ	0xFF2
 10872                           postinc0	equ	0xFEE
 10873                           wreg	equ	0xFE8
 10874                           indf2	equ	0xFDF
 10875                           postinc2	equ	0xFDE
 10876                           fsr2h	equ	0xFDA
 10877                           fsr2l	equ	0xFD9
 10878                           status	equ	0xFD8
 10879                           
 10880 ;; *************** function ___awmod *****************
 10881 ;; Defined at:
 10882 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 10883 ;; Parameters:    Size  Location     Type
 10884 ;;  dividend        2   18[BANK0 ] int 
 10885 ;;  divisor         2   20[BANK0 ] int 
 10886 ;; Auto vars:     Size  Location     Type
 10887 ;;  sign            1   23[BANK0 ] unsigned char 
 10888 ;;  counter         1   22[BANK0 ] unsigned char 
 10889 ;; Return value:  Size  Location     Type
 10890 ;;                  2   18[BANK0 ] int 
 10891 ;; Registers used:
 10892 ;;		wreg, status,2, status,0
 10893 ;; Tracked objects:
 10894 ;;		On entry : 0/0
 10895 ;;		On exit  : 0/0
 10896 ;;		Unchanged: 0/0
 10897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10898 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10899 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10901 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10902 ;;Total ram usage:        6 bytes
 10903 ;; Hardware stack levels used:    1
 10904 ;; Hardware stack levels required when called:    3
 10905 ;; This function calls:
 10906 ;;		Nothing
 10907 ;; This function is called by:
 10908 ;;		_fround
 10909 ;;		_scale
 10910 ;; This function uses a non-reentrant model
 10911 ;;
 10912                           
 10913                           	psect	text17
 10914  015672                     __ptext17:
 10915                           	opt stack 0
 10916  015672                     ___awmod:
 10917                           	opt stack 24
 10918                           
 10919                           ;incstack = 0
 10920  015672  0E00               	movlw	0
 10921  015674  0100               	movlb	0	; () banked
 10922  015676  6F77               	movwf	___awmod@sign& (0+255),b
 10923                           
 10924                           ; BSR set to: 0
 10925  015678  0100               	movlb	0	; () banked
 10926  01567A  AF73               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10927  01567C  D009               	goto	l7683
 10928                           
 10929                           ; BSR set to: 0
 10930  01567E  0100               	movlb	0	; () banked
 10931  015680  6D72               	negf	___awmod@dividend& (0+255),b
 10932  015682  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
 10933  015684  B0D8               	btfsc	status,0,c
 10934  015686  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
 10935                           
 10936                           ; BSR set to: 0
 10937  015688  0E01               	movlw	1
 10938  01568A  0100               	movlb	0	; () banked
 10939  01568C  6F77               	movwf	___awmod@sign& (0+255),b
 10940  01568E  D000               	goto	l7683
 10941  015690                     l7683:
 10942                           
 10943                           ; BSR set to: 0
 10944  015690  0100               	movlb	0	; () banked
 10945  015692  AF75               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10946  015694  D006               	goto	l7687
 10947                           
 10948                           ; BSR set to: 0
 10949  015696  0100               	movlb	0	; () banked
 10950  015698  6D74               	negf	___awmod@divisor& (0+255),b
 10951  01569A  1F75               	comf	(___awmod@divisor+1)& (0+255),f,b
 10952  01569C  B0D8               	btfsc	status,0,c
 10953  01569E  2B75               	incf	(___awmod@divisor+1)& (0+255),f,b
 10954  0156A0  D000               	goto	l7687
 10955  0156A2                     l7687:
 10956                           
 10957                           ; BSR set to: 0
 10958  0156A2  0100               	movlb	0	; () banked
 10959  0156A4  5174               	movf	___awmod@divisor& (0+255),w,b
 10960  0156A6  0100               	movlb	0	; () banked
 10961  0156A8  1175               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10962  0156AA  B4D8               	btfsc	status,2,c
 10963  0156AC  D02B               	goto	l7703
 10964                           
 10965                           ; BSR set to: 0
 10966  0156AE  0E01               	movlw	1
 10967  0156B0  0100               	movlb	0	; () banked
 10968  0156B2  6F76               	movwf	___awmod@counter& (0+255),b
 10969  0156B4  D007               	goto	l7693
 10970  0156B6                     l7691:
 10971                           
 10972                           ; BSR set to: 0
 10973  0156B6  0100               	movlb	0	; () banked
 10974  0156B8  90D8               	bcf	status,0,c
 10975  0156BA  3774               	rlcf	___awmod@divisor& (0+255),f,b
 10976  0156BC  3775               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10977  0156BE  0100               	movlb	0	; () banked
 10978  0156C0  2B76               	incf	___awmod@counter& (0+255),f,b
 10979  0156C2  D000               	goto	l7693
 10980  0156C4                     l7693:
 10981                           
 10982                           ; BSR set to: 0
 10983  0156C4  0100               	movlb	0	; () banked
 10984  0156C6  BF75               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 10985  0156C8  D002               	goto	l7695
 10986  0156CA  D7F5               	goto	l7691
 10987                           
 10988                           ; BSR set to: 0
 10989  0156CC  D000               	goto	l7695
 10990  0156CE                     l7695:
 10991                           
 10992                           ; BSR set to: 0
 10993  0156CE  0100               	movlb	0	; () banked
 10994  0156D0  5174               	movf	___awmod@divisor& (0+255),w,b
 10995  0156D2  0100               	movlb	0	; () banked
 10996  0156D4  5D72               	subwf	___awmod@dividend& (0+255),w,b
 10997  0156D6  0100               	movlb	0	; () banked
 10998  0156D8  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
 10999  0156DA  0100               	movlb	0	; () banked
 11000  0156DC  5973               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11001  0156DE  A0D8               	btfss	status,0,c
 11002  0156E0  D009               	goto	l7699
 11003                           
 11004                           ; BSR set to: 0
 11005  0156E2  0100               	movlb	0	; () banked
 11006  0156E4  5174               	movf	___awmod@divisor& (0+255),w,b
 11007  0156E6  0100               	movlb	0	; () banked
 11008  0156E8  5F72               	subwf	___awmod@dividend& (0+255),f,b
 11009  0156EA  0100               	movlb	0	; () banked
 11010  0156EC  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
 11011  0156EE  0100               	movlb	0	; () banked
 11012  0156F0  5B73               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11013  0156F2  D000               	goto	l7699
 11014  0156F4                     l7699:
 11015                           
 11016                           ; BSR set to: 0
 11017  0156F4  0100               	movlb	0	; () banked
 11018  0156F6  90D8               	bcf	status,0,c
 11019  0156F8  3375               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11020  0156FA  3374               	rrcf	___awmod@divisor& (0+255),f,b
 11021                           
 11022                           ; BSR set to: 0
 11023  0156FC  0100               	movlb	0	; () banked
 11024  0156FE  2F76               	decfsz	___awmod@counter& (0+255),f,b
 11025  015700  D7E6               	goto	l7695
 11026                           
 11027                           ; BSR set to: 0
 11028  015702  D000               	goto	l7703
 11029  015704                     l7703:
 11030                           
 11031                           ; BSR set to: 0
 11032  015704  0100               	movlb	0	; () banked
 11033  015706  5177               	movf	___awmod@sign& (0+255),w,b
 11034  015708  0100               	movlb	0	; () banked
 11035  01570A  B4D8               	btfsc	status,2,c
 11036  01570C  D006               	goto	l7707
 11037                           
 11038                           ; BSR set to: 0
 11039  01570E  0100               	movlb	0	; () banked
 11040  015710  6D72               	negf	___awmod@dividend& (0+255),b
 11041  015712  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
 11042  015714  B0D8               	btfsc	status,0,c
 11043  015716  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
 11044  015718  D000               	goto	l7707
 11045  01571A                     l7707:
 11046                           
 11047                           ; BSR set to: 0
 11048  01571A  C072  F072         	movff	___awmod@dividend,?___awmod
 11049  01571E  C073  F073         	movff	___awmod@dividend+1,?___awmod+1
 11050  015722  0012               	return	
 11051                           
 11052                           ; BSR set to: 0
 11053                           
 11054                           ; BSR set to: 0
 11055  015724  0012               	return		;funcret
 11056  015726                     __end_of___awmod:
 11057                           	opt stack 0
 11058                           tblptru	equ	0xFF8
 11059                           tblptrh	equ	0xFF7
 11060                           tblptrl	equ	0xFF6
 11061                           tablat	equ	0xFF5
 11062                           prodh	equ	0xFF4
 11063                           prodl	equ	0xFF3
 11064                           intcon	equ	0xFF2
 11065                           postinc0	equ	0xFEE
 11066                           wreg	equ	0xFE8
 11067                           indf2	equ	0xFDF
 11068                           postinc2	equ	0xFDE
 11069                           fsr2h	equ	0xFDA
 11070                           fsr2l	equ	0xFD9
 11071                           status	equ	0xFD8
 11072                           
 11073 ;; *************** function ___awdiv *****************
 11074 ;; Defined at:
 11075 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 11076 ;; Parameters:    Size  Location     Type
 11077 ;;  dividend        2   24[BANK0 ] int 
 11078 ;;  divisor         2   26[BANK0 ] int 
 11079 ;; Auto vars:     Size  Location     Type
 11080 ;;  quotient        2   30[BANK0 ] int 
 11081 ;;  sign            1   29[BANK0 ] unsigned char 
 11082 ;;  counter         1   28[BANK0 ] unsigned char 
 11083 ;; Return value:  Size  Location     Type
 11084 ;;                  2   24[BANK0 ] int 
 11085 ;; Registers used:
 11086 ;;		wreg, status,2, status,0
 11087 ;; Tracked objects:
 11088 ;;		On entry : 0/0
 11089 ;;		On exit  : 0/0
 11090 ;;		Unchanged: 0/0
 11091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11092 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11093 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11095 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11096 ;;Total ram usage:        8 bytes
 11097 ;; Hardware stack levels used:    1
 11098 ;; Hardware stack levels required when called:    3
 11099 ;; This function calls:
 11100 ;;		Nothing
 11101 ;; This function is called by:
 11102 ;;		_main
 11103 ;;		_fround
 11104 ;;		_scale
 11105 ;;		_sprintf
 11106 ;; This function uses a non-reentrant model
 11107 ;;
 11108                           
 11109                           	psect	text18
 11110  015358                     __ptext18:
 11111                           	opt stack 0
 11112  015358                     ___awdiv:
 11113                           	opt stack 27
 11114                           
 11115                           ; BSR set to: 0
 11116                           ;incstack = 0
 11117  015358  0E00               	movlw	0
 11118  01535A  0100               	movlb	0	; () banked
 11119  01535C  6F7D               	movwf	___awdiv@sign& (0+255),b
 11120                           
 11121                           ; BSR set to: 0
 11122  01535E  0100               	movlb	0	; () banked
 11123  015360  AF7B               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11124  015362  D009               	goto	l7639
 11125                           
 11126                           ; BSR set to: 0
 11127  015364  0100               	movlb	0	; () banked
 11128  015366  6D7A               	negf	___awdiv@divisor& (0+255),b
 11129  015368  1F7B               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11130  01536A  B0D8               	btfsc	status,0,c
 11131  01536C  2B7B               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11132                           
 11133                           ; BSR set to: 0
 11134  01536E  0E01               	movlw	1
 11135  015370  0100               	movlb	0	; () banked
 11136  015372  6F7D               	movwf	___awdiv@sign& (0+255),b
 11137  015374  D000               	goto	l7639
 11138  015376                     l7639:
 11139                           
 11140                           ; BSR set to: 0
 11141  015376  0100               	movlb	0	; () banked
 11142  015378  AF79               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11143  01537A  D009               	goto	l7645
 11144                           
 11145                           ; BSR set to: 0
 11146  01537C  0100               	movlb	0	; () banked
 11147  01537E  6D78               	negf	___awdiv@dividend& (0+255),b
 11148  015380  1F79               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11149  015382  B0D8               	btfsc	status,0,c
 11150  015384  2B79               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11151                           
 11152                           ; BSR set to: 0
 11153  015386  0E01               	movlw	1
 11154  015388  0100               	movlb	0	; () banked
 11155  01538A  1B7D               	xorwf	___awdiv@sign& (0+255),f,b
 11156  01538C  D000               	goto	l7645
 11157  01538E                     l7645:
 11158                           
 11159                           ; BSR set to: 0
 11160  01538E  0E00               	movlw	0
 11161  015390  0100               	movlb	0	; () banked
 11162  015392  6F7F               	movwf	(___awdiv@quotient+1)& (0+255),b
 11163  015394  0E00               	movlw	0
 11164  015396  6F7E               	movwf	___awdiv@quotient& (0+255),b
 11165                           
 11166                           ; BSR set to: 0
 11167  015398  0100               	movlb	0	; () banked
 11168  01539A  517A               	movf	___awdiv@divisor& (0+255),w,b
 11169  01539C  0100               	movlb	0	; () banked
 11170  01539E  117B               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11171  0153A0  B4D8               	btfsc	status,2,c
 11172  0153A2  D031               	goto	l7667
 11173                           
 11174                           ; BSR set to: 0
 11175  0153A4  0E01               	movlw	1
 11176  0153A6  0100               	movlb	0	; () banked
 11177  0153A8  6F7C               	movwf	___awdiv@counter& (0+255),b
 11178  0153AA  D007               	goto	l7653
 11179  0153AC                     l7651:
 11180                           
 11181                           ; BSR set to: 0
 11182  0153AC  0100               	movlb	0	; () banked
 11183  0153AE  90D8               	bcf	status,0,c
 11184  0153B0  377A               	rlcf	___awdiv@divisor& (0+255),f,b
 11185  0153B2  377B               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11186  0153B4  0100               	movlb	0	; () banked
 11187  0153B6  2B7C               	incf	___awdiv@counter& (0+255),f,b
 11188  0153B8  D000               	goto	l7653
 11189  0153BA                     l7653:
 11190                           
 11191                           ; BSR set to: 0
 11192  0153BA  0100               	movlb	0	; () banked
 11193  0153BC  BF7B               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 11194  0153BE  D002               	goto	l7655
 11195  0153C0  D7F5               	goto	l7651
 11196                           
 11197                           ; BSR set to: 0
 11198  0153C2  D000               	goto	l7655
 11199  0153C4                     l7655:
 11200                           
 11201                           ; BSR set to: 0
 11202  0153C4  0100               	movlb	0	; () banked
 11203  0153C6  90D8               	bcf	status,0,c
 11204  0153C8  377E               	rlcf	___awdiv@quotient& (0+255),f,b
 11205  0153CA  377F               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 11206                           
 11207                           ; BSR set to: 0
 11208  0153CC  0100               	movlb	0	; () banked
 11209  0153CE  517A               	movf	___awdiv@divisor& (0+255),w,b
 11210  0153D0  0100               	movlb	0	; () banked
 11211  0153D2  5D78               	subwf	___awdiv@dividend& (0+255),w,b
 11212  0153D4  0100               	movlb	0	; () banked
 11213  0153D6  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11214  0153D8  0100               	movlb	0	; () banked
 11215  0153DA  5979               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11216  0153DC  A0D8               	btfss	status,0,c
 11217  0153DE  D00B               	goto	l7663
 11218                           
 11219                           ; BSR set to: 0
 11220  0153E0  0100               	movlb	0	; () banked
 11221  0153E2  517A               	movf	___awdiv@divisor& (0+255),w,b
 11222  0153E4  0100               	movlb	0	; () banked
 11223  0153E6  5F78               	subwf	___awdiv@dividend& (0+255),f,b
 11224  0153E8  0100               	movlb	0	; () banked
 11225  0153EA  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11226  0153EC  0100               	movlb	0	; () banked
 11227  0153EE  5B79               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11228                           
 11229                           ; BSR set to: 0
 11230  0153F0  0100               	movlb	0	; () banked
 11231  0153F2  817E               	bsf	___awdiv@quotient& (0+255),0,b
 11232  0153F4  D000               	goto	l7663
 11233  0153F6                     l7663:
 11234                           
 11235                           ; BSR set to: 0
 11236  0153F6  0100               	movlb	0	; () banked
 11237  0153F8  90D8               	bcf	status,0,c
 11238  0153FA  337B               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11239  0153FC  337A               	rrcf	___awdiv@divisor& (0+255),f,b
 11240                           
 11241                           ; BSR set to: 0
 11242  0153FE  0100               	movlb	0	; () banked
 11243  015400  2F7C               	decfsz	___awdiv@counter& (0+255),f,b
 11244  015402  D7E0               	goto	l7655
 11245                           
 11246                           ; BSR set to: 0
 11247  015404  D000               	goto	l7667
 11248  015406                     l7667:
 11249                           
 11250                           ; BSR set to: 0
 11251  015406  0100               	movlb	0	; () banked
 11252  015408  517D               	movf	___awdiv@sign& (0+255),w,b
 11253  01540A  0100               	movlb	0	; () banked
 11254  01540C  B4D8               	btfsc	status,2,c
 11255  01540E  D006               	goto	l7671
 11256                           
 11257                           ; BSR set to: 0
 11258  015410  0100               	movlb	0	; () banked
 11259  015412  6D7E               	negf	___awdiv@quotient& (0+255),b
 11260  015414  1F7F               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11261  015416  B0D8               	btfsc	status,0,c
 11262  015418  2B7F               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11263  01541A  D000               	goto	l7671
 11264  01541C                     l7671:
 11265                           
 11266                           ; BSR set to: 0
 11267  01541C  C07E  F078         	movff	___awdiv@quotient,?___awdiv
 11268  015420  C07F  F079         	movff	___awdiv@quotient+1,?___awdiv+1
 11269  015424  0012               	return	
 11270                           
 11271                           ; BSR set to: 0
 11272                           
 11273                           ; BSR set to: 0
 11274  015426  0012               	return		;funcret
 11275  015428                     __end_of___awdiv:
 11276                           	opt stack 0
 11277                           tblptru	equ	0xFF8
 11278                           tblptrh	equ	0xFF7
 11279                           tblptrl	equ	0xFF6
 11280                           tablat	equ	0xFF5
 11281                           prodh	equ	0xFF4
 11282                           prodl	equ	0xFF3
 11283                           intcon	equ	0xFF2
 11284                           postinc0	equ	0xFEE
 11285                           wreg	equ	0xFE8
 11286                           indf2	equ	0xFDF
 11287                           postinc2	equ	0xFDE
 11288                           fsr2h	equ	0xFDA
 11289                           fsr2l	equ	0xFD9
 11290                           status	equ	0xFD8
 11291                           
 11292 ;; *************** function __tdiv_to_l_ *****************
 11293 ;; Defined at:
 11294 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
 11295 ;; Parameters:    Size  Location     Type
 11296 ;;  f1              4   18[BANK0 ] float 
 11297 ;;  f2              4   22[BANK0 ] float 
 11298 ;; Auto vars:     Size  Location     Type
 11299 ;;  quot            4   29[BANK0 ] unsigned long 
 11300 ;;  exp1            1   34[BANK0 ] unsigned char 
 11301 ;;  cntr            1   33[BANK0 ] unsigned char 
 11302 ;; Return value:  Size  Location     Type
 11303 ;;                  4   18[BANK0 ] unsigned long 
 11304 ;; Registers used:
 11305 ;;		wreg, status,2, status,0
 11306 ;; Tracked objects:
 11307 ;;		On entry : 0/0
 11308 ;;		On exit  : 0/0
 11309 ;;		Unchanged: 0/0
 11310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11311 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11312 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11313 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11314 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11315 ;;Total ram usage:       17 bytes
 11316 ;; Hardware stack levels used:    1
 11317 ;; Hardware stack levels required when called:    3
 11318 ;; This function calls:
 11319 ;;		Nothing
 11320 ;; This function is called by:
 11321 ;;		_sprintf
 11322 ;; This function uses a non-reentrant model
 11323 ;;
 11324                           
 11325                           	psect	text19
 11326  014796                     __ptext19:
 11327                           	opt stack 0
 11328  014796                     __tdiv_to_l_:
 11329                           	opt stack 25
 11330                           
 11331                           ; BSR set to: 0
 11332                           ;incstack = 0
 11333  014796  C074  F07A         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 11334  01479A  0100               	movlb	0	; () banked
 11335  01479C  6B7B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 11336  01479E  6B7C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 11337  0147A0  0100               	movlb	0	; () banked
 11338  0147A2  3573               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 11339  0147A4  0100               	movlb	0	; () banked
 11340  0147A6  377A               	rlcf	??__tdiv_to_l_& (0+255),f,b
 11341  0147A8  E301               	bnc	u9881
 11342  0147AA  817B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 11343  0147AC                     u9881:
 11344  0147AC  0100               	movlb	0	; () banked
 11345  0147AE  517A               	movf	??__tdiv_to_l_& (0+255),w,b
 11346  0147B0  0100               	movlb	0	; () banked
 11347  0147B2  6F82               	movwf	__tdiv_to_l_@exp1& (0+255),b
 11348  0147B4  0100               	movlb	0	; () banked
 11349  0147B6  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11350  0147B8  A4D8               	btfss	status,2,c
 11351  0147BA  D00A               	goto	l7821
 11352                           
 11353                           ; BSR set to: 0
 11354  0147BC  0E00               	movlw	0
 11355  0147BE  0100               	movlb	0	; () banked
 11356  0147C0  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 11357  0147C2  0E00               	movlw	0
 11358  0147C4  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11359  0147C6  0E00               	movlw	0
 11360  0147C8  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11361  0147CA  0E00               	movlw	0
 11362  0147CC  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11363                           
 11364                           ; BSR set to: 0
 11365  0147CE  0012               	return	
 11366  0147D0                     l7821:
 11367                           
 11368                           ; BSR set to: 0
 11369  0147D0  C078  F07A         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 11370  0147D4  0100               	movlb	0	; () banked
 11371  0147D6  6B7B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 11372  0147D8  6B7C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 11373  0147DA  0100               	movlb	0	; () banked
 11374  0147DC  3577               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11375  0147DE  0100               	movlb	0	; () banked
 11376  0147E0  377A               	rlcf	??__tdiv_to_l_& (0+255),f,b
 11377  0147E2  E301               	bnc	u9901
 11378  0147E4  817B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 11379  0147E6                     u9901:
 11380  0147E6  0100               	movlb	0	; () banked
 11381  0147E8  517A               	movf	??__tdiv_to_l_& (0+255),w,b
 11382  0147EA  0100               	movlb	0	; () banked
 11383  0147EC  6F81               	movwf	__tdiv_to_l_@cntr& (0+255),b
 11384  0147EE  0100               	movlb	0	; () banked
 11385  0147F0  5181               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 11386  0147F2  A4D8               	btfss	status,2,c
 11387  0147F4  D00A               	goto	l7827
 11388                           
 11389                           ; BSR set to: 0
 11390  0147F6  0E00               	movlw	0
 11391  0147F8  0100               	movlb	0	; () banked
 11392  0147FA  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 11393  0147FC  0E00               	movlw	0
 11394  0147FE  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11395  014800  0E00               	movlw	0
 11396  014802  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11397  014804  0E00               	movlw	0
 11398  014806  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11399                           
 11400                           ; BSR set to: 0
 11401  014808  0012               	return	
 11402  01480A                     l7827:
 11403                           
 11404                           ; BSR set to: 0
 11405  01480A  0100               	movlb	0	; () banked
 11406  01480C  8F73               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 11407                           
 11408                           ; BSR set to: 0
 11409  01480E  0EFF               	movlw	255
 11410  014810  0100               	movlb	0	; () banked
 11411  014812  1772               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 11412  014814  0EFF               	movlw	255
 11413  014816  0100               	movlb	0	; () banked
 11414  014818  1773               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11415  01481A  0E00               	movlw	0
 11416  01481C  0100               	movlb	0	; () banked
 11417  01481E  1774               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11418  014820  0100               	movlb	0	; () banked
 11419  014822  8F77               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 11420                           
 11421                           ; BSR set to: 0
 11422  014824  0EFF               	movlw	255
 11423  014826  0100               	movlb	0	; () banked
 11424  014828  1776               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 11425  01482A  0EFF               	movlw	255
 11426  01482C  0100               	movlb	0	; () banked
 11427  01482E  1777               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 11428  014830  0E00               	movlw	0
 11429  014832  0100               	movlb	0	; () banked
 11430  014834  1778               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 11431                           
 11432                           ; BSR set to: 0
 11433  014836  0E00               	movlw	0
 11434  014838  0100               	movlb	0	; () banked
 11435  01483A  6F7D               	movwf	__tdiv_to_l_@quot& (0+255),b
 11436  01483C  0E00               	movlw	0
 11437  01483E  6F7E               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 11438  014840  0E00               	movlw	0
 11439  014842  6F7F               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 11440  014844  0E00               	movlw	0
 11441  014846  6F80               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 11442                           
 11443                           ; BSR set to: 0
 11444  014848  0E7F               	movlw	127
 11445  01484A  0100               	movlb	0	; () banked
 11446  01484C  5F82               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 11447                           
 11448                           ; BSR set to: 0
 11449  01484E  0100               	movlb	0	; () banked
 11450  014850  5181               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 11451  014852  0F98               	addlw	152
 11452  014854  0100               	movlb	0	; () banked
 11453  014856  5F82               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 11454                           
 11455                           ; BSR set to: 0
 11456  014858  0E18               	movlw	24
 11457  01485A  0100               	movlb	0	; () banked
 11458  01485C  6F81               	movwf	__tdiv_to_l_@cntr& (0+255),b
 11459  01485E                     l1490:
 11460                           
 11461                           ; BSR set to: 0
 11462  01485E  0100               	movlb	0	; () banked
 11463  014860  90D8               	bcf	status,0,c
 11464  014862  377D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11465  014864  377E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11466  014866  377F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11467  014868  3780               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11468                           
 11469                           ; BSR set to: 0
 11470  01486A  0100               	movlb	0	; () banked
 11471  01486C  5176               	movf	__tdiv_to_l_@f2& (0+255),w,b
 11472  01486E  0100               	movlb	0	; () banked
 11473  014870  5D72               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 11474  014872  0100               	movlb	0	; () banked
 11475  014874  5177               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11476  014876  0100               	movlb	0	; () banked
 11477  014878  5973               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 11478  01487A  0100               	movlb	0	; () banked
 11479  01487C  5178               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 11480  01487E  0100               	movlb	0	; () banked
 11481  014880  5974               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 11482  014882  A0D8               	btfss	status,0,c
 11483  014884  D00E               	goto	l1491
 11484                           
 11485                           ; BSR set to: 0
 11486  014886  0100               	movlb	0	; () banked
 11487  014888  5176               	movf	__tdiv_to_l_@f2& (0+255),w,b
 11488  01488A  0100               	movlb	0	; () banked
 11489  01488C  5F72               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 11490  01488E  0100               	movlb	0	; () banked
 11491  014890  5177               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11492  014892  0100               	movlb	0	; () banked
 11493  014894  5B73               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11494  014896  0100               	movlb	0	; () banked
 11495  014898  5178               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 11496  01489A  0100               	movlb	0	; () banked
 11497  01489C  5B74               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11498                           
 11499                           ; BSR set to: 0
 11500  01489E  0100               	movlb	0	; () banked
 11501  0148A0  817D               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 11502  0148A2                     l1491:
 11503                           
 11504                           ; BSR set to: 0
 11505  0148A2  0100               	movlb	0	; () banked
 11506  0148A4  90D8               	bcf	status,0,c
 11507  0148A6  3772               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 11508  0148A8  3773               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11509  0148AA  3774               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11510                           
 11511                           ; BSR set to: 0
 11512  0148AC  0100               	movlb	0	; () banked
 11513  0148AE  2F81               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 11514  0148B0  D7D6               	goto	l1490
 11515  0148B2  D000               	goto	l7849
 11516  0148B4                     l7849:
 11517                           
 11518                           ; BSR set to: 0
 11519  0148B4  0100               	movlb	0	; () banked
 11520  0148B6  AF82               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 11521  0148B8  D01B               	goto	l7861
 11522                           
 11523                           ; BSR set to: 0
 11524  0148BA  0100               	movlb	0	; () banked
 11525  0148BC  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11526  0148BE  0A80               	xorlw	128
 11527  0148C0  0F97               	addlw	151
 11528  0148C2  B0D8               	btfsc	status,0,c
 11529  0148C4  D00B               	goto	l7857
 11530                           
 11531                           ; BSR set to: 0
 11532  0148C6  0E00               	movlw	0
 11533  0148C8  0100               	movlb	0	; () banked
 11534  0148CA  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 11535  0148CC  0E00               	movlw	0
 11536  0148CE  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11537  0148D0  0E00               	movlw	0
 11538  0148D2  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11539  0148D4  0E00               	movlw	0
 11540  0148D6  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11541                           
 11542                           ; BSR set to: 0
 11543  0148D8  0012               	return	
 11544                           
 11545                           ; BSR set to: 0
 11546  0148DA  D000               	goto	l7857
 11547  0148DC                     l7857:
 11548                           
 11549                           ; BSR set to: 0
 11550  0148DC  0100               	movlb	0	; () banked
 11551  0148DE  90D8               	bcf	status,0,c
 11552  0148E0  3380               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11553  0148E2  337F               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11554  0148E4  337E               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11555  0148E6  337D               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 11556                           
 11557                           ; BSR set to: 0
 11558  0148E8  0100               	movlb	0	; () banked
 11559  0148EA  3F82               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 11560  0148EC  D7F7               	goto	l7857
 11561                           
 11562                           ; BSR set to: 0
 11563  0148EE  D01D               	goto	l1497
 11564  0148F0                     l7861:
 11565                           
 11566                           ; BSR set to: 0
 11567  0148F0  0E17               	movlw	23
 11568  0148F2  0100               	movlb	0	; () banked
 11569  0148F4  6582               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 11570  0148F6  D014               	goto	l7869
 11571                           
 11572                           ; BSR set to: 0
 11573  0148F8  0E00               	movlw	0
 11574  0148FA  0100               	movlb	0	; () banked
 11575  0148FC  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 11576  0148FE  0E00               	movlw	0
 11577  014900  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11578  014902  0E00               	movlw	0
 11579  014904  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11580  014906  0E00               	movlw	0
 11581  014908  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11582                           
 11583                           ; BSR set to: 0
 11584  01490A  0012               	return	
 11585                           
 11586                           ; BSR set to: 0
 11587  01490C  D009               	goto	l7869
 11588  01490E                     l7867:
 11589                           
 11590                           ; BSR set to: 0
 11591  01490E  0100               	movlb	0	; () banked
 11592  014910  90D8               	bcf	status,0,c
 11593  014912  377D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11594  014914  377E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11595  014916  377F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11596  014918  3780               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11597  01491A  0100               	movlb	0	; () banked
 11598  01491C  0782               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 11599  01491E  D000               	goto	l7869
 11600  014920                     l7869:
 11601                           
 11602                           ; BSR set to: 0
 11603  014920  0100               	movlb	0	; () banked
 11604  014922  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11605  014924  0100               	movlb	0	; () banked
 11606  014926  A4D8               	btfss	status,2,c
 11607  014928  D7F2               	goto	l7867
 11608  01492A                     l1497:
 11609                           
 11610                           ; BSR set to: 0
 11611  01492A  C07D  F072         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 11612  01492E  C07E  F073         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 11613  014932  C07F  F074         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 11614  014936  C080  F075         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 11615                           
 11616                           ; BSR set to: 0
 11617  01493A  0012               	return		;funcret
 11618  01493C                     __end_of__tdiv_to_l_:
 11619                           	opt stack 0
 11620                           tblptru	equ	0xFF8
 11621                           tblptrh	equ	0xFF7
 11622                           tblptrl	equ	0xFF6
 11623                           tablat	equ	0xFF5
 11624                           prodh	equ	0xFF4
 11625                           prodl	equ	0xFF3
 11626                           intcon	equ	0xFF2
 11627                           postinc0	equ	0xFEE
 11628                           wreg	equ	0xFE8
 11629                           indf2	equ	0xFDF
 11630                           postinc2	equ	0xFDE
 11631                           fsr2h	equ	0xFDA
 11632                           fsr2l	equ	0xFD9
 11633                           status	equ	0xFD8
 11634                           
 11635 ;; *************** function __div_to_l_ *****************
 11636 ;; Defined at:
 11637 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
 11638 ;; Parameters:    Size  Location     Type
 11639 ;;  f1              4   18[BANK0 ] unsigned long 
 11640 ;;  f2              4   22[BANK0 ] unsigned long 
 11641 ;; Auto vars:     Size  Location     Type
 11642 ;;  quot            4   26[BANK0 ] unsigned long 
 11643 ;;  exp1            1   31[BANK0 ] unsigned char 
 11644 ;;  cntr            1   30[BANK0 ] unsigned char 
 11645 ;; Return value:  Size  Location     Type
 11646 ;;                  4   18[BANK0 ] unsigned long 
 11647 ;; Registers used:
 11648 ;;		wreg, status,2, status,0
 11649 ;; Tracked objects:
 11650 ;;		On entry : 0/0
 11651 ;;		On exit  : 0/0
 11652 ;;		Unchanged: 0/0
 11653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11654 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11655 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11657 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11658 ;;Total ram usage:       14 bytes
 11659 ;; Hardware stack levels used:    1
 11660 ;; Hardware stack levels required when called:    3
 11661 ;; This function calls:
 11662 ;;		Nothing
 11663 ;; This function is called by:
 11664 ;;		_sprintf
 11665 ;; This function uses a non-reentrant model
 11666 ;;
 11667                           
 11668                           	psect	text20
 11669  01493C                     __ptext20:
 11670                           	opt stack 0
 11671  01493C                     __div_to_l_:
 11672                           	opt stack 25
 11673                           
 11674                           ; BSR set to: 0
 11675                           ;incstack = 0
 11676  01493C  0100               	movlb	0	; () banked
 11677  01493E  3574               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 11678  014940  3575               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 11679  014942  0100               	movlb	0	; () banked
 11680  014944  6F7F               	movwf	__div_to_l_@exp1& (0+255),b
 11681  014946  0100               	movlb	0	; () banked
 11682  014948  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 11683  01494A  A4D8               	btfss	status,2,c
 11684  01494C  D00A               	goto	l7877
 11685                           
 11686                           ; BSR set to: 0
 11687  01494E  0E00               	movlw	0
 11688  014950  0100               	movlb	0	; () banked
 11689  014952  6F72               	movwf	?__div_to_l_& (0+255),b
 11690  014954  0E00               	movlw	0
 11691  014956  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 11692  014958  0E00               	movlw	0
 11693  01495A  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 11694  01495C  0E00               	movlw	0
 11695  01495E  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 11696                           
 11697                           ; BSR set to: 0
 11698  014960  0012               	return	
 11699  014962                     l7877:
 11700                           
 11701                           ; BSR set to: 0
 11702  014962  0100               	movlb	0	; () banked
 11703  014964  3578               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 11704  014966  3579               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 11705  014968  0100               	movlb	0	; () banked
 11706  01496A  6F7E               	movwf	__div_to_l_@cntr& (0+255),b
 11707  01496C  0100               	movlb	0	; () banked
 11708  01496E  517E               	movf	__div_to_l_@cntr& (0+255),w,b
 11709  014970  A4D8               	btfss	status,2,c
 11710  014972  D00A               	goto	l7883
 11711                           
 11712                           ; BSR set to: 0
 11713  014974  0E00               	movlw	0
 11714  014976  0100               	movlb	0	; () banked
 11715  014978  6F72               	movwf	?__div_to_l_& (0+255),b
 11716  01497A  0E00               	movlw	0
 11717  01497C  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 11718  01497E  0E00               	movlw	0
 11719  014980  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 11720  014982  0E00               	movlw	0
 11721  014984  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 11722                           
 11723                           ; BSR set to: 0
 11724  014986  0012               	return	
 11725  014988                     l7883:
 11726                           
 11727                           ; BSR set to: 0
 11728  014988  0100               	movlb	0	; () banked
 11729  01498A  8F74               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 11730                           
 11731                           ; BSR set to: 0
 11732  01498C  0EFF               	movlw	255
 11733  01498E  0100               	movlb	0	; () banked
 11734  014990  1772               	andwf	__div_to_l_@f1& (0+255),f,b
 11735  014992  0EFF               	movlw	255
 11736  014994  1773               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 11737  014996  0EFF               	movlw	255
 11738  014998  1774               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 11739  01499A  0E00               	movlw	0
 11740  01499C  1775               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 11741                           
 11742                           ; BSR set to: 0
 11743  01499E  0100               	movlb	0	; () banked
 11744  0149A0  8F78               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 11745  0149A2  0EFF               	movlw	255
 11746  0149A4  0100               	movlb	0	; () banked
 11747  0149A6  1776               	andwf	__div_to_l_@f2& (0+255),f,b
 11748  0149A8  0EFF               	movlw	255
 11749  0149AA  1777               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 11750  0149AC  0EFF               	movlw	255
 11751  0149AE  1778               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 11752  0149B0  0E00               	movlw	0
 11753  0149B2  1779               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 11754                           
 11755                           ; BSR set to: 0
 11756  0149B4  0E00               	movlw	0
 11757  0149B6  0100               	movlb	0	; () banked
 11758  0149B8  6F7A               	movwf	__div_to_l_@quot& (0+255),b
 11759  0149BA  0E00               	movlw	0
 11760  0149BC  6F7B               	movwf	(__div_to_l_@quot+1)& (0+255),b
 11761  0149BE  0E00               	movlw	0
 11762  0149C0  6F7C               	movwf	(__div_to_l_@quot+2)& (0+255),b
 11763  0149C2  0E00               	movlw	0
 11764  0149C4  6F7D               	movwf	(__div_to_l_@quot+3)& (0+255),b
 11765                           
 11766                           ; BSR set to: 0
 11767  0149C6  0E7F               	movlw	127
 11768  0149C8  0100               	movlb	0	; () banked
 11769  0149CA  5F7F               	subwf	__div_to_l_@exp1& (0+255),f,b
 11770                           
 11771                           ; BSR set to: 0
 11772  0149CC  0100               	movlb	0	; () banked
 11773  0149CE  517E               	movf	__div_to_l_@cntr& (0+255),w,b
 11774  0149D0  0FA0               	addlw	160
 11775  0149D2  0100               	movlb	0	; () banked
 11776  0149D4  5F7F               	subwf	__div_to_l_@exp1& (0+255),f,b
 11777                           
 11778                           ; BSR set to: 0
 11779  0149D6  0E20               	movlw	32
 11780  0149D8  0100               	movlb	0	; () banked
 11781  0149DA  6F7E               	movwf	__div_to_l_@cntr& (0+255),b
 11782  0149DC  D000               	goto	l7897
 11783  0149DE                     l7897:
 11784                           
 11785                           ; BSR set to: 0
 11786  0149DE  0100               	movlb	0	; () banked
 11787  0149E0  90D8               	bcf	status,0,c
 11788  0149E2  377A               	rlcf	__div_to_l_@quot& (0+255),f,b
 11789  0149E4  377B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11790  0149E6  377C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11791  0149E8  377D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11792                           
 11793                           ; BSR set to: 0
 11794  0149EA  0100               	movlb	0	; () banked
 11795  0149EC  5176               	movf	__div_to_l_@f2& (0+255),w,b
 11796  0149EE  0100               	movlb	0	; () banked
 11797  0149F0  5D72               	subwf	__div_to_l_@f1& (0+255),w,b
 11798  0149F2  0100               	movlb	0	; () banked
 11799  0149F4  5177               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11800  0149F6  0100               	movlb	0	; () banked
 11801  0149F8  5973               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 11802  0149FA  0100               	movlb	0	; () banked
 11803  0149FC  5178               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11804  0149FE  0100               	movlb	0	; () banked
 11805  014A00  5974               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 11806  014A02  0100               	movlb	0	; () banked
 11807  014A04  5179               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11808  014A06  0100               	movlb	0	; () banked
 11809  014A08  5975               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 11810  014A0A  A0D8               	btfss	status,0,c
 11811  014A0C  D013               	goto	l7905
 11812                           
 11813                           ; BSR set to: 0
 11814  014A0E  0100               	movlb	0	; () banked
 11815  014A10  5176               	movf	__div_to_l_@f2& (0+255),w,b
 11816  014A12  0100               	movlb	0	; () banked
 11817  014A14  5F72               	subwf	__div_to_l_@f1& (0+255),f,b
 11818  014A16  0100               	movlb	0	; () banked
 11819  014A18  5177               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11820  014A1A  0100               	movlb	0	; () banked
 11821  014A1C  5B73               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 11822  014A1E  0100               	movlb	0	; () banked
 11823  014A20  5178               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11824  014A22  0100               	movlb	0	; () banked
 11825  014A24  5B74               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 11826  014A26  0100               	movlb	0	; () banked
 11827  014A28  5179               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11828  014A2A  0100               	movlb	0	; () banked
 11829  014A2C  5B75               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 11830                           
 11831                           ; BSR set to: 0
 11832  014A2E  0100               	movlb	0	; () banked
 11833  014A30  817A               	bsf	__div_to_l_@quot& (0+255),0,b
 11834  014A32  D000               	goto	l7905
 11835  014A34                     l7905:
 11836                           
 11837                           ; BSR set to: 0
 11838  014A34  0100               	movlb	0	; () banked
 11839  014A36  90D8               	bcf	status,0,c
 11840  014A38  3772               	rlcf	__div_to_l_@f1& (0+255),f,b
 11841  014A3A  3773               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 11842  014A3C  3774               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 11843  014A3E  3775               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 11844                           
 11845                           ; BSR set to: 0
 11846  014A40  0100               	movlb	0	; () banked
 11847  014A42  2F7E               	decfsz	__div_to_l_@cntr& (0+255),f,b
 11848  014A44  D7CC               	goto	l7897
 11849  014A46  D000               	goto	l7909
 11850  014A48                     l7909:
 11851                           
 11852                           ; BSR set to: 0
 11853  014A48  0100               	movlb	0	; () banked
 11854  014A4A  AF7F               	btfss	__div_to_l_@exp1& (0+255),7,b
 11855  014A4C  D01B               	goto	l7921
 11856                           
 11857                           ; BSR set to: 0
 11858  014A4E  0100               	movlb	0	; () banked
 11859  014A50  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 11860  014A52  0A80               	xorlw	128
 11861  014A54  0F9F               	addlw	159
 11862  014A56  B0D8               	btfsc	status,0,c
 11863  014A58  D00B               	goto	l7917
 11864                           
 11865                           ; BSR set to: 0
 11866  014A5A  0E00               	movlw	0
 11867  014A5C  0100               	movlb	0	; () banked
 11868  014A5E  6F72               	movwf	?__div_to_l_& (0+255),b
 11869  014A60  0E00               	movlw	0
 11870  014A62  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 11871  014A64  0E00               	movlw	0
 11872  014A66  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 11873  014A68  0E00               	movlw	0
 11874  014A6A  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 11875                           
 11876                           ; BSR set to: 0
 11877  014A6C  0012               	return	
 11878                           
 11879                           ; BSR set to: 0
 11880  014A6E  D000               	goto	l7917
 11881  014A70                     l7917:
 11882                           
 11883                           ; BSR set to: 0
 11884  014A70  0100               	movlb	0	; () banked
 11885  014A72  90D8               	bcf	status,0,c
 11886  014A74  337D               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 11887  014A76  337C               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 11888  014A78  337B               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 11889  014A7A  337A               	rrcf	__div_to_l_@quot& (0+255),f,b
 11890                           
 11891                           ; BSR set to: 0
 11892  014A7C  0100               	movlb	0	; () banked
 11893  014A7E  3F7F               	incfsz	__div_to_l_@exp1& (0+255),f,b
 11894  014A80  D7F7               	goto	l7917
 11895                           
 11896                           ; BSR set to: 0
 11897  014A82  D01D               	goto	l1376
 11898  014A84                     l7921:
 11899                           
 11900                           ; BSR set to: 0
 11901  014A84  0E1F               	movlw	31
 11902  014A86  0100               	movlb	0	; () banked
 11903  014A88  657F               	cpfsgt	__div_to_l_@exp1& (0+255),b
 11904  014A8A  D014               	goto	l7929
 11905                           
 11906                           ; BSR set to: 0
 11907  014A8C  0E00               	movlw	0
 11908  014A8E  0100               	movlb	0	; () banked
 11909  014A90  6F72               	movwf	?__div_to_l_& (0+255),b
 11910  014A92  0E00               	movlw	0
 11911  014A94  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 11912  014A96  0E00               	movlw	0
 11913  014A98  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 11914  014A9A  0E00               	movlw	0
 11915  014A9C  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 11916                           
 11917                           ; BSR set to: 0
 11918  014A9E  0012               	return	
 11919                           
 11920                           ; BSR set to: 0
 11921  014AA0  D009               	goto	l7929
 11922  014AA2                     l7927:
 11923                           
 11924                           ; BSR set to: 0
 11925  014AA2  0100               	movlb	0	; () banked
 11926  014AA4  90D8               	bcf	status,0,c
 11927  014AA6  377A               	rlcf	__div_to_l_@quot& (0+255),f,b
 11928  014AA8  377B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11929  014AAA  377C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11930  014AAC  377D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11931  014AAE  0100               	movlb	0	; () banked
 11932  014AB0  077F               	decf	__div_to_l_@exp1& (0+255),f,b
 11933  014AB2  D000               	goto	l7929
 11934  014AB4                     l7929:
 11935                           
 11936                           ; BSR set to: 0
 11937  014AB4  0100               	movlb	0	; () banked
 11938  014AB6  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 11939  014AB8  0100               	movlb	0	; () banked
 11940  014ABA  A4D8               	btfss	status,2,c
 11941  014ABC  D7F2               	goto	l7927
 11942  014ABE                     l1376:
 11943                           
 11944                           ; BSR set to: 0
 11945  014ABE  C07A  F072         	movff	__div_to_l_@quot,?__div_to_l_
 11946  014AC2  C07B  F073         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11947  014AC6  C07C  F074         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11948  014ACA  C07D  F075         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11949                           
 11950                           ; BSR set to: 0
 11951  014ACE  0012               	return		;funcret
 11952  014AD0                     __end_of__div_to_l_:
 11953                           	opt stack 0
 11954                           tblptru	equ	0xFF8
 11955                           tblptrh	equ	0xFF7
 11956                           tblptrl	equ	0xFF6
 11957                           tablat	equ	0xFF5
 11958                           prodh	equ	0xFF4
 11959                           prodl	equ	0xFF3
 11960                           intcon	equ	0xFF2
 11961                           postinc0	equ	0xFEE
 11962                           wreg	equ	0xFE8
 11963                           indf2	equ	0xFDF
 11964                           postinc2	equ	0xFDE
 11965                           fsr2h	equ	0xFDA
 11966                           fsr2l	equ	0xFD9
 11967                           status	equ	0xFD8
 11968                           
 11969 ;; *************** function ___lltofl *****************
 11970 ;; Defined at:
 11971 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltofl.c"
 11972 ;; Parameters:    Size  Location     Type
 11973 ;;  c               4   28[BANK0 ] unsigned long 
 11974 ;; Auto vars:     Size  Location     Type
 11975 ;;		None
 11976 ;; Return value:  Size  Location     Type
 11977 ;;                  4   28[BANK0 ] unsigned long 
 11978 ;; Registers used:
 11979 ;;		wreg, status,2, status,0, cstack
 11980 ;; Tracked objects:
 11981 ;;		On entry : 0/0
 11982 ;;		On exit  : 0/0
 11983 ;;		Unchanged: 0/0
 11984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11985 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11988 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11989 ;;Total ram usage:        4 bytes
 11990 ;; Hardware stack levels used:    1
 11991 ;; Hardware stack levels required when called:    4
 11992 ;; This function calls:
 11993 ;;		___flpack
 11994 ;; This function is called by:
 11995 ;;		_sprintf
 11996 ;; This function uses a non-reentrant model
 11997 ;;
 11998                           
 11999                           	psect	text21
 12000  015F68                     __ptext21:
 12001                           	opt stack 0
 12002  015F68                     ___lltofl:
 12003                           	opt stack 24
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;incstack = 0
 12007  015F68  C07C  F072         	movff	___lltofl@c,___flpack@arg
 12008  015F6C  C07D  F073         	movff	___lltofl@c+1,___flpack@arg+1
 12009  015F70  C07E  F074         	movff	___lltofl@c+2,___flpack@arg+2
 12010  015F74  C07F  F075         	movff	___lltofl@c+3,___flpack@arg+3
 12011  015F78  0E96               	movlw	150
 12012  015F7A  0100               	movlb	0	; () banked
 12013  015F7C  6F76               	movwf	___flpack@exp& (0+255),b
 12014  015F7E  0E00               	movlw	0
 12015  015F80  0100               	movlb	0	; () banked
 12016  015F82  6F77               	movwf	___flpack@sign& (0+255),b
 12017  015F84  EC68  F0A5         	call	___flpack	;wreg free
 12018  015F88  C072  F07C         	movff	?___flpack,?___lltofl
 12019  015F8C  C073  F07D         	movff	?___flpack+1,?___lltofl+1
 12020  015F90  C074  F07E         	movff	?___flpack+2,?___lltofl+2
 12021  015F94  C075  F07F         	movff	?___flpack+3,?___lltofl+3
 12022  015F98  0012               	return	
 12023  015F9A  0012               	return		;funcret
 12024  015F9C                     __end_of___lltofl:
 12025                           	opt stack 0
 12026                           tblptru	equ	0xFF8
 12027                           tblptrh	equ	0xFF7
 12028                           tblptrl	equ	0xFF6
 12029                           tablat	equ	0xFF5
 12030                           prodh	equ	0xFF4
 12031                           prodl	equ	0xFF3
 12032                           intcon	equ	0xFF2
 12033                           postinc0	equ	0xFEE
 12034                           wreg	equ	0xFE8
 12035                           indf2	equ	0xFDF
 12036                           postinc2	equ	0xFDE
 12037                           fsr2h	equ	0xFDA
 12038                           fsr2l	equ	0xFD9
 12039                           status	equ	0xFD8
 12040                           
 12041 ;; *************** function ___llmod *****************
 12042 ;; Defined at:
 12043 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 12044 ;; Parameters:    Size  Location     Type
 12045 ;;  dividend        4   18[BANK0 ] unsigned long 
 12046 ;;  divisor         4   22[BANK0 ] unsigned long 
 12047 ;; Auto vars:     Size  Location     Type
 12048 ;;  counter         1   26[BANK0 ] unsigned char 
 12049 ;; Return value:  Size  Location     Type
 12050 ;;                  4   18[BANK0 ] unsigned long 
 12051 ;; Registers used:
 12052 ;;		wreg, status,2, status,0
 12053 ;; Tracked objects:
 12054 ;;		On entry : 0/0
 12055 ;;		On exit  : 0/0
 12056 ;;		Unchanged: 0/0
 12057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12058 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12059 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12061 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12062 ;;Total ram usage:        9 bytes
 12063 ;; Hardware stack levels used:    1
 12064 ;; Hardware stack levels required when called:    3
 12065 ;; This function calls:
 12066 ;;		Nothing
 12067 ;; This function is called by:
 12068 ;;		_sprintf
 12069 ;; This function uses a non-reentrant model
 12070 ;;
 12071                           
 12072                           	psect	text22
 12073  0157CA                     __ptext22:
 12074                           	opt stack 0
 12075  0157CA                     ___llmod:
 12076                           	opt stack 25
 12077                           
 12078                           ;incstack = 0
 12079  0157CA  0100               	movlb	0	; () banked
 12080  0157CC  5176               	movf	___llmod@divisor& (0+255),w,b
 12081  0157CE  0100               	movlb	0	; () banked
 12082  0157D0  1177               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 12083  0157D2  0100               	movlb	0	; () banked
 12084  0157D4  1178               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 12085  0157D6  0100               	movlb	0	; () banked
 12086  0157D8  1179               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 12087  0157DA  B4D8               	btfsc	status,2,c
 12088  0157DC  D03F               	goto	l1601
 12089                           
 12090                           ; BSR set to: 0
 12091  0157DE  0E01               	movlw	1
 12092  0157E0  0100               	movlb	0	; () banked
 12093  0157E2  6F7A               	movwf	___llmod@counter& (0+255),b
 12094  0157E4  D009               	goto	l8033
 12095  0157E6                     l8031:
 12096                           
 12097                           ; BSR set to: 0
 12098  0157E6  0100               	movlb	0	; () banked
 12099  0157E8  90D8               	bcf	status,0,c
 12100  0157EA  3776               	rlcf	___llmod@divisor& (0+255),f,b
 12101  0157EC  3777               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 12102  0157EE  3778               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 12103  0157F0  3779               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 12104  0157F2  0100               	movlb	0	; () banked
 12105  0157F4  2B7A               	incf	___llmod@counter& (0+255),f,b
 12106  0157F6  D000               	goto	l8033
 12107  0157F8                     l8033:
 12108                           
 12109                           ; BSR set to: 0
 12110  0157F8  0100               	movlb	0	; () banked
 12111  0157FA  BF79               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 12112  0157FC  D002               	goto	l8035
 12113  0157FE  D7F3               	goto	l8031
 12114                           
 12115                           ; BSR set to: 0
 12116  015800  D000               	goto	l8035
 12117  015802                     l8035:
 12118                           
 12119                           ; BSR set to: 0
 12120  015802  0100               	movlb	0	; () banked
 12121  015804  5176               	movf	___llmod@divisor& (0+255),w,b
 12122  015806  0100               	movlb	0	; () banked
 12123  015808  5D72               	subwf	___llmod@dividend& (0+255),w,b
 12124  01580A  0100               	movlb	0	; () banked
 12125  01580C  5177               	movf	(___llmod@divisor+1)& (0+255),w,b
 12126  01580E  0100               	movlb	0	; () banked
 12127  015810  5973               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 12128  015812  0100               	movlb	0	; () banked
 12129  015814  5178               	movf	(___llmod@divisor+2)& (0+255),w,b
 12130  015816  0100               	movlb	0	; () banked
 12131  015818  5974               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 12132  01581A  0100               	movlb	0	; () banked
 12133  01581C  5179               	movf	(___llmod@divisor+3)& (0+255),w,b
 12134  01581E  0100               	movlb	0	; () banked
 12135  015820  5975               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 12136  015822  A0D8               	btfss	status,0,c
 12137  015824  D011               	goto	l8039
 12138                           
 12139                           ; BSR set to: 0
 12140  015826  0100               	movlb	0	; () banked
 12141  015828  5176               	movf	___llmod@divisor& (0+255),w,b
 12142  01582A  0100               	movlb	0	; () banked
 12143  01582C  5F72               	subwf	___llmod@dividend& (0+255),f,b
 12144  01582E  0100               	movlb	0	; () banked
 12145  015830  5177               	movf	(___llmod@divisor+1)& (0+255),w,b
 12146  015832  0100               	movlb	0	; () banked
 12147  015834  5B73               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12148  015836  0100               	movlb	0	; () banked
 12149  015838  5178               	movf	(___llmod@divisor+2)& (0+255),w,b
 12150  01583A  0100               	movlb	0	; () banked
 12151  01583C  5B74               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12152  01583E  0100               	movlb	0	; () banked
 12153  015840  5179               	movf	(___llmod@divisor+3)& (0+255),w,b
 12154  015842  0100               	movlb	0	; () banked
 12155  015844  5B75               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12156  015846  D000               	goto	l8039
 12157  015848                     l8039:
 12158                           
 12159                           ; BSR set to: 0
 12160  015848  0100               	movlb	0	; () banked
 12161  01584A  90D8               	bcf	status,0,c
 12162  01584C  3379               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12163  01584E  3378               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12164  015850  3377               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12165  015852  3376               	rrcf	___llmod@divisor& (0+255),f,b
 12166                           
 12167                           ; BSR set to: 0
 12168  015854  0100               	movlb	0	; () banked
 12169  015856  2F7A               	decfsz	___llmod@counter& (0+255),f,b
 12170  015858  D7D4               	goto	l8035
 12171  01585A  D000               	goto	l1601
 12172  01585C                     l1601:
 12173                           
 12174                           ; BSR set to: 0
 12175  01585C  C072  F072         	movff	___llmod@dividend,?___llmod
 12176  015860  C073  F073         	movff	___llmod@dividend+1,?___llmod+1
 12177  015864  C074  F074         	movff	___llmod@dividend+2,?___llmod+2
 12178  015868  C075  F075         	movff	___llmod@dividend+3,?___llmod+3
 12179                           
 12180                           ; BSR set to: 0
 12181  01586C  0012               	return		;funcret
 12182  01586E                     __end_of___llmod:
 12183                           	opt stack 0
 12184                           tblptru	equ	0xFF8
 12185                           tblptrh	equ	0xFF7
 12186                           tblptrl	equ	0xFF6
 12187                           tablat	equ	0xFF5
 12188                           prodh	equ	0xFF4
 12189                           prodl	equ	0xFF3
 12190                           intcon	equ	0xFF2
 12191                           postinc0	equ	0xFEE
 12192                           wreg	equ	0xFE8
 12193                           indf2	equ	0xFDF
 12194                           postinc2	equ	0xFDE
 12195                           fsr2h	equ	0xFDA
 12196                           fsr2l	equ	0xFD9
 12197                           status	equ	0xFD8
 12198                           
 12199 ;; *************** function ___lldiv *****************
 12200 ;; Defined at:
 12201 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 12202 ;; Parameters:    Size  Location     Type
 12203 ;;  dividend        4   18[BANK0 ] unsigned long 
 12204 ;;  divisor         4   22[BANK0 ] unsigned long 
 12205 ;; Auto vars:     Size  Location     Type
 12206 ;;  quotient        4   26[BANK0 ] unsigned long 
 12207 ;;  counter         1   30[BANK0 ] unsigned char 
 12208 ;; Return value:  Size  Location     Type
 12209 ;;                  4   18[BANK0 ] unsigned long 
 12210 ;; Registers used:
 12211 ;;		wreg, status,2, status,0
 12212 ;; Tracked objects:
 12213 ;;		On entry : 0/0
 12214 ;;		On exit  : 0/0
 12215 ;;		Unchanged: 0/0
 12216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12217 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12218 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12220 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;Total ram usage:       13 bytes
 12222 ;; Hardware stack levels used:    1
 12223 ;; Hardware stack levels required when called:    3
 12224 ;; This function calls:
 12225 ;;		Nothing
 12226 ;; This function is called by:
 12227 ;;		_sprintf
 12228 ;; This function uses a non-reentrant model
 12229 ;;
 12230                           
 12231                           	psect	text23
 12232  015428                     __ptext23:
 12233                           	opt stack 0
 12234  015428                     ___lldiv:
 12235                           	opt stack 25
 12236                           
 12237                           ; BSR set to: 0
 12238                           ;incstack = 0
 12239  015428  0E00               	movlw	0
 12240  01542A  0100               	movlb	0	; () banked
 12241  01542C  6F7A               	movwf	___lldiv@quotient& (0+255),b
 12242  01542E  0E00               	movlw	0
 12243  015430  6F7B               	movwf	(___lldiv@quotient+1)& (0+255),b
 12244  015432  0E00               	movlw	0
 12245  015434  6F7C               	movwf	(___lldiv@quotient+2)& (0+255),b
 12246  015436  0E00               	movlw	0
 12247  015438  6F7D               	movwf	(___lldiv@quotient+3)& (0+255),b
 12248                           
 12249                           ; BSR set to: 0
 12250  01543A  0100               	movlb	0	; () banked
 12251  01543C  5176               	movf	___lldiv@divisor& (0+255),w,b
 12252  01543E  0100               	movlb	0	; () banked
 12253  015440  1177               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12254  015442  0100               	movlb	0	; () banked
 12255  015444  1178               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12256  015446  0100               	movlb	0	; () banked
 12257  015448  1179               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12258  01544A  B4D8               	btfsc	status,2,c
 12259  01544C  D047               	goto	l1591
 12260                           
 12261                           ; BSR set to: 0
 12262  01544E  0E01               	movlw	1
 12263  015450  0100               	movlb	0	; () banked
 12264  015452  6F7E               	movwf	___lldiv@counter& (0+255),b
 12265  015454  D009               	goto	l8013
 12266  015456                     l8011:
 12267                           
 12268                           ; BSR set to: 0
 12269  015456  0100               	movlb	0	; () banked
 12270  015458  90D8               	bcf	status,0,c
 12271  01545A  3776               	rlcf	___lldiv@divisor& (0+255),f,b
 12272  01545C  3777               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12273  01545E  3778               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12274  015460  3779               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12275  015462  0100               	movlb	0	; () banked
 12276  015464  2B7E               	incf	___lldiv@counter& (0+255),f,b
 12277  015466  D000               	goto	l8013
 12278  015468                     l8013:
 12279                           
 12280                           ; BSR set to: 0
 12281  015468  0100               	movlb	0	; () banked
 12282  01546A  BF79               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 12283  01546C  D002               	goto	l8015
 12284  01546E  D7F3               	goto	l8011
 12285                           
 12286                           ; BSR set to: 0
 12287  015470  D000               	goto	l8015
 12288  015472                     l8015:
 12289                           
 12290                           ; BSR set to: 0
 12291  015472  0100               	movlb	0	; () banked
 12292  015474  90D8               	bcf	status,0,c
 12293  015476  377A               	rlcf	___lldiv@quotient& (0+255),f,b
 12294  015478  377B               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12295  01547A  377C               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12296  01547C  377D               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12297                           
 12298                           ; BSR set to: 0
 12299  01547E  0100               	movlb	0	; () banked
 12300  015480  5176               	movf	___lldiv@divisor& (0+255),w,b
 12301  015482  0100               	movlb	0	; () banked
 12302  015484  5D72               	subwf	___lldiv@dividend& (0+255),w,b
 12303  015486  0100               	movlb	0	; () banked
 12304  015488  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12305  01548A  0100               	movlb	0	; () banked
 12306  01548C  5973               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12307  01548E  0100               	movlb	0	; () banked
 12308  015490  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12309  015492  0100               	movlb	0	; () banked
 12310  015494  5974               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12311  015496  0100               	movlb	0	; () banked
 12312  015498  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12313  01549A  0100               	movlb	0	; () banked
 12314  01549C  5975               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12315  01549E  A0D8               	btfss	status,0,c
 12316  0154A0  D013               	goto	l8023
 12317                           
 12318                           ; BSR set to: 0
 12319  0154A2  0100               	movlb	0	; () banked
 12320  0154A4  5176               	movf	___lldiv@divisor& (0+255),w,b
 12321  0154A6  0100               	movlb	0	; () banked
 12322  0154A8  5F72               	subwf	___lldiv@dividend& (0+255),f,b
 12323  0154AA  0100               	movlb	0	; () banked
 12324  0154AC  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12325  0154AE  0100               	movlb	0	; () banked
 12326  0154B0  5B73               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12327  0154B2  0100               	movlb	0	; () banked
 12328  0154B4  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12329  0154B6  0100               	movlb	0	; () banked
 12330  0154B8  5B74               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12331  0154BA  0100               	movlb	0	; () banked
 12332  0154BC  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12333  0154BE  0100               	movlb	0	; () banked
 12334  0154C0  5B75               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12335                           
 12336                           ; BSR set to: 0
 12337  0154C2  0100               	movlb	0	; () banked
 12338  0154C4  817A               	bsf	___lldiv@quotient& (0+255),0,b
 12339  0154C6  D000               	goto	l8023
 12340  0154C8                     l8023:
 12341                           
 12342                           ; BSR set to: 0
 12343  0154C8  0100               	movlb	0	; () banked
 12344  0154CA  90D8               	bcf	status,0,c
 12345  0154CC  3379               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12346  0154CE  3378               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12347  0154D0  3377               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12348  0154D2  3376               	rrcf	___lldiv@divisor& (0+255),f,b
 12349                           
 12350                           ; BSR set to: 0
 12351  0154D4  0100               	movlb	0	; () banked
 12352  0154D6  2F7E               	decfsz	___lldiv@counter& (0+255),f,b
 12353  0154D8  D7CC               	goto	l8015
 12354  0154DA  D000               	goto	l1591
 12355  0154DC                     l1591:
 12356                           
 12357                           ; BSR set to: 0
 12358  0154DC  C07A  F072         	movff	___lldiv@quotient,?___lldiv
 12359  0154E0  C07B  F073         	movff	___lldiv@quotient+1,?___lldiv+1
 12360  0154E4  C07C  F074         	movff	___lldiv@quotient+2,?___lldiv+2
 12361  0154E8  C07D  F075         	movff	___lldiv@quotient+3,?___lldiv+3
 12362                           
 12363                           ; BSR set to: 0
 12364  0154EC  0012               	return		;funcret
 12365  0154EE                     __end_of___lldiv:
 12366                           	opt stack 0
 12367                           tblptru	equ	0xFF8
 12368                           tblptrh	equ	0xFF7
 12369                           tblptrl	equ	0xFF6
 12370                           tablat	equ	0xFF5
 12371                           prodh	equ	0xFF4
 12372                           prodl	equ	0xFF3
 12373                           intcon	equ	0xFF2
 12374                           postinc0	equ	0xFEE
 12375                           wreg	equ	0xFE8
 12376                           indf2	equ	0xFDF
 12377                           postinc2	equ	0xFDE
 12378                           fsr2h	equ	0xFDA
 12379                           fsr2l	equ	0xFD9
 12380                           status	equ	0xFD8
 12381                           
 12382 ;; *************** function ___fltol *****************
 12383 ;; Defined at:
 12384 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fltol.c"
 12385 ;; Parameters:    Size  Location     Type
 12386 ;;  f1              4   73[BANK0 ] unsigned long 
 12387 ;; Auto vars:     Size  Location     Type
 12388 ;;  exp1            1   82[BANK0 ] unsigned char 
 12389 ;;  sign1           1   81[BANK0 ] unsigned char 
 12390 ;; Return value:  Size  Location     Type
 12391 ;;                  4   73[BANK0 ] long 
 12392 ;; Registers used:
 12393 ;;		wreg, status,2, status,0
 12394 ;; Tracked objects:
 12395 ;;		On entry : 0/0
 12396 ;;		On exit  : 0/0
 12397 ;;		Unchanged: 0/0
 12398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12399 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12400 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12401 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12402 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12403 ;;Total ram usage:       10 bytes
 12404 ;; Hardware stack levels used:    1
 12405 ;; Hardware stack levels required when called:    3
 12406 ;; This function calls:
 12407 ;;		Nothing
 12408 ;; This function is called by:
 12409 ;;		_main
 12410 ;;		_sprintf
 12411 ;; This function uses a non-reentrant model
 12412 ;;
 12413                           
 12414                           	psect	text24
 12415  015058                     __ptext24:
 12416                           	opt stack 0
 12417  015058                     ___fltol:
 12418                           	opt stack 27
 12419                           
 12420                           ; BSR set to: 0
 12421                           ;incstack = 0
 12422  015058  0100               	movlb	0	; () banked
 12423  01505A  35AB               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12424  01505C  35AC               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12425  01505E  0100               	movlb	0	; () banked
 12426  015060  6FB2               	movwf	___fltol@exp1& (0+255),b
 12427  015062  0100               	movlb	0	; () banked
 12428  015064  51B2               	movf	___fltol@exp1& (0+255),w,b
 12429  015066  A4D8               	btfss	status,2,c
 12430  015068  D00A               	goto	l7967
 12431                           
 12432                           ; BSR set to: 0
 12433  01506A  0E00               	movlw	0
 12434  01506C  0100               	movlb	0	; () banked
 12435  01506E  6FA9               	movwf	?___fltol& (0+255),b
 12436  015070  0E00               	movlw	0
 12437  015072  6FAA               	movwf	(?___fltol+1)& (0+255),b
 12438  015074  0E00               	movlw	0
 12439  015076  6FAB               	movwf	(?___fltol+2)& (0+255),b
 12440  015078  0E00               	movlw	0
 12441  01507A  6FAC               	movwf	(?___fltol+3)& (0+255),b
 12442                           
 12443                           ; BSR set to: 0
 12444  01507C  0012               	return	
 12445  01507E                     l7967:
 12446                           
 12447                           ; BSR set to: 0
 12448  01507E  C0A9  F0AD         	movff	___fltol@f1,??___fltol
 12449  015082  C0AA  F0AE         	movff	___fltol@f1+1,??___fltol+1
 12450  015086  C0AB  F0AF         	movff	___fltol@f1+2,??___fltol+2
 12451  01508A  C0AC  F0B0         	movff	___fltol@f1+3,??___fltol+3
 12452  01508E  0E20               	movlw	32
 12453  015090  D006               	goto	u10100
 12454  015092                     u10105:
 12455  015092  0100               	movlb	0	; () banked
 12456  015094  90D8               	bcf	status,0,c
 12457  015096  33B0               	rrcf	(??___fltol+3)& (0+255),f,b
 12458  015098  33AF               	rrcf	(??___fltol+2)& (0+255),f,b
 12459  01509A  33AE               	rrcf	(??___fltol+1)& (0+255),f,b
 12460  01509C  33AD               	rrcf	??___fltol& (0+255),f,b
 12461  01509E                     u10100:
 12462  01509E  2EE8               	decfsz	wreg,f,c
 12463  0150A0  D7F8               	goto	u10105
 12464  0150A2  0100               	movlb	0	; () banked
 12465  0150A4  51AD               	movf	??___fltol& (0+255),w,b
 12466  0150A6  0100               	movlb	0	; () banked
 12467  0150A8  6FB1               	movwf	___fltol@sign1& (0+255),b
 12468                           
 12469                           ; BSR set to: 0
 12470  0150AA  0100               	movlb	0	; () banked
 12471  0150AC  8FAB               	bsf	(___fltol@f1+2)& (0+255),7,b
 12472                           
 12473                           ; BSR set to: 0
 12474  0150AE  0EFF               	movlw	255
 12475  0150B0  0100               	movlb	0	; () banked
 12476  0150B2  17A9               	andwf	___fltol@f1& (0+255),f,b
 12477  0150B4  0EFF               	movlw	255
 12478  0150B6  17AA               	andwf	(___fltol@f1+1)& (0+255),f,b
 12479  0150B8  0EFF               	movlw	255
 12480  0150BA  17AB               	andwf	(___fltol@f1+2)& (0+255),f,b
 12481  0150BC  0E00               	movlw	0
 12482  0150BE  17AC               	andwf	(___fltol@f1+3)& (0+255),f,b
 12483                           
 12484                           ; BSR set to: 0
 12485  0150C0  0E96               	movlw	150
 12486  0150C2  0100               	movlb	0	; () banked
 12487  0150C4  5FB2               	subwf	___fltol@exp1& (0+255),f,b
 12488                           
 12489                           ; BSR set to: 0
 12490  0150C6  0100               	movlb	0	; () banked
 12491  0150C8  AFB2               	btfss	___fltol@exp1& (0+255),7,b
 12492  0150CA  D01B               	goto	l7987
 12493                           
 12494                           ; BSR set to: 0
 12495  0150CC  0100               	movlb	0	; () banked
 12496  0150CE  51B2               	movf	___fltol@exp1& (0+255),w,b
 12497  0150D0  0A80               	xorlw	128
 12498  0150D2  0F97               	addlw	151
 12499  0150D4  B0D8               	btfsc	status,0,c
 12500  0150D6  D00B               	goto	l7983
 12501                           
 12502                           ; BSR set to: 0
 12503  0150D8  0E00               	movlw	0
 12504  0150DA  0100               	movlb	0	; () banked
 12505  0150DC  6FA9               	movwf	?___fltol& (0+255),b
 12506  0150DE  0E00               	movlw	0
 12507  0150E0  6FAA               	movwf	(?___fltol+1)& (0+255),b
 12508  0150E2  0E00               	movlw	0
 12509  0150E4  6FAB               	movwf	(?___fltol+2)& (0+255),b
 12510  0150E6  0E00               	movlw	0
 12511  0150E8  6FAC               	movwf	(?___fltol+3)& (0+255),b
 12512                           
 12513                           ; BSR set to: 0
 12514  0150EA  0012               	return	
 12515                           
 12516                           ; BSR set to: 0
 12517  0150EC  D000               	goto	l7983
 12518  0150EE                     l7983:
 12519                           
 12520                           ; BSR set to: 0
 12521  0150EE  0100               	movlb	0	; () banked
 12522  0150F0  90D8               	bcf	status,0,c
 12523  0150F2  33AC               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12524  0150F4  33AB               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12525  0150F6  33AA               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12526  0150F8  33A9               	rrcf	___fltol@f1& (0+255),f,b
 12527                           
 12528                           ; BSR set to: 0
 12529  0150FA  0100               	movlb	0	; () banked
 12530  0150FC  3FB2               	incfsz	___fltol@exp1& (0+255),f,b
 12531  0150FE  D7F7               	goto	l7983
 12532                           
 12533                           ; BSR set to: 0
 12534  015100  D01F               	goto	l7997
 12535  015102                     l7987:
 12536                           
 12537                           ; BSR set to: 0
 12538  015102  0E1F               	movlw	31
 12539  015104  0100               	movlb	0	; () banked
 12540  015106  65B2               	cpfsgt	___fltol@exp1& (0+255),b
 12541  015108  D014               	goto	l7995
 12542                           
 12543                           ; BSR set to: 0
 12544  01510A  0E00               	movlw	0
 12545  01510C  0100               	movlb	0	; () banked
 12546  01510E  6FA9               	movwf	?___fltol& (0+255),b
 12547  015110  0E00               	movlw	0
 12548  015112  6FAA               	movwf	(?___fltol+1)& (0+255),b
 12549  015114  0E00               	movlw	0
 12550  015116  6FAB               	movwf	(?___fltol+2)& (0+255),b
 12551  015118  0E00               	movlw	0
 12552  01511A  6FAC               	movwf	(?___fltol+3)& (0+255),b
 12553                           
 12554                           ; BSR set to: 0
 12555  01511C  0012               	return	
 12556                           
 12557                           ; BSR set to: 0
 12558  01511E  D009               	goto	l7995
 12559  015120                     l7993:
 12560                           
 12561                           ; BSR set to: 0
 12562  015120  0100               	movlb	0	; () banked
 12563  015122  90D8               	bcf	status,0,c
 12564  015124  37A9               	rlcf	___fltol@f1& (0+255),f,b
 12565  015126  37AA               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12566  015128  37AB               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12567  01512A  37AC               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12568  01512C  0100               	movlb	0	; () banked
 12569  01512E  07B2               	decf	___fltol@exp1& (0+255),f,b
 12570  015130  D000               	goto	l7995
 12571  015132                     l7995:
 12572                           
 12573                           ; BSR set to: 0
 12574  015132  0100               	movlb	0	; () banked
 12575  015134  51B2               	movf	___fltol@exp1& (0+255),w,b
 12576  015136  0100               	movlb	0	; () banked
 12577  015138  B4D8               	btfsc	status,2,c
 12578  01513A  D002               	goto	l7997
 12579  01513C  D7F1               	goto	l7993
 12580                           
 12581                           ; BSR set to: 0
 12582  01513E  D000               	goto	l7997
 12583  015140                     l7997:
 12584                           
 12585                           ; BSR set to: 0
 12586  015140  0100               	movlb	0	; () banked
 12587  015142  51B1               	movf	___fltol@sign1& (0+255),w,b
 12588  015144  0100               	movlb	0	; () banked
 12589  015146  B4D8               	btfsc	status,2,c
 12590  015148  D00A               	goto	l8001
 12591                           
 12592                           ; BSR set to: 0
 12593  01514A  0100               	movlb	0	; () banked
 12594  01514C  1FAC               	comf	(___fltol@f1+3)& (0+255),f,b
 12595  01514E  1FAB               	comf	(___fltol@f1+2)& (0+255),f,b
 12596  015150  1FAA               	comf	(___fltol@f1+1)& (0+255),f,b
 12597  015152  6DA9               	negf	___fltol@f1& (0+255),b
 12598  015154  0E00               	movlw	0
 12599  015156  23AA               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12600  015158  23AB               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12601  01515A  23AC               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12602  01515C  D000               	goto	l8001
 12603  01515E                     l8001:
 12604                           
 12605                           ; BSR set to: 0
 12606  01515E  C0A9  F0A9         	movff	___fltol@f1,?___fltol
 12607  015162  C0AA  F0AA         	movff	___fltol@f1+1,?___fltol+1
 12608  015166  C0AB  F0AB         	movff	___fltol@f1+2,?___fltol+2
 12609  01516A  C0AC  F0AC         	movff	___fltol@f1+3,?___fltol+3
 12610  01516E  0012               	return	
 12611                           
 12612                           ; BSR set to: 0
 12613                           
 12614                           ; BSR set to: 0
 12615  015170  0012               	return		;funcret
 12616  015172                     __end_of___fltol:
 12617                           	opt stack 0
 12618                           tblptru	equ	0xFF8
 12619                           tblptrh	equ	0xFF7
 12620                           tblptrl	equ	0xFF6
 12621                           tablat	equ	0xFF5
 12622                           prodh	equ	0xFF4
 12623                           prodl	equ	0xFF3
 12624                           intcon	equ	0xFF2
 12625                           postinc0	equ	0xFEE
 12626                           wreg	equ	0xFE8
 12627                           indf2	equ	0xFDF
 12628                           postinc2	equ	0xFDE
 12629                           fsr2h	equ	0xFDA
 12630                           fsr2l	equ	0xFD9
 12631                           status	equ	0xFD8
 12632                           
 12633 ;; *************** function ___flsub *****************
 12634 ;; Defined at:
 12635 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flsub.c"
 12636 ;; Parameters:    Size  Location     Type
 12637 ;;  f1              4   73[BANK0 ] long 
 12638 ;;  f2              4   77[BANK0 ] long 
 12639 ;; Auto vars:     Size  Location     Type
 12640 ;;		None
 12641 ;; Return value:  Size  Location     Type
 12642 ;;                  4   73[BANK0 ] long 
 12643 ;; Registers used:
 12644 ;;		wreg, status,2, status,0, cstack
 12645 ;; Tracked objects:
 12646 ;;		On entry : 0/0
 12647 ;;		On exit  : 0/0
 12648 ;;		Unchanged: 0/0
 12649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12650 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12653 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12654 ;;Total ram usage:        8 bytes
 12655 ;; Hardware stack levels used:    1
 12656 ;; Hardware stack levels required when called:    5
 12657 ;; This function calls:
 12658 ;;		___fladd
 12659 ;; This function is called by:
 12660 ;;		_sprintf
 12661 ;; This function uses a non-reentrant model
 12662 ;;
 12663                           
 12664                           	psect	text25
 12665  015C4A                     __ptext25:
 12666                           	opt stack 0
 12667  015C4A                     ___flsub:
 12668                           	opt stack 23
 12669                           
 12670                           ; BSR set to: 0
 12671                           ;incstack = 0
 12672  015C4A  0100               	movlb	0	; () banked
 12673  015C4C  51AD               	movf	___flsub@f2& (0+255),w,b
 12674  015C4E  0100               	movlb	0	; () banked
 12675  015C50  11AE               	iorwf	(___flsub@f2+1)& (0+255),w,b
 12676  015C52  0100               	movlb	0	; () banked
 12677  015C54  11AF               	iorwf	(___flsub@f2+2)& (0+255),w,b
 12678  015C56  0100               	movlb	0	; () banked
 12679  015C58  11B0               	iorwf	(___flsub@f2+3)& (0+255),w,b
 12680  015C5A  B4D8               	btfsc	status,2,c
 12681  015C5C  D00A               	goto	l7935
 12682                           
 12683                           ; BSR set to: 0
 12684  015C5E  0E00               	movlw	0
 12685  015C60  0100               	movlb	0	; () banked
 12686  015C62  1BAD               	xorwf	___flsub@f2& (0+255),f,b
 12687  015C64  0E00               	movlw	0
 12688  015C66  1BAE               	xorwf	(___flsub@f2+1)& (0+255),f,b
 12689  015C68  0E00               	movlw	0
 12690  015C6A  1BAF               	xorwf	(___flsub@f2+2)& (0+255),f,b
 12691  015C6C  0E80               	movlw	128
 12692  015C6E  1BB0               	xorwf	(___flsub@f2+3)& (0+255),f,b
 12693  015C70  D000               	goto	l7935
 12694  015C72                     l7935:
 12695                           
 12696                           ; BSR set to: 0
 12697  015C72  C0A9  F09D         	movff	___flsub@f1,___fladd@f1
 12698  015C76  C0AA  F09E         	movff	___flsub@f1+1,___fladd@f1+1
 12699  015C7A  C0AB  F09F         	movff	___flsub@f1+2,___fladd@f1+2
 12700  015C7E  C0AC  F0A0         	movff	___flsub@f1+3,___fladd@f1+3
 12701  015C82  C0AD  F0A1         	movff	___flsub@f2,___fladd@f2
 12702  015C86  C0AE  F0A2         	movff	___flsub@f2+1,___fladd@f2+1
 12703  015C8A  C0AF  F0A3         	movff	___flsub@f2+2,___fladd@f2+2
 12704  015C8E  C0B0  F0A4         	movff	___flsub@f2+3,___fladd@f2+3
 12705  015C92  ECC9  F0A0         	call	___fladd	;wreg free
 12706  015C96  C09D  F0A9         	movff	?___fladd,?___flsub
 12707  015C9A  C09E  F0AA         	movff	?___fladd+1,?___flsub+1
 12708  015C9E  C09F  F0AB         	movff	?___fladd+2,?___flsub+2
 12709  015CA2  C0A0  F0AC         	movff	?___fladd+3,?___flsub+3
 12710  015CA6  0012               	return	
 12711  015CA8  0012               	return		;funcret
 12712  015CAA                     __end_of___flsub:
 12713                           	opt stack 0
 12714                           tblptru	equ	0xFF8
 12715                           tblptrh	equ	0xFF7
 12716                           tblptrl	equ	0xFF6
 12717                           tablat	equ	0xFF5
 12718                           prodh	equ	0xFF4
 12719                           prodl	equ	0xFF3
 12720                           intcon	equ	0xFF2
 12721                           postinc0	equ	0xFEE
 12722                           wreg	equ	0xFE8
 12723                           indf2	equ	0xFDF
 12724                           postinc2	equ	0xFDE
 12725                           fsr2h	equ	0xFDA
 12726                           fsr2l	equ	0xFD9
 12727                           status	equ	0xFD8
 12728                           
 12729 ;; *************** function ___fladd *****************
 12730 ;; Defined at:
 12731 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fladd.c"
 12732 ;; Parameters:    Size  Location     Type
 12733 ;;  f1              4   61[BANK0 ] long 
 12734 ;;  f2              4   65[BANK0 ] long 
 12735 ;; Auto vars:     Size  Location     Type
 12736 ;;  exp1            1   72[BANK0 ] unsigned char 
 12737 ;;  exp2            1   71[BANK0 ] unsigned char 
 12738 ;;  sign            1   70[BANK0 ] unsigned char 
 12739 ;; Return value:  Size  Location     Type
 12740 ;;                  4   61[BANK0 ] unsigned char 
 12741 ;; Registers used:
 12742 ;;		wreg, status,2, status,0, cstack
 12743 ;; Tracked objects:
 12744 ;;		On entry : 0/0
 12745 ;;		On exit  : 0/0
 12746 ;;		Unchanged: 0/0
 12747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12748 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12749 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12750 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12751 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12752 ;;Total ram usage:       12 bytes
 12753 ;; Hardware stack levels used:    1
 12754 ;; Hardware stack levels required when called:    4
 12755 ;; This function calls:
 12756 ;;		___flpack
 12757 ;; This function is called by:
 12758 ;;		_main
 12759 ;;		_sprintf
 12760 ;;		___flsub
 12761 ;; This function uses a non-reentrant model
 12762 ;;
 12763                           
 12764                           	psect	text26
 12765  014192                     __ptext26:
 12766                           	opt stack 0
 12767  014192                     ___fladd:
 12768                           	opt stack 26
 12769                           
 12770                           ;incstack = 0
 12771  014192  0100               	movlb	0	; () banked
 12772  014194  359F               	rlcf	(___fladd@f1+2)& (0+255),w,b
 12773  014196  35A0               	rlcf	(___fladd@f1+3)& (0+255),w,b
 12774  014198  0100               	movlb	0	; () banked
 12775  01419A  6FA8               	movwf	___fladd@exp1& (0+255),b
 12776  01419C  0100               	movlb	0	; () banked
 12777  01419E  35A3               	rlcf	(___fladd@f2+2)& (0+255),w,b
 12778  0141A0  35A4               	rlcf	(___fladd@f2+3)& (0+255),w,b
 12779  0141A2  0100               	movlb	0	; () banked
 12780  0141A4  6FA7               	movwf	___fladd@exp2& (0+255),b
 12781  0141A6  0100               	movlb	0	; () banked
 12782  0141A8  51A8               	movf	___fladd@exp1& (0+255),w,b
 12783  0141AA  0100               	movlb	0	; () banked
 12784  0141AC  B4D8               	btfsc	status,2,c
 12785  0141AE  D011               	goto	l1327
 12786                           
 12787                           ; BSR set to: 0
 12788  0141B0  0100               	movlb	0	; () banked
 12789  0141B2  51A7               	movf	___fladd@exp2& (0+255),w,b
 12790  0141B4  0100               	movlb	0	; () banked
 12791  0141B6  5DA8               	subwf	___fladd@exp1& (0+255),w,b
 12792  0141B8  B0D8               	btfsc	status,0,c
 12793  0141BA  D014               	goto	l7519
 12794                           
 12795                           ; BSR set to: 0
 12796  0141BC  0100               	movlb	0	; () banked
 12797  0141BE  51A8               	movf	___fladd@exp1& (0+255),w,b
 12798  0141C0  0800               	sublw	0
 12799  0141C2  0100               	movlb	0	; () banked
 12800  0141C4  25A7               	addwf	___fladd@exp2& (0+255),w,b
 12801  0141C6  0100               	movlb	0	; () banked
 12802  0141C8  6FA5               	movwf	??___fladd& (0+255),b
 12803  0141CA  0E20               	movlw	32
 12804  0141CC  0100               	movlb	0	; () banked
 12805  0141CE  65A5               	cpfsgt	??___fladd& (0+255),b
 12806  0141D0  D009               	goto	l7519
 12807  0141D2                     l1327:
 12808                           
 12809                           ; BSR set to: 0
 12810  0141D2  C0A1  F09D         	movff	___fladd@f2,?___fladd
 12811  0141D6  C0A2  F09E         	movff	___fladd@f2+1,?___fladd+1
 12812  0141DA  C0A3  F09F         	movff	___fladd@f2+2,?___fladd+2
 12813  0141DE  C0A4  F0A0         	movff	___fladd@f2+3,?___fladd+3
 12814  0141E2  0012               	return	
 12815  0141E4                     l7519:
 12816                           
 12817                           ; BSR set to: 0
 12818  0141E4  0100               	movlb	0	; () banked
 12819  0141E6  51A7               	movf	___fladd@exp2& (0+255),w,b
 12820  0141E8  0100               	movlb	0	; () banked
 12821  0141EA  B4D8               	btfsc	status,2,c
 12822  0141EC  D011               	goto	l1331
 12823                           
 12824                           ; BSR set to: 0
 12825  0141EE  0100               	movlb	0	; () banked
 12826  0141F0  51A8               	movf	___fladd@exp1& (0+255),w,b
 12827  0141F2  0100               	movlb	0	; () banked
 12828  0141F4  5DA7               	subwf	___fladd@exp2& (0+255),w,b
 12829  0141F6  B0D8               	btfsc	status,0,c
 12830  0141F8  D014               	goto	l7525
 12831                           
 12832                           ; BSR set to: 0
 12833  0141FA  0100               	movlb	0	; () banked
 12834  0141FC  51A7               	movf	___fladd@exp2& (0+255),w,b
 12835  0141FE  0800               	sublw	0
 12836  014200  0100               	movlb	0	; () banked
 12837  014202  25A8               	addwf	___fladd@exp1& (0+255),w,b
 12838  014204  0100               	movlb	0	; () banked
 12839  014206  6FA5               	movwf	??___fladd& (0+255),b
 12840  014208  0E20               	movlw	32
 12841  01420A  0100               	movlb	0	; () banked
 12842  01420C  65A5               	cpfsgt	??___fladd& (0+255),b
 12843  01420E  D009               	goto	l7525
 12844  014210                     l1331:
 12845                           
 12846                           ; BSR set to: 0
 12847  014210  C09D  F09D         	movff	___fladd@f1,?___fladd
 12848  014214  C09E  F09E         	movff	___fladd@f1+1,?___fladd+1
 12849  014218  C09F  F09F         	movff	___fladd@f1+2,?___fladd+2
 12850  01421C  C0A0  F0A0         	movff	___fladd@f1+3,?___fladd+3
 12851  014220  0012               	return	
 12852  014222                     l7525:
 12853                           
 12854                           ; BSR set to: 0
 12855  014222  0E06               	movlw	6
 12856  014224  0100               	movlb	0	; () banked
 12857  014226  6FA6               	movwf	___fladd@sign& (0+255),b
 12858                           
 12859                           ; BSR set to: 0
 12860  014228  0100               	movlb	0	; () banked
 12861  01422A  AFA0               	btfss	(___fladd@f1+3)& (0+255),7,b
 12862  01422C  D003               	goto	l7531
 12863                           
 12864                           ; BSR set to: 0
 12865  01422E  0100               	movlb	0	; () banked
 12866  014230  8FA6               	bsf	___fladd@sign& (0+255),7,b
 12867  014232  D000               	goto	l7531
 12868  014234                     l7531:
 12869                           
 12870                           ; BSR set to: 0
 12871  014234  0100               	movlb	0	; () banked
 12872  014236  AFA4               	btfss	(___fladd@f2+3)& (0+255),7,b
 12873  014238  D002               	goto	l1333
 12874                           
 12875                           ; BSR set to: 0
 12876  01423A  0100               	movlb	0	; () banked
 12877  01423C  8DA6               	bsf	___fladd@sign& (0+255),6,b
 12878  01423E                     l1333:
 12879                           
 12880                           ; BSR set to: 0
 12881  01423E  0100               	movlb	0	; () banked
 12882  014240  8F9F               	bsf	(___fladd@f1+2)& (0+255),7,b
 12883                           
 12884                           ; BSR set to: 0
 12885  014242  0EFF               	movlw	255
 12886  014244  0100               	movlb	0	; () banked
 12887  014246  179D               	andwf	___fladd@f1& (0+255),f,b
 12888  014248  0EFF               	movlw	255
 12889  01424A  179E               	andwf	(___fladd@f1+1)& (0+255),f,b
 12890  01424C  0EFF               	movlw	255
 12891  01424E  179F               	andwf	(___fladd@f1+2)& (0+255),f,b
 12892  014250  0E00               	movlw	0
 12893  014252  17A0               	andwf	(___fladd@f1+3)& (0+255),f,b
 12894                           
 12895                           ; BSR set to: 0
 12896  014254  0100               	movlb	0	; () banked
 12897  014256  8FA3               	bsf	(___fladd@f2+2)& (0+255),7,b
 12898  014258  0EFF               	movlw	255
 12899  01425A  0100               	movlb	0	; () banked
 12900  01425C  17A1               	andwf	___fladd@f2& (0+255),f,b
 12901  01425E  0EFF               	movlw	255
 12902  014260  17A2               	andwf	(___fladd@f2+1)& (0+255),f,b
 12903  014262  0EFF               	movlw	255
 12904  014264  17A3               	andwf	(___fladd@f2+2)& (0+255),f,b
 12905  014266  0E00               	movlw	0
 12906  014268  17A4               	andwf	(___fladd@f2+3)& (0+255),f,b
 12907  01426A  0100               	movlb	0	; () banked
 12908  01426C  51A7               	movf	___fladd@exp2& (0+255),w,b
 12909  01426E  0100               	movlb	0	; () banked
 12910  014270  5DA8               	subwf	___fladd@exp1& (0+255),w,b
 12911  014272  B0D8               	btfsc	status,0,c
 12912  014274  D02A               	goto	l7549
 12913  014276                     l7539:
 12914                           
 12915                           ; BSR set to: 0
 12916  014276  0100               	movlb	0	; () banked
 12917  014278  90D8               	bcf	status,0,c
 12918  01427A  37A1               	rlcf	___fladd@f2& (0+255),f,b
 12919  01427C  37A2               	rlcf	(___fladd@f2+1)& (0+255),f,b
 12920  01427E  37A3               	rlcf	(___fladd@f2+2)& (0+255),f,b
 12921  014280  37A4               	rlcf	(___fladd@f2+3)& (0+255),f,b
 12922  014282  0100               	movlb	0	; () banked
 12923  014284  07A7               	decf	___fladd@exp2& (0+255),f,b
 12924                           
 12925                           ; BSR set to: 0
 12926  014286  0100               	movlb	0	; () banked
 12927  014288  51A8               	movf	___fladd@exp1& (0+255),w,b
 12928  01428A  0100               	movlb	0	; () banked
 12929  01428C  19A7               	xorwf	___fladd@exp2& (0+255),w,b
 12930  01428E  B4D8               	btfsc	status,2,c
 12931  014290  D014               	goto	l7547
 12932                           
 12933                           ; BSR set to: 0
 12934  014292  0100               	movlb	0	; () banked
 12935  014294  07A6               	decf	___fladd@sign& (0+255),f,b
 12936  014296  C0A6  F0A5         	movff	___fladd@sign,??___fladd
 12937  01429A  0E07               	movlw	7
 12938  01429C  0100               	movlb	0	; () banked
 12939  01429E  17A5               	andwf	??___fladd& (0+255),f,b
 12940  0142A0  B4D8               	btfsc	status,2,c
 12941  0142A2  D00B               	goto	l7547
 12942  0142A4  D7E8               	goto	l7539
 12943                           
 12944                           ; BSR set to: 0
 12945                           
 12946                           ; BSR set to: 0
 12947  0142A6  D009               	goto	l7547
 12948  0142A8                     l7545:
 12949                           
 12950                           ; BSR set to: 0
 12951  0142A8  0100               	movlb	0	; () banked
 12952  0142AA  90D8               	bcf	status,0,c
 12953  0142AC  33A0               	rrcf	(___fladd@f1+3)& (0+255),f,b
 12954  0142AE  339F               	rrcf	(___fladd@f1+2)& (0+255),f,b
 12955  0142B0  339E               	rrcf	(___fladd@f1+1)& (0+255),f,b
 12956  0142B2  339D               	rrcf	___fladd@f1& (0+255),f,b
 12957  0142B4  0100               	movlb	0	; () banked
 12958  0142B6  2BA8               	incf	___fladd@exp1& (0+255),f,b
 12959  0142B8  D000               	goto	l7547
 12960  0142BA                     l7547:
 12961                           
 12962                           ; BSR set to: 0
 12963  0142BA  0100               	movlb	0	; () banked
 12964  0142BC  51A7               	movf	___fladd@exp2& (0+255),w,b
 12965  0142BE  0100               	movlb	0	; () banked
 12966  0142C0  19A8               	xorwf	___fladd@exp1& (0+255),w,b
 12967  0142C2  B4D8               	btfsc	status,2,c
 12968  0142C4  D032               	goto	l1342
 12969  0142C6  D7F0               	goto	l7545
 12970                           
 12971                           ; BSR set to: 0
 12972  0142C8  D030               	goto	l1342
 12973  0142CA                     l7549:
 12974                           
 12975                           ; BSR set to: 0
 12976  0142CA  0100               	movlb	0	; () banked
 12977  0142CC  51A8               	movf	___fladd@exp1& (0+255),w,b
 12978  0142CE  0100               	movlb	0	; () banked
 12979  0142D0  5DA7               	subwf	___fladd@exp2& (0+255),w,b
 12980  0142D2  B0D8               	btfsc	status,0,c
 12981  0142D4  D02A               	goto	l1342
 12982  0142D6                     l7551:
 12983                           
 12984                           ; BSR set to: 0
 12985  0142D6  0100               	movlb	0	; () banked
 12986  0142D8  90D8               	bcf	status,0,c
 12987  0142DA  379D               	rlcf	___fladd@f1& (0+255),f,b
 12988  0142DC  379E               	rlcf	(___fladd@f1+1)& (0+255),f,b
 12989  0142DE  379F               	rlcf	(___fladd@f1+2)& (0+255),f,b
 12990  0142E0  37A0               	rlcf	(___fladd@f1+3)& (0+255),f,b
 12991  0142E2  0100               	movlb	0	; () banked
 12992  0142E4  07A8               	decf	___fladd@exp1& (0+255),f,b
 12993                           
 12994                           ; BSR set to: 0
 12995  0142E6  0100               	movlb	0	; () banked
 12996  0142E8  51A8               	movf	___fladd@exp1& (0+255),w,b
 12997  0142EA  0100               	movlb	0	; () banked
 12998  0142EC  19A7               	xorwf	___fladd@exp2& (0+255),w,b
 12999  0142EE  B4D8               	btfsc	status,2,c
 13000  0142F0  D014               	goto	l7559
 13001                           
 13002                           ; BSR set to: 0
 13003  0142F2  0100               	movlb	0	; () banked
 13004  0142F4  07A6               	decf	___fladd@sign& (0+255),f,b
 13005  0142F6  C0A6  F0A5         	movff	___fladd@sign,??___fladd
 13006  0142FA  0E07               	movlw	7
 13007  0142FC  0100               	movlb	0	; () banked
 13008  0142FE  17A5               	andwf	??___fladd& (0+255),f,b
 13009  014300  B4D8               	btfsc	status,2,c
 13010  014302  D00B               	goto	l7559
 13011  014304  D7E8               	goto	l7551
 13012                           
 13013                           ; BSR set to: 0
 13014                           
 13015                           ; BSR set to: 0
 13016  014306  D009               	goto	l7559
 13017  014308                     l7557:
 13018                           
 13019                           ; BSR set to: 0
 13020  014308  0100               	movlb	0	; () banked
 13021  01430A  90D8               	bcf	status,0,c
 13022  01430C  33A4               	rrcf	(___fladd@f2+3)& (0+255),f,b
 13023  01430E  33A3               	rrcf	(___fladd@f2+2)& (0+255),f,b
 13024  014310  33A2               	rrcf	(___fladd@f2+1)& (0+255),f,b
 13025  014312  33A1               	rrcf	___fladd@f2& (0+255),f,b
 13026  014314  0100               	movlb	0	; () banked
 13027  014316  2BA7               	incf	___fladd@exp2& (0+255),f,b
 13028  014318  D000               	goto	l7559
 13029  01431A                     l7559:
 13030                           
 13031                           ; BSR set to: 0
 13032  01431A  0100               	movlb	0	; () banked
 13033  01431C  51A7               	movf	___fladd@exp2& (0+255),w,b
 13034  01431E  0100               	movlb	0	; () banked
 13035  014320  19A8               	xorwf	___fladd@exp1& (0+255),w,b
 13036  014322  B4D8               	btfsc	status,2,c
 13037  014324  D002               	goto	l1342
 13038  014326  D7F0               	goto	l7557
 13039                           
 13040                           ; BSR set to: 0
 13041  014328  D000               	goto	l1342
 13042  01432A                     l1342:
 13043                           
 13044                           ; BSR set to: 0
 13045  01432A  0100               	movlb	0	; () banked
 13046  01432C  AFA6               	btfss	___fladd@sign& (0+255),7,b
 13047  01432E  D011               	goto	l7563
 13048                           
 13049                           ; BSR set to: 0
 13050  014330  0EFF               	movlw	255
 13051  014332  0100               	movlb	0	; () banked
 13052  014334  1B9D               	xorwf	___fladd@f1& (0+255),f,b
 13053  014336  0EFF               	movlw	255
 13054  014338  1B9E               	xorwf	(___fladd@f1+1)& (0+255),f,b
 13055  01433A  0EFF               	movlw	255
 13056  01433C  1B9F               	xorwf	(___fladd@f1+2)& (0+255),f,b
 13057  01433E  0EFF               	movlw	255
 13058  014340  1BA0               	xorwf	(___fladd@f1+3)& (0+255),f,b
 13059  014342  0E01               	movlw	1
 13060  014344  0100               	movlb	0	; () banked
 13061  014346  279D               	addwf	___fladd@f1& (0+255),f,b
 13062  014348  0E00               	movlw	0
 13063  01434A  239E               	addwfc	(___fladd@f1+1)& (0+255),f,b
 13064  01434C  239F               	addwfc	(___fladd@f1+2)& (0+255),f,b
 13065  01434E  23A0               	addwfc	(___fladd@f1+3)& (0+255),f,b
 13066  014350  D000               	goto	l7563
 13067  014352                     l7563:
 13068                           
 13069                           ; BSR set to: 0
 13070  014352  0100               	movlb	0	; () banked
 13071  014354  ADA6               	btfss	___fladd@sign& (0+255),6,b
 13072  014356  D011               	goto	l7567
 13073                           
 13074                           ; BSR set to: 0
 13075  014358  0EFF               	movlw	255
 13076  01435A  0100               	movlb	0	; () banked
 13077  01435C  1BA1               	xorwf	___fladd@f2& (0+255),f,b
 13078  01435E  0EFF               	movlw	255
 13079  014360  1BA2               	xorwf	(___fladd@f2+1)& (0+255),f,b
 13080  014362  0EFF               	movlw	255
 13081  014364  1BA3               	xorwf	(___fladd@f2+2)& (0+255),f,b
 13082  014366  0EFF               	movlw	255
 13083  014368  1BA4               	xorwf	(___fladd@f2+3)& (0+255),f,b
 13084  01436A  0E01               	movlw	1
 13085  01436C  0100               	movlb	0	; () banked
 13086  01436E  27A1               	addwf	___fladd@f2& (0+255),f,b
 13087  014370  0E00               	movlw	0
 13088  014372  23A2               	addwfc	(___fladd@f2+1)& (0+255),f,b
 13089  014374  23A3               	addwfc	(___fladd@f2+2)& (0+255),f,b
 13090  014376  23A4               	addwfc	(___fladd@f2+3)& (0+255),f,b
 13091  014378  D000               	goto	l7567
 13092  01437A                     l7567:
 13093                           
 13094                           ; BSR set to: 0
 13095  01437A  0E00               	movlw	0
 13096  01437C  0100               	movlb	0	; () banked
 13097  01437E  6FA6               	movwf	___fladd@sign& (0+255),b
 13098                           
 13099                           ; BSR set to: 0
 13100  014380  0100               	movlb	0	; () banked
 13101  014382  519D               	movf	___fladd@f1& (0+255),w,b
 13102  014384  0100               	movlb	0	; () banked
 13103  014386  27A1               	addwf	___fladd@f2& (0+255),f,b
 13104  014388  0100               	movlb	0	; () banked
 13105  01438A  519E               	movf	(___fladd@f1+1)& (0+255),w,b
 13106  01438C  0100               	movlb	0	; () banked
 13107  01438E  23A2               	addwfc	(___fladd@f2+1)& (0+255),f,b
 13108  014390  0100               	movlb	0	; () banked
 13109  014392  519F               	movf	(___fladd@f1+2)& (0+255),w,b
 13110  014394  0100               	movlb	0	; () banked
 13111  014396  23A3               	addwfc	(___fladd@f2+2)& (0+255),f,b
 13112  014398  0100               	movlb	0	; () banked
 13113  01439A  51A0               	movf	(___fladd@f1+3)& (0+255),w,b
 13114  01439C  0100               	movlb	0	; () banked
 13115  01439E  23A4               	addwfc	(___fladd@f2+3)& (0+255),f,b
 13116                           
 13117                           ; BSR set to: 0
 13118  0143A0  0100               	movlb	0	; () banked
 13119  0143A2  AFA4               	btfss	(___fladd@f2+3)& (0+255),7,b
 13120  0143A4  D014               	goto	l7577
 13121                           
 13122                           ; BSR set to: 0
 13123  0143A6  0EFF               	movlw	255
 13124  0143A8  0100               	movlb	0	; () banked
 13125  0143AA  1BA1               	xorwf	___fladd@f2& (0+255),f,b
 13126  0143AC  0EFF               	movlw	255
 13127  0143AE  1BA2               	xorwf	(___fladd@f2+1)& (0+255),f,b
 13128  0143B0  0EFF               	movlw	255
 13129  0143B2  1BA3               	xorwf	(___fladd@f2+2)& (0+255),f,b
 13130  0143B4  0EFF               	movlw	255
 13131  0143B6  1BA4               	xorwf	(___fladd@f2+3)& (0+255),f,b
 13132  0143B8  0E01               	movlw	1
 13133  0143BA  0100               	movlb	0	; () banked
 13134  0143BC  27A1               	addwf	___fladd@f2& (0+255),f,b
 13135  0143BE  0E00               	movlw	0
 13136  0143C0  23A2               	addwfc	(___fladd@f2+1)& (0+255),f,b
 13137  0143C2  23A3               	addwfc	(___fladd@f2+2)& (0+255),f,b
 13138  0143C4  23A4               	addwfc	(___fladd@f2+3)& (0+255),f,b
 13139                           
 13140                           ; BSR set to: 0
 13141  0143C6  0E01               	movlw	1
 13142  0143C8  0100               	movlb	0	; () banked
 13143  0143CA  6FA6               	movwf	___fladd@sign& (0+255),b
 13144  0143CC  D000               	goto	l7577
 13145  0143CE                     l7577:
 13146                           
 13147                           ; BSR set to: 0
 13148  0143CE  C0A1  F072         	movff	___fladd@f2,___flpack@arg
 13149  0143D2  C0A2  F073         	movff	___fladd@f2+1,___flpack@arg+1
 13150  0143D6  C0A3  F074         	movff	___fladd@f2+2,___flpack@arg+2
 13151  0143DA  C0A4  F075         	movff	___fladd@f2+3,___flpack@arg+3
 13152  0143DE  C0A8  F076         	movff	___fladd@exp1,___flpack@exp
 13153  0143E2  C0A6  F077         	movff	___fladd@sign,___flpack@sign
 13154  0143E6  EC68  F0A5         	call	___flpack	;wreg free
 13155  0143EA  C072  F09D         	movff	?___flpack,?___fladd
 13156  0143EE  C073  F09E         	movff	?___flpack+1,?___fladd+1
 13157  0143F2  C074  F09F         	movff	?___flpack+2,?___fladd+2
 13158  0143F6  C075  F0A0         	movff	?___flpack+3,?___fladd+3
 13159  0143FA  0012               	return	
 13160  0143FC  0012               	return		;funcret
 13161  0143FE                     __end_of___fladd:
 13162                           	opt stack 0
 13163                           tblptru	equ	0xFF8
 13164                           tblptrh	equ	0xFF7
 13165                           tblptrl	equ	0xFF6
 13166                           tablat	equ	0xFF5
 13167                           prodh	equ	0xFF4
 13168                           prodl	equ	0xFF3
 13169                           intcon	equ	0xFF2
 13170                           postinc0	equ	0xFEE
 13171                           wreg	equ	0xFE8
 13172                           indf2	equ	0xFDF
 13173                           postinc2	equ	0xFDE
 13174                           fsr2h	equ	0xFDA
 13175                           fsr2l	equ	0xFD9
 13176                           status	equ	0xFD8
 13177                           
 13178 ;; *************** function ___flneg *****************
 13179 ;; Defined at:
 13180 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flneg.c"
 13181 ;; Parameters:    Size  Location     Type
 13182 ;;  f1              4   48[BANK0 ] unsigned char 
 13183 ;; Auto vars:     Size  Location     Type
 13184 ;;		None
 13185 ;; Return value:  Size  Location     Type
 13186 ;;                  4   48[BANK0 ] unsigned char 
 13187 ;; Registers used:
 13188 ;;		wreg, status,2, status,0
 13189 ;; Tracked objects:
 13190 ;;		On entry : 0/0
 13191 ;;		On exit  : 0/0
 13192 ;;		Unchanged: 0/0
 13193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13194 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13197 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13198 ;;Total ram usage:        4 bytes
 13199 ;; Hardware stack levels used:    1
 13200 ;; Hardware stack levels required when called:    3
 13201 ;; This function calls:
 13202 ;;		Nothing
 13203 ;; This function is called by:
 13204 ;;		_main
 13205 ;;		_sprintf
 13206 ;; This function uses a non-reentrant model
 13207 ;;
 13208                           
 13209                           	psect	text27
 13210  015E14                     __ptext27:
 13211                           	opt stack 0
 13212  015E14                     ___flneg:
 13213                           	opt stack 27
 13214                           
 13215                           ;incstack = 0
 13216  015E14  0100               	movlb	0	; () banked
 13217  015E16  5190               	movf	___flneg@f1& (0+255),w,b
 13218  015E18  0100               	movlb	0	; () banked
 13219  015E1A  1191               	iorwf	(___flneg@f1+1)& (0+255),w,b
 13220  015E1C  0100               	movlb	0	; () banked
 13221  015E1E  1192               	iorwf	(___flneg@f1+2)& (0+255),w,b
 13222  015E20  0100               	movlb	0	; () banked
 13223  015E22  1193               	iorwf	(___flneg@f1+3)& (0+255),w,b
 13224  015E24  B4D8               	btfsc	status,2,c
 13225  015E26  D00A               	goto	l7957
 13226                           
 13227                           ; BSR set to: 0
 13228  015E28  0E00               	movlw	0
 13229  015E2A  0100               	movlb	0	; () banked
 13230  015E2C  1B90               	xorwf	___flneg@f1& (0+255),f,b
 13231  015E2E  0E00               	movlw	0
 13232  015E30  1B91               	xorwf	(___flneg@f1+1)& (0+255),f,b
 13233  015E32  0E00               	movlw	0
 13234  015E34  1B92               	xorwf	(___flneg@f1+2)& (0+255),f,b
 13235  015E36  0E80               	movlw	128
 13236  015E38  1B93               	xorwf	(___flneg@f1+3)& (0+255),f,b
 13237  015E3A  D000               	goto	l7957
 13238  015E3C                     l7957:
 13239                           
 13240                           ; BSR set to: 0
 13241  015E3C  C090  F090         	movff	___flneg@f1,?___flneg
 13242  015E40  C091  F091         	movff	___flneg@f1+1,?___flneg+1
 13243  015E44  C092  F092         	movff	___flneg@f1+2,?___flneg+2
 13244  015E48  C093  F093         	movff	___flneg@f1+3,?___flneg+3
 13245  015E4C  0012               	return	
 13246                           
 13247                           ; BSR set to: 0
 13248                           
 13249                           ; BSR set to: 0
 13250  015E4E  0012               	return		;funcret
 13251  015E50                     __end_of___flneg:
 13252                           	opt stack 0
 13253                           tblptru	equ	0xFF8
 13254                           tblptrh	equ	0xFF7
 13255                           tblptrl	equ	0xFF6
 13256                           tablat	equ	0xFF5
 13257                           prodh	equ	0xFF4
 13258                           prodl	equ	0xFF3
 13259                           intcon	equ	0xFF2
 13260                           postinc0	equ	0xFEE
 13261                           wreg	equ	0xFE8
 13262                           indf2	equ	0xFDF
 13263                           postinc2	equ	0xFDE
 13264                           fsr2h	equ	0xFDA
 13265                           fsr2l	equ	0xFD9
 13266                           status	equ	0xFD8
 13267                           
 13268 ;; *************** function ___flge *****************
 13269 ;; Defined at:
 13270 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flge.c"
 13271 ;; Parameters:    Size  Location     Type
 13272 ;;  ff1             4   18[BANK0 ] unsigned char 
 13273 ;;  ff2             4   22[BANK0 ] unsigned char 
 13274 ;; Auto vars:     Size  Location     Type
 13275 ;;		None
 13276 ;; Return value:  Size  Location     Type
 13277 ;;		None               void
 13278 ;; Registers used:
 13279 ;;		wreg, status,2, status,0
 13280 ;; Tracked objects:
 13281 ;;		On entry : 0/0
 13282 ;;		On exit  : 0/0
 13283 ;;		Unchanged: 0/0
 13284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13285 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13287 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13288 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13289 ;;Total ram usage:       12 bytes
 13290 ;; Hardware stack levels used:    1
 13291 ;; Hardware stack levels required when called:    3
 13292 ;; This function calls:
 13293 ;;		Nothing
 13294 ;; This function is called by:
 13295 ;;		_sprintf
 13296 ;; This function uses a non-reentrant model
 13297 ;;
 13298                           
 13299                           	psect	text28
 13300  015172                     __ptext28:
 13301                           	opt stack 0
 13302  015172                     ___flge:
 13303                           	opt stack 25
 13304                           
 13305                           ; BSR set to: 0
 13306                           ;incstack = 0
 13307  015172  0100               	movlb	0	; () banked
 13308  015174  AF75               	btfss	(___flge@ff1+3)& (0+255),7,b
 13309  015176  D027               	goto	l7943
 13310                           
 13311                           ; BSR set to: 0
 13312  015178  C072  F07A         	movff	___flge@ff1,??___flge
 13313  01517C  C073  F07B         	movff	___flge@ff1+1,??___flge+1
 13314  015180  C074  F07C         	movff	___flge@ff1+2,??___flge+2
 13315  015184  C075  F07D         	movff	___flge@ff1+3,??___flge+3
 13316  015188  0100               	movlb	0	; () banked
 13317  01518A  1F7A               	comf	??___flge& (0+255),f,b
 13318  01518C  1F7B               	comf	(??___flge+1)& (0+255),f,b
 13319  01518E  1F7C               	comf	(??___flge+2)& (0+255),f,b
 13320  015190  1F7D               	comf	(??___flge+3)& (0+255),f,b
 13321  015192  2B7A               	incf	??___flge& (0+255),f,b
 13322  015194  0E00               	movlw	0
 13323  015196  237B               	addwfc	(??___flge+1)& (0+255),f,b
 13324  015198  237C               	addwfc	(??___flge+2)& (0+255),f,b
 13325  01519A  237D               	addwfc	(??___flge+3)& (0+255),f,b
 13326  01519C  0E00               	movlw	0
 13327  01519E  0100               	movlb	0	; () banked
 13328  0151A0  257A               	addwf	??___flge& (0+255),w,b
 13329  0151A2  0100               	movlb	0	; () banked
 13330  0151A4  6F72               	movwf	___flge@ff1& (0+255),b
 13331  0151A6  0E00               	movlw	0
 13332  0151A8  0100               	movlb	0	; () banked
 13333  0151AA  217B               	addwfc	(??___flge+1)& (0+255),w,b
 13334  0151AC  0100               	movlb	0	; () banked
 13335  0151AE  6F73               	movwf	(___flge@ff1+1)& (0+255),b
 13336  0151B0  0E00               	movlw	0
 13337  0151B2  0100               	movlb	0	; () banked
 13338  0151B4  217C               	addwfc	(??___flge+2)& (0+255),w,b
 13339  0151B6  0100               	movlb	0	; () banked
 13340  0151B8  6F74               	movwf	(___flge@ff1+2)& (0+255),b
 13341  0151BA  0E80               	movlw	128
 13342  0151BC  0100               	movlb	0	; () banked
 13343  0151BE  217D               	addwfc	(??___flge+3)& (0+255),w,b
 13344  0151C0  0100               	movlb	0	; () banked
 13345  0151C2  6F75               	movwf	(___flge@ff1+3)& (0+255),b
 13346  0151C4  D000               	goto	l7943
 13347  0151C6                     l7943:
 13348                           
 13349                           ; BSR set to: 0
 13350  0151C6  0100               	movlb	0	; () banked
 13351  0151C8  AF79               	btfss	(___flge@ff2+3)& (0+255),7,b
 13352  0151CA  D026               	goto	l1384
 13353                           
 13354                           ; BSR set to: 0
 13355  0151CC  C076  F07A         	movff	___flge@ff2,??___flge
 13356  0151D0  C077  F07B         	movff	___flge@ff2+1,??___flge+1
 13357  0151D4  C078  F07C         	movff	___flge@ff2+2,??___flge+2
 13358  0151D8  C079  F07D         	movff	___flge@ff2+3,??___flge+3
 13359  0151DC  0100               	movlb	0	; () banked
 13360  0151DE  1F7A               	comf	??___flge& (0+255),f,b
 13361  0151E0  1F7B               	comf	(??___flge+1)& (0+255),f,b
 13362  0151E2  1F7C               	comf	(??___flge+2)& (0+255),f,b
 13363  0151E4  1F7D               	comf	(??___flge+3)& (0+255),f,b
 13364  0151E6  2B7A               	incf	??___flge& (0+255),f,b
 13365  0151E8  0E00               	movlw	0
 13366  0151EA  237B               	addwfc	(??___flge+1)& (0+255),f,b
 13367  0151EC  237C               	addwfc	(??___flge+2)& (0+255),f,b
 13368  0151EE  237D               	addwfc	(??___flge+3)& (0+255),f,b
 13369  0151F0  0E00               	movlw	0
 13370  0151F2  0100               	movlb	0	; () banked
 13371  0151F4  257A               	addwf	??___flge& (0+255),w,b
 13372  0151F6  0100               	movlb	0	; () banked
 13373  0151F8  6F76               	movwf	___flge@ff2& (0+255),b
 13374  0151FA  0E00               	movlw	0
 13375  0151FC  0100               	movlb	0	; () banked
 13376  0151FE  217B               	addwfc	(??___flge+1)& (0+255),w,b
 13377  015200  0100               	movlb	0	; () banked
 13378  015202  6F77               	movwf	(___flge@ff2+1)& (0+255),b
 13379  015204  0E00               	movlw	0
 13380  015206  0100               	movlb	0	; () banked
 13381  015208  217C               	addwfc	(??___flge+2)& (0+255),w,b
 13382  01520A  0100               	movlb	0	; () banked
 13383  01520C  6F78               	movwf	(___flge@ff2+2)& (0+255),b
 13384  01520E  0E80               	movlw	128
 13385  015210  0100               	movlb	0	; () banked
 13386  015212  217D               	addwfc	(??___flge+3)& (0+255),w,b
 13387  015214  0100               	movlb	0	; () banked
 13388  015216  6F79               	movwf	(___flge@ff2+3)& (0+255),b
 13389  015218                     l1384:
 13390                           
 13391                           ; BSR set to: 0
 13392  015218  0E00               	movlw	0
 13393  01521A  0100               	movlb	0	; () banked
 13394  01521C  1B72               	xorwf	___flge@ff1& (0+255),f,b
 13395  01521E  0E00               	movlw	0
 13396  015220  1B73               	xorwf	(___flge@ff1+1)& (0+255),f,b
 13397  015222  0E00               	movlw	0
 13398  015224  1B74               	xorwf	(___flge@ff1+2)& (0+255),f,b
 13399  015226  0E80               	movlw	128
 13400  015228  1B75               	xorwf	(___flge@ff1+3)& (0+255),f,b
 13401  01522A  0E00               	movlw	0
 13402  01522C  0100               	movlb	0	; () banked
 13403  01522E  1B76               	xorwf	___flge@ff2& (0+255),f,b
 13404  015230  0E00               	movlw	0
 13405  015232  1B77               	xorwf	(___flge@ff2+1)& (0+255),f,b
 13406  015234  0E00               	movlw	0
 13407  015236  1B78               	xorwf	(___flge@ff2+2)& (0+255),f,b
 13408  015238  0E80               	movlw	128
 13409  01523A  1B79               	xorwf	(___flge@ff2+3)& (0+255),f,b
 13410  01523C  0100               	movlb	0	; () banked
 13411  01523E  5176               	movf	___flge@ff2& (0+255),w,b
 13412  015240  0100               	movlb	0	; () banked
 13413  015242  5D72               	subwf	___flge@ff1& (0+255),w,b
 13414  015244  0100               	movlb	0	; () banked
 13415  015246  5177               	movf	(___flge@ff2+1)& (0+255),w,b
 13416  015248  0100               	movlb	0	; () banked
 13417  01524A  5973               	subwfb	(___flge@ff1+1)& (0+255),w,b
 13418  01524C  0100               	movlb	0	; () banked
 13419  01524E  5178               	movf	(___flge@ff2+2)& (0+255),w,b
 13420  015250  0100               	movlb	0	; () banked
 13421  015252  5974               	subwfb	(___flge@ff1+2)& (0+255),w,b
 13422  015254  0100               	movlb	0	; () banked
 13423  015256  5179               	movf	(___flge@ff2+3)& (0+255),w,b
 13424  015258  0100               	movlb	0	; () banked
 13425  01525A  5975               	subwfb	(___flge@ff1+3)& (0+255),w,b
 13426  01525C  B0D8               	btfsc	status,0,c
 13427  01525E  D002               	goto	l7949
 13428                           
 13429                           ; BSR set to: 0
 13430  015260  90D8               	bcf	status,0,c
 13431  015262  0012               	return	
 13432  015264                     l7949:
 13433                           
 13434                           ; BSR set to: 0
 13435  015264  80D8               	bsf	status,0,c
 13436                           
 13437                           ; BSR set to: 0
 13438  015266  0012               	return	
 13439                           
 13440                           ; BSR set to: 0
 13441                           
 13442                           ; BSR set to: 0
 13443  015268  0012               	return		;funcret
 13444  01526A                     __end_of___flge:
 13445                           	opt stack 0
 13446                           tblptru	equ	0xFF8
 13447                           tblptrh	equ	0xFF7
 13448                           tblptrl	equ	0xFF6
 13449                           tablat	equ	0xFF5
 13450                           prodh	equ	0xFF4
 13451                           prodl	equ	0xFF3
 13452                           intcon	equ	0xFF2
 13453                           postinc0	equ	0xFEE
 13454                           wreg	equ	0xFE8
 13455                           indf2	equ	0xFDF
 13456                           postinc2	equ	0xFDE
 13457                           fsr2h	equ	0xFDA
 13458                           fsr2l	equ	0xFD9
 13459                           status	equ	0xFD8
 13460                           
 13461 ;; *************** function ___lwtofl *****************
 13462 ;; Defined at:
 13463 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtofl.c"
 13464 ;; Parameters:    Size  Location     Type
 13465 ;;  c               2   28[BANK0 ] unsigned int 
 13466 ;; Auto vars:     Size  Location     Type
 13467 ;;		None
 13468 ;; Return value:  Size  Location     Type
 13469 ;;                  4   28[BANK0 ] unsigned int 
 13470 ;; Registers used:
 13471 ;;		wreg, status,2, status,0, cstack
 13472 ;; Tracked objects:
 13473 ;;		On entry : 0/0
 13474 ;;		On exit  : 0/0
 13475 ;;		Unchanged: 0/0
 13476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13477 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13480 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13481 ;;Total ram usage:        4 bytes
 13482 ;; Hardware stack levels used:    1
 13483 ;; Hardware stack levels required when called:    4
 13484 ;; This function calls:
 13485 ;;		___flpack
 13486 ;; This function is called by:
 13487 ;;		_LCD_Handler
 13488 ;; This function uses a non-reentrant model
 13489 ;;
 13490                           
 13491                           	psect	text29
 13492  015F9C                     __ptext29:
 13493                           	opt stack 0
 13494  015F9C                     ___lwtofl:
 13495                           	opt stack 25
 13496                           
 13497                           ; BSR set to: 0
 13498                           ;incstack = 0
 13499  015F9C  C07C  F072         	movff	___lwtofl@c,___flpack@arg
 13500  015FA0  C07D  F073         	movff	___lwtofl@c+1,___flpack@arg+1
 13501  015FA4  0100               	movlb	0	; () banked
 13502  015FA6  6B74               	clrf	(___flpack@arg+2)& (0+255),b
 13503  015FA8  6B75               	clrf	(___flpack@arg+3)& (0+255),b
 13504  015FAA  0E96               	movlw	150
 13505  015FAC  0100               	movlb	0	; () banked
 13506  015FAE  6F76               	movwf	___flpack@exp& (0+255),b
 13507  015FB0  0E00               	movlw	0
 13508  015FB2  0100               	movlb	0	; () banked
 13509  015FB4  6F77               	movwf	___flpack@sign& (0+255),b
 13510  015FB6  EC68  F0A5         	call	___flpack	;wreg free
 13511  015FBA  C072  F07C         	movff	?___flpack,?___lwtofl
 13512  015FBE  C073  F07D         	movff	?___flpack+1,?___lwtofl+1
 13513  015FC2  C074  F07E         	movff	?___flpack+2,?___lwtofl+2
 13514  015FC6  C075  F07F         	movff	?___flpack+3,?___lwtofl+3
 13515  015FCA  0012               	return	
 13516  015FCC  0012               	return		;funcret
 13517  015FCE                     __end_of___lwtofl:
 13518                           	opt stack 0
 13519                           tblptru	equ	0xFF8
 13520                           tblptrh	equ	0xFF7
 13521                           tblptrl	equ	0xFF6
 13522                           tablat	equ	0xFF5
 13523                           prodh	equ	0xFF4
 13524                           prodl	equ	0xFF3
 13525                           intcon	equ	0xFF2
 13526                           postinc0	equ	0xFEE
 13527                           wreg	equ	0xFE8
 13528                           indf2	equ	0xFDF
 13529                           postinc2	equ	0xFDE
 13530                           fsr2h	equ	0xFDA
 13531                           fsr2l	equ	0xFD9
 13532                           status	equ	0xFD8
 13533                           
 13534 ;; *************** function ___fldiv *****************
 13535 ;; Defined at:
 13536 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldiv.c"
 13537 ;; Parameters:    Size  Location     Type
 13538 ;;  f1              4   32[BANK0 ] unsigned int 
 13539 ;;  f2              4   36[BANK0 ] unsigned int 
 13540 ;; Auto vars:     Size  Location     Type
 13541 ;;  f3              4   40[BANK0 ] unsigned int 
 13542 ;;  sign            1   46[BANK0 ] unsigned char 
 13543 ;;  exp             1   45[BANK0 ] unsigned char 
 13544 ;;  cntr            1   44[BANK0 ] unsigned char 
 13545 ;; Return value:  Size  Location     Type
 13546 ;;                  4   32[BANK0 ] unsigned char 
 13547 ;; Registers used:
 13548 ;;		wreg, status,2, status,0, cstack
 13549 ;; Tracked objects:
 13550 ;;		On entry : 0/0
 13551 ;;		On exit  : 0/0
 13552 ;;		Unchanged: 0/0
 13553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13554 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13555 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13557 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13558 ;;Total ram usage:       15 bytes
 13559 ;; Hardware stack levels used:    1
 13560 ;; Hardware stack levels required when called:    4
 13561 ;; This function calls:
 13562 ;;		___flpack
 13563 ;; This function is called by:
 13564 ;;		_LCD_Handler
 13565 ;; This function uses a non-reentrant model
 13566 ;;
 13567                           
 13568                           	psect	text30
 13569  014F22                     __ptext30:
 13570                           	opt stack 0
 13571  014F22                     ___fldiv:
 13572                           	opt stack 25
 13573                           
 13574                           ;incstack = 0
 13575  014F22  0100               	movlb	0	; () banked
 13576  014F24  3582               	rlcf	(___fldiv@f1+2)& (0+255),w,b
 13577  014F26  3583               	rlcf	(___fldiv@f1+3)& (0+255),w,b
 13578  014F28  0100               	movlb	0	; () banked
 13579  014F2A  6F8D               	movwf	___fldiv@exp& (0+255),b
 13580  014F2C  0100               	movlb	0	; () banked
 13581  014F2E  518D               	movf	___fldiv@exp& (0+255),w,b
 13582  014F30  A4D8               	btfss	status,2,c
 13583  014F32  D00A               	goto	l8343
 13584                           
 13585                           ; BSR set to: 0
 13586  014F34  0E00               	movlw	0
 13587  014F36  0100               	movlb	0	; () banked
 13588  014F38  6F80               	movwf	?___fldiv& (0+255),b
 13589  014F3A  0E00               	movlw	0
 13590  014F3C  6F81               	movwf	(?___fldiv+1)& (0+255),b
 13591  014F3E  0E00               	movlw	0
 13592  014F40  6F82               	movwf	(?___fldiv+2)& (0+255),b
 13593  014F42  0E00               	movlw	0
 13594  014F44  6F83               	movwf	(?___fldiv+3)& (0+255),b
 13595                           
 13596                           ; BSR set to: 0
 13597  014F46  0012               	return	
 13598  014F48                     l8343:
 13599                           
 13600                           ; BSR set to: 0
 13601  014F48  0100               	movlb	0	; () banked
 13602  014F4A  3586               	rlcf	(___fldiv@f2+2)& (0+255),w,b
 13603  014F4C  3587               	rlcf	(___fldiv@f2+3)& (0+255),w,b
 13604  014F4E  0100               	movlb	0	; () banked
 13605  014F50  6F8E               	movwf	___fldiv@sign& (0+255),b
 13606  014F52  0100               	movlb	0	; () banked
 13607  014F54  518E               	movf	___fldiv@sign& (0+255),w,b
 13608  014F56  A4D8               	btfss	status,2,c
 13609  014F58  D00A               	goto	l8349
 13610                           
 13611                           ; BSR set to: 0
 13612  014F5A  0E00               	movlw	0
 13613  014F5C  0100               	movlb	0	; () banked
 13614  014F5E  6F80               	movwf	?___fldiv& (0+255),b
 13615  014F60  0E00               	movlw	0
 13616  014F62  6F81               	movwf	(?___fldiv+1)& (0+255),b
 13617  014F64  0E00               	movlw	0
 13618  014F66  6F82               	movwf	(?___fldiv+2)& (0+255),b
 13619  014F68  0E00               	movlw	0
 13620  014F6A  6F83               	movwf	(?___fldiv+3)& (0+255),b
 13621                           
 13622                           ; BSR set to: 0
 13623  014F6C  0012               	return	
 13624  014F6E                     l8349:
 13625                           
 13626                           ; BSR set to: 0
 13627  014F6E  0100               	movlb	0	; () banked
 13628  014F70  518E               	movf	___fldiv@sign& (0+255),w,b
 13629  014F72  0F89               	addlw	137
 13630  014F74  0100               	movlb	0	; () banked
 13631  014F76  5F8D               	subwf	___fldiv@exp& (0+255),f,b
 13632                           
 13633                           ; BSR set to: 0
 13634  014F78  C083  F08E         	movff	___fldiv@f1+3,___fldiv@sign
 13635  014F7C  0100               	movlb	0	; () banked
 13636  014F7E  5187               	movf	(___fldiv@f2+3)& (0+255),w,b
 13637  014F80  0100               	movlb	0	; () banked
 13638  014F82  1B8E               	xorwf	___fldiv@sign& (0+255),f,b
 13639  014F84  0E80               	movlw	128
 13640  014F86  0100               	movlb	0	; () banked
 13641  014F88  178E               	andwf	___fldiv@sign& (0+255),f,b
 13642                           
 13643                           ; BSR set to: 0
 13644  014F8A  0100               	movlb	0	; () banked
 13645  014F8C  8F82               	bsf	(___fldiv@f1+2)& (0+255),7,b
 13646                           
 13647                           ; BSR set to: 0
 13648  014F8E  0EFF               	movlw	255
 13649  014F90  0100               	movlb	0	; () banked
 13650  014F92  1780               	andwf	___fldiv@f1& (0+255),f,b
 13651  014F94  0EFF               	movlw	255
 13652  014F96  1781               	andwf	(___fldiv@f1+1)& (0+255),f,b
 13653  014F98  0EFF               	movlw	255
 13654  014F9A  1782               	andwf	(___fldiv@f1+2)& (0+255),f,b
 13655  014F9C  0E00               	movlw	0
 13656  014F9E  1783               	andwf	(___fldiv@f1+3)& (0+255),f,b
 13657  014FA0  0100               	movlb	0	; () banked
 13658  014FA2  8F86               	bsf	(___fldiv@f2+2)& (0+255),7,b
 13659                           
 13660                           ; BSR set to: 0
 13661  014FA4  0EFF               	movlw	255
 13662  014FA6  0100               	movlb	0	; () banked
 13663  014FA8  1784               	andwf	___fldiv@f2& (0+255),f,b
 13664  014FAA  0EFF               	movlw	255
 13665  014FAC  1785               	andwf	(___fldiv@f2+1)& (0+255),f,b
 13666  014FAE  0EFF               	movlw	255
 13667  014FB0  1786               	andwf	(___fldiv@f2+2)& (0+255),f,b
 13668  014FB2  0E00               	movlw	0
 13669  014FB4  1787               	andwf	(___fldiv@f2+3)& (0+255),f,b
 13670                           
 13671                           ; BSR set to: 0
 13672  014FB6  0E20               	movlw	32
 13673  014FB8  0100               	movlb	0	; () banked
 13674  014FBA  6F8C               	movwf	___fldiv@cntr& (0+255),b
 13675  014FBC  D000               	goto	l8361
 13676  014FBE                     l8361:
 13677                           
 13678                           ; BSR set to: 0
 13679  014FBE  0100               	movlb	0	; () banked
 13680  014FC0  90D8               	bcf	status,0,c
 13681  014FC2  3788               	rlcf	___fldiv@f3& (0+255),f,b
 13682  014FC4  3789               	rlcf	(___fldiv@f3+1)& (0+255),f,b
 13683  014FC6  378A               	rlcf	(___fldiv@f3+2)& (0+255),f,b
 13684  014FC8  378B               	rlcf	(___fldiv@f3+3)& (0+255),f,b
 13685                           
 13686                           ; BSR set to: 0
 13687  014FCA  0100               	movlb	0	; () banked
 13688  014FCC  5184               	movf	___fldiv@f2& (0+255),w,b
 13689  014FCE  0100               	movlb	0	; () banked
 13690  014FD0  5D80               	subwf	___fldiv@f1& (0+255),w,b
 13691  014FD2  0100               	movlb	0	; () banked
 13692  014FD4  5185               	movf	(___fldiv@f2+1)& (0+255),w,b
 13693  014FD6  0100               	movlb	0	; () banked
 13694  014FD8  5981               	subwfb	(___fldiv@f1+1)& (0+255),w,b
 13695  014FDA  0100               	movlb	0	; () banked
 13696  014FDC  5186               	movf	(___fldiv@f2+2)& (0+255),w,b
 13697  014FDE  0100               	movlb	0	; () banked
 13698  014FE0  5982               	subwfb	(___fldiv@f1+2)& (0+255),w,b
 13699  014FE2  0100               	movlb	0	; () banked
 13700  014FE4  5187               	movf	(___fldiv@f2+3)& (0+255),w,b
 13701  014FE6  0100               	movlb	0	; () banked
 13702  014FE8  5983               	subwfb	(___fldiv@f1+3)& (0+255),w,b
 13703  014FEA  A0D8               	btfss	status,0,c
 13704  014FEC  D013               	goto	l8369
 13705                           
 13706                           ; BSR set to: 0
 13707  014FEE  0100               	movlb	0	; () banked
 13708  014FF0  5184               	movf	___fldiv@f2& (0+255),w,b
 13709  014FF2  0100               	movlb	0	; () banked
 13710  014FF4  5F80               	subwf	___fldiv@f1& (0+255),f,b
 13711  014FF6  0100               	movlb	0	; () banked
 13712  014FF8  5185               	movf	(___fldiv@f2+1)& (0+255),w,b
 13713  014FFA  0100               	movlb	0	; () banked
 13714  014FFC  5B81               	subwfb	(___fldiv@f1+1)& (0+255),f,b
 13715  014FFE  0100               	movlb	0	; () banked
 13716  015000  5186               	movf	(___fldiv@f2+2)& (0+255),w,b
 13717  015002  0100               	movlb	0	; () banked
 13718  015004  5B82               	subwfb	(___fldiv@f1+2)& (0+255),f,b
 13719  015006  0100               	movlb	0	; () banked
 13720  015008  5187               	movf	(___fldiv@f2+3)& (0+255),w,b
 13721  01500A  0100               	movlb	0	; () banked
 13722  01500C  5B83               	subwfb	(___fldiv@f1+3)& (0+255),f,b
 13723                           
 13724                           ; BSR set to: 0
 13725  01500E  0100               	movlb	0	; () banked
 13726  015010  8188               	bsf	___fldiv@f3& (0+255),0,b
 13727  015012  D000               	goto	l8369
 13728  015014                     l8369:
 13729                           
 13730                           ; BSR set to: 0
 13731  015014  0100               	movlb	0	; () banked
 13732  015016  90D8               	bcf	status,0,c
 13733  015018  3780               	rlcf	___fldiv@f1& (0+255),f,b
 13734  01501A  3781               	rlcf	(___fldiv@f1+1)& (0+255),f,b
 13735  01501C  3782               	rlcf	(___fldiv@f1+2)& (0+255),f,b
 13736  01501E  3783               	rlcf	(___fldiv@f1+3)& (0+255),f,b
 13737                           
 13738                           ; BSR set to: 0
 13739  015020  0100               	movlb	0	; () banked
 13740  015022  2F8C               	decfsz	___fldiv@cntr& (0+255),f,b
 13741  015024  D7CC               	goto	l8361
 13742  015026  D000               	goto	l8373
 13743  015028                     l8373:
 13744                           
 13745                           ; BSR set to: 0
 13746  015028  C088  F072         	movff	___fldiv@f3,___flpack@arg
 13747  01502C  C089  F073         	movff	___fldiv@f3+1,___flpack@arg+1
 13748  015030  C08A  F074         	movff	___fldiv@f3+2,___flpack@arg+2
 13749  015034  C08B  F075         	movff	___fldiv@f3+3,___flpack@arg+3
 13750  015038  C08D  F076         	movff	___fldiv@exp,___flpack@exp
 13751  01503C  C08E  F077         	movff	___fldiv@sign,___flpack@sign
 13752  015040  EC68  F0A5         	call	___flpack	;wreg free
 13753  015044  C072  F080         	movff	?___flpack,?___fldiv
 13754  015048  C073  F081         	movff	?___flpack+1,?___fldiv+1
 13755  01504C  C074  F082         	movff	?___flpack+2,?___fldiv+2
 13756  015050  C075  F083         	movff	?___flpack+3,?___fldiv+3
 13757  015054  0012               	return	
 13758  015056  0012               	return		;funcret
 13759  015058                     __end_of___fldiv:
 13760                           	opt stack 0
 13761                           tblptru	equ	0xFF8
 13762                           tblptrh	equ	0xFF7
 13763                           tblptrl	equ	0xFF6
 13764                           tablat	equ	0xFF5
 13765                           prodh	equ	0xFF4
 13766                           prodl	equ	0xFF3
 13767                           intcon	equ	0xFF2
 13768                           postinc0	equ	0xFEE
 13769                           wreg	equ	0xFE8
 13770                           indf2	equ	0xFDF
 13771                           postinc2	equ	0xFDE
 13772                           fsr2h	equ	0xFDA
 13773                           fsr2l	equ	0xFD9
 13774                           status	equ	0xFD8
 13775                           
 13776 ;; *************** function ___flpack *****************
 13777 ;; Defined at:
 13778 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\double.c"
 13779 ;; Parameters:    Size  Location     Type
 13780 ;;  arg             4   18[BANK0 ] unsigned long 
 13781 ;;  exp             1   22[BANK0 ] unsigned char 
 13782 ;;  sign            1   23[BANK0 ] unsigned char 
 13783 ;; Auto vars:     Size  Location     Type
 13784 ;;		None
 13785 ;; Return value:  Size  Location     Type
 13786 ;;                  4   18[BANK0 ] unsigned char 
 13787 ;; Registers used:
 13788 ;;		wreg, status,2, status,0
 13789 ;; Tracked objects:
 13790 ;;		On entry : 0/0
 13791 ;;		On exit  : 0/0
 13792 ;;		Unchanged: 0/0
 13793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13794 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13796 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13797 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13798 ;;Total ram usage:       10 bytes
 13799 ;; Hardware stack levels used:    1
 13800 ;; Hardware stack levels required when called:    3
 13801 ;; This function calls:
 13802 ;;		Nothing
 13803 ;; This function is called by:
 13804 ;;		___awtofl
 13805 ;;		___fladd
 13806 ;;		___fldiv
 13807 ;;		___flmul
 13808 ;;		___lbtofl
 13809 ;;		___lltofl
 13810 ;;		___lwtofl
 13811 ;; This function uses a non-reentrant model
 13812 ;;
 13813                           
 13814                           	psect	text31
 13815  014AD0                     __ptext31:
 13816                           	opt stack 0
 13817  014AD0                     ___flpack:
 13818                           	opt stack 26
 13819                           
 13820                           ;incstack = 0
 13821  014AD0  0100               	movlb	0	; () banked
 13822  014AD2  5176               	movf	___flpack@exp& (0+255),w,b
 13823  014AD4  0100               	movlb	0	; () banked
 13824  014AD6  B4D8               	btfsc	status,2,c
 13825  014AD8  D00A               	goto	l7465
 13826                           
 13827                           ; BSR set to: 0
 13828  014ADA  0100               	movlb	0	; () banked
 13829  014ADC  5172               	movf	___flpack@arg& (0+255),w,b
 13830  014ADE  0100               	movlb	0	; () banked
 13831  014AE0  1173               	iorwf	(___flpack@arg+1)& (0+255),w,b
 13832  014AE2  0100               	movlb	0	; () banked
 13833  014AE4  1174               	iorwf	(___flpack@arg+2)& (0+255),w,b
 13834  014AE6  0100               	movlb	0	; () banked
 13835  014AE8  1175               	iorwf	(___flpack@arg+3)& (0+255),w,b
 13836  014AEA  A4D8               	btfss	status,2,c
 13837  014AEC  D014               	goto	l7471
 13838  014AEE                     l7465:
 13839                           
 13840                           ; BSR set to: 0
 13841  014AEE  0E00               	movlw	0
 13842  014AF0  0100               	movlb	0	; () banked
 13843  014AF2  6F72               	movwf	?___flpack& (0+255),b
 13844  014AF4  0E00               	movlw	0
 13845  014AF6  6F73               	movwf	(?___flpack+1)& (0+255),b
 13846  014AF8  0E00               	movlw	0
 13847  014AFA  6F74               	movwf	(?___flpack+2)& (0+255),b
 13848  014AFC  0E00               	movlw	0
 13849  014AFE  6F75               	movwf	(?___flpack+3)& (0+255),b
 13850                           
 13851                           ; BSR set to: 0
 13852  014B00  0012               	return	
 13853                           
 13854                           ; BSR set to: 0
 13855  014B02  D009               	goto	l7471
 13856  014B04                     l7469:
 13857                           
 13858                           ; BSR set to: 0
 13859  014B04  0100               	movlb	0	; () banked
 13860  014B06  2B76               	incf	___flpack@exp& (0+255),f,b
 13861  014B08  0100               	movlb	0	; () banked
 13862  014B0A  90D8               	bcf	status,0,c
 13863  014B0C  3375               	rrcf	(___flpack@arg+3)& (0+255),f,b
 13864  014B0E  3374               	rrcf	(___flpack@arg+2)& (0+255),f,b
 13865  014B10  3373               	rrcf	(___flpack@arg+1)& (0+255),f,b
 13866  014B12  3372               	rrcf	___flpack@arg& (0+255),f,b
 13867  014B14  D000               	goto	l7471
 13868  014B16                     l7471:
 13869                           
 13870                           ; BSR set to: 0
 13871  014B16  0E00               	movlw	0
 13872  014B18  0100               	movlb	0	; () banked
 13873  014B1A  1572               	andwf	___flpack@arg& (0+255),w,b
 13874  014B1C  0100               	movlb	0	; () banked
 13875  014B1E  6F78               	movwf	??___flpack& (0+255),b
 13876  014B20  0E00               	movlw	0
 13877  014B22  0100               	movlb	0	; () banked
 13878  014B24  1573               	andwf	(___flpack@arg+1)& (0+255),w,b
 13879  014B26  0100               	movlb	0	; () banked
 13880  014B28  6F79               	movwf	(??___flpack+1)& (0+255),b
 13881  014B2A  0E00               	movlw	0
 13882  014B2C  0100               	movlb	0	; () banked
 13883  014B2E  1574               	andwf	(___flpack@arg+2)& (0+255),w,b
 13884  014B30  0100               	movlb	0	; () banked
 13885  014B32  6F7A               	movwf	(??___flpack+2)& (0+255),b
 13886  014B34  0EFE               	movlw	254
 13887  014B36  0100               	movlb	0	; () banked
 13888  014B38  1575               	andwf	(___flpack@arg+3)& (0+255),w,b
 13889  014B3A  0100               	movlb	0	; () banked
 13890  014B3C  6F7B               	movwf	(??___flpack+3)& (0+255),b
 13891  014B3E  0100               	movlb	0	; () banked
 13892  014B40  5178               	movf	??___flpack& (0+255),w,b
 13893  014B42  0100               	movlb	0	; () banked
 13894  014B44  1179               	iorwf	(??___flpack+1)& (0+255),w,b
 13895  014B46  0100               	movlb	0	; () banked
 13896  014B48  117A               	iorwf	(??___flpack+2)& (0+255),w,b
 13897  014B4A  0100               	movlb	0	; () banked
 13898  014B4C  117B               	iorwf	(??___flpack+3)& (0+255),w,b
 13899  014B4E  B4D8               	btfsc	status,2,c
 13900  014B50  D011               	goto	l1311
 13901  014B52  D7D8               	goto	l7469
 13902                           
 13903                           ; BSR set to: 0
 13904  014B54  D00F               	goto	l1311
 13905  014B56                     l7473:
 13906                           
 13907                           ; BSR set to: 0
 13908  014B56  0100               	movlb	0	; () banked
 13909  014B58  2B76               	incf	___flpack@exp& (0+255),f,b
 13910                           
 13911                           ; BSR set to: 0
 13912  014B5A  0E01               	movlw	1
 13913  014B5C  0100               	movlb	0	; () banked
 13914  014B5E  2772               	addwf	___flpack@arg& (0+255),f,b
 13915  014B60  0E00               	movlw	0
 13916  014B62  2373               	addwfc	(___flpack@arg+1)& (0+255),f,b
 13917  014B64  2374               	addwfc	(___flpack@arg+2)& (0+255),f,b
 13918  014B66  2375               	addwfc	(___flpack@arg+3)& (0+255),f,b
 13919                           
 13920                           ; BSR set to: 0
 13921  014B68  0100               	movlb	0	; () banked
 13922  014B6A  90D8               	bcf	status,0,c
 13923  014B6C  3375               	rrcf	(___flpack@arg+3)& (0+255),f,b
 13924  014B6E  3374               	rrcf	(___flpack@arg+2)& (0+255),f,b
 13925  014B70  3373               	rrcf	(___flpack@arg+1)& (0+255),f,b
 13926  014B72  3372               	rrcf	___flpack@arg& (0+255),f,b
 13927  014B74                     l1311:
 13928                           
 13929                           ; BSR set to: 0
 13930  014B74  0E00               	movlw	0
 13931  014B76  0100               	movlb	0	; () banked
 13932  014B78  1572               	andwf	___flpack@arg& (0+255),w,b
 13933  014B7A  0100               	movlb	0	; () banked
 13934  014B7C  6F78               	movwf	??___flpack& (0+255),b
 13935  014B7E  0E00               	movlw	0
 13936  014B80  0100               	movlb	0	; () banked
 13937  014B82  1573               	andwf	(___flpack@arg+1)& (0+255),w,b
 13938  014B84  0100               	movlb	0	; () banked
 13939  014B86  6F79               	movwf	(??___flpack+1)& (0+255),b
 13940  014B88  0E00               	movlw	0
 13941  014B8A  0100               	movlb	0	; () banked
 13942  014B8C  1574               	andwf	(___flpack@arg+2)& (0+255),w,b
 13943  014B8E  0100               	movlb	0	; () banked
 13944  014B90  6F7A               	movwf	(??___flpack+2)& (0+255),b
 13945  014B92  0EFF               	movlw	255
 13946  014B94  0100               	movlb	0	; () banked
 13947  014B96  1575               	andwf	(___flpack@arg+3)& (0+255),w,b
 13948  014B98  0100               	movlb	0	; () banked
 13949  014B9A  6F7B               	movwf	(??___flpack+3)& (0+255),b
 13950  014B9C  0100               	movlb	0	; () banked
 13951  014B9E  5178               	movf	??___flpack& (0+255),w,b
 13952  014BA0  0100               	movlb	0	; () banked
 13953  014BA2  1179               	iorwf	(??___flpack+1)& (0+255),w,b
 13954  014BA4  0100               	movlb	0	; () banked
 13955  014BA6  117A               	iorwf	(??___flpack+2)& (0+255),w,b
 13956  014BA8  0100               	movlb	0	; () banked
 13957  014BAA  117B               	iorwf	(??___flpack+3)& (0+255),w,b
 13958  014BAC  B4D8               	btfsc	status,2,c
 13959  014BAE  D00B               	goto	l7481
 13960  014BB0  D7D2               	goto	l7473
 13961                           
 13962                           ; BSR set to: 0
 13963  014BB2  D009               	goto	l7481
 13964  014BB4                     l7479:
 13965                           
 13966                           ; BSR set to: 0
 13967  014BB4  0100               	movlb	0	; () banked
 13968  014BB6  0776               	decf	___flpack@exp& (0+255),f,b
 13969  014BB8  0100               	movlb	0	; () banked
 13970  014BBA  90D8               	bcf	status,0,c
 13971  014BBC  3772               	rlcf	___flpack@arg& (0+255),f,b
 13972  014BBE  3773               	rlcf	(___flpack@arg+1)& (0+255),f,b
 13973  014BC0  3774               	rlcf	(___flpack@arg+2)& (0+255),f,b
 13974  014BC2  3775               	rlcf	(___flpack@arg+3)& (0+255),f,b
 13975  014BC4  D000               	goto	l7481
 13976  014BC6                     l7481:
 13977                           
 13978                           ; BSR set to: 0
 13979  014BC6  0100               	movlb	0	; () banked
 13980  014BC8  BF74               	btfsc	(___flpack@arg+2)& (0+255),7,b
 13981  014BCA  D005               	goto	l1318
 13982                           
 13983                           ; BSR set to: 0
 13984  014BCC  0E02               	movlw	2
 13985  014BCE  0100               	movlb	0	; () banked
 13986  014BD0  6176               	cpfslt	___flpack@exp& (0+255),b
 13987  014BD2  D7F0               	goto	l7479
 13988  014BD4  D000               	goto	l1318
 13989  014BD6                     l1318:
 13990                           
 13991                           ; BSR set to: 0
 13992  014BD6  0100               	movlb	0	; () banked
 13993  014BD8  B176               	btfsc	___flpack@exp& (0+255),0,b
 13994  014BDA  D009               	goto	l1319
 13995                           
 13996                           ; BSR set to: 0
 13997  014BDC  0EFF               	movlw	255
 13998  014BDE  0100               	movlb	0	; () banked
 13999  014BE0  1772               	andwf	___flpack@arg& (0+255),f,b
 14000  014BE2  0EFF               	movlw	255
 14001  014BE4  1773               	andwf	(___flpack@arg+1)& (0+255),f,b
 14002  014BE6  0E7F               	movlw	127
 14003  014BE8  1774               	andwf	(___flpack@arg+2)& (0+255),f,b
 14004  014BEA  0EFF               	movlw	255
 14005  014BEC  1775               	andwf	(___flpack@arg+3)& (0+255),f,b
 14006  014BEE                     l1319:
 14007                           
 14008                           ; BSR set to: 0
 14009  014BEE  0100               	movlb	0	; () banked
 14010  014BF0  90D8               	bcf	status,0,c
 14011  014BF2  3376               	rrcf	___flpack@exp& (0+255),f,b
 14012  014BF4  C076  F078         	movff	___flpack@exp,??___flpack
 14013  014BF8  0100               	movlb	0	; () banked
 14014  014BFA  6B79               	clrf	(??___flpack+1)& (0+255),b
 14015  014BFC  6B7A               	clrf	(??___flpack+2)& (0+255),b
 14016  014BFE  6B7B               	clrf	(??___flpack+3)& (0+255),b
 14017  014C00  C078  F07B         	movff	??___flpack,??___flpack+3
 14018  014C04  0100               	movlb	0	; () banked
 14019  014C06  6B7A               	clrf	(??___flpack+2)& (0+255),b
 14020  014C08  6B79               	clrf	(??___flpack+1)& (0+255),b
 14021  014C0A  6B78               	clrf	??___flpack& (0+255),b
 14022  014C0C  0100               	movlb	0	; () banked
 14023  014C0E  5178               	movf	??___flpack& (0+255),w,b
 14024  014C10  0100               	movlb	0	; () banked
 14025  014C12  1372               	iorwf	___flpack@arg& (0+255),f,b
 14026  014C14  0100               	movlb	0	; () banked
 14027  014C16  5179               	movf	(??___flpack+1)& (0+255),w,b
 14028  014C18  0100               	movlb	0	; () banked
 14029  014C1A  1373               	iorwf	(___flpack@arg+1)& (0+255),f,b
 14030  014C1C  0100               	movlb	0	; () banked
 14031  014C1E  517A               	movf	(??___flpack+2)& (0+255),w,b
 14032  014C20  0100               	movlb	0	; () banked
 14033  014C22  1374               	iorwf	(___flpack@arg+2)& (0+255),f,b
 14034  014C24  0100               	movlb	0	; () banked
 14035  014C26  517B               	movf	(??___flpack+3)& (0+255),w,b
 14036  014C28  0100               	movlb	0	; () banked
 14037  014C2A  1375               	iorwf	(___flpack@arg+3)& (0+255),f,b
 14038                           
 14039                           ; BSR set to: 0
 14040  014C2C  0100               	movlb	0	; () banked
 14041  014C2E  5177               	movf	___flpack@sign& (0+255),w,b
 14042  014C30  0100               	movlb	0	; () banked
 14043  014C32  B4D8               	btfsc	status,2,c
 14044  014C34  D003               	goto	l7491
 14045                           
 14046                           ; BSR set to: 0
 14047  014C36  0100               	movlb	0	; () banked
 14048  014C38  8F75               	bsf	(___flpack@arg+3)& (0+255),7,b
 14049  014C3A  D000               	goto	l7491
 14050  014C3C                     l7491:
 14051                           
 14052                           ; BSR set to: 0
 14053  014C3C  C072  F072         	movff	___flpack@arg,?___flpack
 14054  014C40  C073  F073         	movff	___flpack@arg+1,?___flpack+1
 14055  014C44  C074  F074         	movff	___flpack@arg+2,?___flpack+2
 14056  014C48  C075  F075         	movff	___flpack@arg+3,?___flpack+3
 14057  014C4C  0012               	return	
 14058                           
 14059                           ; BSR set to: 0
 14060                           
 14061                           ; BSR set to: 0
 14062  014C4E  0012               	return		;funcret
 14063  014C50                     __end_of___flpack:
 14064                           	opt stack 0
 14065                           tblptru	equ	0xFF8
 14066                           tblptrh	equ	0xFF7
 14067                           tblptrl	equ	0xFF6
 14068                           tablat	equ	0xFF5
 14069                           prodh	equ	0xFF4
 14070                           prodl	equ	0xFF3
 14071                           intcon	equ	0xFF2
 14072                           postinc0	equ	0xFEE
 14073                           wreg	equ	0xFE8
 14074                           indf2	equ	0xFDF
 14075                           postinc2	equ	0xFDE
 14076                           fsr2h	equ	0xFDA
 14077                           fsr2l	equ	0xFD9
 14078                           status	equ	0xFD8
 14079                           
 14080 ;; *************** function _LCD_write_integer *****************
 14081 ;; Defined at:
 14082 ;;		line 210 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14083 ;; Parameters:    Size  Location     Type
 14084 ;;  value           2   42[BANK0 ] int 
 14085 ;;  number_of_di    1   44[BANK0 ] unsigned char 
 14086 ;;  zero_cleanin    1   45[BANK0 ] unsigned char 
 14087 ;; Auto vars:     Size  Location     Type
 14088 ;;  convertedInt    6   51[BANK0 ] unsigned char [6]
 14089 ;;  index           1   57[BANK0 ] unsigned char 
 14090 ;; Return value:  Size  Location     Type
 14091 ;;		None               void
 14092 ;; Registers used:
 14093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14094 ;; Tracked objects:
 14095 ;;		On entry : 0/0
 14096 ;;		On exit  : 0/0
 14097 ;;		Unchanged: 0/0
 14098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14099 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14100 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14101 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14102 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14103 ;;Total ram usage:       16 bytes
 14104 ;; Hardware stack levels used:    1
 14105 ;; Hardware stack levels required when called:    9
 14106 ;; This function calls:
 14107 ;;		_LCD_write_string
 14108 ;;		_itoa
 14109 ;; This function is called by:
 14110 ;;		_LCD_Handler
 14111 ;; This function uses a non-reentrant model
 14112 ;;
 14113                           
 14114                           	psect	text32
 14115  0145CC                     __ptext32:
 14116                           	opt stack 0
 14117  0145CC                     _LCD_write_integer:
 14118                           	opt stack 20
 14119                           
 14120                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 14121                           
 14122                           ; BSR set to: 0
 14123                           ;incstack = 0
 14124  0145CC  EE21  F000         	lfsr	2,LCD_write_integer@F17326
 14125  0145D0  EE10  F093         	lfsr	1,LCD_write_integer@convertedInt
 14126  0145D4  0E05               	movlw	5
 14127  0145D6                     u10231:
 14128  0145D6  CFDB FFE3          	movff	plusw2,plusw1
 14129  0145DA  06E8               	decf	wreg,f,c
 14130  0145DC  E2FC               	bc	u10231
 14131                           
 14132                           ;src\LCD_44780.c: 216: unsigned char index;
 14133                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 14134  0145DE  0E93               	movlw	low LCD_write_integer@convertedInt
 14135  0145E0  0100               	movlb	0	; () banked
 14136  0145E2  6F82               	movwf	itoa@buf& (0+255),b
 14137  0145E4  0E00               	movlw	high LCD_write_integer@convertedInt
 14138  0145E6  0100               	movlb	0	; () banked
 14139  0145E8  6F83               	movwf	(itoa@buf+1)& (0+255),b
 14140  0145EA  C08A  F084         	movff	LCD_write_integer@value,itoa@val
 14141  0145EE  C08B  F085         	movff	LCD_write_integer@value+1,itoa@val+1
 14142  0145F2  0E00               	movlw	0
 14143  0145F4  0100               	movlb	0	; () banked
 14144  0145F6  6F87               	movwf	(itoa@base+1)& (0+255),b
 14145  0145F8  0E0A               	movlw	10
 14146  0145FA  6F86               	movwf	itoa@base& (0+255),b
 14147  0145FC  ECA2  F0AE         	call	_itoa	;wreg free
 14148                           
 14149                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 14150  014600  0100               	movlb	0	; () banked
 14151  014602  518C               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14152  014604  0100               	movlb	0	; () banked
 14153  014606  B4D8               	btfsc	status,2,c
 14154  014608  D0BD               	goto	l8087
 14155                           
 14156                           ; BSR set to: 0
 14157                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 14158  01460A  0100               	movlb	0	; () banked
 14159  01460C  518C               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14160  01460E  0D01               	mullw	1
 14161  014610  0E93               	movlw	low LCD_write_integer@convertedInt
 14162  014612  24F3               	addwf	prodl,w,c
 14163  014614  6ED9               	movwf	fsr2l,c
 14164  014616  0E00               	movlw	high LCD_write_integer@convertedInt
 14165  014618  20F4               	addwfc	prodh,w,c
 14166  01461A  6EDA               	movwf	fsr2h,c
 14167  01461C  0E00               	movlw	0
 14168  01461E  6EDF               	movwf	indf2,c
 14169                           
 14170                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 14171  014620  D074               	goto	l8083
 14172  014622                     l8065:
 14173                           
 14174                           ; BSR set to: 0
 14175                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 14176  014622  0100               	movlb	0	; () banked
 14177  014624  058C               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 14178  014626  0100               	movlb	0	; () banked
 14179  014628  6F99               	movwf	LCD_write_integer@index& (0+255),b
 14180  01462A                     l8067:
 14181                           
 14182                           ; BSR set to: 0
 14183  01462A  0100               	movlb	0	; () banked
 14184  01462C  5199               	movf	LCD_write_integer@index& (0+255),w,b
 14185  01462E  0100               	movlb	0	; () banked
 14186  014630  B4D8               	btfsc	status,2,c
 14187  014632  D06B               	goto	l8083
 14188  014634  D001               	goto	l8071
 14189                           
 14190                           ; BSR set to: 0
 14191  014636  D069               	goto	l8083
 14192  014638                     l8071:
 14193                           
 14194                           ; BSR set to: 0
 14195                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 14196  014638  0EFF               	movlw	255
 14197  01463A  0100               	movlb	0	; () banked
 14198  01463C  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 14199  01463E  0EFF               	movlw	255
 14200  014640  0100               	movlb	0	; () banked
 14201  014642  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14202  014644  0100               	movlb	0	; () banked
 14203  014646  5199               	movf	LCD_write_integer@index& (0+255),w,b
 14204  014648  0100               	movlb	0	; () banked
 14205  01464A  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14206  01464C  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14207  01464E  0100               	movlb	0	; () banked
 14208  014650  518E               	movf	??_LCD_write_integer& (0+255),w,b
 14209  014652  0100               	movlb	0	; () banked
 14210  014654  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14211  014656  0100               	movlb	0	; () banked
 14212  014658  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14213  01465A  0100               	movlb	0	; () banked
 14214  01465C  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14215  01465E  0E93               	movlw	low LCD_write_integer@convertedInt
 14216  014660  0100               	movlb	0	; () banked
 14217  014662  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14218  014664  6ED9               	movwf	fsr2l,c
 14219  014666  0E00               	movlw	high LCD_write_integer@convertedInt
 14220  014668  0100               	movlb	0	; () banked
 14221  01466A  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14222  01466C  6EDA               	movwf	fsr2h,c
 14223  01466E  0100               	movlb	0	; () banked
 14224  014670  5199               	movf	LCD_write_integer@index& (0+255),w,b
 14225  014672  0D01               	mullw	1
 14226  014674  0E93               	movlw	low LCD_write_integer@convertedInt
 14227  014676  24F3               	addwf	prodl,w,c
 14228  014678  6EE1               	movwf	fsr1l,c
 14229  01467A  0E00               	movlw	high LCD_write_integer@convertedInt
 14230  01467C  20F4               	addwfc	prodh,w,c
 14231  01467E  6EE2               	movwf	fsr1h,c
 14232  014680  CFDF FFE7          	movff	indf2,indf1
 14233                           
 14234                           ; BSR set to: 0
 14235                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 14236  014684  0100               	movlb	0	; () banked
 14237  014686  058D               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 14238  014688  A4D8               	btfss	status,2,c
 14239  01468A  D01D               	goto	l8077
 14240                           
 14241                           ; BSR set to: 0
 14242                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 14243  01468C  0EFF               	movlw	255
 14244  01468E  0100               	movlb	0	; () banked
 14245  014690  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 14246  014692  0EFF               	movlw	255
 14247  014694  0100               	movlb	0	; () banked
 14248  014696  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14249  014698  0100               	movlb	0	; () banked
 14250  01469A  5199               	movf	LCD_write_integer@index& (0+255),w,b
 14251  01469C  0100               	movlb	0	; () banked
 14252  01469E  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14253  0146A0  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14254  0146A2  0100               	movlb	0	; () banked
 14255  0146A4  518E               	movf	??_LCD_write_integer& (0+255),w,b
 14256  0146A6  0100               	movlb	0	; () banked
 14257  0146A8  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14258  0146AA  0100               	movlb	0	; () banked
 14259  0146AC  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14260  0146AE  0100               	movlb	0	; () banked
 14261  0146B0  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14262  0146B2  0E93               	movlw	low LCD_write_integer@convertedInt
 14263  0146B4  0100               	movlb	0	; () banked
 14264  0146B6  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14265  0146B8  6ED9               	movwf	fsr2l,c
 14266  0146BA  0E00               	movlw	high LCD_write_integer@convertedInt
 14267  0146BC  0100               	movlb	0	; () banked
 14268  0146BE  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14269  0146C0  6EDA               	movwf	fsr2h,c
 14270  0146C2  0E20               	movlw	32
 14271  0146C4  D01C               	goto	L10
 14272  0146C6                     l8077:
 14273                           
 14274                           ; BSR set to: 0
 14275                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 14276  0146C6  0EFF               	movlw	255
 14277  0146C8  0100               	movlb	0	; () banked
 14278  0146CA  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 14279  0146CC  0EFF               	movlw	255
 14280  0146CE  0100               	movlb	0	; () banked
 14281  0146D0  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14282  0146D2  0100               	movlb	0	; () banked
 14283  0146D4  5199               	movf	LCD_write_integer@index& (0+255),w,b
 14284  0146D6  0100               	movlb	0	; () banked
 14285  0146D8  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14286  0146DA  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14287  0146DC  0100               	movlb	0	; () banked
 14288  0146DE  518E               	movf	??_LCD_write_integer& (0+255),w,b
 14289  0146E0  0100               	movlb	0	; () banked
 14290  0146E2  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14291  0146E4  0100               	movlb	0	; () banked
 14292  0146E6  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14293  0146E8  0100               	movlb	0	; () banked
 14294  0146EA  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14295  0146EC  0E93               	movlw	low LCD_write_integer@convertedInt
 14296  0146EE  0100               	movlb	0	; () banked
 14297  0146F0  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14298  0146F2  6ED9               	movwf	fsr2l,c
 14299  0146F4  0E00               	movlw	high LCD_write_integer@convertedInt
 14300  0146F6  0100               	movlb	0	; () banked
 14301  0146F8  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14302  0146FA  6EDA               	movwf	fsr2h,c
 14303  0146FC  0E30               	movlw	48
 14304  0146FE                     L10:
 14305  0146FE  6EDF               	movwf	indf2,c
 14306  014700  D000               	goto	l8079
 14307  014702                     l8079:
 14308                           
 14309                           ; BSR set to: 0
 14310  014702  0100               	movlb	0	; () banked
 14311  014704  0799               	decf	LCD_write_integer@index& (0+255),f,b
 14312  014706  D791               	goto	l8067
 14313                           
 14314                           ; BSR set to: 0
 14315                           
 14316                           ; BSR set to: 0
 14317  014708  D000               	goto	l8083
 14318  01470A                     l8083:
 14319                           
 14320                           ; BSR set to: 0
 14321  01470A  0EFF               	movlw	255
 14322  01470C  0100               	movlb	0	; () banked
 14323  01470E  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 14324  014710  0EFF               	movlw	255
 14325  014712  0100               	movlb	0	; () banked
 14326  014714  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14327  014716  0100               	movlb	0	; () banked
 14328  014718  518C               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14329  01471A  0100               	movlb	0	; () banked
 14330  01471C  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14331  01471E  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14332  014720  0100               	movlb	0	; () banked
 14333  014722  518E               	movf	??_LCD_write_integer& (0+255),w,b
 14334  014724  0100               	movlb	0	; () banked
 14335  014726  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14336  014728  0100               	movlb	0	; () banked
 14337  01472A  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14338  01472C  0100               	movlb	0	; () banked
 14339  01472E  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14340  014730  0E93               	movlw	low LCD_write_integer@convertedInt
 14341  014732  0100               	movlb	0	; () banked
 14342  014734  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14343  014736  6ED9               	movwf	fsr2l,c
 14344  014738  0E00               	movlw	high LCD_write_integer@convertedInt
 14345  01473A  0100               	movlb	0	; () banked
 14346  01473C  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14347  01473E  6EDA               	movwf	fsr2h,c
 14348  014740  0E3A               	movlw	58
 14349  014742  60DF               	cpfslt	indf2,c
 14350  014744  D76E               	goto	l8065
 14351                           
 14352                           ; BSR set to: 0
 14353  014746  0EFF               	movlw	255
 14354  014748  0100               	movlb	0	; () banked
 14355  01474A  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 14356  01474C  0EFF               	movlw	255
 14357  01474E  0100               	movlb	0	; () banked
 14358  014750  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14359  014752  0100               	movlb	0	; () banked
 14360  014754  518C               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14361  014756  0100               	movlb	0	; () banked
 14362  014758  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14363  01475A  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14364  01475C  0100               	movlb	0	; () banked
 14365  01475E  518E               	movf	??_LCD_write_integer& (0+255),w,b
 14366  014760  0100               	movlb	0	; () banked
 14367  014762  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14368  014764  0100               	movlb	0	; () banked
 14369  014766  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14370  014768  0100               	movlb	0	; () banked
 14371  01476A  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14372  01476C  0E93               	movlw	low LCD_write_integer@convertedInt
 14373  01476E  0100               	movlb	0	; () banked
 14374  014770  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14375  014772  6ED9               	movwf	fsr2l,c
 14376  014774  0E00               	movlw	high LCD_write_integer@convertedInt
 14377  014776  0100               	movlb	0	; () banked
 14378  014778  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14379  01477A  6EDA               	movwf	fsr2h,c
 14380  01477C  0E2F               	movlw	47
 14381  01477E  64DF               	cpfsgt	indf2,c
 14382  014780  D750               	goto	l8065
 14383                           
 14384                           ; BSR set to: 0
 14385  014782  D000               	goto	l8087
 14386  014784                     l8087:
 14387                           
 14388                           ; BSR set to: 0
 14389                           ;src\LCD_44780.c: 243: }
 14390                           ;src\LCD_44780.c: 245: }
 14391                           ;src\LCD_44780.c: 246: }
 14392                           ;src\LCD_44780.c: 247: }
 14393                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 14394  014784  0E93               	movlw	low LCD_write_integer@convertedInt
 14395  014786  0100               	movlb	0	; () banked
 14396  014788  6F83               	movwf	LCD_write_string@buffer& (0+255),b
 14397  01478A  0E00               	movlw	high LCD_write_integer@convertedInt
 14398  01478C  0100               	movlb	0	; () banked
 14399  01478E  6F84               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 14400  014790  EC30  F0B0         	call	_LCD_write_string	;wreg free
 14401  014794  0012               	return		;funcret
 14402  014796                     __end_of_LCD_write_integer:
 14403                           	opt stack 0
 14404                           tblptru	equ	0xFF8
 14405                           tblptrh	equ	0xFF7
 14406                           tblptrl	equ	0xFF6
 14407                           tablat	equ	0xFF5
 14408                           prodh	equ	0xFF4
 14409                           prodl	equ	0xFF3
 14410                           intcon	equ	0xFF2
 14411                           postinc0	equ	0xFEE
 14412                           wreg	equ	0xFE8
 14413                           indf1	equ	0xFE7
 14414                           plusw1	equ	0xFE3
 14415                           fsr1h	equ	0xFE2
 14416                           fsr1l	equ	0xFE1
 14417                           indf2	equ	0xFDF
 14418                           postinc2	equ	0xFDE
 14419                           plusw2	equ	0xFDB
 14420                           fsr2h	equ	0xFDA
 14421                           fsr2l	equ	0xFD9
 14422                           status	equ	0xFD8
 14423                           
 14424 ;; *************** function _itoa *****************
 14425 ;; Defined at:
 14426 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\itoa.c"
 14427 ;; Parameters:    Size  Location     Type
 14428 ;;  buf             2   34[BANK0 ] PTR unsigned char 
 14429 ;;		 -> LCD_write_integer@convertedInt(6), 
 14430 ;;  val             2   36[BANK0 ] int 
 14431 ;;  base            2   38[BANK0 ] int 
 14432 ;; Auto vars:     Size  Location     Type
 14433 ;;  cp              2   40[BANK0 ] PTR unsigned char 
 14434 ;;		 -> LCD_write_integer@convertedInt(6), 
 14435 ;; Return value:  Size  Location     Type
 14436 ;;                  2   34[BANK0 ] PTR unsigned char 
 14437 ;; Registers used:
 14438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14439 ;; Tracked objects:
 14440 ;;		On entry : 0/0
 14441 ;;		On exit  : 0/0
 14442 ;;		Unchanged: 0/0
 14443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14444 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14445 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14447 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14448 ;;Total ram usage:        8 bytes
 14449 ;; Hardware stack levels used:    1
 14450 ;; Hardware stack levels required when called:    5
 14451 ;; This function calls:
 14452 ;;		_utoa
 14453 ;; This function is called by:
 14454 ;;		_LCD_write_integer
 14455 ;; This function uses a non-reentrant model
 14456 ;;
 14457                           
 14458                           	psect	text33
 14459  015D44                     __ptext33:
 14460                           	opt stack 0
 14461  015D44                     _itoa:
 14462                           	opt stack 23
 14463                           
 14464                           ;incstack = 0
 14465  015D44  C082  F088         	movff	itoa@buf,itoa@cp
 14466  015D48  C083  F089         	movff	itoa@buf+1,itoa@cp+1
 14467  015D4C  0100               	movlb	0	; () banked
 14468  015D4E  AF85               	btfss	(itoa@val+1)& (0+255),7,b
 14469  015D50  D00F               	goto	l5405
 14470                           
 14471                           ; BSR set to: 0
 14472  015D52  C082  FFD9         	movff	itoa@buf,fsr2l
 14473  015D56  C083  FFDA         	movff	itoa@buf+1,fsr2h
 14474  015D5A  0E2D               	movlw	45
 14475  015D5C  6EDF               	movwf	indf2,c
 14476                           
 14477                           ; BSR set to: 0
 14478  015D5E  0100               	movlb	0	; () banked
 14479  015D60  4B82               	infsnz	itoa@buf& (0+255),f,b
 14480  015D62  2B83               	incf	(itoa@buf+1)& (0+255),f,b
 14481                           
 14482                           ; BSR set to: 0
 14483  015D64  0100               	movlb	0	; () banked
 14484  015D66  6D84               	negf	itoa@val& (0+255),b
 14485  015D68  1F85               	comf	(itoa@val+1)& (0+255),f,b
 14486  015D6A  B0D8               	btfsc	status,0,c
 14487  015D6C  2B85               	incf	(itoa@val+1)& (0+255),f,b
 14488  015D6E  D000               	goto	l5405
 14489  015D70                     l5405:
 14490                           
 14491                           ; BSR set to: 0
 14492  015D70  C082  F079         	movff	itoa@buf,utoa@buf
 14493  015D74  C083  F07A         	movff	itoa@buf+1,utoa@buf+1
 14494  015D78  C084  F07B         	movff	itoa@val,utoa@val
 14495  015D7C  C085  F07C         	movff	itoa@val+1,utoa@val+1
 14496  015D80  C086  F07D         	movff	itoa@base,utoa@base
 14497  015D84  C087  F07E         	movff	itoa@base+1,utoa@base+1
 14498  015D88  EC77  F0AA         	call	_utoa	;wreg free
 14499  015D8C  0012               	return	
 14500                           
 14501                           ;	Return value of _itoa is never used
 14502  015D8E  0012               	return		;funcret
 14503  015D90                     __end_of_itoa:
 14504                           	opt stack 0
 14505                           tblptru	equ	0xFF8
 14506                           tblptrh	equ	0xFF7
 14507                           tblptrl	equ	0xFF6
 14508                           tablat	equ	0xFF5
 14509                           prodh	equ	0xFF4
 14510                           prodl	equ	0xFF3
 14511                           intcon	equ	0xFF2
 14512                           postinc0	equ	0xFEE
 14513                           wreg	equ	0xFE8
 14514                           indf1	equ	0xFE7
 14515                           plusw1	equ	0xFE3
 14516                           fsr1h	equ	0xFE2
 14517                           fsr1l	equ	0xFE1
 14518                           indf2	equ	0xFDF
 14519                           postinc2	equ	0xFDE
 14520                           plusw2	equ	0xFDB
 14521                           fsr2h	equ	0xFDA
 14522                           fsr2l	equ	0xFD9
 14523                           status	equ	0xFD8
 14524                           
 14525 ;; *************** function _utoa *****************
 14526 ;; Defined at:
 14527 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\itoa.c"
 14528 ;; Parameters:    Size  Location     Type
 14529 ;;  buf             2   25[BANK0 ] PTR unsigned char 
 14530 ;;		 -> LCD_write_integer@convertedInt(6), 
 14531 ;;  val             2   27[BANK0 ] unsigned int 
 14532 ;;  base            2   29[BANK0 ] int 
 14533 ;; Auto vars:     Size  Location     Type
 14534 ;;  v               2   31[BANK0 ] unsigned int 
 14535 ;;  c               1   33[BANK0 ] unsigned char 
 14536 ;; Return value:  Size  Location     Type
 14537 ;;                  2   25[BANK0 ] PTR unsigned char 
 14538 ;; Registers used:
 14539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14540 ;; Tracked objects:
 14541 ;;		On entry : 0/0
 14542 ;;		On exit  : 0/0
 14543 ;;		Unchanged: 0/0
 14544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14545 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14546 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14548 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14549 ;;Total ram usage:        9 bytes
 14550 ;; Hardware stack levels used:    1
 14551 ;; Hardware stack levels required when called:    4
 14552 ;; This function calls:
 14553 ;;		___lwdiv
 14554 ;;		___lwmod
 14555 ;; This function is called by:
 14556 ;;		_itoa
 14557 ;; This function uses a non-reentrant model
 14558 ;;
 14559                           
 14560                           	psect	text34
 14561  0154EE                     __ptext34:
 14562                           	opt stack 0
 14563  0154EE                     _utoa:
 14564                           	opt stack 23
 14565                           
 14566                           ;incstack = 0
 14567  0154EE  C07B  F07F         	movff	utoa@val,utoa@v
 14568  0154F2  C07C  F080         	movff	utoa@val+1,utoa@v+1
 14569  0154F6  D000               	goto	l4927
 14570  0154F8                     l4927:
 14571  0154F8  C07F  F072         	movff	utoa@v,___lwdiv@dividend
 14572  0154FC  C080  F073         	movff	utoa@v+1,___lwdiv@dividend+1
 14573  015500  C07D  F074         	movff	utoa@base,___lwdiv@divisor
 14574  015504  C07E  F075         	movff	utoa@base+1,___lwdiv@divisor+1
 14575  015508  EC82  F0AC         	call	___lwdiv	;wreg free
 14576  01550C  C072  F07F         	movff	?___lwdiv,utoa@v
 14577  015510  C073  F080         	movff	?___lwdiv+1,utoa@v+1
 14578  015514  0100               	movlb	0	; () banked
 14579  015516  4B79               	infsnz	utoa@buf& (0+255),f,b
 14580  015518  2B7A               	incf	(utoa@buf+1)& (0+255),f,b
 14581                           
 14582                           ; BSR set to: 0
 14583  01551A  0100               	movlb	0	; () banked
 14584  01551C  517F               	movf	utoa@v& (0+255),w,b
 14585  01551E  0100               	movlb	0	; () banked
 14586  015520  1180               	iorwf	(utoa@v+1)& (0+255),w,b
 14587  015522  A4D8               	btfss	status,2,c
 14588  015524  D7E9               	goto	l4927
 14589                           
 14590                           ; BSR set to: 0
 14591                           
 14592                           ; BSR set to: 0
 14593  015526  C079  FFD9         	movff	utoa@buf,fsr2l
 14594  01552A  C07A  FFDA         	movff	utoa@buf+1,fsr2h
 14595  01552E  0E00               	movlw	0
 14596  015530  6EDF               	movwf	indf2,c
 14597                           
 14598                           ; BSR set to: 0
 14599  015532  0100               	movlb	0	; () banked
 14600  015534  0779               	decf	utoa@buf& (0+255),f,b
 14601  015536  A0D8               	btfss	status,0,c
 14602  015538  077A               	decf	(utoa@buf+1)& (0+255),f,b
 14603  01553A  D000               	goto	l4937
 14604  01553C                     l4937:
 14605                           
 14606                           ; BSR set to: 0
 14607  01553C  C07B  F072         	movff	utoa@val,___lwmod@dividend
 14608  015540  C07C  F073         	movff	utoa@val+1,___lwmod@dividend+1
 14609  015544  C07D  F074         	movff	utoa@base,___lwmod@divisor
 14610  015548  C07E  F075         	movff	utoa@base+1,___lwmod@divisor+1
 14611  01554C  ECC3  F0AC         	call	___lwmod	;wreg free
 14612  015550  0100               	movlb	0	; () banked
 14613  015552  5172               	movf	?___lwmod& (0+255),w,b
 14614  015554  0100               	movlb	0	; () banked
 14615  015556  6F81               	movwf	utoa@c& (0+255),b
 14616                           
 14617                           ; BSR set to: 0
 14618  015558  C07B  F072         	movff	utoa@val,___lwdiv@dividend
 14619  01555C  C07C  F073         	movff	utoa@val+1,___lwdiv@dividend+1
 14620  015560  C07D  F074         	movff	utoa@base,___lwdiv@divisor
 14621  015564  C07E  F075         	movff	utoa@base+1,___lwdiv@divisor+1
 14622  015568  EC82  F0AC         	call	___lwdiv	;wreg free
 14623  01556C  C072  F07B         	movff	?___lwdiv,utoa@val
 14624  015570  C073  F07C         	movff	?___lwdiv+1,utoa@val+1
 14625  015574  0E09               	movlw	9
 14626  015576  0100               	movlb	0	; () banked
 14627  015578  6581               	cpfsgt	utoa@c& (0+255),b
 14628  01557A  D003               	goto	l1560
 14629                           
 14630                           ; BSR set to: 0
 14631  01557C  0E07               	movlw	7
 14632  01557E  0100               	movlb	0	; () banked
 14633  015580  2781               	addwf	utoa@c& (0+255),f,b
 14634  015582                     l1560:
 14635                           
 14636                           ; BSR set to: 0
 14637  015582  0E30               	movlw	48
 14638  015584  0100               	movlb	0	; () banked
 14639  015586  2781               	addwf	utoa@c& (0+255),f,b
 14640                           
 14641                           ; BSR set to: 0
 14642  015588  C079  FFD9         	movff	utoa@buf,fsr2l
 14643  01558C  C07A  FFDA         	movff	utoa@buf+1,fsr2h
 14644  015590  C081  FFDF         	movff	utoa@c,indf2
 14645                           
 14646                           ; BSR set to: 0
 14647  015594  0100               	movlb	0	; () banked
 14648  015596  0779               	decf	utoa@buf& (0+255),f,b
 14649  015598  A0D8               	btfss	status,0,c
 14650  01559A  077A               	decf	(utoa@buf+1)& (0+255),f,b
 14651                           
 14652                           ; BSR set to: 0
 14653  01559C  0100               	movlb	0	; () banked
 14654  01559E  517B               	movf	utoa@val& (0+255),w,b
 14655  0155A0  0100               	movlb	0	; () banked
 14656  0155A2  117C               	iorwf	(utoa@val+1)& (0+255),w,b
 14657  0155A4  A4D8               	btfss	status,2,c
 14658  0155A6  D7CA               	goto	l4937
 14659                           
 14660                           ; BSR set to: 0
 14661                           ;	Return value of _utoa is never used
 14662                           
 14663                           ; BSR set to: 0
 14664  0155A8  0100               	movlb	0	; () banked
 14665  0155AA  4B79               	infsnz	utoa@buf& (0+255),f,b
 14666  0155AC  2B7A               	incf	(utoa@buf+1)& (0+255),f,b
 14667  0155AE  0012               	return	
 14668                           
 14669                           ; BSR set to: 0
 14670                           
 14671                           ; BSR set to: 0
 14672  0155B0  0012               	return		;funcret
 14673  0155B2                     __end_of_utoa:
 14674                           	opt stack 0
 14675                           tblptru	equ	0xFF8
 14676                           tblptrh	equ	0xFF7
 14677                           tblptrl	equ	0xFF6
 14678                           tablat	equ	0xFF5
 14679                           prodh	equ	0xFF4
 14680                           prodl	equ	0xFF3
 14681                           intcon	equ	0xFF2
 14682                           postinc0	equ	0xFEE
 14683                           wreg	equ	0xFE8
 14684                           indf1	equ	0xFE7
 14685                           plusw1	equ	0xFE3
 14686                           fsr1h	equ	0xFE2
 14687                           fsr1l	equ	0xFE1
 14688                           indf2	equ	0xFDF
 14689                           postinc2	equ	0xFDE
 14690                           plusw2	equ	0xFDB
 14691                           fsr2h	equ	0xFDA
 14692                           fsr2l	equ	0xFD9
 14693                           status	equ	0xFD8
 14694                           
 14695 ;; *************** function ___lwmod *****************
 14696 ;; Defined at:
 14697 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
 14698 ;; Parameters:    Size  Location     Type
 14699 ;;  dividend        2   18[BANK0 ] unsigned int 
 14700 ;;  divisor         2   20[BANK0 ] unsigned int 
 14701 ;; Auto vars:     Size  Location     Type
 14702 ;;  counter         1   22[BANK0 ] unsigned char 
 14703 ;; Return value:  Size  Location     Type
 14704 ;;                  2   18[BANK0 ] unsigned int 
 14705 ;; Registers used:
 14706 ;;		wreg, status,2, status,0
 14707 ;; Tracked objects:
 14708 ;;		On entry : 0/0
 14709 ;;		On exit  : 0/0
 14710 ;;		Unchanged: 0/0
 14711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14712 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14713 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14715 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14716 ;;Total ram usage:        5 bytes
 14717 ;; Hardware stack levels used:    1
 14718 ;; Hardware stack levels required when called:    3
 14719 ;; This function calls:
 14720 ;;		Nothing
 14721 ;; This function is called by:
 14722 ;;		_utoa
 14723 ;; This function uses a non-reentrant model
 14724 ;;
 14725                           
 14726                           	psect	text35
 14727  015986                     __ptext35:
 14728                           	opt stack 0
 14729  015986                     ___lwmod:
 14730                           	opt stack 23
 14731                           
 14732                           ; BSR set to: 0
 14733                           ;incstack = 0
 14734  015986  0100               	movlb	0	; () banked
 14735  015988  5174               	movf	___lwmod@divisor& (0+255),w,b
 14736  01598A  0100               	movlb	0	; () banked
 14737  01598C  1175               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14738  01598E  B4D8               	btfsc	status,2,c
 14739  015990  D02B               	goto	l1664
 14740                           
 14741                           ; BSR set to: 0
 14742  015992  0E01               	movlw	1
 14743  015994  0100               	movlb	0	; () banked
 14744  015996  6F76               	movwf	___lwmod@counter& (0+255),b
 14745  015998  D007               	goto	l4699
 14746  01599A                     l4697:
 14747                           
 14748                           ; BSR set to: 0
 14749  01599A  0100               	movlb	0	; () banked
 14750  01599C  90D8               	bcf	status,0,c
 14751  01599E  3774               	rlcf	___lwmod@divisor& (0+255),f,b
 14752  0159A0  3775               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14753  0159A2  0100               	movlb	0	; () banked
 14754  0159A4  2B76               	incf	___lwmod@counter& (0+255),f,b
 14755  0159A6  D000               	goto	l4699
 14756  0159A8                     l4699:
 14757                           
 14758                           ; BSR set to: 0
 14759  0159A8  0100               	movlb	0	; () banked
 14760  0159AA  BF75               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
 14761  0159AC  D002               	goto	l4701
 14762  0159AE  D7F5               	goto	l4697
 14763                           
 14764                           ; BSR set to: 0
 14765  0159B0  D000               	goto	l4701
 14766  0159B2                     l4701:
 14767                           
 14768                           ; BSR set to: 0
 14769  0159B2  0100               	movlb	0	; () banked
 14770  0159B4  5174               	movf	___lwmod@divisor& (0+255),w,b
 14771  0159B6  0100               	movlb	0	; () banked
 14772  0159B8  5D72               	subwf	___lwmod@dividend& (0+255),w,b
 14773  0159BA  0100               	movlb	0	; () banked
 14774  0159BC  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14775  0159BE  0100               	movlb	0	; () banked
 14776  0159C0  5973               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14777  0159C2  A0D8               	btfss	status,0,c
 14778  0159C4  D009               	goto	l4705
 14779                           
 14780                           ; BSR set to: 0
 14781  0159C6  0100               	movlb	0	; () banked
 14782  0159C8  5174               	movf	___lwmod@divisor& (0+255),w,b
 14783  0159CA  0100               	movlb	0	; () banked
 14784  0159CC  5F72               	subwf	___lwmod@dividend& (0+255),f,b
 14785  0159CE  0100               	movlb	0	; () banked
 14786  0159D0  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14787  0159D2  0100               	movlb	0	; () banked
 14788  0159D4  5B73               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14789  0159D6  D000               	goto	l4705
 14790  0159D8                     l4705:
 14791                           
 14792                           ; BSR set to: 0
 14793  0159D8  0100               	movlb	0	; () banked
 14794  0159DA  90D8               	bcf	status,0,c
 14795  0159DC  3375               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14796  0159DE  3374               	rrcf	___lwmod@divisor& (0+255),f,b
 14797                           
 14798                           ; BSR set to: 0
 14799  0159E0  0100               	movlb	0	; () banked
 14800  0159E2  2F76               	decfsz	___lwmod@counter& (0+255),f,b
 14801  0159E4  D7E6               	goto	l4701
 14802  0159E6  D000               	goto	l1664
 14803  0159E8                     l1664:
 14804                           
 14805                           ; BSR set to: 0
 14806  0159E8  C072  F072         	movff	___lwmod@dividend,?___lwmod
 14807  0159EC  C073  F073         	movff	___lwmod@dividend+1,?___lwmod+1
 14808                           
 14809                           ; BSR set to: 0
 14810  0159F0  0012               	return		;funcret
 14811  0159F2                     __end_of___lwmod:
 14812                           	opt stack 0
 14813                           tblptru	equ	0xFF8
 14814                           tblptrh	equ	0xFF7
 14815                           tblptrl	equ	0xFF6
 14816                           tablat	equ	0xFF5
 14817                           prodh	equ	0xFF4
 14818                           prodl	equ	0xFF3
 14819                           intcon	equ	0xFF2
 14820                           postinc0	equ	0xFEE
 14821                           wreg	equ	0xFE8
 14822                           indf1	equ	0xFE7
 14823                           plusw1	equ	0xFE3
 14824                           fsr1h	equ	0xFE2
 14825                           fsr1l	equ	0xFE1
 14826                           indf2	equ	0xFDF
 14827                           postinc2	equ	0xFDE
 14828                           plusw2	equ	0xFDB
 14829                           fsr2h	equ	0xFDA
 14830                           fsr2l	equ	0xFD9
 14831                           status	equ	0xFD8
 14832                           
 14833 ;; *************** function ___lwdiv *****************
 14834 ;; Defined at:
 14835 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
 14836 ;; Parameters:    Size  Location     Type
 14837 ;;  dividend        2   18[BANK0 ] unsigned int 
 14838 ;;  divisor         2   20[BANK0 ] unsigned int 
 14839 ;; Auto vars:     Size  Location     Type
 14840 ;;  quotient        2   22[BANK0 ] unsigned int 
 14841 ;;  counter         1   24[BANK0 ] unsigned char 
 14842 ;; Return value:  Size  Location     Type
 14843 ;;                  2   18[BANK0 ] unsigned int 
 14844 ;; Registers used:
 14845 ;;		wreg, status,2, status,0
 14846 ;; Tracked objects:
 14847 ;;		On entry : 0/0
 14848 ;;		On exit  : 0/0
 14849 ;;		Unchanged: 0/0
 14850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14851 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14852 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14854 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14855 ;;Total ram usage:        7 bytes
 14856 ;; Hardware stack levels used:    1
 14857 ;; Hardware stack levels required when called:    3
 14858 ;; This function calls:
 14859 ;;		Nothing
 14860 ;; This function is called by:
 14861 ;;		_utoa
 14862 ;; This function uses a non-reentrant model
 14863 ;;
 14864                           
 14865                           	psect	text36
 14866  015904                     __ptext36:
 14867                           	opt stack 0
 14868  015904                     ___lwdiv:
 14869                           	opt stack 23
 14870                           
 14871                           ; BSR set to: 0
 14872                           ;incstack = 0
 14873  015904  0E00               	movlw	0
 14874  015906  0100               	movlb	0	; () banked
 14875  015908  6F77               	movwf	(___lwdiv@quotient+1)& (0+255),b
 14876  01590A  0E00               	movlw	0
 14877  01590C  6F76               	movwf	___lwdiv@quotient& (0+255),b
 14878                           
 14879                           ; BSR set to: 0
 14880  01590E  0100               	movlb	0	; () banked
 14881  015910  5174               	movf	___lwdiv@divisor& (0+255),w,b
 14882  015912  0100               	movlb	0	; () banked
 14883  015914  1175               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 14884  015916  B4D8               	btfsc	status,2,c
 14885  015918  D031               	goto	l1654
 14886                           
 14887                           ; BSR set to: 0
 14888  01591A  0E01               	movlw	1
 14889  01591C  0100               	movlb	0	; () banked
 14890  01591E  6F78               	movwf	___lwdiv@counter& (0+255),b
 14891  015920  D007               	goto	l4679
 14892  015922                     l4677:
 14893                           
 14894                           ; BSR set to: 0
 14895  015922  0100               	movlb	0	; () banked
 14896  015924  90D8               	bcf	status,0,c
 14897  015926  3774               	rlcf	___lwdiv@divisor& (0+255),f,b
 14898  015928  3775               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 14899  01592A  0100               	movlb	0	; () banked
 14900  01592C  2B78               	incf	___lwdiv@counter& (0+255),f,b
 14901  01592E  D000               	goto	l4679
 14902  015930                     l4679:
 14903                           
 14904                           ; BSR set to: 0
 14905  015930  0100               	movlb	0	; () banked
 14906  015932  BF75               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
 14907  015934  D002               	goto	l4681
 14908  015936  D7F5               	goto	l4677
 14909                           
 14910                           ; BSR set to: 0
 14911  015938  D000               	goto	l4681
 14912  01593A                     l4681:
 14913                           
 14914                           ; BSR set to: 0
 14915  01593A  0100               	movlb	0	; () banked
 14916  01593C  90D8               	bcf	status,0,c
 14917  01593E  3776               	rlcf	___lwdiv@quotient& (0+255),f,b
 14918  015940  3777               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 14919                           
 14920                           ; BSR set to: 0
 14921  015942  0100               	movlb	0	; () banked
 14922  015944  5174               	movf	___lwdiv@divisor& (0+255),w,b
 14923  015946  0100               	movlb	0	; () banked
 14924  015948  5D72               	subwf	___lwdiv@dividend& (0+255),w,b
 14925  01594A  0100               	movlb	0	; () banked
 14926  01594C  5175               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14927  01594E  0100               	movlb	0	; () banked
 14928  015950  5973               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 14929  015952  A0D8               	btfss	status,0,c
 14930  015954  D00B               	goto	l4689
 14931                           
 14932                           ; BSR set to: 0
 14933  015956  0100               	movlb	0	; () banked
 14934  015958  5174               	movf	___lwdiv@divisor& (0+255),w,b
 14935  01595A  0100               	movlb	0	; () banked
 14936  01595C  5F72               	subwf	___lwdiv@dividend& (0+255),f,b
 14937  01595E  0100               	movlb	0	; () banked
 14938  015960  5175               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14939  015962  0100               	movlb	0	; () banked
 14940  015964  5B73               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 14941                           
 14942                           ; BSR set to: 0
 14943  015966  0100               	movlb	0	; () banked
 14944  015968  8176               	bsf	___lwdiv@quotient& (0+255),0,b
 14945  01596A  D000               	goto	l4689
 14946  01596C                     l4689:
 14947                           
 14948                           ; BSR set to: 0
 14949  01596C  0100               	movlb	0	; () banked
 14950  01596E  90D8               	bcf	status,0,c
 14951  015970  3375               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 14952  015972  3374               	rrcf	___lwdiv@divisor& (0+255),f,b
 14953                           
 14954                           ; BSR set to: 0
 14955  015974  0100               	movlb	0	; () banked
 14956  015976  2F78               	decfsz	___lwdiv@counter& (0+255),f,b
 14957  015978  D7E0               	goto	l4681
 14958  01597A  D000               	goto	l1654
 14959  01597C                     l1654:
 14960                           
 14961                           ; BSR set to: 0
 14962  01597C  C076  F072         	movff	___lwdiv@quotient,?___lwdiv
 14963  015980  C077  F073         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14964                           
 14965                           ; BSR set to: 0
 14966  015984  0012               	return		;funcret
 14967  015986                     __end_of___lwdiv:
 14968                           	opt stack 0
 14969                           tblptru	equ	0xFF8
 14970                           tblptrh	equ	0xFF7
 14971                           tblptrl	equ	0xFF6
 14972                           tablat	equ	0xFF5
 14973                           prodh	equ	0xFF4
 14974                           prodl	equ	0xFF3
 14975                           intcon	equ	0xFF2
 14976                           postinc0	equ	0xFEE
 14977                           wreg	equ	0xFE8
 14978                           indf1	equ	0xFE7
 14979                           plusw1	equ	0xFE3
 14980                           fsr1h	equ	0xFE2
 14981                           fsr1l	equ	0xFE1
 14982                           indf2	equ	0xFDF
 14983                           postinc2	equ	0xFDE
 14984                           plusw2	equ	0xFDB
 14985                           fsr2h	equ	0xFDA
 14986                           fsr2l	equ	0xFD9
 14987                           status	equ	0xFD8
 14988                           
 14989 ;; *************** function _LCD_write_string *****************
 14990 ;; Defined at:
 14991 ;;		line 194 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14992 ;; Parameters:    Size  Location     Type
 14993 ;;  buffer          2   35[BANK0 ] PTR unsigned char 
 14994 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 14995 ;; Auto vars:     Size  Location     Type
 14996 ;;		None
 14997 ;; Return value:  Size  Location     Type
 14998 ;;		None               void
 14999 ;; Registers used:
 15000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15001 ;; Tracked objects:
 15002 ;;		On entry : 0/0
 15003 ;;		On exit  : 0/0
 15004 ;;		Unchanged: 0/0
 15005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15006 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15009 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15010 ;;Total ram usage:        2 bytes
 15011 ;; Hardware stack levels used:    1
 15012 ;; Hardware stack levels required when called:    8
 15013 ;; This function calls:
 15014 ;;		_LCD_write_char
 15015 ;; This function is called by:
 15016 ;;		_LCD_write_integer
 15017 ;;		_LCD_Handler
 15018 ;; This function uses a non-reentrant model
 15019 ;;
 15020                           
 15021                           	psect	text37
 15022  016060                     __ptext37:
 15023                           	opt stack 0
 15024  016060                     _LCD_write_string:
 15025                           	opt stack 21
 15026                           
 15027                           ;src\LCD_44780.c: 197: while(*buffer){
 15028                           
 15029                           ; BSR set to: 0
 15030                           ;incstack = 0
 15031  016060  D00B               	goto	l7737
 15032  016062                     l7733:
 15033                           
 15034                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 15035  016062  C083  FFD9         	movff	LCD_write_string@buffer,fsr2l
 15036  016066  C084  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 15037  01606A  50DF               	movf	indf2,w,c
 15038  01606C  EC37  F0AC         	call	_LCD_write_char
 15039                           
 15040                           ;src\LCD_44780.c: 202: buffer++;
 15041  016070  0100               	movlb	0	; () banked
 15042  016072  4B83               	infsnz	LCD_write_string@buffer& (0+255),f,b
 15043  016074  2B84               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 15044  016076  D000               	goto	l7737
 15045  016078                     l7737:
 15046  016078  C083  FFD9         	movff	LCD_write_string@buffer,fsr2l
 15047  01607C  C084  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 15048  016080  50DF               	movf	indf2,w,c
 15049  016082  A4D8               	btfss	status,2,c
 15050  016084  D7EE               	goto	l7733
 15051  016086  0012               	return		;funcret
 15052  016088                     __end_of_LCD_write_string:
 15053                           	opt stack 0
 15054                           tblptru	equ	0xFF8
 15055                           tblptrh	equ	0xFF7
 15056                           tblptrl	equ	0xFF6
 15057                           tablat	equ	0xFF5
 15058                           prodh	equ	0xFF4
 15059                           prodl	equ	0xFF3
 15060                           intcon	equ	0xFF2
 15061                           postinc0	equ	0xFEE
 15062                           wreg	equ	0xFE8
 15063                           indf1	equ	0xFE7
 15064                           plusw1	equ	0xFE3
 15065                           fsr1h	equ	0xFE2
 15066                           fsr1l	equ	0xFE1
 15067                           indf2	equ	0xFDF
 15068                           postinc2	equ	0xFDE
 15069                           plusw2	equ	0xFDB
 15070                           fsr2h	equ	0xFDA
 15071                           fsr2l	equ	0xFD9
 15072                           status	equ	0xFD8
 15073                           
 15074 ;; *************** function _LCD_goto_xy *****************
 15075 ;; Defined at:
 15076 ;;		line 136 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15077 ;; Parameters:    Size  Location     Type
 15078 ;;  x               1    wreg     unsigned char 
 15079 ;;  y               1   33[BANK0 ] unsigned char 
 15080 ;; Auto vars:     Size  Location     Type
 15081 ;;  x               1   34[BANK0 ] unsigned char 
 15082 ;; Return value:  Size  Location     Type
 15083 ;;		None               void
 15084 ;; Registers used:
 15085 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15086 ;; Tracked objects:
 15087 ;;		On entry : 0/0
 15088 ;;		On exit  : 0/0
 15089 ;;		Unchanged: 0/0
 15090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15091 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15094 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15095 ;;Total ram usage:        2 bytes
 15096 ;; Hardware stack levels used:    1
 15097 ;; Hardware stack levels required when called:    8
 15098 ;; This function calls:
 15099 ;;		_LCD_goto_line
 15100 ;;		_LCD_shift_cursor
 15101 ;; This function is called by:
 15102 ;;		_LCD_Handler
 15103 ;; This function uses a non-reentrant model
 15104 ;;
 15105                           
 15106                           	psect	text38
 15107  0160F0                     __ptext38:
 15108                           	opt stack 0
 15109  0160F0                     _LCD_goto_xy:
 15110                           	opt stack 21
 15111                           
 15112                           ;incstack = 0
 15113                           ;LCD_goto_xy@x stored from wreg
 15114  0160F0  0100               	movlb	0	; () banked
 15115  0160F2  6F82               	movwf	LCD_goto_xy@x& (0+255),b
 15116                           
 15117                           ; BSR set to: 0
 15118                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 15119  0160F4  0100               	movlb	0	; () banked
 15120  0160F6  5181               	movf	LCD_goto_xy@y& (0+255),w,b
 15121  0160F8  EC35  F0A9         	call	_LCD_goto_line
 15122                           
 15123                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 15124  0160FC  0100               	movlb	0	; () banked
 15125  0160FE  0582               	decf	LCD_goto_xy@x& (0+255),w,b
 15126  016100  0100               	movlb	0	; () banked
 15127  016102  6F7E               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 15128  016104  0E01               	movlw	1
 15129  016106  EC55  F0AE         	call	_LCD_shift_cursor
 15130  01610A  0012               	return		;funcret
 15131  01610C                     __end_of_LCD_goto_xy:
 15132                           	opt stack 0
 15133                           tblptru	equ	0xFF8
 15134                           tblptrh	equ	0xFF7
 15135                           tblptrl	equ	0xFF6
 15136                           tablat	equ	0xFF5
 15137                           prodh	equ	0xFF4
 15138                           prodl	equ	0xFF3
 15139                           intcon	equ	0xFF2
 15140                           postinc0	equ	0xFEE
 15141                           wreg	equ	0xFE8
 15142                           indf1	equ	0xFE7
 15143                           plusw1	equ	0xFE3
 15144                           fsr1h	equ	0xFE2
 15145                           fsr1l	equ	0xFE1
 15146                           indf2	equ	0xFDF
 15147                           postinc2	equ	0xFDE
 15148                           plusw2	equ	0xFDB
 15149                           fsr2h	equ	0xFDA
 15150                           fsr2l	equ	0xFD9
 15151                           status	equ	0xFD8
 15152                           
 15153 ;; *************** function _LCD_shift_cursor *****************
 15154 ;; Defined at:
 15155 ;;		line 98 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15156 ;; Parameters:    Size  Location     Type
 15157 ;;  shift           1    wreg     unsigned char 
 15158 ;;  number_of_sh    1   30[BANK0 ] unsigned char 
 15159 ;; Auto vars:     Size  Location     Type
 15160 ;;  shift           1   31[BANK0 ] unsigned char 
 15161 ;;  i               1   32[BANK0 ] unsigned char 
 15162 ;; Return value:  Size  Location     Type
 15163 ;;		None               void
 15164 ;; Registers used:
 15165 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15166 ;; Tracked objects:
 15167 ;;		On entry : 0/0
 15168 ;;		On exit  : 0/0
 15169 ;;		Unchanged: 0/0
 15170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15171 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15172 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15174 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15175 ;;Total ram usage:        3 bytes
 15176 ;; Hardware stack levels used:    1
 15177 ;; Hardware stack levels required when called:    7
 15178 ;; This function calls:
 15179 ;;		_LCD_send_command
 15180 ;; This function is called by:
 15181 ;;		_LCD_goto_xy
 15182 ;; This function uses a non-reentrant model
 15183 ;;
 15184                           
 15185                           	psect	text39
 15186  015CAA                     __ptext39:
 15187                           	opt stack 0
 15188  015CAA                     _LCD_shift_cursor:
 15189                           	opt stack 21
 15190                           
 15191                           ;incstack = 0
 15192                           ;LCD_shift_cursor@shift stored from wreg
 15193  015CAA  0100               	movlb	0	; () banked
 15194  015CAC  6F7F               	movwf	LCD_shift_cursor@shift& (0+255),b
 15195                           
 15196                           ; BSR set to: 0
 15197                           ;src\LCD_44780.c: 100: unsigned char i;
 15198                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 15199  015CAE  0E00               	movlw	0
 15200  015CB0  0100               	movlb	0	; () banked
 15201  015CB2  6F80               	movwf	LCD_shift_cursor@i& (0+255),b
 15202  015CB4  D01A               	goto	l7717
 15203  015CB6                     l7713:
 15204                           
 15205                           ; BSR set to: 0
 15206                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 15207  015CB6  0E00               	movlw	0
 15208  015CB8  0100               	movlb	0	; () banked
 15209  015CBA  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15210  015CBC  0E00               	movlw	0
 15211  015CBE  0100               	movlb	0	; () banked
 15212  015CC0  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15213  015CC2  0E01               	movlw	1
 15214  015CC4  0100               	movlb	0	; () banked
 15215  015CC6  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15216  015CC8  0E00               	movlw	0
 15217  015CCA  EC28  F0AF         	call	_LCD_send_command
 15218                           
 15219                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 15220  015CCE  C07F  F07A         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 15221  015CD2  0E00               	movlw	0
 15222  015CD4  0100               	movlb	0	; () banked
 15223  015CD6  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15224  015CD8  0E00               	movlw	0
 15225  015CDA  0100               	movlb	0	; () banked
 15226  015CDC  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15227  015CDE  0E00               	movlw	0
 15228  015CE0  EC28  F0AF         	call	_LCD_send_command
 15229  015CE4  0100               	movlb	0	; () banked
 15230  015CE6  2B80               	incf	LCD_shift_cursor@i& (0+255),f,b
 15231  015CE8  D000               	goto	l7717
 15232  015CEA                     l7717:
 15233                           
 15234                           ; BSR set to: 0
 15235  015CEA  0100               	movlb	0	; () banked
 15236  015CEC  517E               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 15237  015CEE  0100               	movlb	0	; () banked
 15238  015CF0  5D80               	subwf	LCD_shift_cursor@i& (0+255),w,b
 15239  015CF2  A0D8               	btfss	status,0,c
 15240  015CF4  D7E0               	goto	l7713
 15241                           
 15242                           ; BSR set to: 0
 15243                           
 15244                           ; BSR set to: 0
 15245  015CF6  0012               	return		;funcret
 15246  015CF8                     __end_of_LCD_shift_cursor:
 15247                           	opt stack 0
 15248                           tblptru	equ	0xFF8
 15249                           tblptrh	equ	0xFF7
 15250                           tblptrl	equ	0xFF6
 15251                           tablat	equ	0xFF5
 15252                           prodh	equ	0xFF4
 15253                           prodl	equ	0xFF3
 15254                           intcon	equ	0xFF2
 15255                           postinc0	equ	0xFEE
 15256                           wreg	equ	0xFE8
 15257                           indf1	equ	0xFE7
 15258                           plusw1	equ	0xFE3
 15259                           fsr1h	equ	0xFE2
 15260                           fsr1l	equ	0xFE1
 15261                           indf2	equ	0xFDF
 15262                           postinc2	equ	0xFDE
 15263                           plusw2	equ	0xFDB
 15264                           fsr2h	equ	0xFDA
 15265                           fsr2l	equ	0xFD9
 15266                           status	equ	0xFD8
 15267                           
 15268 ;; *************** function _LCD_Gap *****************
 15269 ;; Defined at:
 15270 ;;		line 566 in file "RemoteCan.c"
 15271 ;; Parameters:    Size  Location     Type
 15272 ;;		None
 15273 ;; Auto vars:     Size  Location     Type
 15274 ;;		None
 15275 ;; Return value:  Size  Location     Type
 15276 ;;		None               void
 15277 ;; Registers used:
 15278 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15279 ;; Tracked objects:
 15280 ;;		On entry : 0/0
 15281 ;;		On exit  : 0/0
 15282 ;;		Unchanged: 0/0
 15283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15288 ;;Total ram usage:        0 bytes
 15289 ;; Hardware stack levels used:    1
 15290 ;; Hardware stack levels required when called:    9
 15291 ;; This function calls:
 15292 ;;		_LCD_clear
 15293 ;;		_LCD_goto_line
 15294 ;;		_LCD_initialize
 15295 ;;		_LCD_write_message
 15296 ;; This function is called by:
 15297 ;;		_main
 15298 ;; This function uses a non-reentrant model
 15299 ;;
 15300                           
 15301                           	psect	text40
 15302  015ABA                     __ptext40:
 15303                           	opt stack 0
 15304  015ABA                     _LCD_Gap:
 15305                           	opt stack 21
 15306                           
 15307                           ;RemoteCan.c: 567: LCD_initialize(16);
 15308                           
 15309                           ; BSR set to: 0
 15310                           ;incstack = 0
 15311  015ABA  0E10               	movlw	16
 15312  015ABC  EC28  F0A6         	call	_LCD_initialize
 15313                           
 15314                           ;RemoteCan.c: 568: LCD_clear();
 15315  015AC0  EC00  F0B0         	call	_LCD_clear	;wreg free
 15316                           
 15317                           ;RemoteCan.c: 569: LCD_goto_line(1);
 15318  015AC4  0E01               	movlw	1
 15319  015AC6  EC35  F0A9         	call	_LCD_goto_line
 15320                           
 15321                           ;RemoteCan.c: 570: LCD_write_message("= PARKING MESSAGES =");
 15322  015ACA  0E16               	movlw	low STR_20
 15323  015ACC  0100               	movlb	0	; () banked
 15324  015ACE  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15325  015AD0  0EFF               	movlw	high STR_20
 15326  015AD2  0100               	movlb	0	; () banked
 15327  015AD4  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15328  015AD6  EC99  F0AF         	call	_LCD_write_message	;wreg free
 15329                           
 15330                           ;RemoteCan.c: 571: LCD_goto_line(2);
 15331  015ADA  0E02               	movlw	2
 15332  015ADC  EC35  F0A9         	call	_LCD_goto_line
 15333                           
 15334                           ;RemoteCan.c: 572: LCD_write_message(" Parking space FOUND");
 15335  015AE0  0E7F               	movlw	low STR_21
 15336  015AE2  0100               	movlb	0	; () banked
 15337  015AE4  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15338  015AE6  0EFF               	movlw	high STR_21
 15339  015AE8  0100               	movlb	0	; () banked
 15340  015AEA  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15341  015AEC  EC99  F0AF         	call	_LCD_write_message	;wreg free
 15342                           
 15343                           ;RemoteCan.c: 573: LCD_goto_line(3);
 15344  015AF0  0E03               	movlw	3
 15345  015AF2  EC35  F0A9         	call	_LCD_goto_line
 15346                           
 15347                           ;RemoteCan.c: 574: LCD_write_message("->  KEEP MOVING   <-");
 15348  015AF6  0EC2               	movlw	low STR_22
 15349  015AF8  0100               	movlb	0	; () banked
 15350  015AFA  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15351  015AFC  0EFE               	movlw	high STR_22
 15352  015AFE  0100               	movlb	0	; () banked
 15353  015B00  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15354  015B02  EC99  F0AF         	call	_LCD_write_message	;wreg free
 15355                           
 15356                           ;RemoteCan.c: 575: LCD_goto_line(4);
 15357  015B06  0E04               	movlw	4
 15358  015B08  EC35  F0A9         	call	_LCD_goto_line
 15359                           
 15360                           ;RemoteCan.c: 576: LCD_write_message(" until next message ");
 15361  015B0C  0E59               	movlw	low STR_23
 15362  015B0E  0100               	movlb	0	; () banked
 15363  015B10  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15364  015B12  0EFE               	movlw	high STR_23
 15365  015B14  0100               	movlb	0	; () banked
 15366  015B16  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15367  015B18  EC99  F0AF         	call	_LCD_write_message	;wreg free
 15368  015B1C  0012               	return		;funcret
 15369  015B1E                     __end_of_LCD_Gap:
 15370                           	opt stack 0
 15371                           tblptru	equ	0xFF8
 15372                           tblptrh	equ	0xFF7
 15373                           tblptrl	equ	0xFF6
 15374                           tablat	equ	0xFF5
 15375                           prodh	equ	0xFF4
 15376                           prodl	equ	0xFF3
 15377                           intcon	equ	0xFF2
 15378                           postinc0	equ	0xFEE
 15379                           wreg	equ	0xFE8
 15380                           indf1	equ	0xFE7
 15381                           plusw1	equ	0xFE3
 15382                           fsr1h	equ	0xFE2
 15383                           fsr1l	equ	0xFE1
 15384                           indf2	equ	0xFDF
 15385                           postinc2	equ	0xFDE
 15386                           plusw2	equ	0xFDB
 15387                           fsr2h	equ	0xFDA
 15388                           fsr2l	equ	0xFD9
 15389                           status	equ	0xFD8
 15390                           
 15391 ;; *************** function _LCD_Error *****************
 15392 ;; Defined at:
 15393 ;;		line 618 in file "RemoteCan.c"
 15394 ;; Parameters:    Size  Location     Type
 15395 ;;		None
 15396 ;; Auto vars:     Size  Location     Type
 15397 ;;		None
 15398 ;; Return value:  Size  Location     Type
 15399 ;;		None               void
 15400 ;; Registers used:
 15401 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15402 ;; Tracked objects:
 15403 ;;		On entry : 0/0
 15404 ;;		On exit  : 0/0
 15405 ;;		Unchanged: 0/0
 15406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15411 ;;Total ram usage:        0 bytes
 15412 ;; Hardware stack levels used:    1
 15413 ;; Hardware stack levels required when called:    9
 15414 ;; This function calls:
 15415 ;;		_LCD_clear
 15416 ;;		_LCD_goto_line
 15417 ;;		_LCD_initialize
 15418 ;;		_LCD_write_message
 15419 ;; This function is called by:
 15420 ;;		_main
 15421 ;; This function uses a non-reentrant model
 15422 ;;
 15423                           
 15424                           	psect	text41
 15425  015B1E                     __ptext41:
 15426                           	opt stack 0
 15427  015B1E                     _LCD_Error:
 15428                           	opt stack 21
 15429                           
 15430                           ;RemoteCan.c: 619: LCD_initialize(16);
 15431                           
 15432                           ;incstack = 0
 15433  015B1E  0E10               	movlw	16
 15434  015B20  EC28  F0A6         	call	_LCD_initialize
 15435                           
 15436                           ;RemoteCan.c: 620: LCD_clear();
 15437  015B24  EC00  F0B0         	call	_LCD_clear	;wreg free
 15438                           
 15439                           ;RemoteCan.c: 621: LCD_goto_line(1);
 15440  015B28  0E01               	movlw	1
 15441  015B2A  EC35  F0A9         	call	_LCD_goto_line
 15442                           
 15443                           ;RemoteCan.c: 622: LCD_write_message("= PARKING MESSAGES =");
 15444  015B2E  0E16               	movlw	low STR_20
 15445  015B30  0100               	movlb	0	; () banked
 15446  015B32  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15447  015B34  0EFF               	movlw	high STR_20
 15448  015B36  0100               	movlb	0	; () banked
 15449  015B38  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15450  015B3A  EC99  F0AF         	call	_LCD_write_message	;wreg free
 15451                           
 15452                           ;RemoteCan.c: 623: LCD_goto_line(2);
 15453  015B3E  0E02               	movlw	2
 15454  015B40  EC35  F0A9         	call	_LCD_goto_line
 15455                           
 15456                           ;RemoteCan.c: 624: LCD_write_message(" Parking procedures ");
 15457  015B44  0E98               	movlw	low STR_33
 15458  015B46  0100               	movlb	0	; () banked
 15459  015B48  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15460  015B4A  0EFE               	movlw	high STR_33
 15461  015B4C  0100               	movlb	0	; () banked
 15462  015B4E  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15463  015B50  EC99  F0AF         	call	_LCD_write_message	;wreg free
 15464                           
 15465                           ;RemoteCan.c: 625: LCD_goto_line(3);
 15466  015B54  0E03               	movlw	3
 15467  015B56  EC35  F0A9         	call	_LCD_goto_line
 15468                           
 15469                           ;RemoteCan.c: 626: LCD_write_message("       FAILED!      ");
 15470  015B5A  0E9C               	movlw	low STR_38
 15471  015B5C  0100               	movlb	0	; () banked
 15472  015B5E  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15473  015B60  0EFD               	movlw	high STR_38
 15474  015B62  0100               	movlb	0	; () banked
 15475  015B64  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15476  015B66  EC99  F0AF         	call	_LCD_write_message	;wreg free
 15477                           
 15478                           ;RemoteCan.c: 627: LCD_goto_line(4);
 15479  015B6A  0E04               	movlw	4
 15480  015B6C  EC35  F0A9         	call	_LCD_goto_line
 15481                           
 15482                           ;RemoteCan.c: 628: LCD_write_message("   due to an error  ");
 15483  015B70  0E2F               	movlw	low STR_39
 15484  015B72  0100               	movlb	0	; () banked
 15485  015B74  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15486  015B76  0EFE               	movlw	high STR_39
 15487  015B78  0100               	movlb	0	; () banked
 15488  015B7A  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15489  015B7C  EC99  F0AF         	call	_LCD_write_message	;wreg free
 15490  015B80  0012               	return		;funcret
 15491  015B82                     __end_of_LCD_Error:
 15492                           	opt stack 0
 15493                           tblptru	equ	0xFF8
 15494                           tblptrh	equ	0xFF7
 15495                           tblptrl	equ	0xFF6
 15496                           tablat	equ	0xFF5
 15497                           prodh	equ	0xFF4
 15498                           prodl	equ	0xFF3
 15499                           intcon	equ	0xFF2
 15500                           postinc0	equ	0xFEE
 15501                           wreg	equ	0xFE8
 15502                           indf1	equ	0xFE7
 15503                           plusw1	equ	0xFE3
 15504                           fsr1h	equ	0xFE2
 15505                           fsr1l	equ	0xFE1
 15506                           indf2	equ	0xFDF
 15507                           postinc2	equ	0xFDE
 15508                           plusw2	equ	0xFDB
 15509                           fsr2h	equ	0xFDA
 15510                           fsr2l	equ	0xFD9
 15511                           status	equ	0xFD8
 15512                           
 15513 ;; *************** function _LCD_End *****************
 15514 ;; Defined at:
 15515 ;;		line 605 in file "RemoteCan.c"
 15516 ;; Parameters:    Size  Location     Type
 15517 ;;		None
 15518 ;; Auto vars:     Size  Location     Type
 15519 ;;		None
 15520 ;; Return value:  Size  Location     Type
 15521 ;;		None               void
 15522 ;; Registers used:
 15523 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15524 ;; Tracked objects:
 15525 ;;		On entry : 0/0
 15526 ;;		On exit  : 0/0
 15527 ;;		Unchanged: 0/0
 15528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15533 ;;Total ram usage:        0 bytes
 15534 ;; Hardware stack levels used:    1
 15535 ;; Hardware stack levels required when called:    9
 15536 ;; This function calls:
 15537 ;;		_LCD_clear
 15538 ;;		_LCD_goto_line
 15539 ;;		_LCD_initialize
 15540 ;;		_LCD_write_message
 15541 ;; This function is called by:
 15542 ;;		_main
 15543 ;; This function uses a non-reentrant model
 15544 ;;
 15545                           
 15546                           	psect	text42
 15547  015B82                     __ptext42:
 15548                           	opt stack 0
 15549  015B82                     _LCD_End:
 15550                           	opt stack 21
 15551                           
 15552                           ;RemoteCan.c: 606: LCD_initialize(16);
 15553                           
 15554                           ;incstack = 0
 15555  015B82  0E10               	movlw	16
 15556  015B84  EC28  F0A6         	call	_LCD_initialize
 15557                           
 15558                           ;RemoteCan.c: 607: LCD_clear();
 15559  015B88  EC00  F0B0         	call	_LCD_clear	;wreg free
 15560                           
 15561                           ;RemoteCan.c: 608: LCD_goto_line(1);
 15562  015B8C  0E01               	movlw	1
 15563  015B8E  EC35  F0A9         	call	_LCD_goto_line
 15564                           
 15565                           ;RemoteCan.c: 609: LCD_write_message("= PARKING MESSAGES =");
 15566  015B92  0E16               	movlw	low STR_20
 15567  015B94  0100               	movlb	0	; () banked
 15568  015B96  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15569  015B98  0EFF               	movlw	high STR_20
 15570  015B9A  0100               	movlb	0	; () banked
 15571  015B9C  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15572  015B9E  EC99  F0AF         	call	_LCD_write_message	;wreg free
 15573                           
 15574                           ;RemoteCan.c: 610: LCD_goto_line(2);
 15575  015BA2  0E02               	movlw	2
 15576  015BA4  EC35  F0A9         	call	_LCD_goto_line
 15577                           
 15578                           ;RemoteCan.c: 611: LCD_write_message(" Parking procedures ");
 15579  015BA8  0E98               	movlw	low STR_33
 15580  015BAA  0100               	movlb	0	; () banked
 15581  015BAC  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15582  015BAE  0EFE               	movlw	high STR_33
 15583  015BB0  0100               	movlb	0	; () banked
 15584  015BB2  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15585  015BB4  EC99  F0AF         	call	_LCD_write_message	;wreg free
 15586                           
 15587                           ;RemoteCan.c: 612: LCD_goto_line(3);
 15588  015BB8  0E03               	movlw	3
 15589  015BBA  EC35  F0A9         	call	_LCD_goto_line
 15590                           
 15591                           ;RemoteCan.c: 613: LCD_write_message("    SUCCESSFULLY    ");
 15592  015BBE  0EC6               	movlw	low STR_34
 15593  015BC0  0100               	movlb	0	; () banked
 15594  015BC2  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15595  015BC4  0EFD               	movlw	high STR_34
 15596  015BC6  0100               	movlb	0	; () banked
 15597  015BC8  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15598  015BCA  EC99  F0AF         	call	_LCD_write_message	;wreg free
 15599                           
 15600                           ;RemoteCan.c: 614: LCD_goto_line(4);
 15601  015BCE  0E04               	movlw	4
 15602  015BD0  EC35  F0A9         	call	_LCD_goto_line
 15603                           
 15604                           ;RemoteCan.c: 615: LCD_write_message("     COMPLETED!     ");
 15605  015BD4  0EB1               	movlw	low STR_35
 15606  015BD6  0100               	movlb	0	; () banked
 15607  015BD8  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15608  015BDA  0EFD               	movlw	high STR_35
 15609  015BDC  0100               	movlb	0	; () banked
 15610  015BDE  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15611  015BE0  EC99  F0AF         	call	_LCD_write_message	;wreg free
 15612  015BE4  0012               	return		;funcret
 15613  015BE6                     __end_of_LCD_End:
 15614                           	opt stack 0
 15615                           tblptru	equ	0xFF8
 15616                           tblptrh	equ	0xFF7
 15617                           tblptrl	equ	0xFF6
 15618                           tablat	equ	0xFF5
 15619                           prodh	equ	0xFF4
 15620                           prodl	equ	0xFF3
 15621                           intcon	equ	0xFF2
 15622                           postinc0	equ	0xFEE
 15623                           wreg	equ	0xFE8
 15624                           indf1	equ	0xFE7
 15625                           plusw1	equ	0xFE3
 15626                           fsr1h	equ	0xFE2
 15627                           fsr1l	equ	0xFE1
 15628                           indf2	equ	0xFDF
 15629                           postinc2	equ	0xFDE
 15630                           plusw2	equ	0xFDB
 15631                           fsr2h	equ	0xFDA
 15632                           fsr2l	equ	0xFD9
 15633                           status	equ	0xFD8
 15634                           
 15635 ;; *************** function _Joystick_Polling *****************
 15636 ;; Defined at:
 15637 ;;		line 674 in file "RemoteCan.c"
 15638 ;; Parameters:    Size  Location     Type
 15639 ;;		None
 15640 ;; Auto vars:     Size  Location     Type
 15641 ;;  i               1   18[BANK0 ] unsigned char 
 15642 ;; Return value:  Size  Location     Type
 15643 ;;		None               void
 15644 ;; Registers used:
 15645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15646 ;; Tracked objects:
 15647 ;;		On entry : 0/0
 15648 ;;		On exit  : 0/0
 15649 ;;		Unchanged: 0/0
 15650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15652 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15654 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15655 ;;Total ram usage:        1 bytes
 15656 ;; Hardware stack levels used:    1
 15657 ;; Hardware stack levels required when called:    3
 15658 ;; This function calls:
 15659 ;;		Nothing
 15660 ;; This function is called by:
 15661 ;;		_main
 15662 ;; This function uses a non-reentrant model
 15663 ;;
 15664                           
 15665                           	psect	text43
 15666  015DD2                     __ptext43:
 15667                           	opt stack 0
 15668  015DD2                     _Joystick_Polling:
 15669                           	opt stack 27
 15670                           
 15671                           ;RemoteCan.c: 675: for (unsigned char i = 0; i < 2; i++) {
 15672                           
 15673                           ;incstack = 0
 15674  015DD2  0E00               	movlw	0
 15675  015DD4  0100               	movlb	0	; () banked
 15676  015DD6  6F72               	movwf	Joystick_Polling@i& (0+255),b
 15677                           
 15678                           ; BSR set to: 0
 15679  015DD8  0E01               	movlw	1
 15680  015DDA  0100               	movlb	0	; () banked
 15681  015DDC  6572               	cpfsgt	Joystick_Polling@i& (0+255),b
 15682  015DDE  D002               	goto	l967
 15683  015DE0  0012               	return	
 15684                           
 15685                           ; BSR set to: 0
 15686  015DE2  0012               	return	
 15687  015DE4                     l967:
 15688                           
 15689                           ; BSR set to: 0
 15690                           ;RemoteCan.c: 676: ADCON0bits.GO = 1;
 15691  015DE4  82C2               	bsf	4034,1,c	;volatile
 15692                           
 15693                           ;RemoteCan.c: 677: while (ADCON0bits.GO);
 15694  015DE6  D000               	goto	l969
 15695  015DE8                     l969:
 15696  015DE8  B2C2               	btfsc	4034,1,c	;volatile
 15697  015DEA  D7FE               	goto	l969
 15698                           
 15699                           ;RemoteCan.c: 678: JoystickValues[i] = ADRESH;
 15700  015DEC  0100               	movlb	0	; () banked
 15701  015DEE  5172               	movf	Joystick_Polling@i& (0+255),w,b
 15702  015DF0  0D01               	mullw	1
 15703  015DF2  0ED9               	movlw	low _JoystickValues
 15704  015DF4  24F3               	addwf	prodl,w,c
 15705  015DF6  6ED9               	movwf	fsr2l,c
 15706  015DF8  0E00               	movlw	high _JoystickValues
 15707  015DFA  20F4               	addwfc	prodh,w,c
 15708  015DFC  6EDA               	movwf	fsr2h,c
 15709  015DFE  CFC4 FFDF          	movff	4036,indf2	;volatile
 15710                           
 15711                           ; BSR set to: 0
 15712                           ;RemoteCan.c: 679: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 15713  015E02  74C2               	btg	4034,2,c	;volatile
 15714                           
 15715                           ; BSR set to: 0
 15716  015E04  0100               	movlb	0	; () banked
 15717  015E06  2B72               	incf	Joystick_Polling@i& (0+255),f,b
 15718                           
 15719                           ; BSR set to: 0
 15720  015E08  0E01               	movlw	1
 15721  015E0A  0100               	movlb	0	; () banked
 15722  015E0C  6572               	cpfsgt	Joystick_Polling@i& (0+255),b
 15723  015E0E  D7EA               	goto	l967
 15724  015E10  0012               	return	
 15725                           
 15726                           ; BSR set to: 0
 15727                           
 15728                           ; BSR set to: 0
 15729  015E12  0012               	return		;funcret
 15730  015E14                     __end_of_Joystick_Polling:
 15731                           	opt stack 0
 15732                           tblptru	equ	0xFF8
 15733                           tblptrh	equ	0xFF7
 15734                           tblptrl	equ	0xFF6
 15735                           tablat	equ	0xFF5
 15736                           prodh	equ	0xFF4
 15737                           prodl	equ	0xFF3
 15738                           intcon	equ	0xFF2
 15739                           postinc0	equ	0xFEE
 15740                           wreg	equ	0xFE8
 15741                           indf1	equ	0xFE7
 15742                           plusw1	equ	0xFE3
 15743                           fsr1h	equ	0xFE2
 15744                           fsr1l	equ	0xFE1
 15745                           indf2	equ	0xFDF
 15746                           postinc2	equ	0xFDE
 15747                           plusw2	equ	0xFDB
 15748                           fsr2h	equ	0xFDA
 15749                           fsr2l	equ	0xFD9
 15750                           status	equ	0xFD8
 15751                           
 15752 ;; *************** function _F2_Button_Polling *****************
 15753 ;; Defined at:
 15754 ;;		line 664 in file "RemoteCan.c"
 15755 ;; Parameters:    Size  Location     Type
 15756 ;;		None
 15757 ;; Auto vars:     Size  Location     Type
 15758 ;;		None
 15759 ;; Return value:  Size  Location     Type
 15760 ;;		None               void
 15761 ;; Registers used:
 15762 ;;		None
 15763 ;; Tracked objects:
 15764 ;;		On entry : 0/0
 15765 ;;		On exit  : 0/0
 15766 ;;		Unchanged: 0/0
 15767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15772 ;;Total ram usage:        0 bytes
 15773 ;; Hardware stack levels used:    1
 15774 ;; Hardware stack levels required when called:    3
 15775 ;; This function calls:
 15776 ;;		Nothing
 15777 ;; This function is called by:
 15778 ;;		_main
 15779 ;; This function uses a non-reentrant model
 15780 ;;
 15781                           
 15782                           	psect	text44
 15783  016152                     __ptext44:
 15784                           	opt stack 0
 15785  016152                     _F2_Button_Polling:
 15786                           	opt stack 27
 15787                           
 15788                           ;RemoteCan.c: 665: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 15789                           
 15790                           ; BSR set to: 0
 15791                           ;incstack = 0
 15792  016152  A281               	btfss	3969,1,c	;volatile
 15793  016154  D002               	goto	l962
 15794  016156  B64C               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15795  016158  0012               	return	
 15796  01615A                     l962:
 15797                           
 15798                           ;RemoteCan.c: 666: wait_low_3 = 0;
 15799  01615A  964C               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15800                           
 15801                           ;RemoteCan.c: 667: if (PORTBbits.RB1 == 1) {
 15802  01615C  A281               	btfss	3969,1,c	;volatile
 15803  01615E  0012               	return	
 15804                           
 15805                           ;RemoteCan.c: 668: F2_switch = ~F2_switch;
 15806  016160  744A               	btg	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 15807                           
 15808                           ;RemoteCan.c: 669: wait_low_3 = 1;
 15809  016162  864C               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15810  016164  0012               	return	
 15811  016166  0012               	return		;funcret
 15812  016168                     __end_of_F2_Button_Polling:
 15813                           	opt stack 0
 15814                           tblptru	equ	0xFF8
 15815                           tblptrh	equ	0xFF7
 15816                           tblptrl	equ	0xFF6
 15817                           tablat	equ	0xFF5
 15818                           prodh	equ	0xFF4
 15819                           prodl	equ	0xFF3
 15820                           intcon	equ	0xFF2
 15821                           postinc0	equ	0xFEE
 15822                           wreg	equ	0xFE8
 15823                           indf1	equ	0xFE7
 15824                           plusw1	equ	0xFE3
 15825                           fsr1h	equ	0xFE2
 15826                           fsr1l	equ	0xFE1
 15827                           indf2	equ	0xFDF
 15828                           postinc2	equ	0xFDE
 15829                           plusw2	equ	0xFDB
 15830                           fsr2h	equ	0xFDA
 15831                           fsr2l	equ	0xFD9
 15832                           status	equ	0xFD8
 15833                           
 15834 ;; *************** function _F1_Button_Polling *****************
 15835 ;; Defined at:
 15836 ;;		line 654 in file "RemoteCan.c"
 15837 ;; Parameters:    Size  Location     Type
 15838 ;;		None
 15839 ;; Auto vars:     Size  Location     Type
 15840 ;;		None
 15841 ;; Return value:  Size  Location     Type
 15842 ;;		None               void
 15843 ;; Registers used:
 15844 ;;		None
 15845 ;; Tracked objects:
 15846 ;;		On entry : 0/0
 15847 ;;		On exit  : 0/0
 15848 ;;		Unchanged: 0/0
 15849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15854 ;;Total ram usage:        0 bytes
 15855 ;; Hardware stack levels used:    1
 15856 ;; Hardware stack levels required when called:    3
 15857 ;; This function calls:
 15858 ;;		Nothing
 15859 ;; This function is called by:
 15860 ;;		_main
 15861 ;; This function uses a non-reentrant model
 15862 ;;
 15863                           
 15864                           	psect	text45
 15865  016168                     __ptext45:
 15866                           	opt stack 0
 15867  016168                     _F1_Button_Polling:
 15868                           	opt stack 27
 15869                           
 15870                           ;RemoteCan.c: 655: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 15871                           
 15872                           ;incstack = 0
 15873  016168  A881               	btfss	3969,4,c	;volatile
 15874  01616A  D002               	goto	l955
 15875  01616C  B44C               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15876  01616E  0012               	return	
 15877  016170                     l955:
 15878                           
 15879                           ;RemoteCan.c: 656: wait_low_2 = 0;
 15880  016170  944C               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15881                           
 15882                           ;RemoteCan.c: 657: if (PORTBbits.RB4 == 1) {
 15883  016172  A881               	btfss	3969,4,c	;volatile
 15884  016174  0012               	return	
 15885                           
 15886                           ;RemoteCan.c: 658: F1_switch = ~F1_switch;
 15887  016176  724A               	btg	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 15888                           
 15889                           ;RemoteCan.c: 659: wait_low_2 = 1;
 15890  016178  844C               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15891  01617A  0012               	return	
 15892  01617C  0012               	return		;funcret
 15893  01617E                     __end_of_F1_Button_Polling:
 15894                           	opt stack 0
 15895                           tblptru	equ	0xFF8
 15896                           tblptrh	equ	0xFF7
 15897                           tblptrl	equ	0xFF6
 15898                           tablat	equ	0xFF5
 15899                           prodh	equ	0xFF4
 15900                           prodl	equ	0xFF3
 15901                           intcon	equ	0xFF2
 15902                           postinc0	equ	0xFEE
 15903                           wreg	equ	0xFE8
 15904                           indf1	equ	0xFE7
 15905                           plusw1	equ	0xFE3
 15906                           fsr1h	equ	0xFE2
 15907                           fsr1l	equ	0xFE1
 15908                           indf2	equ	0xFDF
 15909                           postinc2	equ	0xFDE
 15910                           plusw2	equ	0xFDB
 15911                           fsr2h	equ	0xFDA
 15912                           fsr2l	equ	0xFD9
 15913                           status	equ	0xFD8
 15914                           
 15915 ;; *************** function _Credits *****************
 15916 ;; Defined at:
 15917 ;;		line 631 in file "RemoteCan.c"
 15918 ;; Parameters:    Size  Location     Type
 15919 ;;		None
 15920 ;; Auto vars:     Size  Location     Type
 15921 ;;		None
 15922 ;; Return value:  Size  Location     Type
 15923 ;;		None               void
 15924 ;; Registers used:
 15925 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15926 ;; Tracked objects:
 15927 ;;		On entry : 0/0
 15928 ;;		On exit  : 0/0
 15929 ;;		Unchanged: 0/0
 15930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15935 ;;Total ram usage:        0 bytes
 15936 ;; Hardware stack levels used:    1
 15937 ;; Hardware stack levels required when called:    9
 15938 ;; This function calls:
 15939 ;;		_LCD_clear
 15940 ;;		_LCD_goto_line
 15941 ;;		_LCD_initialize
 15942 ;;		_LCD_write_message
 15943 ;; This function is called by:
 15944 ;;		_main
 15945 ;; This function uses a non-reentrant model
 15946 ;;
 15947                           
 15948                           	psect	text46
 15949  015BE6                     __ptext46:
 15950                           	opt stack 0
 15951  015BE6                     _Credits:
 15952                           	opt stack 21
 15953                           
 15954                           ;RemoteCan.c: 632: LCD_initialize(16);
 15955                           
 15956                           ;incstack = 0
 15957  015BE6  0E10               	movlw	16
 15958  015BE8  EC28  F0A6         	call	_LCD_initialize
 15959                           
 15960                           ;RemoteCan.c: 633: LCD_clear();
 15961  015BEC  EC00  F0B0         	call	_LCD_clear	;wreg free
 15962                           
 15963                           ;RemoteCan.c: 634: LCD_goto_line(1);
 15964  015BF0  0E01               	movlw	1
 15965  015BF2  EC35  F0A9         	call	_LCD_goto_line
 15966                           
 15967                           ;RemoteCan.c: 635: LCD_write_message("=>    CREDITS!    <=");
 15968  015BF6  0E2B               	movlw	low STR_40
 15969  015BF8  0100               	movlb	0	; () banked
 15970  015BFA  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15971  015BFC  0EFF               	movlw	high STR_40
 15972  015BFE  0100               	movlb	0	; () banked
 15973  015C00  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15974  015C02  EC99  F0AF         	call	_LCD_write_message	;wreg free
 15975                           
 15976                           ;RemoteCan.c: 636: LCD_goto_line(2);
 15977  015C06  0E02               	movlw	2
 15978  015C08  EC35  F0A9         	call	_LCD_goto_line
 15979                           
 15980                           ;RemoteCan.c: 637: LCD_write_message("  Massimo Clementi  ");
 15981  015C0C  0E05               	movlw	low STR_41
 15982  015C0E  0100               	movlb	0	; () banked
 15983  015C10  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15984  015C12  0EFE               	movlw	high STR_41
 15985  015C14  0100               	movlb	0	; () banked
 15986  015C16  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15987  015C18  EC99  F0AF         	call	_LCD_write_message	;wreg free
 15988                           
 15989                           ;RemoteCan.c: 638: LCD_goto_line(3);
 15990  015C1C  0E03               	movlw	3
 15991  015C1E  EC35  F0A9         	call	_LCD_goto_line
 15992                           
 15993                           ;RemoteCan.c: 639: LCD_write_message("  Gianlorenzo Moser ");
 15994  015C22  0E83               	movlw	low STR_42
 15995  015C24  0100               	movlb	0	; () banked
 15996  015C26  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15997  015C28  0EFE               	movlw	high STR_42
 15998  015C2A  0100               	movlb	0	; () banked
 15999  015C2C  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16000  015C2E  EC99  F0AF         	call	_LCD_write_message	;wreg free
 16001                           
 16002                           ;RemoteCan.c: 640: LCD_goto_line(4);
 16003  015C32  0E04               	movlw	4
 16004  015C34  EC35  F0A9         	call	_LCD_goto_line
 16005                           
 16006                           ;RemoteCan.c: 641: LCD_write_message("  Simone Righetti   ");
 16007  015C38  0EF0               	movlw	low STR_43
 16008  015C3A  0100               	movlb	0	; () banked
 16009  015C3C  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 16010  015C3E  0EFD               	movlw	high STR_43
 16011  015C40  0100               	movlb	0	; () banked
 16012  015C42  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16013  015C44  EC99  F0AF         	call	_LCD_write_message	;wreg free
 16014  015C48  0012               	return		;funcret
 16015  015C4A                     __end_of_Credits:
 16016                           	opt stack 0
 16017                           tblptru	equ	0xFF8
 16018                           tblptrh	equ	0xFF7
 16019                           tblptrl	equ	0xFF6
 16020                           tablat	equ	0xFF5
 16021                           prodh	equ	0xFF4
 16022                           prodl	equ	0xFF3
 16023                           intcon	equ	0xFF2
 16024                           postinc0	equ	0xFEE
 16025                           wreg	equ	0xFE8
 16026                           indf1	equ	0xFE7
 16027                           plusw1	equ	0xFE3
 16028                           fsr1h	equ	0xFE2
 16029                           fsr1l	equ	0xFE1
 16030                           indf2	equ	0xFDF
 16031                           postinc2	equ	0xFDE
 16032                           plusw2	equ	0xFDB
 16033                           fsr2h	equ	0xFDA
 16034                           fsr2l	equ	0xFD9
 16035                           status	equ	0xFD8
 16036                           
 16037 ;; *************** function _LCD_write_message *****************
 16038 ;; Defined at:
 16039 ;;		line 178 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16040 ;; Parameters:    Size  Location     Type
 16041 ;;  buffer          2   35[BANK0 ] PTR const unsigned char 
 16042 ;;		 -> STR_43(21), STR_42(21), STR_41(21), STR_40(21), 
 16043 ;;		 -> STR_39(21), STR_38(21), STR_37(21), STR_36(21), 
 16044 ;;		 -> STR_35(21), STR_34(21), STR_33(21), STR_32(21), 
 16045 ;;		 -> STR_31(21), STR_30(21), STR_29(21), STR_28(21), 
 16046 ;;		 -> STR_27(21), STR_26(21), STR_25(21), STR_24(21), 
 16047 ;;		 -> STR_23(21), STR_22(21), STR_21(21), STR_20(21), 
 16048 ;;		 -> STR_19(21), STR_18(21), STR_17(8), STR_16(8), 
 16049 ;;		 -> STR_15(21), STR_14(5), STR_13(5), STR_12(5), 
 16050 ;;		 -> STR_11(21), STR_10(7), STR_9(14), STR_8(17), 
 16051 ;;		 -> STR_7(12), STR_6(21), STR_4(21), STR_3(21), 
 16052 ;;		 -> STR_2(21), STR_1(21), 
 16053 ;; Auto vars:     Size  Location     Type
 16054 ;;		None
 16055 ;; Return value:  Size  Location     Type
 16056 ;;		None               void
 16057 ;; Registers used:
 16058 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16059 ;; Tracked objects:
 16060 ;;		On entry : 0/0
 16061 ;;		On exit  : 0/0
 16062 ;;		Unchanged: 0/0
 16063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16064 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16067 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16068 ;;Total ram usage:        2 bytes
 16069 ;; Hardware stack levels used:    1
 16070 ;; Hardware stack levels required when called:    8
 16071 ;; This function calls:
 16072 ;;		_LCD_write_char
 16073 ;; This function is called by:
 16074 ;;		_main
 16075 ;;		_LCD_Handler
 16076 ;;		_LCD_Gap
 16077 ;;		_LCD_Park
 16078 ;;		_LCD_Parking
 16079 ;;		_LCD_End
 16080 ;;		_LCD_Error
 16081 ;;		_Credits
 16082 ;; This function uses a non-reentrant model
 16083 ;;
 16084                           
 16085                           	psect	text47
 16086  015F32                     __ptext47:
 16087                           	opt stack 0
 16088  015F32                     _LCD_write_message:
 16089                           	opt stack 22
 16090                           
 16091                           ;src\LCD_44780.c: 181: while(*buffer) {
 16092                           
 16093                           ;incstack = 0
 16094  015F32  D00E               	goto	l8055
 16095  015F34                     l8051:
 16096                           
 16097                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 16098  015F34  C083  FFF6         	movff	LCD_write_message@buffer,tblptrl
 16099  015F38  C084  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 16100  015F3C                     	if	0	;tblptru may be non-zero
 16101  015F3C                     	endif
 16102  015F3C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16103  015F3C  0E00               	movlw	low (__mediumconst shr (0+16))
 16104  015F3E  6EF8               	movwf	tblptru,c
 16105  015F40                     	endif
 16106  015F40  0008               	tblrd		*
 16107  015F42  50F5               	movf	tablat,w,c
 16108  015F44  EC37  F0AC         	call	_LCD_write_char
 16109                           
 16110                           ;src\LCD_44780.c: 186: buffer++;
 16111  015F48  0100               	movlb	0	; () banked
 16112  015F4A  4B83               	infsnz	LCD_write_message@buffer& (0+255),f,b
 16113  015F4C  2B84               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 16114  015F4E  D000               	goto	l8055
 16115  015F50                     l8055:
 16116  015F50  C083  FFF6         	movff	LCD_write_message@buffer,tblptrl
 16117  015F54  C084  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 16118  015F58                     	if	0	;tblptru may be non-zero
 16119  015F58                     	endif
 16120  015F58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16121  015F58  0E00               	movlw	low (__mediumconst shr (0+16))
 16122  015F5A  6EF8               	movwf	tblptru,c
 16123  015F5C                     	endif
 16124  015F5C  0008               	tblrd		*
 16125  015F5E  50F5               	movf	tablat,w,c
 16126  015F60  0900               	iorlw	0
 16127  015F62  A4D8               	btfss	status,2,c
 16128  015F64  D7E7               	goto	l8051
 16129  015F66  0012               	return		;funcret
 16130  015F68                     __end_of_LCD_write_message:
 16131                           	opt stack 0
 16132                           tblptru	equ	0xFF8
 16133                           tblptrh	equ	0xFF7
 16134                           tblptrl	equ	0xFF6
 16135                           tablat	equ	0xFF5
 16136                           prodh	equ	0xFF4
 16137                           prodl	equ	0xFF3
 16138                           intcon	equ	0xFF2
 16139                           postinc0	equ	0xFEE
 16140                           wreg	equ	0xFE8
 16141                           indf1	equ	0xFE7
 16142                           plusw1	equ	0xFE3
 16143                           fsr1h	equ	0xFE2
 16144                           fsr1l	equ	0xFE1
 16145                           indf2	equ	0xFDF
 16146                           postinc2	equ	0xFDE
 16147                           plusw2	equ	0xFDB
 16148                           fsr2h	equ	0xFDA
 16149                           fsr2l	equ	0xFD9
 16150                           status	equ	0xFD8
 16151                           
 16152 ;; *************** function _LCD_write_char *****************
 16153 ;; Defined at:
 16154 ;;		line 145 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16155 ;; Parameters:    Size  Location     Type
 16156 ;;  value           1    wreg     unsigned char 
 16157 ;; Auto vars:     Size  Location     Type
 16158 ;;  value           1   34[BANK0 ] unsigned char 
 16159 ;;  D0              1   33[BANK0 ] unsigned char 
 16160 ;;  D1              1   32[BANK0 ] unsigned char 
 16161 ;;  D2              1   31[BANK0 ] unsigned char 
 16162 ;;  D3              1   30[BANK0 ] unsigned char 
 16163 ;; Return value:  Size  Location     Type
 16164 ;;		None               void
 16165 ;; Registers used:
 16166 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16167 ;; Tracked objects:
 16168 ;;		On entry : 0/0
 16169 ;;		On exit  : 0/0
 16170 ;;		Unchanged: 0/0
 16171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16173 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16175 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16176 ;;Total ram usage:        5 bytes
 16177 ;; Hardware stack levels used:    1
 16178 ;; Hardware stack levels required when called:    7
 16179 ;; This function calls:
 16180 ;;		_LCD_send_command
 16181 ;; This function is called by:
 16182 ;;		_LCD_write_message
 16183 ;;		_LCD_write_string
 16184 ;; This function uses a non-reentrant model
 16185 ;;
 16186                           
 16187                           	psect	text48
 16188  01586E                     __ptext48:
 16189                           	opt stack 0
 16190  01586E                     _LCD_write_char:
 16191                           	opt stack 22
 16192                           
 16193                           ;incstack = 0
 16194                           ;LCD_write_char@value stored from wreg
 16195  01586E  0100               	movlb	0	; () banked
 16196  015870  6F82               	movwf	LCD_write_char@value& (0+255),b
 16197                           
 16198                           ; BSR set to: 0
 16199                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 16200                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 16201  015872  848D               	bsf	3981,2,c	;volatile
 16202                           
 16203                           ; BSR set to: 0
 16204                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 16205  015874  0100               	movlb	0	; () banked
 16206  015876  4582               	rlncf	LCD_write_char@value& (0+255),w,b
 16207  015878  0B01               	andlw	1
 16208  01587A  0100               	movlb	0	; () banked
 16209  01587C  6F7E               	movwf	LCD_write_char@D3& (0+255),b
 16210                           
 16211                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 16212  01587E  0100               	movlb	0	; () banked
 16213  015880  4582               	rlncf	LCD_write_char@value& (0+255),w,b
 16214  015882  46E8               	rlncf	wreg,f,c
 16215  015884  0B03               	andlw	3
 16216  015886  0B01               	andlw	1
 16217  015888  0100               	movlb	0	; () banked
 16218  01588A  6F7F               	movwf	LCD_write_char@D2& (0+255),b
 16219                           
 16220                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 16221  01588C  0100               	movlb	0	; () banked
 16222  01588E  3982               	swapf	LCD_write_char@value& (0+255),w,b
 16223  015890  42E8               	rrncf	wreg,f,c
 16224  015892  0B07               	andlw	7
 16225  015894  0B01               	andlw	1
 16226  015896  0100               	movlb	0	; () banked
 16227  015898  6F80               	movwf	LCD_write_char@D1& (0+255),b
 16228                           
 16229                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 16230  01589A  0100               	movlb	0	; () banked
 16231  01589C  3982               	swapf	LCD_write_char@value& (0+255),w,b
 16232  01589E  0B0F               	andlw	15
 16233  0158A0  0B01               	andlw	1
 16234  0158A2  0100               	movlb	0	; () banked
 16235  0158A4  6F81               	movwf	LCD_write_char@D0& (0+255),b
 16236                           
 16237                           ; BSR set to: 0
 16238                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 16239  0158A6  C07F  F07A         	movff	LCD_write_char@D2,LCD_send_command@D2
 16240  0158AA  C080  F07B         	movff	LCD_write_char@D1,LCD_send_command@D1
 16241  0158AE  C081  F07C         	movff	LCD_write_char@D0,LCD_send_command@D0
 16242  0158B2  0100               	movlb	0	; () banked
 16243  0158B4  517E               	movf	LCD_write_char@D3& (0+255),w,b
 16244  0158B6  EC28  F0AF         	call	_LCD_send_command
 16245                           
 16246                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 16247  0158BA  0100               	movlb	0	; () banked
 16248  0158BC  3982               	swapf	LCD_write_char@value& (0+255),w,b
 16249  0158BE  46E8               	rlncf	wreg,f,c
 16250  0158C0  0B1F               	andlw	31
 16251  0158C2  0B01               	andlw	1
 16252  0158C4  0100               	movlb	0	; () banked
 16253  0158C6  6F7E               	movwf	LCD_write_char@D3& (0+255),b
 16254                           
 16255                           ; BSR set to: 0
 16256                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 16257  0158C8  0100               	movlb	0	; () banked
 16258  0158CA  4182               	rrncf	LCD_write_char@value& (0+255),w,b
 16259  0158CC  42E8               	rrncf	wreg,f,c
 16260  0158CE  0B3F               	andlw	63
 16261  0158D0  0B01               	andlw	1
 16262  0158D2  0100               	movlb	0	; () banked
 16263  0158D4  6F7F               	movwf	LCD_write_char@D2& (0+255),b
 16264                           
 16265                           ; BSR set to: 0
 16266                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 16267  0158D6  0100               	movlb	0	; () banked
 16268  0158D8  90D8               	bcf	status,0,c
 16269  0158DA  3182               	rrcf	LCD_write_char@value& (0+255),w,b
 16270  0158DC  0B01               	andlw	1
 16271  0158DE  0100               	movlb	0	; () banked
 16272  0158E0  6F80               	movwf	LCD_write_char@D1& (0+255),b
 16273                           
 16274                           ; BSR set to: 0
 16275                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 16276  0158E2  0100               	movlb	0	; () banked
 16277  0158E4  5182               	movf	LCD_write_char@value& (0+255),w,b
 16278  0158E6  0B01               	andlw	1
 16279  0158E8  0100               	movlb	0	; () banked
 16280  0158EA  6F81               	movwf	LCD_write_char@D0& (0+255),b
 16281                           
 16282                           ; BSR set to: 0
 16283                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 16284  0158EC  C07F  F07A         	movff	LCD_write_char@D2,LCD_send_command@D2
 16285  0158F0  C080  F07B         	movff	LCD_write_char@D1,LCD_send_command@D1
 16286  0158F4  C081  F07C         	movff	LCD_write_char@D0,LCD_send_command@D0
 16287  0158F8  0100               	movlb	0	; () banked
 16288  0158FA  517E               	movf	LCD_write_char@D3& (0+255),w,b
 16289  0158FC  EC28  F0AF         	call	_LCD_send_command
 16290                           
 16291                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 16292  015900  948D               	bcf	3981,2,c	;volatile
 16293  015902  0012               	return		;funcret
 16294  015904                     __end_of_LCD_write_char:
 16295                           	opt stack 0
 16296                           tblptru	equ	0xFF8
 16297                           tblptrh	equ	0xFF7
 16298                           tblptrl	equ	0xFF6
 16299                           tablat	equ	0xFF5
 16300                           prodh	equ	0xFF4
 16301                           prodl	equ	0xFF3
 16302                           intcon	equ	0xFF2
 16303                           postinc0	equ	0xFEE
 16304                           wreg	equ	0xFE8
 16305                           indf1	equ	0xFE7
 16306                           plusw1	equ	0xFE3
 16307                           fsr1h	equ	0xFE2
 16308                           fsr1l	equ	0xFE1
 16309                           indf2	equ	0xFDF
 16310                           postinc2	equ	0xFDE
 16311                           plusw2	equ	0xFDB
 16312                           fsr2h	equ	0xFDA
 16313                           fsr2l	equ	0xFD9
 16314                           status	equ	0xFD8
 16315                           
 16316 ;; *************** function _LCD_initialize *****************
 16317 ;; Defined at:
 16318 ;;		line 283 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16319 ;; Parameters:    Size  Location     Type
 16320 ;;  quartz_frequ    1    wreg     unsigned char 
 16321 ;; Auto vars:     Size  Location     Type
 16322 ;;  quartz_frequ    1   32[BANK0 ] unsigned char 
 16323 ;; Return value:  Size  Location     Type
 16324 ;;		None               void
 16325 ;; Registers used:
 16326 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16327 ;; Tracked objects:
 16328 ;;		On entry : 0/0
 16329 ;;		On exit  : 0/0
 16330 ;;		Unchanged: 0/0
 16331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16333 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16335 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16336 ;;Total ram usage:        1 bytes
 16337 ;; Hardware stack levels used:    1
 16338 ;; Hardware stack levels required when called:    8
 16339 ;; This function calls:
 16340 ;;		_LCD_clear
 16341 ;;		_LCD_cursor
 16342 ;;		_LCD_send_command
 16343 ;;		_delay_ms
 16344 ;;		_delay_set_quartz
 16345 ;; This function is called by:
 16346 ;;		_main
 16347 ;;		_LCD_Handler
 16348 ;;		_LCD_Gap
 16349 ;;		_LCD_Park
 16350 ;;		_LCD_Parking
 16351 ;;		_LCD_End
 16352 ;;		_LCD_Error
 16353 ;;		_Credits
 16354 ;;		_board_initialization
 16355 ;; This function uses a non-reentrant model
 16356 ;;
 16357                           
 16358                           	psect	text49
 16359  014C50                     __ptext49:
 16360                           	opt stack 0
 16361  014C50                     _LCD_initialize:
 16362                           	opt stack 21
 16363                           
 16364                           ;incstack = 0
 16365                           ;LCD_initialize@quartz_frequency stored from wreg
 16366  014C50  0100               	movlb	0	; () banked
 16367  014C52  6F80               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 16368                           
 16369                           ; BSR set to: 0
 16370                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 16371  014C54  0100               	movlb	0	; () banked
 16372  014C56  5180               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 16373  014C58  ECBF  F0B0         	call	_delay_set_quartz
 16374                           
 16375                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 16376  014C5C  948D               	bcf	3981,2,c	;volatile
 16377                           
 16378                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 16379  014C5E  928B               	bcf	3979,1,c	;volatile
 16380                           
 16381                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 16382  014C60  908B               	bcf	3979,0,c	;volatile
 16383                           
 16384                           ;src\LCD_44780.c: 291: delay_ms (100);
 16385  014C62  0E00               	movlw	0
 16386  014C64  0100               	movlb	0	; () banked
 16387  014C66  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16388  014C68  0E64               	movlw	100
 16389  014C6A  6F78               	movwf	delay_ms@value_ms& (0+255),b
 16390  014C6C  EC45  F0AF         	call	_delay_ms	;wreg free
 16391                           
 16392                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 16393  014C70  0E00               	movlw	0
 16394  014C72  0100               	movlb	0	; () banked
 16395  014C74  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16396  014C76  0E01               	movlw	1
 16397  014C78  0100               	movlb	0	; () banked
 16398  014C7A  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16399  014C7C  0E01               	movlw	1
 16400  014C7E  0100               	movlb	0	; () banked
 16401  014C80  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16402  014C82  0E00               	movlw	0
 16403  014C84  EC28  F0AF         	call	_LCD_send_command
 16404                           
 16405                           ;src\LCD_44780.c: 293: delay_ms (100);
 16406  014C88  0E00               	movlw	0
 16407  014C8A  0100               	movlb	0	; () banked
 16408  014C8C  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16409  014C8E  0E64               	movlw	100
 16410  014C90  6F78               	movwf	delay_ms@value_ms& (0+255),b
 16411  014C92  EC45  F0AF         	call	_delay_ms	;wreg free
 16412                           
 16413                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 16414  014C96  0E00               	movlw	0
 16415  014C98  0100               	movlb	0	; () banked
 16416  014C9A  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16417  014C9C  0E01               	movlw	1
 16418  014C9E  0100               	movlb	0	; () banked
 16419  014CA0  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16420  014CA2  0E01               	movlw	1
 16421  014CA4  0100               	movlb	0	; () banked
 16422  014CA6  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16423  014CA8  0E00               	movlw	0
 16424  014CAA  EC28  F0AF         	call	_LCD_send_command
 16425                           
 16426                           ;src\LCD_44780.c: 295: delay_ms (10);
 16427  014CAE  0E00               	movlw	0
 16428  014CB0  0100               	movlb	0	; () banked
 16429  014CB2  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16430  014CB4  0E0A               	movlw	10
 16431  014CB6  6F78               	movwf	delay_ms@value_ms& (0+255),b
 16432  014CB8  EC45  F0AF         	call	_delay_ms	;wreg free
 16433                           
 16434                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 16435  014CBC  0E00               	movlw	0
 16436  014CBE  0100               	movlb	0	; () banked
 16437  014CC0  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16438  014CC2  0E01               	movlw	1
 16439  014CC4  0100               	movlb	0	; () banked
 16440  014CC6  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16441  014CC8  0E01               	movlw	1
 16442  014CCA  0100               	movlb	0	; () banked
 16443  014CCC  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16444  014CCE  0E00               	movlw	0
 16445  014CD0  EC28  F0AF         	call	_LCD_send_command
 16446                           
 16447                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 16448  014CD4  0E00               	movlw	0
 16449  014CD6  0100               	movlb	0	; () banked
 16450  014CD8  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16451  014CDA  0E01               	movlw	1
 16452  014CDC  0100               	movlb	0	; () banked
 16453  014CDE  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16454  014CE0  0E00               	movlw	0
 16455  014CE2  0100               	movlb	0	; () banked
 16456  014CE4  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16457  014CE6  0E00               	movlw	0
 16458  014CE8  EC28  F0AF         	call	_LCD_send_command
 16459                           
 16460                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 16461  014CEC  0E00               	movlw	0
 16462  014CEE  0100               	movlb	0	; () banked
 16463  014CF0  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16464  014CF2  0E01               	movlw	1
 16465  014CF4  0100               	movlb	0	; () banked
 16466  014CF6  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16467  014CF8  0E00               	movlw	0
 16468  014CFA  0100               	movlb	0	; () banked
 16469  014CFC  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16470  014CFE  0E00               	movlw	0
 16471  014D00  EC28  F0AF         	call	_LCD_send_command
 16472                           
 16473                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 16474  014D04  0E00               	movlw	0
 16475  014D06  0100               	movlb	0	; () banked
 16476  014D08  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16477  014D0A  0E00               	movlw	0
 16478  014D0C  0100               	movlb	0	; () banked
 16479  014D0E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16480  014D10  0E00               	movlw	0
 16481  014D12  0100               	movlb	0	; () banked
 16482  014D14  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16483  014D16  0E01               	movlw	1
 16484  014D18  EC28  F0AF         	call	_LCD_send_command
 16485                           
 16486                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 16487  014D1C  0E00               	movlw	0
 16488  014D1E  0100               	movlb	0	; () banked
 16489  014D20  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16490  014D22  0E00               	movlw	0
 16491  014D24  0100               	movlb	0	; () banked
 16492  014D26  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16493  014D28  0E00               	movlw	0
 16494  014D2A  0100               	movlb	0	; () banked
 16495  014D2C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16496  014D2E  0E00               	movlw	0
 16497  014D30  EC28  F0AF         	call	_LCD_send_command
 16498                           
 16499                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 16500  014D34  0E00               	movlw	0
 16501  014D36  0100               	movlb	0	; () banked
 16502  014D38  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16503  014D3A  0E00               	movlw	0
 16504  014D3C  0100               	movlb	0	; () banked
 16505  014D3E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16506  014D40  0E00               	movlw	0
 16507  014D42  0100               	movlb	0	; () banked
 16508  014D44  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16509  014D46  0E01               	movlw	1
 16510  014D48  EC28  F0AF         	call	_LCD_send_command
 16511                           
 16512                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 16513  014D4C  0E00               	movlw	0
 16514  014D4E  0100               	movlb	0	; () banked
 16515  014D50  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16516  014D52  0E00               	movlw	0
 16517  014D54  0100               	movlb	0	; () banked
 16518  014D56  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16519  014D58  0E00               	movlw	0
 16520  014D5A  0100               	movlb	0	; () banked
 16521  014D5C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16522  014D5E  0E00               	movlw	0
 16523  014D60  EC28  F0AF         	call	_LCD_send_command
 16524                           
 16525                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 16526  014D64  0E00               	movlw	0
 16527  014D66  0100               	movlb	0	; () banked
 16528  014D68  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16529  014D6A  0E00               	movlw	0
 16530  014D6C  0100               	movlb	0	; () banked
 16531  014D6E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16532  014D70  0E01               	movlw	1
 16533  014D72  0100               	movlb	0	; () banked
 16534  014D74  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16535  014D76  0E00               	movlw	0
 16536  014D78  EC28  F0AF         	call	_LCD_send_command
 16537                           
 16538                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 16539  014D7C  0E00               	movlw	0
 16540  014D7E  0100               	movlb	0	; () banked
 16541  014D80  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16542  014D82  0E00               	movlw	0
 16543  014D84  0100               	movlb	0	; () banked
 16544  014D86  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16545  014D88  0E00               	movlw	0
 16546  014D8A  0100               	movlb	0	; () banked
 16547  014D8C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16548  014D8E  0E00               	movlw	0
 16549  014D90  EC28  F0AF         	call	_LCD_send_command
 16550                           
 16551                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 16552  014D94  0E01               	movlw	1
 16553  014D96  0100               	movlb	0	; () banked
 16554  014D98  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16555  014D9A  0E01               	movlw	1
 16556  014D9C  0100               	movlb	0	; () banked
 16557  014D9E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16558  014DA0  0E00               	movlw	0
 16559  014DA2  0100               	movlb	0	; () banked
 16560  014DA4  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16561  014DA6  0E00               	movlw	0
 16562  014DA8  EC28  F0AF         	call	_LCD_send_command
 16563                           
 16564                           ;src\LCD_44780.c: 312: LCD_clear ();
 16565  014DAC  EC00  F0B0         	call	_LCD_clear	;wreg free
 16566                           
 16567                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 16568  014DB0  0E00               	movlw	0
 16569  014DB2  0100               	movlb	0	; () banked
 16570  014DB4  6F7E               	movwf	LCD_cursor@blinking& (0+255),b
 16571  014DB6  0E00               	movlw	0
 16572  014DB8  ECE7  F0AF         	call	_LCD_cursor
 16573  014DBC  0012               	return		;funcret
 16574  014DBE                     __end_of_LCD_initialize:
 16575                           	opt stack 0
 16576                           tblptru	equ	0xFF8
 16577                           tblptrh	equ	0xFF7
 16578                           tblptrl	equ	0xFF6
 16579                           tablat	equ	0xFF5
 16580                           prodh	equ	0xFF4
 16581                           prodl	equ	0xFF3
 16582                           intcon	equ	0xFF2
 16583                           postinc0	equ	0xFEE
 16584                           wreg	equ	0xFE8
 16585                           indf1	equ	0xFE7
 16586                           plusw1	equ	0xFE3
 16587                           fsr1h	equ	0xFE2
 16588                           fsr1l	equ	0xFE1
 16589                           indf2	equ	0xFDF
 16590                           postinc2	equ	0xFDE
 16591                           plusw2	equ	0xFDB
 16592                           fsr2h	equ	0xFDA
 16593                           fsr2l	equ	0xFD9
 16594                           status	equ	0xFD8
 16595                           
 16596 ;; *************** function _delay_set_quartz *****************
 16597 ;; Defined at:
 16598 ;;		line 115 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 16599 ;; Parameters:    Size  Location     Type
 16600 ;;  frequency       1    wreg     unsigned char 
 16601 ;; Auto vars:     Size  Location     Type
 16602 ;;  frequency       1   18[BANK0 ] unsigned char 
 16603 ;; Return value:  Size  Location     Type
 16604 ;;		None               void
 16605 ;; Registers used:
 16606 ;;		wreg
 16607 ;; Tracked objects:
 16608 ;;		On entry : 0/0
 16609 ;;		On exit  : 0/0
 16610 ;;		Unchanged: 0/0
 16611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16613 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16615 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16616 ;;Total ram usage:        1 bytes
 16617 ;; Hardware stack levels used:    1
 16618 ;; Hardware stack levels required when called:    3
 16619 ;; This function calls:
 16620 ;;		Nothing
 16621 ;; This function is called by:
 16622 ;;		_LCD_initialize
 16623 ;; This function uses a non-reentrant model
 16624 ;;
 16625                           
 16626                           	psect	text50
 16627  01617E                     __ptext50:
 16628                           	opt stack 0
 16629  01617E                     _delay_set_quartz:
 16630                           	opt stack 25
 16631                           
 16632                           ;incstack = 0
 16633                           ;delay_set_quartz@frequency stored from wreg
 16634  01617E  0100               	movlb	0	; () banked
 16635  016180  6F72               	movwf	delay_set_quartz@frequency& (0+255),b
 16636                           
 16637                           ; BSR set to: 0
 16638                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 16639  016182  C072  F0E8         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 16640                           
 16641                           ; BSR set to: 0
 16642  016186  0012               	return		;funcret
 16643  016188                     __end_of_delay_set_quartz:
 16644                           	opt stack 0
 16645                           tblptru	equ	0xFF8
 16646                           tblptrh	equ	0xFF7
 16647                           tblptrl	equ	0xFF6
 16648                           tablat	equ	0xFF5
 16649                           prodh	equ	0xFF4
 16650                           prodl	equ	0xFF3
 16651                           intcon	equ	0xFF2
 16652                           postinc0	equ	0xFEE
 16653                           wreg	equ	0xFE8
 16654                           indf1	equ	0xFE7
 16655                           plusw1	equ	0xFE3
 16656                           fsr1h	equ	0xFE2
 16657                           fsr1l	equ	0xFE1
 16658                           indf2	equ	0xFDF
 16659                           postinc2	equ	0xFDE
 16660                           plusw2	equ	0xFDB
 16661                           fsr2h	equ	0xFDA
 16662                           fsr2l	equ	0xFD9
 16663                           status	equ	0xFD8
 16664                           
 16665 ;; *************** function _LCD_cursor *****************
 16666 ;; Defined at:
 16667 ;;		line 266 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16668 ;; Parameters:    Size  Location     Type
 16669 ;;  active          1    wreg     unsigned char 
 16670 ;;  blinking        1   30[BANK0 ] unsigned char 
 16671 ;; Auto vars:     Size  Location     Type
 16672 ;;  active          1   31[BANK0 ] unsigned char 
 16673 ;; Return value:  Size  Location     Type
 16674 ;;		None               void
 16675 ;; Registers used:
 16676 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16677 ;; Tracked objects:
 16678 ;;		On entry : 0/0
 16679 ;;		On exit  : 0/0
 16680 ;;		Unchanged: 0/0
 16681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16682 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16683 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16685 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16686 ;;Total ram usage:        2 bytes
 16687 ;; Hardware stack levels used:    1
 16688 ;; Hardware stack levels required when called:    7
 16689 ;; This function calls:
 16690 ;;		_LCD_send_command
 16691 ;; This function is called by:
 16692 ;;		_LCD_initialize
 16693 ;; This function uses a non-reentrant model
 16694 ;;
 16695                           
 16696                           	psect	text51
 16697  015FCE                     __ptext51:
 16698                           	opt stack 0
 16699  015FCE                     _LCD_cursor:
 16700                           	opt stack 21
 16701                           
 16702                           ; BSR set to: 0
 16703                           ;incstack = 0
 16704                           ;LCD_cursor@active stored from wreg
 16705  015FCE  0100               	movlb	0	; () banked
 16706  015FD0  6F7F               	movwf	LCD_cursor@active& (0+255),b
 16707                           
 16708                           ; BSR set to: 0
 16709                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 16710  015FD2  0E00               	movlw	0
 16711  015FD4  0100               	movlb	0	; () banked
 16712  015FD6  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16713  015FD8  0E00               	movlw	0
 16714  015FDA  0100               	movlb	0	; () banked
 16715  015FDC  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16716  015FDE  0E00               	movlw	0
 16717  015FE0  0100               	movlb	0	; () banked
 16718  015FE2  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16719  015FE4  0E00               	movlw	0
 16720  015FE6  EC28  F0AF         	call	_LCD_send_command
 16721                           
 16722                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 16723  015FEA  0E01               	movlw	1
 16724  015FEC  0100               	movlb	0	; () banked
 16725  015FEE  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16726  015FF0  C07F  F07B         	movff	LCD_cursor@active,LCD_send_command@D1
 16727  015FF4  C07E  F07C         	movff	LCD_cursor@blinking,LCD_send_command@D0
 16728  015FF8  0E01               	movlw	1
 16729  015FFA  EC28  F0AF         	call	_LCD_send_command
 16730  015FFE  0012               	return		;funcret
 16731  016000                     __end_of_LCD_cursor:
 16732                           	opt stack 0
 16733                           tblptru	equ	0xFF8
 16734                           tblptrh	equ	0xFF7
 16735                           tblptrl	equ	0xFF6
 16736                           tablat	equ	0xFF5
 16737                           prodh	equ	0xFF4
 16738                           prodl	equ	0xFF3
 16739                           intcon	equ	0xFF2
 16740                           postinc0	equ	0xFEE
 16741                           wreg	equ	0xFE8
 16742                           indf1	equ	0xFE7
 16743                           plusw1	equ	0xFE3
 16744                           fsr1h	equ	0xFE2
 16745                           fsr1l	equ	0xFE1
 16746                           indf2	equ	0xFDF
 16747                           postinc2	equ	0xFDE
 16748                           plusw2	equ	0xFDB
 16749                           fsr2h	equ	0xFDA
 16750                           fsr2l	equ	0xFD9
 16751                           status	equ	0xFD8
 16752                           
 16753 ;; *************** function _LCD_clear *****************
 16754 ;; Defined at:
 16755 ;;		line 257 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16756 ;; Parameters:    Size  Location     Type
 16757 ;;		None
 16758 ;; Auto vars:     Size  Location     Type
 16759 ;;		None
 16760 ;; Return value:  Size  Location     Type
 16761 ;;		None               void
 16762 ;; Registers used:
 16763 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16764 ;; Tracked objects:
 16765 ;;		On entry : 0/0
 16766 ;;		On exit  : 0/0
 16767 ;;		Unchanged: 0/0
 16768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16773 ;;Total ram usage:        0 bytes
 16774 ;; Hardware stack levels used:    1
 16775 ;; Hardware stack levels required when called:    7
 16776 ;; This function calls:
 16777 ;;		_LCD_send_command
 16778 ;; This function is called by:
 16779 ;;		_LCD_initialize
 16780 ;;		_LCD_Handler
 16781 ;;		_LCD_Gap
 16782 ;;		_LCD_Park
 16783 ;;		_LCD_Parking
 16784 ;;		_LCD_End
 16785 ;;		_LCD_Error
 16786 ;;		_Credits
 16787 ;;		_board_initialization
 16788 ;; This function uses a non-reentrant model
 16789 ;;
 16790                           
 16791                           	psect	text52
 16792  016000                     __ptext52:
 16793                           	opt stack 0
 16794  016000                     _LCD_clear:
 16795                           	opt stack 21
 16796                           
 16797                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 16798                           
 16799                           ;incstack = 0
 16800  016000  0E00               	movlw	0
 16801  016002  0100               	movlb	0	; () banked
 16802  016004  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16803  016006  0E00               	movlw	0
 16804  016008  0100               	movlb	0	; () banked
 16805  01600A  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16806  01600C  0E00               	movlw	0
 16807  01600E  0100               	movlb	0	; () banked
 16808  016010  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16809  016012  0E00               	movlw	0
 16810  016014  EC28  F0AF         	call	_LCD_send_command
 16811                           
 16812                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 16813  016018  0E00               	movlw	0
 16814  01601A  0100               	movlb	0	; () banked
 16815  01601C  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16816  01601E  0E00               	movlw	0
 16817  016020  0100               	movlb	0	; () banked
 16818  016022  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16819  016024  0E01               	movlw	1
 16820  016026  0100               	movlb	0	; () banked
 16821  016028  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16822  01602A  0E00               	movlw	0
 16823  01602C  EC28  F0AF         	call	_LCD_send_command
 16824  016030  0012               	return		;funcret
 16825  016032                     __end_of_LCD_clear:
 16826                           	opt stack 0
 16827                           tblptru	equ	0xFF8
 16828                           tblptrh	equ	0xFF7
 16829                           tblptrl	equ	0xFF6
 16830                           tablat	equ	0xFF5
 16831                           prodh	equ	0xFF4
 16832                           prodl	equ	0xFF3
 16833                           intcon	equ	0xFF2
 16834                           postinc0	equ	0xFEE
 16835                           wreg	equ	0xFE8
 16836                           indf1	equ	0xFE7
 16837                           plusw1	equ	0xFE3
 16838                           fsr1h	equ	0xFE2
 16839                           fsr1l	equ	0xFE1
 16840                           indf2	equ	0xFDF
 16841                           postinc2	equ	0xFDE
 16842                           plusw2	equ	0xFDB
 16843                           fsr2h	equ	0xFDA
 16844                           fsr2l	equ	0xFD9
 16845                           status	equ	0xFD8
 16846                           
 16847 ;; *************** function _LCD_goto_line *****************
 16848 ;; Defined at:
 16849 ;;		line 111 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16850 ;; Parameters:    Size  Location     Type
 16851 ;;  line            1    wreg     unsigned char 
 16852 ;; Auto vars:     Size  Location     Type
 16853 ;;  line            1   30[BANK0 ] unsigned char 
 16854 ;; Return value:  Size  Location     Type
 16855 ;;		None               void
 16856 ;; Registers used:
 16857 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16858 ;; Tracked objects:
 16859 ;;		On entry : 0/0
 16860 ;;		On exit  : 0/0
 16861 ;;		Unchanged: 0/0
 16862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16864 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16866 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16867 ;;Total ram usage:        1 bytes
 16868 ;; Hardware stack levels used:    1
 16869 ;; Hardware stack levels required when called:    7
 16870 ;; This function calls:
 16871 ;;		_LCD_send_command
 16872 ;; This function is called by:
 16873 ;;		_LCD_goto_xy
 16874 ;;		_main
 16875 ;;		_LCD_Handler
 16876 ;;		_LCD_Gap
 16877 ;;		_LCD_Park
 16878 ;;		_LCD_Parking
 16879 ;;		_LCD_End
 16880 ;;		_LCD_Error
 16881 ;;		_Credits
 16882 ;;		_board_initialization
 16883 ;; This function uses a non-reentrant model
 16884 ;;
 16885                           
 16886                           	psect	text53
 16887  01526A                     __ptext53:
 16888                           	opt stack 0
 16889  01526A                     _LCD_goto_line:
 16890                           	opt stack 22
 16891                           
 16892                           ;incstack = 0
 16893                           ;LCD_goto_line@line stored from wreg
 16894  01526A  0100               	movlb	0	; () banked
 16895  01526C  6F7E               	movwf	LCD_goto_line@line& (0+255),b
 16896                           
 16897                           ; BSR set to: 0
 16898                           ;src\LCD_44780.c: 113: switch(line) {
 16899  01526E  D064               	goto	l7729
 16900  015270                     l7721:
 16901                           
 16902                           ; BSR set to: 0
 16903  015270  0E00               	movlw	0
 16904  015272  0100               	movlb	0	; () banked
 16905  015274  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16906  015276  0E00               	movlw	0
 16907  015278  0100               	movlb	0	; () banked
 16908  01527A  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16909  01527C  0E00               	movlw	0
 16910  01527E  0100               	movlb	0	; () banked
 16911  015280  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16912  015282  0E01               	movlw	1
 16913  015284  EC28  F0AF         	call	_LCD_send_command
 16914                           
 16915                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 16916  015288  0E00               	movlw	0
 16917  01528A  0100               	movlb	0	; () banked
 16918  01528C  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16919  01528E  0E00               	movlw	0
 16920  015290  0100               	movlb	0	; () banked
 16921  015292  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16922  015294  0E00               	movlw	0
 16923  015296  0100               	movlb	0	; () banked
 16924  015298  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16925  01529A  0E00               	movlw	0
 16926  01529C  EC28  F0AF         	call	_LCD_send_command
 16927                           
 16928                           ;src\LCD_44780.c: 117: break;
 16929  0152A0  0012               	return	
 16930  0152A2                     l7723:
 16931  0152A2  0E01               	movlw	1
 16932  0152A4  0100               	movlb	0	; () banked
 16933  0152A6  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16934  0152A8  0E00               	movlw	0
 16935  0152AA  0100               	movlb	0	; () banked
 16936  0152AC  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16937  0152AE  0E00               	movlw	0
 16938  0152B0  0100               	movlb	0	; () banked
 16939  0152B2  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16940  0152B4  0E01               	movlw	1
 16941  0152B6  EC28  F0AF         	call	_LCD_send_command
 16942                           
 16943                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 16944  0152BA  0E00               	movlw	0
 16945  0152BC  0100               	movlb	0	; () banked
 16946  0152BE  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16947  0152C0  0E00               	movlw	0
 16948  0152C2  0100               	movlb	0	; () banked
 16949  0152C4  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16950  0152C6  0E00               	movlw	0
 16951  0152C8  0100               	movlb	0	; () banked
 16952  0152CA  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16953  0152CC  0E00               	movlw	0
 16954  0152CE  EC28  F0AF         	call	_LCD_send_command
 16955                           
 16956                           ;src\LCD_44780.c: 121: break;
 16957  0152D2  0012               	return	
 16958  0152D4                     l7725:
 16959  0152D4  0E00               	movlw	0
 16960  0152D6  0100               	movlb	0	; () banked
 16961  0152D8  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16962  0152DA  0E00               	movlw	0
 16963  0152DC  0100               	movlb	0	; () banked
 16964  0152DE  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16965  0152E0  0E01               	movlw	1
 16966  0152E2  0100               	movlb	0	; () banked
 16967  0152E4  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16968  0152E6  0E01               	movlw	1
 16969  0152E8  EC28  F0AF         	call	_LCD_send_command
 16970                           
 16971                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 16972  0152EC  0E01               	movlw	1
 16973  0152EE  0100               	movlb	0	; () banked
 16974  0152F0  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16975  0152F2  0E00               	movlw	0
 16976  0152F4  0100               	movlb	0	; () banked
 16977  0152F6  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16978  0152F8  0E00               	movlw	0
 16979  0152FA  0100               	movlb	0	; () banked
 16980  0152FC  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16981  0152FE  0E00               	movlw	0
 16982  015300  EC28  F0AF         	call	_LCD_send_command
 16983                           
 16984                           ;src\LCD_44780.c: 125: break;
 16985  015304  0012               	return	
 16986  015306                     l7727:
 16987  015306  0E01               	movlw	1
 16988  015308  0100               	movlb	0	; () banked
 16989  01530A  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16990  01530C  0E00               	movlw	0
 16991  01530E  0100               	movlb	0	; () banked
 16992  015310  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16993  015312  0E01               	movlw	1
 16994  015314  0100               	movlb	0	; () banked
 16995  015316  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16996  015318  0E01               	movlw	1
 16997  01531A  EC28  F0AF         	call	_LCD_send_command
 16998                           
 16999                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 17000  01531E  0E01               	movlw	1
 17001  015320  0100               	movlb	0	; () banked
 17002  015322  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 17003  015324  0E00               	movlw	0
 17004  015326  0100               	movlb	0	; () banked
 17005  015328  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 17006  01532A  0E00               	movlw	0
 17007  01532C  0100               	movlb	0	; () banked
 17008  01532E  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 17009  015330  0E00               	movlw	0
 17010  015332  EC28  F0AF         	call	_LCD_send_command
 17011                           
 17012                           ;src\LCD_44780.c: 129: }
 17013  015336  0012               	return	
 17014  015338                     l7729:
 17015  015338  0100               	movlb	0	; () banked
 17016  01533A  517E               	movf	LCD_goto_line@line& (0+255),w,b
 17017                           
 17018                           ; Switch size 1, requested type "space"
 17019                           ; Number of cases is 4, Range of values is 1 to 4
 17020                           ; switch strategies available:
 17021                           ; Name         Instructions Cycles
 17022                           ; simple_byte           13     7 (average)
 17023                           ;	Chosen strategy is simple_byte
 17024  01533C  0A01               	xorlw	1	; case 1
 17025  01533E  B4D8               	btfsc	status,2,c
 17026  015340  D797               	goto	l7721
 17027  015342  0A03               	xorlw	3	; case 2
 17028  015344  B4D8               	btfsc	status,2,c
 17029  015346  D7AD               	goto	l7723
 17030  015348  0A01               	xorlw	1	; case 3
 17031  01534A  B4D8               	btfsc	status,2,c
 17032  01534C  D7C3               	goto	l7725
 17033  01534E  0A07               	xorlw	7	; case 4
 17034  015350  A4D8               	btfss	status,2,c
 17035  015352  0012               	return	
 17036  015354  D7D8               	goto	l7727
 17037                           
 17038                           ; BSR set to: 0
 17039  015356  0012               	return		;funcret
 17040  015358                     __end_of_LCD_goto_line:
 17041                           	opt stack 0
 17042                           tblptru	equ	0xFF8
 17043                           tblptrh	equ	0xFF7
 17044                           tblptrl	equ	0xFF6
 17045                           tablat	equ	0xFF5
 17046                           prodh	equ	0xFF4
 17047                           prodl	equ	0xFF3
 17048                           intcon	equ	0xFF2
 17049                           postinc0	equ	0xFEE
 17050                           wreg	equ	0xFE8
 17051                           indf1	equ	0xFE7
 17052                           plusw1	equ	0xFE3
 17053                           fsr1h	equ	0xFE2
 17054                           fsr1l	equ	0xFE1
 17055                           indf2	equ	0xFDF
 17056                           postinc2	equ	0xFDE
 17057                           plusw2	equ	0xFDB
 17058                           fsr2h	equ	0xFDA
 17059                           fsr2l	equ	0xFD9
 17060                           status	equ	0xFD8
 17061                           
 17062 ;; *************** function _LCD_send_command *****************
 17063 ;; Defined at:
 17064 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 17065 ;; Parameters:    Size  Location     Type
 17066 ;;  D3              1    wreg     unsigned char 
 17067 ;;  D2              1   26[BANK0 ] unsigned char 
 17068 ;;  D1              1   27[BANK0 ] unsigned char 
 17069 ;;  D0              1   28[BANK0 ] unsigned char 
 17070 ;; Auto vars:     Size  Location     Type
 17071 ;;  D3              1   29[BANK0 ] unsigned char 
 17072 ;; Return value:  Size  Location     Type
 17073 ;;		None               void
 17074 ;; Registers used:
 17075 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17076 ;; Tracked objects:
 17077 ;;		On entry : 0/0
 17078 ;;		On exit  : 0/0
 17079 ;;		Unchanged: 0/0
 17080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17081 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17082 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17084 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17085 ;;Total ram usage:        4 bytes
 17086 ;; Hardware stack levels used:    1
 17087 ;; Hardware stack levels required when called:    6
 17088 ;; This function calls:
 17089 ;;		_LCD_enable_pulse
 17090 ;; This function is called by:
 17091 ;;		_LCD_shift_cursor
 17092 ;;		_LCD_goto_line
 17093 ;;		_LCD_write_char
 17094 ;;		_LCD_clear
 17095 ;;		_LCD_cursor
 17096 ;;		_LCD_initialize
 17097 ;;		_LCD_home
 17098 ;;		_LCD_shift
 17099 ;; This function uses a non-reentrant model
 17100 ;;
 17101                           
 17102                           	psect	text54
 17103  015E50                     __ptext54:
 17104                           	opt stack 0
 17105  015E50                     _LCD_send_command:
 17106                           	opt stack 22
 17107                           
 17108                           ;incstack = 0
 17109                           ;LCD_send_command@D3 stored from wreg
 17110  015E50  0100               	movlb	0	; () banked
 17111  015E52  6F7D               	movwf	LCD_send_command@D3& (0+255),b
 17112                           
 17113                           ; BSR set to: 0
 17114                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 17115  015E54  0100               	movlb	0	; () banked
 17116  015E56  B17C               	btfsc	LCD_send_command@D0& (0+255),0,b
 17117  015E58  D002               	bra	u9305
 17118  015E5A  948B               	bcf	3979,2,c	;volatile
 17119  015E5C  D001               	bra	u9306
 17120  015E5E                     u9305:
 17121  015E5E  848B               	bsf	3979,2,c	;volatile
 17122  015E60                     u9306:
 17123                           
 17124                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 17125  015E60  0100               	movlb	0	; () banked
 17126  015E62  B17B               	btfsc	LCD_send_command@D1& (0+255),0,b
 17127  015E64  D002               	bra	u9315
 17128  015E66  968B               	bcf	3979,3,c	;volatile
 17129  015E68  D001               	bra	u9316
 17130  015E6A                     u9315:
 17131  015E6A  868B               	bsf	3979,3,c	;volatile
 17132  015E6C                     u9316:
 17133                           
 17134                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 17135  015E6C  0100               	movlb	0	; () banked
 17136  015E6E  B17A               	btfsc	LCD_send_command@D2& (0+255),0,b
 17137  015E70  D002               	bra	u9325
 17138  015E72  908C               	bcf	3980,0,c	;volatile
 17139  015E74  D001               	bra	u9326
 17140  015E76                     u9325:
 17141  015E76  808C               	bsf	3980,0,c	;volatile
 17142  015E78                     u9326:
 17143                           
 17144                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 17145  015E78  0100               	movlb	0	; () banked
 17146  015E7A  B17D               	btfsc	LCD_send_command@D3& (0+255),0,b
 17147  015E7C  D002               	bra	u9335
 17148  015E7E  928C               	bcf	3980,1,c	;volatile
 17149  015E80  D001               	bra	u9336
 17150  015E82                     u9335:
 17151  015E82  828C               	bsf	3980,1,c	;volatile
 17152  015E84                     u9336:
 17153                           
 17154                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 17155  015E84  EC57  F0B0         	call	_LCD_enable_pulse	;wreg free
 17156  015E88  0012               	return		;funcret
 17157  015E8A                     __end_of_LCD_send_command:
 17158                           	opt stack 0
 17159                           tblptru	equ	0xFF8
 17160                           tblptrh	equ	0xFF7
 17161                           tblptrl	equ	0xFF6
 17162                           tablat	equ	0xFF5
 17163                           prodh	equ	0xFF4
 17164                           prodl	equ	0xFF3
 17165                           intcon	equ	0xFF2
 17166                           postinc0	equ	0xFEE
 17167                           wreg	equ	0xFE8
 17168                           indf1	equ	0xFE7
 17169                           plusw1	equ	0xFE3
 17170                           fsr1h	equ	0xFE2
 17171                           fsr1l	equ	0xFE1
 17172                           indf2	equ	0xFDF
 17173                           postinc2	equ	0xFDE
 17174                           plusw2	equ	0xFDB
 17175                           fsr2h	equ	0xFDA
 17176                           fsr2l	equ	0xFD9
 17177                           status	equ	0xFD8
 17178                           
 17179 ;; *************** function _LCD_enable_pulse *****************
 17180 ;; Defined at:
 17181 ;;		line 49 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 17182 ;; Parameters:    Size  Location     Type
 17183 ;;		None
 17184 ;; Auto vars:     Size  Location     Type
 17185 ;;		None
 17186 ;; Return value:  Size  Location     Type
 17187 ;;		None               void
 17188 ;; Registers used:
 17189 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17190 ;; Tracked objects:
 17191 ;;		On entry : 0/0
 17192 ;;		On exit  : 0/0
 17193 ;;		Unchanged: 0/0
 17194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17199 ;;Total ram usage:        0 bytes
 17200 ;; Hardware stack levels used:    1
 17201 ;; Hardware stack levels required when called:    5
 17202 ;; This function calls:
 17203 ;;		_delay_ms
 17204 ;; This function is called by:
 17205 ;;		_LCD_send_command
 17206 ;; This function uses a non-reentrant model
 17207 ;;
 17208                           
 17209                           	psect	text55
 17210  0160AE                     __ptext55:
 17211                           	opt stack 0
 17212  0160AE                     _LCD_enable_pulse:
 17213                           	opt stack 22
 17214                           
 17215                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 17216                           
 17217                           ;incstack = 0
 17218  0160AE  828B               	bsf	3979,1,c	;volatile
 17219                           
 17220                           ;src\LCD_44780.c: 52: delay_ms (1);
 17221  0160B0  0E00               	movlw	0
 17222  0160B2  0100               	movlb	0	; () banked
 17223  0160B4  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 17224  0160B6  0E01               	movlw	1
 17225  0160B8  6F78               	movwf	delay_ms@value_ms& (0+255),b
 17226  0160BA  EC45  F0AF         	call	_delay_ms	;wreg free
 17227                           
 17228                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 17229  0160BE  928B               	bcf	3979,1,c	;volatile
 17230                           
 17231                           ;src\LCD_44780.c: 54: delay_ms (1);
 17232  0160C0  0E00               	movlw	0
 17233  0160C2  0100               	movlb	0	; () banked
 17234  0160C4  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 17235  0160C6  0E01               	movlw	1
 17236  0160C8  6F78               	movwf	delay_ms@value_ms& (0+255),b
 17237  0160CA  EC45  F0AF         	call	_delay_ms	;wreg free
 17238  0160CE  0012               	return		;funcret
 17239  0160D0                     __end_of_LCD_enable_pulse:
 17240                           	opt stack 0
 17241                           tblptru	equ	0xFF8
 17242                           tblptrh	equ	0xFF7
 17243                           tblptrl	equ	0xFF6
 17244                           tablat	equ	0xFF5
 17245                           prodh	equ	0xFF4
 17246                           prodl	equ	0xFF3
 17247                           intcon	equ	0xFF2
 17248                           postinc0	equ	0xFEE
 17249                           wreg	equ	0xFE8
 17250                           indf1	equ	0xFE7
 17251                           plusw1	equ	0xFE3
 17252                           fsr1h	equ	0xFE2
 17253                           fsr1l	equ	0xFE1
 17254                           indf2	equ	0xFDF
 17255                           postinc2	equ	0xFDE
 17256                           plusw2	equ	0xFDB
 17257                           fsr2h	equ	0xFDA
 17258                           fsr2l	equ	0xFD9
 17259                           status	equ	0xFD8
 17260                           
 17261 ;; *************** function _delay_ms *****************
 17262 ;; Defined at:
 17263 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 17264 ;; Parameters:    Size  Location     Type
 17265 ;;  value_ms        2   24[BANK0 ] unsigned int 
 17266 ;; Auto vars:     Size  Location     Type
 17267 ;;		None
 17268 ;; Return value:  Size  Location     Type
 17269 ;;		None               void
 17270 ;; Registers used:
 17271 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17272 ;; Tracked objects:
 17273 ;;		On entry : 0/0
 17274 ;;		On exit  : 0/0
 17275 ;;		Unchanged: 0/0
 17276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17277 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17280 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17281 ;;Total ram usage:        2 bytes
 17282 ;; Hardware stack levels used:    1
 17283 ;; Hardware stack levels required when called:    4
 17284 ;; This function calls:
 17285 ;;		___wmul
 17286 ;; This function is called by:
 17287 ;;		_LCD_enable_pulse
 17288 ;;		_LCD_initialize
 17289 ;;		_main
 17290 ;;		_delay_s
 17291 ;; This function uses a non-reentrant model
 17292 ;;
 17293                           
 17294                           	psect	text56
 17295  015E8A                     __ptext56:
 17296                           	opt stack 0
 17297  015E8A                     _delay_ms:
 17298                           	opt stack 26
 17299                           
 17300                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 17301                           
 17302                           ;incstack = 0
 17303  015E8A  C0E8  F072         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 17304  015E8E  0100               	movlb	0	; () banked
 17305  015E90  6B73               	clrf	(___wmul@multiplier+1)& (0+255),b
 17306  015E92  C078  F074         	movff	delay_ms@value_ms,___wmul@multiplicand
 17307  015E96  C079  F075         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 17308  015E9A  EC62  F0AF         	call	___wmul	;wreg free
 17309  015E9E  C072  F0DD         	movff	?___wmul,_clock_counter_reference	;volatile
 17310  015EA2  C073  F0DE         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 17311                           
 17312                           ;src\delay.c: 75: while (clock_counter_reference) {
 17313  015EA6  D007               	goto	l591
 17314  015EA8                     l7445:
 17315                           
 17316                           ;src\delay.c: 85: _delay(240);
 17317  015EA8  0E50               	movlw	80
 17318  015EAA                     u11567:
 17319  015EAA  2EE8               	decfsz	wreg,f,c
 17320  015EAC  D7FE               	goto	u11567
 17321                           
 17322                           ;src\delay.c: 88: clock_counter_reference--;
 17323  015EAE  0100               	movlb	0	; () banked
 17324  015EB0  07DD               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 17325  015EB2  A0D8               	btfss	status,0,c
 17326  015EB4  07DE               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 17327  015EB6                     l591:
 17328  015EB6  0100               	movlb	0	; () banked
 17329  015EB8  51DD               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 17330  015EBA  0100               	movlb	0	; () banked
 17331  015EBC  11DE               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 17332  015EBE  A4D8               	btfss	status,2,c
 17333  015EC0  D7F3               	goto	l7445
 17334                           
 17335                           ; BSR set to: 0
 17336                           
 17337                           ; BSR set to: 0
 17338  015EC2  0012               	return		;funcret
 17339  015EC4                     __end_of_delay_ms:
 17340                           	opt stack 0
 17341                           tblptru	equ	0xFF8
 17342                           tblptrh	equ	0xFF7
 17343                           tblptrl	equ	0xFF6
 17344                           tablat	equ	0xFF5
 17345                           prodh	equ	0xFF4
 17346                           prodl	equ	0xFF3
 17347                           intcon	equ	0xFF2
 17348                           postinc0	equ	0xFEE
 17349                           wreg	equ	0xFE8
 17350                           indf1	equ	0xFE7
 17351                           plusw1	equ	0xFE3
 17352                           fsr1h	equ	0xFE2
 17353                           fsr1l	equ	0xFE1
 17354                           indf2	equ	0xFDF
 17355                           postinc2	equ	0xFDE
 17356                           plusw2	equ	0xFDB
 17357                           fsr2h	equ	0xFDA
 17358                           fsr2l	equ	0xFD9
 17359                           status	equ	0xFD8
 17360                           
 17361 ;; *************** function ___wmul *****************
 17362 ;; Defined at:
 17363 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 17364 ;; Parameters:    Size  Location     Type
 17365 ;;  multiplier      2   18[BANK0 ] unsigned int 
 17366 ;;  multiplicand    2   20[BANK0 ] unsigned int 
 17367 ;; Auto vars:     Size  Location     Type
 17368 ;;  product         2   22[BANK0 ] unsigned int 
 17369 ;; Return value:  Size  Location     Type
 17370 ;;                  2   18[BANK0 ] unsigned int 
 17371 ;; Registers used:
 17372 ;;		wreg, status,2, status,0, prodl, prodh
 17373 ;; Tracked objects:
 17374 ;;		On entry : 0/0
 17375 ;;		On exit  : 0/0
 17376 ;;		Unchanged: 0/0
 17377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17378 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17379 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17381 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17382 ;;Total ram usage:        6 bytes
 17383 ;; Hardware stack levels used:    1
 17384 ;; Hardware stack levels required when called:    3
 17385 ;; This function calls:
 17386 ;;		Nothing
 17387 ;; This function is called by:
 17388 ;;		_delay_ms
 17389 ;;		_sprintf
 17390 ;; This function uses a non-reentrant model
 17391 ;;
 17392                           
 17393                           	psect	text57
 17394  015EC4                     __ptext57:
 17395                           	opt stack 0
 17396  015EC4                     ___wmul:
 17397                           	opt stack 26
 17398                           
 17399                           ; BSR set to: 0
 17400                           ;incstack = 0
 17401  015EC4  0100               	movlb	0	; () banked
 17402  015EC6  5172               	movf	___wmul@multiplier& (0+255),w,b
 17403  015EC8  0100               	movlb	0	; () banked
 17404  015ECA  0374               	mulwf	___wmul@multiplicand& (0+255),b
 17405  015ECC  CFF3 F076          	movff	prodl,___wmul@product
 17406  015ED0  CFF4 F077          	movff	prodh,___wmul@product+1
 17407  015ED4  0100               	movlb	0	; () banked
 17408  015ED6  5172               	movf	___wmul@multiplier& (0+255),w,b
 17409  015ED8  0100               	movlb	0	; () banked
 17410  015EDA  0375               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 17411  015EDC  50F3               	movf	prodl,w,c
 17412  015EDE  0100               	movlb	0	; () banked
 17413  015EE0  2777               	addwf	(___wmul@product+1)& (0+255),f,b
 17414  015EE2  0100               	movlb	0	; () banked
 17415  015EE4  5173               	movf	(___wmul@multiplier+1)& (0+255),w,b
 17416  015EE6  0100               	movlb	0	; () banked
 17417  015EE8  0374               	mulwf	___wmul@multiplicand& (0+255),b
 17418  015EEA  50F3               	movf	prodl,w,c
 17419  015EEC  0100               	movlb	0	; () banked
 17420  015EEE  2777               	addwf	(___wmul@product+1)& (0+255),f,b
 17421                           
 17422                           ; BSR set to: 0
 17423  015EF0  C076  F072         	movff	___wmul@product,?___wmul
 17424  015EF4  C077  F073         	movff	___wmul@product+1,?___wmul+1
 17425  015EF8  0012               	return	
 17426                           
 17427                           ; BSR set to: 0
 17428                           
 17429                           ; BSR set to: 0
 17430  015EFA  0012               	return		;funcret
 17431  015EFC                     __end_of___wmul:
 17432                           	opt stack 0
 17433                           tblptru	equ	0xFF8
 17434                           tblptrh	equ	0xFF7
 17435                           tblptrl	equ	0xFF6
 17436                           tablat	equ	0xFF5
 17437                           prodh	equ	0xFF4
 17438                           prodl	equ	0xFF3
 17439                           intcon	equ	0xFF2
 17440                           postinc0	equ	0xFEE
 17441                           wreg	equ	0xFE8
 17442                           indf1	equ	0xFE7
 17443                           plusw1	equ	0xFE3
 17444                           fsr1h	equ	0xFE2
 17445                           fsr1l	equ	0xFE1
 17446                           indf2	equ	0xFDF
 17447                           postinc2	equ	0xFDE
 17448                           plusw2	equ	0xFDB
 17449                           fsr2h	equ	0xFDA
 17450                           fsr2l	equ	0xFD9
 17451                           status	equ	0xFD8
 17452                           
 17453 ;; *************** function _CAN_Tx *****************
 17454 ;; Defined at:
 17455 ;;		line 683 in file "RemoteCan.c"
 17456 ;; Parameters:    Size  Location     Type
 17457 ;;		None
 17458 ;; Auto vars:     Size  Location     Type
 17459 ;;		None
 17460 ;; Return value:  Size  Location     Type
 17461 ;;		None               void
 17462 ;; Registers used:
 17463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17464 ;; Tracked objects:
 17465 ;;		On entry : 0/0
 17466 ;;		On exit  : 0/0
 17467 ;;		Unchanged: 0/0
 17468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17473 ;;Total ram usage:        0 bytes
 17474 ;; Hardware stack levels used:    1
 17475 ;; Hardware stack levels required when called:    4
 17476 ;; This function calls:
 17477 ;;		_CANisTxReady
 17478 ;;		_CANsendMessage
 17479 ;; This function is called by:
 17480 ;;		_main
 17481 ;; This function uses a non-reentrant model
 17482 ;;
 17483                           
 17484                           	psect	text58
 17485  0155B2                     __ptext58:
 17486                           	opt stack 0
 17487  0155B2                     _CAN_Tx:
 17488                           	opt stack 26
 17489                           
 17490                           ;RemoteCan.c: 685: while (CANisTxReady() != 1);
 17491                           
 17492                           ; BSR set to: 0
 17493                           ;incstack = 0
 17494  0155B2  D000               	goto	l6595
 17495  0155B4                     l6595:
 17496  0155B4  EC44  F0B0         	call	_CANisTxReady	;wreg free
 17497  0155B8  06E8               	decf	wreg,f,c
 17498  0155BA  A4D8               	btfss	status,2,c
 17499  0155BC  D7FB               	goto	l6595
 17500                           
 17501                           ;RemoteCan.c: 686: CANsendMessage(0b00000000111, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17502  0155BE  0E07               	movlw	7
 17503  0155C0  0100               	movlb	0	; () banked
 17504  0155C2  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 17505  0155C4  0E00               	movlw	0
 17506  0155C6  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17507  0155C8  0E00               	movlw	0
 17508  0155CA  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17509  0155CC  0E00               	movlw	0
 17510  0155CE  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17511  0155D0  0E26               	movlw	low _data_steering
 17512  0155D2  0100               	movlb	0	; () banked
 17513  0155D4  6F76               	movwf	CANsendMessage@data& (0+255),b
 17514  0155D6  0E01               	movlw	high _data_steering
 17515  0155D8  0100               	movlb	0	; () banked
 17516  0155DA  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 17517  0155DC  0E08               	movlw	8
 17518  0155DE  0100               	movlb	0	; () banked
 17519  0155E0  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 17520  0155E2  0EBC               	movlw	188
 17521  0155E4  0100               	movlb	0	; () banked
 17522  0155E6  6F79               	movwf	CANsendMessage@flags& (0+255),b
 17523  0155E8  ECA8  F08E         	call	_CANsendMessage	;wreg free
 17524                           
 17525                           ;RemoteCan.c: 689: data_speed[0] = set_speed;
 17526  0155EC  C0DF  F11E         	movff	_set_speed,_data_speed	;volatile
 17527                           
 17528                           ;RemoteCan.c: 690: data_speed[1] = (set_speed >> 8);
 17529  0155F0  0100               	movlb	0	; () banked
 17530  0155F2  51E0               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 17531  0155F4  0101               	movlb	1	; () banked
 17532  0155F6  6F1F               	movwf	(_data_speed+1)& (0+255),b
 17533                           
 17534                           ; BSR set to: 1
 17535                           ;RemoteCan.c: 691: data_speed[2] = dir;
 17536  0155F8  C0E3  F120         	movff	_dir,_data_speed+2	;volatile
 17537                           
 17538                           ; BSR set to: 1
 17539                           
 17540                           ;RemoteCan.c: 692: while (CANisTxReady() != 1);
 17541  0155FC  D000               	goto	l6605
 17542  0155FE                     l6605:
 17543  0155FE  EC44  F0B0         	call	_CANisTxReady	;wreg free
 17544  015602  06E8               	decf	wreg,f,c
 17545  015604  A4D8               	btfss	status,2,c
 17546  015606  D7FB               	goto	l6605
 17547                           
 17548                           ;RemoteCan.c: 693: CANsendMessage(0b00000000101, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17549  015608  0E05               	movlw	5
 17550  01560A  0100               	movlb	0	; () banked
 17551  01560C  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 17552  01560E  0E00               	movlw	0
 17553  015610  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17554  015612  0E00               	movlw	0
 17555  015614  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17556  015616  0E00               	movlw	0
 17557  015618  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17558  01561A  0E1E               	movlw	low _data_speed
 17559  01561C  0100               	movlb	0	; () banked
 17560  01561E  6F76               	movwf	CANsendMessage@data& (0+255),b
 17561  015620  0E01               	movlw	high _data_speed
 17562  015622  0100               	movlb	0	; () banked
 17563  015624  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 17564  015626  0E08               	movlw	8
 17565  015628  0100               	movlb	0	; () banked
 17566  01562A  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 17567  01562C  0EBC               	movlw	188
 17568  01562E  0100               	movlb	0	; () banked
 17569  015630  6F79               	movwf	CANsendMessage@flags& (0+255),b
 17570  015632  ECA8  F08E         	call	_CANsendMessage	;wreg free
 17571                           
 17572                           ;RemoteCan.c: 696: while (CANisTxReady() != 1);
 17573  015636  D000               	goto	l6609
 17574  015638                     l6609:
 17575  015638  EC44  F0B0         	call	_CANisTxReady	;wreg free
 17576  01563C  06E8               	decf	wreg,f,c
 17577  01563E  A4D8               	btfss	status,2,c
 17578  015640  D7FB               	goto	l6609
 17579                           
 17580                           ;RemoteCan.c: 697: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17581  015642  0E06               	movlw	6
 17582  015644  0100               	movlb	0	; () banked
 17583  015646  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 17584  015648  0E00               	movlw	0
 17585  01564A  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17586  01564C  0E00               	movlw	0
 17587  01564E  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17588  015650  0E00               	movlw	0
 17589  015652  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17590  015654  0E21               	movlw	low _data_brake
 17591  015656  0100               	movlb	0	; () banked
 17592  015658  6F76               	movwf	CANsendMessage@data& (0+255),b
 17593  01565A  0E00               	movlw	high _data_brake
 17594  01565C  0100               	movlb	0	; () banked
 17595  01565E  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 17596  015660  0E08               	movlw	8
 17597  015662  0100               	movlb	0	; () banked
 17598  015664  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 17599  015666  0EBC               	movlw	188
 17600  015668  0100               	movlb	0	; () banked
 17601  01566A  6F79               	movwf	CANsendMessage@flags& (0+255),b
 17602  01566C  ECA8  F08E         	call	_CANsendMessage	;wreg free
 17603  015670  0012               	return		;funcret
 17604  015672                     __end_of_CAN_Tx:
 17605                           	opt stack 0
 17606                           tblptru	equ	0xFF8
 17607                           tblptrh	equ	0xFF7
 17608                           tblptrl	equ	0xFF6
 17609                           tablat	equ	0xFF5
 17610                           prodh	equ	0xFF4
 17611                           prodl	equ	0xFF3
 17612                           intcon	equ	0xFF2
 17613                           postinc0	equ	0xFEE
 17614                           wreg	equ	0xFE8
 17615                           indf1	equ	0xFE7
 17616                           plusw1	equ	0xFE3
 17617                           fsr1h	equ	0xFE2
 17618                           fsr1l	equ	0xFE1
 17619                           indf2	equ	0xFDF
 17620                           postinc2	equ	0xFDE
 17621                           plusw2	equ	0xFDB
 17622                           fsr2h	equ	0xFDA
 17623                           fsr2l	equ	0xFD9
 17624                           status	equ	0xFD8
 17625                           
 17626 ;; *************** function _CANsendMessage *****************
 17627 ;; Defined at:
 17628 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 17629 ;; Parameters:    Size  Location     Type
 17630 ;;  identifier      4   18[BANK0 ] unsigned long 
 17631 ;;  data            2   22[BANK0 ] PTR unsigned char 
 17632 ;;		 -> data_speed(8), park_assist_state(8), data_steering(8), data_brake(8), 
 17633 ;;		 -> data(8), 
 17634 ;;  dataLength      1   24[BANK0 ] unsigned char 
 17635 ;;  flags           1   25[BANK0 ] enum E16950
 17636 ;; Auto vars:     Size  Location     Type
 17637 ;;  tamp            4   30[BANK0 ] unsigned long 
 17638 ;; Return value:  Size  Location     Type
 17639 ;;		None               void
 17640 ;; Registers used:
 17641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17642 ;; Tracked objects:
 17643 ;;		On entry : 0/0
 17644 ;;		On exit  : 0/0
 17645 ;;		Unchanged: 0/0
 17646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17647 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17648 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17649 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17650 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17651 ;;Total ram usage:       16 bytes
 17652 ;; Hardware stack levels used:    1
 17653 ;; Hardware stack levels required when called:    3
 17654 ;; This function calls:
 17655 ;;		Nothing
 17656 ;; This function is called by:
 17657 ;;		_main
 17658 ;;		_LCD_Handler
 17659 ;;		_CAN_Tx
 17660 ;; This function uses a non-reentrant model
 17661 ;;
 17662                           
 17663                           	psect	text59
 17664  011D50                     __ptext59:
 17665                           	opt stack 0
 17666  011D50                     _CANsendMessage:
 17667                           	opt stack 26
 17668                           
 17669                           ;inc\CANlib.h: 296: unsigned long tamp;
 17670                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 17671                           
 17672                           ;incstack = 0
 17673  011D50  010F               	movlb	15	; () banked
 17674  011D52  B740               	btfsc	64,3,b	;volatile
 17675  011D54  D142               	goto	l385
 17676                           
 17677                           ; BSR set to: 15
 17678                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 17679  011D56  C078  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 17680                           
 17681                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 17682  011D5A  0100               	movlb	0	; () banked
 17683  011D5C  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 17684  011D5E  D003               	goto	l386
 17685                           
 17686                           ; BSR set to: 0
 17687                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 17688  011D60  010F               	movlb	15	; () banked
 17689  011D62  8D45               	bsf	69,6,b	;volatile
 17690  011D64  D002               	goto	l387
 17691  011D66                     l386:
 17692                           
 17693                           ; BSR set to: 0
 17694                           ;inc\CANlib.h: 302: else
 17695                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 17696  011D66  010F               	movlb	15	; () banked
 17697  011D68  9D45               	bcf	69,6,b	;volatile
 17698  011D6A                     l387:
 17699                           
 17700                           ; BSR set to: 15
 17701                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 17702  011D6A  0100               	movlb	0	; () banked
 17703  011D6C  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 17704  011D6E  D07A               	goto	l388
 17705                           
 17706                           ; BSR set to: 0
 17707                           ;inc\CANlib.h: 306: {
 17708                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 17709  011D70  0100               	movlb	0	; () banked
 17710  011D72  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 17711  011D74  0100               	movlb	0	; () banked
 17712  011D76  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17713  011D78  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17714  011D7A  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17715  011D7C  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17716                           
 17717                           ; BSR set to: 0
 17718                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 17719  011D7E  C07E  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 17720                           
 17721                           ; BSR set to: 0
 17722                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 17723  011D82  0E00               	movlw	0
 17724  011D84  0100               	movlb	0	; () banked
 17725  011D86  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 17726  011D88  0100               	movlb	0	; () banked
 17727  011D8A  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17728  011D8C  0EFF               	movlw	255
 17729  011D8E  0100               	movlb	0	; () banked
 17730  011D90  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17731  011D92  0100               	movlb	0	; () banked
 17732  011D94  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17733  011D96  0E00               	movlw	0
 17734  011D98  0100               	movlb	0	; () banked
 17735  011D9A  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17736  011D9C  0100               	movlb	0	; () banked
 17737  011D9E  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17738  011DA0  0E00               	movlw	0
 17739  011DA2  0100               	movlb	0	; () banked
 17740  011DA4  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17741  011DA6  0100               	movlb	0	; () banked
 17742  011DA8  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17743                           
 17744                           ; BSR set to: 0
 17745                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 17746  011DAA  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 17747  011DAE  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17748  011DB2  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17749  011DB6  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17750  011DBA  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 17751  011DBE  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17752  011DC2  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17753  011DC6  0100               	movlb	0	; () banked
 17754  011DC8  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 17755  011DCA  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17756  011DCE  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17757  011DD2  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17758  011DD6  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17759                           
 17760                           ; BSR set to: 0
 17761                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 17762  011DDA  C07E  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 17763                           
 17764                           ; BSR set to: 0
 17765                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 17766  011DDE  0E00               	movlw	0
 17767  011DE0  010F               	movlb	15	; () banked
 17768  011DE2  6F42               	movwf	66,b	;volatile
 17769                           
 17770                           ; BSR set to: 15
 17771                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 17772  011DE4  010F               	movlb	15	; () banked
 17773  011DE6  8742               	bsf	66,3,b	;volatile
 17774                           
 17775                           ; BSR set to: 15
 17776                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 17777  011DE8  0100               	movlb	0	; () banked
 17778  011DEA  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17779  011DEC  D002               	goto	l389
 17780                           
 17781                           ; BSR set to: 0
 17782                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 17783  011DEE  010F               	movlb	15	; () banked
 17784  011DF0  8142               	bsf	66,0,b	;volatile
 17785  011DF2                     l389:
 17786                           
 17787                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 17788  011DF2  0100               	movlb	0	; () banked
 17789  011DF4  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17790  011DF6  D002               	goto	l390
 17791                           
 17792                           ; BSR set to: 0
 17793                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 17794  011DF8  010F               	movlb	15	; () banked
 17795  011DFA  8342               	bsf	66,1,b	;volatile
 17796  011DFC                     l390:
 17797                           
 17798                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 17799  011DFC  0100               	movlb	0	; () banked
 17800  011DFE  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17801  011E00  D002               	goto	l391
 17802                           
 17803                           ; BSR set to: 0
 17804                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 17805  011E02  010F               	movlb	15	; () banked
 17806  011E04  8B42               	bsf	66,5,b	;volatile
 17807  011E06                     l391:
 17808                           
 17809                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 17810  011E06  0100               	movlb	0	; () banked
 17811  011E08  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17812  011E0A  D002               	goto	l392
 17813                           
 17814                           ; BSR set to: 0
 17815                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 17816  011E0C  010F               	movlb	15	; () banked
 17817  011E0E  8D42               	bsf	66,6,b	;volatile
 17818  011E10                     l392:
 17819                           
 17820                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 17821  011E10  0100               	movlb	0	; () banked
 17822  011E12  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17823  011E14  D003               	goto	l5801
 17824                           
 17825                           ; BSR set to: 0
 17826                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 17827  011E16  010F               	movlb	15	; () banked
 17828  011E18  8F42               	bsf	66,7,b	;volatile
 17829  011E1A  D000               	goto	l5801
 17830  011E1C                     l5801:
 17831                           
 17832                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 17833  011E1C  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 17834  011E20  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17835  011E24  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17836  011E28  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17837  011E2C  0E16               	movlw	22
 17838  011E2E  D006               	goto	u6780
 17839  011E30                     u6785:
 17840  011E30  0100               	movlb	0	; () banked
 17841  011E32  90D8               	bcf	status,0,c
 17842  011E34  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17843  011E36  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17844  011E38  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17845  011E3A  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 17846  011E3C                     u6780:
 17847  011E3C  2EE8               	decfsz	wreg,f,c
 17848  011E3E  D7F8               	goto	u6785
 17849  011E40  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17850  011E44  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17851  011E48  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17852  011E4C  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17853                           
 17854                           ; BSR set to: 0
 17855                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17856  011E50  0100               	movlb	0	; () banked
 17857  011E52  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 17858  011E54  0100               	movlb	0	; () banked
 17859  011E56  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17860  011E58  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17861  011E5A  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17862  011E5C  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17863                           
 17864                           ; BSR set to: 0
 17865                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17866  011E5E  C07E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17867                           
 17868                           ;inc\CANlib.h: 332: }
 17869  011E62  D05A               	goto	l5821
 17870  011E64                     l388:
 17871                           
 17872                           ; BSR set to: 0
 17873                           ;inc\CANlib.h: 334: else
 17874                           ;inc\CANlib.h: 336: {
 17875                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17876  011E64  010F               	movlb	15	; () banked
 17877  011E66  9742               	bcf	66,3,b	;volatile
 17878                           
 17879                           ; BSR set to: 15
 17880                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17881  011E68  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 17882  011E6C  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17883  011E70  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17884  011E74  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17885  011E78  0E04               	movlw	4
 17886  011E7A  D006               	goto	u6790
 17887  011E7C                     u6795:
 17888  011E7C  0100               	movlb	0	; () banked
 17889  011E7E  90D8               	bcf	status,0,c
 17890  011E80  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17891  011E82  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17892  011E84  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17893  011E86  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 17894  011E88                     u6790:
 17895  011E88  2EE8               	decfsz	wreg,f,c
 17896  011E8A  D7F8               	goto	u6795
 17897  011E8C  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17898  011E90  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17899  011E94  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17900  011E98  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17901                           
 17902                           ; BSR set to: 0
 17903                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17904  011E9C  0100               	movlb	0	; () banked
 17905  011E9E  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 17906  011EA0  0100               	movlb	0	; () banked
 17907  011EA2  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17908  011EA4  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17909  011EA6  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17910  011EA8  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17911                           
 17912                           ; BSR set to: 0
 17913                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17914  011EAA  C07E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17915                           
 17916                           ; BSR set to: 0
 17917                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17918  011EAE  0E07               	movlw	7
 17919  011EB0  0100               	movlb	0	; () banked
 17920  011EB2  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 17921  011EB4  0100               	movlb	0	; () banked
 17922  011EB6  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17923  011EB8  0E00               	movlw	0
 17924  011EBA  0100               	movlb	0	; () banked
 17925  011EBC  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17926  011EBE  0100               	movlb	0	; () banked
 17927  011EC0  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17928  011EC2  0E00               	movlw	0
 17929  011EC4  0100               	movlb	0	; () banked
 17930  011EC6  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17931  011EC8  0100               	movlb	0	; () banked
 17932  011ECA  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17933  011ECC  0E00               	movlw	0
 17934  011ECE  0100               	movlb	0	; () banked
 17935  011ED0  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17936  011ED2  0100               	movlb	0	; () banked
 17937  011ED4  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17938                           
 17939                           ; BSR set to: 0
 17940                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17941  011ED6  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 17942  011EDA  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17943  011EDE  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17944  011EE2  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17945  011EE6  0E05               	movlw	5
 17946  011EE8                     u6805:
 17947  011EE8  90D8               	bcf	status,0,c
 17948  011EEA  0100               	movlb	0	; () banked
 17949  011EEC  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 17950  011EEE  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17951  011EF0  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17952  011EF2  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17953  011EF4  2EE8               	decfsz	wreg,f,c
 17954  011EF6  D7F8               	goto	u6805
 17955  011EF8  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17956  011EFC  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17957  011F00  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17958  011F04  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17959                           
 17960                           ; BSR set to: 0
 17961                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17962  011F08  010F               	movlb	15	; () banked
 17963  011F0A  5142               	movf	66,w,b	;volatile
 17964  011F0C  0B1F               	andlw	31
 17965  011F0E  010F               	movlb	15	; () banked
 17966  011F10  6F42               	movwf	66,b	;volatile
 17967                           
 17968                           ; BSR set to: 15
 17969                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17970  011F12  C07E  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 17971  011F16  D000               	goto	l5821
 17972  011F18                     l5821:
 17973                           
 17974                           ;inc\CANlib.h: 347: }
 17975                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17976  011F18  0100               	movlb	0	; () banked
 17977  011F1A  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 17978  011F1C  D003               	goto	l395
 17979                           
 17980                           ; BSR set to: 0
 17981                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17982  011F1E  010F               	movlb	15	; () banked
 17983  011F20  8140               	bsf	64,0,b	;volatile
 17984  011F22  D002               	goto	l396
 17985  011F24                     l395:
 17986                           
 17987                           ; BSR set to: 0
 17988                           ;inc\CANlib.h: 351: else
 17989                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17990  011F24  010F               	movlb	15	; () banked
 17991  011F26  9140               	bcf	64,0,b	;volatile
 17992  011F28                     l396:
 17993                           
 17994                           ; BSR set to: 15
 17995                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17996  011F28  0100               	movlb	0	; () banked
 17997  011F2A  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 17998  011F2C  D003               	goto	l397
 17999                           
 18000                           ; BSR set to: 0
 18001                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 18002  011F2E  010F               	movlb	15	; () banked
 18003  011F30  8340               	bsf	64,1,b	;volatile
 18004  011F32  D003               	goto	l5827
 18005  011F34                     l397:
 18006                           
 18007                           ; BSR set to: 0
 18008                           ;inc\CANlib.h: 355: else
 18009                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 18010  011F34  010F               	movlb	15	; () banked
 18011  011F36  9340               	bcf	64,1,b	;volatile
 18012  011F38  D000               	goto	l5827
 18013  011F3A                     l5827:
 18014                           
 18015                           ; BSR set to: 15
 18016                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 18017  011F3A  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 18018  011F3E  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18019  011F42  50DF               	movf	indf2,w,c
 18020  011F44  010F               	movlb	15	; () banked
 18021  011F46  6F46               	movwf	70,b	;volatile
 18022                           
 18023                           ; BSR set to: 15
 18024                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 18025  011F48  0100               	movlb	0	; () banked
 18026  011F4A  EE20 F001          	lfsr	2,1
 18027  011F4E  5176               	movf	CANsendMessage@data& (0+255),w,b
 18028  011F50  26D9               	addwf	fsr2l,f,c
 18029  011F52  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18030  011F54  22DA               	addwfc	fsr2h,f,c
 18031  011F56  50DF               	movf	indf2,w,c
 18032  011F58  010F               	movlb	15	; () banked
 18033  011F5A  6F47               	movwf	71,b	;volatile
 18034                           
 18035                           ; BSR set to: 15
 18036                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 18037  011F5C  0100               	movlb	0	; () banked
 18038  011F5E  EE20 F002          	lfsr	2,2
 18039  011F62  5176               	movf	CANsendMessage@data& (0+255),w,b
 18040  011F64  26D9               	addwf	fsr2l,f,c
 18041  011F66  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18042  011F68  22DA               	addwfc	fsr2h,f,c
 18043  011F6A  50DF               	movf	indf2,w,c
 18044  011F6C  010F               	movlb	15	; () banked
 18045  011F6E  6F48               	movwf	72,b	;volatile
 18046                           
 18047                           ; BSR set to: 15
 18048                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 18049  011F70  0100               	movlb	0	; () banked
 18050  011F72  EE20 F003          	lfsr	2,3
 18051  011F76  5176               	movf	CANsendMessage@data& (0+255),w,b
 18052  011F78  26D9               	addwf	fsr2l,f,c
 18053  011F7A  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18054  011F7C  22DA               	addwfc	fsr2h,f,c
 18055  011F7E  50DF               	movf	indf2,w,c
 18056  011F80  010F               	movlb	15	; () banked
 18057  011F82  6F49               	movwf	73,b	;volatile
 18058                           
 18059                           ; BSR set to: 15
 18060                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 18061  011F84  0100               	movlb	0	; () banked
 18062  011F86  EE20 F004          	lfsr	2,4
 18063  011F8A  5176               	movf	CANsendMessage@data& (0+255),w,b
 18064  011F8C  26D9               	addwf	fsr2l,f,c
 18065  011F8E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18066  011F90  22DA               	addwfc	fsr2h,f,c
 18067  011F92  50DF               	movf	indf2,w,c
 18068  011F94  010F               	movlb	15	; () banked
 18069  011F96  6F4A               	movwf	74,b	;volatile
 18070                           
 18071                           ; BSR set to: 15
 18072                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 18073  011F98  0100               	movlb	0	; () banked
 18074  011F9A  EE20 F005          	lfsr	2,5
 18075  011F9E  5176               	movf	CANsendMessage@data& (0+255),w,b
 18076  011FA0  26D9               	addwf	fsr2l,f,c
 18077  011FA2  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18078  011FA4  22DA               	addwfc	fsr2h,f,c
 18079  011FA6  50DF               	movf	indf2,w,c
 18080  011FA8  010F               	movlb	15	; () banked
 18081  011FAA  6F4B               	movwf	75,b	;volatile
 18082                           
 18083                           ; BSR set to: 15
 18084                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 18085  011FAC  0100               	movlb	0	; () banked
 18086  011FAE  EE20 F006          	lfsr	2,6
 18087  011FB2  5176               	movf	CANsendMessage@data& (0+255),w,b
 18088  011FB4  26D9               	addwf	fsr2l,f,c
 18089  011FB6  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18090  011FB8  22DA               	addwfc	fsr2h,f,c
 18091  011FBA  50DF               	movf	indf2,w,c
 18092  011FBC  010F               	movlb	15	; () banked
 18093  011FBE  6F4C               	movwf	76,b	;volatile
 18094                           
 18095                           ; BSR set to: 15
 18096                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 18097  011FC0  0100               	movlb	0	; () banked
 18098  011FC2  EE20 F007          	lfsr	2,7
 18099  011FC6  5176               	movf	CANsendMessage@data& (0+255),w,b
 18100  011FC8  26D9               	addwf	fsr2l,f,c
 18101  011FCA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18102  011FCC  22DA               	addwfc	fsr2h,f,c
 18103  011FCE  50DF               	movf	indf2,w,c
 18104  011FD0  010F               	movlb	15	; () banked
 18105  011FD2  6F4D               	movwf	77,b	;volatile
 18106                           
 18107                           ; BSR set to: 15
 18108                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 18109  011FD4  010F               	movlb	15	; () banked
 18110  011FD6  8740               	bsf	64,3,b	;volatile
 18111                           
 18112                           ; BSR set to: 15
 18113                           ;inc\CANlib.h: 368: return;
 18114  011FD8  0012               	return	
 18115  011FDA                     l385:
 18116                           
 18117                           ; BSR set to: 15
 18118                           ;inc\CANlib.h: 369: }
 18119                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 18120  011FDA  010F               	movlb	15	; () banked
 18121  011FDC  B730               	btfsc	48,3,b	;volatile
 18122  011FDE  D142               	goto	l400
 18123                           
 18124                           ; BSR set to: 15
 18125                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 18126  011FE0  C078  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 18127                           
 18128                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 18129  011FE4  0100               	movlb	0	; () banked
 18130  011FE6  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 18131  011FE8  D003               	goto	l401
 18132                           
 18133                           ; BSR set to: 0
 18134                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 18135  011FEA  010F               	movlb	15	; () banked
 18136  011FEC  8D35               	bsf	53,6,b	;volatile
 18137  011FEE  D002               	goto	l402
 18138  011FF0                     l401:
 18139                           
 18140                           ; BSR set to: 0
 18141                           ;inc\CANlib.h: 378: else
 18142                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 18143  011FF0  010F               	movlb	15	; () banked
 18144  011FF2  9D35               	bcf	53,6,b	;volatile
 18145  011FF4                     l402:
 18146                           
 18147                           ; BSR set to: 15
 18148                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 18149  011FF4  0100               	movlb	0	; () banked
 18150  011FF6  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 18151  011FF8  D07A               	goto	l403
 18152                           
 18153                           ; BSR set to: 0
 18154                           ;inc\CANlib.h: 382: {
 18155                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 18156  011FFA  0100               	movlb	0	; () banked
 18157  011FFC  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 18158  011FFE  0100               	movlb	0	; () banked
 18159  012000  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18160  012002  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18161  012004  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18162  012006  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18163                           
 18164                           ; BSR set to: 0
 18165                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 18166  012008  C07E  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 18167                           
 18168                           ; BSR set to: 0
 18169                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 18170  01200C  0E00               	movlw	0
 18171  01200E  0100               	movlb	0	; () banked
 18172  012010  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 18173  012012  0100               	movlb	0	; () banked
 18174  012014  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18175  012016  0EFF               	movlw	255
 18176  012018  0100               	movlb	0	; () banked
 18177  01201A  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18178  01201C  0100               	movlb	0	; () banked
 18179  01201E  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18180  012020  0E00               	movlw	0
 18181  012022  0100               	movlb	0	; () banked
 18182  012024  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18183  012026  0100               	movlb	0	; () banked
 18184  012028  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18185  01202A  0E00               	movlw	0
 18186  01202C  0100               	movlb	0	; () banked
 18187  01202E  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18188  012030  0100               	movlb	0	; () banked
 18189  012032  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18190                           
 18191                           ; BSR set to: 0
 18192                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 18193  012034  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 18194  012038  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18195  01203C  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18196  012040  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18197  012044  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 18198  012048  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 18199  01204C  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 18200  012050  0100               	movlb	0	; () banked
 18201  012052  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 18202  012054  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 18203  012058  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18204  01205C  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18205  012060  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18206                           
 18207                           ; BSR set to: 0
 18208                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 18209  012064  C07E  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 18210                           
 18211                           ; BSR set to: 0
 18212                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 18213  012068  0E00               	movlw	0
 18214  01206A  010F               	movlb	15	; () banked
 18215  01206C  6F32               	movwf	50,b	;volatile
 18216                           
 18217                           ; BSR set to: 15
 18218                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 18219  01206E  010F               	movlb	15	; () banked
 18220  012070  8732               	bsf	50,3,b	;volatile
 18221                           
 18222                           ; BSR set to: 15
 18223                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 18224  012072  0100               	movlb	0	; () banked
 18225  012074  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18226  012076  D002               	goto	l404
 18227                           
 18228                           ; BSR set to: 0
 18229                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 18230  012078  010F               	movlb	15	; () banked
 18231  01207A  8132               	bsf	50,0,b	;volatile
 18232  01207C                     l404:
 18233                           
 18234                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 18235  01207C  0100               	movlb	0	; () banked
 18236  01207E  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18237  012080  D002               	goto	l405
 18238                           
 18239                           ; BSR set to: 0
 18240                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 18241  012082  010F               	movlb	15	; () banked
 18242  012084  8332               	bsf	50,1,b	;volatile
 18243  012086                     l405:
 18244                           
 18245                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 18246  012086  0100               	movlb	0	; () banked
 18247  012088  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18248  01208A  D002               	goto	l406
 18249                           
 18250                           ; BSR set to: 0
 18251                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 18252  01208C  010F               	movlb	15	; () banked
 18253  01208E  8B32               	bsf	50,5,b	;volatile
 18254  012090                     l406:
 18255                           
 18256                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 18257  012090  0100               	movlb	0	; () banked
 18258  012092  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18259  012094  D002               	goto	l407
 18260                           
 18261                           ; BSR set to: 0
 18262                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 18263  012096  010F               	movlb	15	; () banked
 18264  012098  8D32               	bsf	50,6,b	;volatile
 18265  01209A                     l407:
 18266                           
 18267                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 18268  01209A  0100               	movlb	0	; () banked
 18269  01209C  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18270  01209E  D003               	goto	l5877
 18271                           
 18272                           ; BSR set to: 0
 18273                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 18274  0120A0  010F               	movlb	15	; () banked
 18275  0120A2  8F32               	bsf	50,7,b	;volatile
 18276  0120A4  D000               	goto	l5877
 18277  0120A6                     l5877:
 18278                           
 18279                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 18280  0120A6  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 18281  0120AA  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18282  0120AE  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18283  0120B2  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18284  0120B6  0E16               	movlw	22
 18285  0120B8  D006               	goto	u6910
 18286  0120BA                     u6915:
 18287  0120BA  0100               	movlb	0	; () banked
 18288  0120BC  90D8               	bcf	status,0,c
 18289  0120BE  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18290  0120C0  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18291  0120C2  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18292  0120C4  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 18293  0120C6                     u6910:
 18294  0120C6  2EE8               	decfsz	wreg,f,c
 18295  0120C8  D7F8               	goto	u6915
 18296  0120CA  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 18297  0120CE  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18298  0120D2  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18299  0120D6  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18300                           
 18301                           ; BSR set to: 0
 18302                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 18303  0120DA  0100               	movlb	0	; () banked
 18304  0120DC  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 18305  0120DE  0100               	movlb	0	; () banked
 18306  0120E0  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18307  0120E2  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18308  0120E4  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18309  0120E6  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18310                           
 18311                           ; BSR set to: 0
 18312                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 18313  0120E8  C07E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 18314                           
 18315                           ;inc\CANlib.h: 407: }
 18316  0120EC  D05A               	goto	l5897
 18317  0120EE                     l403:
 18318                           
 18319                           ; BSR set to: 0
 18320                           ;inc\CANlib.h: 409: else
 18321                           ;inc\CANlib.h: 411: {
 18322                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 18323  0120EE  010F               	movlb	15	; () banked
 18324  0120F0  9732               	bcf	50,3,b	;volatile
 18325                           
 18326                           ; BSR set to: 15
 18327                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 18328  0120F2  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 18329  0120F6  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18330  0120FA  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18331  0120FE  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18332  012102  0E04               	movlw	4
 18333  012104  D006               	goto	u6920
 18334  012106                     u6925:
 18335  012106  0100               	movlb	0	; () banked
 18336  012108  90D8               	bcf	status,0,c
 18337  01210A  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18338  01210C  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18339  01210E  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18340  012110  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 18341  012112                     u6920:
 18342  012112  2EE8               	decfsz	wreg,f,c
 18343  012114  D7F8               	goto	u6925
 18344  012116  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 18345  01211A  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18346  01211E  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18347  012122  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18348                           
 18349                           ; BSR set to: 0
 18350                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 18351  012126  0100               	movlb	0	; () banked
 18352  012128  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 18353  01212A  0100               	movlb	0	; () banked
 18354  01212C  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18355  01212E  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18356  012130  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18357  012132  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18358                           
 18359                           ; BSR set to: 0
 18360                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 18361  012134  C07E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 18362                           
 18363                           ; BSR set to: 0
 18364                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 18365  012138  0E07               	movlw	7
 18366  01213A  0100               	movlb	0	; () banked
 18367  01213C  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 18368  01213E  0100               	movlb	0	; () banked
 18369  012140  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18370  012142  0E00               	movlw	0
 18371  012144  0100               	movlb	0	; () banked
 18372  012146  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18373  012148  0100               	movlb	0	; () banked
 18374  01214A  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18375  01214C  0E00               	movlw	0
 18376  01214E  0100               	movlb	0	; () banked
 18377  012150  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18378  012152  0100               	movlb	0	; () banked
 18379  012154  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18380  012156  0E00               	movlw	0
 18381  012158  0100               	movlb	0	; () banked
 18382  01215A  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18383  01215C  0100               	movlb	0	; () banked
 18384  01215E  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18385                           
 18386                           ; BSR set to: 0
 18387                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 18388  012160  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 18389  012164  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18390  012168  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18391  01216C  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18392  012170  0E05               	movlw	5
 18393  012172                     u6935:
 18394  012172  90D8               	bcf	status,0,c
 18395  012174  0100               	movlb	0	; () banked
 18396  012176  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 18397  012178  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18398  01217A  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18399  01217C  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18400  01217E  2EE8               	decfsz	wreg,f,c
 18401  012180  D7F8               	goto	u6935
 18402  012182  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 18403  012186  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18404  01218A  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18405  01218E  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18406                           
 18407                           ; BSR set to: 0
 18408                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 18409  012192  010F               	movlb	15	; () banked
 18410  012194  5132               	movf	50,w,b	;volatile
 18411  012196  0B1F               	andlw	31
 18412  012198  010F               	movlb	15	; () banked
 18413  01219A  6F32               	movwf	50,b	;volatile
 18414                           
 18415                           ; BSR set to: 15
 18416                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 18417  01219C  C07E  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 18418  0121A0  D000               	goto	l5897
 18419  0121A2                     l5897:
 18420                           
 18421                           ;inc\CANlib.h: 422: }
 18422                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 18423  0121A2  0100               	movlb	0	; () banked
 18424  0121A4  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 18425  0121A6  D003               	goto	l410
 18426                           
 18427                           ; BSR set to: 0
 18428                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 18429  0121A8  010F               	movlb	15	; () banked
 18430  0121AA  8130               	bsf	48,0,b	;volatile
 18431  0121AC  D002               	goto	l411
 18432  0121AE                     l410:
 18433                           
 18434                           ; BSR set to: 0
 18435                           ;inc\CANlib.h: 426: else
 18436                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 18437  0121AE  010F               	movlb	15	; () banked
 18438  0121B0  9130               	bcf	48,0,b	;volatile
 18439  0121B2                     l411:
 18440                           
 18441                           ; BSR set to: 15
 18442                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 18443  0121B2  0100               	movlb	0	; () banked
 18444  0121B4  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 18445  0121B6  D003               	goto	l412
 18446                           
 18447                           ; BSR set to: 0
 18448                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 18449  0121B8  010F               	movlb	15	; () banked
 18450  0121BA  8330               	bsf	48,1,b	;volatile
 18451  0121BC  D003               	goto	l5903
 18452  0121BE                     l412:
 18453                           
 18454                           ; BSR set to: 0
 18455                           ;inc\CANlib.h: 430: else
 18456                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 18457  0121BE  010F               	movlb	15	; () banked
 18458  0121C0  9330               	bcf	48,1,b	;volatile
 18459  0121C2  D000               	goto	l5903
 18460  0121C4                     l5903:
 18461                           
 18462                           ; BSR set to: 15
 18463                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 18464  0121C4  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 18465  0121C8  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18466  0121CC  50DF               	movf	indf2,w,c
 18467  0121CE  010F               	movlb	15	; () banked
 18468  0121D0  6F36               	movwf	54,b	;volatile
 18469                           
 18470                           ; BSR set to: 15
 18471                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 18472  0121D2  0100               	movlb	0	; () banked
 18473  0121D4  EE20 F001          	lfsr	2,1
 18474  0121D8  5176               	movf	CANsendMessage@data& (0+255),w,b
 18475  0121DA  26D9               	addwf	fsr2l,f,c
 18476  0121DC  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18477  0121DE  22DA               	addwfc	fsr2h,f,c
 18478  0121E0  50DF               	movf	indf2,w,c
 18479  0121E2  010F               	movlb	15	; () banked
 18480  0121E4  6F37               	movwf	55,b	;volatile
 18481                           
 18482                           ; BSR set to: 15
 18483                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 18484  0121E6  0100               	movlb	0	; () banked
 18485  0121E8  EE20 F002          	lfsr	2,2
 18486  0121EC  5176               	movf	CANsendMessage@data& (0+255),w,b
 18487  0121EE  26D9               	addwf	fsr2l,f,c
 18488  0121F0  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18489  0121F2  22DA               	addwfc	fsr2h,f,c
 18490  0121F4  50DF               	movf	indf2,w,c
 18491  0121F6  010F               	movlb	15	; () banked
 18492  0121F8  6F38               	movwf	56,b	;volatile
 18493                           
 18494                           ; BSR set to: 15
 18495                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 18496  0121FA  0100               	movlb	0	; () banked
 18497  0121FC  EE20 F003          	lfsr	2,3
 18498  012200  5176               	movf	CANsendMessage@data& (0+255),w,b
 18499  012202  26D9               	addwf	fsr2l,f,c
 18500  012204  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18501  012206  22DA               	addwfc	fsr2h,f,c
 18502  012208  50DF               	movf	indf2,w,c
 18503  01220A  010F               	movlb	15	; () banked
 18504  01220C  6F39               	movwf	57,b	;volatile
 18505                           
 18506                           ; BSR set to: 15
 18507                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 18508  01220E  0100               	movlb	0	; () banked
 18509  012210  EE20 F004          	lfsr	2,4
 18510  012214  5176               	movf	CANsendMessage@data& (0+255),w,b
 18511  012216  26D9               	addwf	fsr2l,f,c
 18512  012218  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18513  01221A  22DA               	addwfc	fsr2h,f,c
 18514  01221C  50DF               	movf	indf2,w,c
 18515  01221E  010F               	movlb	15	; () banked
 18516  012220  6F3A               	movwf	58,b	;volatile
 18517                           
 18518                           ; BSR set to: 15
 18519                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 18520  012222  0100               	movlb	0	; () banked
 18521  012224  EE20 F005          	lfsr	2,5
 18522  012228  5176               	movf	CANsendMessage@data& (0+255),w,b
 18523  01222A  26D9               	addwf	fsr2l,f,c
 18524  01222C  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18525  01222E  22DA               	addwfc	fsr2h,f,c
 18526  012230  50DF               	movf	indf2,w,c
 18527  012232  010F               	movlb	15	; () banked
 18528  012234  6F3B               	movwf	59,b	;volatile
 18529                           
 18530                           ; BSR set to: 15
 18531                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 18532  012236  0100               	movlb	0	; () banked
 18533  012238  EE20 F006          	lfsr	2,6
 18534  01223C  5176               	movf	CANsendMessage@data& (0+255),w,b
 18535  01223E  26D9               	addwf	fsr2l,f,c
 18536  012240  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18537  012242  22DA               	addwfc	fsr2h,f,c
 18538  012244  50DF               	movf	indf2,w,c
 18539  012246  010F               	movlb	15	; () banked
 18540  012248  6F3C               	movwf	60,b	;volatile
 18541                           
 18542                           ; BSR set to: 15
 18543                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 18544  01224A  0100               	movlb	0	; () banked
 18545  01224C  EE20 F007          	lfsr	2,7
 18546  012250  5176               	movf	CANsendMessage@data& (0+255),w,b
 18547  012252  26D9               	addwf	fsr2l,f,c
 18548  012254  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18549  012256  22DA               	addwfc	fsr2h,f,c
 18550  012258  50DF               	movf	indf2,w,c
 18551  01225A  010F               	movlb	15	; () banked
 18552  01225C  6F3D               	movwf	61,b	;volatile
 18553                           
 18554                           ; BSR set to: 15
 18555                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 18556  01225E  010F               	movlb	15	; () banked
 18557  012260  8730               	bsf	48,3,b	;volatile
 18558                           
 18559                           ; BSR set to: 15
 18560                           ;inc\CANlib.h: 444: return;
 18561  012262  0012               	return	
 18562  012264                     l400:
 18563                           
 18564                           ; BSR set to: 15
 18565                           ;inc\CANlib.h: 445: }
 18566                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 18567  012264  010F               	movlb	15	; () banked
 18568  012266  B720               	btfsc	32,3,b	;volatile
 18569  012268  0012               	return	
 18570                           
 18571                           ; BSR set to: 15
 18572                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 18573  01226A  C078  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 18574                           
 18575                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 18576  01226E  0100               	movlb	0	; () banked
 18577  012270  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 18578  012272  D003               	goto	l415
 18579                           
 18580                           ; BSR set to: 0
 18581                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 18582  012274  010F               	movlb	15	; () banked
 18583  012276  8D25               	bsf	37,6,b	;volatile
 18584  012278  D002               	goto	l416
 18585  01227A                     l415:
 18586                           
 18587                           ; BSR set to: 0
 18588                           ;inc\CANlib.h: 454: else
 18589                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 18590  01227A  010F               	movlb	15	; () banked
 18591  01227C  9D25               	bcf	37,6,b	;volatile
 18592  01227E                     l416:
 18593                           
 18594                           ; BSR set to: 15
 18595                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 18596  01227E  0100               	movlb	0	; () banked
 18597  012280  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 18598  012282  D07A               	goto	l417
 18599                           
 18600                           ; BSR set to: 0
 18601                           ;inc\CANlib.h: 458: {
 18602                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 18603  012284  0100               	movlb	0	; () banked
 18604  012286  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 18605  012288  0100               	movlb	0	; () banked
 18606  01228A  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18607  01228C  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18608  01228E  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18609  012290  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18610                           
 18611                           ; BSR set to: 0
 18612                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 18613  012292  C07E  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 18614                           
 18615                           ; BSR set to: 0
 18616                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 18617  012296  0E00               	movlw	0
 18618  012298  0100               	movlb	0	; () banked
 18619  01229A  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 18620  01229C  0100               	movlb	0	; () banked
 18621  01229E  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18622  0122A0  0EFF               	movlw	255
 18623  0122A2  0100               	movlb	0	; () banked
 18624  0122A4  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18625  0122A6  0100               	movlb	0	; () banked
 18626  0122A8  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18627  0122AA  0E00               	movlw	0
 18628  0122AC  0100               	movlb	0	; () banked
 18629  0122AE  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18630  0122B0  0100               	movlb	0	; () banked
 18631  0122B2  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18632  0122B4  0E00               	movlw	0
 18633  0122B6  0100               	movlb	0	; () banked
 18634  0122B8  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18635  0122BA  0100               	movlb	0	; () banked
 18636  0122BC  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18637                           
 18638                           ; BSR set to: 0
 18639                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 18640  0122BE  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 18641  0122C2  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18642  0122C6  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18643  0122CA  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18644  0122CE  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 18645  0122D2  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 18646  0122D6  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 18647  0122DA  0100               	movlb	0	; () banked
 18648  0122DC  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 18649  0122DE  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 18650  0122E2  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18651  0122E6  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18652  0122EA  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18653                           
 18654                           ; BSR set to: 0
 18655                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 18656  0122EE  C07E  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 18657                           
 18658                           ; BSR set to: 0
 18659                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 18660  0122F2  0E00               	movlw	0
 18661  0122F4  010F               	movlb	15	; () banked
 18662  0122F6  6F22               	movwf	34,b	;volatile
 18663                           
 18664                           ; BSR set to: 15
 18665                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 18666  0122F8  010F               	movlb	15	; () banked
 18667  0122FA  8722               	bsf	34,3,b	;volatile
 18668                           
 18669                           ; BSR set to: 15
 18670                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 18671  0122FC  0100               	movlb	0	; () banked
 18672  0122FE  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18673  012300  D002               	goto	l418
 18674                           
 18675                           ; BSR set to: 0
 18676                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 18677  012302  010F               	movlb	15	; () banked
 18678  012304  8122               	bsf	34,0,b	;volatile
 18679  012306                     l418:
 18680                           
 18681                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 18682  012306  0100               	movlb	0	; () banked
 18683  012308  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18684  01230A  D002               	goto	l419
 18685                           
 18686                           ; BSR set to: 0
 18687                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 18688  01230C  010F               	movlb	15	; () banked
 18689  01230E  8322               	bsf	34,1,b	;volatile
 18690  012310                     l419:
 18691                           
 18692                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 18693  012310  0100               	movlb	0	; () banked
 18694  012312  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18695  012314  D002               	goto	l420
 18696                           
 18697                           ; BSR set to: 0
 18698                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 18699  012316  010F               	movlb	15	; () banked
 18700  012318  8B22               	bsf	34,5,b	;volatile
 18701  01231A                     l420:
 18702                           
 18703                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 18704  01231A  0100               	movlb	0	; () banked
 18705  01231C  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18706  01231E  D002               	goto	l421
 18707                           
 18708                           ; BSR set to: 0
 18709                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 18710  012320  010F               	movlb	15	; () banked
 18711  012322  8D22               	bsf	34,6,b	;volatile
 18712  012324                     l421:
 18713                           
 18714                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 18715  012324  0100               	movlb	0	; () banked
 18716  012326  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18717  012328  D003               	goto	l5953
 18718                           
 18719                           ; BSR set to: 0
 18720                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 18721  01232A  010F               	movlb	15	; () banked
 18722  01232C  8F22               	bsf	34,7,b	;volatile
 18723  01232E  D000               	goto	l5953
 18724  012330                     l5953:
 18725                           
 18726                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 18727  012330  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 18728  012334  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18729  012338  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18730  01233C  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18731  012340  0E16               	movlw	22
 18732  012342  D006               	goto	u7040
 18733  012344                     u7045:
 18734  012344  0100               	movlb	0	; () banked
 18735  012346  90D8               	bcf	status,0,c
 18736  012348  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18737  01234A  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18738  01234C  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18739  01234E  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 18740  012350                     u7040:
 18741  012350  2EE8               	decfsz	wreg,f,c
 18742  012352  D7F8               	goto	u7045
 18743  012354  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 18744  012358  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18745  01235C  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18746  012360  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18747                           
 18748                           ; BSR set to: 0
 18749                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 18750  012364  0100               	movlb	0	; () banked
 18751  012366  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 18752  012368  0100               	movlb	0	; () banked
 18753  01236A  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18754  01236C  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18755  01236E  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18756  012370  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18757                           
 18758                           ; BSR set to: 0
 18759                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 18760  012372  C07E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18761                           
 18762                           ;inc\CANlib.h: 483: }
 18763  012376  D05A               	goto	l5973
 18764  012378                     l417:
 18765                           
 18766                           ; BSR set to: 0
 18767                           ;inc\CANlib.h: 485: else
 18768                           ;inc\CANlib.h: 487: {
 18769                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 18770  012378  010F               	movlb	15	; () banked
 18771  01237A  9722               	bcf	34,3,b	;volatile
 18772                           
 18773                           ; BSR set to: 15
 18774                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 18775  01237C  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 18776  012380  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18777  012384  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18778  012388  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18779  01238C  0E04               	movlw	4
 18780  01238E  D006               	goto	u7050
 18781  012390                     u7055:
 18782  012390  0100               	movlb	0	; () banked
 18783  012392  90D8               	bcf	status,0,c
 18784  012394  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18785  012396  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18786  012398  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18787  01239A  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 18788  01239C                     u7050:
 18789  01239C  2EE8               	decfsz	wreg,f,c
 18790  01239E  D7F8               	goto	u7055
 18791  0123A0  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 18792  0123A4  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18793  0123A8  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18794  0123AC  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18795                           
 18796                           ; BSR set to: 0
 18797                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 18798  0123B0  0100               	movlb	0	; () banked
 18799  0123B2  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 18800  0123B4  0100               	movlb	0	; () banked
 18801  0123B6  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18802  0123B8  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18803  0123BA  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18804  0123BC  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18805                           
 18806                           ; BSR set to: 0
 18807                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 18808  0123BE  C07E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18809                           
 18810                           ; BSR set to: 0
 18811                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 18812  0123C2  0E07               	movlw	7
 18813  0123C4  0100               	movlb	0	; () banked
 18814  0123C6  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 18815  0123C8  0100               	movlb	0	; () banked
 18816  0123CA  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18817  0123CC  0E00               	movlw	0
 18818  0123CE  0100               	movlb	0	; () banked
 18819  0123D0  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18820  0123D2  0100               	movlb	0	; () banked
 18821  0123D4  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18822  0123D6  0E00               	movlw	0
 18823  0123D8  0100               	movlb	0	; () banked
 18824  0123DA  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18825  0123DC  0100               	movlb	0	; () banked
 18826  0123DE  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18827  0123E0  0E00               	movlw	0
 18828  0123E2  0100               	movlb	0	; () banked
 18829  0123E4  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18830  0123E6  0100               	movlb	0	; () banked
 18831  0123E8  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18832                           
 18833                           ; BSR set to: 0
 18834                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 18835  0123EA  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 18836  0123EE  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18837  0123F2  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18838  0123F6  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18839  0123FA  0E05               	movlw	5
 18840  0123FC                     u7065:
 18841  0123FC  90D8               	bcf	status,0,c
 18842  0123FE  0100               	movlb	0	; () banked
 18843  012400  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 18844  012402  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18845  012404  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18846  012406  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18847  012408  2EE8               	decfsz	wreg,f,c
 18848  01240A  D7F8               	goto	u7065
 18849  01240C  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 18850  012410  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18851  012414  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18852  012418  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18853                           
 18854                           ; BSR set to: 0
 18855                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 18856  01241C  010F               	movlb	15	; () banked
 18857  01241E  5122               	movf	34,w,b	;volatile
 18858  012420  0B1F               	andlw	31
 18859  012422  010F               	movlb	15	; () banked
 18860  012424  6F22               	movwf	34,b	;volatile
 18861                           
 18862                           ; BSR set to: 15
 18863                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18864  012426  C07E  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 18865  01242A  D000               	goto	l5973
 18866  01242C                     l5973:
 18867                           
 18868                           ;inc\CANlib.h: 498: }
 18869                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18870  01242C  0100               	movlb	0	; () banked
 18871  01242E  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 18872  012430  D003               	goto	l424
 18873                           
 18874                           ; BSR set to: 0
 18875                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18876  012432  010F               	movlb	15	; () banked
 18877  012434  8120               	bsf	32,0,b	;volatile
 18878  012436  D002               	goto	l425
 18879  012438                     l424:
 18880                           
 18881                           ; BSR set to: 0
 18882                           ;inc\CANlib.h: 502: else
 18883                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18884  012438  010F               	movlb	15	; () banked
 18885  01243A  9120               	bcf	32,0,b	;volatile
 18886  01243C                     l425:
 18887                           
 18888                           ; BSR set to: 15
 18889                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18890  01243C  0100               	movlb	0	; () banked
 18891  01243E  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 18892  012440  D003               	goto	l426
 18893                           
 18894                           ; BSR set to: 0
 18895                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18896  012442  010F               	movlb	15	; () banked
 18897  012444  8320               	bsf	32,1,b	;volatile
 18898  012446  D003               	goto	l5979
 18899  012448                     l426:
 18900                           
 18901                           ; BSR set to: 0
 18902                           ;inc\CANlib.h: 506: else
 18903                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18904  012448  010F               	movlb	15	; () banked
 18905  01244A  9320               	bcf	32,1,b	;volatile
 18906  01244C  D000               	goto	l5979
 18907  01244E                     l5979:
 18908                           
 18909                           ; BSR set to: 15
 18910                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18911  01244E  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 18912  012452  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18913  012456  50DF               	movf	indf2,w,c
 18914  012458  010F               	movlb	15	; () banked
 18915  01245A  6F26               	movwf	38,b	;volatile
 18916                           
 18917                           ; BSR set to: 15
 18918                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18919  01245C  0100               	movlb	0	; () banked
 18920  01245E  EE20 F001          	lfsr	2,1
 18921  012462  5176               	movf	CANsendMessage@data& (0+255),w,b
 18922  012464  26D9               	addwf	fsr2l,f,c
 18923  012466  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18924  012468  22DA               	addwfc	fsr2h,f,c
 18925  01246A  50DF               	movf	indf2,w,c
 18926  01246C  010F               	movlb	15	; () banked
 18927  01246E  6F27               	movwf	39,b	;volatile
 18928                           
 18929                           ; BSR set to: 15
 18930                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18931  012470  0100               	movlb	0	; () banked
 18932  012472  EE20 F002          	lfsr	2,2
 18933  012476  5176               	movf	CANsendMessage@data& (0+255),w,b
 18934  012478  26D9               	addwf	fsr2l,f,c
 18935  01247A  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18936  01247C  22DA               	addwfc	fsr2h,f,c
 18937  01247E  50DF               	movf	indf2,w,c
 18938  012480  010F               	movlb	15	; () banked
 18939  012482  6F28               	movwf	40,b	;volatile
 18940                           
 18941                           ; BSR set to: 15
 18942                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18943  012484  0100               	movlb	0	; () banked
 18944  012486  EE20 F003          	lfsr	2,3
 18945  01248A  5176               	movf	CANsendMessage@data& (0+255),w,b
 18946  01248C  26D9               	addwf	fsr2l,f,c
 18947  01248E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18948  012490  22DA               	addwfc	fsr2h,f,c
 18949  012492  50DF               	movf	indf2,w,c
 18950  012494  010F               	movlb	15	; () banked
 18951  012496  6F29               	movwf	41,b	;volatile
 18952                           
 18953                           ; BSR set to: 15
 18954                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18955  012498  0100               	movlb	0	; () banked
 18956  01249A  EE20 F004          	lfsr	2,4
 18957  01249E  5176               	movf	CANsendMessage@data& (0+255),w,b
 18958  0124A0  26D9               	addwf	fsr2l,f,c
 18959  0124A2  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18960  0124A4  22DA               	addwfc	fsr2h,f,c
 18961  0124A6  50DF               	movf	indf2,w,c
 18962  0124A8  010F               	movlb	15	; () banked
 18963  0124AA  6F2A               	movwf	42,b	;volatile
 18964                           
 18965                           ; BSR set to: 15
 18966                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18967  0124AC  0100               	movlb	0	; () banked
 18968  0124AE  EE20 F005          	lfsr	2,5
 18969  0124B2  5176               	movf	CANsendMessage@data& (0+255),w,b
 18970  0124B4  26D9               	addwf	fsr2l,f,c
 18971  0124B6  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18972  0124B8  22DA               	addwfc	fsr2h,f,c
 18973  0124BA  50DF               	movf	indf2,w,c
 18974  0124BC  010F               	movlb	15	; () banked
 18975  0124BE  6F2B               	movwf	43,b	;volatile
 18976                           
 18977                           ; BSR set to: 15
 18978                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18979  0124C0  0100               	movlb	0	; () banked
 18980  0124C2  EE20 F006          	lfsr	2,6
 18981  0124C6  5176               	movf	CANsendMessage@data& (0+255),w,b
 18982  0124C8  26D9               	addwf	fsr2l,f,c
 18983  0124CA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18984  0124CC  22DA               	addwfc	fsr2h,f,c
 18985  0124CE  50DF               	movf	indf2,w,c
 18986  0124D0  010F               	movlb	15	; () banked
 18987  0124D2  6F2C               	movwf	44,b	;volatile
 18988                           
 18989                           ; BSR set to: 15
 18990                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18991  0124D4  0100               	movlb	0	; () banked
 18992  0124D6  EE20 F007          	lfsr	2,7
 18993  0124DA  5176               	movf	CANsendMessage@data& (0+255),w,b
 18994  0124DC  26D9               	addwf	fsr2l,f,c
 18995  0124DE  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18996  0124E0  22DA               	addwfc	fsr2h,f,c
 18997  0124E2  50DF               	movf	indf2,w,c
 18998  0124E4  010F               	movlb	15	; () banked
 18999  0124E6  6F2D               	movwf	45,b	;volatile
 19000                           
 19001                           ; BSR set to: 15
 19002                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 19003  0124E8  010F               	movlb	15	; () banked
 19004  0124EA  8720               	bsf	32,3,b	;volatile
 19005                           
 19006                           ; BSR set to: 15
 19007                           ;inc\CANlib.h: 520: return;
 19008  0124EC  0012               	return	
 19009                           
 19010                           ; BSR set to: 15
 19011                           
 19012                           ; BSR set to: 15
 19013  0124EE  0012               	return		;funcret
 19014  0124F0                     __end_of_CANsendMessage:
 19015                           	opt stack 0
 19016                           tblptru	equ	0xFF8
 19017                           tblptrh	equ	0xFF7
 19018                           tblptrl	equ	0xFF6
 19019                           tablat	equ	0xFF5
 19020                           prodh	equ	0xFF4
 19021                           prodl	equ	0xFF3
 19022                           intcon	equ	0xFF2
 19023                           postinc0	equ	0xFEE
 19024                           wreg	equ	0xFE8
 19025                           indf1	equ	0xFE7
 19026                           plusw1	equ	0xFE3
 19027                           fsr1h	equ	0xFE2
 19028                           fsr1l	equ	0xFE1
 19029                           indf2	equ	0xFDF
 19030                           postinc2	equ	0xFDE
 19031                           plusw2	equ	0xFDB
 19032                           fsr2h	equ	0xFDA
 19033                           fsr2l	equ	0xFD9
 19034                           status	equ	0xFD8
 19035                           
 19036 ;; *************** function _CANisTxReady *****************
 19037 ;; Defined at:
 19038 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 19039 ;; Parameters:    Size  Location     Type
 19040 ;;		None
 19041 ;; Auto vars:     Size  Location     Type
 19042 ;;		None
 19043 ;; Return value:  Size  Location     Type
 19044 ;;                  1    wreg      unsigned char 
 19045 ;; Registers used:
 19046 ;;		wreg, status,2
 19047 ;; Tracked objects:
 19048 ;;		On entry : 0/0
 19049 ;;		On exit  : 0/0
 19050 ;;		Unchanged: 0/0
 19051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19053 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19055 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19056 ;;Total ram usage:        1 bytes
 19057 ;; Hardware stack levels used:    1
 19058 ;; Hardware stack levels required when called:    3
 19059 ;; This function calls:
 19060 ;;		Nothing
 19061 ;; This function is called by:
 19062 ;;		_main
 19063 ;;		_LCD_Handler
 19064 ;;		_CAN_Tx
 19065 ;; This function uses a non-reentrant model
 19066 ;;
 19067                           
 19068                           	psect	text60
 19069  016088                     __ptext60:
 19070                           	opt stack 0
 19071  016088                     _CANisTxReady:
 19072                           	opt stack 26
 19073                           
 19074                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 19075                           
 19076                           ; BSR set to: 15
 19077                           ;incstack = 0
 19078  016088  0E01               	movlw	1
 19079  01608A  0100               	movlb	0	; () banked
 19080  01608C  6F72               	movwf	_CANisTxReady$3255& (0+255),b
 19081                           
 19082                           ; BSR set to: 0
 19083  01608E  010F               	movlb	15	; () banked
 19084  016090  A740               	btfss	64,3,b	;volatile
 19085  016092  D009               	goto	l578
 19086                           
 19087                           ; BSR set to: 15
 19088  016094  010F               	movlb	15	; () banked
 19089  016096  A730               	btfss	48,3,b	;volatile
 19090  016098  D006               	goto	l578
 19091                           
 19092                           ; BSR set to: 15
 19093  01609A  010F               	movlb	15	; () banked
 19094  01609C  A720               	btfss	32,3,b	;volatile
 19095  01609E  D003               	goto	l578
 19096                           
 19097                           ; BSR set to: 15
 19098  0160A0  0E00               	movlw	0
 19099  0160A2  0100               	movlb	0	; () banked
 19100  0160A4  6F72               	movwf	_CANisTxReady$3255& (0+255),b
 19101  0160A6                     l578:
 19102  0160A6  0100               	movlb	0	; () banked
 19103  0160A8  5172               	movf	_CANisTxReady$3255& (0+255),w,b
 19104  0160AA  0012               	return	
 19105                           
 19106                           ; BSR set to: 0
 19107                           
 19108                           ; BSR set to: 0
 19109  0160AC  0012               	return		;funcret
 19110  0160AE                     __end_of_CANisTxReady:
 19111                           	opt stack 0
 19112                           tblptru	equ	0xFF8
 19113                           tblptrh	equ	0xFF7
 19114                           tblptrl	equ	0xFF6
 19115                           tablat	equ	0xFF5
 19116                           prodh	equ	0xFF4
 19117                           prodl	equ	0xFF3
 19118                           intcon	equ	0xFF2
 19119                           postinc0	equ	0xFEE
 19120                           wreg	equ	0xFE8
 19121                           indf1	equ	0xFE7
 19122                           plusw1	equ	0xFE3
 19123                           fsr1h	equ	0xFE2
 19124                           fsr1l	equ	0xFE1
 19125                           indf2	equ	0xFDF
 19126                           postinc2	equ	0xFDE
 19127                           plusw2	equ	0xFDB
 19128                           fsr2h	equ	0xFDA
 19129                           fsr2l	equ	0xFD9
 19130                           status	equ	0xFD8
 19131                           
 19132 ;; *************** function _ISR_bassa *****************
 19133 ;; Defined at:
 19134 ;;		line 208 in file "RemoteCan.c"
 19135 ;; Parameters:    Size  Location     Type
 19136 ;;		None
 19137 ;; Auto vars:     Size  Location     Type
 19138 ;;		None
 19139 ;; Return value:  Size  Location     Type
 19140 ;;		None               void
 19141 ;; Registers used:
 19142 ;;		wreg, status,2, status,0
 19143 ;; Tracked objects:
 19144 ;;		On entry : 0/0
 19145 ;;		On exit  : 0/0
 19146 ;;		Unchanged: 0/0
 19147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19150 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19151 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19152 ;;Total ram usage:       17 bytes
 19153 ;; Hardware stack levels used:    1
 19154 ;; Hardware stack levels required when called:    2
 19155 ;; This function calls:
 19156 ;;		Nothing
 19157 ;; This function is called by:
 19158 ;;		Interrupt level 1
 19159 ;; This function uses a non-reentrant model
 19160 ;;
 19161                           
 19162                           	psect	intcodelo
 19163  000018                     __pintcodelo:
 19164                           	opt stack 0
 19165  000018                     _ISR_bassa:
 19166                           	opt stack 20
 19167                           
 19168                           ; BSR set to: 0
 19169                           ;incstack = 0
 19170  000018  CFD8 F029          	movff	status,??_ISR_bassa
 19171  00001C  CFE8 F02A          	movff	wreg,??_ISR_bassa+1
 19172  000020  CFE0 F02B          	movff	bsr,??_ISR_bassa+2
 19173  000024  CFFA F02C          	movff	pclath,??_ISR_bassa+3
 19174  000028  CFFB F02D          	movff	pclatu,??_ISR_bassa+4
 19175  00002C  CFE9 F02E          	movff	fsr0l,??_ISR_bassa+5
 19176  000030  CFEA F02F          	movff	fsr0h,??_ISR_bassa+6
 19177  000034  CFE1 F030          	movff	fsr1l,??_ISR_bassa+7
 19178  000038  CFE2 F031          	movff	fsr1h,??_ISR_bassa+8
 19179  00003C  CFD9 F032          	movff	fsr2l,??_ISR_bassa+9
 19180  000040  CFDA F033          	movff	fsr2h,??_ISR_bassa+10
 19181  000044  CFF3 F034          	movff	prodl,??_ISR_bassa+11
 19182  000048  CFF4 F035          	movff	prodh,??_ISR_bassa+12
 19183  00004C  CFF6 F036          	movff	tblptrl,??_ISR_bassa+13
 19184  000050  CFF7 F037          	movff	tblptrh,??_ISR_bassa+14
 19185  000054  CFF8 F038          	movff	tblptru,??_ISR_bassa+15
 19186  000058  CFF5 F039          	movff	tablat,??_ISR_bassa+16
 19187                           
 19188                           ;RemoteCan.c: 209: if (PIR2bits.TMR3IF == 1) {
 19189  00005C  A2A1               	btfss	4001,1,c	;volatile
 19190  00005E  D00C               	goto	i1l815
 19191                           
 19192                           ;RemoteCan.c: 210: time_counter++;
 19193  000060  0E01               	movlw	1
 19194  000062  2605               	addwf	_time_counter,f,c	;volatile
 19195  000064  0E00               	movlw	0
 19196  000066  2206               	addwfc	_time_counter+1,f,c	;volatile
 19197  000068  2207               	addwfc	_time_counter+2,f,c	;volatile
 19198  00006A  2208               	addwfc	_time_counter+3,f,c	;volatile
 19199                           
 19200                           ;RemoteCan.c: 211: TMR3H = 0x63;
 19201  00006C  0E63               	movlw	99
 19202  00006E  6EB3               	movwf	4019,c	;volatile
 19203                           
 19204                           ;RemoteCan.c: 212: TMR3L = 0xC0;
 19205  000070  0EC0               	movlw	192
 19206  000072  6EB2               	movwf	4018,c	;volatile
 19207                           
 19208                           ;RemoteCan.c: 213: PIR2bits.TMR3IF = 0;
 19209  000074  92A1               	bcf	4001,1,c	;volatile
 19210  000076  D000               	goto	i1l815
 19211  000078                     i1l815:
 19212  000078  C039  FFF5         	movff	??_ISR_bassa+16,tablat
 19213  00007C  C038  FFF8         	movff	??_ISR_bassa+15,tblptru
 19214  000080  C037  FFF7         	movff	??_ISR_bassa+14,tblptrh
 19215  000084  C036  FFF6         	movff	??_ISR_bassa+13,tblptrl
 19216  000088  C035  FFF4         	movff	??_ISR_bassa+12,prodh
 19217  00008C  C034  FFF3         	movff	??_ISR_bassa+11,prodl
 19218  000090  C033  FFDA         	movff	??_ISR_bassa+10,fsr2h
 19219  000094  C032  FFD9         	movff	??_ISR_bassa+9,fsr2l
 19220  000098  C031  FFE2         	movff	??_ISR_bassa+8,fsr1h
 19221  00009C  C030  FFE1         	movff	??_ISR_bassa+7,fsr1l
 19222  0000A0  C02F  FFEA         	movff	??_ISR_bassa+6,fsr0h
 19223  0000A4  C02E  FFE9         	movff	??_ISR_bassa+5,fsr0l
 19224  0000A8  C02D  FFFB         	movff	??_ISR_bassa+4,pclatu
 19225  0000AC  C02C  FFFA         	movff	??_ISR_bassa+3,pclath
 19226  0000B0  C02B  FFE0         	movff	??_ISR_bassa+2,bsr
 19227  0000B4  C02A  FFE8         	movff	??_ISR_bassa+1,wreg
 19228  0000B8  C029  FFD8         	movff	??_ISR_bassa,status
 19229  0000BC  0010               	retfie	
 19230  0000BE                     __end_of_ISR_bassa:
 19231                           	opt stack 0
 19232                           pclatu	equ	0xFFB
 19233                           pclath	equ	0xFFA
 19234                           tblptru	equ	0xFF8
 19235                           tblptrh	equ	0xFF7
 19236                           tblptrl	equ	0xFF6
 19237                           tablat	equ	0xFF5
 19238                           prodh	equ	0xFF4
 19239                           prodl	equ	0xFF3
 19240                           intcon	equ	0xFF2
 19241                           postinc0	equ	0xFEE
 19242                           fsr0h	equ	0xFEA
 19243                           fsr0l	equ	0xFE9
 19244                           wreg	equ	0xFE8
 19245                           indf1	equ	0xFE7
 19246                           plusw1	equ	0xFE3
 19247                           fsr1h	equ	0xFE2
 19248                           fsr1l	equ	0xFE1
 19249                           bsr	equ	0xFE0
 19250                           indf2	equ	0xFDF
 19251                           postinc2	equ	0xFDE
 19252                           plusw2	equ	0xFDB
 19253                           fsr2h	equ	0xFDA
 19254                           fsr2l	equ	0xFD9
 19255                           status	equ	0xFD8
 19256                           
 19257 ;; *************** function _ISR_alta *****************
 19258 ;; Defined at:
 19259 ;;		line 125 in file "RemoteCan.c"
 19260 ;; Parameters:    Size  Location     Type
 19261 ;;		None
 19262 ;; Auto vars:     Size  Location     Type
 19263 ;;		None
 19264 ;; Return value:  Size  Location     Type
 19265 ;;		None               void
 19266 ;; Registers used:
 19267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19268 ;; Tracked objects:
 19269 ;;		On entry : 0/0
 19270 ;;		On exit  : 0/0
 19271 ;;		Unchanged: 0/0
 19272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19275 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19276 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19277 ;;Total ram usage:       18 bytes
 19278 ;; Hardware stack levels used:    1
 19279 ;; Hardware stack levels required when called:    1
 19280 ;; This function calls:
 19281 ;;		_CANisRxReady
 19282 ;;		_CANreceiveMessage
 19283 ;;		i2_CANisTxReady
 19284 ;;		i2_CANsendMessage
 19285 ;; This function is called by:
 19286 ;;		Interrupt level 2
 19287 ;; This function uses a non-reentrant model
 19288 ;;
 19289                           
 19290                           	psect	intcode
 19291  000008                     __pintcode:
 19292                           	opt stack 0
 19293  000008                     _ISR_alta:
 19294                           	opt stack 20
 19295                           
 19296                           ;incstack = 0
 19297  000008  CFFA F064          	movff	pclath,??_ISR_alta+4
 19298  00000C  CFFB F065          	movff	pclatu,??_ISR_alta+5
 19299  000010  CFE9 F066          	movff	fsr0l,??_ISR_alta+6
 19300  000014  EF49  F09E         	goto	int_func
 19301                           pclatu	equ	0xFFB
 19302                           pclath	equ	0xFFA
 19303                           tblptru	equ	0xFF8
 19304                           tblptrh	equ	0xFF7
 19305                           tblptrl	equ	0xFF6
 19306                           tablat	equ	0xFF5
 19307                           prodh	equ	0xFF4
 19308                           prodl	equ	0xFF3
 19309                           intcon	equ	0xFF2
 19310                           postinc0	equ	0xFEE
 19311                           fsr0h	equ	0xFEA
 19312                           fsr0l	equ	0xFE9
 19313                           wreg	equ	0xFE8
 19314                           indf1	equ	0xFE7
 19315                           plusw1	equ	0xFE3
 19316                           fsr1h	equ	0xFE2
 19317                           fsr1l	equ	0xFE1
 19318                           bsr	equ	0xFE0
 19319                           indf2	equ	0xFDF
 19320                           postinc2	equ	0xFDE
 19321                           plusw2	equ	0xFDB
 19322                           fsr2h	equ	0xFDA
 19323                           fsr2l	equ	0xFD9
 19324                           status	equ	0xFD8
 19325                           
 19326                           	psect	intcode_body
 19327  013C92                     __pintcode_body:
 19328                           	opt stack 20
 19329  013C92                     int_func:
 19330                           	opt stack 20
 19331  013C92  CFEA F067          	movff	fsr0h,??_ISR_alta+7
 19332  013C96  CFE1 F068          	movff	fsr1l,??_ISR_alta+8
 19333  013C9A  CFE2 F069          	movff	fsr1h,??_ISR_alta+9
 19334  013C9E  CFD9 F06A          	movff	fsr2l,??_ISR_alta+10
 19335  013CA2  CFDA F06B          	movff	fsr2h,??_ISR_alta+11
 19336  013CA6  CFF3 F06C          	movff	prodl,??_ISR_alta+12
 19337  013CAA  CFF4 F06D          	movff	prodh,??_ISR_alta+13
 19338  013CAE  CFF6 F06E          	movff	tblptrl,??_ISR_alta+14
 19339  013CB2  CFF7 F06F          	movff	tblptrh,??_ISR_alta+15
 19340  013CB6  CFF8 F070          	movff	tblptru,??_ISR_alta+16
 19341  013CBA  CFF5 F071          	movff	tablat,??_ISR_alta+17
 19342                           
 19343                           ;RemoteCan.c: 126: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 19344  013CBE  B2A4               	btfsc	4004,1,c	;volatile
 19345  013CC0  D002               	goto	i2l8645
 19346  013CC2  A0A4               	btfss	4004,0,c	;volatile
 19347  013CC4  D10F               	goto	i2l811
 19348  013CC6                     i2l8645:
 19349                           
 19350                           ;RemoteCan.c: 127: if (CANisRxReady()) {
 19351  013CC6  EC92  F0B0         	call	_CANisRxReady	;wreg free
 19352  013CCA  0900               	iorlw	0
 19353  013CCC  B4D8               	btfsc	status,2,c
 19354  013CCE  D107               	goto	i2l794
 19355                           
 19356                           ;RemoteCan.c: 128: CANreceiveMessage(&msg);
 19357  013CD0  0E12               	movlw	low _msg
 19358  013CD2  6E3A               	movwf	CANreceiveMessage@msg,c
 19359  013CD4  0E00               	movlw	high _msg
 19360  013CD6  6E3B               	movwf	CANreceiveMessage@msg+1,c
 19361  013CD8  ECCA  F095         	call	_CANreceiveMessage	;wreg free
 19362                           
 19363                           ;RemoteCan.c: 129: RTR_Flag = msg.RTR;
 19364  013CDC  B020               	btfsc	_msg+14,0,c
 19365  013CDE  D002               	bra	i2u1083_45
 19366  013CE0  984A               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19367  013CE2  D001               	bra	i2u1083_46
 19368  013CE4                     i2u1083_45:
 19369  013CE4  884A               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19370  013CE6                     i2u1083_46:
 19371                           
 19372                           ;RemoteCan.c: 130: id = msg.identifier;
 19373  013CE6  C012  F001         	movff	_msg,_id	;volatile
 19374  013CEA  C013  F002         	movff	_msg+1,_id+1	;volatile
 19375  013CEE  C014  F003         	movff	_msg+2,_id+2	;volatile
 19376  013CF2  C015  F004         	movff	_msg+3,_id+3	;volatile
 19377                           
 19378                           ;RemoteCan.c: 132: if (id == 0b00000001000) {
 19379  013CF6  0E08               	movlw	8
 19380  013CF8  1801               	xorwf	_id,w,c	;volatile
 19381  013CFA  1002               	iorwf	_id+1,w,c	;volatile
 19382  013CFC  1003               	iorwf	_id+2,w,c	;volatile
 19383  013CFE  1004               	iorwf	_id+3,w,c	;volatile
 19384  013D00  A4D8               	btfss	status,2,c
 19385  013D02  D028               	goto	i2l8663
 19386                           
 19387                           ;RemoteCan.c: 133: left_speed = msg.data[1];
 19388  013D04  C017  F00B         	movff	_msg+5,_left_speed	;volatile
 19389  013D08  6A0C               	clrf	_left_speed+1,c	;volatile
 19390                           
 19391                           ;RemoteCan.c: 134: left_speed = ((left_speed << 8) | (msg.data[0]));
 19392  013D0A  500B               	movf	_left_speed,w,c	;volatile
 19393  013D0C  0100               	movlb	0	; () banked
 19394  013D0E  6F60               	movwf	??_ISR_alta& (0+255),b
 19395  013D10  5016               	movf	_msg+4,w,c
 19396  013D12  6E0B               	movwf	_left_speed,c	;volatile
 19397  013D14  C060  F00C         	movff	??_ISR_alta,_left_speed+1	;volatile
 19398                           
 19399                           ; BSR set to: 0
 19400                           ;RemoteCan.c: 135: right_speed = msg.data[3];
 19401  013D18  C019  F00D         	movff	_msg+7,_right_speed	;volatile
 19402  013D1C  6A0E               	clrf	_right_speed+1,c	;volatile
 19403                           
 19404                           ;RemoteCan.c: 136: right_speed = ((right_speed << 8) | (msg.data[2]));
 19405  013D1E  500D               	movf	_right_speed,w,c	;volatile
 19406  013D20  0100               	movlb	0	; () banked
 19407  013D22  6F60               	movwf	??_ISR_alta& (0+255),b
 19408  013D24  5018               	movf	_msg+6,w,c
 19409  013D26  6E0D               	movwf	_right_speed,c	;volatile
 19410  013D28  C060  F00E         	movff	??_ISR_alta,_right_speed+1	;volatile
 19411                           
 19412                           ; BSR set to: 0
 19413                           ;RemoteCan.c: 137: actual_speed = (right_speed + left_speed) / 2;
 19414  013D2C  500B               	movf	_left_speed,w,c	;volatile
 19415  013D2E  240D               	addwf	_right_speed,w,c	;volatile
 19416  013D30  0100               	movlb	0	; () banked
 19417  013D32  6F60               	movwf	??_ISR_alta& (0+255),b
 19418  013D34  500C               	movf	_left_speed+1,w,c	;volatile
 19419  013D36  200E               	addwfc	_right_speed+1,w,c	;volatile
 19420  013D38  0100               	movlb	0	; () banked
 19421  013D3A  6F61               	movwf	(??_ISR_alta+1)& (0+255),b
 19422  013D3C  90D8               	bcf	status,0,c
 19423  013D3E  0100               	movlb	0	; () banked
 19424  013D40  3161               	rrcf	(??_ISR_alta+1)& (0+255),w,b
 19425  013D42  0100               	movlb	0	; () banked
 19426  013D44  6F62               	movwf	(??_ISR_alta+2)& (0+255),b
 19427  013D46  0100               	movlb	0	; () banked
 19428  013D48  3160               	rrcf	??_ISR_alta& (0+255),w,b
 19429  013D4A  0100               	movlb	0	; () banked
 19430  013D4C  6FDB               	movwf	_actual_speed& (0+255),b	;volatile
 19431  013D4E  C062  F0DC         	movff	??_ISR_alta+2,_actual_speed+1	;volatile
 19432  013D52  D000               	goto	i2l8663
 19433  013D54                     i2l8663:
 19434                           
 19435                           ;RemoteCan.c: 138: }
 19436                           ;RemoteCan.c: 140: if (id == 0b00000001101) {
 19437  013D54  0E0D               	movlw	13
 19438  013D56  1801               	xorwf	_id,w,c	;volatile
 19439  013D58  1002               	iorwf	_id+1,w,c	;volatile
 19440  013D5A  1003               	iorwf	_id+2,w,c	;volatile
 19441  013D5C  1004               	iorwf	_id+3,w,c	;volatile
 19442  013D5E  A4D8               	btfss	status,2,c
 19443  013D60  D049               	goto	i2l8695
 19444                           
 19445                           ;RemoteCan.c: 141: if (msg.data[0] == 1) {
 19446  013D62  0416               	decf	_msg+4,w,c
 19447  013D64  A4D8               	btfss	status,2,c
 19448  013D66  D008               	goto	i2l8671
 19449                           
 19450                           ;RemoteCan.c: 142: space_available = 1;
 19451  013D68  8C4B               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 19452                           
 19453                           ;RemoteCan.c: 143: space_gap_reached = 0;
 19454  013D6A  9E4B               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 19455                           
 19456                           ;RemoteCan.c: 144: F2_switch = 0;
 19457  013D6C  944A               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 19458                           
 19459                           ;RemoteCan.c: 145: parking_message_E = 1;
 19460  013D6E  844B               	bsf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
 19461                           
 19462                           ;RemoteCan.c: 146: parking_message_ID = 0;
 19463  013D70  0E00               	movlw	0
 19464  013D72  0100               	movlb	0	; () banked
 19465  013D74  6FE4               	movwf	_parking_message_ID& (0+255),b	;volatile
 19466  013D76  D000               	goto	i2l8671
 19467  013D78                     i2l8671:
 19468                           
 19469                           ;RemoteCan.c: 147: }
 19470                           ;RemoteCan.c: 149: if (msg.data[0] == 2) {
 19471  013D78  0E02               	movlw	2
 19472  013D7A  1816               	xorwf	_msg+4,w,c
 19473  013D7C  A4D8               	btfss	status,2,c
 19474  013D7E  D007               	goto	i2l8677
 19475                           
 19476                           ;RemoteCan.c: 150: space_available = 1;
 19477  013D80  8C4B               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 19478                           
 19479                           ;RemoteCan.c: 151: space_gap_reached = 1;
 19480  013D82  8E4B               	bsf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 19481                           
 19482                           ;RemoteCan.c: 152: Can_Tx_Force = 1;
 19483  013D84  804A               	bsf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
 19484                           
 19485                           ;RemoteCan.c: 153: parking_message_ID = 2;
 19486  013D86  0E02               	movlw	2
 19487  013D88  0100               	movlb	0	; () banked
 19488  013D8A  6FE4               	movwf	_parking_message_ID& (0+255),b	;volatile
 19489  013D8C  D000               	goto	i2l8677
 19490  013D8E                     i2l8677:
 19491                           
 19492                           ;RemoteCan.c: 154: }
 19493                           ;RemoteCan.c: 156: if (msg.data[0] == 3) {
 19494  013D8E  0E03               	movlw	3
 19495  013D90  1816               	xorwf	_msg+4,w,c
 19496  013D92  A4D8               	btfss	status,2,c
 19497  013D94  D015               	goto	i2l8685
 19498                           
 19499                           ;RemoteCan.c: 157: parking_message_ID = 6;
 19500  013D96  0E06               	movlw	6
 19501  013D98  0100               	movlb	0	; () banked
 19502  013D9A  6FE4               	movwf	_parking_message_ID& (0+255),b	;volatile
 19503                           
 19504                           ; BSR set to: 0
 19505                           ;RemoteCan.c: 158: F1_switch = 0;
 19506  013D9C  924A               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 19507                           
 19508                           ; BSR set to: 0
 19509                           ;RemoteCan.c: 159: pr_time_6 = time_counter + (2000 / 10);
 19510  013D9E  0EC8               	movlw	200
 19511  013DA0  2405               	addwf	_time_counter,w,c	;volatile
 19512  013DA2  0100               	movlb	0	; () banked
 19513  013DA4  6FD5               	movwf	_pr_time_6& (0+255),b	;volatile
 19514  013DA6  0E00               	movlw	0
 19515  013DA8  2006               	addwfc	_time_counter+1,w,c	;volatile
 19516  013DAA  0100               	movlb	0	; () banked
 19517  013DAC  6FD6               	movwf	(_pr_time_6+1)& (0+255),b	;volatile
 19518  013DAE  0E00               	movlw	0
 19519  013DB0  2007               	addwfc	_time_counter+2,w,c	;volatile
 19520  013DB2  0100               	movlb	0	; () banked
 19521  013DB4  6FD7               	movwf	(_pr_time_6+2)& (0+255),b	;volatile
 19522  013DB6  0E00               	movlw	0
 19523  013DB8  2008               	addwfc	_time_counter+3,w,c	;volatile
 19524  013DBA  0100               	movlb	0	; () banked
 19525  013DBC  6FD8               	movwf	(_pr_time_6+3)& (0+255),b	;volatile
 19526  013DBE  D000               	goto	i2l8685
 19527  013DC0                     i2l8685:
 19528                           
 19529                           ;RemoteCan.c: 160: }
 19530                           ;RemoteCan.c: 161: if (msg.data[0] == 4) {
 19531  013DC0  0E04               	movlw	4
 19532  013DC2  1816               	xorwf	_msg+4,w,c
 19533  013DC4  A4D8               	btfss	status,2,c
 19534  013DC6  D016               	goto	i2l8695
 19535                           
 19536                           ;RemoteCan.c: 162: parking_message_ID = 6;
 19537  013DC8  0E06               	movlw	6
 19538  013DCA  0100               	movlb	0	; () banked
 19539  013DCC  6FE4               	movwf	_parking_message_ID& (0+255),b	;volatile
 19540                           
 19541                           ; BSR set to: 0
 19542                           ;RemoteCan.c: 163: parking_error = 1;
 19543  013DCE  824B               	bsf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
 19544                           
 19545                           ; BSR set to: 0
 19546                           ;RemoteCan.c: 164: F1_switch = 0;
 19547  013DD0  924A               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 19548                           
 19549                           ; BSR set to: 0
 19550                           ;RemoteCan.c: 165: pr_time_6 = time_counter + (2000 / 10);
 19551  013DD2  0EC8               	movlw	200
 19552  013DD4  2405               	addwf	_time_counter,w,c	;volatile
 19553  013DD6  0100               	movlb	0	; () banked
 19554  013DD8  6FD5               	movwf	_pr_time_6& (0+255),b	;volatile
 19555  013DDA  0E00               	movlw	0
 19556  013DDC  2006               	addwfc	_time_counter+1,w,c	;volatile
 19557  013DDE  0100               	movlb	0	; () banked
 19558  013DE0  6FD6               	movwf	(_pr_time_6+1)& (0+255),b	;volatile
 19559  013DE2  0E00               	movlw	0
 19560  013DE4  2007               	addwfc	_time_counter+2,w,c	;volatile
 19561  013DE6  0100               	movlb	0	; () banked
 19562  013DE8  6FD7               	movwf	(_pr_time_6+2)& (0+255),b	;volatile
 19563  013DEA  0E00               	movlw	0
 19564  013DEC  2008               	addwfc	_time_counter+3,w,c	;volatile
 19565  013DEE  0100               	movlb	0	; () banked
 19566  013DF0  6FD8               	movwf	(_pr_time_6+3)& (0+255),b	;volatile
 19567                           
 19568                           ; BSR set to: 0
 19569  013DF2  D000               	goto	i2l8695
 19570  013DF4                     i2l8695:
 19571                           
 19572                           ;RemoteCan.c: 166: }
 19573                           ;RemoteCan.c: 167: }
 19574                           ;RemoteCan.c: 169: if (id == 0b00000010000) {
 19575  013DF4  0E10               	movlw	16
 19576  013DF6  1801               	xorwf	_id,w,c	;volatile
 19577  013DF8  1002               	iorwf	_id+1,w,c	;volatile
 19578  013DFA  1003               	iorwf	_id+2,w,c	;volatile
 19579  013DFC  1004               	iorwf	_id+3,w,c	;volatile
 19580  013DFE  A4D8               	btfss	status,2,c
 19581  013E00  D008               	goto	i2l8699
 19582                           
 19583                           ;RemoteCan.c: 170: steering_correction_dir = msg.data[1];
 19584  013E02  B017               	btfsc	_msg+5,0,c
 19585  013E04  D002               	bra	i2u1091_45
 19586  013E06  904C               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19587  013E08  D001               	bra	i2u1091_46
 19588  013E0A                     i2u1091_45:
 19589  013E0A  804C               	bsf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19590  013E0C                     i2u1091_46:
 19591                           
 19592                           ;RemoteCan.c: 171: steering_correction = msg.data[0];
 19593  013E0C  C016  F0E6         	movff	_msg+4,_steering_correction	;volatile
 19594  013E10  D000               	goto	i2l8699
 19595  013E12                     i2l8699:
 19596                           
 19597                           ;RemoteCan.c: 172: }
 19598                           ;RemoteCan.c: 174: if (id == 0b00000010001) {
 19599  013E12  0E11               	movlw	17
 19600  013E14  1801               	xorwf	_id,w,c	;volatile
 19601  013E16  1002               	iorwf	_id+1,w,c	;volatile
 19602  013E18  1003               	iorwf	_id+2,w,c	;volatile
 19603  013E1A  1004               	iorwf	_id+3,w,c	;volatile
 19604  013E1C  A4D8               	btfss	status,2,c
 19605  013E1E  D005               	goto	i2l8703
 19606                           
 19607                           ;RemoteCan.c: 175: collision_sensor_distance[1] = msg.data[0];
 19608  013E20  C016  F00A         	movff	_msg+4,_collision_sensor_distance+1	;volatile
 19609                           
 19610                           ;RemoteCan.c: 176: collision_sensor_distance[0] = msg.data[1];
 19611  013E24  C017  F009         	movff	_msg+5,_collision_sensor_distance	;volatile
 19612  013E28  D000               	goto	i2l8703
 19613  013E2A                     i2l8703:
 19614                           
 19615                           ;RemoteCan.c: 177: }
 19616                           ;RemoteCan.c: 179: if (id == 0xAA) {
 19617  013E2A  0EAA               	movlw	170
 19618  013E2C  1801               	xorwf	_id,w,c	;volatile
 19619  013E2E  1002               	iorwf	_id+1,w,c	;volatile
 19620  013E30  1003               	iorwf	_id+2,w,c	;volatile
 19621  013E32  1004               	iorwf	_id+3,w,c	;volatile
 19622  013E34  A4D8               	btfss	status,2,c
 19623  013E36  D00B               	goto	i2l8709
 19624                           
 19625                           ;RemoteCan.c: 180: user_data = msg.data[1];
 19626  013E38  C017  F00F         	movff	_msg+5,_user_data	;volatile
 19627  013E3C  6A10               	clrf	_user_data+1,c	;volatile
 19628                           
 19629                           ;RemoteCan.c: 181: user_data = ((user_data << 8) | msg.data[0]);
 19630  013E3E  500F               	movf	_user_data,w,c	;volatile
 19631  013E40  0100               	movlb	0	; () banked
 19632  013E42  6F60               	movwf	??_ISR_alta& (0+255),b
 19633  013E44  5016               	movf	_msg+4,w,c
 19634  013E46  6E0F               	movwf	_user_data,c	;volatile
 19635  013E48  C060  F010         	movff	??_ISR_alta,_user_data+1	;volatile
 19636  013E4C  D000               	goto	i2l8709
 19637  013E4E                     i2l8709:
 19638                           
 19639                           ;RemoteCan.c: 182: }
 19640                           ;RemoteCan.c: 184: if (id == 0b00000000100) {
 19641  013E4E  0E04               	movlw	4
 19642  013E50  1801               	xorwf	_id,w,c	;volatile
 19643  013E52  1002               	iorwf	_id+1,w,c	;volatile
 19644  013E54  1003               	iorwf	_id+2,w,c	;volatile
 19645  013E56  1004               	iorwf	_id+3,w,c	;volatile
 19646  013E58  B4D8               	btfsc	status,2,c
 19647                           
 19648                           ;RemoteCan.c: 185: if (RTR_Flag == 1) {
 19649  013E5A  A84A               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19650  013E5C  D028               	goto	i2l8723
 19651                           
 19652                           ;RemoteCan.c: 186: pr_time_4 = time_counter;
 19653  013E5E  C005  F106         	movff	_time_counter,_pr_time_4	;volatile
 19654  013E62  C006  F107         	movff	_time_counter+1,_pr_time_4+1	;volatile
 19655  013E66  C007  F108         	movff	_time_counter+2,_pr_time_4+2	;volatile
 19656  013E6A  C008  F109         	movff	_time_counter+3,_pr_time_4+3	;volatile
 19657                           
 19658                           ;RemoteCan.c: 187: data[0] = 0x03;
 19659  013E6E  0E03               	movlw	3
 19660  013E70  0101               	movlb	1	; () banked
 19661  013E72  6F16               	movwf	_data& (0+255),b
 19662                           
 19663                           ; BSR set to: 1
 19664                           ;RemoteCan.c: 188: _delay((unsigned long)((10)*(16000000/4000000.0)));
 19665  013E74  0E0D               	movlw	13
 19666  013E76                     i2u1157_47:
 19667  013E76  2EE8               	decfsz	wreg,f,c
 19668  013E78  D7FE               	goto	i2u1157_47
 19669  013E7A  F000               	nop	
 19670                           
 19671                           ;RemoteCan.c: 189: while (CANisTxReady() != 1);
 19672  013E7C  D000               	goto	i2l8719
 19673  013E7E                     i2l8719:
 19674  013E7E  EC68  F0B0         	call	i2_CANisTxReady	;wreg free
 19675  013E82  06E8               	decf	wreg,f,c
 19676  013E84  A4D8               	btfss	status,2,c
 19677  013E86  D7FB               	goto	i2l8719
 19678                           
 19679                           ;RemoteCan.c: 190: CANsendMessage(0b00000000100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 19680  013E88  0E04               	movlw	4
 19681  013E8A  6E3A               	movwf	i2CANsendMessage@identifier,c
 19682  013E8C  0E00               	movlw	0
 19683  013E8E  6E3B               	movwf	i2CANsendMessage@identifier+1,c
 19684  013E90  0E00               	movlw	0
 19685  013E92  6E3C               	movwf	i2CANsendMessage@identifier+2,c
 19686  013E94  0E00               	movlw	0
 19687  013E96  6E3D               	movwf	i2CANsendMessage@identifier+3,c
 19688  013E98  0E16               	movlw	low _data
 19689  013E9A  6E3E               	movwf	i2CANsendMessage@data,c
 19690  013E9C  0E01               	movlw	high _data
 19691  013E9E  6E3F               	movwf	i2CANsendMessage@data+1,c
 19692  013EA0  0E08               	movlw	8
 19693  013EA2  6E40               	movwf	i2CANsendMessage@dataLength,c
 19694  013EA4  0EBC               	movlw	188
 19695  013EA6  6E41               	movwf	i2CANsendMessage@flags,c
 19696  013EA8  EC78  F092         	call	i2_CANsendMessage	;wreg free
 19697  013EAC  D000               	goto	i2l8723
 19698  013EAE                     i2l8723:
 19699                           
 19700                           ;RemoteCan.c: 191: }
 19701                           ;RemoteCan.c: 192: }
 19702                           ;RemoteCan.c: 194: if ((id == 0b00000001011)&&(RTR_Flag == 1)) {
 19703  013EAE  0E0B               	movlw	11
 19704  013EB0  1801               	xorwf	_id,w,c	;volatile
 19705  013EB2  1002               	iorwf	_id+1,w,c	;volatile
 19706  013EB4  1003               	iorwf	_id+2,w,c	;volatile
 19707  013EB6  1004               	iorwf	_id+3,w,c	;volatile
 19708  013EB8  B4D8               	btfsc	status,2,c
 19709  013EBA  A84A               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19710  013EBC  D002               	goto	i2l8729
 19711                           
 19712                           ;RemoteCan.c: 195: low_battery = 1;
 19713  013EBE  804B               	bsf	_low_battery/(0+8),_low_battery& (0+7),c	;volatile
 19714  013EC0  D000               	goto	i2l8729
 19715  013EC2                     i2l8729:
 19716                           
 19717                           ;RemoteCan.c: 196: }
 19718                           ;RemoteCan.c: 198: if (id == 0b00000010010) {
 19719  013EC2  0E12               	movlw	18
 19720  013EC4  1801               	xorwf	_id,w,c	;volatile
 19721  013EC6  1002               	iorwf	_id+1,w,c	;volatile
 19722  013EC8  1003               	iorwf	_id+2,w,c	;volatile
 19723  013ECA  1004               	iorwf	_id+3,w,c	;volatile
 19724  013ECC  A4D8               	btfss	status,2,c
 19725  013ECE  D007               	goto	i2l794
 19726                           
 19727                           ;RemoteCan.c: 199: battery_charging = msg.data[0];
 19728  013ED0  B016               	btfsc	_msg+4,0,c
 19729  013ED2  D002               	bra	i2u1100_45
 19730  013ED4  9A4A               	bcf	_battery_charging/(0+8),_battery_charging& (0+7),c	;volatile
 19731  013ED6  D001               	bra	i2u1100_46
 19732  013ED8                     i2u1100_45:
 19733  013ED8  8A4A               	bsf	_battery_charging/(0+8),_battery_charging& (0+7),c	;volatile
 19734  013EDA                     i2u1100_46:
 19735                           
 19736                           ;RemoteCan.c: 200: low_battery = 0;
 19737  013EDA  904B               	bcf	_low_battery/(0+8),_low_battery& (0+7),c	;volatile
 19738  013EDC  D000               	goto	i2l794
 19739  013EDE                     i2l794:
 19740                           
 19741                           ;RemoteCan.c: 201: }
 19742                           ;RemoteCan.c: 202: }
 19743                           ;RemoteCan.c: 203: PIR3bits.RXB1IF = 0;
 19744  013EDE  92A4               	bcf	4004,1,c	;volatile
 19745                           
 19746                           ;RemoteCan.c: 204: PIR3bits.RXB0IF = 0;
 19747  013EE0  90A4               	bcf	4004,0,c	;volatile
 19748  013EE2  D000               	goto	i2l811
 19749  013EE4                     i2l811:
 19750  013EE4  C071  FFF5         	movff	??_ISR_alta+17,tablat
 19751  013EE8  C070  FFF8         	movff	??_ISR_alta+16,tblptru
 19752  013EEC  C06F  FFF7         	movff	??_ISR_alta+15,tblptrh
 19753  013EF0  C06E  FFF6         	movff	??_ISR_alta+14,tblptrl
 19754  013EF4  C06D  FFF4         	movff	??_ISR_alta+13,prodh
 19755  013EF8  C06C  FFF3         	movff	??_ISR_alta+12,prodl
 19756  013EFC  C06B  FFDA         	movff	??_ISR_alta+11,fsr2h
 19757  013F00  C06A  FFD9         	movff	??_ISR_alta+10,fsr2l
 19758  013F04  C069  FFE2         	movff	??_ISR_alta+9,fsr1h
 19759  013F08  C068  FFE1         	movff	??_ISR_alta+8,fsr1l
 19760  013F0C  C067  FFEA         	movff	??_ISR_alta+7,fsr0h
 19761  013F10  C066  FFE9         	movff	??_ISR_alta+6,fsr0l
 19762  013F14  C065  FFFB         	movff	??_ISR_alta+5,pclatu
 19763  013F18  C064  FFFA         	movff	??_ISR_alta+4,pclath
 19764  013F1C  0011               	retfie		f
 19765  013F1E                     __end_of_ISR_alta:
 19766                           	opt stack 0
 19767                           pclatu	equ	0xFFB
 19768                           pclath	equ	0xFFA
 19769                           tblptru	equ	0xFF8
 19770                           tblptrh	equ	0xFF7
 19771                           tblptrl	equ	0xFF6
 19772                           tablat	equ	0xFF5
 19773                           prodh	equ	0xFF4
 19774                           prodl	equ	0xFF3
 19775                           intcon	equ	0xFF2
 19776                           postinc0	equ	0xFEE
 19777                           fsr0h	equ	0xFEA
 19778                           fsr0l	equ	0xFE9
 19779                           wreg	equ	0xFE8
 19780                           indf1	equ	0xFE7
 19781                           plusw1	equ	0xFE3
 19782                           fsr1h	equ	0xFE2
 19783                           fsr1l	equ	0xFE1
 19784                           bsr	equ	0xFE0
 19785                           indf2	equ	0xFDF
 19786                           postinc2	equ	0xFDE
 19787                           plusw2	equ	0xFDB
 19788                           fsr2h	equ	0xFDA
 19789                           fsr2l	equ	0xFD9
 19790                           status	equ	0xFD8
 19791                           
 19792 ;; *************** function i2_CANsendMessage *****************
 19793 ;; Defined at:
 19794 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 19795 ;; Parameters:    Size  Location     Type
 19796 ;;  identifier      4   17[COMRAM] unsigned long 
 19797 ;;  data            2   21[COMRAM] PTR unsigned char 
 19798 ;;		 -> data_speed(8), park_assist_state(8), data_steering(8), data_brake(8), 
 19799 ;;		 -> data(8), 
 19800 ;;  dataLength      1   23[COMRAM] unsigned char 
 19801 ;;  flags           1   24[COMRAM] enum E16950
 19802 ;; Auto vars:     Size  Location     Type
 19803 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 19804 ;; Return value:  Size  Location     Type
 19805 ;;		None               void
 19806 ;; Registers used:
 19807 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19808 ;; Tracked objects:
 19809 ;;		On entry : 0/0
 19810 ;;		On exit  : 0/0
 19811 ;;		Unchanged: 0/0
 19812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19813 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19814 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19815 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19816 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19817 ;;Total ram usage:       16 bytes
 19818 ;; Hardware stack levels used:    1
 19819 ;; This function calls:
 19820 ;;		Nothing
 19821 ;; This function is called by:
 19822 ;;		_ISR_alta
 19823 ;; This function uses a non-reentrant model
 19824 ;;
 19825                           
 19826                           	psect	text63
 19827  0124F0                     __ptext63:
 19828                           	opt stack 0
 19829  0124F0                     i2_CANsendMessage:
 19830                           	opt stack 20
 19831                           
 19832                           ;inc\CANlib.h: 296: unsigned long tamp;
 19833                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 19834                           
 19835                           ;incstack = 0
 19836  0124F0  010F               	movlb	15	; () banked
 19837  0124F2  B740               	btfsc	64,3,b	;volatile
 19838  0124F4  D118               	goto	i2l385
 19839                           
 19840                           ; BSR set to: 15
 19841                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 19842  0124F6  C040  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 19843                           
 19844                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 19845  0124FA  AC41               	btfss	i2CANsendMessage@flags,6,c
 19846  0124FC  D003               	goto	i2l386
 19847                           
 19848                           ; BSR set to: 15
 19849                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 19850  0124FE  010F               	movlb	15	; () banked
 19851  012500  8D45               	bsf	69,6,b	;volatile
 19852  012502  D002               	goto	i2l387
 19853  012504                     i2l386:
 19854                           
 19855                           ; BSR set to: 15
 19856                           ;inc\CANlib.h: 302: else
 19857                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 19858  012504  010F               	movlb	15	; () banked
 19859  012506  9D45               	bcf	69,6,b	;volatile
 19860  012508                     i2l387:
 19861                           
 19862                           ; BSR set to: 15
 19863                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 19864  012508  A641               	btfss	i2CANsendMessage@flags,3,c
 19865  01250A  D067               	goto	i2l388
 19866                           
 19867                           ; BSR set to: 15
 19868                           ;inc\CANlib.h: 306: {
 19869                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 19870  01250C  503A               	movf	i2CANsendMessage@identifier,w,c
 19871  01250E  6E46               	movwf	i2CANsendMessage@tamp,c
 19872  012510  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19873  012512  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19874  012514  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19875                           
 19876                           ; BSR set to: 15
 19877                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 19878  012516  C046  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 19879                           
 19880                           ; BSR set to: 15
 19881                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 19882  01251A  0E00               	movlw	0
 19883  01251C  143A               	andwf	i2CANsendMessage@identifier,w,c
 19884  01251E  6E46               	movwf	i2CANsendMessage@tamp,c
 19885  012520  0EFF               	movlw	255
 19886  012522  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 19887  012524  6E47               	movwf	i2CANsendMessage@tamp+1,c
 19888  012526  0E00               	movlw	0
 19889  012528  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 19890  01252A  6E48               	movwf	i2CANsendMessage@tamp+2,c
 19891  01252C  0E00               	movlw	0
 19892  01252E  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 19893  012530  6E49               	movwf	i2CANsendMessage@tamp+3,c
 19894                           
 19895                           ; BSR set to: 15
 19896                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 19897  012532  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19898  012536  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19899  01253A  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19900  01253E  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19901  012542  C043  F042         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19902  012546  C044  F043         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19903  01254A  C045  F044         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19904  01254E  6A45               	clrf	??i2_CANsendMessage+3,c
 19905  012550  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19906  012554  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19907  012558  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19908  01255C  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19909                           
 19910                           ; BSR set to: 15
 19911                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 19912  012560  C046  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 19913                           
 19914                           ; BSR set to: 15
 19915                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 19916  012564  0E00               	movlw	0
 19917  012566  010F               	movlb	15	; () banked
 19918  012568  6F42               	movwf	66,b	;volatile
 19919                           
 19920                           ; BSR set to: 15
 19921                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 19922  01256A  010F               	movlb	15	; () banked
 19923  01256C  8742               	bsf	66,3,b	;volatile
 19924                           
 19925                           ; BSR set to: 15
 19926                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 19927  01256E  A03C               	btfss	i2CANsendMessage@identifier+2,0,c
 19928  012570  D002               	goto	i2l389
 19929                           
 19930                           ; BSR set to: 15
 19931                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 19932  012572  010F               	movlb	15	; () banked
 19933  012574  8142               	bsf	66,0,b	;volatile
 19934  012576                     i2l389:
 19935                           
 19936                           ; BSR set to: 15
 19937                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 19938  012576  A23C               	btfss	i2CANsendMessage@identifier+2,1,c
 19939  012578  D002               	goto	i2l390
 19940                           
 19941                           ; BSR set to: 15
 19942                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 19943  01257A  010F               	movlb	15	; () banked
 19944  01257C  8342               	bsf	66,1,b	;volatile
 19945  01257E                     i2l390:
 19946                           
 19947                           ; BSR set to: 15
 19948                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 19949  01257E  A43C               	btfss	i2CANsendMessage@identifier+2,2,c
 19950  012580  D002               	goto	i2l391
 19951                           
 19952                           ; BSR set to: 15
 19953                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 19954  012582  010F               	movlb	15	; () banked
 19955  012584  8B42               	bsf	66,5,b	;volatile
 19956  012586                     i2l391:
 19957                           
 19958                           ; BSR set to: 15
 19959                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 19960  012586  A63C               	btfss	i2CANsendMessage@identifier+2,3,c
 19961  012588  D002               	goto	i2l392
 19962                           
 19963                           ; BSR set to: 15
 19964                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 19965  01258A  010F               	movlb	15	; () banked
 19966  01258C  8D42               	bsf	66,6,b	;volatile
 19967  01258E                     i2l392:
 19968                           
 19969                           ; BSR set to: 15
 19970                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 19971  01258E  A83C               	btfss	i2CANsendMessage@identifier+2,4,c
 19972  012590  D003               	goto	i2l6817
 19973                           
 19974                           ; BSR set to: 15
 19975                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 19976  012592  010F               	movlb	15	; () banked
 19977  012594  8F42               	bsf	66,7,b	;volatile
 19978  012596  D000               	goto	i2l6817
 19979  012598                     i2l6817:
 19980                           
 19981                           ; BSR set to: 15
 19982                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 19983  012598  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19984  01259C  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19985  0125A0  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19986  0125A4  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19987  0125A8  0E16               	movlw	22
 19988  0125AA  D005               	goto	i2u817_40
 19989  0125AC                     i2u817_45:
 19990  0125AC  90D8               	bcf	status,0,c
 19991  0125AE  3245               	rrcf	??i2_CANsendMessage+3,f,c
 19992  0125B0  3244               	rrcf	??i2_CANsendMessage+2,f,c
 19993  0125B2  3243               	rrcf	??i2_CANsendMessage+1,f,c
 19994  0125B4  3242               	rrcf	??i2_CANsendMessage,f,c
 19995  0125B6                     i2u817_40:
 19996  0125B6  2EE8               	decfsz	wreg,f,c
 19997  0125B8  D7F9               	goto	i2u817_45
 19998  0125BA  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19999  0125BE  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20000  0125C2  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20001  0125C6  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20002                           
 20003                           ; BSR set to: 15
 20004                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 20005  0125CA  5046               	movf	i2CANsendMessage@tamp,w,c
 20006  0125CC  6E46               	movwf	i2CANsendMessage@tamp,c
 20007  0125CE  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20008  0125D0  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20009  0125D2  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20010                           
 20011                           ; BSR set to: 15
 20012                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 20013  0125D4  C046  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 20014                           
 20015                           ;inc\CANlib.h: 332: }
 20016  0125D8  D04E               	goto	i2l6837
 20017  0125DA                     i2l388:
 20018                           
 20019                           ; BSR set to: 15
 20020                           ;inc\CANlib.h: 334: else
 20021                           ;inc\CANlib.h: 336: {
 20022                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 20023  0125DA  010F               	movlb	15	; () banked
 20024  0125DC  9742               	bcf	66,3,b	;volatile
 20025                           
 20026                           ; BSR set to: 15
 20027                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 20028  0125DE  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20029  0125E2  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20030  0125E6  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20031  0125EA  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20032  0125EE  0E04               	movlw	4
 20033  0125F0  D005               	goto	i2u818_40
 20034  0125F2                     i2u818_45:
 20035  0125F2  90D8               	bcf	status,0,c
 20036  0125F4  3245               	rrcf	??i2_CANsendMessage+3,f,c
 20037  0125F6  3244               	rrcf	??i2_CANsendMessage+2,f,c
 20038  0125F8  3243               	rrcf	??i2_CANsendMessage+1,f,c
 20039  0125FA  3242               	rrcf	??i2_CANsendMessage,f,c
 20040  0125FC                     i2u818_40:
 20041  0125FC  2EE8               	decfsz	wreg,f,c
 20042  0125FE  D7F9               	goto	i2u818_45
 20043  012600  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20044  012604  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20045  012608  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20046  01260C  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20047                           
 20048                           ; BSR set to: 15
 20049                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 20050  012610  5046               	movf	i2CANsendMessage@tamp,w,c
 20051  012612  6E46               	movwf	i2CANsendMessage@tamp,c
 20052  012614  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20053  012616  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20054  012618  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20055                           
 20056                           ; BSR set to: 15
 20057                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 20058  01261A  C046  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 20059                           
 20060                           ; BSR set to: 15
 20061                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 20062  01261E  0E07               	movlw	7
 20063  012620  143A               	andwf	i2CANsendMessage@identifier,w,c
 20064  012622  6E46               	movwf	i2CANsendMessage@tamp,c
 20065  012624  0E00               	movlw	0
 20066  012626  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 20067  012628  6E47               	movwf	i2CANsendMessage@tamp+1,c
 20068  01262A  0E00               	movlw	0
 20069  01262C  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 20070  01262E  6E48               	movwf	i2CANsendMessage@tamp+2,c
 20071  012630  0E00               	movlw	0
 20072  012632  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 20073  012634  6E49               	movwf	i2CANsendMessage@tamp+3,c
 20074                           
 20075                           ; BSR set to: 15
 20076                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 20077  012636  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20078  01263A  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20079  01263E  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20080  012642  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20081  012646  0E05               	movlw	5
 20082  012648                     i2u819_45:
 20083  012648  90D8               	bcf	status,0,c
 20084  01264A  3642               	rlcf	??i2_CANsendMessage,f,c
 20085  01264C  3643               	rlcf	??i2_CANsendMessage+1,f,c
 20086  01264E  3644               	rlcf	??i2_CANsendMessage+2,f,c
 20087  012650  3645               	rlcf	??i2_CANsendMessage+3,f,c
 20088  012652  2EE8               	decfsz	wreg,f,c
 20089  012654  D7F9               	goto	i2u819_45
 20090  012656  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20091  01265A  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20092  01265E  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20093  012662  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20094                           
 20095                           ; BSR set to: 15
 20096                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 20097  012666  010F               	movlb	15	; () banked
 20098  012668  5142               	movf	66,w,b	;volatile
 20099  01266A  0B1F               	andlw	31
 20100  01266C  010F               	movlb	15	; () banked
 20101  01266E  6F42               	movwf	66,b	;volatile
 20102                           
 20103                           ; BSR set to: 15
 20104                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 20105  012670  C046  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 20106  012674  D000               	goto	i2l6837
 20107  012676                     i2l6837:
 20108                           
 20109                           ; BSR set to: 15
 20110                           ;inc\CANlib.h: 347: }
 20111                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 20112  012676  A041               	btfss	i2CANsendMessage@flags,0,c
 20113  012678  D003               	goto	i2l395
 20114                           
 20115                           ; BSR set to: 15
 20116                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 20117  01267A  010F               	movlb	15	; () banked
 20118  01267C  8140               	bsf	64,0,b	;volatile
 20119  01267E  D002               	goto	i2l396
 20120  012680                     i2l395:
 20121                           
 20122                           ; BSR set to: 15
 20123                           ;inc\CANlib.h: 351: else
 20124                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 20125  012680  010F               	movlb	15	; () banked
 20126  012682  9140               	bcf	64,0,b	;volatile
 20127  012684                     i2l396:
 20128                           
 20129                           ; BSR set to: 15
 20130                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 20131  012684  A241               	btfss	i2CANsendMessage@flags,1,c
 20132  012686  D003               	goto	i2l397
 20133                           
 20134                           ; BSR set to: 15
 20135                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 20136  012688  010F               	movlb	15	; () banked
 20137  01268A  8340               	bsf	64,1,b	;volatile
 20138  01268C  D003               	goto	i2l6843
 20139  01268E                     i2l397:
 20140                           
 20141                           ; BSR set to: 15
 20142                           ;inc\CANlib.h: 355: else
 20143                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 20144  01268E  010F               	movlb	15	; () banked
 20145  012690  9340               	bcf	64,1,b	;volatile
 20146  012692  D000               	goto	i2l6843
 20147  012694                     i2l6843:
 20148                           
 20149                           ; BSR set to: 15
 20150                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 20151  012694  C03E  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20152  012698  C03F  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20153  01269C  50DF               	movf	indf2,w,c
 20154  01269E  010F               	movlb	15	; () banked
 20155  0126A0  6F46               	movwf	70,b	;volatile
 20156                           
 20157                           ; BSR set to: 15
 20158                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 20159  0126A2  EE20 F001          	lfsr	2,1
 20160  0126A6  503E               	movf	i2CANsendMessage@data,w,c
 20161  0126A8  26D9               	addwf	fsr2l,f,c
 20162  0126AA  503F               	movf	i2CANsendMessage@data+1,w,c
 20163  0126AC  22DA               	addwfc	fsr2h,f,c
 20164  0126AE  50DF               	movf	indf2,w,c
 20165  0126B0  010F               	movlb	15	; () banked
 20166  0126B2  6F47               	movwf	71,b	;volatile
 20167                           
 20168                           ; BSR set to: 15
 20169                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 20170  0126B4  EE20 F002          	lfsr	2,2
 20171  0126B8  503E               	movf	i2CANsendMessage@data,w,c
 20172  0126BA  26D9               	addwf	fsr2l,f,c
 20173  0126BC  503F               	movf	i2CANsendMessage@data+1,w,c
 20174  0126BE  22DA               	addwfc	fsr2h,f,c
 20175  0126C0  50DF               	movf	indf2,w,c
 20176  0126C2  010F               	movlb	15	; () banked
 20177  0126C4  6F48               	movwf	72,b	;volatile
 20178                           
 20179                           ; BSR set to: 15
 20180                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 20181  0126C6  EE20 F003          	lfsr	2,3
 20182  0126CA  503E               	movf	i2CANsendMessage@data,w,c
 20183  0126CC  26D9               	addwf	fsr2l,f,c
 20184  0126CE  503F               	movf	i2CANsendMessage@data+1,w,c
 20185  0126D0  22DA               	addwfc	fsr2h,f,c
 20186  0126D2  50DF               	movf	indf2,w,c
 20187  0126D4  010F               	movlb	15	; () banked
 20188  0126D6  6F49               	movwf	73,b	;volatile
 20189                           
 20190                           ; BSR set to: 15
 20191                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 20192  0126D8  EE20 F004          	lfsr	2,4
 20193  0126DC  503E               	movf	i2CANsendMessage@data,w,c
 20194  0126DE  26D9               	addwf	fsr2l,f,c
 20195  0126E0  503F               	movf	i2CANsendMessage@data+1,w,c
 20196  0126E2  22DA               	addwfc	fsr2h,f,c
 20197  0126E4  50DF               	movf	indf2,w,c
 20198  0126E6  010F               	movlb	15	; () banked
 20199  0126E8  6F4A               	movwf	74,b	;volatile
 20200                           
 20201                           ; BSR set to: 15
 20202                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 20203  0126EA  EE20 F005          	lfsr	2,5
 20204  0126EE  503E               	movf	i2CANsendMessage@data,w,c
 20205  0126F0  26D9               	addwf	fsr2l,f,c
 20206  0126F2  503F               	movf	i2CANsendMessage@data+1,w,c
 20207  0126F4  22DA               	addwfc	fsr2h,f,c
 20208  0126F6  50DF               	movf	indf2,w,c
 20209  0126F8  010F               	movlb	15	; () banked
 20210  0126FA  6F4B               	movwf	75,b	;volatile
 20211                           
 20212                           ; BSR set to: 15
 20213                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 20214  0126FC  EE20 F006          	lfsr	2,6
 20215  012700  503E               	movf	i2CANsendMessage@data,w,c
 20216  012702  26D9               	addwf	fsr2l,f,c
 20217  012704  503F               	movf	i2CANsendMessage@data+1,w,c
 20218  012706  22DA               	addwfc	fsr2h,f,c
 20219  012708  50DF               	movf	indf2,w,c
 20220  01270A  010F               	movlb	15	; () banked
 20221  01270C  6F4C               	movwf	76,b	;volatile
 20222                           
 20223                           ; BSR set to: 15
 20224                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 20225  01270E  EE20 F007          	lfsr	2,7
 20226  012712  503E               	movf	i2CANsendMessage@data,w,c
 20227  012714  26D9               	addwf	fsr2l,f,c
 20228  012716  503F               	movf	i2CANsendMessage@data+1,w,c
 20229  012718  22DA               	addwfc	fsr2h,f,c
 20230  01271A  50DF               	movf	indf2,w,c
 20231  01271C  010F               	movlb	15	; () banked
 20232  01271E  6F4D               	movwf	77,b	;volatile
 20233                           
 20234                           ; BSR set to: 15
 20235                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 20236  012720  010F               	movlb	15	; () banked
 20237  012722  8740               	bsf	64,3,b	;volatile
 20238                           
 20239                           ; BSR set to: 15
 20240                           ;inc\CANlib.h: 368: return;
 20241  012724  0012               	return	
 20242  012726                     i2l385:
 20243                           
 20244                           ; BSR set to: 15
 20245                           ;inc\CANlib.h: 369: }
 20246                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 20247  012726  010F               	movlb	15	; () banked
 20248  012728  B730               	btfsc	48,3,b	;volatile
 20249  01272A  D118               	goto	i2l400
 20250                           
 20251                           ; BSR set to: 15
 20252                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 20253  01272C  C040  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 20254                           
 20255                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 20256  012730  AC41               	btfss	i2CANsendMessage@flags,6,c
 20257  012732  D003               	goto	i2l401
 20258                           
 20259                           ; BSR set to: 15
 20260                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 20261  012734  010F               	movlb	15	; () banked
 20262  012736  8D35               	bsf	53,6,b	;volatile
 20263  012738  D002               	goto	i2l402
 20264  01273A                     i2l401:
 20265                           
 20266                           ; BSR set to: 15
 20267                           ;inc\CANlib.h: 378: else
 20268                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 20269  01273A  010F               	movlb	15	; () banked
 20270  01273C  9D35               	bcf	53,6,b	;volatile
 20271  01273E                     i2l402:
 20272                           
 20273                           ; BSR set to: 15
 20274                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 20275  01273E  A641               	btfss	i2CANsendMessage@flags,3,c
 20276  012740  D067               	goto	i2l403
 20277                           
 20278                           ; BSR set to: 15
 20279                           ;inc\CANlib.h: 382: {
 20280                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 20281  012742  503A               	movf	i2CANsendMessage@identifier,w,c
 20282  012744  6E46               	movwf	i2CANsendMessage@tamp,c
 20283  012746  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20284  012748  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20285  01274A  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20286                           
 20287                           ; BSR set to: 15
 20288                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 20289  01274C  C046  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 20290                           
 20291                           ; BSR set to: 15
 20292                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 20293  012750  0E00               	movlw	0
 20294  012752  143A               	andwf	i2CANsendMessage@identifier,w,c
 20295  012754  6E46               	movwf	i2CANsendMessage@tamp,c
 20296  012756  0EFF               	movlw	255
 20297  012758  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 20298  01275A  6E47               	movwf	i2CANsendMessage@tamp+1,c
 20299  01275C  0E00               	movlw	0
 20300  01275E  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 20301  012760  6E48               	movwf	i2CANsendMessage@tamp+2,c
 20302  012762  0E00               	movlw	0
 20303  012764  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 20304  012766  6E49               	movwf	i2CANsendMessage@tamp+3,c
 20305                           
 20306                           ; BSR set to: 15
 20307                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 20308  012768  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20309  01276C  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20310  012770  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20311  012774  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20312  012778  C043  F042         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20313  01277C  C044  F043         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20314  012780  C045  F044         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20315  012784  6A45               	clrf	??i2_CANsendMessage+3,c
 20316  012786  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20317  01278A  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20318  01278E  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20319  012792  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20320                           
 20321                           ; BSR set to: 15
 20322                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 20323  012796  C046  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 20324                           
 20325                           ; BSR set to: 15
 20326                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 20327  01279A  0E00               	movlw	0
 20328  01279C  010F               	movlb	15	; () banked
 20329  01279E  6F32               	movwf	50,b	;volatile
 20330                           
 20331                           ; BSR set to: 15
 20332                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 20333  0127A0  010F               	movlb	15	; () banked
 20334  0127A2  8732               	bsf	50,3,b	;volatile
 20335                           
 20336                           ; BSR set to: 15
 20337                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 20338  0127A4  A03C               	btfss	i2CANsendMessage@identifier+2,0,c
 20339  0127A6  D002               	goto	i2l404
 20340                           
 20341                           ; BSR set to: 15
 20342                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 20343  0127A8  010F               	movlb	15	; () banked
 20344  0127AA  8132               	bsf	50,0,b	;volatile
 20345  0127AC                     i2l404:
 20346                           
 20347                           ; BSR set to: 15
 20348                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 20349  0127AC  A23C               	btfss	i2CANsendMessage@identifier+2,1,c
 20350  0127AE  D002               	goto	i2l405
 20351                           
 20352                           ; BSR set to: 15
 20353                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 20354  0127B0  010F               	movlb	15	; () banked
 20355  0127B2  8332               	bsf	50,1,b	;volatile
 20356  0127B4                     i2l405:
 20357                           
 20358                           ; BSR set to: 15
 20359                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 20360  0127B4  A43C               	btfss	i2CANsendMessage@identifier+2,2,c
 20361  0127B6  D002               	goto	i2l406
 20362                           
 20363                           ; BSR set to: 15
 20364                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 20365  0127B8  010F               	movlb	15	; () banked
 20366  0127BA  8B32               	bsf	50,5,b	;volatile
 20367  0127BC                     i2l406:
 20368                           
 20369                           ; BSR set to: 15
 20370                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 20371  0127BC  A63C               	btfss	i2CANsendMessage@identifier+2,3,c
 20372  0127BE  D002               	goto	i2l407
 20373                           
 20374                           ; BSR set to: 15
 20375                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 20376  0127C0  010F               	movlb	15	; () banked
 20377  0127C2  8D32               	bsf	50,6,b	;volatile
 20378  0127C4                     i2l407:
 20379                           
 20380                           ; BSR set to: 15
 20381                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 20382  0127C4  A83C               	btfss	i2CANsendMessage@identifier+2,4,c
 20383  0127C6  D003               	goto	i2l6893
 20384                           
 20385                           ; BSR set to: 15
 20386                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 20387  0127C8  010F               	movlb	15	; () banked
 20388  0127CA  8F32               	bsf	50,7,b	;volatile
 20389  0127CC  D000               	goto	i2l6893
 20390  0127CE                     i2l6893:
 20391                           
 20392                           ; BSR set to: 15
 20393                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 20394  0127CE  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20395  0127D2  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20396  0127D6  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20397  0127DA  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20398  0127DE  0E16               	movlw	22
 20399  0127E0  D005               	goto	i2u830_40
 20400  0127E2                     i2u830_45:
 20401  0127E2  90D8               	bcf	status,0,c
 20402  0127E4  3245               	rrcf	??i2_CANsendMessage+3,f,c
 20403  0127E6  3244               	rrcf	??i2_CANsendMessage+2,f,c
 20404  0127E8  3243               	rrcf	??i2_CANsendMessage+1,f,c
 20405  0127EA  3242               	rrcf	??i2_CANsendMessage,f,c
 20406  0127EC                     i2u830_40:
 20407  0127EC  2EE8               	decfsz	wreg,f,c
 20408  0127EE  D7F9               	goto	i2u830_45
 20409  0127F0  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20410  0127F4  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20411  0127F8  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20412  0127FC  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20413                           
 20414                           ; BSR set to: 15
 20415                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 20416  012800  5046               	movf	i2CANsendMessage@tamp,w,c
 20417  012802  6E46               	movwf	i2CANsendMessage@tamp,c
 20418  012804  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20419  012806  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20420  012808  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20421                           
 20422                           ; BSR set to: 15
 20423                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 20424  01280A  C046  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 20425                           
 20426                           ;inc\CANlib.h: 407: }
 20427  01280E  D04E               	goto	i2l6913
 20428  012810                     i2l403:
 20429                           
 20430                           ; BSR set to: 15
 20431                           ;inc\CANlib.h: 409: else
 20432                           ;inc\CANlib.h: 411: {
 20433                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 20434  012810  010F               	movlb	15	; () banked
 20435  012812  9732               	bcf	50,3,b	;volatile
 20436                           
 20437                           ; BSR set to: 15
 20438                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 20439  012814  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20440  012818  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20441  01281C  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20442  012820  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20443  012824  0E04               	movlw	4
 20444  012826  D005               	goto	i2u831_40
 20445  012828                     i2u831_45:
 20446  012828  90D8               	bcf	status,0,c
 20447  01282A  3245               	rrcf	??i2_CANsendMessage+3,f,c
 20448  01282C  3244               	rrcf	??i2_CANsendMessage+2,f,c
 20449  01282E  3243               	rrcf	??i2_CANsendMessage+1,f,c
 20450  012830  3242               	rrcf	??i2_CANsendMessage,f,c
 20451  012832                     i2u831_40:
 20452  012832  2EE8               	decfsz	wreg,f,c
 20453  012834  D7F9               	goto	i2u831_45
 20454  012836  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20455  01283A  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20456  01283E  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20457  012842  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20458                           
 20459                           ; BSR set to: 15
 20460                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 20461  012846  5046               	movf	i2CANsendMessage@tamp,w,c
 20462  012848  6E46               	movwf	i2CANsendMessage@tamp,c
 20463  01284A  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20464  01284C  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20465  01284E  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20466                           
 20467                           ; BSR set to: 15
 20468                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 20469  012850  C046  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 20470                           
 20471                           ; BSR set to: 15
 20472                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 20473  012854  0E07               	movlw	7
 20474  012856  143A               	andwf	i2CANsendMessage@identifier,w,c
 20475  012858  6E46               	movwf	i2CANsendMessage@tamp,c
 20476  01285A  0E00               	movlw	0
 20477  01285C  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 20478  01285E  6E47               	movwf	i2CANsendMessage@tamp+1,c
 20479  012860  0E00               	movlw	0
 20480  012862  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 20481  012864  6E48               	movwf	i2CANsendMessage@tamp+2,c
 20482  012866  0E00               	movlw	0
 20483  012868  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 20484  01286A  6E49               	movwf	i2CANsendMessage@tamp+3,c
 20485                           
 20486                           ; BSR set to: 15
 20487                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 20488  01286C  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20489  012870  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20490  012874  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20491  012878  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20492  01287C  0E05               	movlw	5
 20493  01287E                     i2u832_45:
 20494  01287E  90D8               	bcf	status,0,c
 20495  012880  3642               	rlcf	??i2_CANsendMessage,f,c
 20496  012882  3643               	rlcf	??i2_CANsendMessage+1,f,c
 20497  012884  3644               	rlcf	??i2_CANsendMessage+2,f,c
 20498  012886  3645               	rlcf	??i2_CANsendMessage+3,f,c
 20499  012888  2EE8               	decfsz	wreg,f,c
 20500  01288A  D7F9               	goto	i2u832_45
 20501  01288C  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20502  012890  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20503  012894  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20504  012898  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20505                           
 20506                           ; BSR set to: 15
 20507                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 20508  01289C  010F               	movlb	15	; () banked
 20509  01289E  5132               	movf	50,w,b	;volatile
 20510  0128A0  0B1F               	andlw	31
 20511  0128A2  010F               	movlb	15	; () banked
 20512  0128A4  6F32               	movwf	50,b	;volatile
 20513                           
 20514                           ; BSR set to: 15
 20515                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 20516  0128A6  C046  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 20517  0128AA  D000               	goto	i2l6913
 20518  0128AC                     i2l6913:
 20519                           
 20520                           ; BSR set to: 15
 20521                           ;inc\CANlib.h: 422: }
 20522                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 20523  0128AC  A041               	btfss	i2CANsendMessage@flags,0,c
 20524  0128AE  D003               	goto	i2l410
 20525                           
 20526                           ; BSR set to: 15
 20527                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 20528  0128B0  010F               	movlb	15	; () banked
 20529  0128B2  8130               	bsf	48,0,b	;volatile
 20530  0128B4  D002               	goto	i2l411
 20531  0128B6                     i2l410:
 20532                           
 20533                           ; BSR set to: 15
 20534                           ;inc\CANlib.h: 426: else
 20535                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 20536  0128B6  010F               	movlb	15	; () banked
 20537  0128B8  9130               	bcf	48,0,b	;volatile
 20538  0128BA                     i2l411:
 20539                           
 20540                           ; BSR set to: 15
 20541                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 20542  0128BA  A241               	btfss	i2CANsendMessage@flags,1,c
 20543  0128BC  D003               	goto	i2l412
 20544                           
 20545                           ; BSR set to: 15
 20546                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 20547  0128BE  010F               	movlb	15	; () banked
 20548  0128C0  8330               	bsf	48,1,b	;volatile
 20549  0128C2  D003               	goto	i2l6919
 20550  0128C4                     i2l412:
 20551                           
 20552                           ; BSR set to: 15
 20553                           ;inc\CANlib.h: 430: else
 20554                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 20555  0128C4  010F               	movlb	15	; () banked
 20556  0128C6  9330               	bcf	48,1,b	;volatile
 20557  0128C8  D000               	goto	i2l6919
 20558  0128CA                     i2l6919:
 20559                           
 20560                           ; BSR set to: 15
 20561                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 20562  0128CA  C03E  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20563  0128CE  C03F  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20564  0128D2  50DF               	movf	indf2,w,c
 20565  0128D4  010F               	movlb	15	; () banked
 20566  0128D6  6F36               	movwf	54,b	;volatile
 20567                           
 20568                           ; BSR set to: 15
 20569                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 20570  0128D8  EE20 F001          	lfsr	2,1
 20571  0128DC  503E               	movf	i2CANsendMessage@data,w,c
 20572  0128DE  26D9               	addwf	fsr2l,f,c
 20573  0128E0  503F               	movf	i2CANsendMessage@data+1,w,c
 20574  0128E2  22DA               	addwfc	fsr2h,f,c
 20575  0128E4  50DF               	movf	indf2,w,c
 20576  0128E6  010F               	movlb	15	; () banked
 20577  0128E8  6F37               	movwf	55,b	;volatile
 20578                           
 20579                           ; BSR set to: 15
 20580                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 20581  0128EA  EE20 F002          	lfsr	2,2
 20582  0128EE  503E               	movf	i2CANsendMessage@data,w,c
 20583  0128F0  26D9               	addwf	fsr2l,f,c
 20584  0128F2  503F               	movf	i2CANsendMessage@data+1,w,c
 20585  0128F4  22DA               	addwfc	fsr2h,f,c
 20586  0128F6  50DF               	movf	indf2,w,c
 20587  0128F8  010F               	movlb	15	; () banked
 20588  0128FA  6F38               	movwf	56,b	;volatile
 20589                           
 20590                           ; BSR set to: 15
 20591                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 20592  0128FC  EE20 F003          	lfsr	2,3
 20593  012900  503E               	movf	i2CANsendMessage@data,w,c
 20594  012902  26D9               	addwf	fsr2l,f,c
 20595  012904  503F               	movf	i2CANsendMessage@data+1,w,c
 20596  012906  22DA               	addwfc	fsr2h,f,c
 20597  012908  50DF               	movf	indf2,w,c
 20598  01290A  010F               	movlb	15	; () banked
 20599  01290C  6F39               	movwf	57,b	;volatile
 20600                           
 20601                           ; BSR set to: 15
 20602                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 20603  01290E  EE20 F004          	lfsr	2,4
 20604  012912  503E               	movf	i2CANsendMessage@data,w,c
 20605  012914  26D9               	addwf	fsr2l,f,c
 20606  012916  503F               	movf	i2CANsendMessage@data+1,w,c
 20607  012918  22DA               	addwfc	fsr2h,f,c
 20608  01291A  50DF               	movf	indf2,w,c
 20609  01291C  010F               	movlb	15	; () banked
 20610  01291E  6F3A               	movwf	58,b	;volatile
 20611                           
 20612                           ; BSR set to: 15
 20613                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 20614  012920  EE20 F005          	lfsr	2,5
 20615  012924  503E               	movf	i2CANsendMessage@data,w,c
 20616  012926  26D9               	addwf	fsr2l,f,c
 20617  012928  503F               	movf	i2CANsendMessage@data+1,w,c
 20618  01292A  22DA               	addwfc	fsr2h,f,c
 20619  01292C  50DF               	movf	indf2,w,c
 20620  01292E  010F               	movlb	15	; () banked
 20621  012930  6F3B               	movwf	59,b	;volatile
 20622                           
 20623                           ; BSR set to: 15
 20624                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 20625  012932  EE20 F006          	lfsr	2,6
 20626  012936  503E               	movf	i2CANsendMessage@data,w,c
 20627  012938  26D9               	addwf	fsr2l,f,c
 20628  01293A  503F               	movf	i2CANsendMessage@data+1,w,c
 20629  01293C  22DA               	addwfc	fsr2h,f,c
 20630  01293E  50DF               	movf	indf2,w,c
 20631  012940  010F               	movlb	15	; () banked
 20632  012942  6F3C               	movwf	60,b	;volatile
 20633                           
 20634                           ; BSR set to: 15
 20635                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 20636  012944  EE20 F007          	lfsr	2,7
 20637  012948  503E               	movf	i2CANsendMessage@data,w,c
 20638  01294A  26D9               	addwf	fsr2l,f,c
 20639  01294C  503F               	movf	i2CANsendMessage@data+1,w,c
 20640  01294E  22DA               	addwfc	fsr2h,f,c
 20641  012950  50DF               	movf	indf2,w,c
 20642  012952  010F               	movlb	15	; () banked
 20643  012954  6F3D               	movwf	61,b	;volatile
 20644                           
 20645                           ; BSR set to: 15
 20646                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 20647  012956  010F               	movlb	15	; () banked
 20648  012958  8730               	bsf	48,3,b	;volatile
 20649                           
 20650                           ; BSR set to: 15
 20651                           ;inc\CANlib.h: 444: return;
 20652  01295A  0012               	return	
 20653  01295C                     i2l400:
 20654                           
 20655                           ; BSR set to: 15
 20656                           ;inc\CANlib.h: 445: }
 20657                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 20658  01295C  010F               	movlb	15	; () banked
 20659  01295E  B720               	btfsc	32,3,b	;volatile
 20660  012960  0012               	return	
 20661                           
 20662                           ; BSR set to: 15
 20663                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 20664  012962  C040  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 20665                           
 20666                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 20667  012966  AC41               	btfss	i2CANsendMessage@flags,6,c
 20668  012968  D003               	goto	i2l415
 20669                           
 20670                           ; BSR set to: 15
 20671                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 20672  01296A  010F               	movlb	15	; () banked
 20673  01296C  8D25               	bsf	37,6,b	;volatile
 20674  01296E  D002               	goto	i2l416
 20675  012970                     i2l415:
 20676                           
 20677                           ; BSR set to: 15
 20678                           ;inc\CANlib.h: 454: else
 20679                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 20680  012970  010F               	movlb	15	; () banked
 20681  012972  9D25               	bcf	37,6,b	;volatile
 20682  012974                     i2l416:
 20683                           
 20684                           ; BSR set to: 15
 20685                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 20686  012974  A641               	btfss	i2CANsendMessage@flags,3,c
 20687  012976  D067               	goto	i2l417
 20688                           
 20689                           ; BSR set to: 15
 20690                           ;inc\CANlib.h: 458: {
 20691                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 20692  012978  503A               	movf	i2CANsendMessage@identifier,w,c
 20693  01297A  6E46               	movwf	i2CANsendMessage@tamp,c
 20694  01297C  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20695  01297E  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20696  012980  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20697                           
 20698                           ; BSR set to: 15
 20699                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 20700  012982  C046  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 20701                           
 20702                           ; BSR set to: 15
 20703                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 20704  012986  0E00               	movlw	0
 20705  012988  143A               	andwf	i2CANsendMessage@identifier,w,c
 20706  01298A  6E46               	movwf	i2CANsendMessage@tamp,c
 20707  01298C  0EFF               	movlw	255
 20708  01298E  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 20709  012990  6E47               	movwf	i2CANsendMessage@tamp+1,c
 20710  012992  0E00               	movlw	0
 20711  012994  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 20712  012996  6E48               	movwf	i2CANsendMessage@tamp+2,c
 20713  012998  0E00               	movlw	0
 20714  01299A  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 20715  01299C  6E49               	movwf	i2CANsendMessage@tamp+3,c
 20716                           
 20717                           ; BSR set to: 15
 20718                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 20719  01299E  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20720  0129A2  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20721  0129A6  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20722  0129AA  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20723  0129AE  C043  F042         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20724  0129B2  C044  F043         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20725  0129B6  C045  F044         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20726  0129BA  6A45               	clrf	??i2_CANsendMessage+3,c
 20727  0129BC  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20728  0129C0  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20729  0129C4  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20730  0129C8  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20731                           
 20732                           ; BSR set to: 15
 20733                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 20734  0129CC  C046  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 20735                           
 20736                           ; BSR set to: 15
 20737                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 20738  0129D0  0E00               	movlw	0
 20739  0129D2  010F               	movlb	15	; () banked
 20740  0129D4  6F22               	movwf	34,b	;volatile
 20741                           
 20742                           ; BSR set to: 15
 20743                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 20744  0129D6  010F               	movlb	15	; () banked
 20745  0129D8  8722               	bsf	34,3,b	;volatile
 20746                           
 20747                           ; BSR set to: 15
 20748                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 20749  0129DA  A03C               	btfss	i2CANsendMessage@identifier+2,0,c
 20750  0129DC  D002               	goto	i2l418
 20751                           
 20752                           ; BSR set to: 15
 20753                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 20754  0129DE  010F               	movlb	15	; () banked
 20755  0129E0  8122               	bsf	34,0,b	;volatile
 20756  0129E2                     i2l418:
 20757                           
 20758                           ; BSR set to: 15
 20759                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 20760  0129E2  A23C               	btfss	i2CANsendMessage@identifier+2,1,c
 20761  0129E4  D002               	goto	i2l419
 20762                           
 20763                           ; BSR set to: 15
 20764                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 20765  0129E6  010F               	movlb	15	; () banked
 20766  0129E8  8322               	bsf	34,1,b	;volatile
 20767  0129EA                     i2l419:
 20768                           
 20769                           ; BSR set to: 15
 20770                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 20771  0129EA  A43C               	btfss	i2CANsendMessage@identifier+2,2,c
 20772  0129EC  D002               	goto	i2l420
 20773                           
 20774                           ; BSR set to: 15
 20775                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 20776  0129EE  010F               	movlb	15	; () banked
 20777  0129F0  8B22               	bsf	34,5,b	;volatile
 20778  0129F2                     i2l420:
 20779                           
 20780                           ; BSR set to: 15
 20781                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 20782  0129F2  A63C               	btfss	i2CANsendMessage@identifier+2,3,c
 20783  0129F4  D002               	goto	i2l421
 20784                           
 20785                           ; BSR set to: 15
 20786                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 20787  0129F6  010F               	movlb	15	; () banked
 20788  0129F8  8D22               	bsf	34,6,b	;volatile
 20789  0129FA                     i2l421:
 20790                           
 20791                           ; BSR set to: 15
 20792                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 20793  0129FA  A83C               	btfss	i2CANsendMessage@identifier+2,4,c
 20794  0129FC  D003               	goto	i2l6969
 20795                           
 20796                           ; BSR set to: 15
 20797                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 20798  0129FE  010F               	movlb	15	; () banked
 20799  012A00  8F22               	bsf	34,7,b	;volatile
 20800  012A02  D000               	goto	i2l6969
 20801  012A04                     i2l6969:
 20802                           
 20803                           ; BSR set to: 15
 20804                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 20805  012A04  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20806  012A08  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20807  012A0C  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20808  012A10  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20809  012A14  0E16               	movlw	22
 20810  012A16  D005               	goto	i2u843_40
 20811  012A18                     i2u843_45:
 20812  012A18  90D8               	bcf	status,0,c
 20813  012A1A  3245               	rrcf	??i2_CANsendMessage+3,f,c
 20814  012A1C  3244               	rrcf	??i2_CANsendMessage+2,f,c
 20815  012A1E  3243               	rrcf	??i2_CANsendMessage+1,f,c
 20816  012A20  3242               	rrcf	??i2_CANsendMessage,f,c
 20817  012A22                     i2u843_40:
 20818  012A22  2EE8               	decfsz	wreg,f,c
 20819  012A24  D7F9               	goto	i2u843_45
 20820  012A26  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20821  012A2A  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20822  012A2E  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20823  012A32  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20824                           
 20825                           ; BSR set to: 15
 20826                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 20827  012A36  5046               	movf	i2CANsendMessage@tamp,w,c
 20828  012A38  6E46               	movwf	i2CANsendMessage@tamp,c
 20829  012A3A  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20830  012A3C  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20831  012A3E  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20832                           
 20833                           ; BSR set to: 15
 20834                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 20835  012A40  C046  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20836                           
 20837                           ;inc\CANlib.h: 483: }
 20838  012A44  D04E               	goto	i2l6989
 20839  012A46                     i2l417:
 20840                           
 20841                           ; BSR set to: 15
 20842                           ;inc\CANlib.h: 485: else
 20843                           ;inc\CANlib.h: 487: {
 20844                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 20845  012A46  010F               	movlb	15	; () banked
 20846  012A48  9722               	bcf	34,3,b	;volatile
 20847                           
 20848                           ; BSR set to: 15
 20849                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 20850  012A4A  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20851  012A4E  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20852  012A52  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20853  012A56  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20854  012A5A  0E04               	movlw	4
 20855  012A5C  D005               	goto	i2u844_40
 20856  012A5E                     i2u844_45:
 20857  012A5E  90D8               	bcf	status,0,c
 20858  012A60  3245               	rrcf	??i2_CANsendMessage+3,f,c
 20859  012A62  3244               	rrcf	??i2_CANsendMessage+2,f,c
 20860  012A64  3243               	rrcf	??i2_CANsendMessage+1,f,c
 20861  012A66  3242               	rrcf	??i2_CANsendMessage,f,c
 20862  012A68                     i2u844_40:
 20863  012A68  2EE8               	decfsz	wreg,f,c
 20864  012A6A  D7F9               	goto	i2u844_45
 20865  012A6C  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20866  012A70  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20867  012A74  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20868  012A78  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20869                           
 20870                           ; BSR set to: 15
 20871                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 20872  012A7C  5046               	movf	i2CANsendMessage@tamp,w,c
 20873  012A7E  6E46               	movwf	i2CANsendMessage@tamp,c
 20874  012A80  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20875  012A82  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20876  012A84  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20877                           
 20878                           ; BSR set to: 15
 20879                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 20880  012A86  C046  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20881                           
 20882                           ; BSR set to: 15
 20883                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 20884  012A8A  0E07               	movlw	7
 20885  012A8C  143A               	andwf	i2CANsendMessage@identifier,w,c
 20886  012A8E  6E46               	movwf	i2CANsendMessage@tamp,c
 20887  012A90  0E00               	movlw	0
 20888  012A92  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 20889  012A94  6E47               	movwf	i2CANsendMessage@tamp+1,c
 20890  012A96  0E00               	movlw	0
 20891  012A98  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 20892  012A9A  6E48               	movwf	i2CANsendMessage@tamp+2,c
 20893  012A9C  0E00               	movlw	0
 20894  012A9E  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 20895  012AA0  6E49               	movwf	i2CANsendMessage@tamp+3,c
 20896                           
 20897                           ; BSR set to: 15
 20898                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 20899  012AA2  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20900  012AA6  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20901  012AAA  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20902  012AAE  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20903  012AB2  0E05               	movlw	5
 20904  012AB4                     i2u845_45:
 20905  012AB4  90D8               	bcf	status,0,c
 20906  012AB6  3642               	rlcf	??i2_CANsendMessage,f,c
 20907  012AB8  3643               	rlcf	??i2_CANsendMessage+1,f,c
 20908  012ABA  3644               	rlcf	??i2_CANsendMessage+2,f,c
 20909  012ABC  3645               	rlcf	??i2_CANsendMessage+3,f,c
 20910  012ABE  2EE8               	decfsz	wreg,f,c
 20911  012AC0  D7F9               	goto	i2u845_45
 20912  012AC2  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20913  012AC6  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20914  012ACA  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20915  012ACE  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20916                           
 20917                           ; BSR set to: 15
 20918                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 20919  012AD2  010F               	movlb	15	; () banked
 20920  012AD4  5122               	movf	34,w,b	;volatile
 20921  012AD6  0B1F               	andlw	31
 20922  012AD8  010F               	movlb	15	; () banked
 20923  012ADA  6F22               	movwf	34,b	;volatile
 20924                           
 20925                           ; BSR set to: 15
 20926                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 20927  012ADC  C046  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 20928  012AE0  D000               	goto	i2l6989
 20929  012AE2                     i2l6989:
 20930                           
 20931                           ; BSR set to: 15
 20932                           ;inc\CANlib.h: 498: }
 20933                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 20934  012AE2  A041               	btfss	i2CANsendMessage@flags,0,c
 20935  012AE4  D003               	goto	i2l424
 20936                           
 20937                           ; BSR set to: 15
 20938                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 20939  012AE6  010F               	movlb	15	; () banked
 20940  012AE8  8120               	bsf	32,0,b	;volatile
 20941  012AEA  D002               	goto	i2l425
 20942  012AEC                     i2l424:
 20943                           
 20944                           ; BSR set to: 15
 20945                           ;inc\CANlib.h: 502: else
 20946                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 20947  012AEC  010F               	movlb	15	; () banked
 20948  012AEE  9120               	bcf	32,0,b	;volatile
 20949  012AF0                     i2l425:
 20950                           
 20951                           ; BSR set to: 15
 20952                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 20953  012AF0  A241               	btfss	i2CANsendMessage@flags,1,c
 20954  012AF2  D003               	goto	i2l426
 20955                           
 20956                           ; BSR set to: 15
 20957                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 20958  012AF4  010F               	movlb	15	; () banked
 20959  012AF6  8320               	bsf	32,1,b	;volatile
 20960  012AF8  D003               	goto	i2l6995
 20961  012AFA                     i2l426:
 20962                           
 20963                           ; BSR set to: 15
 20964                           ;inc\CANlib.h: 506: else
 20965                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 20966  012AFA  010F               	movlb	15	; () banked
 20967  012AFC  9320               	bcf	32,1,b	;volatile
 20968  012AFE  D000               	goto	i2l6995
 20969  012B00                     i2l6995:
 20970                           
 20971                           ; BSR set to: 15
 20972                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 20973  012B00  C03E  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20974  012B04  C03F  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20975  012B08  50DF               	movf	indf2,w,c
 20976  012B0A  010F               	movlb	15	; () banked
 20977  012B0C  6F26               	movwf	38,b	;volatile
 20978                           
 20979                           ; BSR set to: 15
 20980                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 20981  012B0E  EE20 F001          	lfsr	2,1
 20982  012B12  503E               	movf	i2CANsendMessage@data,w,c
 20983  012B14  26D9               	addwf	fsr2l,f,c
 20984  012B16  503F               	movf	i2CANsendMessage@data+1,w,c
 20985  012B18  22DA               	addwfc	fsr2h,f,c
 20986  012B1A  50DF               	movf	indf2,w,c
 20987  012B1C  010F               	movlb	15	; () banked
 20988  012B1E  6F27               	movwf	39,b	;volatile
 20989                           
 20990                           ; BSR set to: 15
 20991                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 20992  012B20  EE20 F002          	lfsr	2,2
 20993  012B24  503E               	movf	i2CANsendMessage@data,w,c
 20994  012B26  26D9               	addwf	fsr2l,f,c
 20995  012B28  503F               	movf	i2CANsendMessage@data+1,w,c
 20996  012B2A  22DA               	addwfc	fsr2h,f,c
 20997  012B2C  50DF               	movf	indf2,w,c
 20998  012B2E  010F               	movlb	15	; () banked
 20999  012B30  6F28               	movwf	40,b	;volatile
 21000                           
 21001                           ; BSR set to: 15
 21002                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 21003  012B32  EE20 F003          	lfsr	2,3
 21004  012B36  503E               	movf	i2CANsendMessage@data,w,c
 21005  012B38  26D9               	addwf	fsr2l,f,c
 21006  012B3A  503F               	movf	i2CANsendMessage@data+1,w,c
 21007  012B3C  22DA               	addwfc	fsr2h,f,c
 21008  012B3E  50DF               	movf	indf2,w,c
 21009  012B40  010F               	movlb	15	; () banked
 21010  012B42  6F29               	movwf	41,b	;volatile
 21011                           
 21012                           ; BSR set to: 15
 21013                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 21014  012B44  EE20 F004          	lfsr	2,4
 21015  012B48  503E               	movf	i2CANsendMessage@data,w,c
 21016  012B4A  26D9               	addwf	fsr2l,f,c
 21017  012B4C  503F               	movf	i2CANsendMessage@data+1,w,c
 21018  012B4E  22DA               	addwfc	fsr2h,f,c
 21019  012B50  50DF               	movf	indf2,w,c
 21020  012B52  010F               	movlb	15	; () banked
 21021  012B54  6F2A               	movwf	42,b	;volatile
 21022                           
 21023                           ; BSR set to: 15
 21024                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 21025  012B56  EE20 F005          	lfsr	2,5
 21026  012B5A  503E               	movf	i2CANsendMessage@data,w,c
 21027  012B5C  26D9               	addwf	fsr2l,f,c
 21028  012B5E  503F               	movf	i2CANsendMessage@data+1,w,c
 21029  012B60  22DA               	addwfc	fsr2h,f,c
 21030  012B62  50DF               	movf	indf2,w,c
 21031  012B64  010F               	movlb	15	; () banked
 21032  012B66  6F2B               	movwf	43,b	;volatile
 21033                           
 21034                           ; BSR set to: 15
 21035                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 21036  012B68  EE20 F006          	lfsr	2,6
 21037  012B6C  503E               	movf	i2CANsendMessage@data,w,c
 21038  012B6E  26D9               	addwf	fsr2l,f,c
 21039  012B70  503F               	movf	i2CANsendMessage@data+1,w,c
 21040  012B72  22DA               	addwfc	fsr2h,f,c
 21041  012B74  50DF               	movf	indf2,w,c
 21042  012B76  010F               	movlb	15	; () banked
 21043  012B78  6F2C               	movwf	44,b	;volatile
 21044                           
 21045                           ; BSR set to: 15
 21046                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 21047  012B7A  EE20 F007          	lfsr	2,7
 21048  012B7E  503E               	movf	i2CANsendMessage@data,w,c
 21049  012B80  26D9               	addwf	fsr2l,f,c
 21050  012B82  503F               	movf	i2CANsendMessage@data+1,w,c
 21051  012B84  22DA               	addwfc	fsr2h,f,c
 21052  012B86  50DF               	movf	indf2,w,c
 21053  012B88  010F               	movlb	15	; () banked
 21054  012B8A  6F2D               	movwf	45,b	;volatile
 21055                           
 21056                           ; BSR set to: 15
 21057                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 21058  012B8C  010F               	movlb	15	; () banked
 21059  012B8E  8720               	bsf	32,3,b	;volatile
 21060                           
 21061                           ; BSR set to: 15
 21062                           ;inc\CANlib.h: 520: return;
 21063  012B90  0012               	return	
 21064                           
 21065                           ; BSR set to: 15
 21066                           
 21067                           ; BSR set to: 15
 21068  012B92  0012               	return		;funcret
 21069  012B94                     __end_ofi2_CANsendMessage:
 21070                           	opt stack 0
 21071                           pclatu	equ	0xFFB
 21072                           pclath	equ	0xFFA
 21073                           tblptru	equ	0xFF8
 21074                           tblptrh	equ	0xFF7
 21075                           tblptrl	equ	0xFF6
 21076                           tablat	equ	0xFF5
 21077                           prodh	equ	0xFF4
 21078                           prodl	equ	0xFF3
 21079                           intcon	equ	0xFF2
 21080                           postinc0	equ	0xFEE
 21081                           fsr0h	equ	0xFEA
 21082                           fsr0l	equ	0xFE9
 21083                           wreg	equ	0xFE8
 21084                           indf1	equ	0xFE7
 21085                           plusw1	equ	0xFE3
 21086                           fsr1h	equ	0xFE2
 21087                           fsr1l	equ	0xFE1
 21088                           bsr	equ	0xFE0
 21089                           indf2	equ	0xFDF
 21090                           postinc2	equ	0xFDE
 21091                           plusw2	equ	0xFDB
 21092                           fsr2h	equ	0xFDA
 21093                           fsr2l	equ	0xFD9
 21094                           status	equ	0xFD8
 21095                           
 21096 ;; *************** function i2_CANisTxReady *****************
 21097 ;; Defined at:
 21098 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 21099 ;; Parameters:    Size  Location     Type
 21100 ;;		None
 21101 ;; Auto vars:     Size  Location     Type
 21102 ;;		None
 21103 ;; Return value:  Size  Location     Type
 21104 ;;                  1    wreg      unsigned char 
 21105 ;; Registers used:
 21106 ;;		wreg, status,2
 21107 ;; Tracked objects:
 21108 ;;		On entry : 0/0
 21109 ;;		On exit  : 0/0
 21110 ;;		Unchanged: 0/0
 21111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21115 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21116 ;;Total ram usage:        1 bytes
 21117 ;; Hardware stack levels used:    1
 21118 ;; This function calls:
 21119 ;;		Nothing
 21120 ;; This function is called by:
 21121 ;;		_ISR_alta
 21122 ;; This function uses a non-reentrant model
 21123 ;;
 21124                           
 21125                           	psect	text64
 21126  0160D0                     __ptext64:
 21127                           	opt stack 0
 21128  0160D0                     i2_CANisTxReady:
 21129                           	opt stack 20
 21130                           
 21131                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 21132                           
 21133                           ; BSR set to: 15
 21134                           ;incstack = 0
 21135  0160D0  0E01               	movlw	1
 21136  0160D2  6E3A               	movwf	i2_CANisTxReady$3255,c
 21137  0160D4  010F               	movlb	15	; () banked
 21138  0160D6  A740               	btfss	64,3,b	;volatile
 21139  0160D8  D008               	goto	i2l578
 21140                           
 21141                           ; BSR set to: 15
 21142  0160DA  010F               	movlb	15	; () banked
 21143  0160DC  A730               	btfss	48,3,b	;volatile
 21144  0160DE  D005               	goto	i2l578
 21145                           
 21146                           ; BSR set to: 15
 21147  0160E0  010F               	movlb	15	; () banked
 21148  0160E2  A720               	btfss	32,3,b	;volatile
 21149  0160E4  D002               	goto	i2l578
 21150                           
 21151                           ; BSR set to: 15
 21152  0160E6  0E00               	movlw	0
 21153  0160E8  6E3A               	movwf	i2_CANisTxReady$3255,c
 21154  0160EA                     i2l578:
 21155                           
 21156                           ; BSR set to: 15
 21157  0160EA  503A               	movf	i2_CANisTxReady$3255,w,c
 21158  0160EC  0012               	return	
 21159                           
 21160                           ; BSR set to: 15
 21161                           
 21162                           ; BSR set to: 15
 21163  0160EE  0012               	return		;funcret
 21164  0160F0                     __end_ofi2_CANisTxReady:
 21165                           	opt stack 0
 21166                           pclatu	equ	0xFFB
 21167                           pclath	equ	0xFFA
 21168                           tblptru	equ	0xFF8
 21169                           tblptrh	equ	0xFF7
 21170                           tblptrl	equ	0xFF6
 21171                           tablat	equ	0xFF5
 21172                           prodh	equ	0xFF4
 21173                           prodl	equ	0xFF3
 21174                           intcon	equ	0xFF2
 21175                           postinc0	equ	0xFEE
 21176                           fsr0h	equ	0xFEA
 21177                           fsr0l	equ	0xFE9
 21178                           wreg	equ	0xFE8
 21179                           indf1	equ	0xFE7
 21180                           plusw1	equ	0xFE3
 21181                           fsr1h	equ	0xFE2
 21182                           fsr1l	equ	0xFE1
 21183                           bsr	equ	0xFE0
 21184                           indf2	equ	0xFDF
 21185                           postinc2	equ	0xFDE
 21186                           plusw2	equ	0xFDB
 21187                           fsr2h	equ	0xFDA
 21188                           fsr2l	equ	0xFD9
 21189                           status	equ	0xFD8
 21190                           
 21191 ;; *************** function _CANreceiveMessage *****************
 21192 ;; Defined at:
 21193 ;;		line 528 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 21194 ;; Parameters:    Size  Location     Type
 21195 ;;  msg             2   17[COMRAM] PTR struct .
 21196 ;;		 -> msg(15), 
 21197 ;; Auto vars:     Size  Location     Type
 21198 ;;  tamp            1   28[COMRAM] unsigned char 
 21199 ;;  error           1   27[COMRAM] unsigned char 
 21200 ;; Return value:  Size  Location     Type
 21201 ;;                  1    wreg      unsigned char 
 21202 ;; Registers used:
 21203 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21204 ;; Tracked objects:
 21205 ;;		On entry : 0/0
 21206 ;;		On exit  : 0/0
 21207 ;;		Unchanged: 0/0
 21208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21209 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21210 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21211 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21212 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21213 ;;Total ram usage:       12 bytes
 21214 ;; Hardware stack levels used:    1
 21215 ;; This function calls:
 21216 ;;		Nothing
 21217 ;; This function is called by:
 21218 ;;		_ISR_alta
 21219 ;; This function uses a non-reentrant model
 21220 ;;
 21221                           
 21222                           	psect	text65
 21223  012B94                     __ptext65:
 21224                           	opt stack 0
 21225  012B94                     _CANreceiveMessage:
 21226                           	opt stack 20
 21227                           
 21228                           ;inc\CANlib.h: 530: BYTE tamp;
 21229                           ;inc\CANlib.h: 531: BYTE error = 0;
 21230                           
 21231                           ; BSR set to: 15
 21232                           ;incstack = 0
 21233  012B94  0E00               	movlw	0
 21234  012B96  6E44               	movwf	CANreceiveMessage@error,c
 21235                           
 21236                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 21237  012B98  AE74               	btfss	3956,7,c	;volatile
 21238  012B9A  D002               	goto	i2l6351
 21239                           
 21240                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 21241  012B9C  8044               	bsf	CANreceiveMessage@error,0,c
 21242  012B9E  D000               	goto	i2l6351
 21243  012BA0                     i2l6351:
 21244                           
 21245                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 21246  012BA0  AC74               	btfss	3956,6,c	;volatile
 21247  012BA2  D002               	goto	i2l6355
 21248                           
 21249                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 21250  012BA4  8244               	bsf	CANreceiveMessage@error,1,c
 21251  012BA6  D000               	goto	i2l6355
 21252  012BA8                     i2l6355:
 21253                           
 21254                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 21255  012BA8  010F               	movlb	15	; () banked
 21256  012BAA  AF50               	btfss	80,7,b	;volatile
 21257  012BAC  D149               	goto	i2l432
 21258                           
 21259                           ; BSR set to: 15
 21260                           ;inc\CANlib.h: 541: {
 21261                           ;inc\CANlib.h: 542: msg->identifier = 0;
 21262  012BAE  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21263  012BB2  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21264  012BB6  6ADE               	clrf	postinc2,c
 21265  012BB8  6ADE               	clrf	postinc2,c
 21266  012BBA  6ADE               	clrf	postinc2,c
 21267  012BBC  6ADD               	clrf	postdec2,c
 21268                           
 21269                           ; BSR set to: 15
 21270                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 21271  012BBE  EE20 F004          	lfsr	2,4
 21272  012BC2  503A               	movf	CANreceiveMessage@msg,w,c
 21273  012BC4  26D9               	addwf	fsr2l,f,c
 21274  012BC6  503B               	movf	CANreceiveMessage@msg+1,w,c
 21275  012BC8  22DA               	addwfc	fsr2h,f,c
 21276  012BCA  CF56 FFDF          	movff	3926,indf2	;volatile
 21277                           
 21278                           ; BSR set to: 15
 21279                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 21280  012BCE  EE20 F005          	lfsr	2,5
 21281  012BD2  503A               	movf	CANreceiveMessage@msg,w,c
 21282  012BD4  26D9               	addwf	fsr2l,f,c
 21283  012BD6  503B               	movf	CANreceiveMessage@msg+1,w,c
 21284  012BD8  22DA               	addwfc	fsr2h,f,c
 21285  012BDA  CF57 FFDF          	movff	3927,indf2	;volatile
 21286                           
 21287                           ; BSR set to: 15
 21288                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 21289  012BDE  EE20 F006          	lfsr	2,6
 21290  012BE2  503A               	movf	CANreceiveMessage@msg,w,c
 21291  012BE4  26D9               	addwf	fsr2l,f,c
 21292  012BE6  503B               	movf	CANreceiveMessage@msg+1,w,c
 21293  012BE8  22DA               	addwfc	fsr2h,f,c
 21294  012BEA  CF58 FFDF          	movff	3928,indf2	;volatile
 21295                           
 21296                           ; BSR set to: 15
 21297                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 21298  012BEE  EE20 F007          	lfsr	2,7
 21299  012BF2  503A               	movf	CANreceiveMessage@msg,w,c
 21300  012BF4  26D9               	addwf	fsr2l,f,c
 21301  012BF6  503B               	movf	CANreceiveMessage@msg+1,w,c
 21302  012BF8  22DA               	addwfc	fsr2h,f,c
 21303  012BFA  CF59 FFDF          	movff	3929,indf2	;volatile
 21304                           
 21305                           ; BSR set to: 15
 21306                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 21307  012BFE  EE20 F008          	lfsr	2,8
 21308  012C02  503A               	movf	CANreceiveMessage@msg,w,c
 21309  012C04  26D9               	addwf	fsr2l,f,c
 21310  012C06  503B               	movf	CANreceiveMessage@msg+1,w,c
 21311  012C08  22DA               	addwfc	fsr2h,f,c
 21312  012C0A  CF5A FFDF          	movff	3930,indf2	;volatile
 21313                           
 21314                           ; BSR set to: 15
 21315                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 21316  012C0E  EE20 F009          	lfsr	2,9
 21317  012C12  503A               	movf	CANreceiveMessage@msg,w,c
 21318  012C14  26D9               	addwf	fsr2l,f,c
 21319  012C16  503B               	movf	CANreceiveMessage@msg+1,w,c
 21320  012C18  22DA               	addwfc	fsr2h,f,c
 21321  012C1A  CF5B FFDF          	movff	3931,indf2	;volatile
 21322                           
 21323                           ; BSR set to: 15
 21324                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 21325  012C1E  EE20 F00A          	lfsr	2,10
 21326  012C22  503A               	movf	CANreceiveMessage@msg,w,c
 21327  012C24  26D9               	addwf	fsr2l,f,c
 21328  012C26  503B               	movf	CANreceiveMessage@msg+1,w,c
 21329  012C28  22DA               	addwfc	fsr2h,f,c
 21330  012C2A  CF5C FFDF          	movff	3932,indf2	;volatile
 21331                           
 21332                           ; BSR set to: 15
 21333                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 21334  012C2E  EE20 F00B          	lfsr	2,11
 21335  012C32  503A               	movf	CANreceiveMessage@msg,w,c
 21336  012C34  26D9               	addwf	fsr2l,f,c
 21337  012C36  503B               	movf	CANreceiveMessage@msg+1,w,c
 21338  012C38  22DA               	addwfc	fsr2h,f,c
 21339  012C3A  CF5D FFDF          	movff	3933,indf2	;volatile
 21340                           
 21341                           ; BSR set to: 15
 21342                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 21343  012C3E  EE20 F00E          	lfsr	2,14
 21344  012C42  503A               	movf	CANreceiveMessage@msg,w,c
 21345  012C44  26D9               	addwf	fsr2l,f,c
 21346  012C46  503B               	movf	CANreceiveMessage@msg+1,w,c
 21347  012C48  22DA               	addwfc	fsr2h,f,c
 21348  012C4A  010F               	movlb	15	; () banked
 21349  012C4C  AD55               	btfss	85,6,b	;volatile
 21350  012C4E  D002               	goto	i2u758_40
 21351  012C50  0E01               	movlw	1
 21352  012C52  D001               	goto	i2u758_46
 21353  012C54                     i2u758_40:
 21354  012C54  0E00               	movlw	0
 21355  012C56                     i2u758_46:
 21356  012C56  6EDF               	movwf	indf2,c
 21357                           
 21358                           ; BSR set to: 15
 21359                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 21360  012C58  EE20 F00D          	lfsr	2,13
 21361  012C5C  503A               	movf	CANreceiveMessage@msg,w,c
 21362  012C5E  26D9               	addwf	fsr2l,f,c
 21363  012C60  503B               	movf	CANreceiveMessage@msg+1,w,c
 21364  012C62  22DA               	addwfc	fsr2h,f,c
 21365  012C64  010F               	movlb	15	; () banked
 21366  012C66  5155               	movf	85,w,b	;volatile
 21367  012C68  0B0F               	andlw	15
 21368  012C6A  6EDF               	movwf	indf2,c
 21369                           
 21370                           ; BSR set to: 15
 21371                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 21372  012C6C  EE20 F00C          	lfsr	2,12
 21373  012C70  503A               	movf	CANreceiveMessage@msg,w,c
 21374  012C72  26D9               	addwf	fsr2l,f,c
 21375  012C74  503B               	movf	CANreceiveMessage@msg+1,w,c
 21376  012C76  22DA               	addwfc	fsr2h,f,c
 21377  012C78  010F               	movlb	15	; () banked
 21378  012C7A  A752               	btfss	82,3,b	;volatile
 21379  012C7C  D002               	goto	i2u759_40
 21380  012C7E  0E01               	movlw	1
 21381  012C80  D001               	goto	i2u759_46
 21382  012C82                     i2u759_40:
 21383  012C82  0E00               	movlw	0
 21384  012C84                     i2u759_46:
 21385  012C84  6EDF               	movwf	indf2,c
 21386                           
 21387                           ; BSR set to: 15
 21388                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 21389  012C86  010F               	movlb	15	; () banked
 21390  012C88  B752               	btfsc	82,3,b	;volatile
 21391  012C8A  D044               	goto	i2l6389
 21392                           
 21393                           ; BSR set to: 15
 21394                           ;inc\CANlib.h: 559: {
 21395                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 21396  012C8C  CF51 F03C          	movff	3921,??_CANreceiveMessage	;volatile
 21397  012C90  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21398  012C92  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21399  012C94  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21400  012C96  0E03               	movlw	3
 21401  012C98                     i2u761_45:
 21402  012C98  90D8               	bcf	status,0,c
 21403  012C9A  363C               	rlcf	??_CANreceiveMessage,f,c
 21404  012C9C  363D               	rlcf	??_CANreceiveMessage+1,f,c
 21405  012C9E  363E               	rlcf	??_CANreceiveMessage+2,f,c
 21406  012CA0  363F               	rlcf	??_CANreceiveMessage+3,f,c
 21407  012CA2  2EE8               	decfsz	wreg,f,c
 21408  012CA4  D7F9               	goto	i2u761_45
 21409  012CA6  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21410  012CAA  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21411  012CAE  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 21412  012CB2  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21413  012CB6  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21414  012CBA  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21415                           
 21416                           ; BSR set to: 15
 21417                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 21418  012CBE  010F               	movlb	15	; () banked
 21419  012CC0  3952               	swapf	82,w,b	;volatile
 21420  012CC2  42E8               	rrncf	wreg,f,c
 21421  012CC4  0B07               	andlw	7
 21422  012CC6  0B07               	andlw	7
 21423  012CC8  6E45               	movwf	CANreceiveMessage@tamp,c
 21424                           
 21425                           ; BSR set to: 15
 21426                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 21427  012CCA  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21428  012CCE  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21429  012CD2  CFDE F03C          	movff	postinc2,??_CANreceiveMessage
 21430  012CD6  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+1
 21431  012CDA  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+2
 21432  012CDE  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+3
 21433  012CE2  5045               	movf	CANreceiveMessage@tamp,w,c
 21434  012CE4  243C               	addwf	??_CANreceiveMessage,w,c
 21435  012CE6  6E40               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 21436  012CE8  0E00               	movlw	0
 21437  012CEA  203D               	addwfc	??_CANreceiveMessage+1,w,c
 21438  012CEC  6E41               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 21439  012CEE  0E00               	movlw	0
 21440  012CF0  203E               	addwfc	??_CANreceiveMessage+2,w,c
 21441  012CF2  6E42               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 21442  012CF4  0E00               	movlw	0
 21443  012CF6  203F               	addwfc	??_CANreceiveMessage+3,w,c
 21444  012CF8  6E43               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 21445  012CFA  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21446  012CFE  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21447  012D02  C040  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 21448  012D06  C041  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 21449  012D0A  C042  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 21450  012D0E  C043  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 21451                           
 21452                           ;inc\CANlib.h: 563: }
 21453  012D12  D093               	goto	i2l6415
 21454  012D14                     i2l6389:
 21455                           
 21456                           ; BSR set to: 15
 21457                           ;inc\CANlib.h: 564: else
 21458                           ;inc\CANlib.h: 565: {
 21459                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 21460  012D14  CF54 F03C          	movff	3924,??_CANreceiveMessage	;volatile
 21461  012D18  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21462  012D1A  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21463  012D1C  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21464  012D1E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21465  012D22  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21466  012D26  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 21467  012D2A  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21468  012D2E  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21469  012D32  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21470                           
 21471                           ; BSR set to: 15
 21472                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 21473  012D36  CF53 F03C          	movff	3923,??_CANreceiveMessage	;volatile
 21474  012D3A  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21475  012D3C  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21476  012D3E  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21477  012D40  C03E  F03F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 21478  012D44  C03D  F03E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 21479  012D48  C03C  F03D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 21480  012D4C  6A3C               	clrf	??_CANreceiveMessage,c
 21481  012D4E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21482  012D52  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21483  012D56  503C               	movf	??_CANreceiveMessage,w,c
 21484  012D58  26DE               	addwf	postinc2,f,c
 21485  012D5A  503D               	movf	??_CANreceiveMessage+1,w,c
 21486  012D5C  22DE               	addwfc	postinc2,f,c
 21487  012D5E  503E               	movf	??_CANreceiveMessage+2,w,c
 21488  012D60  22DE               	addwfc	postinc2,f,c
 21489  012D62  503F               	movf	??_CANreceiveMessage+3,w,c
 21490  012D64  22DE               	addwfc	postinc2,f,c
 21491                           
 21492                           ; BSR set to: 15
 21493                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 21494  012D66  010F               	movlb	15	; () banked
 21495  012D68  A152               	btfss	82,0,b	;volatile
 21496  012D6A  D00D               	goto	i2l6397
 21497                           
 21498                           ; BSR set to: 15
 21499                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 21500  012D6C  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21501  012D70  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21502  012D74  0E00               	movlw	0
 21503  012D76  12DE               	iorwf	postinc2,f,c
 21504  012D78  0E00               	movlw	0
 21505  012D7A  12DE               	iorwf	postinc2,f,c
 21506  012D7C  0E01               	movlw	1
 21507  012D7E  12DE               	iorwf	postinc2,f,c
 21508  012D80  0E00               	movlw	0
 21509  012D82  12DE               	iorwf	postinc2,f,c
 21510  012D84  D000               	goto	i2l6397
 21511  012D86                     i2l6397:
 21512                           
 21513                           ; BSR set to: 15
 21514                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 21515  012D86  010F               	movlb	15	; () banked
 21516  012D88  A352               	btfss	82,1,b	;volatile
 21517  012D8A  D00D               	goto	i2l6401
 21518                           
 21519                           ; BSR set to: 15
 21520                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 21521  012D8C  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21522  012D90  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21523  012D94  0E00               	movlw	0
 21524  012D96  12DE               	iorwf	postinc2,f,c
 21525  012D98  0E00               	movlw	0
 21526  012D9A  12DE               	iorwf	postinc2,f,c
 21527  012D9C  0E02               	movlw	2
 21528  012D9E  12DE               	iorwf	postinc2,f,c
 21529  012DA0  0E00               	movlw	0
 21530  012DA2  12DE               	iorwf	postinc2,f,c
 21531  012DA4  D000               	goto	i2l6401
 21532  012DA6                     i2l6401:
 21533                           
 21534                           ; BSR set to: 15
 21535                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 21536  012DA6  010F               	movlb	15	; () banked
 21537  012DA8  AB52               	btfss	82,5,b	;volatile
 21538  012DAA  D00D               	goto	i2l6405
 21539                           
 21540                           ; BSR set to: 15
 21541                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 21542  012DAC  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21543  012DB0  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21544  012DB4  0E00               	movlw	0
 21545  012DB6  12DE               	iorwf	postinc2,f,c
 21546  012DB8  0E00               	movlw	0
 21547  012DBA  12DE               	iorwf	postinc2,f,c
 21548  012DBC  0E04               	movlw	4
 21549  012DBE  12DE               	iorwf	postinc2,f,c
 21550  012DC0  0E00               	movlw	0
 21551  012DC2  12DE               	iorwf	postinc2,f,c
 21552  012DC4  D000               	goto	i2l6405
 21553  012DC6                     i2l6405:
 21554                           
 21555                           ; BSR set to: 15
 21556                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 21557  012DC6  010F               	movlb	15	; () banked
 21558  012DC8  AD52               	btfss	82,6,b	;volatile
 21559  012DCA  D00D               	goto	i2l6409
 21560                           
 21561                           ; BSR set to: 15
 21562                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 21563  012DCC  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21564  012DD0  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21565  012DD4  0E00               	movlw	0
 21566  012DD6  12DE               	iorwf	postinc2,f,c
 21567  012DD8  0E00               	movlw	0
 21568  012DDA  12DE               	iorwf	postinc2,f,c
 21569  012DDC  0E08               	movlw	8
 21570  012DDE  12DE               	iorwf	postinc2,f,c
 21571  012DE0  0E00               	movlw	0
 21572  012DE2  12DE               	iorwf	postinc2,f,c
 21573  012DE4  D000               	goto	i2l6409
 21574  012DE6                     i2l6409:
 21575                           
 21576                           ; BSR set to: 15
 21577                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 21578  012DE6  010F               	movlb	15	; () banked
 21579  012DE8  AF52               	btfss	82,7,b	;volatile
 21580  012DEA  D00D               	goto	i2l6413
 21581                           
 21582                           ; BSR set to: 15
 21583                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 21584  012DEC  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21585  012DF0  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21586  012DF4  0E00               	movlw	0
 21587  012DF6  12DE               	iorwf	postinc2,f,c
 21588  012DF8  0E00               	movlw	0
 21589  012DFA  12DE               	iorwf	postinc2,f,c
 21590  012DFC  0E10               	movlw	16
 21591  012DFE  12DE               	iorwf	postinc2,f,c
 21592  012E00  0E00               	movlw	0
 21593  012E02  12DE               	iorwf	postinc2,f,c
 21594  012E04  D000               	goto	i2l6413
 21595  012E06                     i2l6413:
 21596                           
 21597                           ; BSR set to: 15
 21598                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 21599  012E06  CF51 F03C          	movff	3921,??_CANreceiveMessage	;volatile
 21600  012E0A  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21601  012E0C  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21602  012E0E  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21603  012E10  0E15               	movlw	21
 21604  012E12                     i2u767_45:
 21605  012E12  90D8               	bcf	status,0,c
 21606  012E14  363C               	rlcf	??_CANreceiveMessage,f,c
 21607  012E16  363D               	rlcf	??_CANreceiveMessage+1,f,c
 21608  012E18  363E               	rlcf	??_CANreceiveMessage+2,f,c
 21609  012E1A  363F               	rlcf	??_CANreceiveMessage+3,f,c
 21610  012E1C  2EE8               	decfsz	wreg,f,c
 21611  012E1E  D7F9               	goto	i2u767_45
 21612  012E20  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21613  012E24  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21614  012E28  503C               	movf	??_CANreceiveMessage,w,c
 21615  012E2A  12DE               	iorwf	postinc2,f,c
 21616  012E2C  503D               	movf	??_CANreceiveMessage+1,w,c
 21617  012E2E  12DE               	iorwf	postinc2,f,c
 21618  012E30  503E               	movf	??_CANreceiveMessage+2,w,c
 21619  012E32  12DE               	iorwf	postinc2,f,c
 21620  012E34  503F               	movf	??_CANreceiveMessage+3,w,c
 21621  012E36  12DE               	iorwf	postinc2,f,c
 21622  012E38  D000               	goto	i2l6415
 21623  012E3A                     i2l6415:
 21624                           
 21625                           ; BSR set to: 15
 21626                           ;inc\CANlib.h: 581: }
 21627                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 21628  012E3A  010F               	movlb	15	; () banked
 21629  012E3C  9F50               	bcf	80,7,b	;volatile
 21630                           
 21631                           ; BSR set to: 15
 21632                           ;inc\CANlib.h: 584: return (error);
 21633                           ;	Return value of _CANreceiveMessage is never used
 21634  012E3E  0012               	return	
 21635  012E40                     i2l432:
 21636                           
 21637                           ; BSR set to: 15
 21638                           ;inc\CANlib.h: 585: }
 21639                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 21640  012E40  AE60               	btfss	3936,7,c	;volatile
 21641  012E42  0012               	return	
 21642                           
 21643                           ; BSR set to: 15
 21644                           ;inc\CANlib.h: 588: {
 21645                           ;inc\CANlib.h: 589: msg->identifier = 0;
 21646  012E44  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21647  012E48  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21648  012E4C  6ADE               	clrf	postinc2,c
 21649  012E4E  6ADE               	clrf	postinc2,c
 21650  012E50  6ADE               	clrf	postinc2,c
 21651  012E52  6ADD               	clrf	postdec2,c
 21652                           
 21653                           ; BSR set to: 15
 21654                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 21655  012E54  EE20 F004          	lfsr	2,4
 21656  012E58  503A               	movf	CANreceiveMessage@msg,w,c
 21657  012E5A  26D9               	addwf	fsr2l,f,c
 21658  012E5C  503B               	movf	CANreceiveMessage@msg+1,w,c
 21659  012E5E  22DA               	addwfc	fsr2h,f,c
 21660  012E60  CF66 FFDF          	movff	3942,indf2	;volatile
 21661                           
 21662                           ; BSR set to: 15
 21663                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 21664  012E64  EE20 F005          	lfsr	2,5
 21665  012E68  503A               	movf	CANreceiveMessage@msg,w,c
 21666  012E6A  26D9               	addwf	fsr2l,f,c
 21667  012E6C  503B               	movf	CANreceiveMessage@msg+1,w,c
 21668  012E6E  22DA               	addwfc	fsr2h,f,c
 21669  012E70  CF67 FFDF          	movff	3943,indf2	;volatile
 21670                           
 21671                           ; BSR set to: 15
 21672                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 21673  012E74  EE20 F006          	lfsr	2,6
 21674  012E78  503A               	movf	CANreceiveMessage@msg,w,c
 21675  012E7A  26D9               	addwf	fsr2l,f,c
 21676  012E7C  503B               	movf	CANreceiveMessage@msg+1,w,c
 21677  012E7E  22DA               	addwfc	fsr2h,f,c
 21678  012E80  CF68 FFDF          	movff	3944,indf2	;volatile
 21679                           
 21680                           ; BSR set to: 15
 21681                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 21682  012E84  EE20 F007          	lfsr	2,7
 21683  012E88  503A               	movf	CANreceiveMessage@msg,w,c
 21684  012E8A  26D9               	addwf	fsr2l,f,c
 21685  012E8C  503B               	movf	CANreceiveMessage@msg+1,w,c
 21686  012E8E  22DA               	addwfc	fsr2h,f,c
 21687  012E90  CF69 FFDF          	movff	3945,indf2	;volatile
 21688                           
 21689                           ; BSR set to: 15
 21690                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 21691  012E94  EE20 F008          	lfsr	2,8
 21692  012E98  503A               	movf	CANreceiveMessage@msg,w,c
 21693  012E9A  26D9               	addwf	fsr2l,f,c
 21694  012E9C  503B               	movf	CANreceiveMessage@msg+1,w,c
 21695  012E9E  22DA               	addwfc	fsr2h,f,c
 21696  012EA0  CF6A FFDF          	movff	3946,indf2	;volatile
 21697                           
 21698                           ; BSR set to: 15
 21699                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 21700  012EA4  EE20 F009          	lfsr	2,9
 21701  012EA8  503A               	movf	CANreceiveMessage@msg,w,c
 21702  012EAA  26D9               	addwf	fsr2l,f,c
 21703  012EAC  503B               	movf	CANreceiveMessage@msg+1,w,c
 21704  012EAE  22DA               	addwfc	fsr2h,f,c
 21705  012EB0  CF6B FFDF          	movff	3947,indf2	;volatile
 21706                           
 21707                           ; BSR set to: 15
 21708                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 21709  012EB4  EE20 F00A          	lfsr	2,10
 21710  012EB8  503A               	movf	CANreceiveMessage@msg,w,c
 21711  012EBA  26D9               	addwf	fsr2l,f,c
 21712  012EBC  503B               	movf	CANreceiveMessage@msg+1,w,c
 21713  012EBE  22DA               	addwfc	fsr2h,f,c
 21714  012EC0  CF6C FFDF          	movff	3948,indf2	;volatile
 21715                           
 21716                           ; BSR set to: 15
 21717                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 21718  012EC4  EE20 F00B          	lfsr	2,11
 21719  012EC8  503A               	movf	CANreceiveMessage@msg,w,c
 21720  012ECA  26D9               	addwf	fsr2l,f,c
 21721  012ECC  503B               	movf	CANreceiveMessage@msg+1,w,c
 21722  012ECE  22DA               	addwfc	fsr2h,f,c
 21723  012ED0  CF6D FFDF          	movff	3949,indf2	;volatile
 21724                           
 21725                           ; BSR set to: 15
 21726                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 21727  012ED4  EE20 F00E          	lfsr	2,14
 21728  012ED8  503A               	movf	CANreceiveMessage@msg,w,c
 21729  012EDA  26D9               	addwf	fsr2l,f,c
 21730  012EDC  503B               	movf	CANreceiveMessage@msg+1,w,c
 21731  012EDE  22DA               	addwfc	fsr2h,f,c
 21732  012EE0  AC65               	btfss	3941,6,c	;volatile
 21733  012EE2  D002               	goto	i2u769_40
 21734  012EE4  0E01               	movlw	1
 21735  012EE6  D001               	goto	i2u769_46
 21736  012EE8                     i2u769_40:
 21737  012EE8  0E00               	movlw	0
 21738  012EEA                     i2u769_46:
 21739  012EEA  6EDF               	movwf	indf2,c
 21740                           
 21741                           ; BSR set to: 15
 21742                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 21743  012EEC  EE20 F00D          	lfsr	2,13
 21744  012EF0  503A               	movf	CANreceiveMessage@msg,w,c
 21745  012EF2  26D9               	addwf	fsr2l,f,c
 21746  012EF4  503B               	movf	CANreceiveMessage@msg+1,w,c
 21747  012EF6  22DA               	addwfc	fsr2h,f,c
 21748  012EF8  5065               	movf	3941,w,c	;volatile
 21749  012EFA  0B0F               	andlw	15
 21750  012EFC  6EDF               	movwf	indf2,c
 21751                           
 21752                           ; BSR set to: 15
 21753                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 21754  012EFE  EE20 F00C          	lfsr	2,12
 21755  012F02  503A               	movf	CANreceiveMessage@msg,w,c
 21756  012F04  26D9               	addwf	fsr2l,f,c
 21757  012F06  503B               	movf	CANreceiveMessage@msg+1,w,c
 21758  012F08  22DA               	addwfc	fsr2h,f,c
 21759  012F0A  A662               	btfss	3938,3,c	;volatile
 21760  012F0C  D002               	goto	i2u770_40
 21761  012F0E  0E01               	movlw	1
 21762  012F10  D001               	goto	i2u770_46
 21763  012F12                     i2u770_40:
 21764  012F12  0E00               	movlw	0
 21765  012F14                     i2u770_46:
 21766  012F14  6EDF               	movwf	indf2,c
 21767                           
 21768                           ; BSR set to: 15
 21769                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 21770  012F16  B662               	btfsc	3938,3,c	;volatile
 21771  012F18  D043               	goto	i2l6451
 21772                           
 21773                           ; BSR set to: 15
 21774                           ;inc\CANlib.h: 606: {
 21775                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 21776  012F1A  CF61 F03C          	movff	3937,??_CANreceiveMessage	;volatile
 21777  012F1E  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21778  012F20  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21779  012F22  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21780  012F24  0E03               	movlw	3
 21781  012F26                     i2u772_45:
 21782  012F26  90D8               	bcf	status,0,c
 21783  012F28  363C               	rlcf	??_CANreceiveMessage,f,c
 21784  012F2A  363D               	rlcf	??_CANreceiveMessage+1,f,c
 21785  012F2C  363E               	rlcf	??_CANreceiveMessage+2,f,c
 21786  012F2E  363F               	rlcf	??_CANreceiveMessage+3,f,c
 21787  012F30  2EE8               	decfsz	wreg,f,c
 21788  012F32  D7F9               	goto	i2u772_45
 21789  012F34  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21790  012F38  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21791  012F3C  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 21792  012F40  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21793  012F44  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21794  012F48  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21795                           
 21796                           ; BSR set to: 15
 21797                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 21798  012F4C  3862               	swapf	3938,w,c	;volatile
 21799  012F4E  42E8               	rrncf	wreg,f,c
 21800  012F50  0B07               	andlw	7
 21801  012F52  0B07               	andlw	7
 21802  012F54  6E45               	movwf	CANreceiveMessage@tamp,c
 21803                           
 21804                           ; BSR set to: 15
 21805                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 21806  012F56  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21807  012F5A  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21808  012F5E  CFDE F03C          	movff	postinc2,??_CANreceiveMessage
 21809  012F62  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+1
 21810  012F66  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+2
 21811  012F6A  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+3
 21812  012F6E  5045               	movf	CANreceiveMessage@tamp,w,c
 21813  012F70  243C               	addwf	??_CANreceiveMessage,w,c
 21814  012F72  6E40               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 21815  012F74  0E00               	movlw	0
 21816  012F76  203D               	addwfc	??_CANreceiveMessage+1,w,c
 21817  012F78  6E41               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 21818  012F7A  0E00               	movlw	0
 21819  012F7C  203E               	addwfc	??_CANreceiveMessage+2,w,c
 21820  012F7E  6E42               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 21821  012F80  0E00               	movlw	0
 21822  012F82  203F               	addwfc	??_CANreceiveMessage+3,w,c
 21823  012F84  6E43               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 21824  012F86  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21825  012F8A  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21826  012F8E  C040  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 21827  012F92  C041  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 21828  012F96  C042  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 21829  012F9A  C043  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 21830                           
 21831                           ;inc\CANlib.h: 610: }
 21832  012F9E  D08E               	goto	i2l6477
 21833  012FA0                     i2l6451:
 21834                           
 21835                           ; BSR set to: 15
 21836                           ;inc\CANlib.h: 611: else
 21837                           ;inc\CANlib.h: 612: {
 21838                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 21839  012FA0  CF64 F03C          	movff	3940,??_CANreceiveMessage	;volatile
 21840  012FA4  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21841  012FA6  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21842  012FA8  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21843  012FAA  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21844  012FAE  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21845  012FB2  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 21846  012FB6  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21847  012FBA  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21848  012FBE  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21849                           
 21850                           ; BSR set to: 15
 21851                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 21852  012FC2  CF63 F03C          	movff	3939,??_CANreceiveMessage	;volatile
 21853  012FC6  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21854  012FC8  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21855  012FCA  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21856  012FCC  C03E  F03F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 21857  012FD0  C03D  F03E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 21858  012FD4  C03C  F03D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 21859  012FD8  6A3C               	clrf	??_CANreceiveMessage,c
 21860  012FDA  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21861  012FDE  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21862  012FE2  503C               	movf	??_CANreceiveMessage,w,c
 21863  012FE4  26DE               	addwf	postinc2,f,c
 21864  012FE6  503D               	movf	??_CANreceiveMessage+1,w,c
 21865  012FE8  22DE               	addwfc	postinc2,f,c
 21866  012FEA  503E               	movf	??_CANreceiveMessage+2,w,c
 21867  012FEC  22DE               	addwfc	postinc2,f,c
 21868  012FEE  503F               	movf	??_CANreceiveMessage+3,w,c
 21869  012FF0  22DE               	addwfc	postinc2,f,c
 21870                           
 21871                           ; BSR set to: 15
 21872                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 21873  012FF2  A062               	btfss	3938,0,c	;volatile
 21874  012FF4  D00D               	goto	i2l6459
 21875                           
 21876                           ; BSR set to: 15
 21877                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 21878  012FF6  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21879  012FFA  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21880  012FFE  0E00               	movlw	0
 21881  013000  12DE               	iorwf	postinc2,f,c
 21882  013002  0E00               	movlw	0
 21883  013004  12DE               	iorwf	postinc2,f,c
 21884  013006  0E01               	movlw	1
 21885  013008  12DE               	iorwf	postinc2,f,c
 21886  01300A  0E00               	movlw	0
 21887  01300C  12DE               	iorwf	postinc2,f,c
 21888  01300E  D000               	goto	i2l6459
 21889  013010                     i2l6459:
 21890                           
 21891                           ; BSR set to: 15
 21892                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 21893  013010  A262               	btfss	3938,1,c	;volatile
 21894  013012  D00D               	goto	i2l6463
 21895                           
 21896                           ; BSR set to: 15
 21897                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 21898  013014  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21899  013018  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21900  01301C  0E00               	movlw	0
 21901  01301E  12DE               	iorwf	postinc2,f,c
 21902  013020  0E00               	movlw	0
 21903  013022  12DE               	iorwf	postinc2,f,c
 21904  013024  0E02               	movlw	2
 21905  013026  12DE               	iorwf	postinc2,f,c
 21906  013028  0E00               	movlw	0
 21907  01302A  12DE               	iorwf	postinc2,f,c
 21908  01302C  D000               	goto	i2l6463
 21909  01302E                     i2l6463:
 21910                           
 21911                           ; BSR set to: 15
 21912                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 21913  01302E  AA62               	btfss	3938,5,c	;volatile
 21914  013030  D00D               	goto	i2l6467
 21915                           
 21916                           ; BSR set to: 15
 21917                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 21918  013032  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21919  013036  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21920  01303A  0E00               	movlw	0
 21921  01303C  12DE               	iorwf	postinc2,f,c
 21922  01303E  0E00               	movlw	0
 21923  013040  12DE               	iorwf	postinc2,f,c
 21924  013042  0E04               	movlw	4
 21925  013044  12DE               	iorwf	postinc2,f,c
 21926  013046  0E00               	movlw	0
 21927  013048  12DE               	iorwf	postinc2,f,c
 21928  01304A  D000               	goto	i2l6467
 21929  01304C                     i2l6467:
 21930                           
 21931                           ; BSR set to: 15
 21932                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 21933  01304C  AC62               	btfss	3938,6,c	;volatile
 21934  01304E  D00D               	goto	i2l6471
 21935                           
 21936                           ; BSR set to: 15
 21937                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 21938  013050  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21939  013054  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21940  013058  0E00               	movlw	0
 21941  01305A  12DE               	iorwf	postinc2,f,c
 21942  01305C  0E00               	movlw	0
 21943  01305E  12DE               	iorwf	postinc2,f,c
 21944  013060  0E08               	movlw	8
 21945  013062  12DE               	iorwf	postinc2,f,c
 21946  013064  0E00               	movlw	0
 21947  013066  12DE               	iorwf	postinc2,f,c
 21948  013068  D000               	goto	i2l6471
 21949  01306A                     i2l6471:
 21950                           
 21951                           ; BSR set to: 15
 21952                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 21953  01306A  AE62               	btfss	3938,7,c	;volatile
 21954  01306C  D00D               	goto	i2l6475
 21955                           
 21956                           ; BSR set to: 15
 21957                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 21958  01306E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21959  013072  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21960  013076  0E00               	movlw	0
 21961  013078  12DE               	iorwf	postinc2,f,c
 21962  01307A  0E00               	movlw	0
 21963  01307C  12DE               	iorwf	postinc2,f,c
 21964  01307E  0E10               	movlw	16
 21965  013080  12DE               	iorwf	postinc2,f,c
 21966  013082  0E00               	movlw	0
 21967  013084  12DE               	iorwf	postinc2,f,c
 21968  013086  D000               	goto	i2l6475
 21969  013088                     i2l6475:
 21970                           
 21971                           ; BSR set to: 15
 21972                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 21973  013088  CF61 F03C          	movff	3937,??_CANreceiveMessage	;volatile
 21974  01308C  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21975  01308E  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21976  013090  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21977  013092  0E15               	movlw	21
 21978  013094                     i2u778_45:
 21979  013094  90D8               	bcf	status,0,c
 21980  013096  363C               	rlcf	??_CANreceiveMessage,f,c
 21981  013098  363D               	rlcf	??_CANreceiveMessage+1,f,c
 21982  01309A  363E               	rlcf	??_CANreceiveMessage+2,f,c
 21983  01309C  363F               	rlcf	??_CANreceiveMessage+3,f,c
 21984  01309E  2EE8               	decfsz	wreg,f,c
 21985  0130A0  D7F9               	goto	i2u778_45
 21986  0130A2  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21987  0130A6  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21988  0130AA  503C               	movf	??_CANreceiveMessage,w,c
 21989  0130AC  12DE               	iorwf	postinc2,f,c
 21990  0130AE  503D               	movf	??_CANreceiveMessage+1,w,c
 21991  0130B0  12DE               	iorwf	postinc2,f,c
 21992  0130B2  503E               	movf	??_CANreceiveMessage+2,w,c
 21993  0130B4  12DE               	iorwf	postinc2,f,c
 21994  0130B6  503F               	movf	??_CANreceiveMessage+3,w,c
 21995  0130B8  12DE               	iorwf	postinc2,f,c
 21996  0130BA  D000               	goto	i2l6477
 21997  0130BC                     i2l6477:
 21998                           
 21999                           ; BSR set to: 15
 22000                           ;inc\CANlib.h: 629: }
 22001                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 22002  0130BC  9E60               	bcf	3936,7,c	;volatile
 22003                           
 22004                           ; BSR set to: 15
 22005                           ;inc\CANlib.h: 632: return (error);
 22006                           ;	Return value of _CANreceiveMessage is never used
 22007  0130BE  0012               	return	
 22008                           
 22009                           ; BSR set to: 15
 22010                           
 22011                           ; BSR set to: 15
 22012  0130C0  0012               	return		;funcret
 22013  0130C2                     __end_of_CANreceiveMessage:
 22014                           	opt stack 0
 22015                           pclatu	equ	0xFFB
 22016                           pclath	equ	0xFFA
 22017                           tblptru	equ	0xFF8
 22018                           tblptrh	equ	0xFF7
 22019                           tblptrl	equ	0xFF6
 22020                           tablat	equ	0xFF5
 22021                           prodh	equ	0xFF4
 22022                           prodl	equ	0xFF3
 22023                           intcon	equ	0xFF2
 22024                           postinc0	equ	0xFEE
 22025                           fsr0h	equ	0xFEA
 22026                           fsr0l	equ	0xFE9
 22027                           wreg	equ	0xFE8
 22028                           indf1	equ	0xFE7
 22029                           plusw1	equ	0xFE3
 22030                           fsr1h	equ	0xFE2
 22031                           fsr1l	equ	0xFE1
 22032                           bsr	equ	0xFE0
 22033                           indf2	equ	0xFDF
 22034                           postinc2	equ	0xFDE
 22035                           postdec2	equ	0xFDD
 22036                           plusw2	equ	0xFDB
 22037                           fsr2h	equ	0xFDA
 22038                           fsr2l	equ	0xFD9
 22039                           status	equ	0xFD8
 22040                           
 22041 ;; *************** function _CANisRxReady *****************
 22042 ;; Defined at:
 22043 ;;		line 1163 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 22044 ;; Parameters:    Size  Location     Type
 22045 ;;		None
 22046 ;; Auto vars:     Size  Location     Type
 22047 ;;		None
 22048 ;; Return value:  Size  Location     Type
 22049 ;;                  1    wreg      unsigned char 
 22050 ;; Registers used:
 22051 ;;		wreg, status,2
 22052 ;; Tracked objects:
 22053 ;;		On entry : 0/0
 22054 ;;		On exit  : 0/0
 22055 ;;		Unchanged: 0/0
 22056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22061 ;;Total ram usage:        1 bytes
 22062 ;; Hardware stack levels used:    1
 22063 ;; This function calls:
 22064 ;;		Nothing
 22065 ;; This function is called by:
 22066 ;;		_ISR_alta
 22067 ;; This function uses a non-reentrant model
 22068 ;;
 22069                           
 22070                           	psect	text66
 22071  016124                     __ptext66:
 22072                           	opt stack 0
 22073  016124                     _CANisRxReady:
 22074                           	opt stack 20
 22075                           
 22076                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 22077                           
 22078                           ; BSR set to: 15
 22079                           ;incstack = 0
 22080  016124  0E01               	movlw	1
 22081  016126  6E3A               	movwf	_CANisRxReady$3257,c
 22082  016128  BE60               	btfsc	3936,7,c	;volatile
 22083  01612A  D005               	goto	i2l583
 22084  01612C  010F               	movlb	15	; () banked
 22085  01612E  BF50               	btfsc	80,7,b	;volatile
 22086  016130  D002               	goto	i2l583
 22087                           
 22088                           ; BSR set to: 15
 22089  016132  0E00               	movlw	0
 22090  016134  6E3A               	movwf	_CANisRxReady$3257,c
 22091  016136                     i2l583:
 22092  016136  503A               	movf	_CANisRxReady$3257,w,c
 22093  016138  0012               	return	
 22094  01613A  0012               	return		;funcret
 22095  01613C                     __end_of_CANisRxReady:
 22096                           	opt stack 0
 22097                           pclatu	equ	0xFFB
 22098                           pclath	equ	0xFFA
 22099                           tblptru	equ	0xFF8
 22100                           tblptrh	equ	0xFF7
 22101                           tblptrl	equ	0xFF6
 22102                           tablat	equ	0xFF5
 22103                           prodh	equ	0xFF4
 22104                           prodl	equ	0xFF3
 22105                           intcon	equ	0xFF2
 22106                           postinc0	equ	0xFEE
 22107                           fsr0h	equ	0xFEA
 22108                           fsr0l	equ	0xFE9
 22109                           wreg	equ	0xFE8
 22110                           indf1	equ	0xFE7
 22111                           plusw1	equ	0xFE3
 22112                           fsr1h	equ	0xFE2
 22113                           fsr1l	equ	0xFE1
 22114                           bsr	equ	0xFE0
 22115                           indf2	equ	0xFDF
 22116                           postinc2	equ	0xFDE
 22117                           postdec2	equ	0xFDD
 22118                           plusw2	equ	0xFDB
 22119                           fsr2h	equ	0xFDA
 22120                           fsr2l	equ	0xFD9
 22121                           status	equ	0xFD8
 22122                           pclatu	equ	0xFFB
 22123                           pclath	equ	0xFFA
 22124                           tblptru	equ	0xFF8
 22125                           tblptrh	equ	0xFF7
 22126                           tblptrl	equ	0xFF6
 22127                           tablat	equ	0xFF5
 22128                           prodh	equ	0xFF4
 22129                           prodl	equ	0xFF3
 22130                           intcon	equ	0xFF2
 22131                           postinc0	equ	0xFEE
 22132                           fsr0h	equ	0xFEA
 22133                           fsr0l	equ	0xFE9
 22134                           wreg	equ	0xFE8
 22135                           indf1	equ	0xFE7
 22136                           plusw1	equ	0xFE3
 22137                           fsr1h	equ	0xFE2
 22138                           fsr1l	equ	0xFE1
 22139                           bsr	equ	0xFE0
 22140                           indf2	equ	0xFDF
 22141                           postinc2	equ	0xFDE
 22142                           postdec2	equ	0xFDD
 22143                           plusw2	equ	0xFDB
 22144                           fsr2h	equ	0xFDA
 22145                           fsr2l	equ	0xFD9
 22146                           status	equ	0xFD8
 22147                           
 22148                           	psect	rparam
 22149  0000                     pclatu	equ	0xFFB
 22150                           pclath	equ	0xFFA
 22151                           tblptru	equ	0xFF8
 22152                           tblptrh	equ	0xFF7
 22153                           tblptrl	equ	0xFF6
 22154                           tablat	equ	0xFF5
 22155                           prodh	equ	0xFF4
 22156                           prodl	equ	0xFF3
 22157                           intcon	equ	0xFF2
 22158                           postinc0	equ	0xFEE
 22159                           fsr0h	equ	0xFEA
 22160                           fsr0l	equ	0xFE9
 22161                           wreg	equ	0xFE8
 22162                           indf1	equ	0xFE7
 22163                           plusw1	equ	0xFE3
 22164                           fsr1h	equ	0xFE2
 22165                           fsr1l	equ	0xFE1
 22166                           bsr	equ	0xFE0
 22167                           indf2	equ	0xFDF
 22168                           postinc2	equ	0xFDE
 22169                           postdec2	equ	0xFDD
 22170                           plusw2	equ	0xFDB
 22171                           fsr2h	equ	0xFDA
 22172                           fsr2l	equ	0xFD9
 22173                           status	equ	0xFD8


Data Sizes:
    Strings     632
    Constant    144
    Data        1
    BSS         145
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      76
    BANK0           160     85     137
    BANK1           256     41      95
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_43(CODE[21]), STR_42(CODE[21]), STR_41(CODE[21]), STR_40(CODE[21]), 
		 -> STR_39(CODE[21]), STR_38(CODE[21]), STR_37(CODE[21]), STR_36(CODE[21]), 
		 -> STR_35(CODE[21]), STR_34(CODE[21]), STR_33(CODE[21]), STR_32(CODE[21]), 
		 -> STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[21]), STR_28(CODE[21]), 
		 -> STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), 
		 -> STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[8]), STR_16(CODE[8]), 
		 -> STR_15(CODE[21]), STR_14(CODE[5]), STR_13(CODE[5]), STR_12(CODE[5]), 
		 -> STR_11(CODE[21]), STR_10(CODE[7]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_7(CODE[12]), STR_6(CODE[21]), STR_4(CODE[21]), STR_3(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK1[8]), park_assist_state(BANK1[8]), data_steering(BANK1[8]), data_brake(COMRAM[8]), 
		 -> data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    ___lbtofl->___flpack
    ___awtofl->___flpack
    _LCD_Parking->_LCD_write_message
    _LCD_Park->_LCD_write_message
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awtofl
    ___flmul->___lbtofl
    ___awdiv->___awmod
    ___lltofl->___flpack
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___lwtofl->___flpack
    ___fldiv->___lwtofl
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_Gap->_LCD_write_message
    _LCD_Error->_LCD_write_message
    _LCD_End->_LCD_write_message
    _Credits->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Tx->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  634859
                                             33 BANK1      8     8      0
                             _CAN_Tx
                       _CANisTxReady
                     _CANsendMessage
                            _Credits
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                            _LCD_End
                          _LCD_Error
                            _LCD_Gap
                        _LCD_Handler
                           _LCD_Park
                        _LCD_Parking
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___awdiv
                           ___awtofl
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___lbtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             32 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lbtofl                                             5     1      4    2675
                                             28 BANK0      5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) ___awtofl                                             9     5      4    2854
                                             28 BANK0      5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Parking                                          0     0      0   57986
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Park                                             0     0      0   57986
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  156928
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___lwtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   48534
                                             83 BANK0      2     2      0
                                              0 BANK1     33    25      8
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                           ___lltofl
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4   10519
                                             48 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             18 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4   10240
                                             48 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             15     7      8    5710
                                             33 BANK0     15     7      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtofl (ARG)
                           ___flpack
                           ___lbtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    2293
                                             24 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             18 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             18 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___lltofl                                             4     0      4    2752
                                             28 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             18 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             18 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             73 BANK0     10     6      4
                           ___awtofl (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___lbtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4809
                                             73 BANK0      8     0      8
                            ___fladd
                           ___lltofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             12     4      8    4445
                                             61 BANK0     12     4      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___flpack
                           ___lbtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             48 BANK0      4     0      4
                            ___flmul (ARG)
                           ___lbtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     660
                                             18 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lwtofl                                             4     0      4    2752
                                             28 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             15     7      8    3329
                                             32 BANK0     15     7      8
                           ___flpack
                           ___lwtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flpack                                            10     4      6    2644
                                             18 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12052
                                             42 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             34 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             25 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             18 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             18 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             35 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18137
                                             33 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             30 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_Gap                                              0     0      0   57986
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Error                                            0     0      0   57986
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_End                                              0     0      0   57986
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     1     1      0      68
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Credits                                              0     0      0   57986
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   12599
                                             35 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             30 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             32 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             30 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             30 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             26 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             24 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _CAN_Tx                                               0     0      0    4619
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4595
                                             18 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           18    18      0    3428
                                              0 BANK0     18    18      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    2243
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Tx
     _CANisTxReady
     _CANsendMessage
   _CANisTxReady
   _CANsendMessage
   _Credits
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_End
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Error
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Gap
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___flpack
       ___lwtofl (ARG)
         ___flpack
     ___lwtofl
       ___flpack
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___lbtofl (ARG)
             ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___lbtofl (ARG)
           ___flpack
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
             ___lbtofl (ARG)
               ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
         ___lltofl (ARG)
           ___flpack
       ___fltol
         ___awtofl (ARG)
           ___flpack
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
             ___lbtofl (ARG)
               ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___lbtofl (ARG)
             ___flpack
         ___lbtofl (ARG)
           ___flpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
       ___lldiv
       ___llmod
       ___lltofl
         ___flpack
       ___wmul
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
   _LCD_Park
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Parking
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___awdiv
     ___awmod (ARG)
   ___awtofl
     ___flpack
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___lbtofl (ARG)
         ___flpack
     ___flpack (ARG)
     ___lbtofl (ARG)
       ___flpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtofl (ARG)
       ___flpack
     ___flpack (ARG)
     ___lbtofl (ARG)
       ___flpack
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
     ___lbtofl (ARG)
       ___flpack
   ___fltol
     ___awtofl (ARG)
       ___flpack
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___lbtofl (ARG)
           ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___lbtofl (ARG)
         ___flpack
     ___lbtofl (ARG)
       ___flpack
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
   ___lbtofl
     ___flpack
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     29      5F       7       37.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     55      89       5       85.6%
BITCOMRAM           5F      0       3       0        3.2%
COMRAM              5F     21      4C       1       80.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     134      20        0.0%
DATA                 0      0     134       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jun 11 18:30:59 2016

                                _x 0264                                  _y 0265  
                                _z 0266          __size_of_delay_set_quartz 000A  
                     ___fldiv@cntr 008C               __end_of_CANSetFilter 0B2A  
                     ?_LCD_Handler 0029                       ___fldiv@sign 008E  
                     ___awdiv@sign 007D                                 _id 0001  
                               bsr 000FE0                ___wmul@multiplicand 0074  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                       __CFG_CP2$OFF 000000  
                     ?_LCD_Parking 0029                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                       __CFG_CP4$OFF 000000  
                     __CFG_CP5$OFF 000000                       ___flpack@arg 0072  
                      _row_refresh 025D                       ___flpack@exp 0076  
                              l400 2264                                l401 1FF0  
                              l410 21AE                                l402 1FF4  
                              l411 21B2                                l403 20EE  
                              l420 231A                                l412 21BE  
                              l404 207C                                l500 063A  
                              l421 2324                                l405 2086  
                              l501 063E                                l406 2090  
                              l510 074E                                l502 064A  
                              l415 227A                                l407 209A  
                              l511 075A                                l503 064E  
                              l424 2438                                l416 227E  
                              l520 086A                                l512 075E  
                              l504 065A                                l425 243C  
                              l417 2378                                l521 086E  
                              l513 076A                                l426 2448  
                              l418 2306                                l530 097E  
                              l522 087A                                l514 076E  
                              l419 2310                                l531 098A  
                              l523 087E                                l515 077A  
                              l507 073A                                l540 0A9A  
                              l532 098E                                l524 088A  
                              l508 073E                                l460 3818  
                              l380 44C2                                l541 0A9E  
                              l533 099A                                l525 088E  
                              l509 074A                                l461 381C  
                              l381 44CC                                l390 1DFC  
                              l542 0AAA                                l534 099E  
                              l526 089A                                l518 085A  
                              l470 3928                                l462 3828  
                              l454 37E8                                l391 1E06  
                              l543 0AAE                                l535 09AA  
                              l519 085E                                l471 3934  
                              l455 37EC                                l392 1E10  
                              l544 0ABA                                l536 09AE  
                              l472 3938                                l456 37F8  
                              l385 1FDA                                l545 0ABE  
                              l537 09BA                                l529 097A  
                              l473 3944                                l465 3904  
                              l457 37FC                                l386 1D66  
                              l546 0ACA                                l490 0520  
                              l466 3908                                l458 3808  
                              l395 1F24                                l387 1D6A  
                              l547 0ACE                                l491 052C  
                              l467 3914                                l459 380C  
                              l396 1F28                                l388 1E64  
                              l548 0ADA                                l492 0530  
                              l468 3918                                l820 0CB4  
                      _pwr_credits 025C                                l397 1F34  
                              l389 1DF2                                l493 053C  
                              l485 04FC                                l469 3924  
                              l486 0500                                l591 5EB6  
                              l487 050C                                l823 0C7C  
                              l496 061A                                l488 0510  
                              l832 0E32                                l824 0C76  
                              l497 061E                                l489 051C  
                              l578 60A6                                l498 062A  
                              l499 062E                                l908 40C2  
                              l844 0E2C                                l828 0CC0  
                              l917 4100                                l845 0E28  
                              l837 0DA0                                l871 11F6  
                              l872 11F2                                l864 105A  
                              l881 12BE                                l857 1052  
                              l962 615A                                l955 6170  
                              l948 6144                                l967 5DE4  
                              l879 12C2                                l969 5DE8  
             ??_PWR_Button_Polling 0072                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                        ?_LCD_cursor 007E  
                              _dir 00E3                                _msg 0012  
                              _str 010A                       ___awmod@sign 0077  
                              prod 000FF3                                wreg 000FE8  
                     ___flmul@cntr 008E                       ___flmul@sign 008F  
                  __end_of_LCD_Gap 5B1E                       __CFG_LVP$OFF 000000  
                  __end_of_LCD_End 5BE6                      ___flpack@sign 0077  
           __size_of_LCD_goto_line 00EE                       ___fltol@exp1 00B2  
                     __CFG_WDT$OFF 000000                               l1311 4B74  
                             l1065 1A98                               l1331 4210  
                             l1333 423E                               l1318 4BD6  
                             l1342 432A                               l1319 4BEE  
                             l1327 41D2                               l1601 585C  
                             l1560 5582                               l1384 5218  
                             l1376 4ABE                               l1490 485E  
                             l1491 48A2                               l1654 597C  
                             l1591 54DC                               l5023 3876  
                             l1664 59E8                               l1497 492A  
                             l5017 382E                               l5109 0236  
                             l5231 06A8                               l5127 02F2  
                             l5225 0660                               l5145 03AE  
                             l5073 00C0                               l5049 394A  
                             l5163 046A                               l5091 017A  
                             l4701 59B2                               l5405 5D70  
                             l5333 0A08                   _battery_charging 0255  
                             l5327 09C0                               l5191 0542  
                             l4705 59D8                               l8001 515E  
                             l5361 0AE0                               l5265 07C8  
                             l8011 5456                               l5259 0780  
                             l8013 5468                               l5293 08A0  
                             l5197 058A                               l8023 54C8  
                             l8015 5472                               l8031 57E6  
                             l5801 1E1C                               l4681 593A  
                             l8033 57F8                               l8051 5F34  
                             l8035 5802                               l8211 1756  
                             l8203 16CE                               l5299 08E8  
                             l9003 142E                               l5821 1F18  
                             l6605 55FE                               l4677 5922  
                             l8301 1C28                               l8213 176C  
                             l8133 1454                               l9005 1434  
                             l5903 21C4                               l8055 5F50  
                             l4679 5930                               l4927 54F8  
                             l8071 4638                               l8039 5848  
                             l8303 1C38                               l8231 1884  
                             l8223 17F4                               l8207 1702  
                             l8311 1C64                               l8151 14F0  
                             l5743 4454                               l6609 5638  
                             l4689 596C                               l4697 599A  
                             l4937 553C                               l8065 4622  
                             l8321 1CB4                               l8225 1800  
                             l8233 1898                               l8209 1718  
                             l8161 152A                               l8153 150C  
                             l5761 44D8                               l5827 1F3A  
                             l4699 59A8                               l8067 462A  
                             l8083 470A                               l7531 4234  
                             l8251 196A                               l8243 1924  
                             l8219 17C2                               l8163 1554  
                             l8147 14A4                               l8139 146E  
                             l8331 1D1A                               l5763 451C  
                             l5755 44BA                               l7445 5EA8  
                             l8077 46C6                               l7525 4222  
                             l7621 4ED2                               l7605 4E5A  
                             l8325 1CE6                               l8317 1C8C  
                             l8309 1C54                               l8237 1910  
                             l8157 1520                               l8333 1D40  
                             l8501 3F20                               l4957 6116  
                             l5757 44D0                               l5749 4464  
                             l8079 4702                               l8087 4784  
                             l7471 4B16                               l8343 4F48  
                             l7551 42D6                               l7519 41E4  
                             l7703 5704                               l7615 4EA2  
                             l8255 1996                               l8247 1964  
                             l8239 1916                               l4991 375C  
                             l4975 36A4                               l5953 2330  
                             l7721 5270                               l7713 5CB6  
                             l7481 4BC6                               l7473 4B56  
                             l7465 4AEE                               l8361 4FBE  
                             l7545 42A8                               l7617 4EAA  
                             l7609 4E82                               l8329 1D12  
                             l8273 1A66                               l8257 199E  
                             l8265 1A3A                               l8169 1570  
                             l6595 55B4                               l7723 52A2  
                             l7491 4C3C                               l7563 4352  
                             l7547 42BA                               l7539 4276  
                             l7651 53AC                               l7707 571A  
                             l7627 4EF2                               l7811 6054  
                             l8291 1B32                               l8275 1A7A  
                             l8267 1A4A                               l8195 164A  
                             l8179 15C4                               l8531 404E  
                             l5973 242C                               l5877 20A6  
                             l7725 52D4                               l7717 5CEA  
                             l7733 6062                               l7469 4B04  
                             l8373 5028                               l8349 4F6E  
                             l7557 4308                               l7549 42CA  
                             l7821 47D0                               l7653 53BA  
                             l7645 538E                               l8541 4070  
                             l7727 5306                               l7479 4BB4  
                             l7567 437A                               l7559 431A  
                             l7671 541C                               l7663 53F6  
                             l7655 53C4                               l7639 5376  
                             l8287 1AD0                               l8279 1A9E  
                             l8551 40B0                               l8527 4038  
                             l8615 5D14                               l5897 21A2  
                             l7729 5338                               l7737 6078  
                             l8369 5014                               l7577 43CE  
                             l7921 4A84                               l7905 4A34  
                             l7593 4E0A                               l7761 3C38  
                             l7753 3B3C                               l8529 404A  
                             l8801 0CA6                               l5979 244E  
                             l7827 480A                               l7667 5406  
                             l7691 56B6                               l7683 5690  
                             l7587 4DE4                               l8571 412A  
                             l7917 4A70                               l7909 4A48  
                             l7861 48F0                               l7693 56C4  
                             l7781 332A                               l8573 413C  
                             l8557 40DC                               l8549 409E  
                             l7943 51C6                               l7935 5C72  
                             l7927 4AA2                               l7695 56CE  
                             l7687 56A2                               l7775 3254  
                             l8583 417E                               l8903 104A  
                             l8807 0CCE                               l7929 4AB4  
                             l7857 48DC                               l7849 48B4  
                             l7793 34E0                               l7785 335C  
                             l8577 4162                               l8921 114C  
                             l8913 112A                               l8809 0CDC  
                             l8745 0B5E                               l7883 4988  
                             l7867 490E                               l7699 56F4  
                             l8915 1130                               l8819 0D04  
                             l8827 0D46                               l7949 5264  
                             l7957 5E3C                               l7877 4962  
                             l7869 4920                               l8925 115E  
                             l8941 11FA                               l8837 0D62  
                             l8845 0DA4                               l8749 0B68  
                             l7983 50EE                               l7967 507E  
                             l7799 35B6                               l8783 0BFA  
                             l7993 5120                               l7897 49DE  
                             l8961 12FA                               l8929 116E  
                             l8857 0E60                               l8865 0EA2  
                             l7995 5132                               l7987 5102  
                             l8867 0EA4                               l7997 5140  
                             l8981 13B8                               l8957 12E4  
                             l8949 1252                               l8893 0FBC  
                             l8885 0F10                               l8869 0EA8  
                             l8797 0C92                               l8975 13A4  
                             l8879 0ED4                               STR_1 FF6A  
                             STR_2 FF40                               l8897 1022  
                             STR_3 FE1A                               STR_4 FF6A  
                             l8987 13D0                               l8899 1028  
                             STR_5 FFFA                               STR_6 FF55  
                             l8997 13F0                               l8989 13D8  
                             STR_7 FFC8                               STR_8 FFA9  
                             STR_9 FFBA                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _LATD 000F8C                               _LATE 000F8D  
                             u5300 36D6                               u6110 09E0  
                             u6030 08C0                               u5305 36CA  
                             u6115 09D4                               u6035 08B4  
                             u5315 3736                               u5500 003A  
                             u5260 361E                               u7040 2350  
                             u5505 002E                               u5265 3612  
                             u7050 239C                               u5515 009A  
                             u5275 367E                               u5700 03E4  
                             u5620 026C                               u5540 00F4  
                             u7045 2344                               u6190 0B00  
                             u5470 396A                               u5390 384E  
                             u7055 2390                               u7065 23FC  
                             u5705 03D8                               u5625 0260  
                             u5545 00E8                               u6195 0AF4  
                             u5715 0444                               u5635 02CC  
                             u5555 0154                               u5475 395E  
                             u5395 3842                               u5660 0328  
                             u5580 01B0                  _F2_Button_Polling 6152  
                             u5665 031C                               u5585 01A4  
                             u5675 0388                               u5595 0210  
                             u6805 1EE8                               u6910 20C6  
                             u5950 07A0                               u5870 0680  
                             u5790 0562                               u6920 2112  
                             u9305 5E5E                               u9306 5E60  
                             u6915 20BA                               u9315 5E6A  
                             u5955 0794                               u5875 0674  
                             u5795 0556                               u6780 1E3C  
                             u9316 5E6C                               u6925 2106  
                             u9325 5E76                               u6790 1E88  
                             u9326 5E78                               u6935 2172  
                             u9335 5E82                               u9336 5E84  
                             u6785 1E30                               u6795 1E7C  
                             u9901 47E6                               u9881 47AC  
              __size_of_CANSetMask 03AA                       ?_LCD_goto_xy 0081  
                             _data 0116                               _main 0B2A  
                             _itoa 5D44                 ?_F2_Button_Polling 0029  
        __size_of_LCD_send_command 003A                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               _utoa 54EE  
               __size_of_LCD_Error 0064                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 00BE                      __CFG_IESO$OFF 000000  
               __size_of_LCD_clear 0032                       _sprintf$4244 013E  
                    __CFG_MCLRE$ON 000000                    __end_of_Credits 5C4A  
                     ___param_bank 000010                ??_F2_Button_Polling 0072  
         __end_of_LCD_enable_pulse 60D0                   _CANOperationMode 610C  
                     _Can_Tx_Force 0250                   __end_of_LCD_Park 5ABA  
                  _space_available 025E            __size_of_LCD_initialize 016E  
       __size_of_CANreceiveMessage 052E                      ___fltol@sign1 00B1  
                  __end_of___fladd 43FE                              ?_main 0029  
                  __end_of___fldiv 5058                              ?_itoa 0082  
                  __end_of___awdiv 5428                    __end_of___flneg 5E50  
                            STR_10 FFE4                              STR_11 FD87  
                            STR_12 FFF0                              STR_20 FF16  
                            STR_13 FFF5                              STR_21 FF7F  
                            STR_14 FFEB                              STR_30 FF01  
                            STR_22 FEC2                              STR_31 FF6A  
                            STR_15 FED7                              STR_23 FE59  
                            STR_32 FF16                              STR_24 FF16  
                            STR_16 FFD4                              STR_40 FF2B  
                            STR_17 FFDC                              STR_25 FEAD  
                            STR_33 FE98                              STR_41 FE05  
                            STR_42 FE83                              STR_26 FE6E  
                            STR_18 FE44                              STR_34 FDC6  
                            STR_19 FF94                              STR_43 FDF0  
                            STR_27 FDDB                              STR_35 FDB1  
                            STR_36 FF16                              STR_28 FF16  
                  __end_of___awmod 5726                              STR_37 FE98  
                            STR_29 FEEC                              STR_38 FD9C  
                            STR_39 FE2F                    __end_of___flmul 4F22  
                  __end_of___flsub 5CAA                    __end_of___fltol 5172  
                  __end_of___lldiv 54EE                              u10100 509E  
                            ?_utoa 0079                              u10105 5092  
                            u11030 0C5E                              u10231 45D6  
                            u11200 0E08                              u10520 1A90  
                            u11330 1046                    ___awdiv@divisor 007A  
                            u11430 12B6                    __end_of___llmod 586E  
                            u11480 137C                              u11567 5EAA  
                            _T3CON 000FB1                    __end_of___lwdiv 5986  
                  __end_of___lwmod 59F2                              i2l400 295C  
                            i2l401 273A                              i2l410 28B6  
                            i2l402 273E                              i2l411 28BA  
                            i2l403 2810                              i2l420 29F2  
                            i2l412 28C4                              i2l404 27AC  
                            i2l421 29FA                              i2l405 27B4  
                            i2l406 27BC                              i2l415 2970  
                            i2l407 27C4                              i1l815 0078  
                            i2l432 2E40                              i2l424 2AEC  
                            i2l416 2974                              i2l425 2AF0  
                            i2l417 2A46                              i2l426 2AFA  
                            i2l418 29E2                              i2l419 29EA  
                            i2l390 257E                              i2l391 2586  
                            i2l392 258E                              i2l385 2726  
                            i2l386 2504                              i2l395 2680  
                            i2l387 2508                              i2l811 3EE4  
                            i2l396 2684                              i2l388 25DA  
                            i2l397 268E                              i2l389 2576  
                            i2l583 6136                              i2l578 60EA  
                            i2l794 3EDE                    ___awdiv@counter 007C  
                            _TMR3H 000FB3                              _TMR3L 000FB2  
                _CANisRxReady$3257 003A                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                    __CFG_PWRT$OFF 000000                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                      __CFG_WRT4$OFF 000000  
               __size_of_ISR_bassa 00A6                      __CFG_WRT5$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                 CANInitialize@flags 0084  
                   __CFG_EBTR2$OFF 000000                      ___awtofl@sign 0080  
                   __CFG_EBTR3$OFF 000000                     __CFG_EBTR4$OFF 000000  
                 __end_of_ISR_alta 3F1E                     __CFG_EBTR5$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                              _check 00C1  
                   __CFG_EBTRB$OFF 000000          __end_of_F2_Button_Polling 6168  
                  __end_of_dpowers FD87                              _scale 30C2  
                  __end_of_isdigit 6060          __size_of_LCD_shift_cursor 004E  
                   __pbitbssCOMRAM 0250               __end_of_CANisRxReady 613C  
                            tablat 000FF5               __end_of_CANisTxReady 60AE  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 0081                              utoa@v 007F  
                            status 000FD8                    __end_of_sprintf 1D50  
              __size_of_LCD_cursor 0032                    __initialization 5D90  
                     __end_of_main 1444                       __end_of_itoa 5D90  
    __size_of_board_initialization 00A4                      _LCD_goto_line 526A  
                     __end_of_utoa 55B2                  ?_Joystick_Polling 0029  
               ??_Joystick_Polling 0072                  ?_LCD_write_string 0083  
                           ??_main 0157                             ??_itoa 0088  
                           ??_utoa 007F          __size_ofi2_CANsendMessage 06A4  
                    __activetblptr 000003                  __end_of_LCD_Error 5B82  
                        ??_LCD_Gap 0085                          ??_LCD_End 0085  
                   _JoystickValues 00D9                 ??_LCD_write_string 0085  
             __size_of__tdiv_to_l_ 01A6                  _CANisTxReady$3255 0072  
                __end_of_LCD_clear 6032              i2CANsendMessage@flags 0041  
           LCD_write_string@buffer 0083                             _ADCON1 000FC1  
                           _CANCON 000F6F                   ___llmod@dividend 0072  
                           ?_scale 0090                             _ADRESH 000FC4  
                 __end_of___flpack 4C50                   ___awdiv@dividend 0078  
                 __end_of___awtofl 5D44                             _CAN_Tx 55B2  
                  __CFG_BBSIZ$1024 000000                   __end_of___lbtofl 5F32  
                 __end_of___lltofl 5F9C                             i2l6401 2DA6  
                           i2l6413 2E06                             i2l6405 2DC6  
                           i2l6415 2E3A                             i2l6351 2BA0  
                           i2l6409 2DE6                             i2l6451 2FA0  
                           i2l6355 2BA8                             i2l6471 306A  
                           i2l6463 302E                             i2l6475 3088  
                           i2l6467 304C                             i2l6459 3010  
                           i2l6477 30BC                             i2l6397 2D86  
                           i2l6389 2D14                             i2l6913 28AC  
                           i2l6817 2598                             i2l6843 2694  
                           i2l6837 2676                             i2l6919 28CA  
                           i2l8703 3E2A                             i2l8723 3EAE  
                           i2l6893 27CE                             i2l8709 3E4E  
                           i2l8645 3CC6                             i2l8719 3E7E  
                           i2l8671 3D78                             i2l8663 3D54  
                           i2l6969 2A04                             i2l8729 3EC2  
                           i2l6995 2B00                             i2l6989 2AE2  
                           i2l8685 3DC0                             i2l8677 3D8E  
                           i2l8695 3DF4                             i2l8699 3E12  
                 __end_of___lwtofl 5FCE                             _RXB0D0 000F66  
                           _RXB0D1 000F67                             _RXB0D2 000F68  
                           _RXB0D3 000F69                             _RXB0D4 000F6A  
                           _RXB1D0 000F56                             _RXB0D5 000F6B  
                           _RXB1D1 000F57                             _RXB0D6 000F6C  
                           _RXB1D2 000F58                             _RXB0D7 000F6D  
                           _RXB1D3 000F59                             _RXB1D4 000F5A  
                           _RXB1D5 000F5B                             _RXB1D6 000F5C  
                           _RXB1D7 000F5D                             _TXB0D0 000F46  
                           _TXB0D1 000F47                             _TXB0D2 000F48  
                           _TXB0D3 000F49                             _TXB1D0 000F36  
                           _TXB0D4 000F4A                             _TXB1D1 000F37  
                           _TXB0D5 000F4B                             _TXB1D2 000F38  
                           _TXB0D6 000F4C                             _TXB1D3 000F39  
                           _TXB0D7 000F4D                             _TXB2D0 000F26  
                           _TXB1D4 000F3A                             _TXB2D1 000F27  
                           _TXB1D5 000F3B                             _TXB2D2 000F28  
                           _TXB1D6 000F3C                             _TXB2D3 000F29  
                           _TXB1D7 000F3D                             _TXB2D4 000F2A  
                           _TXB2D5 000F2B                             _TXB2D6 000F2C  
                           _TXB2D7 000F2D                 CANsendMessage@data 0076  
                        ??_Credits 0085                 CANsendMessage@tamp 007E  
                  _switch_position 00E7                   __end_of_delay_ms 5EC4  
            __size_of_CANSetFilter 0B2A                     __CFG_XINST$OFF 000000  
                __end_of_ISR_bassa 00BE                   __end_of__powers_ FD5F  
                   ?_LCD_goto_line 0029                             ___flge 5172  
                        ??___fladd 00A5                   _delay_set_quartz 617E  
                           ___wmul 5EC4                          ??___fldiv 0088  
                        ??___awdiv 007C                          ??___flneg 0094  
                   __CFG_STVREN$ON 000000                          ??___awmod 0076  
                        ??___flmul 0089                          ??___flsub 00B1  
                        ??___fltol 00AD                          ??___lldiv 007A  
                        ??___llmod 007A                          ??___lwdiv 0076  
                     ??_CANSetMask 0077                          ??___lwmod 0076  
          __size_of_LCD_write_char 0096                             _fround 3994  
   LCD_initialize@quartz_frequency 0080                             clear_0 5D96  
                           clear_1 5DA2                             clear_2 5DB4  
                 ___awdiv@quotient 007E                    ___awmod@divisor 0074  
             __size_of_LCD_Handler 0274                    ___awmod@counter 0076  
                  __CFG_BOREN$BOHW 000000                  _JoystickConstants 00B5  
                           itoa@cp 0088                          ??_isdigit 0072  
             __size_of_LCD_Parking 0064                       __mediumconst FCF6  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8         __size_of_F2_Button_Polling 0016  
                        ??_sprintf 00B3                       _CANSetFilter 0000  
                       ___fladd@f1 009D                         ___fladd@f2 00A1  
                       ___flge@ff1 0072                         ___flge@ff2 0076  
                       ___fldiv@f1 0080                         ___fldiv@f2 0084  
                       ___fldiv@f3 0088                         __accesstop 0060  
          __end_of__initialization 5DCC                 __end_of_CANSetMask 3994  
                        ?_LCD_Park 0029                    __CFG_PBADEN$OFF 000000  
                       ___flneg@f1 0090                   _LCD_send_command 5E50  
                       ___flmul@f1 0081                         ___flmul@f2 0085  
                    ___rparam_used 000001  LCD_write_integer@number_of_digits 008C  
                       ___flsub@f1 00A9                         ___flsub@f2 00AD  
                       ___fltol@f1 00A9               __size_of_LCD_goto_xy 001C  
                       ___awtofl@c 007C                         ___lbtofl@c 0080  
                   __pcstackCOMRAM 0029                       __pidataBANK0 6188  
                        ?_ISR_alta 0029                         ___lltofl@c 007C  
                     LCD_goto_xy@x 0082                       LCD_goto_xy@y 0081  
                    __end_of_scale 35EA                     _LCD_initialize 4C50  
                _LCD_write_integer 45CC                  _LCD_write_message 5F32  
                       ___lwtofl@c 007C              CANSetFilter@numBuffer 007B  
               ?_LCD_write_integer 008A             LCD_write_integer@index 0099  
               ?_LCD_write_message 0083                         __div_to_l_ 493C  
                     ??_LCD_cursor 007F             LCD_write_integer@value 008A  
    LCD_write_integer@convertedInt 0093                  _space_gap_reached 025F  
                     _actual_speed 00DB              __size_of_CANisRxReady 0018  
            __size_of_CANisTxReady 0026                ??_LCD_write_integer 008E  
                  __div_to_l_@exp1 007F                ??_LCD_write_message 0085  
                  __div_to_l_@cntr 007E                            ??_scale 0094  
                 _LCD_shift_cursor 5CAA                    __div_to_l_@quot 007A  
         __end_of_CANOperationMode 6124                            ?_CAN_Tx 0029  
                       __pbssBANK0 00B5                         __pbssBANK1 0100  
                       _data_brake 0021                         ??_LCD_Park 0085  
          __size_of_CANsendMessage 07A0                         _data_speed 011E  
                    __div_to_l_@f1 0072                      __div_to_l_@f2 0076  
                  ??_LCD_goto_line 007E                 __end_of_LCD_cursor 6000  
           __end_of_LCD_initialize 4DBE                            ?___flge 0072  
                          ?___wmul 0072                         ??_ISR_alta 0060  
        __end_of_LCD_write_integer 4796          __end_of_LCD_write_message 5F68  
                ?_LCD_enable_pulse 0029                          ?___flpack 0072  
                          ?_fround 0090                       _CANisRxReady 6124  
                          _CANSTAT 000F6E                          ?___awtofl 007C  
               ??_LCD_enable_pulse 007A                          ?___lbtofl 007C  
                     _CANisTxReady 6088                          ?___lltofl 007C  
                          _BRGCON1 000F70                            _BRGCON2 000F71  
                          _BRGCON3 000F72                   i2_CANsendMessage 24F0  
                        ?___lwtofl 007C        __size_of_PWR_Button_Polling 0016  
                          _LCD_Gap 5ABA                            _LCD_End 5B82  
          __size_ofi2_CANisTxReady 0020             __size_of_CANInitialize 01CE  
                 LCD_cursor@active 007F                          ?_delay_ms 0078  
                          _RXB0DLC 000F65                            _RXB1DLC 000F55  
                          _RXB0CON 000F60                            _RXB1CON 000F50  
                          _TXB0DLC 000F45                            _TXB1DLC 000F35  
                          _TXB2DLC 000F25                CANsendMessage@flags 0079  
                _parking_message_E 025A                    __size_of_CAN_Tx 00C0  
                          _Credits 5BE6                  __end_of__npowers_ FD2B  
                          __Hparam 0000                         _left_speed 000B  
                       _scale$4243 0094                            __Lparam 0000  
                 delay_ms@value_ms 0078                    ?_LCD_initialize 0029  
                  __size_of___flge 00F8                            ___fladd 4192  
                          ___fldiv 4F22                            ___awdiv 5358  
                          ___flneg 5E14                            ___awmod 5672  
                          ___flmul 4DBE                            ___flsub 5C4A  
                          ___fltol 5058                            ___lldiv 5428  
                  __size_of___wmul 0038                     _LCD_write_char 586E  
                          ___llmod 57CA                            ___lwdiv 5904  
                          ___lwmod 5986                         ??___flpack 0078  
             CANInitialize@propSeg 0089                            __pcinit 5D90  
                       ??___awtofl 0080                         ??___lbtofl 0080  
                  __size_of_fround 02FE                            __ramtop 0D00  
                 _LCD_4TH_ROW_MODE 0253                LCD_write_char@value 0082  
                       ??___lltofl 0080                            __ptext0 0B2A  
                          __ptext1 5726                            __ptext2 43FE  
                          __ptext3 35EA                            __ptext4 0000  
                          __ptext5 610C                            __ptext6 5EFC  
                          __ptext7 5CF8                            __ptext8 613C  
                          __ptext9 59F2                         ??___lwtofl 0080  
                      ?__div_to_l_ 0072                   LCD_write_char@D0 0081  
                 LCD_write_char@D1 0080                   LCD_write_char@D2 007F  
                 LCD_write_char@D3 007E                          _F1_switch 0251  
                          _dpowers FD5F                          _F2_switch 0252  
                          _isdigit 6032                   ___awmod@dividend 0072  
                       ??_delay_ms 007A                     _center_value_Y 00E1  
           CANreceiveMessage@error 0044       __end_of_board_initialization 57CA  
        __size_of_Joystick_Polling 0042                          _LCD_Error 5B1E  
         __end_of_delay_set_quartz 6188                            _sprintf 1444  
                   __pintcode_body 3C92                          _LCD_clear 6000  
             end_of_initialization 5DCC          __size_of_LCD_write_string 0028  
                          itoa@buf 0082                            itoa@val 0084  
                          int_func 3C92                          i2u1100_45 3ED8  
                        i2u1100_46 3EDA                          i2u1091_45 3E0A  
                        i2u1083_45 3CE4                          i2u1091_46 3E0C  
                        i2u1083_46 3CE6                          i2u1157_47 3E76  
                    _CANInitialize 43FE                      _parking_error 0259  
                  ___lldiv@divisor 0076                 LCD_cursor@blinking 007E  
                    _parking_state 00E5                    ___lldiv@counter 007E  
           __end_of_LCD_write_char 5904                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
       __size_of_LCD_write_integer 01CA         __size_of_LCD_write_message 0036  
                          utoa@buf 0079                     __tdiv_to_l_@f1 0072  
                   __tdiv_to_l_@f2 0076                            utoa@val 007B  
                       _wait_low_1 0261                         _wait_low_2 0262  
                       _wait_low_3 0263                          _ISR_bassa 0018  
                    ??__tdiv_to_l_ 007A            _steering_correction_dir 0260  
                        _PORTAbits 000F80                          _PORTBbits 000F81  
                   CANSetMask@mask 0072                          _PORTDbits 000F83  
                   CANSetMask@tamp 007C           __end_of_LCD_send_command 5E8A  
                   CANSetMask@type 0076                        ___fldiv@exp 008D  
                _F1_Button_Polling 6168                         ?_LCD_Error 0029  
                       ?_LCD_clear 0029                 ?_F1_Button_Polling 0029  
                   __end_of_CAN_Tx 5672            _clock_counter_reference 00DD  
                      ___flmul@exp 0089                     _CANsendMessage 1D50  
                 CANInitialize@BRP 0083                   CANInitialize@SJW 0082  
                   ?_CANInitialize 0080                ??_F1_Button_Polling 0072  
                __size_of_LCD_Park 0064                __size_of__div_to_l_ 0194  
          LCD_write_integer@F17326 0100                    ?_LCD_write_char 0029  
                    ??_LCD_Handler 00B5           __end_of_LCD_shift_cursor 5CF8  
                   __end_of___flge 526A                         ?_ISR_bassa 0029  
                   __end_of___wmul 5EFC                  __size_of_ISR_alta 3F16  
                    ??_LCD_Parking 0085                  LCD_shift_cursor@i 0080  
                   __end_of_fround 3C92                     i2_CANisTxReady 60D0  
        __end_of_F1_Button_Polling 617E                start_initialization 5D90  
              __end_of__tdiv_to_l_ 493C                CANSetMask@numBuffer 007B  
           __end_of_CANsendMessage 24F0                           ??_CAN_Tx 0082  
                ?_CANOperationMode 0029                      _data_steering 0126  
                    ??_LCD_goto_xy 0082         i2CANsendMessage@dataLength 0040  
             i2CANsendMessage@data 003E                 ??_CANOperationMode 0072  
             i2CANsendMessage@tamp 0046                    ___llmod@divisor 0076  
         __end_ofi2_CANsendMessage 2B94         CANInitialize@FilterConfig1 008A  
       CANInitialize@FilterConfig2 008B                    ___llmod@counter 007A  
              _steering_correction 00E6                           ??___flge 007A  
             _board_initialization 5726                           ??___wmul 0076  
                      __pdataBANK0 00E8                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 0094             __end_ofi2_CANisTxReady 60F0  
                    sprintf@tmpval 014C                  __size_of___flpack 0180  
           CANInitialize@phaseSeg1 0080             CANInitialize@phaseSeg2 0081  
                       fround@prec 009C                __end_of_LCD_Handler 4192  
                __size_of___awtofl 004C                           ?_LCD_Gap 0029  
                __size_of___lbtofl 0036                           ?_LCD_End 0029  
                __size_of___lltofl 0034                        __pbssCOMRAM 0001  
                __size_of___lwtofl 0032                      __pcstackBANK0 0060  
                    __pcstackBANK1 0136                        _BRGCON2bits 000F71  
              __end_of_LCD_Parking 5A56                        _BRGCON3bits 000F72  
                 _Joystick_Polling 5DD2                        ??_LCD_Error 0085  
        __size_of_LCD_enable_pulse 0022                       _isdigit$3917 0073  
       i2CANsendMessage@identifier 003A                  _park_assist_state 012E  
                __size_of_delay_ms 003A                        ??_LCD_clear 007E  
                  ?_CANsendMessage 0072            LCD_write_message@buffer 0083  
                 _LCD_write_string 6060                    ??_CANInitialize 0085  
                      sprintf@flag 0144                        sprintf@fval 0152  
                         ?_Credits 0029                        sprintf@prec 0150  
                 ??_LCD_initialize 0080                 CANSetFilter@filter 0072  
        delay_set_quartz@frequency 0072                   ___lwdiv@dividend 0072  
               LCD_send_command@D0 007C                 LCD_send_command@D1 007B  
               LCD_send_command@D2 007A                 LCD_send_command@D3 007D  
              __end_of_LCD_goto_xy 610C              __end_of_LCD_goto_line 5358  
            ?_board_initialization 0029                          __pintcode 0008  
                    __pmediumconst FCF6                           ?___fladd 009D  
                         ?___fldiv 0080                           ?___awdiv 0078  
                         ?___flneg 0090                           ?___awmod 0072  
                         ?___flmul 0081                           ?___flsub 00A9  
                         ?___fltol 00A9                           ?___lldiv 0072  
                         ?___llmod 0072                          __npowers_ FCF7  
                         ?___lwdiv 0072                           ?___lwmod 0072  
                      ??_ISR_bassa 0029                        __pintcodelo 0018  
       __end_of_PWR_Button_Polling 6152                    ?i2_CANisTxReady 0029  
                      __tdiv_to_l_ 4796                       ??__div_to_l_ 007A  
                      _COMSTATbits 000F74                           ?_isdigit 0029  
       __size_of_F1_Button_Polling 0016                   ___lwdiv@quotient 0076  
                         ?_sprintf 0136                     __size_of_scale 0528  
                ?_delay_set_quartz 0029              CANreceiveMessage@tamp 0045  
               ??_delay_set_quartz 0072                           _LCD_Park 5A56  
                   ___wmul@product 0076                           _LATCbits 000F8B  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                         _IPR2bits 000FA2       _delay_quartz_frequency_value 00E8  
                         _IPR3bits 000FA5                           _PIE2bits 000FA0  
                         _PIE3bits 000FA3               _collision_risk_value 00E2  
               __end_of__div_to_l_ 4AD0                           _PIR2bits 000FA1  
                         _PIR3bits 000FA4                           i2u830_40 27EC  
                         i2u830_45 27E2                           i2u831_40 2832  
                         i2u831_45 2828                           i2u832_45 287E  
                         i2u817_40 25B6                           i2u761_45 2C98  
                         i2u817_45 25AC                           i2u770_40 2F12  
                         i2u818_40 25FC                           i2u818_45 25F2  
                         i2u770_46 2F14                           i2u843_40 2A22  
                         i2u843_45 2A18                           i2u819_45 2648  
                         i2u844_40 2A68                           i2u772_45 2F26  
                         i2u844_45 2A5E                           i2u845_45 2AB4  
                         i2u758_40 2C54                           i2u758_46 2C56  
                         i2u759_40 2C82                           i2u767_45 2E12  
                         i2u759_46 2C84                           i2u769_40 2EE8  
                         _RXB0EIDH 000F63                           _RXB0EIDL 000F64  
                         i2u769_46 2EEA                           i2u778_45 3094  
                         _RXB1EIDH 000F53                          _pr_time_1 00C5  
                        _pr_time_2 00C9                           _RXB1EIDL 000F54  
                        _pr_time_3 00CD                          _pr_time_4 0106  
                        _pr_time_5 00D1                          _pr_time_6 00D5  
                        _set_speed 00DF                           _RCONbits 000FD0  
                 __CFG_WDTPS$32768 000000                           _RXB0SIDH 000F61  
                         _RXB0SIDL 000F62                           _RXF0EIDH 000F02  
                         _RXB1SIDH 000F51                           _RXF0EIDL 000F03  
                         _RXB1SIDL 000F52                           _RXF1EIDH 000F06  
                         _RXF1EIDL 000F07                           _RXF2EIDH 000F0A  
                         _RXF2EIDL 000F0B                           _RXF3EIDH 000F0E  
                         _RXF3EIDL 000F0F                           _RXF4EIDH 000F12  
                         _RXF4EIDL 000F13                           _RXF5EIDH 000F16  
                         _RXF5EIDL 000F17                           _RXF0SIDH 000F00  
                         _RXF0SIDL 000F01                           _TXB0EIDH 000F43  
                         _RXF1SIDH 000F04                           _TXB0EIDL 000F44  
                         _RXF1SIDL 000F05                           _TXB1EIDH 000F33  
                         _RXF2SIDH 000F08                           _TXB1EIDL 000F34  
                         _RXF2SIDL 000F09                           _ISR_alta 0008  
                         _TXB2EIDH 000F23                           _RXF3SIDH 000F0C  
                         _TXB2EIDL 000F24                           _RXF3SIDL 000F0D  
                         _RXF4SIDH 000F10                           _RXF4SIDL 000F11  
                         _RXF5SIDH 000F14                           _RXF5SIDL 000F15  
                         _RXM0EIDH 000F1A                           _RXM0EIDL 000F1B  
                         _TXB0SIDH 000F41                           _RXM1EIDH 000F1E  
                         _TXB0SIDL 000F42                           _RXM1EIDL 000F1F  
                         _TXB1SIDH 000F31                           _TXB1SIDL 000F32  
                         _TXB2SIDH 000F21                           _TXB2SIDL 000F22  
                      _LCD_Handler 3F1E                           _RXM0SIDH 000F18  
                         _RXM0SIDL 000F19                           _RXM1SIDH 000F1C  
                         _RXM1SIDL 000F1D                           _RXERRCNT 000F75  
   LCD_write_integer@zero_cleaning 008D                 _parking_message_ID 00E4  
                         _TXERRCNT 000F76                         _ADCON0bits 000FC2  
                      _LCD_Parking 59F2                         _ADCON2bits 000FC0  
                ___wmul@multiplier 0072                           _RTR_Flag 0254  
                ?_LCD_send_command 007A                   _actual_speed_kmh 00BD  
                        _user_data 000F                   __size_of_LCD_Gap 0064  
                 __size_of_LCD_End 0064                 ??_LCD_send_command 007D  
                    ?_CANSetFilter 0072                         _CANCONbits 000F6F  
                      _LCD_goto_xy 60F0                   ??_LCD_write_char 007E  
                LCD_goto_line@line 007E                   __size_of_Credits 0064  
                         __Hrparam 0000                       _RXB0SIDLbits 000F62  
           ??_board_initialization 008C          _collision_sensor_distance 0009  
                         __Lrparam 0000                       _RXB1SIDLbits 000F52  
                 __size_of___fladd 026C                         _CANSetMask 35EA  
                 __size_of___fldiv 0136                   __size_of___awdiv 00D0  
                 __size_of___flneg 003C                   __size_of___awmod 00B4  
                 __size_of___flmul 0164                  ?_LCD_shift_cursor 007E  
                 __size_of___flsub 0060                   __size_of___fltol 011A  
                 __size_of___lldiv 00C6                   __size_of___llmod 00A4  
                         ___flpack 4AD0                   __size_of___lwdiv 0082  
                 __size_of___lwmod 006C                           ___awtofl 5CF8  
                         ___lbtofl 5EFC                        _fround$4241 0098  
                      _fround$4242 0094                           ___lltofl 5F68  
               ??_LCD_shift_cursor 007F                           ___lwtofl 5F9C  
                       sprintf@exp 014A                         sprintf@val 0146  
                     _RXF0SIDLbits 000F01                   __size_of_isdigit 002E  
                         _delay_ms 5E8A                    ___lwdiv@divisor 0074  
                     _RXF1SIDLbits 000F05                    ___lwdiv@counter 0078  
                   ??_CANSetFilter 0077                   _LCD_enable_pulse 60AE  
                         __ptext10 5A56                           __ptext11 3F1E  
                         __ptext20 493C                           __ptext12 1444  
                         __ptext21 5F68                           __ptext13 30C2  
                         __ptext30 4F22                           __ptext22 57CA  
                         __ptext14 6032                           __ptext31 4AD0  
                         __ptext23 5428                           __ptext15 3994  
                         __ptext40 5ABA                           __ptext32 45CC  
                         __ptext24 5058                           __ptext16 4DBE  
                         __ptext41 5B1E                           __ptext33 5D44  
                         __ptext25 5C4A                           __ptext17 5672  
                         __ptext50 617E                           __ptext42 5B82  
                         __ptext34 54EE                           __ptext26 4192  
                         __ptext18 5358                           __ptext51 5FCE  
                         __ptext43 5DD2                           __ptext35 5986  
                         __ptext27 5E14                           __ptext19 4796  
                         __ptext60 6088                           __ptext52 6000  
                         __ptext44 6152                           __ptext36 5904  
                         __ptext28 5172                           __ptext53 526A  
                         __ptext45 6168                           __ptext37 6060  
                         __ptext29 5F9C                           __ptext54 5E50  
                         __ptext46 5BE6                           __ptext38 60F0  
                         __ptext63 24F0                           __ptext55 60AE  
                         __ptext47 5F32                           __ptext39 5CAA  
                         __ptext64 60D0                           __ptext56 5E8A  
                         __ptext48 586E                           __ptext65 2B94  
                         __ptext57 5EC4                           __ptext49 4C50  
                         __ptext66 6124                           __ptext58 55B2  
                         __ptext59 1D50                       _RXF2SIDLbits 000F09  
                         __powers_ FD2B                       _RXF3SIDLbits 000F0D  
                 __size_of_sprintf 090C                       _RXF4SIDLbits 000F11  
                     _RXF5SIDLbits 000F15           CANsendMessage@dataLength 0078  
                    __size_of_main 091A                      __size_of_itoa 004C  
                    __size_of_utoa 00C4                  ?i2_CANsendMessage 003A  
             CANreceiveMessage@msg 003A              LCD_shift_cursor@shift 007F  
              i2_CANisTxReady$3255 003A                       _TXB0SIDLbits 000F42  
                Joystick_Polling@i 0072                 ??i2_CANsendMessage 0042  
                     _TXB1SIDLbits 000F32           __end_of_Joystick_Polling 5E14  
                     _TXB2SIDLbits 000F22          __size_of_CANOperationMode 0018  
                    ?_CANisRxReady 0029                      ?_CANisTxReady 0029  
         __end_of_LCD_write_string 6088                        _RXB0DLCbits 000F65  
            ___flmul@f3_as_product 008A                        _RXB1DLCbits 000F55  
                     _RXM0SIDLbits 000F19                        _RXB0CONbits 000F60  
                       _LCD_cursor 5FCE                        _RXB1CONbits 000F50  
                _CANreceiveMessage 2B94                       _RXM1SIDLbits 000F1D  
                       _INTCONbits 000FF2                       _set_steering 0011  
                 ??_CANsendMessage 007A                 ?_CANreceiveMessage 003A  
                         itoa@base 0086                           isdigit@c 0074  
                      _low_battery 0258                           scale@scl 0098  
         CANsendMessage@identifier 0072                       _time_counter 0005  
                         intlevel1 0000                           intlevel2 0000  
                        sprintf@ap 0142                   __tdiv_to_l_@exp1 0082  
                 __tdiv_to_l_@cntr 0081                          sprintf@sp 0136  
                 CANSetFilter@tamp 007C                   __tdiv_to_l_@quot 007D  
                 CANSetFilter@type 0076                ??_CANreceiveMessage 003C  
                 ___lwmod@dividend 0072                   ___lldiv@dividend 0072  
                      _TXB0DLCbits 000F45                        _right_speed 000D  
                      _TXB1DLCbits 000F35                        _TXB0CONbits 000F40  
                      _TXB2DLCbits 000F25                        _TXB1CONbits 000F30  
                      _TXB2CONbits 000F20                    _display_refresh 0257  
                 ??i2_CANisTxReady 003A               CANOperationMode@mode 0072  
                   ??_CANisRxReady 003A                        ?_CANSetMask 0072  
                   ??_CANisTxReady 0072                       ?__tdiv_to_l_ 0072  
        __end_of_CANreceiveMessage 30C2                           utoa@base 007D  
                         sprintf@c 0156                           sprintf@f 0138  
                 ___lldiv@quotient 007A                    ___lwmod@divisor 0074  
  LCD_shift_cursor@number_of_shift 007E                    ___lwmod@counter 0076  
               _PWR_Button_Polling 613C                      _collision_msg 0256  
                     ___fladd@exp1 00A8                       ___fladd@exp2 00A7  
                     ___fladd@sign 00A6              __end_of_CANInitialize 45CC  
              ?_PWR_Button_Polling 0029                       _power_switch 025B  
