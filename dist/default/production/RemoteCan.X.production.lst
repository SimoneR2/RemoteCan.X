

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Apr 14 12:41:59 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73  0000                     
    74                           	psect	idataBANK0
    75  015E82                     __pidataBANK0:
    76                           	opt stack 0
    77                           
    78                           ;initializer for _delay_quartz_frequency_value
    79  015E82  10                 	db	16
    80                           
    81                           	psect	mediumconst
    82  00FED8                     __pmediumconst:
    83                           	opt stack 0
    84  00FED8  00                 	db	0
    85  00FED9                     __npowers_:
    86                           	opt stack 0
    87  00FED9  0000               	dw	0
    88  00FEDB  3F80               	dw	16256
    89  00FEDD  CCCD               	dw	52429
    90  00FEDF  3DCC               	dw	15820
    91  00FEE1  D70A               	dw	55050
    92  00FEE3  3C23               	dw	15395
    93  00FEE5  126F               	dw	4719
    94  00FEE7  3A83               	dw	14979
    95  00FEE9  B717               	dw	46871
    96  00FEEB  38D1               	dw	14545
    97  00FEED  C5AC               	dw	50604
    98  00FEEF  3727               	dw	14119
    99  00FEF1  37BD               	dw	14269
   100  00FEF3  3586               	dw	13702
   101  00FEF5  BF95               	dw	49045
   102  00FEF7  33D6               	dw	13270
   103  00FEF9  CC77               	dw	52343
   104  00FEFB  322B               	dw	12843
   105  00FEFD  705F               	dw	28767
   106  00FEFF  3089               	dw	12425
   107  00FF01  E6FF               	dw	59135
   108  00FF03  2EDB               	dw	11995
   109  00FF05  E508               	dw	58632
   110  00FF07  1E3C               	dw	7740
   111  00FF09  4260               	dw	16992
   112  00FF0B  0DA2               	dw	3490
   113  00FF0D                     __end_of__npowers_:
   114                           	opt stack 0
   115  00FF0D                     __powers_:
   116                           	opt stack 0
   117  00FF0D  0000               	dw	0
   118  00FF0F  3F80               	dw	16256
   119  00FF11  0000               	dw	0
   120  00FF13  4120               	dw	16672
   121  00FF15  0000               	dw	0
   122  00FF17  42C8               	dw	17096
   123  00FF19  0000               	dw	0
   124  00FF1B  447A               	dw	17530
   125  00FF1D  4000               	dw	16384
   126  00FF1F  461C               	dw	17948
   127  00FF21  5000               	dw	20480
   128  00FF23  47C3               	dw	18371
   129  00FF25  2400               	dw	9216
   130  00FF27  4974               	dw	18804
   131  00FF29  9680               	dw	38528
   132  00FF2B  4B18               	dw	19224
   133  00FF2D  BC20               	dw	48160
   134  00FF2F  4CBE               	dw	19646
   135  00FF31  6B28               	dw	27432
   136  00FF33  4E6E               	dw	20078
   137  00FF35  02F9               	dw	761
   138  00FF37  5015               	dw	20501
   139  00FF39  78EC               	dw	30956
   140  00FF3B  60AD               	dw	24749
   141  00FF3D  F2CA               	dw	62154
   142  00FF3F  7149               	dw	29001
   143  00FF41                     __end_of__powers_:
   144                           	opt stack 0
   145  00FF41                     _dpowers:
   146                           	opt stack 0
   147  00FF41  0001               	dw	1
   148  00FF43  0000               	dw	0
   149  00FF45  000A               	dw	10
   150  00FF47  0000               	dw	0
   151  00FF49  0064               	dw	100
   152  00FF4B  0000               	dw	0
   153  00FF4D  03E8               	dw	1000
   154  00FF4F  0000               	dw	0
   155  00FF51  2710               	dw	10000
   156  00FF53  0000               	dw	0
   157  00FF55  86A0               	dw	34464
   158  00FF57  0001               	dw	1
   159  00FF59  4240               	dw	16960
   160  00FF5B  000F               	dw	15
   161  00FF5D  9680               	dw	38528
   162  00FF5F  0098               	dw	152
   163  00FF61  E100               	dw	57600
   164  00FF63  05F5               	dw	1525
   165  00FF65  CA00               	dw	51712
   166  00FF67  3B9A               	dw	15258
   167  00FF69                     __end_of_dpowers:
   168                           	opt stack 0
   169  0000                     _RXB1CON	set	3920
   170  0000                     _RXB1CONbits	set	3920
   171  0000                     _RXB1D0	set	3926
   172  0000                     _RXB1D1	set	3927
   173  0000                     _RXB1D2	set	3928
   174  0000                     _RXB1D3	set	3929
   175  0000                     _RXB1D4	set	3930
   176  0000                     _RXB1D5	set	3931
   177  0000                     _RXB1D6	set	3932
   178  0000                     _RXB1D7	set	3933
   179  0000                     _RXB1DLC	set	3925
   180  0000                     _RXB1DLCbits	set	3925
   181  0000                     _RXB1EIDH	set	3923
   182  0000                     _RXB1EIDL	set	3924
   183  0000                     _RXB1SIDH	set	3921
   184  0000                     _RXB1SIDL	set	3922
   185  0000                     _RXB1SIDLbits	set	3922
   186  0000                     _RXF0EIDH	set	3842
   187  0000                     _RXF0EIDL	set	3843
   188  0000                     _RXF0SIDH	set	3840
   189  0000                     _RXF0SIDL	set	3841
   190  0000                     _RXF0SIDLbits	set	3841
   191  0000                     _RXF1EIDH	set	3846
   192  0000                     _RXF1EIDL	set	3847
   193  0000                     _RXF1SIDH	set	3844
   194  0000                     _RXF1SIDL	set	3845
   195  0000                     _RXF1SIDLbits	set	3845
   196  0000                     _RXF2EIDH	set	3850
   197  0000                     _RXF2EIDL	set	3851
   198  0000                     _RXF2SIDH	set	3848
   199  0000                     _RXF2SIDL	set	3849
   200  0000                     _RXF2SIDLbits	set	3849
   201  0000                     _RXF3EIDH	set	3854
   202  0000                     _RXF3EIDL	set	3855
   203  0000                     _RXF3SIDH	set	3852
   204  0000                     _RXF3SIDL	set	3853
   205  0000                     _RXF3SIDLbits	set	3853
   206  0000                     _RXF4EIDH	set	3858
   207  0000                     _RXF4EIDL	set	3859
   208  0000                     _RXF4SIDH	set	3856
   209  0000                     _RXF4SIDL	set	3857
   210  0000                     _RXF4SIDLbits	set	3857
   211  0000                     _RXF5EIDH	set	3862
   212  0000                     _RXF5EIDL	set	3863
   213  0000                     _RXF5SIDH	set	3860
   214  0000                     _RXF5SIDL	set	3861
   215  0000                     _RXF5SIDLbits	set	3861
   216  0000                     _RXM0EIDH	set	3866
   217  0000                     _RXM0EIDL	set	3867
   218  0000                     _RXM0SIDH	set	3864
   219  0000                     _RXM0SIDL	set	3865
   220  0000                     _RXM0SIDLbits	set	3865
   221  0000                     _RXM1EIDH	set	3870
   222  0000                     _RXM1EIDL	set	3871
   223  0000                     _RXM1SIDH	set	3868
   224  0000                     _RXM1SIDL	set	3869
   225  0000                     _RXM1SIDLbits	set	3869
   226  0000                     _TXB0CONbits	set	3904
   227  0000                     _TXB0D0	set	3910
   228  0000                     _TXB0D1	set	3911
   229  0000                     _TXB0D2	set	3912
   230  0000                     _TXB0D3	set	3913
   231  0000                     _TXB0D4	set	3914
   232  0000                     _TXB0D5	set	3915
   233  0000                     _TXB0D6	set	3916
   234  0000                     _TXB0D7	set	3917
   235  0000                     _TXB0DLC	set	3909
   236  0000                     _TXB0DLCbits	set	3909
   237  0000                     _TXB0EIDH	set	3907
   238  0000                     _TXB0EIDL	set	3908
   239  0000                     _TXB0SIDH	set	3905
   240  0000                     _TXB0SIDL	set	3906
   241  0000                     _TXB0SIDLbits	set	3906
   242  0000                     _TXB1CONbits	set	3888
   243  0000                     _TXB1D0	set	3894
   244  0000                     _TXB1D1	set	3895
   245  0000                     _TXB1D2	set	3896
   246  0000                     _TXB1D3	set	3897
   247  0000                     _TXB1D4	set	3898
   248  0000                     _TXB1D5	set	3899
   249  0000                     _TXB1D6	set	3900
   250  0000                     _TXB1D7	set	3901
   251  0000                     _TXB1DLC	set	3893
   252  0000                     _TXB1DLCbits	set	3893
   253  0000                     _TXB1EIDH	set	3891
   254  0000                     _TXB1EIDL	set	3892
   255  0000                     _TXB1SIDH	set	3889
   256  0000                     _TXB1SIDL	set	3890
   257  0000                     _TXB1SIDLbits	set	3890
   258  0000                     _TXB2CONbits	set	3872
   259  0000                     _TXB2D0	set	3878
   260  0000                     _TXB2D1	set	3879
   261  0000                     _TXB2D2	set	3880
   262  0000                     _TXB2D3	set	3881
   263  0000                     _TXB2D4	set	3882
   264  0000                     _TXB2D5	set	3883
   265  0000                     _TXB2D6	set	3884
   266  0000                     _TXB2D7	set	3885
   267  0000                     _TXB2DLC	set	3877
   268  0000                     _TXB2DLCbits	set	3877
   269  0000                     _TXB2EIDH	set	3875
   270  0000                     _TXB2EIDL	set	3876
   271  0000                     _TXB2SIDH	set	3873
   272  0000                     _TXB2SIDL	set	3874
   273  0000                     _TXB2SIDLbits	set	3874
   274  0000                     _ADCON0bits	set	4034
   275  0000                     _ADCON1	set	4033
   276  0000                     _ADCON2bits	set	4032
   277  0000                     _ADRESH	set	4036
   278  0000                     _BRGCON1	set	3952
   279  0000                     _BRGCON2	set	3953
   280  0000                     _BRGCON2bits	set	3953
   281  0000                     _BRGCON3	set	3954
   282  0000                     _BRGCON3bits	set	3954
   283  0000                     _CANCON	set	3951
   284  0000                     _CANCONbits	set	3951
   285  0000                     _CANSTAT	set	3950
   286  0000                     _COMSTATbits	set	3956
   287  0000                     _INTCONbits	set	4082
   288  0000                     _IPR2bits	set	4002
   289  0000                     _IPR3bits	set	4005
   290  0000                     _LATA	set	3977
   291  0000                     _LATB	set	3978
   292  0000                     _LATC	set	3979
   293  0000                     _LATCbits	set	3979
   294  0000                     _LATD	set	3980
   295  0000                     _LATDbits	set	3980
   296  0000                     _LATE	set	3981
   297  0000                     _LATEbits	set	3981
   298  0000                     _PIE2bits	set	4000
   299  0000                     _PIE3bits	set	4003
   300  0000                     _PIR2bits	set	4001
   301  0000                     _PIR3bits	set	4004
   302  0000                     _PORTAbits	set	3968
   303  0000                     _PORTBbits	set	3969
   304  0000                     _PORTDbits	set	3971
   305  0000                     _RCONbits	set	4048
   306  0000                     _RXB0CON	set	3936
   307  0000                     _RXB0CONbits	set	3936
   308  0000                     _RXB0D0	set	3942
   309  0000                     _RXB0D1	set	3943
   310  0000                     _RXB0D2	set	3944
   311  0000                     _RXB0D3	set	3945
   312  0000                     _RXB0D4	set	3946
   313  0000                     _RXB0D5	set	3947
   314  0000                     _RXB0D6	set	3948
   315  0000                     _RXB0D7	set	3949
   316  0000                     _RXB0DLC	set	3941
   317  0000                     _RXB0DLCbits	set	3941
   318  0000                     _RXB0EIDH	set	3939
   319  0000                     _RXB0EIDL	set	3940
   320  0000                     _RXB0SIDH	set	3937
   321  0000                     _RXB0SIDL	set	3938
   322  0000                     _RXB0SIDLbits	set	3938
   323  0000                     _RXERRCNT	set	3957
   324  0000                     _T3CON	set	4017
   325  0000                     _TMR3H	set	4019
   326  0000                     _TMR3L	set	4018
   327  0000                     _TRISA	set	3986
   328  0000                     _TRISB	set	3987
   329  0000                     _TRISC	set	3988
   330  0000                     _TRISD	set	3989
   331  0000                     _TRISE	set	3990
   332  0000                     _TXERRCNT	set	3958
   333  00FF69                     STR_3:
   334  00FF69  54                 	db	84	;'T'
   335  00FF6A  75                 	db	117	;'u'
   336  00FF6B  72                 	db	114	;'r'
   337  00FF6C  6E                 	db	110	;'n'
   338  00FF6D  20                 	db	32
   339  00FF6E  74                 	db	116	;'t'
   340  00FF6F  68                 	db	104	;'h'
   341  00FF70  65                 	db	101	;'e'
   342  00FF71  20                 	db	32
   343  00FF72  73                 	db	115	;'s'
   344  00FF73  77                 	db	119	;'w'
   345  00FF74  69                 	db	105	;'i'
   346  00FF75  74                 	db	116	;'t'
   347  00FF76  63                 	db	99	;'c'
   348  00FF77  68                 	db	104	;'h'
   349  00FF78  20                 	db	32
   350  00FF79  4F                 	db	79	;'O'
   351  00FF7A  4E                 	db	78	;'N'
   352  00FF7B  21                 	db	33
   353  00FF7C  20                 	db	32
   354  00FF7D  00                 	db	0
   355  00FF7E                     STR_2:
   356  00FF7E  3D                 	db	61	;'='
   357  00FF7F  3D                 	db	61	;'='
   358  00FF80  3E                 	db	62	;'>'
   359  00FF81  20                 	db	32
   360  00FF82  56                 	db	86	;'V'
   361  00FF83  45                 	db	69	;'E'
   362  00FF84  48                 	db	72	;'H'
   363  00FF85  49                 	db	73	;'I'
   364  00FF86  43                 	db	67	;'C'
   365  00FF87  4C                 	db	76	;'L'
   366  00FF88  45                 	db	69	;'E'
   367  00FF89  20                 	db	32
   368  00FF8A  20                 	db	32
   369  00FF8B  4F                 	db	79	;'O'
   370  00FF8C  46                 	db	70	;'F'
   371  00FF8D  46                 	db	70	;'F'
   372  00FF8E  20                 	db	32
   373  00FF8F  3C                 	db	60	;'<'
   374  00FF90  3D                 	db	61	;'='
   375  00FF91  3D                 	db	61	;'='
   376  00FF92  00                 	db	0
   377  00FF93                     STR_6:
   378  00FF93  3D                 	db	61	;'='
   379  00FF94  3D                 	db	61	;'='
   380  00FF95  3D                 	db	61	;'='
   381  00FF96  20                 	db	32
   382  00FF97  56                 	db	86	;'V'
   383  00FF98  45                 	db	69	;'E'
   384  00FF99  48                 	db	72	;'H'
   385  00FF9A  49                 	db	73	;'I'
   386  00FF9B  43                 	db	67	;'C'
   387  00FF9C  4C                 	db	76	;'L'
   388  00FF9D  45                 	db	69	;'E'
   389  00FF9E  20                 	db	32
   390  00FF9F  44                 	db	68	;'D'
   391  00FFA0  41                 	db	65	;'A'
   392  00FFA1  54                 	db	84	;'T'
   393  00FFA2  41                 	db	65	;'A'
   394  00FFA3  20                 	db	32
   395  00FFA4  3D                 	db	61	;'='
   396  00FFA5  3D                 	db	61	;'='
   397  00FFA6  3D                 	db	61	;'='
   398  00FFA7  00                 	db	0
   399  00FFA8                     STR_1:
   400  00FFA8  3D                 	db	61	;'='
   401  00FFA9  3D                 	db	61	;'='
   402  00FFAA  3D                 	db	61	;'='
   403  00FFAB  3D                 	db	61	;'='
   404  00FFAC  3D                 	db	61	;'='
   405  00FFAD  3D                 	db	61	;'='
   406  00FFAE  3D                 	db	61	;'='
   407  00FFAF  3D                 	db	61	;'='
   408  00FFB0  3D                 	db	61	;'='
   409  00FFB1  3D                 	db	61	;'='
   410  00FFB2  3D                 	db	61	;'='
   411  00FFB3  3D                 	db	61	;'='
   412  00FFB4  3D                 	db	61	;'='
   413  00FFB5  3D                 	db	61	;'='
   414  00FFB6  3D                 	db	61	;'='
   415  00FFB7  3D                 	db	61	;'='
   416  00FFB8  3D                 	db	61	;'='
   417  00FFB9  3D                 	db	61	;'='
   418  00FFBA  3D                 	db	61	;'='
   419  00FFBB  3D                 	db	61	;'='
   420  00FFBC  00                 	db	0
   421  00FFBD                     STR_8:
   422  00FFBD  53                 	db	83	;'S'
   423  00FFBE  70                 	db	112	;'p'
   424  00FFBF  65                 	db	101	;'e'
   425  00FFC0  65                 	db	101	;'e'
   426  00FFC1  64                 	db	100	;'d'
   427  00FFC2  3A                 	db	58	;':'
   428  00FFC3  20                 	db	32
   429  00FFC4  78                 	db	120	;'x'
   430  00FFC5  2E                 	db	46
   431  00FFC6  78                 	db	120	;'x'
   432  00FFC7  78                 	db	120	;'x'
   433  00FFC8  20                 	db	32
   434  00FFC9  4B                 	db	75	;'K'
   435  00FFCA  6D                 	db	109	;'m'
   436  00FFCB  2F                 	db	47
   437  00FFCC  68                 	db	104	;'h'
   438  00FFCD  00                 	db	0
   439  00FFCE                     STR_7:
   440  00FFCE  44                 	db	68	;'D'
   441  00FFCF  69                 	db	105	;'i'
   442  00FFD0  72                 	db	114	;'r'
   443  00FFD1  65                 	db	101	;'e'
   444  00FFD2  63                 	db	99	;'c'
   445  00FFD3  74                 	db	116	;'t'
   446  00FFD4  69                 	db	105	;'i'
   447  00FFD5  6F                 	db	111	;'o'
   448  00FFD6  6E                 	db	110	;'n'
   449  00FFD7  3A                 	db	58	;':'
   450  00FFD8  20                 	db	32
   451  00FFD9  00                 	db	0
   452  00FFDA                     STR_15:
   453  00FFDA  57                 	db	87	;'W'
   454  00FFDB  61                 	db	97	;'a'
   455  00FFDC  69                 	db	105	;'i'
   456  00FFDD  74                 	db	116	;'t'
   457  00FFDE  2E                 	db	46
   458  00FFDF  2E                 	db	46
   459  00FFE0  2E                 	db	46
   460  00FFE1  00                 	db	0
   461  00FFE2                     STR_13:
   462  00FFE2  20                 	db	32
   463  00FFE3  53                 	db	83	;'S'
   464  00FFE4  52                 	db	82	;'R'
   465  00FFE5  43                 	db	67	;'C'
   466  00FFE6  48                 	db	72	;'H'
   467  00FFE7  00                 	db	0
   468  00FFE8                     STR_14:
   469  00FFE8  20                 	db	32
   470  00FFE9  50                 	db	80	;'P'
   471  00FFEA  41                 	db	65	;'A'
   472  00FFEB  52                 	db	82	;'R'
   473  00FFEC  4B                 	db	75	;'K'
   474  00FFED  00                 	db	0
   475  00FFEE                     STR_11:
   476  00FFEE  42                 	db	66	;'B'
   477  00FFEF  4B                 	db	75	;'K'
   478  00FFF0  57                 	db	87	;'W'
   479  00FFF1  44                 	db	68	;'D'
   480  00FFF2  00                 	db	0
   481  00FFF3                     STR_5:
   482  00FFF3  25                 	db	37
   483  00FFF4  2E                 	db	46
   484  00FFF5  33                 	db	51	;'3'
   485  00FFF6  66                 	db	102	;'f'
   486  00FFF7  00                 	db	0
   487  00FFF8                     STR_10:
   488  00FFF8  46                 	db	70	;'F'
   489  00FFF9  57                 	db	87	;'W'
   490  00FFFA  44                 	db	68	;'D'
   491  00FFFB  00                 	db	0
   492  00FFFC                     STR_12:
   493  00FFFC  50                 	db	80	;'P'
   494  00FFFD  00                 	db	0
   495  0000                     
   496                           ; #config settings
   497  00FFFE  00                 	db	0	; dummy byte at the end
   498  0000                     
   499                           	psect	cinit
   500  015B6A                     __pcinit:
   501                           	opt stack 0
   502  015B6A                     start_initialization:
   503                           	opt stack 0
   504  015B6A                     __initialization:
   505                           	opt stack 0
   506                           
   507                           ; Clear objects allocated to BANK1 (33 bytes)
   508  015B6A  EE01  F000         	lfsr	0,__pbssBANK1
   509  015B6E  0E21               	movlw	33
   510  015B70                     clear_0:
   511  015B70  6AEE               	clrf	postinc0,c
   512  015B72  06E8               	decf	wreg,f,c
   513  015B74  E1FD               	bnz	clear_0
   514                           
   515                           ; Clear objects allocated to BANK0 (31 bytes)
   516  015B76  EE00  F0CB         	lfsr	0,__pbssBANK0
   517  015B7A  0E1F               	movlw	31
   518  015B7C                     clear_1:
   519  015B7C  6AEE               	clrf	postinc0,c
   520  015B7E  06E8               	decf	wreg,f,c
   521  015B80  E1FD               	bnz	clear_1
   522                           
   523                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   524  015B82  6A4D               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   525  015B84  6A4C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   526                           
   527                           ; Clear objects allocated to COMRAM (42 bytes)
   528  015B86  EE00  F001         	lfsr	0,__pbssCOMRAM
   529  015B8A  0E2A               	movlw	42
   530  015B8C                     clear_2:
   531  015B8C  6AEE               	clrf	postinc0,c
   532  015B8E  06E8               	decf	wreg,f,c
   533  015B90  E1FD               	bnz	clear_2
   534                           
   535                           ; Initialize objects allocated to BANK0 (1 bytes)
   536                           ; load TBLPTR registers with __pidataBANK0
   537  015B92  0E82               	movlw	low __pidataBANK0
   538  015B94  6EF6               	movwf	tblptrl,c
   539  015B96  0E5E               	movlw	high __pidataBANK0
   540  015B98  6EF7               	movwf	tblptrh,c
   541  015B9A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   542  015B9C  6EF8               	movwf	tblptru,c
   543  015B9E  0009               	tblrd		*+	;fetch initializer
   544  015BA0  CFF5 F0EA          	movff	tablat,__pdataBANK0
   545  015BA4                     end_of_initialization:
   546                           	opt stack 0
   547  015BA4                     __end_of__initialization:
   548                           	opt stack 0
   549  015BA4  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   550  015BA6  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   551  015BA8  0100               	movlb	0
   552  015BAA  EF93  F08D         	goto	_main	;jump to C main() function
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           tblptrl	equ	0xFF6
   556                           tablat	equ	0xFF5
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           
   560                           	psect	bitbssCOMRAM
   561  000260                     __pbitbssCOMRAM:
   562                           	opt stack 0
   563  000260                     _AbsFlag:
   564                           	opt stack 0
   565  000260                     	ds	1
   566  000261                     _F1_switch:
   567                           	opt stack 0
   568  000261                     	ds	1
   569  000262                     _F2_switch:
   570                           	opt stack 0
   571  000262                     	ds	1
   572  000263                     _MotoreFlag:
   573                           	opt stack 0
   574  000263                     	ds	1
   575  000264                     _RTR_Flag:
   576                           	opt stack 0
   577  000264                     	ds	1
   578  000265                     _SterzoFlag:
   579                           	opt stack 0
   580  000265                     	ds	1
   581  000266                     _display_refresh:
   582                           	opt stack 0
   583  000266                     	ds	1
   584  000267                     _newMessageCan:
   585                           	opt stack 0
   586  000267                     	ds	1
   587  000268                     _power_switch:
   588                           	opt stack 0
   589  000268                     	ds	1
   590  000269                     _wait_low_1:
   591                           	opt stack 0
   592  000269                     	ds	1
   593  00026A                     _wait_low_2:
   594                           	opt stack 0
   595  00026A                     	ds	1
   596  00026B                     _wait_low_3:
   597                           	opt stack 0
   598  00026B                     	ds	1
   599  00026C                     _x:
   600                           	opt stack 0
   601  00026C                     	ds	1
   602  00026D                     _y:
   603                           	opt stack 0
   604  00026D                     	ds	1
   605  00026E                     _z:
   606                           	opt stack 0
   607  00026E                     	ds	1
   608                           tblptru	equ	0xFF8
   609                           tblptrh	equ	0xFF7
   610                           tblptrl	equ	0xFF6
   611                           tablat	equ	0xFF5
   612                           postinc0	equ	0xFEE
   613                           wreg	equ	0xFE8
   614                           
   615                           	psect	bssCOMRAM
   616  000001                     __pbssCOMRAM:
   617                           	opt stack 0
   618  000001                     _data_speed_rx:
   619                           	opt stack 0
   620  000001                     	ds	7
   621  000008                     _actual_speed_kmh:
   622                           	opt stack 0
   623  000008                     	ds	4
   624  00000C                     _id:
   625                           	opt stack 0
   626  00000C                     	ds	4
   627  000010                     _pr_time_3:
   628                           	opt stack 0
   629  000010                     	ds	4
   630  000014                     _pr_time_4:
   631                           	opt stack 0
   632  000014                     	ds	4
   633  000018                     _pr_time_5:
   634                           	opt stack 0
   635  000018                     	ds	4
   636  00001C                     _pr_time_6:
   637                           	opt stack 0
   638  00001C                     	ds	4
   639  000020                     _time_counter:
   640                           	opt stack 0
   641  000020                     	ds	4
   642  000024                     _left_speed:
   643                           	opt stack 0
   644  000024                     	ds	2
   645  000026                     _right_speed:
   646                           	opt stack 0
   647  000026                     	ds	2
   648  000028                     _battery:
   649                           	opt stack 0
   650  000028                     	ds	1
   651  000029                     _set_steering:
   652                           	opt stack 0
   653  000029                     	ds	1
   654  00002A                     _data:
   655                           	opt stack 0
   656  00002A                     	ds	1
   657                           tblptru	equ	0xFF8
   658                           tblptrh	equ	0xFF7
   659                           tblptrl	equ	0xFF6
   660                           tablat	equ	0xFF5
   661                           postinc0	equ	0xFEE
   662                           wreg	equ	0xFE8
   663                           
   664                           	psect	bssBANK0
   665  0000CB                     __pbssBANK0:
   666                           	opt stack 0
   667  0000CB                     _JoystickConstants:
   668                           	opt stack 0
   669  0000CB                     	ds	8
   670  0000D3                     _pr_time_1:
   671                           	opt stack 0
   672  0000D3                     	ds	4
   673  0000D7                     _pr_time_2:
   674                           	opt stack 0
   675  0000D7                     	ds	4
   676  0000DB                     _JoystickValues:
   677                           	opt stack 0
   678  0000DB                     	ds	2
   679  0000DD                     _actual_speed:
   680                           	opt stack 0
   681  0000DD                     	ds	2
   682  0000DF                     _clock_counter_reference:
   683                           	opt stack 0
   684  0000DF                     	ds	2
   685  0000E1                     _set_speed:
   686                           	opt stack 0
   687  0000E1                     	ds	2
   688  0000E3                     _dir:
   689                           	opt stack 0
   690  0000E3                     	ds	1
   691  0000E4                     _park_assist_state:
   692                           	opt stack 0
   693  0000E4                     	ds	1
   694  0000E5                     _parking_state:
   695                           	opt stack 0
   696  0000E5                     	ds	1
   697  0000E6                     _switch_position:
   698                           	opt stack 0
   699  0000E6                     	ds	1
   700  0000E7                     _data_brake:
   701                           	opt stack 0
   702  0000E7                     	ds	1
   703  0000E8                     _data_speed:
   704                           	opt stack 0
   705  0000E8                     	ds	1
   706  0000E9                     _data_steering:
   707                           	opt stack 0
   708  0000E9                     	ds	1
   709                           tblptru	equ	0xFF8
   710                           tblptrh	equ	0xFF7
   711                           tblptrl	equ	0xFF6
   712                           tablat	equ	0xFF5
   713                           postinc0	equ	0xFEE
   714                           wreg	equ	0xFE8
   715                           
   716                           	psect	dataBANK0
   717  0000EA                     __pdataBANK0:
   718                           	opt stack 0
   719  0000EA                     _delay_quartz_frequency_value:
   720                           	opt stack 0
   721  0000EA                     	ds	1
   722                           tblptru	equ	0xFF8
   723                           tblptrh	equ	0xFF7
   724                           tblptrl	equ	0xFF6
   725                           tablat	equ	0xFF5
   726                           postinc0	equ	0xFEE
   727                           wreg	equ	0xFE8
   728                           
   729                           	psect	bssBANK1
   730  000100                     __pbssBANK1:
   731                           	opt stack 0
   732  000100                     LCD_write_integer@F17272:
   733                           	opt stack 0
   734  000100                     	ds	6
   735  000106                     _msg:
   736                           	opt stack 0
   737  000106                     	ds	15
   738  000115                     _str:
   739                           	opt stack 0
   740  000115                     	ds	12
   741                           tblptru	equ	0xFF8
   742                           tblptrh	equ	0xFF7
   743                           tblptrl	equ	0xFF6
   744                           tablat	equ	0xFF5
   745                           postinc0	equ	0xFEE
   746                           wreg	equ	0xFE8
   747                           
   748                           	psect	cstackBANK1
   749  000121                     __pcstackBANK1:
   750                           	opt stack 0
   751  000121                     _sprintf$4217:
   752                           	opt stack 0
   753                           
   754                           ; 4 bytes @ 0x0
   755  000121                     	ds	4
   756  000125                     sprintf@ap:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x4
   760  000125                     	ds	2
   761  000127                     sprintf@flag:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x6
   765  000127                     	ds	2
   766  000129                     sprintf@val:
   767                           	opt stack 0
   768                           
   769                           ; 4 bytes @ 0x8
   770  000129                     	ds	4
   771  00012D                     sprintf@exp:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0xC
   775  00012D                     	ds	2
   776  00012F                     sprintf@tmpval:
   777                           	opt stack 0
   778                           
   779                           ; 4 bytes @ 0xE
   780  00012F                     	ds	4
   781  000133                     sprintf@prec:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x12
   785  000133                     	ds	2
   786  000135                     sprintf@fval:
   787                           	opt stack 0
   788                           
   789                           ; 4 bytes @ 0x14
   790  000135                     	ds	4
   791  000139                     sprintf@c:
   792                           	opt stack 0
   793                           
   794                           ; 1 bytes @ 0x18
   795  000139                     	ds	1
   796  00013A                     ??_main:
   797                           
   798                           ; 0 bytes @ 0x19
   799  00013A                     	ds	8
   800                           tblptru	equ	0xFF8
   801                           tblptrh	equ	0xFF7
   802                           tblptrl	equ	0xFF6
   803                           tablat	equ	0xFF5
   804                           postinc0	equ	0xFEE
   805                           wreg	equ	0xFE8
   806                           
   807                           	psect	cstackBANK0
   808  000060                     __pcstackBANK0:
   809                           	opt stack 0
   810  000060                     ??_ISR_alta:
   811                           
   812                           ; 0 bytes @ 0x0
   813  000060                     	ds	14
   814  00006E                     ISR_alta@i:
   815                           	opt stack 0
   816                           
   817                           ; 1 bytes @ 0xE
   818  00006E                     	ds	1
   819  00006F                     ??_Joystick_Polling:
   820  00006F                     ??_CAN_interpreter:
   821  00006F                     ??_isdigit:
   822  00006F                     ?___wmul:
   823                           	opt stack 0
   824  00006F                     ?___awmod:
   825                           	opt stack 0
   826  00006F                     ?__tdiv_to_l_:
   827                           	opt stack 0
   828  00006F                     ?__div_to_l_:
   829                           	opt stack 0
   830  00006F                     ?___lldiv:
   831                           	opt stack 0
   832  00006F                     ?___llmod:
   833                           	opt stack 0
   834  00006F                     ?___xxtofl:
   835                           	opt stack 0
   836  00006F                     CANOperationMode@mode:
   837                           	opt stack 0
   838  00006F                     _CANisTxReady$3235:
   839                           	opt stack 0
   840  00006F                     delay_set_quartz@frequency:
   841                           	opt stack 0
   842  00006F                     ___wmul@multiplier:
   843                           	opt stack 0
   844  00006F                     ___awmod@dividend:
   845                           	opt stack 0
   846  00006F                     CANsendMessage@identifier:
   847                           	opt stack 0
   848  00006F                     CANSetMask@mask:
   849                           	opt stack 0
   850  00006F                     CANSetFilter@filter:
   851                           	opt stack 0
   852  00006F                     __div_to_l_@f1:
   853                           	opt stack 0
   854  00006F                     ___flge@ff1:
   855                           	opt stack 0
   856  00006F                     __tdiv_to_l_@f1:
   857                           	opt stack 0
   858  00006F                     ___lldiv@dividend:
   859                           	opt stack 0
   860  00006F                     ___llmod@dividend:
   861                           	opt stack 0
   862  00006F                     ___xxtofl@val:
   863                           	opt stack 0
   864                           
   865                           ; 4 bytes @ 0xF
   866  00006F                     	ds	1
   867  000070                     Joystick_Polling@i:
   868                           	opt stack 0
   869  000070                     _isdigit$3799:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x10
   873  000070                     	ds	1
   874  000071                     isdigit@c:
   875                           	opt stack 0
   876  000071                     ___wmul@multiplicand:
   877                           	opt stack 0
   878  000071                     ___awmod@divisor:
   879                           	opt stack 0
   880                           
   881                           ; 2 bytes @ 0x11
   882  000071                     	ds	2
   883  000073                     ??___xxtofl:
   884  000073                     CANSetMask@type:
   885                           	opt stack 0
   886  000073                     CANSetFilter@type:
   887                           	opt stack 0
   888  000073                     ___awmod@counter:
   889                           	opt stack 0
   890  000073                     CANsendMessage@data:
   891                           	opt stack 0
   892  000073                     ___wmul@product:
   893                           	opt stack 0
   894  000073                     __div_to_l_@f2:
   895                           	opt stack 0
   896  000073                     ___flge@ff2:
   897                           	opt stack 0
   898  000073                     __tdiv_to_l_@f2:
   899                           	opt stack 0
   900  000073                     ___lldiv@divisor:
   901                           	opt stack 0
   902  000073                     ___llmod@divisor:
   903                           	opt stack 0
   904                           
   905                           ; 4 bytes @ 0x13
   906  000073                     	ds	1
   907  000074                     ??_CANSetMask:
   908  000074                     ??_CANSetFilter:
   909  000074                     ___awmod@sign:
   910                           	opt stack 0
   911                           
   912                           ; 1 bytes @ 0x14
   913  000074                     	ds	1
   914  000075                     ?___awdiv:
   915                           	opt stack 0
   916  000075                     CANsendMessage@dataLength:
   917                           	opt stack 0
   918  000075                     delay_ms@value_ms:
   919                           	opt stack 0
   920  000075                     ___awdiv@dividend:
   921                           	opt stack 0
   922                           
   923                           ; 2 bytes @ 0x15
   924  000075                     	ds	1
   925  000076                     CANsendMessage@flags:
   926                           	opt stack 0
   927                           
   928                           ; 1 bytes @ 0x16
   929  000076                     	ds	1
   930  000077                     ??__tdiv_to_l_:
   931  000077                     ??_CANsendMessage:
   932  000077                     ??___flge:
   933  000077                     LCD_send_command@D2:
   934                           	opt stack 0
   935  000077                     ___llmod@counter:
   936                           	opt stack 0
   937  000077                     ___xxtofl@sign:
   938                           	opt stack 0
   939  000077                     ___awdiv@divisor:
   940                           	opt stack 0
   941  000077                     __div_to_l_@quot:
   942                           	opt stack 0
   943  000077                     ___lldiv@quotient:
   944                           	opt stack 0
   945                           
   946                           ; 4 bytes @ 0x17
   947  000077                     	ds	1
   948  000078                     CANSetMask@numBuffer:
   949                           	opt stack 0
   950  000078                     CANSetFilter@numBuffer:
   951                           	opt stack 0
   952  000078                     LCD_send_command@D1:
   953                           	opt stack 0
   954  000078                     ___xxtofl@exp:
   955                           	opt stack 0
   956                           
   957                           ; 1 bytes @ 0x18
   958  000078                     	ds	1
   959  000079                     LCD_send_command@D0:
   960                           	opt stack 0
   961  000079                     ___awdiv@counter:
   962                           	opt stack 0
   963  000079                     CANSetMask@tamp:
   964                           	opt stack 0
   965  000079                     CANSetFilter@tamp:
   966                           	opt stack 0
   967  000079                     ___xxtofl@arg:
   968                           	opt stack 0
   969                           
   970                           ; 4 bytes @ 0x19
   971  000079                     	ds	1
   972  00007A                     LCD_send_command@D3:
   973                           	opt stack 0
   974  00007A                     ___awdiv@sign:
   975                           	opt stack 0
   976  00007A                     __tdiv_to_l_@quot:
   977                           	opt stack 0
   978                           
   979                           ; 4 bytes @ 0x1A
   980  00007A                     	ds	1
   981  00007B                     LCD_shift_cursor@number_of_shift:
   982                           	opt stack 0
   983  00007B                     LCD_goto_line@line:
   984                           	opt stack 0
   985  00007B                     LCD_write_char@D3:
   986                           	opt stack 0
   987  00007B                     LCD_cursor@blinking:
   988                           	opt stack 0
   989  00007B                     __div_to_l_@cntr:
   990                           	opt stack 0
   991  00007B                     ___lldiv@counter:
   992                           	opt stack 0
   993  00007B                     ___awdiv@quotient:
   994                           	opt stack 0
   995  00007B                     CANsendMessage@tamp:
   996                           	opt stack 0
   997                           
   998                           ; 4 bytes @ 0x1B
   999  00007B                     	ds	1
  1000  00007C                     LCD_shift_cursor@shift:
  1001                           	opt stack 0
  1002  00007C                     LCD_write_char@D2:
  1003                           	opt stack 0
  1004  00007C                     LCD_cursor@active:
  1005                           	opt stack 0
  1006  00007C                     __div_to_l_@exp1:
  1007                           	opt stack 0
  1008                           
  1009                           ; 1 bytes @ 0x1C
  1010  00007C                     	ds	1
  1011  00007D                     ?___fldiv:
  1012                           	opt stack 0
  1013  00007D                     ?___flmul:
  1014                           	opt stack 0
  1015  00007D                     CANInitialize@phaseSeg1:
  1016                           	opt stack 0
  1017  00007D                     LCD_shift_cursor@i:
  1018                           	opt stack 0
  1019  00007D                     LCD_write_char@D1:
  1020                           	opt stack 0
  1021  00007D                     LCD_initialize@quartz_frequency:
  1022                           	opt stack 0
  1023  00007D                     ___fldiv@b:
  1024                           	opt stack 0
  1025  00007D                     ___flmul@b:
  1026                           	opt stack 0
  1027                           
  1028                           ; 4 bytes @ 0x1D
  1029  00007D                     	ds	1
  1030  00007E                     CANInitialize@phaseSeg2:
  1031                           	opt stack 0
  1032  00007E                     LCD_goto_xy@y:
  1033                           	opt stack 0
  1034  00007E                     LCD_write_char@D0:
  1035                           	opt stack 0
  1036  00007E                     __tdiv_to_l_@cntr:
  1037                           	opt stack 0
  1038                           
  1039                           ; 1 bytes @ 0x1E
  1040  00007E                     	ds	1
  1041  00007F                     CANInitialize@SJW:
  1042                           	opt stack 0
  1043  00007F                     LCD_goto_xy@x:
  1044                           	opt stack 0
  1045  00007F                     LCD_write_char@value:
  1046                           	opt stack 0
  1047  00007F                     __tdiv_to_l_@exp1:
  1048                           	opt stack 0
  1049                           
  1050                           ; 1 bytes @ 0x1F
  1051  00007F                     	ds	1
  1052  000080                     CANInitialize@BRP:
  1053                           	opt stack 0
  1054  000080                     LCD_write_message@buffer:
  1055                           	opt stack 0
  1056  000080                     LCD_write_string@buffer:
  1057                           	opt stack 0
  1058                           
  1059                           ; 2 bytes @ 0x20
  1060  000080                     	ds	1
  1061  000081                     CANInitialize@flags:
  1062                           	opt stack 0
  1063  000081                     ___fldiv@a:
  1064                           	opt stack 0
  1065  000081                     ___flmul@a:
  1066                           	opt stack 0
  1067                           
  1068                           ; 4 bytes @ 0x21
  1069  000081                     	ds	1
  1070  000082                     ??_CANInitialize:
  1071  000082                     
  1072                           ; 0 bytes @ 0x22
  1073  000082                     	ds	3
  1074  000085                     ??___fldiv:
  1075  000085                     ??___flmul:
  1076                           
  1077                           ; 0 bytes @ 0x25
  1078  000085                     	ds	1
  1079  000086                     CANInitialize@propSeg:
  1080                           	opt stack 0
  1081                           
  1082                           ; 1 bytes @ 0x26
  1083  000086                     	ds	1
  1084  000087                     CANInitialize@FilterConfig1:
  1085                           	opt stack 0
  1086                           
  1087                           ; 1 bytes @ 0x27
  1088  000087                     	ds	1
  1089  000088                     CANInitialize@FilterConfig2:
  1090                           	opt stack 0
  1091                           
  1092                           ; 1 bytes @ 0x28
  1093  000088                     	ds	1
  1094  000089                     ___fldiv@sign:
  1095                           	opt stack 0
  1096  000089                     ___flmul@sign:
  1097                           	opt stack 0
  1098                           
  1099                           ; 1 bytes @ 0x29
  1100  000089                     	ds	1
  1101  00008A                     ___flmul@aexp:
  1102                           	opt stack 0
  1103  00008A                     ___fldiv@rem:
  1104                           	opt stack 0
  1105                           
  1106                           ; 4 bytes @ 0x2A
  1107  00008A                     	ds	1
  1108  00008B                     ___flmul@grs:
  1109                           	opt stack 0
  1110                           
  1111                           ; 4 bytes @ 0x2B
  1112  00008B                     	ds	3
  1113  00008E                     ___fldiv@new_exp:
  1114                           	opt stack 0
  1115                           
  1116                           ; 2 bytes @ 0x2E
  1117  00008E                     	ds	1
  1118  00008F                     ___flmul@bexp:
  1119                           	opt stack 0
  1120                           
  1121                           ; 1 bytes @ 0x2F
  1122  00008F                     	ds	1
  1123  000090                     ___fldiv@grs:
  1124                           	opt stack 0
  1125  000090                     ___flmul@prod:
  1126                           	opt stack 0
  1127                           
  1128                           ; 4 bytes @ 0x30
  1129  000090                     	ds	4
  1130  000094                     ___fldiv@bexp:
  1131                           	opt stack 0
  1132  000094                     ___flmul@temp:
  1133                           	opt stack 0
  1134                           
  1135                           ; 2 bytes @ 0x34
  1136  000094                     	ds	1
  1137  000095                     ___fldiv@aexp:
  1138                           	opt stack 0
  1139                           
  1140                           ; 1 bytes @ 0x35
  1141  000095                     	ds	1
  1142  000096                     ?_fround:
  1143                           	opt stack 0
  1144  000096                     ?_scale:
  1145                           	opt stack 0
  1146  000096                     ?___flneg:
  1147                           	opt stack 0
  1148  000096                     ___flneg@f1:
  1149                           	opt stack 0
  1150                           
  1151                           ; 4 bytes @ 0x36
  1152  000096                     	ds	4
  1153  00009A                     _fround$4215:
  1154                           	opt stack 0
  1155  00009A                     _scale$4216:
  1156                           	opt stack 0
  1157                           
  1158                           ; 4 bytes @ 0x3A
  1159  00009A                     	ds	4
  1160  00009E                     scale@scl:
  1161                           	opt stack 0
  1162  00009E                     _fround$4214:
  1163                           	opt stack 0
  1164                           
  1165                           ; 4 bytes @ 0x3E
  1166  00009E                     	ds	4
  1167  0000A2                     fround@prec:
  1168                           	opt stack 0
  1169                           
  1170                           ; 1 bytes @ 0x42
  1171  0000A2                     	ds	1
  1172  0000A3                     ?___fladd:
  1173                           	opt stack 0
  1174  0000A3                     ___fladd@b:
  1175                           	opt stack 0
  1176                           
  1177                           ; 4 bytes @ 0x43
  1178  0000A3                     	ds	4
  1179  0000A7                     ___fladd@a:
  1180                           	opt stack 0
  1181                           
  1182                           ; 4 bytes @ 0x47
  1183  0000A7                     	ds	4
  1184  0000AB                     ??___fladd:
  1185                           
  1186                           ; 0 bytes @ 0x4B
  1187  0000AB                     	ds	8
  1188  0000B3                     ___fladd@signs:
  1189                           	opt stack 0
  1190                           
  1191                           ; 1 bytes @ 0x53
  1192  0000B3                     	ds	1
  1193  0000B4                     ___fladd@aexp:
  1194                           	opt stack 0
  1195                           
  1196                           ; 1 bytes @ 0x54
  1197  0000B4                     	ds	1
  1198  0000B5                     ___fladd@bexp:
  1199                           	opt stack 0
  1200                           
  1201                           ; 1 bytes @ 0x55
  1202  0000B5                     	ds	1
  1203  0000B6                     ___fladd@grs:
  1204                           	opt stack 0
  1205                           
  1206                           ; 1 bytes @ 0x56
  1207  0000B6                     	ds	1
  1208  0000B7                     ?___flsub:
  1209                           	opt stack 0
  1210  0000B7                     ?___fltol:
  1211                           	opt stack 0
  1212  0000B7                     ___fltol@f1:
  1213                           	opt stack 0
  1214  0000B7                     ___flsub@b:
  1215                           	opt stack 0
  1216                           
  1217                           ; 4 bytes @ 0x57
  1218  0000B7                     	ds	4
  1219  0000BB                     ??___fltol:
  1220  0000BB                     ___flsub@a:
  1221                           	opt stack 0
  1222                           
  1223                           ; 4 bytes @ 0x5B
  1224  0000BB                     	ds	4
  1225  0000BF                     ___fltol@sign1:
  1226                           	opt stack 0
  1227                           
  1228                           ; 1 bytes @ 0x5F
  1229  0000BF                     	ds	1
  1230  0000C0                     ___fltol@exp1:
  1231                           	opt stack 0
  1232                           
  1233                           ; 1 bytes @ 0x60
  1234  0000C0                     	ds	1
  1235  0000C1                     ?_sprintf:
  1236                           	opt stack 0
  1237  0000C1                     sprintf@sp:
  1238                           	opt stack 0
  1239                           
  1240                           ; 2 bytes @ 0x61
  1241  0000C1                     	ds	2
  1242  0000C3                     sprintf@f:
  1243                           	opt stack 0
  1244                           
  1245                           ; 2 bytes @ 0x63
  1246  0000C3                     	ds	6
  1247  0000C9                     ??_sprintf:
  1248                           
  1249                           ; 0 bytes @ 0x69
  1250  0000C9                     	ds	2
  1251  0000CB                     tblptru	equ	0xFF8
  1252                           tblptrh	equ	0xFF7
  1253                           tblptrl	equ	0xFF6
  1254                           tablat	equ	0xFF5
  1255                           postinc0	equ	0xFEE
  1256                           wreg	equ	0xFE8
  1257                           
  1258                           ; 0 bytes @ 0x6B
  1259                           
  1260                           	psect	cstackCOMRAM
  1261  00002B                     __pcstackCOMRAM:
  1262                           	opt stack 0
  1263  00002B                     ??_ISR_bassa:
  1264  00002B                     
  1265                           ; 1 bytes @ 0x0
  1266  00002B                     	ds	17
  1267  00003C                     _CANisRxReady$3237:
  1268                           	opt stack 0
  1269  00003C                     i2_CANisTxReady$3235:
  1270                           	opt stack 0
  1271  00003C                     CANreceiveMessage@msg:
  1272                           	opt stack 0
  1273  00003C                     i2CANsendMessage@identifier:
  1274                           	opt stack 0
  1275                           
  1276                           ; 4 bytes @ 0x11
  1277  00003C                     	ds	2
  1278  00003E                     ??_CANreceiveMessage:
  1279                           
  1280                           ; 0 bytes @ 0x13
  1281  00003E                     	ds	2
  1282  000040                     i2CANsendMessage@data:
  1283                           	opt stack 0
  1284                           
  1285                           ; 2 bytes @ 0x15
  1286  000040                     	ds	2
  1287  000042                     i2CANsendMessage@dataLength:
  1288                           	opt stack 0
  1289                           
  1290                           ; 1 bytes @ 0x17
  1291  000042                     	ds	1
  1292  000043                     i2CANsendMessage@flags:
  1293                           	opt stack 0
  1294                           
  1295                           ; 1 bytes @ 0x18
  1296  000043                     	ds	1
  1297  000044                     ??i2_CANsendMessage:
  1298                           
  1299                           ; 0 bytes @ 0x19
  1300  000044                     	ds	2
  1301  000046                     CANreceiveMessage@error:
  1302                           	opt stack 0
  1303                           
  1304                           ; 1 bytes @ 0x1B
  1305  000046                     	ds	1
  1306  000047                     CANreceiveMessage@tamp:
  1307                           	opt stack 0
  1308                           
  1309                           ; 1 bytes @ 0x1C
  1310  000047                     	ds	1
  1311  000048                     i2CANsendMessage@tamp:
  1312                           	opt stack 0
  1313                           
  1314                           ; 4 bytes @ 0x1D
  1315  000048                     	ds	4
  1316                           tblptru	equ	0xFF8
  1317                           tblptrh	equ	0xFF7
  1318                           tblptrl	equ	0xFF6
  1319                           tablat	equ	0xFF5
  1320                           postinc0	equ	0xFEE
  1321                           wreg	equ	0xFE8
  1322                           
  1323 ;;
  1324 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1325 ;;
  1326 ;; *************** function _main *****************
  1327 ;; Defined at:
  1328 ;;		line 148 in file "RemoteCan.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;		None
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;		None
  1333 ;; Return value:  Size  Location     Type
  1334 ;;		None               void
  1335 ;; Registers used:
  1336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1344 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1345 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1346 ;;Total ram usage:        8 bytes
  1347 ;; Hardware stack levels required when called:   10
  1348 ;; This function calls:
  1349 ;;		_CAN_Send
  1350 ;;		_CAN_interpreter
  1351 ;;		_CANisTxReady
  1352 ;;		_CANsendMessage
  1353 ;;		_F1_Button_Polling
  1354 ;;		_F2_Button_Polling
  1355 ;;		_Joystick_Polling
  1356 ;;		_LCD_Handler
  1357 ;;		_LCD_goto_line
  1358 ;;		_LCD_initialize
  1359 ;;		_LCD_write_message
  1360 ;;		_PWR_Button_Polling
  1361 ;;		___fladd
  1362 ;;		___flmul
  1363 ;;		___flneg
  1364 ;;		___fltol
  1365 ;;		___xxtofl
  1366 ;;		_board_initialization
  1367 ;;		_delay_ms
  1368 ;; This function is called by:
  1369 ;;		Startup code after reset
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text0
  1374  011B26                     __ptext0:
  1375                           	opt stack 0
  1376  011B26                     _main:
  1377                           	opt stack 21
  1378                           
  1379                           ;RemoteCan.c: 149: board_initialization();
  1380                           
  1381                           ;incstack = 0
  1382  011B26  EC88  F0AA         	call	_board_initialization	;wreg free
  1383                           
  1384                           ;RemoteCan.c: 151: LATDbits.LD6 = 1;
  1385  011B2A  8C8C               	bsf	3980,6,c	;volatile
  1386                           
  1387                           ;RemoteCan.c: 152: LATDbits.LD5 = 1;
  1388  011B2C  8A8C               	bsf	3980,5,c	;volatile
  1389                           
  1390                           ;RemoteCan.c: 153: delay_ms(500);
  1391  011B2E  0E01               	movlw	1
  1392  011B30  0100               	movlb	0	; () banked
  1393  011B32  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1394  011B34  0EF4               	movlw	244
  1395  011B36  6F75               	movwf	delay_ms@value_ms& (0+255),b
  1396  011B38  ECF4  F0AD         	call	_delay_ms	;wreg free
  1397                           
  1398                           ;RemoteCan.c: 154: LATDbits.LD6 = 0;
  1399  011B3C  9C8C               	bcf	3980,6,c	;volatile
  1400                           
  1401                           ;RemoteCan.c: 155: LATDbits.LD5 = 0;
  1402  011B3E  9A8C               	bcf	3980,5,c	;volatile
  1403                           
  1404                           ;RemoteCan.c: 157: JoystickConstants[0] = 0.703;
  1405  011B40  0ECF               	movlw	207
  1406  011B42  0100               	movlb	0	; () banked
  1407  011B44  6FCB               	movwf	_JoystickConstants& (0+255),b	;volatile
  1408  011B46  0EF7               	movlw	247
  1409  011B48  6FCC               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1410  011B4A  0E33               	movlw	51
  1411  011B4C  6FCD               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1412  011B4E  0E3F               	movlw	63
  1413  011B50  6FCE               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;RemoteCan.c: 158: JoystickConstants[1] = 10;
  1417  011B52  0E00               	movlw	0
  1418  011B54  0100               	movlb	0	; () banked
  1419  011B56  6FCF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1420  011B58  0E00               	movlw	0
  1421  011B5A  6FD0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1422  011B5C  0E20               	movlw	32
  1423  011B5E  6FD1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1424  011B60  0E41               	movlw	65
  1425  011B62  6FD2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;RemoteCan.c: 160: display_refresh = 1;
  1429  011B64  8C4C               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1430  011B66                     l9184:
  1431                           
  1432                           ;RemoteCan.c: 164: PWR_Button_Polling();
  1433  011B66  ECEE  F0AE         	call	_PWR_Button_Polling	;wreg free
  1434                           
  1435                           ;RemoteCan.c: 165: F1_Button_Polling();
  1436  011B6A  EC18  F0AF         	call	_F1_Button_Polling	;wreg free
  1437                           
  1438                           ;RemoteCan.c: 166: F2_Button_Polling();
  1439  011B6E  EC0A  F0AF         	call	_F2_Button_Polling	;wreg free
  1440                           
  1441                           ;RemoteCan.c: 169: if (power_switch == 0) {
  1442  011B72  B04D               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1443  011B74  D09B               	goto	l9226
  1444                           
  1445                           ;RemoteCan.c: 170: dir = 1;
  1446  011B76  0E01               	movlw	1
  1447  011B78  0100               	movlb	0	; () banked
  1448  011B7A  6FE3               	movwf	_dir& (0+255),b	;volatile
  1449                           
  1450                           ;RemoteCan.c: 171: set_speed = 0;
  1451  011B7C  0E00               	movlw	0
  1452  011B7E  0100               	movlb	0	; () banked
  1453  011B80  6FE2               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1454  011B82  0E00               	movlw	0
  1455  011B84  6FE1               	movwf	_set_speed& (0+255),b	;volatile
  1456                           
  1457                           ;RemoteCan.c: 172: data_steering [0] = 90;
  1458  011B86  0E5A               	movlw	90
  1459  011B88  0100               	movlb	0	; () banked
  1460  011B8A  6FE9               	movwf	_data_steering& (0+255),b
  1461                           
  1462                           ;RemoteCan.c: 173: data_brake [0] = 0;
  1463  011B8C  0E00               	movlw	0
  1464  011B8E  0100               	movlb	0	; () banked
  1465  011B90  6FE7               	movwf	_data_brake& (0+255),b
  1466                           
  1467                           ;RemoteCan.c: 174: data_brake [1] = 1;
  1468  011B92  0E01               	movlw	1
  1469  011B94  0100               	movlb	0	; () banked
  1470  011B96  6FE8               	movwf	(_data_brake+1)& (0+255),b
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;RemoteCan.c: 175: CAN_Send();
  1474  011B98  ECA6  F0AB         	call	_CAN_Send	;wreg free
  1475                           
  1476                           ;RemoteCan.c: 176: LCD_initialize(16);
  1477  011B9C  0E10               	movlw	16
  1478  011B9E  EC27  F0A8         	call	_LCD_initialize
  1479                           
  1480                           ;RemoteCan.c: 177: LCD_goto_line(1);
  1481  011BA2  0E01               	movlw	1
  1482  011BA4  EC12  F0AA         	call	_LCD_goto_line
  1483                           
  1484                           ;RemoteCan.c: 178: LCD_write_message("====================");
  1485  011BA8  0EA8               	movlw	low STR_1
  1486  011BAA  0100               	movlb	0	; () banked
  1487  011BAC  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  1488  011BAE  0EFF               	movlw	high STR_1
  1489  011BB0  0100               	movlb	0	; () banked
  1490  011BB2  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1491  011BB4  EC48  F0AE         	call	_LCD_write_message	;wreg free
  1492                           
  1493                           ;RemoteCan.c: 179: LCD_goto_line(2);
  1494  011BB8  0E02               	movlw	2
  1495  011BBA  EC12  F0AA         	call	_LCD_goto_line
  1496                           
  1497                           ;RemoteCan.c: 180: LCD_write_message("==> VEHICLE  OFF <==");
  1498  011BBE  0E7E               	movlw	low STR_2
  1499  011BC0  0100               	movlb	0	; () banked
  1500  011BC2  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  1501  011BC4  0EFF               	movlw	high STR_2
  1502  011BC6  0100               	movlb	0	; () banked
  1503  011BC8  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1504  011BCA  EC48  F0AE         	call	_LCD_write_message	;wreg free
  1505                           
  1506                           ;RemoteCan.c: 181: LCD_goto_line(3);
  1507  011BCE  0E03               	movlw	3
  1508  011BD0  EC12  F0AA         	call	_LCD_goto_line
  1509                           
  1510                           ;RemoteCan.c: 182: LCD_write_message("Turn the switch ON! ");
  1511  011BD4  0E69               	movlw	low STR_3
  1512  011BD6  0100               	movlb	0	; () banked
  1513  011BD8  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  1514  011BDA  0EFF               	movlw	high STR_3
  1515  011BDC  0100               	movlb	0	; () banked
  1516  011BDE  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1517  011BE0  EC48  F0AE         	call	_LCD_write_message	;wreg free
  1518                           
  1519                           ;RemoteCan.c: 183: LCD_goto_line(4);
  1520  011BE4  0E04               	movlw	4
  1521  011BE6  EC12  F0AA         	call	_LCD_goto_line
  1522                           
  1523                           ;RemoteCan.c: 184: LCD_write_message("====================");
  1524  011BEA  0EA8               	movlw	low STR_1
  1525  011BEC  0100               	movlb	0	; () banked
  1526  011BEE  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  1527  011BF0  0EFF               	movlw	high STR_1
  1528  011BF2  0100               	movlb	0	; () banked
  1529  011BF4  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1530  011BF6  EC48  F0AE         	call	_LCD_write_message	;wreg free
  1531                           
  1532                           ;RemoteCan.c: 185: while (power_switch == 0) {
  1533  011BFA  D054               	goto	l9224
  1534  011BFC                     l9214:
  1535                           
  1536                           ;RemoteCan.c: 186: if ((time_counter - pr_time_1) >= 30) {
  1537  011BFC  C0D3  F13A         	movff	_pr_time_1,??_main	;volatile
  1538  011C00  C0D4  F13B         	movff	_pr_time_1+1,??_main+1	;volatile
  1539  011C04  C0D5  F13C         	movff	_pr_time_1+2,??_main+2	;volatile
  1540  011C08  C0D6  F13D         	movff	_pr_time_1+3,??_main+3	;volatile
  1541  011C0C  0101               	movlb	1	; () banked
  1542  011C0E  1F3A               	comf	??_main& (0+255),f,b
  1543  011C10  1F3B               	comf	(??_main+1)& (0+255),f,b
  1544  011C12  1F3C               	comf	(??_main+2)& (0+255),f,b
  1545  011C14  1F3D               	comf	(??_main+3)& (0+255),f,b
  1546  011C16  2B3A               	incf	??_main& (0+255),f,b
  1547  011C18  0E00               	movlw	0
  1548  011C1A  233B               	addwfc	(??_main+1)& (0+255),f,b
  1549  011C1C  233C               	addwfc	(??_main+2)& (0+255),f,b
  1550  011C1E  233D               	addwfc	(??_main+3)& (0+255),f,b
  1551  011C20  5020               	movf	_time_counter,w,c	;volatile
  1552  011C22  0101               	movlb	1	; () banked
  1553  011C24  253A               	addwf	??_main& (0+255),w,b
  1554  011C26  0101               	movlb	1	; () banked
  1555  011C28  6F3E               	movwf	(??_main+4)& (0+255),b
  1556  011C2A  5021               	movf	_time_counter+1,w,c	;volatile
  1557  011C2C  0101               	movlb	1	; () banked
  1558  011C2E  213B               	addwfc	(??_main+1)& (0+255),w,b
  1559  011C30  0101               	movlb	1	; () banked
  1560  011C32  6F3F               	movwf	(??_main+5)& (0+255),b
  1561  011C34  5022               	movf	_time_counter+2,w,c	;volatile
  1562  011C36  0101               	movlb	1	; () banked
  1563  011C38  213C               	addwfc	(??_main+2)& (0+255),w,b
  1564  011C3A  0101               	movlb	1	; () banked
  1565  011C3C  6F40               	movwf	(??_main+6)& (0+255),b
  1566  011C3E  5023               	movf	_time_counter+3,w,c	;volatile
  1567  011C40  0101               	movlb	1	; () banked
  1568  011C42  213D               	addwfc	(??_main+3)& (0+255),w,b
  1569  011C44  0101               	movlb	1	; () banked
  1570  011C46  6F41               	movwf	(??_main+7)& (0+255),b
  1571  011C48  0101               	movlb	1	; () banked
  1572  011C4A  5141               	movf	(??_main+7)& (0+255),w,b
  1573  011C4C  0101               	movlb	1	; () banked
  1574  011C4E  1140               	iorwf	(??_main+6)& (0+255),w,b
  1575  011C50  0101               	movlb	1	; () banked
  1576  011C52  113F               	iorwf	(??_main+5)& (0+255),w,b
  1577  011C54  E105               	bnz	u12250
  1578  011C56  0E1E               	movlw	30
  1579  011C58  0101               	movlb	1	; () banked
  1580  011C5A  5D3E               	subwf	(??_main+4)& (0+255),w,b
  1581  011C5C  A0D8               	btfss	status,0,c
  1582  011C5E  D019               	goto	l9220
  1583  011C60                     u12250:
  1584                           
  1585                           ; BSR set to: 1
  1586                           ;RemoteCan.c: 187: pr_time_1 = time_counter;
  1587  011C60  C020  F0D3         	movff	_time_counter,_pr_time_1	;volatile
  1588  011C64  C021  F0D4         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1589  011C68  C022  F0D5         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1590  011C6C  C023  F0D6         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1591                           
  1592                           ; BSR set to: 1
  1593                           ;RemoteCan.c: 188: PORTDbits.RD7 = ~PORTDbits.RD7;
  1594  011C70  AE83               	btfss	3971,7,c	;volatile
  1595  011C72  D002               	goto	u12260
  1596  011C74  0E01               	movlw	1
  1597  011C76  D001               	goto	u12266
  1598  011C78                     u12260:
  1599  011C78  0E00               	movlw	0
  1600  011C7A                     u12266:
  1601  011C7A  0AFF               	xorlw	255
  1602  011C7C  0101               	movlb	1	; () banked
  1603  011C7E  6F3A               	movwf	??_main& (0+255),b
  1604  011C80  0101               	movlb	1	; () banked
  1605  011C82  333A               	rrcf	??_main& (0+255),f,b
  1606  011C84  333A               	rrcf	??_main& (0+255),f,b
  1607  011C86  5083               	movf	3971,w,c	;volatile
  1608  011C88  0101               	movlb	1	; () banked
  1609  011C8A  193A               	xorwf	??_main& (0+255),w,b
  1610  011C8C  0B7F               	andlw	-129
  1611  011C8E  193A               	xorwf	??_main& (0+255),w,b
  1612  011C90  6E83               	movwf	3971,c	;volatile
  1613  011C92                     l9220:
  1614                           
  1615                           ; BSR set to: 1
  1616                           ;RemoteCan.c: 189: }
  1617                           ;RemoteCan.c: 190: PWR_Button_Polling();
  1618  011C92  ECEE  F0AE         	call	_PWR_Button_Polling	;wreg free
  1619                           
  1620                           ;RemoteCan.c: 191: delay_ms(10);
  1621  011C96  0E00               	movlw	0
  1622  011C98  0100               	movlb	0	; () banked
  1623  011C9A  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1624  011C9C  0E0A               	movlw	10
  1625  011C9E  6F75               	movwf	delay_ms@value_ms& (0+255),b
  1626  011CA0  ECF4  F0AD         	call	_delay_ms	;wreg free
  1627  011CA4                     l9224:
  1628  011CA4  A04D               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1629  011CA6  D7AA               	goto	l9214
  1630                           
  1631                           ;RemoteCan.c: 192: }
  1632                           ;RemoteCan.c: 193: PORTDbits.RD7 = 0;
  1633  011CA8  9E83               	bcf	3971,7,c	;volatile
  1634                           
  1635                           ;RemoteCan.c: 194: display_refresh = 1;
  1636  011CAA  8C4C               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1637  011CAC                     l9226:
  1638                           
  1639                           ;RemoteCan.c: 195: }
  1640                           ;RemoteCan.c: 197: Joystick_Polling();
  1641  011CAC  EC41  F0AD         	call	_Joystick_Polling	;wreg free
  1642                           
  1643                           ;RemoteCan.c: 200: if (PORTAbits.RA2 == 1) {
  1644  011CB0  A480               	btfss	3968,2,c	;volatile
  1645  011CB2  D004               	goto	l777
  1646                           
  1647                           ;RemoteCan.c: 201: switch_position = 0;
  1648  011CB4  0E00               	movlw	0
  1649  011CB6  0100               	movlb	0	; () banked
  1650  011CB8  6FE6               	movwf	_switch_position& (0+255),b	;volatile
  1651                           
  1652                           ;RemoteCan.c: 202: } else {
  1653  011CBA  D00D               	goto	l9236
  1654  011CBC                     l777:
  1655                           
  1656                           ;RemoteCan.c: 203: if (PORTAbits.RA3 == 0) {
  1657  011CBC  B680               	btfsc	3968,3,c	;volatile
  1658  011CBE  D005               	goto	l9234
  1659                           
  1660                           ;RemoteCan.c: 204: switch_position = 1;
  1661  011CC0  0E01               	movlw	1
  1662  011CC2  0100               	movlb	0	; () banked
  1663  011CC4  6FE6               	movwf	_switch_position& (0+255),b	;volatile
  1664                           
  1665                           ;RemoteCan.c: 205: dir = 1;
  1666  011CC6  0E01               	movlw	1
  1667  011CC8  D004               	goto	L1
  1668  011CCA                     l9234:
  1669                           
  1670                           ;RemoteCan.c: 207: switch_position = 2;
  1671  011CCA  0E02               	movlw	2
  1672  011CCC  0100               	movlb	0	; () banked
  1673  011CCE  6FE6               	movwf	_switch_position& (0+255),b	;volatile
  1674                           
  1675                           ;RemoteCan.c: 208: dir = 0;
  1676  011CD0  0E00               	movlw	0
  1677  011CD2                     L1:
  1678  011CD2  0100               	movlb	0	; () banked
  1679  011CD4  6FE3               	movwf	_dir& (0+255),b	;volatile
  1680  011CD6                     l9236:
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;RemoteCan.c: 209: }
  1684                           ;RemoteCan.c: 210: }
  1685                           ;RemoteCan.c: 213: if (F1_switch == 1) {
  1686  011CD6  A24C               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  1687  011CD8  D0F0               	goto	l781
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;RemoteCan.c: 214: y = 0;
  1691  011CDA  9A4D               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;RemoteCan.c: 215: if ((time_counter - pr_time_5) >= 30) {
  1695  011CDC  C018  F13A         	movff	_pr_time_5,??_main	;volatile
  1696  011CE0  C019  F13B         	movff	_pr_time_5+1,??_main+1	;volatile
  1697  011CE4  C01A  F13C         	movff	_pr_time_5+2,??_main+2	;volatile
  1698  011CE8  C01B  F13D         	movff	_pr_time_5+3,??_main+3	;volatile
  1699  011CEC  0101               	movlb	1	; () banked
  1700  011CEE  1F3A               	comf	??_main& (0+255),f,b
  1701  011CF0  1F3B               	comf	(??_main+1)& (0+255),f,b
  1702  011CF2  1F3C               	comf	(??_main+2)& (0+255),f,b
  1703  011CF4  1F3D               	comf	(??_main+3)& (0+255),f,b
  1704  011CF6  2B3A               	incf	??_main& (0+255),f,b
  1705  011CF8  0E00               	movlw	0
  1706  011CFA  233B               	addwfc	(??_main+1)& (0+255),f,b
  1707  011CFC  233C               	addwfc	(??_main+2)& (0+255),f,b
  1708  011CFE  233D               	addwfc	(??_main+3)& (0+255),f,b
  1709  011D00  5020               	movf	_time_counter,w,c	;volatile
  1710  011D02  0101               	movlb	1	; () banked
  1711  011D04  253A               	addwf	??_main& (0+255),w,b
  1712  011D06  0101               	movlb	1	; () banked
  1713  011D08  6F3E               	movwf	(??_main+4)& (0+255),b
  1714  011D0A  5021               	movf	_time_counter+1,w,c	;volatile
  1715  011D0C  0101               	movlb	1	; () banked
  1716  011D0E  213B               	addwfc	(??_main+1)& (0+255),w,b
  1717  011D10  0101               	movlb	1	; () banked
  1718  011D12  6F3F               	movwf	(??_main+5)& (0+255),b
  1719  011D14  5022               	movf	_time_counter+2,w,c	;volatile
  1720  011D16  0101               	movlb	1	; () banked
  1721  011D18  213C               	addwfc	(??_main+2)& (0+255),w,b
  1722  011D1A  0101               	movlb	1	; () banked
  1723  011D1C  6F40               	movwf	(??_main+6)& (0+255),b
  1724  011D1E  5023               	movf	_time_counter+3,w,c	;volatile
  1725  011D20  0101               	movlb	1	; () banked
  1726  011D22  213D               	addwfc	(??_main+3)& (0+255),w,b
  1727  011D24  0101               	movlb	1	; () banked
  1728  011D26  6F41               	movwf	(??_main+7)& (0+255),b
  1729  011D28  0101               	movlb	1	; () banked
  1730  011D2A  5141               	movf	(??_main+7)& (0+255),w,b
  1731  011D2C  0101               	movlb	1	; () banked
  1732  011D2E  1140               	iorwf	(??_main+6)& (0+255),w,b
  1733  011D30  0101               	movlb	1	; () banked
  1734  011D32  113F               	iorwf	(??_main+5)& (0+255),w,b
  1735  011D34  E105               	bnz	u12310
  1736  011D36  0E1E               	movlw	30
  1737  011D38  0101               	movlb	1	; () banked
  1738  011D3A  5D3E               	subwf	(??_main+4)& (0+255),w,b
  1739  011D3C  A0D8               	btfss	status,0,c
  1740  011D3E  D01A               	goto	l9246
  1741  011D40                     u12310:
  1742                           
  1743                           ; BSR set to: 1
  1744                           ;RemoteCan.c: 216: pr_time_5 = time_counter;
  1745  011D40  C020  F018         	movff	_time_counter,_pr_time_5	;volatile
  1746  011D44  C021  F019         	movff	_time_counter+1,_pr_time_5+1	;volatile
  1747  011D48  C022  F01A         	movff	_time_counter+2,_pr_time_5+2	;volatile
  1748  011D4C  C023  F01B         	movff	_time_counter+3,_pr_time_5+3	;volatile
  1749                           
  1750                           ; BSR set to: 1
  1751                           ;RemoteCan.c: 217: PORTDbits.RD6 = ~PORTDbits.RD6;
  1752  011D50  AC83               	btfss	3971,6,c	;volatile
  1753  011D52  D002               	goto	u12320
  1754  011D54  0E01               	movlw	1
  1755  011D56  D001               	goto	u12326
  1756  011D58                     u12320:
  1757  011D58  0E00               	movlw	0
  1758  011D5A                     u12326:
  1759  011D5A  0AFF               	xorlw	255
  1760  011D5C  0101               	movlb	1	; () banked
  1761  011D5E  6F3A               	movwf	??_main& (0+255),b
  1762  011D60  0101               	movlb	1	; () banked
  1763  011D62  3B3A               	swapf	??_main& (0+255),f,b
  1764  011D64  473A               	rlncf	??_main& (0+255),f,b
  1765  011D66  473A               	rlncf	??_main& (0+255),f,b
  1766  011D68  5083               	movf	3971,w,c	;volatile
  1767  011D6A  0101               	movlb	1	; () banked
  1768  011D6C  193A               	xorwf	??_main& (0+255),w,b
  1769  011D6E  0BBF               	andlw	-65
  1770  011D70  193A               	xorwf	??_main& (0+255),w,b
  1771  011D72  6E83               	movwf	3971,c	;volatile
  1772  011D74                     l9246:
  1773                           
  1774                           ; BSR set to: 1
  1775                           ;RemoteCan.c: 218: }
  1776                           ;RemoteCan.c: 219: if ((x == 0)&&(F2_switch == 0)) {
  1777  011D74  A84D               	btfss	_x/(0+8),_x& (0+7),c	;volatile
  1778                           
  1779                           ; BSR set to: 1
  1780  011D76  B44C               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1781  011D78  D02F               	goto	l9260
  1782                           
  1783                           ; BSR set to: 1
  1784                           ;RemoteCan.c: 220: parking_state = 1;
  1785  011D7A  0E01               	movlw	1
  1786  011D7C  0100               	movlb	0	; () banked
  1787  011D7E  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  1788                           
  1789                           ;RemoteCan.c: 221: JoystickConstants[1] = 2;
  1790  011D80  0E00               	movlw	0
  1791  011D82  0100               	movlb	0	; () banked
  1792  011D84  6FCF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1793  011D86  0E00               	movlw	0
  1794  011D88  6FD0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1795  011D8A  0E00               	movlw	0
  1796  011D8C  6FD1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1797  011D8E  0E40               	movlw	64
  1798  011D90  6FD2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1799  011D92                     l9252:
  1800  011D92  ECBC  F0AE         	call	_CANisTxReady	;wreg free
  1801  011D96  0900               	iorlw	0
  1802  011D98  B4D8               	btfsc	status,2,c
  1803  011D9A  D7FB               	goto	l9252
  1804                           
  1805                           ;RemoteCan.c: 223: park_assist_state = 0b00000001;
  1806  011D9C  0E01               	movlw	1
  1807  011D9E  0100               	movlb	0	; () banked
  1808  011DA0  6FE4               	movwf	_park_assist_state& (0+255),b	;volatile
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;RemoteCan.c: 224: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1812  011DA2  0E0A               	movlw	10
  1813  011DA4  0100               	movlb	0	; () banked
  1814  011DA6  6F6F               	movwf	CANsendMessage@identifier& (0+255),b
  1815  011DA8  0E00               	movlw	0
  1816  011DAA  6F70               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1817  011DAC  0E00               	movlw	0
  1818  011DAE  6F71               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1819  011DB0  0E00               	movlw	0
  1820  011DB2  6F72               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1821  011DB4  0100               	movlb	0	; () banked
  1822  011DB6  51E4               	movf	_park_assist_state& (0+255),w,b	;volatile
  1823  011DB8  0101               	movlb	1	; () banked
  1824  011DBA  6F3A               	movwf	??_main& (0+255),b
  1825  011DBC  6B3B               	clrf	(??_main+1)& (0+255),b
  1826  011DBE  C13A  F073         	movff	??_main,CANsendMessage@data
  1827  011DC2  C13B  F074         	movff	??_main+1,CANsendMessage@data+1
  1828  011DC6  0E08               	movlw	8
  1829  011DC8  0100               	movlb	0	; () banked
  1830  011DCA  6F75               	movwf	CANsendMessage@dataLength& (0+255),b
  1831  011DCC  0EBC               	movlw	188
  1832  011DCE  0100               	movlb	0	; () banked
  1833  011DD0  6F76               	movwf	CANsendMessage@flags& (0+255),b
  1834  011DD2  ECCD  F089         	call	_CANsendMessage	;wreg free
  1835                           
  1836                           ;RemoteCan.c: 225: x = 1;
  1837  011DD6  884D               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  1838  011DD8                     l9260:
  1839                           
  1840                           ;RemoteCan.c: 226: }
  1841                           ;RemoteCan.c: 227: if (F2_switch == 1) {
  1842  011DD8  A44C               	btfss	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1843  011DDA  D0A7               	goto	l9294
  1844                           
  1845                           ;RemoteCan.c: 228: if ((time_counter - pr_time_6) >= 30) {
  1846  011DDC  C01C  F13A         	movff	_pr_time_6,??_main	;volatile
  1847  011DE0  C01D  F13B         	movff	_pr_time_6+1,??_main+1	;volatile
  1848  011DE4  C01E  F13C         	movff	_pr_time_6+2,??_main+2	;volatile
  1849  011DE8  C01F  F13D         	movff	_pr_time_6+3,??_main+3	;volatile
  1850  011DEC  0101               	movlb	1	; () banked
  1851  011DEE  1F3A               	comf	??_main& (0+255),f,b
  1852  011DF0  1F3B               	comf	(??_main+1)& (0+255),f,b
  1853  011DF2  1F3C               	comf	(??_main+2)& (0+255),f,b
  1854  011DF4  1F3D               	comf	(??_main+3)& (0+255),f,b
  1855  011DF6  2B3A               	incf	??_main& (0+255),f,b
  1856  011DF8  0E00               	movlw	0
  1857  011DFA  233B               	addwfc	(??_main+1)& (0+255),f,b
  1858  011DFC  233C               	addwfc	(??_main+2)& (0+255),f,b
  1859  011DFE  233D               	addwfc	(??_main+3)& (0+255),f,b
  1860  011E00  5020               	movf	_time_counter,w,c	;volatile
  1861  011E02  0101               	movlb	1	; () banked
  1862  011E04  253A               	addwf	??_main& (0+255),w,b
  1863  011E06  0101               	movlb	1	; () banked
  1864  011E08  6F3E               	movwf	(??_main+4)& (0+255),b
  1865  011E0A  5021               	movf	_time_counter+1,w,c	;volatile
  1866  011E0C  0101               	movlb	1	; () banked
  1867  011E0E  213B               	addwfc	(??_main+1)& (0+255),w,b
  1868  011E10  0101               	movlb	1	; () banked
  1869  011E12  6F3F               	movwf	(??_main+5)& (0+255),b
  1870  011E14  5022               	movf	_time_counter+2,w,c	;volatile
  1871  011E16  0101               	movlb	1	; () banked
  1872  011E18  213C               	addwfc	(??_main+2)& (0+255),w,b
  1873  011E1A  0101               	movlb	1	; () banked
  1874  011E1C  6F40               	movwf	(??_main+6)& (0+255),b
  1875  011E1E  5023               	movf	_time_counter+3,w,c	;volatile
  1876  011E20  0101               	movlb	1	; () banked
  1877  011E22  213D               	addwfc	(??_main+3)& (0+255),w,b
  1878  011E24  0101               	movlb	1	; () banked
  1879  011E26  6F41               	movwf	(??_main+7)& (0+255),b
  1880  011E28  0101               	movlb	1	; () banked
  1881  011E2A  5141               	movf	(??_main+7)& (0+255),w,b
  1882  011E2C  0101               	movlb	1	; () banked
  1883  011E2E  1140               	iorwf	(??_main+6)& (0+255),w,b
  1884  011E30  0101               	movlb	1	; () banked
  1885  011E32  113F               	iorwf	(??_main+5)& (0+255),w,b
  1886  011E34  E105               	bnz	u12370
  1887  011E36  0E1E               	movlw	30
  1888  011E38  0101               	movlb	1	; () banked
  1889  011E3A  5D3E               	subwf	(??_main+4)& (0+255),w,b
  1890  011E3C  A0D8               	btfss	status,0,c
  1891  011E3E  D019               	goto	l9268
  1892  011E40                     u12370:
  1893                           
  1894                           ; BSR set to: 1
  1895                           ;RemoteCan.c: 229: pr_time_6 = time_counter;
  1896  011E40  C020  F01C         	movff	_time_counter,_pr_time_6	;volatile
  1897  011E44  C021  F01D         	movff	_time_counter+1,_pr_time_6+1	;volatile
  1898  011E48  C022  F01E         	movff	_time_counter+2,_pr_time_6+2	;volatile
  1899  011E4C  C023  F01F         	movff	_time_counter+3,_pr_time_6+3	;volatile
  1900                           
  1901                           ; BSR set to: 1
  1902                           ;RemoteCan.c: 230: PORTDbits.RD5 = ~PORTDbits.RD5;
  1903  011E50  AA83               	btfss	3971,5,c	;volatile
  1904  011E52  D002               	goto	u12380
  1905  011E54  0E01               	movlw	1
  1906  011E56  D001               	goto	u12386
  1907  011E58                     u12380:
  1908  011E58  0E00               	movlw	0
  1909  011E5A                     u12386:
  1910  011E5A  0AFF               	xorlw	255
  1911  011E5C  0101               	movlb	1	; () banked
  1912  011E5E  6F3A               	movwf	??_main& (0+255),b
  1913  011E60  0101               	movlb	1	; () banked
  1914  011E62  3B3A               	swapf	??_main& (0+255),f,b
  1915  011E64  473A               	rlncf	??_main& (0+255),f,b
  1916  011E66  5083               	movf	3971,w,c	;volatile
  1917  011E68  0101               	movlb	1	; () banked
  1918  011E6A  193A               	xorwf	??_main& (0+255),w,b
  1919  011E6C  0BDF               	andlw	-33
  1920  011E6E  193A               	xorwf	??_main& (0+255),w,b
  1921  011E70  6E83               	movwf	3971,c	;volatile
  1922  011E72                     l9268:
  1923                           
  1924                           ; BSR set to: 1
  1925                           ;RemoteCan.c: 231: }
  1926                           ;RemoteCan.c: 232: if (z == 0) {
  1927  011E72  BC4D               	btfsc	_z/(0+8),_z& (0+7),c	;volatile
  1928  011E74  D05A               	goto	l9294
  1929                           
  1930                           ; BSR set to: 1
  1931                           ;RemoteCan.c: 233: parking_state = 2;
  1932  011E76  0E02               	movlw	2
  1933  011E78  0100               	movlb	0	; () banked
  1934  011E7A  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  1935  011E7C                     l9272:
  1936  011E7C  ECBC  F0AE         	call	_CANisTxReady	;wreg free
  1937  011E80  0900               	iorlw	0
  1938  011E82  B4D8               	btfsc	status,2,c
  1939  011E84  D7FB               	goto	l9272
  1940                           
  1941                           ;RemoteCan.c: 235: CANsendMessage(0b00000001011, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  1942  011E86  0E0B               	movlw	11
  1943  011E88  0100               	movlb	0	; () banked
  1944  011E8A  6F6F               	movwf	CANsendMessage@identifier& (0+255),b
  1945  011E8C  0E00               	movlw	0
  1946  011E8E  6F70               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1947  011E90  0E00               	movlw	0
  1948  011E92  6F71               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1949  011E94  0E00               	movlw	0
  1950  011E96  6F72               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1951  011E98  0E2A               	movlw	low _data
  1952  011E9A  0100               	movlb	0	; () banked
  1953  011E9C  6F73               	movwf	CANsendMessage@data& (0+255),b
  1954  011E9E  0E00               	movlw	high _data
  1955  011EA0  0100               	movlb	0	; () banked
  1956  011EA2  6F74               	movwf	(CANsendMessage@data+1)& (0+255),b
  1957  011EA4  0E08               	movlw	8
  1958  011EA6  0100               	movlb	0	; () banked
  1959  011EA8  6F75               	movwf	CANsendMessage@dataLength& (0+255),b
  1960  011EAA  0EBC               	movlw	188
  1961  011EAC  0100               	movlb	0	; () banked
  1962  011EAE  6F76               	movwf	CANsendMessage@flags& (0+255),b
  1963  011EB0  ECCD  F089         	call	_CANsendMessage	;wreg free
  1964                           
  1965                           ;RemoteCan.c: 236: x = 0;
  1966  011EB4  984D               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  1967                           
  1968                           ;RemoteCan.c: 237: z = 1;
  1969  011EB6  8C4D               	bsf	_z/(0+8),_z& (0+7),c	;volatile
  1970                           
  1971                           ;RemoteCan.c: 238: }
  1972                           ;RemoteCan.c: 239: }
  1973                           ;RemoteCan.c: 240: } else {
  1974  011EB8  D038               	goto	l9294
  1975  011EBA                     l781:
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;RemoteCan.c: 241: x = 0;
  1979  011EBA  984D               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  1980                           
  1981                           ;RemoteCan.c: 242: z = 0;
  1982  011EBC  9C4D               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  1983                           
  1984                           ;RemoteCan.c: 243: F2_switch = 0;
  1985  011EBE  944C               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1986                           
  1987                           ;RemoteCan.c: 244: PORTDbits.RD5 = 0;
  1988  011EC0  9A83               	bcf	3971,5,c	;volatile
  1989                           
  1990                           ;RemoteCan.c: 245: PORTDbits.RD6 = 0;
  1991  011EC2  9C83               	bcf	3971,6,c	;volatile
  1992                           
  1993                           ;RemoteCan.c: 246: if (y == 0) {
  1994  011EC4  BA4D               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  1995  011EC6  D02F               	goto	l9290
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;RemoteCan.c: 247: parking_state = 0;
  1999  011EC8  0E00               	movlw	0
  2000  011ECA  0100               	movlb	0	; () banked
  2001  011ECC  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  2002                           
  2003                           ;RemoteCan.c: 248: JoystickConstants[1] = 10;
  2004  011ECE  0E00               	movlw	0
  2005  011ED0  0100               	movlb	0	; () banked
  2006  011ED2  6FCF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2007  011ED4  0E00               	movlw	0
  2008  011ED6  6FD0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2009  011ED8  0E20               	movlw	32
  2010  011EDA  6FD1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2011  011EDC  0E41               	movlw	65
  2012  011EDE  6FD2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2013  011EE0                     l9282:
  2014  011EE0  ECBC  F0AE         	call	_CANisTxReady	;wreg free
  2015  011EE4  0900               	iorlw	0
  2016  011EE6  B4D8               	btfsc	status,2,c
  2017  011EE8  D7FB               	goto	l9282
  2018                           
  2019                           ;RemoteCan.c: 250: park_assist_state = 0b00000000;
  2020  011EEA  0E00               	movlw	0
  2021  011EEC  0100               	movlb	0	; () banked
  2022  011EEE  6FE4               	movwf	_park_assist_state& (0+255),b	;volatile
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;RemoteCan.c: 251: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2026  011EF0  0E0A               	movlw	10
  2027  011EF2  0100               	movlb	0	; () banked
  2028  011EF4  6F6F               	movwf	CANsendMessage@identifier& (0+255),b
  2029  011EF6  0E00               	movlw	0
  2030  011EF8  6F70               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2031  011EFA  0E00               	movlw	0
  2032  011EFC  6F71               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2033  011EFE  0E00               	movlw	0
  2034  011F00  6F72               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2035  011F02  0100               	movlb	0	; () banked
  2036  011F04  51E4               	movf	_park_assist_state& (0+255),w,b	;volatile
  2037  011F06  0101               	movlb	1	; () banked
  2038  011F08  6F3A               	movwf	??_main& (0+255),b
  2039  011F0A  6B3B               	clrf	(??_main+1)& (0+255),b
  2040  011F0C  C13A  F073         	movff	??_main,CANsendMessage@data
  2041  011F10  C13B  F074         	movff	??_main+1,CANsendMessage@data+1
  2042  011F14  0E08               	movlw	8
  2043  011F16  0100               	movlb	0	; () banked
  2044  011F18  6F75               	movwf	CANsendMessage@dataLength& (0+255),b
  2045  011F1A  0EBC               	movlw	188
  2046  011F1C  0100               	movlb	0	; () banked
  2047  011F1E  6F76               	movwf	CANsendMessage@flags& (0+255),b
  2048  011F20  ECCD  F089         	call	_CANsendMessage	;wreg free
  2049                           
  2050                           ;RemoteCan.c: 252: y = 1;
  2051  011F24  8A4D               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2052  011F26                     l9290:
  2053                           
  2054                           ;RemoteCan.c: 253: }
  2055                           ;RemoteCan.c: 254: PORTDbits.RD6 = 0;
  2056  011F26  9C83               	bcf	3971,6,c	;volatile
  2057                           
  2058                           ;RemoteCan.c: 255: PORTDbits.RD5 = 0;
  2059  011F28  9A83               	bcf	3971,5,c	;volatile
  2060  011F2A                     l9294:
  2061                           
  2062                           ;RemoteCan.c: 256: }
  2063                           ;RemoteCan.c: 258: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2064  011F2A  0E00               	movlw	0
  2065  011F2C  0100               	movlb	0	; () banked
  2066  011F2E  6FA7               	movwf	___fladd@a& (0+255),b
  2067  011F30  0E00               	movlw	0
  2068  011F32  6FA8               	movwf	(___fladd@a+1)& (0+255),b
  2069  011F34  0E34               	movlw	52
  2070  011F36  6FA9               	movwf	(___fladd@a+2)& (0+255),b
  2071  011F38  0E43               	movlw	67
  2072  011F3A  6FAA               	movwf	(___fladd@a+3)& (0+255),b
  2073  011F3C  C0CB  F081         	movff	_JoystickConstants,___flmul@a	;volatile
  2074  011F40  C0CC  F082         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  2075  011F44  C0CD  F083         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  2076  011F48  C0CE  F084         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  2077  011F4C  0100               	movlb	0	; () banked
  2078  011F4E  51DB               	movf	_JoystickValues& (0+255),w,b	;volatile
  2079  011F50  0100               	movlb	0	; () banked
  2080  011F52  6F6F               	movwf	___xxtofl@val& (0+255),b
  2081  011F54  6B70               	clrf	(___xxtofl@val+1)& (0+255),b
  2082  011F56  6B71               	clrf	(___xxtofl@val+2)& (0+255),b
  2083  011F58  6B72               	clrf	(___xxtofl@val+3)& (0+255),b
  2084  011F5A  0E00               	movlw	0
  2085  011F5C  EC02  F0A4         	call	___xxtofl
  2086  011F60  C06F  F07D         	movff	?___xxtofl,___flmul@b
  2087  011F64  C070  F07E         	movff	?___xxtofl+1,___flmul@b+1
  2088  011F68  C071  F07F         	movff	?___xxtofl+2,___flmul@b+2
  2089  011F6C  C072  F080         	movff	?___xxtofl+3,___flmul@b+3
  2090  011F70  EC95  F09B         	call	___flmul	;wreg free
  2091  011F74  C07D  F096         	movff	?___flmul,___flneg@f1
  2092  011F78  C07E  F097         	movff	?___flmul+1,___flneg@f1+1
  2093  011F7C  C07F  F098         	movff	?___flmul+2,___flneg@f1+2
  2094  011F80  C080  F099         	movff	?___flmul+3,___flneg@f1+3
  2095  011F84  EC11  F0AE         	call	___flneg	;wreg free
  2096  011F88  C096  F0A3         	movff	?___flneg,___fladd@b
  2097  011F8C  C097  F0A4         	movff	?___flneg+1,___fladd@b+1
  2098  011F90  C098  F0A5         	movff	?___flneg+2,___fladd@b+2
  2099  011F94  C099  F0A6         	movff	?___flneg+3,___fladd@b+3
  2100  011F98  EC41  F099         	call	___fladd	;wreg free
  2101  011F9C  C0A3  F0B7         	movff	?___fladd,___fltol@f1
  2102  011FA0  C0A4  F0B8         	movff	?___fladd+1,___fltol@f1+1
  2103  011FA4  C0A5  F0B9         	movff	?___fladd+2,___fltol@f1+2
  2104  011FA8  C0A6  F0BA         	movff	?___fladd+3,___fltol@f1+3
  2105  011FAC  EC8C  F0A9         	call	___fltol	;wreg free
  2106  011FB0  0100               	movlb	0	; () banked
  2107  011FB2  51B7               	movf	?___fltol& (0+255),w,b
  2108  011FB4  0100               	movlb	0	; () banked
  2109  011FB6  6FE9               	movwf	_data_steering& (0+255),b
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;RemoteCan.c: 259: if (switch_position != 0) {
  2113  011FB8  0100               	movlb	0	; () banked
  2114  011FBA  51E6               	movf	_switch_position& (0+255),w,b	;volatile
  2115  011FBC  B4D8               	btfsc	status,2,c
  2116  011FBE  D088               	goto	l9308
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;RemoteCan.c: 260: if (JoystickValues[1] > 132) {
  2120  011FC0  0E84               	movlw	132
  2121  011FC2  0100               	movlb	0	; () banked
  2122  011FC4  65DC               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2123  011FC6  D042               	goto	l9304
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;RemoteCan.c: 261: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2127  011FC8  C0CF  F081         	movff	_JoystickConstants+4,___flmul@a	;volatile
  2128  011FCC  C0D0  F082         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  2129  011FD0  C0D1  F083         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  2130  011FD4  C0D2  F084         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  2131  011FD8  0E7E               	movlw	126
  2132  011FDA  0101               	movlb	1	; () banked
  2133  011FDC  6F3A               	movwf	??_main& (0+255),b
  2134  011FDE  0EFF               	movlw	255
  2135  011FE0  0101               	movlb	1	; () banked
  2136  011FE2  6F3B               	movwf	(??_main+1)& (0+255),b
  2137  011FE4  0100               	movlb	0	; () banked
  2138  011FE6  51DC               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2139  011FE8  0101               	movlb	1	; () banked
  2140  011FEA  6F3C               	movwf	(??_main+2)& (0+255),b
  2141  011FEC  6B3D               	clrf	(??_main+3)& (0+255),b
  2142  011FEE  0101               	movlb	1	; () banked
  2143  011FF0  513A               	movf	??_main& (0+255),w,b
  2144  011FF2  0101               	movlb	1	; () banked
  2145  011FF4  273C               	addwf	(??_main+2)& (0+255),f,b
  2146  011FF6  0101               	movlb	1	; () banked
  2147  011FF8  513B               	movf	(??_main+1)& (0+255),w,b
  2148  011FFA  0101               	movlb	1	; () banked
  2149  011FFC  233D               	addwfc	(??_main+3)& (0+255),f,b
  2150  011FFE  C13C  F06F         	movff	??_main+2,___xxtofl@val
  2151  012002  C13D  F070         	movff	??_main+3,___xxtofl@val+1
  2152  012006  0100               	movlb	0	; () banked
  2153  012008  0E00               	movlw	0
  2154  01200A  BF70               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2155  01200C  0EFF               	movlw	-1
  2156  01200E  6F71               	movwf	(___xxtofl@val+2)& (0+255),b
  2157  012010  6F72               	movwf	(___xxtofl@val+3)& (0+255),b
  2158  012012  0E01               	movlw	1
  2159  012014  EC02  F0A4         	call	___xxtofl
  2160  012018  C06F  F07D         	movff	?___xxtofl,___flmul@b
  2161  01201C  C070  F07E         	movff	?___xxtofl+1,___flmul@b+1
  2162  012020  C071  F07F         	movff	?___xxtofl+2,___flmul@b+2
  2163  012024  C072  F080         	movff	?___xxtofl+3,___flmul@b+3
  2164  012028  EC95  F09B         	call	___flmul	;wreg free
  2165  01202C  C07D  F0B7         	movff	?___flmul,___fltol@f1
  2166  012030  C07E  F0B8         	movff	?___flmul+1,___fltol@f1+1
  2167  012034  C07F  F0B9         	movff	?___flmul+2,___fltol@f1+2
  2168  012038  C080  F0BA         	movff	?___flmul+3,___fltol@f1+3
  2169  01203C  EC8C  F0A9         	call	___fltol	;wreg free
  2170  012040  C0B7  F0E1         	movff	?___fltol,_set_speed	;volatile
  2171  012044  C0B8  F0E2         	movff	?___fltol+1,_set_speed+1	;volatile
  2172                           
  2173                           ;RemoteCan.c: 262: data_brake [0] = 0;
  2174  012048  0E00               	movlw	0
  2175  01204A  D040               	goto	L2
  2176  01204C                     l9304:
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;RemoteCan.c: 264: set_speed = 0;
  2180  01204C  0E00               	movlw	0
  2181  01204E  0100               	movlb	0	; () banked
  2182  012050  6FE2               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2183  012052  0E00               	movlw	0
  2184  012054  6FE1               	movwf	_set_speed& (0+255),b	;volatile
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;RemoteCan.c: 265: data_brake [0] = ((130 - JoystickValues[1]))*(1.9);
  2188  012056  0E33               	movlw	51
  2189  012058  0100               	movlb	0	; () banked
  2190  01205A  6F81               	movwf	___flmul@a& (0+255),b
  2191  01205C  0E33               	movlw	51
  2192  01205E  6F82               	movwf	(___flmul@a+1)& (0+255),b
  2193  012060  0EF3               	movlw	243
  2194  012062  6F83               	movwf	(___flmul@a+2)& (0+255),b
  2195  012064  0E3F               	movlw	63
  2196  012066  6F84               	movwf	(___flmul@a+3)& (0+255),b
  2197  012068  0100               	movlb	0	; () banked
  2198  01206A  51DC               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2199  01206C  0101               	movlb	1	; () banked
  2200  01206E  6F3A               	movwf	??_main& (0+255),b
  2201  012070  6B3B               	clrf	(??_main+1)& (0+255),b
  2202  012072  0101               	movlb	1	; () banked
  2203  012074  1F3A               	comf	??_main& (0+255),f,b
  2204  012076  1F3B               	comf	(??_main+1)& (0+255),f,b
  2205  012078  4B3A               	infsnz	??_main& (0+255),f,b
  2206  01207A  2B3B               	incf	(??_main+1)& (0+255),f,b
  2207  01207C  0E82               	movlw	130
  2208  01207E  0101               	movlb	1	; () banked
  2209  012080  273A               	addwf	??_main& (0+255),f,b
  2210  012082  0E00               	movlw	0
  2211  012084  233B               	addwfc	(??_main+1)& (0+255),f,b
  2212  012086  C13A  F06F         	movff	??_main,___xxtofl@val
  2213  01208A  C13B  F070         	movff	??_main+1,___xxtofl@val+1
  2214  01208E  0100               	movlb	0	; () banked
  2215  012090  0E00               	movlw	0
  2216  012092  BF70               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2217  012094  0EFF               	movlw	-1
  2218  012096  6F71               	movwf	(___xxtofl@val+2)& (0+255),b
  2219  012098  6F72               	movwf	(___xxtofl@val+3)& (0+255),b
  2220  01209A  0E01               	movlw	1
  2221  01209C  EC02  F0A4         	call	___xxtofl
  2222  0120A0  C06F  F07D         	movff	?___xxtofl,___flmul@b
  2223  0120A4  C070  F07E         	movff	?___xxtofl+1,___flmul@b+1
  2224  0120A8  C071  F07F         	movff	?___xxtofl+2,___flmul@b+2
  2225  0120AC  C072  F080         	movff	?___xxtofl+3,___flmul@b+3
  2226  0120B0  EC95  F09B         	call	___flmul	;wreg free
  2227  0120B4  C07D  F0B7         	movff	?___flmul,___fltol@f1
  2228  0120B8  C07E  F0B8         	movff	?___flmul+1,___fltol@f1+1
  2229  0120BC  C07F  F0B9         	movff	?___flmul+2,___fltol@f1+2
  2230  0120C0  C080  F0BA         	movff	?___flmul+3,___fltol@f1+3
  2231  0120C4  EC8C  F0A9         	call	___fltol	;wreg free
  2232  0120C8  0100               	movlb	0	; () banked
  2233  0120CA  51B7               	movf	?___fltol& (0+255),w,b
  2234  0120CC                     L2:
  2235  0120CC  0100               	movlb	0	; () banked
  2236  0120CE  6FE7               	movwf	_data_brake& (0+255),b
  2237  0120D0                     l9308:
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;RemoteCan.c: 266: }
  2241                           ;RemoteCan.c: 267: }
  2242                           ;RemoteCan.c: 269: if (newMessageCan == 1) {
  2243  0120D0  AE4C               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2244  0120D2  D003               	goto	l9314
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;RemoteCan.c: 270: CAN_interpreter();
  2248  0120D4  EC03  F0AC         	call	_CAN_interpreter	;wreg free
  2249                           
  2250                           ;RemoteCan.c: 271: newMessageCan = 0;
  2251  0120D8  9E4C               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2252  0120DA                     l9314:
  2253                           
  2254                           ;RemoteCan.c: 272: }
  2255                           ;RemoteCan.c: 274: if ((time_counter - pr_time_2) >= 2) {
  2256  0120DA  C0D7  F13A         	movff	_pr_time_2,??_main	;volatile
  2257  0120DE  C0D8  F13B         	movff	_pr_time_2+1,??_main+1	;volatile
  2258  0120E2  C0D9  F13C         	movff	_pr_time_2+2,??_main+2	;volatile
  2259  0120E6  C0DA  F13D         	movff	_pr_time_2+3,??_main+3	;volatile
  2260  0120EA  0101               	movlb	1	; () banked
  2261  0120EC  1F3A               	comf	??_main& (0+255),f,b
  2262  0120EE  1F3B               	comf	(??_main+1)& (0+255),f,b
  2263  0120F0  1F3C               	comf	(??_main+2)& (0+255),f,b
  2264  0120F2  1F3D               	comf	(??_main+3)& (0+255),f,b
  2265  0120F4  2B3A               	incf	??_main& (0+255),f,b
  2266  0120F6  0E00               	movlw	0
  2267  0120F8  233B               	addwfc	(??_main+1)& (0+255),f,b
  2268  0120FA  233C               	addwfc	(??_main+2)& (0+255),f,b
  2269  0120FC  233D               	addwfc	(??_main+3)& (0+255),f,b
  2270  0120FE  5020               	movf	_time_counter,w,c	;volatile
  2271  012100  0101               	movlb	1	; () banked
  2272  012102  253A               	addwf	??_main& (0+255),w,b
  2273  012104  0101               	movlb	1	; () banked
  2274  012106  6F3E               	movwf	(??_main+4)& (0+255),b
  2275  012108  5021               	movf	_time_counter+1,w,c	;volatile
  2276  01210A  0101               	movlb	1	; () banked
  2277  01210C  213B               	addwfc	(??_main+1)& (0+255),w,b
  2278  01210E  0101               	movlb	1	; () banked
  2279  012110  6F3F               	movwf	(??_main+5)& (0+255),b
  2280  012112  5022               	movf	_time_counter+2,w,c	;volatile
  2281  012114  0101               	movlb	1	; () banked
  2282  012116  213C               	addwfc	(??_main+2)& (0+255),w,b
  2283  012118  0101               	movlb	1	; () banked
  2284  01211A  6F40               	movwf	(??_main+6)& (0+255),b
  2285  01211C  5023               	movf	_time_counter+3,w,c	;volatile
  2286  01211E  0101               	movlb	1	; () banked
  2287  012120  213D               	addwfc	(??_main+3)& (0+255),w,b
  2288  012122  0101               	movlb	1	; () banked
  2289  012124  6F41               	movwf	(??_main+7)& (0+255),b
  2290  012126  0101               	movlb	1	; () banked
  2291  012128  5141               	movf	(??_main+7)& (0+255),w,b
  2292  01212A  0101               	movlb	1	; () banked
  2293  01212C  1140               	iorwf	(??_main+6)& (0+255),w,b
  2294  01212E  0101               	movlb	1	; () banked
  2295  012130  113F               	iorwf	(??_main+5)& (0+255),w,b
  2296  012132  E105               	bnz	u12460
  2297  012134  0E02               	movlw	2
  2298  012136  0101               	movlb	1	; () banked
  2299  012138  5D3E               	subwf	(??_main+4)& (0+255),w,b
  2300  01213A  A0D8               	btfss	status,0,c
  2301  01213C  D00A               	goto	l9320
  2302  01213E                     u12460:
  2303                           
  2304                           ; BSR set to: 1
  2305                           ;RemoteCan.c: 275: pr_time_2 = time_counter;
  2306  01213E  C020  F0D7         	movff	_time_counter,_pr_time_2	;volatile
  2307  012142  C021  F0D8         	movff	_time_counter+1,_pr_time_2+1	;volatile
  2308  012146  C022  F0D9         	movff	_time_counter+2,_pr_time_2+2	;volatile
  2309  01214A  C023  F0DA         	movff	_time_counter+3,_pr_time_2+3	;volatile
  2310                           
  2311                           ; BSR set to: 1
  2312                           ;RemoteCan.c: 276: CAN_Send();
  2313  01214E  ECA6  F0AB         	call	_CAN_Send	;wreg free
  2314  012152                     l9320:
  2315                           
  2316                           ;RemoteCan.c: 277: }
  2317                           ;RemoteCan.c: 279: if ((time_counter - pr_time_3) >= (100 / 10)) {
  2318  012152  C010  F13A         	movff	_pr_time_3,??_main	;volatile
  2319  012156  C011  F13B         	movff	_pr_time_3+1,??_main+1	;volatile
  2320  01215A  C012  F13C         	movff	_pr_time_3+2,??_main+2	;volatile
  2321  01215E  C013  F13D         	movff	_pr_time_3+3,??_main+3	;volatile
  2322  012162  0101               	movlb	1	; () banked
  2323  012164  1F3A               	comf	??_main& (0+255),f,b
  2324  012166  1F3B               	comf	(??_main+1)& (0+255),f,b
  2325  012168  1F3C               	comf	(??_main+2)& (0+255),f,b
  2326  01216A  1F3D               	comf	(??_main+3)& (0+255),f,b
  2327  01216C  2B3A               	incf	??_main& (0+255),f,b
  2328  01216E  0E00               	movlw	0
  2329  012170  233B               	addwfc	(??_main+1)& (0+255),f,b
  2330  012172  233C               	addwfc	(??_main+2)& (0+255),f,b
  2331  012174  233D               	addwfc	(??_main+3)& (0+255),f,b
  2332  012176  5020               	movf	_time_counter,w,c	;volatile
  2333  012178  0101               	movlb	1	; () banked
  2334  01217A  253A               	addwf	??_main& (0+255),w,b
  2335  01217C  0101               	movlb	1	; () banked
  2336  01217E  6F3E               	movwf	(??_main+4)& (0+255),b
  2337  012180  5021               	movf	_time_counter+1,w,c	;volatile
  2338  012182  0101               	movlb	1	; () banked
  2339  012184  213B               	addwfc	(??_main+1)& (0+255),w,b
  2340  012186  0101               	movlb	1	; () banked
  2341  012188  6F3F               	movwf	(??_main+5)& (0+255),b
  2342  01218A  5022               	movf	_time_counter+2,w,c	;volatile
  2343  01218C  0101               	movlb	1	; () banked
  2344  01218E  213C               	addwfc	(??_main+2)& (0+255),w,b
  2345  012190  0101               	movlb	1	; () banked
  2346  012192  6F40               	movwf	(??_main+6)& (0+255),b
  2347  012194  5023               	movf	_time_counter+3,w,c	;volatile
  2348  012196  0101               	movlb	1	; () banked
  2349  012198  213D               	addwfc	(??_main+3)& (0+255),w,b
  2350  01219A  0101               	movlb	1	; () banked
  2351  01219C  6F41               	movwf	(??_main+7)& (0+255),b
  2352  01219E  0101               	movlb	1	; () banked
  2353  0121A0  5141               	movf	(??_main+7)& (0+255),w,b
  2354  0121A2  0101               	movlb	1	; () banked
  2355  0121A4  1140               	iorwf	(??_main+6)& (0+255),w,b
  2356  0121A6  0101               	movlb	1	; () banked
  2357  0121A8  113F               	iorwf	(??_main+5)& (0+255),w,b
  2358  0121AA  E105               	bnz	u12470
  2359  0121AC  0E0A               	movlw	10
  2360  0121AE  0101               	movlb	1	; () banked
  2361  0121B0  5D3E               	subwf	(??_main+4)& (0+255),w,b
  2362  0121B2  A0D8               	btfss	status,0,c
  2363  0121B4  D4D8               	goto	l9184
  2364  0121B6                     u12470:
  2365                           
  2366                           ; BSR set to: 1
  2367                           ;RemoteCan.c: 280: pr_time_3 = time_counter;
  2368  0121B6  C020  F010         	movff	_time_counter,_pr_time_3	;volatile
  2369  0121BA  C021  F011         	movff	_time_counter+1,_pr_time_3+1	;volatile
  2370  0121BE  C022  F012         	movff	_time_counter+2,_pr_time_3+2	;volatile
  2371  0121C2  C023  F013         	movff	_time_counter+3,_pr_time_3+3	;volatile
  2372                           
  2373                           ; BSR set to: 1
  2374                           ;RemoteCan.c: 281: LCD_Handler();
  2375  0121C6  EC12  F0A3         	call	_LCD_Handler	;wreg free
  2376  0121CA  D4CD               	goto	l9184
  2377  0121CC                     __end_of_main:
  2378                           	opt stack 0
  2379                           tblptru	equ	0xFF8
  2380                           tblptrh	equ	0xFF7
  2381                           tblptrl	equ	0xFF6
  2382                           tablat	equ	0xFF5
  2383                           postinc0	equ	0xFEE
  2384                           wreg	equ	0xFE8
  2385                           status	equ	0xFD8
  2386                           
  2387 ;; *************** function _board_initialization *****************
  2388 ;; Defined at:
  2389 ;;		line 428 in file "RemoteCan.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;		None               void
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2407 ;;Total ram usage:        0 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    9
  2410 ;; This function calls:
  2411 ;;		_CANInitialize
  2412 ;;		_LCD_clear
  2413 ;;		_LCD_goto_line
  2414 ;;		_LCD_initialize
  2415 ;;		_LCD_write_message
  2416 ;;		_delay_ms
  2417 ;; This function is called by:
  2418 ;;		_main
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text1
  2423  015510                     __ptext1:
  2424                           	opt stack 0
  2425  015510                     _board_initialization:
  2426                           	opt stack 21
  2427                           
  2428                           ;RemoteCan.c: 430: LATA = 0x00;
  2429                           
  2430                           ;incstack = 0
  2431  015510  0E00               	movlw	0
  2432  015512  6E89               	movwf	3977,c	;volatile
  2433                           
  2434                           ;RemoteCan.c: 431: TRISA = 0b00011111;
  2435  015514  0E1F               	movlw	31
  2436  015516  6E92               	movwf	3986,c	;volatile
  2437                           
  2438                           ;RemoteCan.c: 432: LATB = 0x00;
  2439  015518  0E00               	movlw	0
  2440  01551A  6E8A               	movwf	3978,c	;volatile
  2441                           
  2442                           ;RemoteCan.c: 433: TRISB = 0b11111011;
  2443  01551C  0EFB               	movlw	251
  2444  01551E  6E93               	movwf	3987,c	;volatile
  2445                           
  2446                           ;RemoteCan.c: 434: LATC = 0x00;
  2447  015520  0E00               	movlw	0
  2448  015522  6E8B               	movwf	3979,c	;volatile
  2449                           
  2450                           ;RemoteCan.c: 435: TRISC = 0b11110000;
  2451  015524  0EF0               	movlw	240
  2452  015526  6E94               	movwf	3988,c	;volatile
  2453                           
  2454                           ;RemoteCan.c: 436: LATD = 0x00;
  2455  015528  0E00               	movlw	0
  2456  01552A  6E8C               	movwf	3980,c	;volatile
  2457                           
  2458                           ;RemoteCan.c: 437: TRISD = 0x00;
  2459  01552C  0E00               	movlw	0
  2460  01552E  6E95               	movwf	3989,c	;volatile
  2461                           
  2462                           ;RemoteCan.c: 438: LATE = 0x00;
  2463  015530  0E00               	movlw	0
  2464  015532  6E8D               	movwf	3981,c	;volatile
  2465                           
  2466                           ;RemoteCan.c: 439: TRISE = 0x00;
  2467  015534  0E00               	movlw	0
  2468  015536  6E96               	movwf	3990,c	;volatile
  2469                           
  2470                           ;RemoteCan.c: 441: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2471  015538  0E06               	movlw	6
  2472  01553A  0100               	movlb	0	; () banked
  2473  01553C  6F7D               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2474  01553E  0E05               	movlw	5
  2475  015540  0100               	movlb	0	; () banked
  2476  015542  6F7E               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2477  015544  0E01               	movlw	1
  2478  015546  0100               	movlb	0	; () banked
  2479  015548  6F7F               	movwf	CANInitialize@SJW& (0+255),b
  2480  01554A  0E03               	movlw	3
  2481  01554C  0100               	movlb	0	; () banked
  2482  01554E  6F80               	movwf	CANInitialize@BRP& (0+255),b
  2483  015550  0E9D               	movlw	157
  2484  015552  0100               	movlb	0	; () banked
  2485  015554  6F81               	movwf	CANInitialize@flags& (0+255),b
  2486  015556  0E04               	movlw	4
  2487  015558  ECE9  F0A4         	call	_CANInitialize
  2488                           
  2489                           ;RemoteCan.c: 445: PIR2bits.TMR3IF = 0;
  2490  01555C  92A1               	bcf	4001,1,c	;volatile
  2491                           
  2492                           ;RemoteCan.c: 446: PIR3bits.RXB1IF = 0;
  2493  01555E  92A4               	bcf	4004,1,c	;volatile
  2494                           
  2495                           ;RemoteCan.c: 447: PIR3bits.RXB0IF = 0;
  2496  015560  90A4               	bcf	4004,0,c	;volatile
  2497                           
  2498                           ;RemoteCan.c: 450: RCONbits.IPEN = 1;
  2499  015562  8ED0               	bsf	4048,7,c	;volatile
  2500                           
  2501                           ;RemoteCan.c: 451: IPR3bits.RXB1IP = 1;
  2502  015564  82A5               	bsf	4005,1,c	;volatile
  2503                           
  2504                           ;RemoteCan.c: 452: IPR3bits.RXB0IP = 1;
  2505  015566  80A5               	bsf	4005,0,c	;volatile
  2506                           
  2507                           ;RemoteCan.c: 453: IPR2bits.TMR3IP = 0;
  2508  015568  92A2               	bcf	4002,1,c	;volatile
  2509                           
  2510                           ;RemoteCan.c: 456: ADCON1 = 0b00001101;
  2511  01556A  0E0D               	movlw	13
  2512  01556C  6EC1               	movwf	4033,c	;volatile
  2513                           
  2514                           ;RemoteCan.c: 457: ADCON0bits.CHS2 = 0;
  2515  01556E  98C2               	bcf	4034,4,c	;volatile
  2516                           
  2517                           ;RemoteCan.c: 458: ADCON0bits.CHS1 = 0;
  2518  015570  96C2               	bcf	4034,3,c	;volatile
  2519                           
  2520                           ;RemoteCan.c: 459: ADCON0bits.CHS0 = 0;
  2521  015572  94C2               	bcf	4034,2,c	;volatile
  2522                           
  2523                           ;RemoteCan.c: 460: ADCON2bits.ACQT2 = 1;
  2524  015574  8AC0               	bsf	4032,5,c	;volatile
  2525                           
  2526                           ;RemoteCan.c: 461: ADCON2bits.ACQT1 = 1;
  2527  015576  88C0               	bsf	4032,4,c	;volatile
  2528                           
  2529                           ;RemoteCan.c: 462: ADCON2bits.ACQT0 = 0;
  2530  015578  96C0               	bcf	4032,3,c	;volatile
  2531                           
  2532                           ;RemoteCan.c: 463: ADCON2bits.ADCS2 = 1;
  2533  01557A  84C0               	bsf	4032,2,c	;volatile
  2534                           
  2535                           ;RemoteCan.c: 464: ADCON2bits.ADCS1 = 0;
  2536  01557C  92C0               	bcf	4032,1,c	;volatile
  2537                           
  2538                           ;RemoteCan.c: 465: ADCON2bits.ADCS0 = 1;
  2539  01557E  80C0               	bsf	4032,0,c	;volatile
  2540                           
  2541                           ;RemoteCan.c: 466: ADCON2bits.ADFM = 0;
  2542  015580  9EC0               	bcf	4032,7,c	;volatile
  2543                           
  2544                           ;RemoteCan.c: 467: ADCON0bits.ADON = 1;
  2545  015582  80C2               	bsf	4034,0,c	;volatile
  2546                           
  2547                           ;RemoteCan.c: 470: LCD_initialize(16);
  2548  015584  0E10               	movlw	16
  2549  015586  EC27  F0A8         	call	_LCD_initialize
  2550                           
  2551                           ;RemoteCan.c: 472: LCD_clear();
  2552  01558A  EC7B  F0AE         	call	_LCD_clear	;wreg free
  2553                           
  2554                           ;RemoteCan.c: 473: LCD_goto_line(1);
  2555  01558E  0E01               	movlw	1
  2556  015590  EC12  F0AA         	call	_LCD_goto_line
  2557                           
  2558                           ;RemoteCan.c: 474: LCD_write_message("Wait...");
  2559  015594  0EDA               	movlw	low STR_15
  2560  015596  0100               	movlb	0	; () banked
  2561  015598  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  2562  01559A  0EFF               	movlw	high STR_15
  2563  01559C  0100               	movlb	0	; () banked
  2564  01559E  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2565  0155A0  EC48  F0AE         	call	_LCD_write_message	;wreg free
  2566                           
  2567                           ;RemoteCan.c: 475: delay_ms(300);
  2568  0155A4  0E01               	movlw	1
  2569  0155A6  0100               	movlb	0	; () banked
  2570  0155A8  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2571  0155AA  0E2C               	movlw	44
  2572  0155AC  6F75               	movwf	delay_ms@value_ms& (0+255),b
  2573  0155AE  ECF4  F0AD         	call	_delay_ms	;wreg free
  2574                           
  2575                           ;RemoteCan.c: 477: PORTDbits.RD2 = 0;
  2576  0155B2  9483               	bcf	3971,2,c	;volatile
  2577                           
  2578                           ;RemoteCan.c: 478: PORTDbits.RD3 = 0;
  2579  0155B4  9683               	bcf	3971,3,c	;volatile
  2580                           
  2581                           ;RemoteCan.c: 481: TMR3H = 0x63;
  2582  0155B6  0E63               	movlw	99
  2583  0155B8  6EB3               	movwf	4019,c	;volatile
  2584                           
  2585                           ;RemoteCan.c: 482: TMR3L = 0xC0;
  2586  0155BA  0EC0               	movlw	192
  2587  0155BC  6EB2               	movwf	4018,c	;volatile
  2588                           
  2589                           ;RemoteCan.c: 485: PIE3bits.RXB1IE = 1;
  2590  0155BE  82A3               	bsf	4003,1,c	;volatile
  2591                           
  2592                           ;RemoteCan.c: 486: PIE3bits.RXB0IE = 1;
  2593  0155C0  80A3               	bsf	4003,0,c	;volatile
  2594                           
  2595                           ;RemoteCan.c: 487: PIE2bits.TMR3IE = 1;
  2596  0155C2  82A0               	bsf	4000,1,c	;volatile
  2597                           
  2598                           ;RemoteCan.c: 490: T3CON = 0x01;
  2599  0155C4  0E01               	movlw	1
  2600  0155C6  6EB1               	movwf	4017,c	;volatile
  2601                           
  2602                           ;RemoteCan.c: 491: LCD_clear();
  2603  0155C8  EC7B  F0AE         	call	_LCD_clear	;wreg free
  2604                           
  2605                           ;RemoteCan.c: 492: INTCONbits.GIEH = 1;
  2606  0155CC  8EF2               	bsf	intcon,7,c	;volatile
  2607                           
  2608                           ;RemoteCan.c: 493: INTCONbits.GIEL = 1;
  2609  0155CE  8CF2               	bsf	intcon,6,c	;volatile
  2610  0155D0  0012               	return		;funcret
  2611  0155D2                     __end_of_board_initialization:
  2612                           	opt stack 0
  2613                           tblptru	equ	0xFF8
  2614                           tblptrh	equ	0xFF7
  2615                           tblptrl	equ	0xFF6
  2616                           tablat	equ	0xFF5
  2617                           intcon	equ	0xFF2
  2618                           postinc0	equ	0xFEE
  2619                           wreg	equ	0xFE8
  2620                           status	equ	0xFD8
  2621                           
  2622 ;; *************** function _CANInitialize *****************
  2623 ;; Defined at:
  2624 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  propSeg         1    wreg     unsigned char 
  2627 ;;  phaseSeg1       1   29[BANK0 ] unsigned char 
  2628 ;;  phaseSeg2       1   30[BANK0 ] unsigned char 
  2629 ;;  SJW             1   31[BANK0 ] unsigned char 
  2630 ;;  BRP             1   32[BANK0 ] unsigned char 
  2631 ;;  flags           1   33[BANK0 ] enum E16887
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  propSeg         1   38[BANK0 ] unsigned char 
  2634 ;;  FilterConfig    1   40[BANK0 ] unsigned char 
  2635 ;;  FilterConfig    1   39[BANK0 ] unsigned char 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;		None               void
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0, cstack
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2645 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2646 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2647 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2648 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2649 ;;Total ram usage:       12 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:    4
  2652 ;; This function calls:
  2653 ;;		_CANOperationMode
  2654 ;;		_CANSetFilter
  2655 ;;		_CANSetMask
  2656 ;; This function is called by:
  2657 ;;		_board_initialization
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text2
  2662  0149D2                     __ptext2:
  2663                           	opt stack 0
  2664  0149D2                     _CANInitialize:
  2665                           	opt stack 25
  2666                           
  2667                           ;incstack = 0
  2668                           ;CANInitialize@propSeg stored from wreg
  2669  0149D2  0100               	movlb	0	; () banked
  2670  0149D4  6F86               	movwf	CANInitialize@propSeg& (0+255),b
  2671                           
  2672                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2673                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2674                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2675  0149D6  0E80               	movlw	128
  2676  0149D8  EC26  F0AF         	call	_CANOperationMode
  2677                           
  2678                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2679  0149DC  0E00               	movlw	0
  2680  0149DE  6E70               	movwf	3952,c	;volatile
  2681                           
  2682                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2683  0149E0  0E00               	movlw	0
  2684  0149E2  6E71               	movwf	3953,c	;volatile
  2685                           
  2686                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2687  0149E4  0E00               	movlw	0
  2688  0149E6  6E72               	movwf	3954,c	;volatile
  2689                           
  2690                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2691  0149E8  0100               	movlb	0	; () banked
  2692  0149EA  417F               	rrncf	CANInitialize@SJW& (0+255),w,b
  2693  0149EC  42E8               	rrncf	wreg,f,c
  2694  0149EE  0BC0               	andlw	192
  2695  0149F0  0100               	movlb	0	; () banked
  2696  0149F2  6F7F               	movwf	CANInitialize@SJW& (0+255),b
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  2700  0149F4  0100               	movlb	0	; () banked
  2701  0149F6  517F               	movf	CANInitialize@SJW& (0+255),w,b
  2702  0149F8  1270               	iorwf	3952,f,c	;volatile
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  2706  0149FA  0100               	movlb	0	; () banked
  2707  0149FC  5180               	movf	CANInitialize@BRP& (0+255),w,b
  2708  0149FE  1270               	iorwf	3952,f,c	;volatile
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  2712  014A00  0100               	movlb	0	; () banked
  2713  014A02  5186               	movf	CANInitialize@propSeg& (0+255),w,b
  2714  014A04  1271               	iorwf	3953,f,c	;volatile
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2718  014A06  0100               	movlb	0	; () banked
  2719  014A08  397D               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2720  014A0A  42E8               	rrncf	wreg,f,c
  2721  014A0C  0BF8               	andlw	248
  2722  014A0E  0100               	movlb	0	; () banked
  2723  014A10  6F7D               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2727  014A12  0100               	movlb	0	; () banked
  2728  014A14  517D               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2729  014A16  1271               	iorwf	3953,f,c	;volatile
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2733  014A18  0100               	movlb	0	; () banked
  2734  014A1A  A581               	btfss	CANInitialize@flags& (0+255),2,b
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  2738  014A1C  8C71               	bsf	3953,6,c	;volatile
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2742  014A1E  0100               	movlb	0	; () banked
  2743  014A20  B181               	btfsc	CANInitialize@flags& (0+255),0,b
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2747  014A22  8E71               	bsf	3953,7,c	;volatile
  2748                           
  2749                           ; BSR set to: 0
  2750                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2751                           
  2752                           ; BSR set to: 0
  2753  014A24  0100               	movlb	0	; () banked
  2754  014A26  517E               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2755  014A28  1272               	iorwf	3954,f,c	;volatile
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2759  014A2A  0100               	movlb	0	; () banked
  2760  014A2C  B381               	btfsc	CANInitialize@flags& (0+255),1,b
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2764  014A2E  8C72               	bsf	3954,6,c	;volatile
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2768                           
  2769                           ; BSR set to: 0
  2770  014A30  0100               	movlb	0	; () banked
  2771  014A32  5181               	movf	CANInitialize@flags& (0+255),w,b
  2772  014A34  0B60               	andlw	96
  2773  014A36  6E60               	movwf	3936,c	;volatile
  2774                           
  2775                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2776  014A38  0100               	movlb	0	; () banked
  2777  014A3A  5181               	movf	CANInitialize@flags& (0+255),w,b
  2778  014A3C  0B10               	andlw	16
  2779  014A3E  0AFF               	xorlw	255
  2780  014A40  B4D8               	btfsc	status,2,c
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2784  014A42  8460               	bsf	3936,2,c	;volatile
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  2788  014A44  CF60 FF50          	movff	3936,3920	;volatile
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2792  014A48  0E00               	movlw	0
  2793  014A4A  0100               	movlb	0	; () banked
  2794  014A4C  6F6F               	movwf	CANSetMask@mask& (0+255),b
  2795  014A4E  0E00               	movlw	0
  2796  014A50  6F70               	movwf	(CANSetMask@mask+1)& (0+255),b
  2797  014A52  0E00               	movlw	0
  2798  014A54  6F71               	movwf	(CANSetMask@mask+2)& (0+255),b
  2799  014A56  0E00               	movlw	0
  2800  014A58  6F72               	movwf	(CANSetMask@mask+3)& (0+255),b
  2801  014A5A  0EF7               	movlw	247
  2802  014A5C  0100               	movlb	0	; () banked
  2803  014A5E  6F73               	movwf	CANSetMask@type& (0+255),b
  2804  014A60  0E01               	movlw	1
  2805  014A62  ECC8  F09F         	call	_CANSetMask
  2806                           
  2807                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2808  014A66  0E00               	movlw	0
  2809  014A68  0100               	movlb	0	; () banked
  2810  014A6A  6F6F               	movwf	CANSetMask@mask& (0+255),b
  2811  014A6C  0E00               	movlw	0
  2812  014A6E  6F70               	movwf	(CANSetMask@mask+1)& (0+255),b
  2813  014A70  0E00               	movlw	0
  2814  014A72  6F71               	movwf	(CANSetMask@mask+2)& (0+255),b
  2815  014A74  0E00               	movlw	0
  2816  014A76  6F72               	movwf	(CANSetMask@mask+3)& (0+255),b
  2817  014A78  0EF7               	movlw	247
  2818  014A7A  0100               	movlb	0	; () banked
  2819  014A7C  6F73               	movwf	CANSetMask@type& (0+255),b
  2820  014A7E  0E02               	movlw	2
  2821  014A80  ECC8  F09F         	call	_CANSetMask
  2822                           
  2823                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2824  014A84  D00F               	goto	l5810
  2825  014A86                     l5804:
  2826                           
  2827                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2828  014A86  0EF7               	movlw	247
  2829  014A88  0100               	movlb	0	; () banked
  2830  014A8A  6F87               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2831  014A8C  D007               	goto	l5806
  2832  014A8E                     l370:
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2836  014A8E  0100               	movlb	0	; () banked
  2837  014A90  6987               	setf	CANInitialize@FilterConfig1& (0+255),b
  2838                           
  2839                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2840  014A92  0100               	movlb	0	; () banked
  2841  014A94  6988               	setf	CANInitialize@FilterConfig2& (0+255),b
  2842                           
  2843                           ;inc\CANlib.h: 273: break;
  2844  014A96  D028               	goto	l5812
  2845  014A98                     l371:
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2849  014A98  0100               	movlb	0	; () banked
  2850  014A9A  6987               	setf	CANInitialize@FilterConfig1& (0+255),b
  2851  014A9C                     l5806:
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2855  014A9C  0EF7               	movlw	247
  2856  014A9E  0100               	movlb	0	; () banked
  2857  014AA0  6F88               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;inc\CANlib.h: 278: }
  2861                           
  2862                           ;inc\CANlib.h: 277: break;
  2863  014AA2  D022               	goto	l5812
  2864  014AA4                     l5810:
  2865  014AA4  0E9F               	movlw	159
  2866  014AA6  0100               	movlb	0	; () banked
  2867  014AA8  6F82               	movwf	??_CANInitialize& (0+255),b
  2868  014AAA  0EFF               	movlw	255
  2869  014AAC  0100               	movlb	0	; () banked
  2870  014AAE  6F83               	movwf	(??_CANInitialize+1)& (0+255),b
  2871  014AB0  0100               	movlb	0	; () banked
  2872  014AB2  5181               	movf	CANInitialize@flags& (0+255),w,b
  2873  014AB4  0B60               	andlw	96
  2874  014AB6  0100               	movlb	0	; () banked
  2875  014AB8  6F84               	movwf	(??_CANInitialize+2)& (0+255),b
  2876  014ABA  6B85               	clrf	(??_CANInitialize+3)& (0+255),b
  2877  014ABC  0100               	movlb	0	; () banked
  2878  014ABE  5182               	movf	??_CANInitialize& (0+255),w,b
  2879  014AC0  0100               	movlb	0	; () banked
  2880  014AC2  1384               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2881  014AC4  0100               	movlb	0	; () banked
  2882  014AC6  5183               	movf	(??_CANInitialize+1)& (0+255),w,b
  2883  014AC8  0100               	movlb	0	; () banked
  2884  014ACA  1385               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2885                           
  2886                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2887                           ; Switch size 1, requested type "space"
  2888                           ; Number of cases is 1, Range of values is 0 to 0
  2889                           ; switch strategies available:
  2890                           ; Name         Instructions Cycles
  2891                           ; simple_byte            4     3 (average)
  2892                           ;	Chosen strategy is simple_byte
  2893  014ACC  0100               	movlb	0	; () banked
  2894  014ACE  5185               	movf	(??_CANInitialize+3)& (0+255),w,b
  2895  014AD0  0A00               	xorlw	0	; case 0
  2896  014AD2  A4D8               	btfss	status,2,c
  2897  014AD4  D7E1               	goto	l371
  2898                           
  2899                           ; BSR set to: 0
  2900                           ; Switch size 1, requested type "space"
  2901                           ; Number of cases is 2, Range of values is 191 to 223
  2902                           ; switch strategies available:
  2903                           ; Name         Instructions Cycles
  2904                           ; simple_byte            7     4 (average)
  2905                           ;	Chosen strategy is simple_byte
  2906  014AD6  0100               	movlb	0	; () banked
  2907  014AD8  5184               	movf	(??_CANInitialize+2)& (0+255),w,b
  2908  014ADA  0ABF               	xorlw	191	; case 191
  2909  014ADC  B4D8               	btfsc	status,2,c
  2910  014ADE  D7D7               	goto	l370
  2911  014AE0  0A60               	xorlw	96	; case 223
  2912  014AE2  B4D8               	btfsc	status,2,c
  2913  014AE4  D7D0               	goto	l5804
  2914  014AE6  D7D8               	goto	l371
  2915  014AE8                     l5812:
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2919  014AE8  0E00               	movlw	0
  2920  014AEA  0100               	movlb	0	; () banked
  2921  014AEC  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  2922  014AEE  0E00               	movlw	0
  2923  014AF0  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2924  014AF2  0E00               	movlw	0
  2925  014AF4  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2926  014AF6  0E00               	movlw	0
  2927  014AF8  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2928  014AFA  C087  F073         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2929  014AFE  0E00               	movlw	0
  2930  014B00  EC00  F080         	call	_CANSetFilter
  2931                           
  2932                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2933  014B04  0E00               	movlw	0
  2934  014B06  0100               	movlb	0	; () banked
  2935  014B08  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  2936  014B0A  0E00               	movlw	0
  2937  014B0C  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2938  014B0E  0E00               	movlw	0
  2939  014B10  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2940  014B12  0E00               	movlw	0
  2941  014B14  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2942  014B16  C087  F073         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2943  014B1A  0E01               	movlw	1
  2944  014B1C  EC00  F080         	call	_CANSetFilter
  2945                           
  2946                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2947  014B20  0E00               	movlw	0
  2948  014B22  0100               	movlb	0	; () banked
  2949  014B24  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  2950  014B26  0E00               	movlw	0
  2951  014B28  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2952  014B2A  0E00               	movlw	0
  2953  014B2C  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2954  014B2E  0E00               	movlw	0
  2955  014B30  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2956  014B32  C088  F073         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2957  014B36  0E02               	movlw	2
  2958  014B38  EC00  F080         	call	_CANSetFilter
  2959                           
  2960                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2961  014B3C  0E00               	movlw	0
  2962  014B3E  0100               	movlb	0	; () banked
  2963  014B40  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  2964  014B42  0E00               	movlw	0
  2965  014B44  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2966  014B46  0E00               	movlw	0
  2967  014B48  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2968  014B4A  0E00               	movlw	0
  2969  014B4C  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2970  014B4E  C088  F073         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2971  014B52  0E03               	movlw	3
  2972  014B54  EC00  F080         	call	_CANSetFilter
  2973                           
  2974                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2975  014B58  0E00               	movlw	0
  2976  014B5A  0100               	movlb	0	; () banked
  2977  014B5C  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  2978  014B5E  0E00               	movlw	0
  2979  014B60  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2980  014B62  0E00               	movlw	0
  2981  014B64  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2982  014B66  0E00               	movlw	0
  2983  014B68  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2984  014B6A  C088  F073         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2985  014B6E  0E04               	movlw	4
  2986  014B70  EC00  F080         	call	_CANSetFilter
  2987                           
  2988                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2989  014B74  0E00               	movlw	0
  2990  014B76  0100               	movlb	0	; () banked
  2991  014B78  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  2992  014B7A  0E00               	movlw	0
  2993  014B7C  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2994  014B7E  0E00               	movlw	0
  2995  014B80  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2996  014B82  0E00               	movlw	0
  2997  014B84  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2998  014B86  C088  F073         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2999  014B8A  0E05               	movlw	5
  3000  014B8C  EC00  F080         	call	_CANSetFilter
  3001                           
  3002                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3003  014B90  0E00               	movlw	0
  3004  014B92  EC26  F0AF         	call	_CANOperationMode
  3005  014B96  0012               	return		;funcret
  3006  014B98                     __end_of_CANInitialize:
  3007                           	opt stack 0
  3008                           tblptru	equ	0xFF8
  3009                           tblptrh	equ	0xFF7
  3010                           tblptrl	equ	0xFF6
  3011                           tablat	equ	0xFF5
  3012                           intcon	equ	0xFF2
  3013                           postinc0	equ	0xFEE
  3014                           wreg	equ	0xFE8
  3015                           status	equ	0xFD8
  3016                           
  3017 ;; *************** function _CANSetMask *****************
  3018 ;; Defined at:
  3019 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  numBuffer       1    wreg     enum E16921
  3022 ;;  mask            4   15[BANK0 ] unsigned long 
  3023 ;;  type            1   19[BANK0 ] enum E16887
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  numBuffer       1   24[BANK0 ] enum E16921
  3026 ;;  tamp            4   25[BANK0 ] unsigned long 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;		None               void
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3036 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3037 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3038 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3039 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3040 ;;Total ram usage:       14 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    3
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_CANInitialize
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text3
  3051  013F90                     __ptext3:
  3052                           	opt stack 0
  3053  013F90                     _CANSetMask:
  3054                           	opt stack 25
  3055                           
  3056                           ;incstack = 0
  3057                           ;CANSetMask@numBuffer stored from wreg
  3058  013F90  0100               	movlb	0	; () banked
  3059  013F92  6F78               	movwf	CANSetMask@numBuffer& (0+255),b
  3060                           
  3061                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3062  013F94  0100               	movlb	0	; () banked
  3063  013F96  0578               	decf	CANSetMask@numBuffer& (0+255),w,b
  3064  013F98  A4D8               	btfss	status,2,c
  3065  013F9A  D056               	goto	l4982
  3066                           
  3067                           ; BSR set to: 0
  3068  013F9C  0100               	movlb	0	; () banked
  3069  013F9E  2973               	incf	CANSetMask@type& (0+255),w,b
  3070  013FA0  A4D8               	btfss	status,2,c
  3071  013FA2  D052               	goto	l4982
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;inc\CANlib.h: 644: {
  3075                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3076  013FA4  C06F  F074         	movff	CANSetMask@mask,??_CANSetMask
  3077  013FA8  C070  F075         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3078  013FAC  C071  F076         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3079  013FB0  C072  F077         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3080  013FB4  0E04               	movlw	4
  3081  013FB6  D006               	goto	u5570
  3082  013FB8                     u5575:
  3083  013FB8  0100               	movlb	0	; () banked
  3084  013FBA  90D8               	bcf	status,0,c
  3085  013FBC  3377               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3086  013FBE  3376               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3087  013FC0  3375               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3088  013FC2  3374               	rrcf	??_CANSetMask& (0+255),f,b
  3089  013FC4                     u5570:
  3090  013FC4  2EE8               	decfsz	wreg,f,c
  3091  013FC6  D7F8               	goto	u5575
  3092  013FC8  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3093  013FCC  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3094  013FD0  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3095  013FD4  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3099  013FD8  0100               	movlb	0	; () banked
  3100  013FDA  5179               	movf	CANSetMask@tamp& (0+255),w,b
  3101  013FDC  0100               	movlb	0	; () banked
  3102  013FDE  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3103  013FE0  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3104  013FE2  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3105  013FE4  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3109  013FE6  C079  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3113  013FEA  0E07               	movlw	7
  3114  013FEC  0100               	movlb	0	; () banked
  3115  013FEE  156F               	andwf	CANSetMask@mask& (0+255),w,b
  3116  013FF0  0100               	movlb	0	; () banked
  3117  013FF2  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3118  013FF4  0E00               	movlw	0
  3119  013FF6  0100               	movlb	0	; () banked
  3120  013FF8  1570               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3121  013FFA  0100               	movlb	0	; () banked
  3122  013FFC  6F7A               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3123  013FFE  0E00               	movlw	0
  3124  014000  0100               	movlb	0	; () banked
  3125  014002  1571               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3126  014004  0100               	movlb	0	; () banked
  3127  014006  6F7B               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3128  014008  0E00               	movlw	0
  3129  01400A  0100               	movlb	0	; () banked
  3130  01400C  1572               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3131  01400E  0100               	movlb	0	; () banked
  3132  014010  6F7C               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3136  014012  C079  F074         	movff	CANSetMask@tamp,??_CANSetMask
  3137  014016  C07A  F075         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3138  01401A  C07B  F076         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3139  01401E  C07C  F077         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3140  014022  0E05               	movlw	5
  3141  014024                     u5585:
  3142  014024  90D8               	bcf	status,0,c
  3143  014026  0100               	movlb	0	; () banked
  3144  014028  3774               	rlcf	??_CANSetMask& (0+255),f,b
  3145  01402A  3775               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3146  01402C  3776               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3147  01402E  3777               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3148  014030  2EE8               	decfsz	wreg,f,c
  3149  014032  D7F8               	goto	u5585
  3150  014034  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3151  014038  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3152  01403C  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3153  014040  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3157  014044  C079  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3158  014048                     l4982:
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;inc\CANlib.h: 652: }
  3162                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3163  014048  0E02               	movlw	2
  3164  01404A  0100               	movlb	0	; () banked
  3165  01404C  1978               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3166  01404E  A4D8               	btfss	status,2,c
  3167  014050  D056               	goto	l4998
  3168                           
  3169                           ; BSR set to: 0
  3170  014052  0100               	movlb	0	; () banked
  3171  014054  2973               	incf	CANSetMask@type& (0+255),w,b
  3172  014056  A4D8               	btfss	status,2,c
  3173  014058  D052               	goto	l4998
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;inc\CANlib.h: 655: {
  3177                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3178  01405A  C06F  F074         	movff	CANSetMask@mask,??_CANSetMask
  3179  01405E  C070  F075         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3180  014062  C071  F076         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3181  014066  C072  F077         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3182  01406A  0E04               	movlw	4
  3183  01406C  D006               	goto	u5610
  3184  01406E                     u5615:
  3185  01406E  0100               	movlb	0	; () banked
  3186  014070  90D8               	bcf	status,0,c
  3187  014072  3377               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3188  014074  3376               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3189  014076  3375               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3190  014078  3374               	rrcf	??_CANSetMask& (0+255),f,b
  3191  01407A                     u5610:
  3192  01407A  2EE8               	decfsz	wreg,f,c
  3193  01407C  D7F8               	goto	u5615
  3194  01407E  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3195  014082  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3196  014086  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3197  01408A  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3201  01408E  0100               	movlb	0	; () banked
  3202  014090  5179               	movf	CANSetMask@tamp& (0+255),w,b
  3203  014092  0100               	movlb	0	; () banked
  3204  014094  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3205  014096  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3206  014098  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3207  01409A  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3211  01409C  C079  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3215  0140A0  0E07               	movlw	7
  3216  0140A2  0100               	movlb	0	; () banked
  3217  0140A4  156F               	andwf	CANSetMask@mask& (0+255),w,b
  3218  0140A6  0100               	movlb	0	; () banked
  3219  0140A8  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3220  0140AA  0E00               	movlw	0
  3221  0140AC  0100               	movlb	0	; () banked
  3222  0140AE  1570               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3223  0140B0  0100               	movlb	0	; () banked
  3224  0140B2  6F7A               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3225  0140B4  0E00               	movlw	0
  3226  0140B6  0100               	movlb	0	; () banked
  3227  0140B8  1571               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3228  0140BA  0100               	movlb	0	; () banked
  3229  0140BC  6F7B               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3230  0140BE  0E00               	movlw	0
  3231  0140C0  0100               	movlb	0	; () banked
  3232  0140C2  1572               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3233  0140C4  0100               	movlb	0	; () banked
  3234  0140C6  6F7C               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3238  0140C8  C079  F074         	movff	CANSetMask@tamp,??_CANSetMask
  3239  0140CC  C07A  F075         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3240  0140D0  C07B  F076         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3241  0140D4  C07C  F077         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3242  0140D8  0E05               	movlw	5
  3243  0140DA                     u5625:
  3244  0140DA  90D8               	bcf	status,0,c
  3245  0140DC  0100               	movlb	0	; () banked
  3246  0140DE  3774               	rlcf	??_CANSetMask& (0+255),f,b
  3247  0140E0  3775               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3248  0140E2  3776               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3249  0140E4  3777               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3250  0140E6  2EE8               	decfsz	wreg,f,c
  3251  0140E8  D7F8               	goto	u5625
  3252  0140EA  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3253  0140EE  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3254  0140F2  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3255  0140F6  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3259  0140FA  C079  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3260  0140FE                     l4998:
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;inc\CANlib.h: 663: }
  3264                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3265  0140FE  0100               	movlb	0	; () banked
  3266  014100  0578               	decf	CANSetMask@numBuffer& (0+255),w,b
  3267  014102  A4D8               	btfss	status,2,c
  3268  014104  D087               	goto	l5030
  3269                           
  3270                           ; BSR set to: 0
  3271  014106  0EF7               	movlw	247
  3272  014108  0100               	movlb	0	; () banked
  3273  01410A  1973               	xorwf	CANSetMask@type& (0+255),w,b
  3274  01410C  A4D8               	btfss	status,2,c
  3275  01410E  D082               	goto	l5030
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;inc\CANlib.h: 666: {
  3279                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3280  014110  0100               	movlb	0	; () banked
  3281  014112  516F               	movf	CANSetMask@mask& (0+255),w,b
  3282  014114  0100               	movlb	0	; () banked
  3283  014116  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3284  014118  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3285  01411A  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3286  01411C  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3290  01411E  C079  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3294  014122  0E00               	movlw	0
  3295  014124  0100               	movlb	0	; () banked
  3296  014126  156F               	andwf	CANSetMask@mask& (0+255),w,b
  3297  014128  0100               	movlb	0	; () banked
  3298  01412A  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3299  01412C  0EFF               	movlw	255
  3300  01412E  0100               	movlb	0	; () banked
  3301  014130  1570               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3302  014132  0100               	movlb	0	; () banked
  3303  014134  6F7A               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3304  014136  0E00               	movlw	0
  3305  014138  0100               	movlb	0	; () banked
  3306  01413A  1571               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3307  01413C  0100               	movlb	0	; () banked
  3308  01413E  6F7B               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3309  014140  0E00               	movlw	0
  3310  014142  0100               	movlb	0	; () banked
  3311  014144  1572               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3312  014146  0100               	movlb	0	; () banked
  3313  014148  6F7C               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3317  01414A  C079  F074         	movff	CANSetMask@tamp,??_CANSetMask
  3318  01414E  C07A  F075         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3319  014152  C07B  F076         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3320  014156  C07C  F077         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3321  01415A  C075  F074         	movff	??_CANSetMask+1,??_CANSetMask
  3322  01415E  C076  F075         	movff	??_CANSetMask+2,??_CANSetMask+1
  3323  014162  C077  F076         	movff	??_CANSetMask+3,??_CANSetMask+2
  3324  014166  0100               	movlb	0	; () banked
  3325  014168  6B77               	clrf	(??_CANSetMask+3)& (0+255),b
  3326  01416A  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3327  01416E  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3328  014172  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3329  014176  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3333  01417A  C079  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3337  01417E  0100               	movlb	0	; () banked
  3338  014180  A171               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3339  014182  D003               	goto	l444
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3343  014184  010F               	movlb	15	; () banked
  3344  014186  8119               	bsf	25,0,b	;volatile
  3345  014188  D002               	goto	l445
  3346  01418A                     l444:
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;inc\CANlib.h: 676: else
  3350                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3351  01418A  010F               	movlb	15	; () banked
  3352  01418C  9119               	bcf	25,0,b	;volatile
  3353  01418E                     l445:
  3354                           
  3355                           ; BSR set to: 15
  3356                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3357  01418E  0100               	movlb	0	; () banked
  3358  014190  A371               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3359  014192  D003               	goto	l446
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3363  014194  010F               	movlb	15	; () banked
  3364  014196  8319               	bsf	25,1,b	;volatile
  3365  014198  D002               	goto	l447
  3366  01419A                     l446:
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;inc\CANlib.h: 681: else
  3370                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3371  01419A  010F               	movlb	15	; () banked
  3372  01419C  9319               	bcf	25,1,b	;volatile
  3373  01419E                     l447:
  3374                           
  3375                           ; BSR set to: 15
  3376                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3377  01419E  0100               	movlb	0	; () banked
  3378  0141A0  A571               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3379  0141A2  D003               	goto	l448
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3383  0141A4  010F               	movlb	15	; () banked
  3384  0141A6  8B19               	bsf	25,5,b	;volatile
  3385  0141A8  D002               	goto	l449
  3386  0141AA                     l448:
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;inc\CANlib.h: 686: else
  3390                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3391  0141AA  010F               	movlb	15	; () banked
  3392  0141AC  9B19               	bcf	25,5,b	;volatile
  3393  0141AE                     l449:
  3394                           
  3395                           ; BSR set to: 15
  3396                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3397  0141AE  0100               	movlb	0	; () banked
  3398  0141B0  A771               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3399  0141B2  D003               	goto	l450
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3403  0141B4  010F               	movlb	15	; () banked
  3404  0141B6  8D19               	bsf	25,6,b	;volatile
  3405  0141B8  D002               	goto	l451
  3406  0141BA                     l450:
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;inc\CANlib.h: 691: else
  3410                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3411  0141BA  010F               	movlb	15	; () banked
  3412  0141BC  9D19               	bcf	25,6,b	;volatile
  3413  0141BE                     l451:
  3414                           
  3415                           ; BSR set to: 15
  3416                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3417  0141BE  0100               	movlb	0	; () banked
  3418  0141C0  A971               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3419  0141C2  D003               	goto	l452
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3423  0141C4  010F               	movlb	15	; () banked
  3424  0141C6  8F19               	bsf	25,7,b	;volatile
  3425  0141C8  D002               	goto	l5024
  3426  0141CA                     l452:
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;inc\CANlib.h: 696: else
  3430                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3431  0141CA  010F               	movlb	15	; () banked
  3432  0141CC  9F19               	bcf	25,7,b	;volatile
  3433  0141CE                     l5024:
  3434                           
  3435                           ; BSR set to: 15
  3436                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3437  0141CE  C06F  F074         	movff	CANSetMask@mask,??_CANSetMask
  3438  0141D2  C070  F075         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3439  0141D6  C071  F076         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3440  0141DA  C072  F077         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3441  0141DE  0E16               	movlw	22
  3442  0141E0  D006               	goto	u5700
  3443  0141E2                     u5705:
  3444  0141E2  0100               	movlb	0	; () banked
  3445  0141E4  90D8               	bcf	status,0,c
  3446  0141E6  3377               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3447  0141E8  3376               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3448  0141EA  3375               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3449  0141EC  3374               	rrcf	??_CANSetMask& (0+255),f,b
  3450  0141EE                     u5700:
  3451  0141EE  2EE8               	decfsz	wreg,f,c
  3452  0141F0  D7F8               	goto	u5705
  3453  0141F2  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3454  0141F6  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3455  0141FA  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3456  0141FE  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3460  014202  0100               	movlb	0	; () banked
  3461  014204  5179               	movf	CANSetMask@tamp& (0+255),w,b
  3462  014206  0100               	movlb	0	; () banked
  3463  014208  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3464  01420A  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3465  01420C  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3466  01420E  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3470  014210  C079  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3471  014214                     l5030:
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;inc\CANlib.h: 702: }
  3475                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3476  014214  0E02               	movlw	2
  3477  014216  0100               	movlb	0	; () banked
  3478  014218  1978               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3479  01421A  A4D8               	btfss	status,2,c
  3480  01421C  0012               	return	
  3481                           
  3482                           ; BSR set to: 0
  3483  01421E  0EF7               	movlw	247
  3484  014220  0100               	movlb	0	; () banked
  3485  014222  1973               	xorwf	CANSetMask@type& (0+255),w,b
  3486  014224  A4D8               	btfss	status,2,c
  3487  014226  0012               	return	
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;inc\CANlib.h: 705: {
  3491                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3492  014228  0100               	movlb	0	; () banked
  3493  01422A  516F               	movf	CANSetMask@mask& (0+255),w,b
  3494  01422C  0100               	movlb	0	; () banked
  3495  01422E  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3496  014230  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3497  014232  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3498  014234  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3502  014236  C079  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3506  01423A  0E00               	movlw	0
  3507  01423C  0100               	movlb	0	; () banked
  3508  01423E  156F               	andwf	CANSetMask@mask& (0+255),w,b
  3509  014240  0100               	movlb	0	; () banked
  3510  014242  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3511  014244  0EFF               	movlw	255
  3512  014246  0100               	movlb	0	; () banked
  3513  014248  1570               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3514  01424A  0100               	movlb	0	; () banked
  3515  01424C  6F7A               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3516  01424E  0E00               	movlw	0
  3517  014250  0100               	movlb	0	; () banked
  3518  014252  1571               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3519  014254  0100               	movlb	0	; () banked
  3520  014256  6F7B               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3521  014258  0E00               	movlw	0
  3522  01425A  0100               	movlb	0	; () banked
  3523  01425C  1572               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3524  01425E  0100               	movlb	0	; () banked
  3525  014260  6F7C               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3529  014262  C079  F074         	movff	CANSetMask@tamp,??_CANSetMask
  3530  014266  C07A  F075         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3531  01426A  C07B  F076         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3532  01426E  C07C  F077         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3533  014272  C075  F074         	movff	??_CANSetMask+1,??_CANSetMask
  3534  014276  C076  F075         	movff	??_CANSetMask+2,??_CANSetMask+1
  3535  01427A  C077  F076         	movff	??_CANSetMask+3,??_CANSetMask+2
  3536  01427E  0100               	movlb	0	; () banked
  3537  014280  6B77               	clrf	(??_CANSetMask+3)& (0+255),b
  3538  014282  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3539  014286  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3540  01428A  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3541  01428E  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3545  014292  C079  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3549  014296  0100               	movlb	0	; () banked
  3550  014298  A171               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3551  01429A  D003               	goto	l455
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3555  01429C  010F               	movlb	15	; () banked
  3556  01429E  811D               	bsf	29,0,b	;volatile
  3557  0142A0  D002               	goto	l456
  3558  0142A2                     l455:
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;inc\CANlib.h: 715: else
  3562                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3563  0142A2  010F               	movlb	15	; () banked
  3564  0142A4  911D               	bcf	29,0,b	;volatile
  3565  0142A6                     l456:
  3566                           
  3567                           ; BSR set to: 15
  3568                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3569  0142A6  0100               	movlb	0	; () banked
  3570  0142A8  A371               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3571  0142AA  D003               	goto	l457
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3575  0142AC  010F               	movlb	15	; () banked
  3576  0142AE  831D               	bsf	29,1,b	;volatile
  3577  0142B0  D002               	goto	l458
  3578  0142B2                     l457:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;inc\CANlib.h: 720: else
  3582                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3583  0142B2  010F               	movlb	15	; () banked
  3584  0142B4  931D               	bcf	29,1,b	;volatile
  3585  0142B6                     l458:
  3586                           
  3587                           ; BSR set to: 15
  3588                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3589  0142B6  0100               	movlb	0	; () banked
  3590  0142B8  A571               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3591  0142BA  D003               	goto	l459
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3595  0142BC  010F               	movlb	15	; () banked
  3596  0142BE  8B1D               	bsf	29,5,b	;volatile
  3597  0142C0  D002               	goto	l460
  3598  0142C2                     l459:
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;inc\CANlib.h: 725: else
  3602                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3603  0142C2  010F               	movlb	15	; () banked
  3604  0142C4  9B1D               	bcf	29,5,b	;volatile
  3605  0142C6                     l460:
  3606                           
  3607                           ; BSR set to: 15
  3608                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3609  0142C6  0100               	movlb	0	; () banked
  3610  0142C8  A771               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3611  0142CA  D003               	goto	l461
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3615  0142CC  010F               	movlb	15	; () banked
  3616  0142CE  8D1D               	bsf	29,6,b	;volatile
  3617  0142D0  D002               	goto	l462
  3618  0142D2                     l461:
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;inc\CANlib.h: 730: else
  3622                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3623  0142D2  010F               	movlb	15	; () banked
  3624  0142D4  9D1D               	bcf	29,6,b	;volatile
  3625  0142D6                     l462:
  3626                           
  3627                           ; BSR set to: 15
  3628                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3629  0142D6  0100               	movlb	0	; () banked
  3630  0142D8  A971               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3631  0142DA  D003               	goto	l463
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3635  0142DC  010F               	movlb	15	; () banked
  3636  0142DE  8F1D               	bsf	29,7,b	;volatile
  3637  0142E0  D002               	goto	l5056
  3638  0142E2                     l463:
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;inc\CANlib.h: 735: else
  3642                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3643  0142E2  010F               	movlb	15	; () banked
  3644  0142E4  9F1D               	bcf	29,7,b	;volatile
  3645  0142E6                     l5056:
  3646                           
  3647                           ; BSR set to: 15
  3648                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3649  0142E6  C06F  F074         	movff	CANSetMask@mask,??_CANSetMask
  3650  0142EA  C070  F075         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3651  0142EE  C071  F076         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3652  0142F2  C072  F077         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3653  0142F6  0E16               	movlw	22
  3654  0142F8  D006               	goto	u5780
  3655  0142FA                     u5785:
  3656  0142FA  0100               	movlb	0	; () banked
  3657  0142FC  90D8               	bcf	status,0,c
  3658  0142FE  3377               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3659  014300  3376               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3660  014302  3375               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3661  014304  3374               	rrcf	??_CANSetMask& (0+255),f,b
  3662  014306                     u5780:
  3663  014306  2EE8               	decfsz	wreg,f,c
  3664  014308  D7F8               	goto	u5785
  3665  01430A  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3666  01430E  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3667  014312  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3668  014316  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3672  01431A  0100               	movlb	0	; () banked
  3673  01431C  5179               	movf	CANSetMask@tamp& (0+255),w,b
  3674  01431E  0100               	movlb	0	; () banked
  3675  014320  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3676  014322  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3677  014324  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3678  014326  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3682  014328  C079  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3683  01432C  0012               	return	
  3684  01432E                     __end_of_CANSetMask:
  3685                           	opt stack 0
  3686                           tblptru	equ	0xFF8
  3687                           tblptrh	equ	0xFF7
  3688                           tblptrl	equ	0xFF6
  3689                           tablat	equ	0xFF5
  3690                           intcon	equ	0xFF2
  3691                           postinc0	equ	0xFEE
  3692                           wreg	equ	0xFE8
  3693                           status	equ	0xFD8
  3694                           
  3695 ;; *************** function _CANSetFilter *****************
  3696 ;; Defined at:
  3697 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  numBuffer       1    wreg     enum E16924
  3700 ;;  filter          4   15[BANK0 ] unsigned long 
  3701 ;;  type            1   19[BANK0 ] enum E16887
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;  numBuffer       1   24[BANK0 ] enum E16924
  3704 ;;  tamp            4   25[BANK0 ] unsigned long 
  3705 ;; Return value:  Size  Location     Type
  3706 ;;		None               void
  3707 ;; Registers used:
  3708 ;;		wreg, status,2, status,0
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3714 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3715 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3716 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3717 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3718 ;;Total ram usage:       14 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:    3
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_CANInitialize
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text4
  3729  010000                     __ptext4:
  3730                           	opt stack 0
  3731  010000                     _CANSetFilter:
  3732                           	opt stack 25
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;incstack = 0
  3736                           ;CANSetFilter@numBuffer stored from wreg
  3737  010000  0100               	movlb	0	; () banked
  3738  010002  6F78               	movwf	CANSetFilter@numBuffer& (0+255),b
  3739                           
  3740                           ;inc\CANlib.h: 750: unsigned long tamp;
  3741                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3742  010004  0100               	movlb	0	; () banked
  3743  010006  5178               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3744  010008  0100               	movlb	0	; () banked
  3745  01000A  A4D8               	btfss	status,2,c
  3746  01000C  D058               	goto	l5080
  3747                           
  3748                           ; BSR set to: 0
  3749  01000E  0100               	movlb	0	; () banked
  3750  010010  2973               	incf	CANSetFilter@type& (0+255),w,b
  3751  010012  A4D8               	btfss	status,2,c
  3752  010014  D054               	goto	l5080
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;inc\CANlib.h: 753: {
  3756                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3757  010016  010F               	movlb	15	; () banked
  3758  010018  9701               	bcf	1,3,b	;volatile
  3759                           
  3760                           ; BSR set to: 15
  3761                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  3762  01001A  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  3763  01001E  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3764  010022  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3765  010026  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3766  01002A  0E04               	movlw	4
  3767  01002C  D006               	goto	u5810
  3768  01002E                     u5815:
  3769  01002E  0100               	movlb	0	; () banked
  3770  010030  90D8               	bcf	status,0,c
  3771  010032  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3772  010034  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3773  010036  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3774  010038  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  3775  01003A                     u5810:
  3776  01003A  2EE8               	decfsz	wreg,f,c
  3777  01003C  D7F8               	goto	u5815
  3778  01003E  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3779  010042  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3780  010046  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3781  01004A  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  3785  01004E  0100               	movlb	0	; () banked
  3786  010050  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  3787  010052  0100               	movlb	0	; () banked
  3788  010054  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3789  010056  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3790  010058  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3791  01005A  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3792                           
  3793                           ; BSR set to: 0
  3794                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3795  01005C  C079  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  3799  010060  0E07               	movlw	7
  3800  010062  0100               	movlb	0	; () banked
  3801  010064  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  3802  010066  0100               	movlb	0	; () banked
  3803  010068  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3804  01006A  0E00               	movlw	0
  3805  01006C  0100               	movlb	0	; () banked
  3806  01006E  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3807  010070  0100               	movlb	0	; () banked
  3808  010072  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3809  010074  0E00               	movlw	0
  3810  010076  0100               	movlb	0	; () banked
  3811  010078  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3812  01007A  0100               	movlb	0	; () banked
  3813  01007C  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3814  01007E  0E00               	movlw	0
  3815  010080  0100               	movlb	0	; () banked
  3816  010082  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3817  010084  0100               	movlb	0	; () banked
  3818  010086  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  3822  010088  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  3823  01008C  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3824  010090  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3825  010094  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3826  010098  0E05               	movlw	5
  3827  01009A                     u5825:
  3828  01009A  90D8               	bcf	status,0,c
  3829  01009C  0100               	movlb	0	; () banked
  3830  01009E  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  3831  0100A0  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3832  0100A2  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3833  0100A4  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3834  0100A6  2EE8               	decfsz	wreg,f,c
  3835  0100A8  D7F8               	goto	u5825
  3836  0100AA  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3837  0100AE  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3838  0100B2  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3839  0100B6  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3843  0100BA  C079  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3844  0100BE                     l5080:
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;inc\CANlib.h: 763: }
  3848                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3849  0100BE  0100               	movlb	0	; () banked
  3850  0100C0  0578               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3851  0100C2  A4D8               	btfss	status,2,c
  3852  0100C4  D058               	goto	l5098
  3853                           
  3854                           ; BSR set to: 0
  3855  0100C6  0100               	movlb	0	; () banked
  3856  0100C8  2973               	incf	CANSetFilter@type& (0+255),w,b
  3857  0100CA  A4D8               	btfss	status,2,c
  3858  0100CC  D054               	goto	l5098
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;inc\CANlib.h: 766: {
  3862                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3863  0100CE  010F               	movlb	15	; () banked
  3864  0100D0  9705               	bcf	5,3,b	;volatile
  3865                           
  3866                           ; BSR set to: 15
  3867                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  3868  0100D2  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  3869  0100D6  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3870  0100DA  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3871  0100DE  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3872  0100E2  0E04               	movlw	4
  3873  0100E4  D006               	goto	u5850
  3874  0100E6                     u5855:
  3875  0100E6  0100               	movlb	0	; () banked
  3876  0100E8  90D8               	bcf	status,0,c
  3877  0100EA  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3878  0100EC  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3879  0100EE  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3880  0100F0  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  3881  0100F2                     u5850:
  3882  0100F2  2EE8               	decfsz	wreg,f,c
  3883  0100F4  D7F8               	goto	u5855
  3884  0100F6  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3885  0100FA  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3886  0100FE  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3887  010102  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  3891  010106  0100               	movlb	0	; () banked
  3892  010108  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  3893  01010A  0100               	movlb	0	; () banked
  3894  01010C  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3895  01010E  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3896  010110  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3897  010112  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3901  010114  C079  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  3905  010118  0E07               	movlw	7
  3906  01011A  0100               	movlb	0	; () banked
  3907  01011C  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  3908  01011E  0100               	movlb	0	; () banked
  3909  010120  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3910  010122  0E00               	movlw	0
  3911  010124  0100               	movlb	0	; () banked
  3912  010126  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3913  010128  0100               	movlb	0	; () banked
  3914  01012A  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3915  01012C  0E00               	movlw	0
  3916  01012E  0100               	movlb	0	; () banked
  3917  010130  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3918  010132  0100               	movlb	0	; () banked
  3919  010134  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3920  010136  0E00               	movlw	0
  3921  010138  0100               	movlb	0	; () banked
  3922  01013A  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3923  01013C  0100               	movlb	0	; () banked
  3924  01013E  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  3928  010140  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  3929  010144  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3930  010148  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3931  01014C  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3932  010150  0E05               	movlw	5
  3933  010152                     u5865:
  3934  010152  90D8               	bcf	status,0,c
  3935  010154  0100               	movlb	0	; () banked
  3936  010156  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  3937  010158  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3938  01015A  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3939  01015C  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3940  01015E  2EE8               	decfsz	wreg,f,c
  3941  010160  D7F8               	goto	u5865
  3942  010162  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3943  010166  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3944  01016A  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3945  01016E  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3949  010172  C079  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3950  010176                     l5098:
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;inc\CANlib.h: 776: }
  3954                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3955  010176  0E02               	movlw	2
  3956  010178  0100               	movlb	0	; () banked
  3957  01017A  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3958  01017C  A4D8               	btfss	status,2,c
  3959  01017E  D058               	goto	l5116
  3960                           
  3961                           ; BSR set to: 0
  3962  010180  0100               	movlb	0	; () banked
  3963  010182  2973               	incf	CANSetFilter@type& (0+255),w,b
  3964  010184  A4D8               	btfss	status,2,c
  3965  010186  D054               	goto	l5116
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;inc\CANlib.h: 779: {
  3969                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3970  010188  010F               	movlb	15	; () banked
  3971  01018A  9709               	bcf	9,3,b	;volatile
  3972                           
  3973                           ; BSR set to: 15
  3974                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  3975  01018C  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  3976  010190  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3977  010194  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3978  010198  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3979  01019C  0E04               	movlw	4
  3980  01019E  D006               	goto	u5890
  3981  0101A0                     u5895:
  3982  0101A0  0100               	movlb	0	; () banked
  3983  0101A2  90D8               	bcf	status,0,c
  3984  0101A4  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3985  0101A6  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3986  0101A8  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3987  0101AA  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  3988  0101AC                     u5890:
  3989  0101AC  2EE8               	decfsz	wreg,f,c
  3990  0101AE  D7F8               	goto	u5895
  3991  0101B0  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3992  0101B4  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3993  0101B8  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3994  0101BC  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  3998  0101C0  0100               	movlb	0	; () banked
  3999  0101C2  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  4000  0101C4  0100               	movlb	0	; () banked
  4001  0101C6  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4002  0101C8  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4003  0101CA  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4004  0101CC  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4008  0101CE  C079  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4012  0101D2  0E07               	movlw	7
  4013  0101D4  0100               	movlb	0	; () banked
  4014  0101D6  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4015  0101D8  0100               	movlb	0	; () banked
  4016  0101DA  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4017  0101DC  0E00               	movlw	0
  4018  0101DE  0100               	movlb	0	; () banked
  4019  0101E0  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4020  0101E2  0100               	movlb	0	; () banked
  4021  0101E4  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4022  0101E6  0E00               	movlw	0
  4023  0101E8  0100               	movlb	0	; () banked
  4024  0101EA  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4025  0101EC  0100               	movlb	0	; () banked
  4026  0101EE  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4027  0101F0  0E00               	movlw	0
  4028  0101F2  0100               	movlb	0	; () banked
  4029  0101F4  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4030  0101F6  0100               	movlb	0	; () banked
  4031  0101F8  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4035  0101FA  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4036  0101FE  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4037  010202  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4038  010206  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4039  01020A  0E05               	movlw	5
  4040  01020C                     u5905:
  4041  01020C  90D8               	bcf	status,0,c
  4042  01020E  0100               	movlb	0	; () banked
  4043  010210  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  4044  010212  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4045  010214  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4046  010216  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4047  010218  2EE8               	decfsz	wreg,f,c
  4048  01021A  D7F8               	goto	u5905
  4049  01021C  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4050  010220  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4051  010224  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4052  010228  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4056  01022C  C079  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4057  010230                     l5116:
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;inc\CANlib.h: 789: }
  4061                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4062  010230  0E03               	movlw	3
  4063  010232  0100               	movlb	0	; () banked
  4064  010234  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4065  010236  A4D8               	btfss	status,2,c
  4066  010238  D058               	goto	l5134
  4067                           
  4068                           ; BSR set to: 0
  4069  01023A  0100               	movlb	0	; () banked
  4070  01023C  2973               	incf	CANSetFilter@type& (0+255),w,b
  4071  01023E  A4D8               	btfss	status,2,c
  4072  010240  D054               	goto	l5134
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;inc\CANlib.h: 792: {
  4076                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4077  010242  010F               	movlb	15	; () banked
  4078  010244  970D               	bcf	13,3,b	;volatile
  4079                           
  4080                           ; BSR set to: 15
  4081                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4082  010246  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  4083  01024A  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4084  01024E  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4085  010252  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4086  010256  0E04               	movlw	4
  4087  010258  D006               	goto	u5930
  4088  01025A                     u5935:
  4089  01025A  0100               	movlb	0	; () banked
  4090  01025C  90D8               	bcf	status,0,c
  4091  01025E  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4092  010260  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4093  010262  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4094  010264  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  4095  010266                     u5930:
  4096  010266  2EE8               	decfsz	wreg,f,c
  4097  010268  D7F8               	goto	u5935
  4098  01026A  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4099  01026E  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4100  010272  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4101  010276  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4105  01027A  0100               	movlb	0	; () banked
  4106  01027C  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  4107  01027E  0100               	movlb	0	; () banked
  4108  010280  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4109  010282  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4110  010284  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4111  010286  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4115  010288  C079  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4119  01028C  0E07               	movlw	7
  4120  01028E  0100               	movlb	0	; () banked
  4121  010290  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4122  010292  0100               	movlb	0	; () banked
  4123  010294  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4124  010296  0E00               	movlw	0
  4125  010298  0100               	movlb	0	; () banked
  4126  01029A  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4127  01029C  0100               	movlb	0	; () banked
  4128  01029E  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4129  0102A0  0E00               	movlw	0
  4130  0102A2  0100               	movlb	0	; () banked
  4131  0102A4  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4132  0102A6  0100               	movlb	0	; () banked
  4133  0102A8  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4134  0102AA  0E00               	movlw	0
  4135  0102AC  0100               	movlb	0	; () banked
  4136  0102AE  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4137  0102B0  0100               	movlb	0	; () banked
  4138  0102B2  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4142  0102B4  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4143  0102B8  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4144  0102BC  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4145  0102C0  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4146  0102C4  0E05               	movlw	5
  4147  0102C6                     u5945:
  4148  0102C6  90D8               	bcf	status,0,c
  4149  0102C8  0100               	movlb	0	; () banked
  4150  0102CA  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  4151  0102CC  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4152  0102CE  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4153  0102D0  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4154  0102D2  2EE8               	decfsz	wreg,f,c
  4155  0102D4  D7F8               	goto	u5945
  4156  0102D6  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4157  0102DA  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4158  0102DE  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4159  0102E2  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4163  0102E6  C079  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4164  0102EA                     l5134:
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;inc\CANlib.h: 802: }
  4168                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4169  0102EA  0E04               	movlw	4
  4170  0102EC  0100               	movlb	0	; () banked
  4171  0102EE  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4172  0102F0  A4D8               	btfss	status,2,c
  4173  0102F2  D058               	goto	l5152
  4174                           
  4175                           ; BSR set to: 0
  4176  0102F4  0100               	movlb	0	; () banked
  4177  0102F6  2973               	incf	CANSetFilter@type& (0+255),w,b
  4178  0102F8  A4D8               	btfss	status,2,c
  4179  0102FA  D054               	goto	l5152
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;inc\CANlib.h: 805: {
  4183                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4184  0102FC  010F               	movlb	15	; () banked
  4185  0102FE  9711               	bcf	17,3,b	;volatile
  4186                           
  4187                           ; BSR set to: 15
  4188                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4189  010300  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  4190  010304  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4191  010308  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4192  01030C  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4193  010310  0E04               	movlw	4
  4194  010312  D006               	goto	u5970
  4195  010314                     u5975:
  4196  010314  0100               	movlb	0	; () banked
  4197  010316  90D8               	bcf	status,0,c
  4198  010318  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4199  01031A  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4200  01031C  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4201  01031E  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  4202  010320                     u5970:
  4203  010320  2EE8               	decfsz	wreg,f,c
  4204  010322  D7F8               	goto	u5975
  4205  010324  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4206  010328  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4207  01032C  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4208  010330  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4212  010334  0100               	movlb	0	; () banked
  4213  010336  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  4214  010338  0100               	movlb	0	; () banked
  4215  01033A  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4216  01033C  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4217  01033E  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4218  010340  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4222  010342  C079  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4226  010346  0E07               	movlw	7
  4227  010348  0100               	movlb	0	; () banked
  4228  01034A  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4229  01034C  0100               	movlb	0	; () banked
  4230  01034E  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4231  010350  0E00               	movlw	0
  4232  010352  0100               	movlb	0	; () banked
  4233  010354  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4234  010356  0100               	movlb	0	; () banked
  4235  010358  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4236  01035A  0E00               	movlw	0
  4237  01035C  0100               	movlb	0	; () banked
  4238  01035E  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4239  010360  0100               	movlb	0	; () banked
  4240  010362  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4241  010364  0E00               	movlw	0
  4242  010366  0100               	movlb	0	; () banked
  4243  010368  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4244  01036A  0100               	movlb	0	; () banked
  4245  01036C  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4249  01036E  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4250  010372  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4251  010376  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4252  01037A  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4253  01037E  0E05               	movlw	5
  4254  010380                     u5985:
  4255  010380  90D8               	bcf	status,0,c
  4256  010382  0100               	movlb	0	; () banked
  4257  010384  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  4258  010386  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4259  010388  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4260  01038A  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4261  01038C  2EE8               	decfsz	wreg,f,c
  4262  01038E  D7F8               	goto	u5985
  4263  010390  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4264  010394  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4265  010398  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4266  01039C  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4270  0103A0  C079  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4271  0103A4                     l5152:
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;inc\CANlib.h: 815: }
  4275                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4276  0103A4  0E05               	movlw	5
  4277  0103A6  0100               	movlb	0	; () banked
  4278  0103A8  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4279  0103AA  A4D8               	btfss	status,2,c
  4280  0103AC  D058               	goto	l5170
  4281                           
  4282                           ; BSR set to: 0
  4283  0103AE  0100               	movlb	0	; () banked
  4284  0103B0  2973               	incf	CANSetFilter@type& (0+255),w,b
  4285  0103B2  A4D8               	btfss	status,2,c
  4286  0103B4  D054               	goto	l5170
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;inc\CANlib.h: 818: {
  4290                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4291  0103B6  010F               	movlb	15	; () banked
  4292  0103B8  9715               	bcf	21,3,b	;volatile
  4293                           
  4294                           ; BSR set to: 15
  4295                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4296  0103BA  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  4297  0103BE  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4298  0103C2  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4299  0103C6  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4300  0103CA  0E04               	movlw	4
  4301  0103CC  D006               	goto	u6010
  4302  0103CE                     u6015:
  4303  0103CE  0100               	movlb	0	; () banked
  4304  0103D0  90D8               	bcf	status,0,c
  4305  0103D2  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4306  0103D4  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4307  0103D6  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4308  0103D8  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  4309  0103DA                     u6010:
  4310  0103DA  2EE8               	decfsz	wreg,f,c
  4311  0103DC  D7F8               	goto	u6015
  4312  0103DE  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4313  0103E2  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4314  0103E6  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4315  0103EA  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4319  0103EE  0100               	movlb	0	; () banked
  4320  0103F0  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  4321  0103F2  0100               	movlb	0	; () banked
  4322  0103F4  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4323  0103F6  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4324  0103F8  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4325  0103FA  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4329  0103FC  C079  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4333  010400  0E07               	movlw	7
  4334  010402  0100               	movlb	0	; () banked
  4335  010404  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4336  010406  0100               	movlb	0	; () banked
  4337  010408  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4338  01040A  0E00               	movlw	0
  4339  01040C  0100               	movlb	0	; () banked
  4340  01040E  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4341  010410  0100               	movlb	0	; () banked
  4342  010412  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4343  010414  0E00               	movlw	0
  4344  010416  0100               	movlb	0	; () banked
  4345  010418  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4346  01041A  0100               	movlb	0	; () banked
  4347  01041C  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4348  01041E  0E00               	movlw	0
  4349  010420  0100               	movlb	0	; () banked
  4350  010422  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4351  010424  0100               	movlb	0	; () banked
  4352  010426  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4356  010428  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4357  01042C  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4358  010430  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4359  010434  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4360  010438  0E05               	movlw	5
  4361  01043A                     u6025:
  4362  01043A  90D8               	bcf	status,0,c
  4363  01043C  0100               	movlb	0	; () banked
  4364  01043E  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  4365  010440  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4366  010442  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4367  010444  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4368  010446  2EE8               	decfsz	wreg,f,c
  4369  010448  D7F8               	goto	u6025
  4370  01044A  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4371  01044E  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4372  010452  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4373  010456  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4377  01045A  C079  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4378  01045E                     l5170:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;inc\CANlib.h: 828: }
  4382                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4383  01045E  0100               	movlb	0	; () banked
  4384  010460  5178               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4385  010462  0100               	movlb	0	; () banked
  4386  010464  A4D8               	btfss	status,2,c
  4387  010466  D089               	goto	l5204
  4388                           
  4389                           ; BSR set to: 0
  4390  010468  0EF7               	movlw	247
  4391  01046A  0100               	movlb	0	; () banked
  4392  01046C  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  4393  01046E  A4D8               	btfss	status,2,c
  4394  010470  D084               	goto	l5204
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;inc\CANlib.h: 832: {
  4398                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4399  010472  010F               	movlb	15	; () banked
  4400  010474  8701               	bsf	1,3,b	;volatile
  4401                           
  4402                           ; BSR set to: 15
  4403                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4404  010476  0100               	movlb	0	; () banked
  4405  010478  516F               	movf	CANSetFilter@filter& (0+255),w,b
  4406  01047A  0100               	movlb	0	; () banked
  4407  01047C  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4408  01047E  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4409  010480  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4410  010482  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4414  010484  C079  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4418  010488  0E00               	movlw	0
  4419  01048A  0100               	movlb	0	; () banked
  4420  01048C  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4421  01048E  0100               	movlb	0	; () banked
  4422  010490  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4423  010492  0EFF               	movlw	255
  4424  010494  0100               	movlb	0	; () banked
  4425  010496  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4426  010498  0100               	movlb	0	; () banked
  4427  01049A  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4428  01049C  0E00               	movlw	0
  4429  01049E  0100               	movlb	0	; () banked
  4430  0104A0  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4431  0104A2  0100               	movlb	0	; () banked
  4432  0104A4  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4433  0104A6  0E00               	movlw	0
  4434  0104A8  0100               	movlb	0	; () banked
  4435  0104AA  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4436  0104AC  0100               	movlb	0	; () banked
  4437  0104AE  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4441  0104B0  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4442  0104B4  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4443  0104B8  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4444  0104BC  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4445  0104C0  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  4446  0104C4  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4447  0104C8  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4448  0104CC  0100               	movlb	0	; () banked
  4449  0104CE  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  4450  0104D0  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4451  0104D4  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4452  0104D8  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4453  0104DC  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4457  0104E0  C079  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4461  0104E4  0100               	movlb	0	; () banked
  4462  0104E6  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4463  0104E8  D003               	goto	l475
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4467  0104EA  010F               	movlb	15	; () banked
  4468  0104EC  8101               	bsf	1,0,b	;volatile
  4469  0104EE  D002               	goto	l476
  4470  0104F0                     l475:
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;inc\CANlib.h: 844: else
  4474                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4475  0104F0  010F               	movlb	15	; () banked
  4476  0104F2  9101               	bcf	1,0,b	;volatile
  4477  0104F4                     l476:
  4478                           
  4479                           ; BSR set to: 15
  4480                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4481  0104F4  0100               	movlb	0	; () banked
  4482  0104F6  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4483  0104F8  D003               	goto	l477
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4487  0104FA  010F               	movlb	15	; () banked
  4488  0104FC  8301               	bsf	1,1,b	;volatile
  4489  0104FE  D002               	goto	l478
  4490  010500                     l477:
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;inc\CANlib.h: 849: else
  4494                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4495  010500  010F               	movlb	15	; () banked
  4496  010502  9301               	bcf	1,1,b	;volatile
  4497  010504                     l478:
  4498                           
  4499                           ; BSR set to: 15
  4500                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4501  010504  0100               	movlb	0	; () banked
  4502  010506  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4503  010508  D003               	goto	l479
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4507  01050A  010F               	movlb	15	; () banked
  4508  01050C  8B01               	bsf	1,5,b	;volatile
  4509  01050E  D002               	goto	l480
  4510  010510                     l479:
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;inc\CANlib.h: 854: else
  4514                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4515  010510  010F               	movlb	15	; () banked
  4516  010512  9B01               	bcf	1,5,b	;volatile
  4517  010514                     l480:
  4518                           
  4519                           ; BSR set to: 15
  4520                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4521  010514  0100               	movlb	0	; () banked
  4522  010516  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4523  010518  D003               	goto	l481
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4527  01051A  010F               	movlb	15	; () banked
  4528  01051C  8D01               	bsf	1,6,b	;volatile
  4529  01051E  D002               	goto	l482
  4530  010520                     l481:
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;inc\CANlib.h: 859: else
  4534                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4535  010520  010F               	movlb	15	; () banked
  4536  010522  9D01               	bcf	1,6,b	;volatile
  4537  010524                     l482:
  4538                           
  4539                           ; BSR set to: 15
  4540                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4541  010524  0100               	movlb	0	; () banked
  4542  010526  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4543  010528  D003               	goto	l483
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4547  01052A  010F               	movlb	15	; () banked
  4548  01052C  8F01               	bsf	1,7,b	;volatile
  4549  01052E  D002               	goto	l5198
  4550  010530                     l483:
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;inc\CANlib.h: 864: else
  4554                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4555  010530  010F               	movlb	15	; () banked
  4556  010532  9F01               	bcf	1,7,b	;volatile
  4557  010534                     l5198:
  4558                           
  4559                           ; BSR set to: 15
  4560                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4561  010534  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  4562  010538  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4563  01053C  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4564  010540  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4565  010544  0E16               	movlw	22
  4566  010546  D006               	goto	u6100
  4567  010548                     u6105:
  4568  010548  0100               	movlb	0	; () banked
  4569  01054A  90D8               	bcf	status,0,c
  4570  01054C  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4571  01054E  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4572  010550  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4573  010552  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  4574  010554                     u6100:
  4575  010554  2EE8               	decfsz	wreg,f,c
  4576  010556  D7F8               	goto	u6105
  4577  010558  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4578  01055C  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4579  010560  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4580  010564  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4584  010568  0100               	movlb	0	; () banked
  4585  01056A  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  4586  01056C  0100               	movlb	0	; () banked
  4587  01056E  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4588  010570  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4589  010572  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4590  010574  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4594  010576  C079  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4595  01057A                     l5204:
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;inc\CANlib.h: 870: }
  4599                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4600  01057A  0100               	movlb	0	; () banked
  4601  01057C  0578               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4602  01057E  A4D8               	btfss	status,2,c
  4603  010580  D089               	goto	l5238
  4604                           
  4605                           ; BSR set to: 0
  4606  010582  0EF7               	movlw	247
  4607  010584  0100               	movlb	0	; () banked
  4608  010586  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  4609  010588  A4D8               	btfss	status,2,c
  4610  01058A  D084               	goto	l5238
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;inc\CANlib.h: 873: {
  4614                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4615  01058C  010F               	movlb	15	; () banked
  4616  01058E  8705               	bsf	5,3,b	;volatile
  4617                           
  4618                           ; BSR set to: 15
  4619                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4620  010590  0100               	movlb	0	; () banked
  4621  010592  516F               	movf	CANSetFilter@filter& (0+255),w,b
  4622  010594  0100               	movlb	0	; () banked
  4623  010596  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4624  010598  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4625  01059A  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4626  01059C  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4630  01059E  C079  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4634  0105A2  0E00               	movlw	0
  4635  0105A4  0100               	movlb	0	; () banked
  4636  0105A6  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4637  0105A8  0100               	movlb	0	; () banked
  4638  0105AA  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4639  0105AC  0EFF               	movlw	255
  4640  0105AE  0100               	movlb	0	; () banked
  4641  0105B0  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4642  0105B2  0100               	movlb	0	; () banked
  4643  0105B4  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4644  0105B6  0E00               	movlw	0
  4645  0105B8  0100               	movlb	0	; () banked
  4646  0105BA  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4647  0105BC  0100               	movlb	0	; () banked
  4648  0105BE  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4649  0105C0  0E00               	movlw	0
  4650  0105C2  0100               	movlb	0	; () banked
  4651  0105C4  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4652  0105C6  0100               	movlb	0	; () banked
  4653  0105C8  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4657  0105CA  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4658  0105CE  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4659  0105D2  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4660  0105D6  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4661  0105DA  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  4662  0105DE  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4663  0105E2  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4664  0105E6  0100               	movlb	0	; () banked
  4665  0105E8  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  4666  0105EA  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4667  0105EE  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4668  0105F2  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4669  0105F6  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4673  0105FA  C079  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  4677  0105FE  0100               	movlb	0	; () banked
  4678  010600  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4679  010602  D003               	goto	l486
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4683  010604  010F               	movlb	15	; () banked
  4684  010606  8105               	bsf	5,0,b	;volatile
  4685  010608  D002               	goto	l487
  4686  01060A                     l486:
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;inc\CANlib.h: 885: else
  4690                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4691  01060A  010F               	movlb	15	; () banked
  4692  01060C  9105               	bcf	5,0,b	;volatile
  4693  01060E                     l487:
  4694                           
  4695                           ; BSR set to: 15
  4696                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  4697  01060E  0100               	movlb	0	; () banked
  4698  010610  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4699  010612  D003               	goto	l488
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4703  010614  010F               	movlb	15	; () banked
  4704  010616  8305               	bsf	5,1,b	;volatile
  4705  010618  D002               	goto	l489
  4706  01061A                     l488:
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;inc\CANlib.h: 890: else
  4710                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4711  01061A  010F               	movlb	15	; () banked
  4712  01061C  9305               	bcf	5,1,b	;volatile
  4713  01061E                     l489:
  4714                           
  4715                           ; BSR set to: 15
  4716                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  4717  01061E  0100               	movlb	0	; () banked
  4718  010620  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4719  010622  D003               	goto	l490
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4723  010624  010F               	movlb	15	; () banked
  4724  010626  8B05               	bsf	5,5,b	;volatile
  4725  010628  D002               	goto	l491
  4726  01062A                     l490:
  4727                           
  4728                           ; BSR set to: 0
  4729                           ;inc\CANlib.h: 895: else
  4730                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4731  01062A  010F               	movlb	15	; () banked
  4732  01062C  9B05               	bcf	5,5,b	;volatile
  4733  01062E                     l491:
  4734                           
  4735                           ; BSR set to: 15
  4736                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  4737  01062E  0100               	movlb	0	; () banked
  4738  010630  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4739  010632  D003               	goto	l492
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4743  010634  010F               	movlb	15	; () banked
  4744  010636  8D05               	bsf	5,6,b	;volatile
  4745  010638  D002               	goto	l493
  4746  01063A                     l492:
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;inc\CANlib.h: 900: else
  4750                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4751  01063A  010F               	movlb	15	; () banked
  4752  01063C  9D05               	bcf	5,6,b	;volatile
  4753  01063E                     l493:
  4754                           
  4755                           ; BSR set to: 15
  4756                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  4757  01063E  0100               	movlb	0	; () banked
  4758  010640  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4759  010642  D003               	goto	l494
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4763  010644  010F               	movlb	15	; () banked
  4764  010646  8F05               	bsf	5,7,b	;volatile
  4765  010648  D002               	goto	l5232
  4766  01064A                     l494:
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;inc\CANlib.h: 905: else
  4770                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4771  01064A  010F               	movlb	15	; () banked
  4772  01064C  9F05               	bcf	5,7,b	;volatile
  4773  01064E                     l5232:
  4774                           
  4775                           ; BSR set to: 15
  4776                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  4777  01064E  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  4778  010652  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4779  010656  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4780  01065A  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4781  01065E  0E16               	movlw	22
  4782  010660  D006               	goto	u6180
  4783  010662                     u6185:
  4784  010662  0100               	movlb	0	; () banked
  4785  010664  90D8               	bcf	status,0,c
  4786  010666  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4787  010668  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4788  01066A  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4789  01066C  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  4790  01066E                     u6180:
  4791  01066E  2EE8               	decfsz	wreg,f,c
  4792  010670  D7F8               	goto	u6185
  4793  010672  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4794  010676  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4795  01067A  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4796  01067E  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  4800  010682  0100               	movlb	0	; () banked
  4801  010684  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  4802  010686  0100               	movlb	0	; () banked
  4803  010688  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4804  01068A  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4805  01068C  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4806  01068E  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4810  010690  C079  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4811  010694                     l5238:
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;inc\CANlib.h: 911: }
  4815                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4816  010694  0E02               	movlw	2
  4817  010696  0100               	movlb	0	; () banked
  4818  010698  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4819  01069A  A4D8               	btfss	status,2,c
  4820  01069C  D089               	goto	l5272
  4821                           
  4822                           ; BSR set to: 0
  4823  01069E  0EF7               	movlw	247
  4824  0106A0  0100               	movlb	0	; () banked
  4825  0106A2  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  4826  0106A4  A4D8               	btfss	status,2,c
  4827  0106A6  D084               	goto	l5272
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;inc\CANlib.h: 915: {
  4831                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4832  0106A8  010F               	movlb	15	; () banked
  4833  0106AA  8709               	bsf	9,3,b	;volatile
  4834                           
  4835                           ; BSR set to: 15
  4836                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  4837  0106AC  0100               	movlb	0	; () banked
  4838  0106AE  516F               	movf	CANSetFilter@filter& (0+255),w,b
  4839  0106B0  0100               	movlb	0	; () banked
  4840  0106B2  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4841  0106B4  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4842  0106B6  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4843  0106B8  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4847  0106BA  C079  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  4851  0106BE  0E00               	movlw	0
  4852  0106C0  0100               	movlb	0	; () banked
  4853  0106C2  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4854  0106C4  0100               	movlb	0	; () banked
  4855  0106C6  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4856  0106C8  0EFF               	movlw	255
  4857  0106CA  0100               	movlb	0	; () banked
  4858  0106CC  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4859  0106CE  0100               	movlb	0	; () banked
  4860  0106D0  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4861  0106D2  0E00               	movlw	0
  4862  0106D4  0100               	movlb	0	; () banked
  4863  0106D6  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4864  0106D8  0100               	movlb	0	; () banked
  4865  0106DA  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4866  0106DC  0E00               	movlw	0
  4867  0106DE  0100               	movlb	0	; () banked
  4868  0106E0  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4869  0106E2  0100               	movlb	0	; () banked
  4870  0106E4  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  4874  0106E6  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4875  0106EA  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4876  0106EE  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4877  0106F2  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4878  0106F6  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  4879  0106FA  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4880  0106FE  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4881  010702  0100               	movlb	0	; () banked
  4882  010704  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  4883  010706  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4884  01070A  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4885  01070E  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4886  010712  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4890  010716  C079  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  4894  01071A  0100               	movlb	0	; () banked
  4895  01071C  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4896  01071E  D003               	goto	l497
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4900  010720  010F               	movlb	15	; () banked
  4901  010722  8109               	bsf	9,0,b	;volatile
  4902  010724  D002               	goto	l498
  4903  010726                     l497:
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;inc\CANlib.h: 927: else
  4907                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4908  010726  010F               	movlb	15	; () banked
  4909  010728  9109               	bcf	9,0,b	;volatile
  4910  01072A                     l498:
  4911                           
  4912                           ; BSR set to: 15
  4913                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  4914  01072A  0100               	movlb	0	; () banked
  4915  01072C  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4916  01072E  D003               	goto	l499
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4920  010730  010F               	movlb	15	; () banked
  4921  010732  8309               	bsf	9,1,b	;volatile
  4922  010734  D002               	goto	l500
  4923  010736                     l499:
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;inc\CANlib.h: 932: else
  4927                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4928  010736  010F               	movlb	15	; () banked
  4929  010738  9309               	bcf	9,1,b	;volatile
  4930  01073A                     l500:
  4931                           
  4932                           ; BSR set to: 15
  4933                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  4934  01073A  0100               	movlb	0	; () banked
  4935  01073C  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4936  01073E  D003               	goto	l501
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4940  010740  010F               	movlb	15	; () banked
  4941  010742  8B09               	bsf	9,5,b	;volatile
  4942  010744  D002               	goto	l502
  4943  010746                     l501:
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;inc\CANlib.h: 937: else
  4947                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4948  010746  010F               	movlb	15	; () banked
  4949  010748  9B09               	bcf	9,5,b	;volatile
  4950  01074A                     l502:
  4951                           
  4952                           ; BSR set to: 15
  4953                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  4954  01074A  0100               	movlb	0	; () banked
  4955  01074C  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4956  01074E  D003               	goto	l503
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4960  010750  010F               	movlb	15	; () banked
  4961  010752  8D09               	bsf	9,6,b	;volatile
  4962  010754  D002               	goto	l504
  4963  010756                     l503:
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;inc\CANlib.h: 942: else
  4967                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4968  010756  010F               	movlb	15	; () banked
  4969  010758  9D09               	bcf	9,6,b	;volatile
  4970  01075A                     l504:
  4971                           
  4972                           ; BSR set to: 15
  4973                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  4974  01075A  0100               	movlb	0	; () banked
  4975  01075C  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4976  01075E  D003               	goto	l505
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4980  010760  010F               	movlb	15	; () banked
  4981  010762  8F09               	bsf	9,7,b	;volatile
  4982  010764  D002               	goto	l5266
  4983  010766                     l505:
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;inc\CANlib.h: 947: else
  4987                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4988  010766  010F               	movlb	15	; () banked
  4989  010768  9F09               	bcf	9,7,b	;volatile
  4990  01076A                     l5266:
  4991                           
  4992                           ; BSR set to: 15
  4993                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  4994  01076A  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  4995  01076E  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4996  010772  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4997  010776  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4998  01077A  0E16               	movlw	22
  4999  01077C  D006               	goto	u6260
  5000  01077E                     u6265:
  5001  01077E  0100               	movlb	0	; () banked
  5002  010780  90D8               	bcf	status,0,c
  5003  010782  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5004  010784  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5005  010786  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5006  010788  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  5007  01078A                     u6260:
  5008  01078A  2EE8               	decfsz	wreg,f,c
  5009  01078C  D7F8               	goto	u6265
  5010  01078E  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  5011  010792  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5012  010796  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5013  01079A  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5017  01079E  0100               	movlb	0	; () banked
  5018  0107A0  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  5019  0107A2  0100               	movlb	0	; () banked
  5020  0107A4  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5021  0107A6  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5022  0107A8  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5023  0107AA  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5027  0107AC  C079  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5028  0107B0                     l5272:
  5029                           
  5030                           ; BSR set to: 0
  5031                           ;inc\CANlib.h: 953: }
  5032                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5033  0107B0  0E03               	movlw	3
  5034  0107B2  0100               	movlb	0	; () banked
  5035  0107B4  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5036  0107B6  A4D8               	btfss	status,2,c
  5037  0107B8  D089               	goto	l5306
  5038                           
  5039                           ; BSR set to: 0
  5040  0107BA  0EF7               	movlw	247
  5041  0107BC  0100               	movlb	0	; () banked
  5042  0107BE  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  5043  0107C0  A4D8               	btfss	status,2,c
  5044  0107C2  D084               	goto	l5306
  5045                           
  5046                           ; BSR set to: 0
  5047                           ;inc\CANlib.h: 956: {
  5048                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5049  0107C4  010F               	movlb	15	; () banked
  5050  0107C6  870D               	bsf	13,3,b	;volatile
  5051                           
  5052                           ; BSR set to: 15
  5053                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5054  0107C8  0100               	movlb	0	; () banked
  5055  0107CA  516F               	movf	CANSetFilter@filter& (0+255),w,b
  5056  0107CC  0100               	movlb	0	; () banked
  5057  0107CE  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5058  0107D0  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5059  0107D2  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5060  0107D4  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5064  0107D6  C079  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5065                           
  5066                           ; BSR set to: 0
  5067                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5068  0107DA  0E00               	movlw	0
  5069  0107DC  0100               	movlb	0	; () banked
  5070  0107DE  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  5071  0107E0  0100               	movlb	0	; () banked
  5072  0107E2  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5073  0107E4  0EFF               	movlw	255
  5074  0107E6  0100               	movlb	0	; () banked
  5075  0107E8  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5076  0107EA  0100               	movlb	0	; () banked
  5077  0107EC  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5078  0107EE  0E00               	movlw	0
  5079  0107F0  0100               	movlb	0	; () banked
  5080  0107F2  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5081  0107F4  0100               	movlb	0	; () banked
  5082  0107F6  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5083  0107F8  0E00               	movlw	0
  5084  0107FA  0100               	movlb	0	; () banked
  5085  0107FC  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5086  0107FE  0100               	movlb	0	; () banked
  5087  010800  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5091  010802  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  5092  010806  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5093  01080A  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5094  01080E  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5095  010812  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  5096  010816  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5097  01081A  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5098  01081E  0100               	movlb	0	; () banked
  5099  010820  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  5100  010822  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  5101  010826  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5102  01082A  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5103  01082E  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5107  010832  C079  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5111  010836  0100               	movlb	0	; () banked
  5112  010838  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5113  01083A  D003               	goto	l508
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5117  01083C  010F               	movlb	15	; () banked
  5118  01083E  810D               	bsf	13,0,b	;volatile
  5119  010840  D002               	goto	l509
  5120  010842                     l508:
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;inc\CANlib.h: 968: else
  5124                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5125  010842  010F               	movlb	15	; () banked
  5126  010844  910D               	bcf	13,0,b	;volatile
  5127  010846                     l509:
  5128                           
  5129                           ; BSR set to: 15
  5130                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5131  010846  0100               	movlb	0	; () banked
  5132  010848  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5133  01084A  D003               	goto	l510
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5137  01084C  010F               	movlb	15	; () banked
  5138  01084E  830D               	bsf	13,1,b	;volatile
  5139  010850  D002               	goto	l511
  5140  010852                     l510:
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;inc\CANlib.h: 973: else
  5144                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5145  010852  010F               	movlb	15	; () banked
  5146  010854  930D               	bcf	13,1,b	;volatile
  5147  010856                     l511:
  5148                           
  5149                           ; BSR set to: 15
  5150                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5151  010856  0100               	movlb	0	; () banked
  5152  010858  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5153  01085A  D003               	goto	l512
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5157  01085C  010F               	movlb	15	; () banked
  5158  01085E  8B0D               	bsf	13,5,b	;volatile
  5159  010860  D002               	goto	l513
  5160  010862                     l512:
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;inc\CANlib.h: 978: else
  5164                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5165  010862  010F               	movlb	15	; () banked
  5166  010864  9B0D               	bcf	13,5,b	;volatile
  5167  010866                     l513:
  5168                           
  5169                           ; BSR set to: 15
  5170                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5171  010866  0100               	movlb	0	; () banked
  5172  010868  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5173  01086A  D003               	goto	l514
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5177  01086C  010F               	movlb	15	; () banked
  5178  01086E  8D0D               	bsf	13,6,b	;volatile
  5179  010870  D002               	goto	l515
  5180  010872                     l514:
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;inc\CANlib.h: 983: else
  5184                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5185  010872  010F               	movlb	15	; () banked
  5186  010874  9D0D               	bcf	13,6,b	;volatile
  5187  010876                     l515:
  5188                           
  5189                           ; BSR set to: 15
  5190                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5191  010876  0100               	movlb	0	; () banked
  5192  010878  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5193  01087A  D003               	goto	l516
  5194                           
  5195                           ; BSR set to: 0
  5196                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5197  01087C  010F               	movlb	15	; () banked
  5198  01087E  8F0D               	bsf	13,7,b	;volatile
  5199  010880  D002               	goto	l5300
  5200  010882                     l516:
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;inc\CANlib.h: 988: else
  5204                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5205  010882  010F               	movlb	15	; () banked
  5206  010884  9F0D               	bcf	13,7,b	;volatile
  5207  010886                     l5300:
  5208                           
  5209                           ; BSR set to: 15
  5210                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5211  010886  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  5212  01088A  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5213  01088E  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5214  010892  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5215  010896  0E16               	movlw	22
  5216  010898  D006               	goto	u6340
  5217  01089A                     u6345:
  5218  01089A  0100               	movlb	0	; () banked
  5219  01089C  90D8               	bcf	status,0,c
  5220  01089E  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5221  0108A0  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5222  0108A2  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5223  0108A4  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  5224  0108A6                     u6340:
  5225  0108A6  2EE8               	decfsz	wreg,f,c
  5226  0108A8  D7F8               	goto	u6345
  5227  0108AA  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  5228  0108AE  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5229  0108B2  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5230  0108B6  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5234  0108BA  0100               	movlb	0	; () banked
  5235  0108BC  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  5236  0108BE  0100               	movlb	0	; () banked
  5237  0108C0  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5238  0108C2  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5239  0108C4  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5240  0108C6  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5244  0108C8  C079  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5245  0108CC                     l5306:
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;inc\CANlib.h: 994: }
  5249                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5250  0108CC  0E04               	movlw	4
  5251  0108CE  0100               	movlb	0	; () banked
  5252  0108D0  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5253  0108D2  A4D8               	btfss	status,2,c
  5254  0108D4  D089               	goto	l5340
  5255                           
  5256                           ; BSR set to: 0
  5257  0108D6  0EF7               	movlw	247
  5258  0108D8  0100               	movlb	0	; () banked
  5259  0108DA  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  5260  0108DC  A4D8               	btfss	status,2,c
  5261  0108DE  D084               	goto	l5340
  5262                           
  5263                           ; BSR set to: 0
  5264                           ;inc\CANlib.h: 997: {
  5265                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5266  0108E0  010F               	movlb	15	; () banked
  5267  0108E2  8711               	bsf	17,3,b	;volatile
  5268                           
  5269                           ; BSR set to: 15
  5270                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5271  0108E4  0100               	movlb	0	; () banked
  5272  0108E6  516F               	movf	CANSetFilter@filter& (0+255),w,b
  5273  0108E8  0100               	movlb	0	; () banked
  5274  0108EA  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5275  0108EC  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5276  0108EE  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5277  0108F0  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5281  0108F2  C079  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5285  0108F6  0E00               	movlw	0
  5286  0108F8  0100               	movlb	0	; () banked
  5287  0108FA  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  5288  0108FC  0100               	movlb	0	; () banked
  5289  0108FE  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5290  010900  0EFF               	movlw	255
  5291  010902  0100               	movlb	0	; () banked
  5292  010904  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5293  010906  0100               	movlb	0	; () banked
  5294  010908  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5295  01090A  0E00               	movlw	0
  5296  01090C  0100               	movlb	0	; () banked
  5297  01090E  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5298  010910  0100               	movlb	0	; () banked
  5299  010912  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5300  010914  0E00               	movlw	0
  5301  010916  0100               	movlb	0	; () banked
  5302  010918  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5303  01091A  0100               	movlb	0	; () banked
  5304  01091C  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5308  01091E  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  5309  010922  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5310  010926  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5311  01092A  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5312  01092E  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  5313  010932  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5314  010936  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5315  01093A  0100               	movlb	0	; () banked
  5316  01093C  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  5317  01093E  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  5318  010942  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5319  010946  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5320  01094A  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5321                           
  5322                           ; BSR set to: 0
  5323                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5324  01094E  C079  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5328  010952  0100               	movlb	0	; () banked
  5329  010954  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5330  010956  D003               	goto	l519
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5334  010958  010F               	movlb	15	; () banked
  5335  01095A  8111               	bsf	17,0,b	;volatile
  5336  01095C  D002               	goto	l520
  5337  01095E                     l519:
  5338                           
  5339                           ; BSR set to: 0
  5340                           ;inc\CANlib.h: 1009: else
  5341                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5342  01095E  010F               	movlb	15	; () banked
  5343  010960  9111               	bcf	17,0,b	;volatile
  5344  010962                     l520:
  5345                           
  5346                           ; BSR set to: 15
  5347                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5348  010962  0100               	movlb	0	; () banked
  5349  010964  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5350  010966  D003               	goto	l521
  5351                           
  5352                           ; BSR set to: 0
  5353                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5354  010968  010F               	movlb	15	; () banked
  5355  01096A  8311               	bsf	17,1,b	;volatile
  5356  01096C  D002               	goto	l522
  5357  01096E                     l521:
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;inc\CANlib.h: 1014: else
  5361                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5362  01096E  010F               	movlb	15	; () banked
  5363  010970  9311               	bcf	17,1,b	;volatile
  5364  010972                     l522:
  5365                           
  5366                           ; BSR set to: 15
  5367                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5368  010972  0100               	movlb	0	; () banked
  5369  010974  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5370  010976  D003               	goto	l523
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5374  010978  010F               	movlb	15	; () banked
  5375  01097A  8B11               	bsf	17,5,b	;volatile
  5376  01097C  D002               	goto	l524
  5377  01097E                     l523:
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;inc\CANlib.h: 1019: else
  5381                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5382  01097E  010F               	movlb	15	; () banked
  5383  010980  9B11               	bcf	17,5,b	;volatile
  5384  010982                     l524:
  5385                           
  5386                           ; BSR set to: 15
  5387                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5388  010982  0100               	movlb	0	; () banked
  5389  010984  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5390  010986  D003               	goto	l525
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5394  010988  010F               	movlb	15	; () banked
  5395  01098A  8D11               	bsf	17,6,b	;volatile
  5396  01098C  D002               	goto	l526
  5397  01098E                     l525:
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;inc\CANlib.h: 1024: else
  5401                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5402  01098E  010F               	movlb	15	; () banked
  5403  010990  9D11               	bcf	17,6,b	;volatile
  5404  010992                     l526:
  5405                           
  5406                           ; BSR set to: 15
  5407                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5408  010992  0100               	movlb	0	; () banked
  5409  010994  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5410  010996  D003               	goto	l527
  5411                           
  5412                           ; BSR set to: 0
  5413                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5414  010998  010F               	movlb	15	; () banked
  5415  01099A  8F11               	bsf	17,7,b	;volatile
  5416  01099C  D002               	goto	l5334
  5417  01099E                     l527:
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;inc\CANlib.h: 1029: else
  5421                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5422  01099E  010F               	movlb	15	; () banked
  5423  0109A0  9F11               	bcf	17,7,b	;volatile
  5424  0109A2                     l5334:
  5425                           
  5426                           ; BSR set to: 15
  5427                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5428  0109A2  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  5429  0109A6  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5430  0109AA  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5431  0109AE  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5432  0109B2  0E16               	movlw	22
  5433  0109B4  D006               	goto	u6420
  5434  0109B6                     u6425:
  5435  0109B6  0100               	movlb	0	; () banked
  5436  0109B8  90D8               	bcf	status,0,c
  5437  0109BA  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5438  0109BC  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5439  0109BE  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5440  0109C0  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  5441  0109C2                     u6420:
  5442  0109C2  2EE8               	decfsz	wreg,f,c
  5443  0109C4  D7F8               	goto	u6425
  5444  0109C6  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  5445  0109CA  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5446  0109CE  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5447  0109D2  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5451  0109D6  0100               	movlb	0	; () banked
  5452  0109D8  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  5453  0109DA  0100               	movlb	0	; () banked
  5454  0109DC  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5455  0109DE  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5456  0109E0  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5457  0109E2  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5461  0109E4  C079  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5462  0109E8                     l5340:
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;inc\CANlib.h: 1035: }
  5466                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5467  0109E8  0E05               	movlw	5
  5468  0109EA  0100               	movlb	0	; () banked
  5469  0109EC  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5470  0109EE  A4D8               	btfss	status,2,c
  5471  0109F0  0012               	return	
  5472                           
  5473                           ; BSR set to: 0
  5474  0109F2  0EF7               	movlw	247
  5475  0109F4  0100               	movlb	0	; () banked
  5476  0109F6  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  5477  0109F8  A4D8               	btfss	status,2,c
  5478  0109FA  0012               	return	
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;inc\CANlib.h: 1038: {
  5482                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5483  0109FC  010F               	movlb	15	; () banked
  5484  0109FE  8715               	bsf	21,3,b	;volatile
  5485                           
  5486                           ; BSR set to: 15
  5487                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5488  010A00  0100               	movlb	0	; () banked
  5489  010A02  516F               	movf	CANSetFilter@filter& (0+255),w,b
  5490  010A04  0100               	movlb	0	; () banked
  5491  010A06  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5492  010A08  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5493  010A0A  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5494  010A0C  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5498  010A0E  C079  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5502  010A12  0E00               	movlw	0
  5503  010A14  0100               	movlb	0	; () banked
  5504  010A16  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  5505  010A18  0100               	movlb	0	; () banked
  5506  010A1A  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5507  010A1C  0EFF               	movlw	255
  5508  010A1E  0100               	movlb	0	; () banked
  5509  010A20  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5510  010A22  0100               	movlb	0	; () banked
  5511  010A24  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5512  010A26  0E00               	movlw	0
  5513  010A28  0100               	movlb	0	; () banked
  5514  010A2A  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5515  010A2C  0100               	movlb	0	; () banked
  5516  010A2E  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5517  010A30  0E00               	movlw	0
  5518  010A32  0100               	movlb	0	; () banked
  5519  010A34  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5520  010A36  0100               	movlb	0	; () banked
  5521  010A38  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5525  010A3A  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  5526  010A3E  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5527  010A42  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5528  010A46  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5529  010A4A  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  5530  010A4E  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5531  010A52  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5532  010A56  0100               	movlb	0	; () banked
  5533  010A58  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  5534  010A5A  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  5535  010A5E  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5536  010A62  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5537  010A66  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5541  010A6A  C079  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5545  010A6E  0100               	movlb	0	; () banked
  5546  010A70  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5547  010A72  D003               	goto	l530
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5551  010A74  010F               	movlb	15	; () banked
  5552  010A76  8115               	bsf	21,0,b	;volatile
  5553  010A78  D002               	goto	l531
  5554  010A7A                     l530:
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;inc\CANlib.h: 1050: else
  5558                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5559  010A7A  010F               	movlb	15	; () banked
  5560  010A7C  9115               	bcf	21,0,b	;volatile
  5561  010A7E                     l531:
  5562                           
  5563                           ; BSR set to: 15
  5564                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5565  010A7E  0100               	movlb	0	; () banked
  5566  010A80  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5567  010A82  D003               	goto	l532
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5571  010A84  010F               	movlb	15	; () banked
  5572  010A86  8315               	bsf	21,1,b	;volatile
  5573  010A88  D002               	goto	l533
  5574  010A8A                     l532:
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;inc\CANlib.h: 1055: else
  5578                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5579  010A8A  010F               	movlb	15	; () banked
  5580  010A8C  9315               	bcf	21,1,b	;volatile
  5581  010A8E                     l533:
  5582                           
  5583                           ; BSR set to: 15
  5584                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5585  010A8E  0100               	movlb	0	; () banked
  5586  010A90  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5587  010A92  D003               	goto	l534
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5591  010A94  010F               	movlb	15	; () banked
  5592  010A96  8B15               	bsf	21,5,b	;volatile
  5593  010A98  D002               	goto	l535
  5594  010A9A                     l534:
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;inc\CANlib.h: 1060: else
  5598                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5599  010A9A  010F               	movlb	15	; () banked
  5600  010A9C  9B15               	bcf	21,5,b	;volatile
  5601  010A9E                     l535:
  5602                           
  5603                           ; BSR set to: 15
  5604                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5605  010A9E  0100               	movlb	0	; () banked
  5606  010AA0  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5607  010AA2  D003               	goto	l536
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5611  010AA4  010F               	movlb	15	; () banked
  5612  010AA6  8D15               	bsf	21,6,b	;volatile
  5613  010AA8  D002               	goto	l537
  5614  010AAA                     l536:
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;inc\CANlib.h: 1065: else
  5618                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5619  010AAA  010F               	movlb	15	; () banked
  5620  010AAC  9D15               	bcf	21,6,b	;volatile
  5621  010AAE                     l537:
  5622                           
  5623                           ; BSR set to: 15
  5624                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5625  010AAE  0100               	movlb	0	; () banked
  5626  010AB0  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5627  010AB2  D003               	goto	l538
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5631  010AB4  010F               	movlb	15	; () banked
  5632  010AB6  8F15               	bsf	21,7,b	;volatile
  5633  010AB8  D002               	goto	l5368
  5634  010ABA                     l538:
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;inc\CANlib.h: 1070: else
  5638                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5639  010ABA  010F               	movlb	15	; () banked
  5640  010ABC  9F15               	bcf	21,7,b	;volatile
  5641  010ABE                     l5368:
  5642                           
  5643                           ; BSR set to: 15
  5644                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5645  010ABE  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  5646  010AC2  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5647  010AC6  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5648  010ACA  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5649  010ACE  0E16               	movlw	22
  5650  010AD0  D006               	goto	u6500
  5651  010AD2                     u6505:
  5652  010AD2  0100               	movlb	0	; () banked
  5653  010AD4  90D8               	bcf	status,0,c
  5654  010AD6  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5655  010AD8  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5656  010ADA  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5657  010ADC  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  5658  010ADE                     u6500:
  5659  010ADE  2EE8               	decfsz	wreg,f,c
  5660  010AE0  D7F8               	goto	u6505
  5661  010AE2  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  5662  010AE6  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5663  010AEA  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5664  010AEE  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5668  010AF2  0100               	movlb	0	; () banked
  5669  010AF4  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  5670  010AF6  0100               	movlb	0	; () banked
  5671  010AF8  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5672  010AFA  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5673  010AFC  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5674  010AFE  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5678  010B00  C079  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5679  010B04  0012               	return	
  5680  010B06                     __end_of_CANSetFilter:
  5681                           	opt stack 0
  5682                           tblptru	equ	0xFF8
  5683                           tblptrh	equ	0xFF7
  5684                           tblptrl	equ	0xFF6
  5685                           tablat	equ	0xFF5
  5686                           intcon	equ	0xFF2
  5687                           postinc0	equ	0xFEE
  5688                           wreg	equ	0xFE8
  5689                           status	equ	0xFD8
  5690                           
  5691 ;; *************** function _CANOperationMode *****************
  5692 ;; Defined at:
  5693 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  mode            1    wreg     enum E16881
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  mode            1   15[BANK0 ] enum E16881
  5698 ;; Return value:  Size  Location     Type
  5699 ;;		None               void
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;Total ram usage:        1 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; Hardware stack levels required when called:    3
  5714 ;; This function calls:
  5715 ;;		Nothing
  5716 ;; This function is called by:
  5717 ;;		_CANInitialize
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           	psect	text5
  5722  015E4C                     __ptext5:
  5723                           	opt stack 0
  5724  015E4C                     _CANOperationMode:
  5725                           	opt stack 25
  5726                           
  5727                           ; BSR set to: 0
  5728                           ;incstack = 0
  5729                           ;CANOperationMode@mode stored from wreg
  5730  015E4C  0100               	movlb	0	; () banked
  5731  015E4E  6F6F               	movwf	CANOperationMode@mode& (0+255),b
  5732                           
  5733                           ;inc\CANlib.h: 208: CANCON = mode;
  5734  015E50  C06F  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5735  015E54                     l4964:
  5736  015E54  506E               	movf	3950,w,c	;volatile
  5737  015E56  0BE0               	andlw	224
  5738  015E58  0100               	movlb	0	; () banked
  5739  015E5A  196F               	xorwf	CANOperationMode@mode& (0+255),w,b
  5740  015E5C  B4D8               	btfsc	status,2,c
  5741  015E5E  0012               	return	
  5742  015E60  D7F9               	goto	l4964
  5743  015E62                     __end_of_CANOperationMode:
  5744                           	opt stack 0
  5745                           tblptru	equ	0xFF8
  5746                           tblptrh	equ	0xFF7
  5747                           tblptrl	equ	0xFF6
  5748                           tablat	equ	0xFF5
  5749                           intcon	equ	0xFF2
  5750                           postinc0	equ	0xFEE
  5751                           wreg	equ	0xFE8
  5752                           status	equ	0xFD8
  5753                           
  5754 ;; *************** function _PWR_Button_Polling *****************
  5755 ;; Defined at:
  5756 ;;		line 389 in file "RemoteCan.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;		None
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;		None
  5761 ;; Return value:  Size  Location     Type
  5762 ;;		None               void
  5763 ;; Registers used:
  5764 ;;		None
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5774 ;;Total ram usage:        0 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; Hardware stack levels required when called:    3
  5777 ;; This function calls:
  5778 ;;		Nothing
  5779 ;; This function is called by:
  5780 ;;		_main
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text6
  5785  015DDC                     __ptext6:
  5786                           	opt stack 0
  5787  015DDC                     _PWR_Button_Polling:
  5788                           	opt stack 27
  5789                           
  5790                           ;RemoteCan.c: 390: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;incstack = 0
  5794  015DDC  AA81               	btfss	3969,5,c	;volatile
  5795  015DDE  D002               	goto	l847
  5796  015DE0  B24D               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5797  015DE2  0012               	return	
  5798  015DE4                     l847:
  5799                           
  5800                           ;RemoteCan.c: 391: wait_low_1 = 0;
  5801  015DE4  924D               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5802                           
  5803                           ;RemoteCan.c: 392: if (PORTBbits.RB5 == 1) {
  5804  015DE6  AA81               	btfss	3969,5,c	;volatile
  5805  015DE8  0012               	return	
  5806                           
  5807                           ;RemoteCan.c: 393: power_switch = ~power_switch;
  5808  015DEA  B04D               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5809  015DEC  D002               	goto	u8380
  5810  015DEE  804D               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5811  015DF0  D001               	goto	u8395
  5812  015DF2                     u8380:
  5813  015DF2  904D               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5814  015DF4                     u8395:
  5815                           
  5816                           ;RemoteCan.c: 394: wait_low_1 = 1;
  5817  015DF4  824D               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5818  015DF6  0012               	return	
  5819  015DF8                     __end_of_PWR_Button_Polling:
  5820                           	opt stack 0
  5821                           tblptru	equ	0xFF8
  5822                           tblptrh	equ	0xFF7
  5823                           tblptrl	equ	0xFF6
  5824                           tablat	equ	0xFF5
  5825                           intcon	equ	0xFF2
  5826                           postinc0	equ	0xFEE
  5827                           wreg	equ	0xFE8
  5828                           status	equ	0xFD8
  5829                           
  5830 ;; *************** function _LCD_Handler *****************
  5831 ;; Defined at:
  5832 ;;		line 299 in file "RemoteCan.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;		None
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;		None
  5837 ;; Return value:  Size  Location     Type
  5838 ;;		None               void
  5839 ;; Registers used:
  5840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5850 ;;Total ram usage:        0 bytes
  5851 ;; Hardware stack levels used:    1
  5852 ;; Hardware stack levels required when called:    9
  5853 ;; This function calls:
  5854 ;;		_CANisTxReady
  5855 ;;		_CANsendMessage
  5856 ;;		_LCD_clear
  5857 ;;		_LCD_goto_line
  5858 ;;		_LCD_goto_xy
  5859 ;;		_LCD_initialize
  5860 ;;		_LCD_write_message
  5861 ;;		_LCD_write_string
  5862 ;;		___fldiv
  5863 ;;		___xxtofl
  5864 ;;		_sprintf
  5865 ;; This function is called by:
  5866 ;;		_main
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           	psect	text7
  5871  014624                     __ptext7:
  5872                           	opt stack 0
  5873  014624                     _LCD_Handler:
  5874                           	opt stack 21
  5875  014624                     l8756:
  5876  014624  ECBC  F0AE         	call	_CANisTxReady	;wreg free
  5877  014628  06E8               	decf	wreg,f,c
  5878  01462A  A4D8               	btfss	status,2,c
  5879  01462C  D7FB               	goto	l8756
  5880                           
  5881                           ;RemoteCan.c: 302: CANsendMessage(0b00000000110, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5882  01462E  0E06               	movlw	6
  5883  014630  0100               	movlb	0	; () banked
  5884  014632  6F6F               	movwf	CANsendMessage@identifier& (0+255),b
  5885  014634  0E00               	movlw	0
  5886  014636  6F70               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5887  014638  0E00               	movlw	0
  5888  01463A  6F71               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5889  01463C  0E00               	movlw	0
  5890  01463E  6F72               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5891  014640  0EE8               	movlw	low _data_speed
  5892  014642  0100               	movlb	0	; () banked
  5893  014644  6F73               	movwf	CANsendMessage@data& (0+255),b
  5894  014646  0E00               	movlw	high _data_speed
  5895  014648  0100               	movlb	0	; () banked
  5896  01464A  6F74               	movwf	(CANsendMessage@data+1)& (0+255),b
  5897  01464C  0E08               	movlw	8
  5898  01464E  0100               	movlb	0	; () banked
  5899  014650  6F75               	movwf	CANsendMessage@dataLength& (0+255),b
  5900  014652  0EFC               	movlw	252
  5901  014654  0100               	movlb	0	; () banked
  5902  014656  6F76               	movwf	CANsendMessage@flags& (0+255),b
  5903  014658  ECCD  F089         	call	_CANsendMessage	;wreg free
  5904                           
  5905                           ;RemoteCan.c: 304: actual_speed_kmh = ((actual_speed) / 278.0);
  5906  01465C  C0DD  F06F         	movff	_actual_speed,___xxtofl@val
  5907  014660  C0DE  F070         	movff	_actual_speed+1,___xxtofl@val+1
  5908  014664  0100               	movlb	0	; () banked
  5909  014666  6B71               	clrf	(___xxtofl@val+2)& (0+255),b
  5910  014668  6B72               	clrf	(___xxtofl@val+3)& (0+255),b
  5911  01466A  0E00               	movlw	0
  5912  01466C  EC02  F0A4         	call	___xxtofl
  5913  014670  C06F  F07D         	movff	?___xxtofl,___fldiv@b
  5914  014674  C070  F07E         	movff	?___xxtofl+1,___fldiv@b+1
  5915  014678  C071  F07F         	movff	?___xxtofl+2,___fldiv@b+2
  5916  01467C  C072  F080         	movff	?___xxtofl+3,___fldiv@b+3
  5917  014680  0E00               	movlw	0
  5918  014682  0100               	movlb	0	; () banked
  5919  014684  6F81               	movwf	___fldiv@a& (0+255),b
  5920  014686  0E00               	movlw	0
  5921  014688  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  5922  01468A  0E8B               	movlw	139
  5923  01468C  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  5924  01468E  0E43               	movlw	67
  5925  014690  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  5926  014692  ECE8  F09D         	call	___fldiv	;wreg free
  5927  014696  C07D  F008         	movff	?___fldiv,_actual_speed_kmh
  5928  01469A  C07E  F009         	movff	?___fldiv+1,_actual_speed_kmh+1
  5929  01469E  C07F  F00A         	movff	?___fldiv+2,_actual_speed_kmh+2
  5930  0146A2  C080  F00B         	movff	?___fldiv+3,_actual_speed_kmh+3
  5931                           
  5932                           ;RemoteCan.c: 305: sprintf(str, "%.3f", actual_speed_kmh);
  5933  0146A6  0E15               	movlw	low _str
  5934  0146A8  0100               	movlb	0	; () banked
  5935  0146AA  6FC1               	movwf	sprintf@sp& (0+255),b
  5936  0146AC  0E01               	movlw	high _str
  5937  0146AE  0100               	movlb	0	; () banked
  5938  0146B0  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  5939  0146B2  0EF3               	movlw	low STR_5
  5940  0146B4  0100               	movlb	0	; () banked
  5941  0146B6  6FC3               	movwf	sprintf@f& (0+255),b
  5942  0146B8  0EFF               	movlw	high STR_5
  5943  0146BA  0100               	movlb	0	; () banked
  5944  0146BC  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  5945  0146BE  C008  F0C5         	movff	_actual_speed_kmh,?_sprintf+4
  5946  0146C2  C009  F0C6         	movff	_actual_speed_kmh+1,?_sprintf+5
  5947  0146C6  C00A  F0C7         	movff	_actual_speed_kmh+2,?_sprintf+6
  5948  0146CA  C00B  F0C8         	movff	_actual_speed_kmh+3,?_sprintf+7
  5949  0146CE  EC83  F085         	call	_sprintf	;wreg free
  5950                           
  5951                           ;RemoteCan.c: 306: str[11] = '\0';
  5952  0146D2  0E00               	movlw	0
  5953  0146D4  0101               	movlb	1	; () banked
  5954  0146D6  6F20               	movwf	(_str+11)& (0+255),b
  5955                           
  5956                           ; BSR set to: 1
  5957                           ;RemoteCan.c: 308: if (display_refresh == 1) {
  5958  0146D8  AC4C               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  5959  0146DA  D032               	goto	l8782
  5960                           
  5961                           ; BSR set to: 1
  5962                           ;RemoteCan.c: 309: LCD_initialize(16);
  5963  0146DC  0E10               	movlw	16
  5964  0146DE  EC27  F0A8         	call	_LCD_initialize
  5965                           
  5966                           ;RemoteCan.c: 310: LCD_clear();
  5967  0146E2  EC7B  F0AE         	call	_LCD_clear	;wreg free
  5968                           
  5969                           ;RemoteCan.c: 311: LCD_goto_line(1);
  5970  0146E6  0E01               	movlw	1
  5971  0146E8  EC12  F0AA         	call	_LCD_goto_line
  5972                           
  5973                           ;RemoteCan.c: 312: LCD_write_message("=== VEHICLE DATA ===");
  5974  0146EC  0E93               	movlw	low STR_6
  5975  0146EE  0100               	movlb	0	; () banked
  5976  0146F0  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  5977  0146F2  0EFF               	movlw	high STR_6
  5978  0146F4  0100               	movlb	0	; () banked
  5979  0146F6  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5980  0146F8  EC48  F0AE         	call	_LCD_write_message	;wreg free
  5981                           
  5982                           ;RemoteCan.c: 313: LCD_goto_line(2);
  5983  0146FC  0E02               	movlw	2
  5984  0146FE  EC12  F0AA         	call	_LCD_goto_line
  5985                           
  5986                           ;RemoteCan.c: 314: LCD_write_message("Direction: ");
  5987  014702  0ECE               	movlw	low STR_7
  5988  014704  0100               	movlb	0	; () banked
  5989  014706  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  5990  014708  0EFF               	movlw	high STR_7
  5991  01470A  0100               	movlb	0	; () banked
  5992  01470C  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  5993  01470E  EC48  F0AE         	call	_LCD_write_message	;wreg free
  5994                           
  5995                           ;RemoteCan.c: 315: LCD_goto_line(3);
  5996  014712  0E03               	movlw	3
  5997  014714  EC12  F0AA         	call	_LCD_goto_line
  5998                           
  5999                           ;RemoteCan.c: 316: LCD_write_message("Speed: x.xx Km/h");
  6000  014718  0EBD               	movlw	low STR_8
  6001  01471A  0100               	movlb	0	; () banked
  6002  01471C  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  6003  01471E  0EFF               	movlw	high STR_8
  6004  014720  0100               	movlb	0	; () banked
  6005  014722  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6006  014724  EC48  F0AE         	call	_LCD_write_message	;wreg free
  6007                           
  6008                           ;RemoteCan.c: 317: LCD_goto_line(4);
  6009  014728  0E04               	movlw	4
  6010  01472A  EC12  F0AA         	call	_LCD_goto_line
  6011                           
  6012                           ;RemoteCan.c: 318: LCD_write_message("====================");
  6013  01472E  0EA8               	movlw	low STR_1
  6014  014730  0100               	movlb	0	; () banked
  6015  014732  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  6016  014734  0EFF               	movlw	high STR_1
  6017  014736  0100               	movlb	0	; () banked
  6018  014738  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6019  01473A  EC48  F0AE         	call	_LCD_write_message	;wreg free
  6020                           
  6021                           ;RemoteCan.c: 319: display_refresh = 0;
  6022  01473E  9C4C               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6023  014740                     l8782:
  6024                           
  6025                           ;RemoteCan.c: 320: }
  6026                           ;RemoteCan.c: 323: LCD_goto_xy(12,2);
  6027  014740  0E02               	movlw	2
  6028  014742  0100               	movlb	0	; () banked
  6029  014744  6F7E               	movwf	LCD_goto_xy@y& (0+255),b
  6030  014746  0E0C               	movlw	12
  6031  014748  ECFC  F0AE         	call	_LCD_goto_xy
  6032                           
  6033                           ;RemoteCan.c: 324: if (switch_position != 0) {
  6034  01474C  0100               	movlb	0	; () banked
  6035  01474E  51E6               	movf	_switch_position& (0+255),w,b	;volatile
  6036  014750  B4D8               	btfsc	status,2,c
  6037  014752  D01C               	goto	l8796
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;RemoteCan.c: 325: if (dir == 1) {
  6041  014754  0100               	movlb	0	; () banked
  6042  014756  05E3               	decf	_dir& (0+255),w,b	;volatile
  6043  014758  A4D8               	btfss	status,2,c
  6044  01475A  D00C               	goto	l8792
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;RemoteCan.c: 326: LCD_initialize(16);
  6048  01475C  0E10               	movlw	16
  6049  01475E  EC27  F0A8         	call	_LCD_initialize
  6050                           
  6051                           ;RemoteCan.c: 327: LCD_write_message("FWD");
  6052  014762  0EF8               	movlw	low STR_10
  6053  014764  0100               	movlb	0	; () banked
  6054  014766  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  6055  014768  0EFF               	movlw	high STR_10
  6056  01476A  0100               	movlb	0	; () banked
  6057  01476C  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6058  01476E  EC48  F0AE         	call	_LCD_write_message	;wreg free
  6059                           
  6060                           ;RemoteCan.c: 328: } else {
  6061  014772  D017               	goto	l8800
  6062  014774                     l8792:
  6063                           
  6064                           ;RemoteCan.c: 329: LCD_initialize(16);
  6065  014774  0E10               	movlw	16
  6066  014776  EC27  F0A8         	call	_LCD_initialize
  6067                           
  6068                           ;RemoteCan.c: 330: LCD_write_message("BKWD");
  6069  01477A  0EEE               	movlw	low STR_11
  6070  01477C  0100               	movlb	0	; () banked
  6071  01477E  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  6072  014780  0EFF               	movlw	high STR_11
  6073  014782  0100               	movlb	0	; () banked
  6074  014784  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6075  014786  EC48  F0AE         	call	_LCD_write_message	;wreg free
  6076                           
  6077                           ;RemoteCan.c: 331: }
  6078                           ;RemoteCan.c: 332: } else {
  6079  01478A  D00B               	goto	l8800
  6080  01478C                     l8796:
  6081                           
  6082                           ;RemoteCan.c: 333: LCD_initialize(16);
  6083  01478C  0E10               	movlw	16
  6084  01478E  EC27  F0A8         	call	_LCD_initialize
  6085                           
  6086                           ;RemoteCan.c: 334: LCD_write_message("P");
  6087  014792  0EFC               	movlw	low STR_12
  6088  014794  0100               	movlb	0	; () banked
  6089  014796  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  6090  014798  0EFF               	movlw	high STR_12
  6091  01479A  0100               	movlb	0	; () banked
  6092  01479C  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6093  01479E  EC48  F0AE         	call	_LCD_write_message	;wreg free
  6094  0147A2                     l8800:
  6095                           
  6096                           ;RemoteCan.c: 335: }
  6097                           ;RemoteCan.c: 336: if (parking_state == 1) {
  6098  0147A2  0100               	movlb	0	; () banked
  6099  0147A4  05E5               	decf	_parking_state& (0+255),w,b	;volatile
  6100  0147A6  A4D8               	btfss	status,2,c
  6101  0147A8  D00B               	goto	l8806
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;RemoteCan.c: 337: LCD_initialize(16);
  6105  0147AA  0E10               	movlw	16
  6106  0147AC  EC27  F0A8         	call	_LCD_initialize
  6107                           
  6108                           ;RemoteCan.c: 338: LCD_write_message(" SRCH");
  6109  0147B0  0EE2               	movlw	low STR_13
  6110  0147B2  0100               	movlb	0	; () banked
  6111  0147B4  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  6112  0147B6  0EFF               	movlw	high STR_13
  6113  0147B8  0100               	movlb	0	; () banked
  6114  0147BA  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6115  0147BC  EC48  F0AE         	call	_LCD_write_message	;wreg free
  6116  0147C0                     l8806:
  6117                           
  6118                           ;RemoteCan.c: 339: }
  6119                           ;RemoteCan.c: 340: if (parking_state == 2) {
  6120  0147C0  0E02               	movlw	2
  6121  0147C2  0100               	movlb	0	; () banked
  6122  0147C4  19E5               	xorwf	_parking_state& (0+255),w,b	;volatile
  6123  0147C6  A4D8               	btfss	status,2,c
  6124  0147C8  D00B               	goto	l8812
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;RemoteCan.c: 341: LCD_initialize(16);
  6128  0147CA  0E10               	movlw	16
  6129  0147CC  EC27  F0A8         	call	_LCD_initialize
  6130                           
  6131                           ;RemoteCan.c: 342: LCD_write_message(" PARK");
  6132  0147D0  0EE8               	movlw	low STR_14
  6133  0147D2  0100               	movlb	0	; () banked
  6134  0147D4  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  6135  0147D6  0EFF               	movlw	high STR_14
  6136  0147D8  0100               	movlb	0	; () banked
  6137  0147DA  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6138  0147DC  EC48  F0AE         	call	_LCD_write_message	;wreg free
  6139  0147E0                     l8812:
  6140                           
  6141                           ;RemoteCan.c: 343: }
  6142                           ;RemoteCan.c: 346: LCD_goto_xy(8,3);
  6143  0147E0  0E03               	movlw	3
  6144  0147E2  0100               	movlb	0	; () banked
  6145  0147E4  6F7E               	movwf	LCD_goto_xy@y& (0+255),b
  6146  0147E6  0E08               	movlw	8
  6147  0147E8  ECFC  F0AE         	call	_LCD_goto_xy
  6148                           
  6149                           ;RemoteCan.c: 347: LCD_initialize(16);
  6150  0147EC  0E10               	movlw	16
  6151  0147EE  EC27  F0A8         	call	_LCD_initialize
  6152                           
  6153                           ;RemoteCan.c: 348: LCD_write_string(str);
  6154  0147F2  0E15               	movlw	low _str
  6155  0147F4  0100               	movlb	0	; () banked
  6156  0147F6  6F80               	movwf	LCD_write_string@buffer& (0+255),b
  6157  0147F8  0E01               	movlw	high _str
  6158  0147FA  0100               	movlb	0	; () banked
  6159  0147FC  6F81               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  6160  0147FE  ECA9  F0AE         	call	_LCD_write_string	;wreg free
  6161  014802  0012               	return		;funcret
  6162  014804                     __end_of_LCD_Handler:
  6163                           	opt stack 0
  6164                           tblptru	equ	0xFF8
  6165                           tblptrh	equ	0xFF7
  6166                           tblptrl	equ	0xFF6
  6167                           tablat	equ	0xFF5
  6168                           intcon	equ	0xFF2
  6169                           postinc0	equ	0xFEE
  6170                           wreg	equ	0xFE8
  6171                           status	equ	0xFD8
  6172                           
  6173 ;; *************** function _sprintf *****************
  6174 ;; Defined at:
  6175 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6176 ;; Parameters:    Size  Location     Type
  6177 ;;  sp              2   97[BANK0 ] PTR unsigned char 
  6178 ;;		 -> str(12), 
  6179 ;;  f               2   99[BANK0 ] PTR const unsigned char 
  6180 ;;		 -> STR_5(5), 
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  6183 ;;  tmpval          4   14[BANK1 ] struct .
  6184 ;;  val             4    8[BANK1 ] unsigned long 
  6185 ;;  cp              3    0        PTR const unsigned char 
  6186 ;;  prec            2   18[BANK1 ] int 
  6187 ;;  exp             2   12[BANK1 ] int 
  6188 ;;  flag            2    6[BANK1 ] unsigned short 
  6189 ;;  ap              2    4[BANK1 ] PTR void [1]
  6190 ;;		 -> ?_sprintf(2), 
  6191 ;;  len             2    0        unsigned int 
  6192 ;;  width           2    0        int 
  6193 ;;  c               1   24[BANK1 ] char 
  6194 ;;  d               1    0        unsigned char 
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  2   97[BANK0 ] int 
  6197 ;; Registers used:
  6198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6204 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6205 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6206 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6207 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6208 ;;Total ram usage:       35 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; Hardware stack levels required when called:    5
  6211 ;; This function calls:
  6212 ;;		___awdiv
  6213 ;;		___fladd
  6214 ;;		___flge
  6215 ;;		___flmul
  6216 ;;		___flneg
  6217 ;;		___flsub
  6218 ;;		___fltol
  6219 ;;		___lldiv
  6220 ;;		___llmod
  6221 ;;		___wmul
  6222 ;;		___xxtofl
  6223 ;;		__div_to_l_
  6224 ;;		__tdiv_to_l_
  6225 ;;		_fround
  6226 ;;		_isdigit
  6227 ;;		_scale
  6228 ;; This function is called by:
  6229 ;;		_LCD_Handler
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           	psect	text8
  6234  010B06                     __ptext8:
  6235                           	opt stack 0
  6236  010B06                     _sprintf:
  6237                           	opt stack 24
  6238                           
  6239                           ;doprnt.c: 494: va_list ap;
  6240                           ;doprnt.c: 499: signed char c;
  6241                           ;doprnt.c: 501: int width;
  6242                           ;doprnt.c: 504: int prec;
  6243                           ;doprnt.c: 508: unsigned short flag;
  6244                           ;doprnt.c: 515: char d;
  6245                           ;doprnt.c: 516: double fval;
  6246                           ;doprnt.c: 517: int exp;
  6247                           ;doprnt.c: 523: union {
  6248                           ;doprnt.c: 524: unsigned long vd;
  6249                           ;doprnt.c: 525: double integ;
  6250                           ;doprnt.c: 526: } tmpval;
  6251                           ;doprnt.c: 528: unsigned long val;
  6252                           ;doprnt.c: 529: unsigned len;
  6253                           ;doprnt.c: 530: const char * cp;
  6254                           ;doprnt.c: 533: *ap = __va_start();
  6255                           
  6256                           ;incstack = 0
  6257  010B06  0EC5               	movlw	low (?_sprintf+4)
  6258  010B08  0101               	movlb	1	; () banked
  6259  010B0A  6F25               	movwf	sprintf@ap& (0+255),b
  6260  010B0C  0E00               	movlw	high (?_sprintf+4)
  6261  010B0E  0101               	movlb	1	; () banked
  6262  010B10  6F26               	movwf	(sprintf@ap+1)& (0+255),b
  6263                           
  6264                           ;doprnt.c: 536: while(c = *f++) {
  6265  010B12  EFB5  F089         	goto	l8528
  6266  010B16                     l8330:
  6267                           
  6268                           ; BSR set to: 1
  6269                           ;doprnt.c: 538: if(c != '%')
  6270  010B16  0E25               	movlw	37
  6271  010B18  0101               	movlb	1	; () banked
  6272  010B1A  1939               	xorwf	sprintf@c& (0+255),w,b
  6273  010B1C  B4D8               	btfsc	status,2,c
  6274  010B1E  D008               	goto	l8336
  6275                           
  6276                           ; BSR set to: 1
  6277                           ;doprnt.c: 540: {
  6278                           ;doprnt.c: 541: ((*sp++ = (c)));
  6279  010B20  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  6280  010B24  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  6281  010B28  C139  FFDF         	movff	sprintf@c,indf2
  6282  010B2C  EFB2  F089         	goto	l8526
  6283  010B30                     l8336:
  6284                           
  6285                           ;doprnt.c: 543: }
  6286                           ;doprnt.c: 548: flag = 0;
  6287  010B30  0E00               	movlw	0
  6288  010B32  0101               	movlb	1	; () banked
  6289  010B34  6F28               	movwf	(sprintf@flag+1)& (0+255),b
  6290  010B36  0E00               	movlw	0
  6291  010B38  6F27               	movwf	sprintf@flag& (0+255),b
  6292                           
  6293                           ; BSR set to: 1
  6294                           ;doprnt.c: 611: if(*f == '.') {
  6295  010B3A  C0C3  FFF6         	movff	sprintf@f,tblptrl
  6296  010B3E  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  6297  010B42                     	if	0	;tblptru may be non-zero
  6298  010B42                     	endif
  6299  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6300  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  6301  010B44  6EF8               	movwf	tblptru,c
  6302  010B46                     	endif
  6303  010B46  0008               	tblrd		*
  6304  010B48  50F5               	movf	tablat,w,c
  6305  010B4A  0A2E               	xorlw	46
  6306  010B4C  A4D8               	btfss	status,2,c
  6307  010B4E  D03D               	goto	l8350
  6308                           
  6309                           ; BSR set to: 1
  6310                           ;doprnt.c: 612: flag |= 0x4000;
  6311  010B50  0101               	movlb	1	; () banked
  6312  010B52  8D28               	bsf	(sprintf@flag+1)& (0+255),6,b
  6313                           
  6314                           ;doprnt.c: 613: f++;
  6315  010B54  0100               	movlb	0	; () banked
  6316  010B56  4BC3               	infsnz	sprintf@f& (0+255),f,b
  6317  010B58  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;doprnt.c: 620: {
  6321                           ;doprnt.c: 621: prec = 0;
  6322  010B5A  0E00               	movlw	0
  6323  010B5C  0101               	movlb	1	; () banked
  6324  010B5E  6F34               	movwf	(sprintf@prec+1)& (0+255),b
  6325  010B60  0E00               	movlw	0
  6326  010B62  6F33               	movwf	sprintf@prec& (0+255),b
  6327                           
  6328                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6329  010B64  D025               	goto	l8348
  6330  010B66                     l8344:
  6331                           
  6332                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6333  010B66  C133  F06F         	movff	sprintf@prec,___wmul@multiplier
  6334  010B6A  C134  F070         	movff	sprintf@prec+1,___wmul@multiplier+1
  6335  010B6E  0E00               	movlw	0
  6336  010B70  0100               	movlb	0	; () banked
  6337  010B72  6F72               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6338  010B74  0E0A               	movlw	10
  6339  010B76  6F71               	movwf	___wmul@multiplicand& (0+255),b
  6340  010B78  EC2D  F0AE         	call	___wmul	;wreg free
  6341  010B7C  C0C3  FFF6         	movff	sprintf@f,tblptrl
  6342  010B80  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  6343  010B84                     	if	0	;tblptru may be non-zero
  6344  010B84                     	endif
  6345  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6346  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  6347  010B86  6EF8               	movwf	tblptru,c
  6348  010B88                     	endif
  6349  010B88  0008               	tblrd		*
  6350  010B8A  50F5               	movf	tablat,w,c
  6351  010B8C  0100               	movlb	0	; () banked
  6352  010B8E  276F               	addwf	?___wmul& (0+255),f,b
  6353  010B90  0E00               	movlw	0
  6354  010B92  0100               	movlb	0	; () banked
  6355  010B94  2370               	addwfc	(?___wmul+1)& (0+255),f,b
  6356  010B96  0ED0               	movlw	208
  6357  010B98  0100               	movlb	0	; () banked
  6358  010B9A  256F               	addwf	?___wmul& (0+255),w,b
  6359  010B9C  0101               	movlb	1	; () banked
  6360  010B9E  6F33               	movwf	sprintf@prec& (0+255),b
  6361  010BA0  0EFF               	movlw	255
  6362  010BA2  0100               	movlb	0	; () banked
  6363  010BA4  2170               	addwfc	(?___wmul+1)& (0+255),w,b
  6364  010BA6  0101               	movlb	1	; () banked
  6365  010BA8  6F34               	movwf	(sprintf@prec+1)& (0+255),b
  6366                           
  6367                           ; BSR set to: 1
  6368  010BAA  0100               	movlb	0	; () banked
  6369  010BAC  4BC3               	infsnz	sprintf@f& (0+255),f,b
  6370  010BAE  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  6371  010BB0                     l8348:
  6372  010BB0  C0C3  FFF6         	movff	sprintf@f,tblptrl
  6373  010BB4  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  6374  010BB8                     	if	0	;tblptru may be non-zero
  6375  010BB8                     	endif
  6376  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6377  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  6378  010BBA  6EF8               	movwf	tblptru,c
  6379  010BBC                     	endif
  6380  010BBC  0008               	tblrd		*
  6381  010BBE  50F5               	movf	tablat,w,c
  6382  010BC0  EC94  F0AE         	call	_isdigit
  6383  010BC4  A0D8               	btfss	status,0,c
  6384  010BC6  D00C               	goto	l8358
  6385  010BC8  D7CE               	goto	l8344
  6386  010BCA                     l8350:
  6387                           
  6388                           ;doprnt.c: 626: prec = 0;
  6389  010BCA  0E00               	movlw	0
  6390  010BCC  0101               	movlb	1	; () banked
  6391  010BCE  6F34               	movwf	(sprintf@prec+1)& (0+255),b
  6392  010BD0  0E00               	movlw	0
  6393  010BD2  6F33               	movwf	sprintf@prec& (0+255),b
  6394                           
  6395                           ; BSR set to: 1
  6396                           ;doprnt.c: 628: flag |= 0x1000;
  6397  010BD4  0101               	movlb	1	; () banked
  6398  010BD6  8928               	bsf	(sprintf@flag+1)& (0+255),4,b
  6399                           
  6400                           ; BSR set to: 1
  6401                           ;doprnt.c: 630: }
  6402                           ;doprnt.c: 635: switch(c = *f++) {
  6403  010BD8  D003               	goto	l8358
  6404  010BDA                     l8354:
  6405                           
  6406                           ; BSR set to: 1
  6407                           ;doprnt.c: 663: flag |= 0x400;
  6408  010BDA  0101               	movlb	1	; () banked
  6409  010BDC  8528               	bsf	(sprintf@flag+1)& (0+255),2,b
  6410                           
  6411                           ;doprnt.c: 664: break;
  6412  010BDE  D015               	goto	l8360
  6413  010BE0                     l8358:
  6414  010BE0  C0C3  FFF6         	movff	sprintf@f,tblptrl
  6415  010BE4  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  6416  010BE8  0100               	movlb	0	; () banked
  6417  010BEA  4BC3               	infsnz	sprintf@f& (0+255),f,b
  6418  010BEC  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  6419  010BEE                     	if	0	;tblptru may be non-zero
  6420  010BEE                     	endif
  6421  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6422  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  6423  010BF0  6EF8               	movwf	tblptru,c
  6424  010BF2                     	endif
  6425  010BF2  0008               	tblrd		*
  6426  010BF4  CFF5 F139          	movff	tablat,sprintf@c
  6427  010BF8  0101               	movlb	1	; () banked
  6428  010BFA  5139               	movf	sprintf@c& (0+255),w,b
  6429                           
  6430                           ; Switch size 1, requested type "space"
  6431                           ; Number of cases is 2, Range of values is 0 to 102
  6432                           ; switch strategies available:
  6433                           ; Name         Instructions Cycles
  6434                           ; simple_byte            7     4 (average)
  6435                           ;	Chosen strategy is simple_byte
  6436  010BFC  0A00               	xorlw	0	; case 0
  6437  010BFE  B4D8               	btfsc	status,2,c
  6438  010C00  D3C5               	goto	l8530
  6439  010C02  0A66               	xorlw	102	; case 102
  6440  010C04  B4D8               	btfsc	status,2,c
  6441  010C06  D7E9               	goto	l8354
  6442  010C08  D3B0               	goto	l8528
  6443  010C0A                     l8360:
  6444                           
  6445                           ; BSR set to: 1
  6446                           ;doprnt.c: 825: if(flag & (0x700)) {
  6447  010C0A  0E07               	movlw	7
  6448  010C0C  0101               	movlb	1	; () banked
  6449  010C0E  1528               	andwf	(sprintf@flag+1)& (0+255),w,b
  6450  010C10  B4D8               	btfsc	status,2,c
  6451  010C12  D353               	goto	l8508
  6452                           
  6453                           ; BSR set to: 1
  6454                           ;doprnt.c: 827: if(flag & 0x1000)
  6455  010C14  0101               	movlb	1	; () banked
  6456  010C16  A928               	btfss	(sprintf@flag+1)& (0+255),4,b
  6457  010C18  D005               	goto	l8366
  6458                           
  6459                           ; BSR set to: 1
  6460                           ;doprnt.c: 829: prec = 6;
  6461  010C1A  0E00               	movlw	0
  6462  010C1C  0101               	movlb	1	; () banked
  6463  010C1E  6F34               	movwf	(sprintf@prec+1)& (0+255),b
  6464  010C20  0E06               	movlw	6
  6465  010C22  6F33               	movwf	sprintf@prec& (0+255),b
  6466  010C24                     l8366:
  6467                           
  6468                           ; BSR set to: 1
  6469                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6470  010C24  C125  FFD9         	movff	sprintf@ap,fsr2l
  6471  010C28  C126  FFDA         	movff	sprintf@ap+1,fsr2h
  6472  010C2C  CFDE F135          	movff	postinc2,sprintf@fval
  6473  010C30  CFDE F136          	movff	postinc2,sprintf@fval+1
  6474  010C34  CFDE F137          	movff	postinc2,sprintf@fval+2
  6475  010C38  CFDE F138          	movff	postinc2,sprintf@fval+3
  6476                           
  6477                           ; BSR set to: 1
  6478  010C3C  0E04               	movlw	4
  6479  010C3E  0101               	movlb	1	; () banked
  6480  010C40  2725               	addwf	sprintf@ap& (0+255),f,b
  6481  010C42  0E00               	movlw	0
  6482  010C44  2326               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6483                           
  6484                           ; BSR set to: 1
  6485                           ;doprnt.c: 831: if(fval < 0.0) {
  6486  010C46  0101               	movlb	1	; () banked
  6487  010C48  AF38               	btfss	(sprintf@fval+3)& (0+255),7,b
  6488  010C4A  D015               	goto	l8376
  6489                           
  6490                           ; BSR set to: 1
  6491                           ;doprnt.c: 832: fval = -fval;
  6492  010C4C  C135  F096         	movff	sprintf@fval,___flneg@f1
  6493  010C50  C136  F097         	movff	sprintf@fval+1,___flneg@f1+1
  6494  010C54  C137  F098         	movff	sprintf@fval+2,___flneg@f1+2
  6495  010C58  C138  F099         	movff	sprintf@fval+3,___flneg@f1+3
  6496  010C5C  EC11  F0AE         	call	___flneg	;wreg free
  6497  010C60  C096  F135         	movff	?___flneg,sprintf@fval
  6498  010C64  C097  F136         	movff	?___flneg+1,sprintf@fval+1
  6499  010C68  C098  F137         	movff	?___flneg+2,sprintf@fval+2
  6500  010C6C  C099  F138         	movff	?___flneg+3,sprintf@fval+3
  6501                           
  6502                           ;doprnt.c: 833: flag |= 0x03;
  6503  010C70  0E03               	movlw	3
  6504  010C72  0101               	movlb	1	; () banked
  6505  010C74  1327               	iorwf	sprintf@flag& (0+255),f,b
  6506  010C76                     l8376:
  6507                           
  6508                           ; BSR set to: 1
  6509                           ;doprnt.c: 834: }
  6510                           ;doprnt.c: 835: exp = 0;
  6511  010C76  0E00               	movlw	0
  6512  010C78  0101               	movlb	1	; () banked
  6513  010C7A  6F2E               	movwf	(sprintf@exp+1)& (0+255),b
  6514  010C7C  0E00               	movlw	0
  6515  010C7E  6F2D               	movwf	sprintf@exp& (0+255),b
  6516                           
  6517                           ; BSR set to: 1
  6518                           ;doprnt.c: 836: if( fval!=0) {
  6519  010C80  0101               	movlb	1	; () banked
  6520  010C82  5135               	movf	sprintf@fval& (0+255),w,b
  6521  010C84  0101               	movlb	1	; () banked
  6522  010C86  1136               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6523  010C88  0101               	movlb	1	; () banked
  6524  010C8A  1137               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6525  010C8C  0101               	movlb	1	; () banked
  6526  010C8E  1138               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6527  010C90  B4D8               	btfsc	status,2,c
  6528  010C92  D08E               	goto	l8404
  6529                           
  6530                           ; BSR set to: 1
  6531                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  6532  010C94  0101               	movlb	1	; () banked
  6533  010C96  3537               	rlcf	(sprintf@fval+2)& (0+255),w,b
  6534  010C98  3538               	rlcf	(sprintf@fval+3)& (0+255),w,b
  6535  010C9A  0F82               	addlw	130
  6536  010C9C  0101               	movlb	1	; () banked
  6537  010C9E  6F2D               	movwf	sprintf@exp& (0+255),b
  6538  010CA0  0101               	movlb	1	; () banked
  6539  010CA2  6B2E               	clrf	(sprintf@exp+1)& (0+255),b
  6540  010CA4  0EFF               	movlw	255
  6541  010CA6  232E               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6542                           
  6543                           ; BSR set to: 1
  6544                           ;doprnt.c: 838: exp--;
  6545  010CA8  0101               	movlb	1	; () banked
  6546  010CAA  072D               	decf	sprintf@exp& (0+255),f,b
  6547  010CAC  A0D8               	btfss	status,0,c
  6548  010CAE  072E               	decf	(sprintf@exp+1)& (0+255),f,b
  6549                           
  6550                           ; BSR set to: 1
  6551                           ;doprnt.c: 839: exp *= 3;
  6552  010CB0  C12D  F06F         	movff	sprintf@exp,___wmul@multiplier
  6553  010CB4  C12E  F070         	movff	sprintf@exp+1,___wmul@multiplier+1
  6554  010CB8  0E00               	movlw	0
  6555  010CBA  0100               	movlb	0	; () banked
  6556  010CBC  6F72               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6557  010CBE  0E03               	movlw	3
  6558  010CC0  6F71               	movwf	___wmul@multiplicand& (0+255),b
  6559  010CC2  EC2D  F0AE         	call	___wmul	;wreg free
  6560  010CC6  C06F  F12D         	movff	?___wmul,sprintf@exp
  6561  010CCA  C070  F12E         	movff	?___wmul+1,sprintf@exp+1
  6562                           
  6563                           ;doprnt.c: 840: exp /= 10;
  6564  010CCE  C12D  F075         	movff	sprintf@exp,___awdiv@dividend
  6565  010CD2  C12E  F076         	movff	sprintf@exp+1,___awdiv@dividend+1
  6566  010CD6  0E00               	movlw	0
  6567  010CD8  0100               	movlb	0	; () banked
  6568  010CDA  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  6569  010CDC  0E0A               	movlw	10
  6570  010CDE  6F77               	movwf	___awdiv@divisor& (0+255),b
  6571  010CE0  ECE9  F0AA         	call	___awdiv	;wreg free
  6572  010CE4  C075  F12D         	movff	?___awdiv,sprintf@exp
  6573  010CE8  C076  F12E         	movff	?___awdiv+1,sprintf@exp+1
  6574                           
  6575                           ;doprnt.c: 841: if(exp < 0)
  6576  010CEC  0101               	movlb	1	; () banked
  6577  010CEE  AF2E               	btfss	(sprintf@exp+1)& (0+255),7,b
  6578  010CF0  D004               	goto	l8392
  6579                           
  6580                           ; BSR set to: 1
  6581                           ;doprnt.c: 842: exp--;
  6582  010CF2  0101               	movlb	1	; () banked
  6583  010CF4  072D               	decf	sprintf@exp& (0+255),f,b
  6584  010CF6  A0D8               	btfss	status,0,c
  6585  010CF8  072E               	decf	(sprintf@exp+1)& (0+255),f,b
  6586  010CFA                     l8392:
  6587                           
  6588                           ; BSR set to: 1
  6589                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6590  010CFA  0101               	movlb	1	; () banked
  6591  010CFC  512D               	movf	sprintf@exp& (0+255),w,b
  6592  010CFE  0800               	sublw	0
  6593  010D00  EC2E  F094         	call	_scale
  6594  010D04  C096  F12F         	movff	?_scale,sprintf@tmpval
  6595  010D08  C097  F130         	movff	?_scale+1,sprintf@tmpval+1
  6596  010D0C  C098  F131         	movff	?_scale+2,sprintf@tmpval+2
  6597  010D10  C099  F132         	movff	?_scale+3,sprintf@tmpval+3
  6598                           
  6599                           ;doprnt.c: 847: tmpval.integ *= fval;
  6600  010D14  C12F  F07D         	movff	sprintf@tmpval,___flmul@b
  6601  010D18  C130  F07E         	movff	sprintf@tmpval+1,___flmul@b+1
  6602  010D1C  C131  F07F         	movff	sprintf@tmpval+2,___flmul@b+2
  6603  010D20  C132  F080         	movff	sprintf@tmpval+3,___flmul@b+3
  6604  010D24  C135  F081         	movff	sprintf@fval,___flmul@a
  6605  010D28  C136  F082         	movff	sprintf@fval+1,___flmul@a+1
  6606  010D2C  C137  F083         	movff	sprintf@fval+2,___flmul@a+2
  6607  010D30  C138  F084         	movff	sprintf@fval+3,___flmul@a+3
  6608  010D34  EC95  F09B         	call	___flmul	;wreg free
  6609  010D38  C07D  F12F         	movff	?___flmul,sprintf@tmpval
  6610  010D3C  C07E  F130         	movff	?___flmul+1,sprintf@tmpval+1
  6611  010D40  C07F  F131         	movff	?___flmul+2,sprintf@tmpval+2
  6612  010D44  C080  F132         	movff	?___flmul+3,sprintf@tmpval+3
  6613                           
  6614                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6615  010D48  C12F  F06F         	movff	sprintf@tmpval,___flge@ff1
  6616  010D4C  C130  F070         	movff	sprintf@tmpval+1,___flge@ff1+1
  6617  010D50  C131  F071         	movff	sprintf@tmpval+2,___flge@ff1+2
  6618  010D54  C132  F072         	movff	sprintf@tmpval+3,___flge@ff1+3
  6619  010D58  0E00               	movlw	0
  6620  010D5A  0100               	movlb	0	; () banked
  6621  010D5C  6F73               	movwf	___flge@ff2& (0+255),b
  6622  010D5E  0E00               	movlw	0
  6623  010D60  6F74               	movwf	(___flge@ff2+1)& (0+255),b
  6624  010D62  0E80               	movlw	128
  6625  010D64  6F75               	movwf	(___flge@ff2+2)& (0+255),b
  6626  010D66  0E3F               	movlw	63
  6627  010D68  6F76               	movwf	(___flge@ff2+3)& (0+255),b
  6628  010D6A  EC9B  F0A6         	call	___flge	;wreg free
  6629  010D6E  0100               	movlb	0	; () banked
  6630  010D70  B0D8               	btfsc	status,0,c
  6631  010D72  D005               	goto	l8400
  6632                           
  6633                           ; BSR set to: 0
  6634                           ;doprnt.c: 849: exp--;
  6635  010D74  0101               	movlb	1	; () banked
  6636  010D76  072D               	decf	sprintf@exp& (0+255),f,b
  6637  010D78  A0D8               	btfss	status,0,c
  6638  010D7A  072E               	decf	(sprintf@exp+1)& (0+255),f,b
  6639  010D7C  D019               	goto	l8404
  6640  010D7E                     l8400:
  6641                           
  6642                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6643  010D7E  C12F  F06F         	movff	sprintf@tmpval,___flge@ff1
  6644  010D82  C130  F070         	movff	sprintf@tmpval+1,___flge@ff1+1
  6645  010D86  C131  F071         	movff	sprintf@tmpval+2,___flge@ff1+2
  6646  010D8A  C132  F072         	movff	sprintf@tmpval+3,___flge@ff1+3
  6647  010D8E  0E00               	movlw	0
  6648  010D90  0100               	movlb	0	; () banked
  6649  010D92  6F73               	movwf	___flge@ff2& (0+255),b
  6650  010D94  0E00               	movlw	0
  6651  010D96  6F74               	movwf	(___flge@ff2+1)& (0+255),b
  6652  010D98  0E20               	movlw	32
  6653  010D9A  6F75               	movwf	(___flge@ff2+2)& (0+255),b
  6654  010D9C  0E41               	movlw	65
  6655  010D9E  6F76               	movwf	(___flge@ff2+3)& (0+255),b
  6656  010DA0  EC9B  F0A6         	call	___flge	;wreg free
  6657  010DA4  0100               	movlb	0	; () banked
  6658  010DA6  A0D8               	btfss	status,0,c
  6659  010DA8  D003               	goto	l8404
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;doprnt.c: 851: exp++;
  6663  010DAA  0101               	movlb	1	; () banked
  6664  010DAC  4B2D               	infsnz	sprintf@exp& (0+255),f,b
  6665  010DAE  2B2E               	incf	(sprintf@exp+1)& (0+255),f,b
  6666  010DB0                     l8404:
  6667                           
  6668                           ;doprnt.c: 852: }
  6669                           ;doprnt.c: 1112: if(prec <= 12)
  6670  010DB0  0101               	movlb	1	; () banked
  6671  010DB2  BF34               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6672  010DB4  D008               	goto	l8406
  6673  010DB6  0101               	movlb	1	; () banked
  6674  010DB8  5134               	movf	(sprintf@prec+1)& (0+255),w,b
  6675  010DBA  E123               	bnz	l8408
  6676  010DBC  0E0D               	movlw	13
  6677  010DBE  0101               	movlb	1	; () banked
  6678  010DC0  5D33               	subwf	sprintf@prec& (0+255),w,b
  6679  010DC2  B0D8               	btfsc	status,0,c
  6680  010DC4  D01E               	goto	l8408
  6681  010DC6                     l8406:
  6682                           
  6683                           ; BSR set to: 1
  6684                           ;doprnt.c: 1113: fval += fround(prec);
  6685  010DC6  C135  F0A3         	movff	sprintf@fval,___fladd@b
  6686  010DCA  C136  F0A4         	movff	sprintf@fval+1,___fladd@b+1
  6687  010DCE  C137  F0A5         	movff	sprintf@fval+2,___fladd@b+2
  6688  010DD2  C138  F0A6         	movff	sprintf@fval+3,___fladd@b+3
  6689  010DD6  0101               	movlb	1	; () banked
  6690  010DD8  5133               	movf	sprintf@prec& (0+255),w,b
  6691  010DDA  EC97  F0A1         	call	_fround
  6692  010DDE  C096  F0A7         	movff	?_fround,___fladd@a
  6693  010DE2  C097  F0A8         	movff	?_fround+1,___fladd@a+1
  6694  010DE6  C098  F0A9         	movff	?_fround+2,___fladd@a+2
  6695  010DEA  C099  F0AA         	movff	?_fround+3,___fladd@a+3
  6696  010DEE  EC41  F099         	call	___fladd	;wreg free
  6697  010DF2  C0A3  F135         	movff	?___fladd,sprintf@fval
  6698  010DF6  C0A4  F136         	movff	?___fladd+1,sprintf@fval+1
  6699  010DFA  C0A5  F137         	movff	?___fladd+2,sprintf@fval+2
  6700  010DFE  C0A6  F138         	movff	?___fladd+3,sprintf@fval+3
  6701  010E02                     l8408:
  6702                           
  6703                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6704  010E02  0101               	movlb	1	; () banked
  6705  010E04  BF2E               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6706  010E06  D008               	goto	l8410
  6707  010E08  0101               	movlb	1	; () banked
  6708  010E0A  512E               	movf	(sprintf@exp+1)& (0+255),w,b
  6709  010E0C  E12E               	bnz	l8416
  6710  010E0E  0E0A               	movlw	10
  6711  010E10  0101               	movlb	1	; () banked
  6712  010E12  5D2D               	subwf	sprintf@exp& (0+255),w,b
  6713  010E14  B0D8               	btfsc	status,0,c
  6714  010E16  D029               	goto	l8416
  6715  010E18                     l8410:
  6716                           
  6717                           ; BSR set to: 1
  6718  010E18  0101               	movlb	1	; () banked
  6719  010E1A  5135               	movf	sprintf@fval& (0+255),w,b
  6720  010E1C  0101               	movlb	1	; () banked
  6721  010E1E  1136               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6722  010E20  0101               	movlb	1	; () banked
  6723  010E22  1137               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6724  010E24  0101               	movlb	1	; () banked
  6725  010E26  1138               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6726  010E28  B4D8               	btfsc	status,2,c
  6727  010E2A  D06D               	goto	l8430
  6728                           
  6729                           ; BSR set to: 1
  6730  010E2C  C135  F0B7         	movff	sprintf@fval,___fltol@f1
  6731  010E30  C136  F0B8         	movff	sprintf@fval+1,___fltol@f1+1
  6732  010E34  C137  F0B9         	movff	sprintf@fval+2,___fltol@f1+2
  6733  010E38  C138  F0BA         	movff	sprintf@fval+3,___fltol@f1+3
  6734  010E3C  EC8C  F0A9         	call	___fltol	;wreg free
  6735  010E40  0100               	movlb	0	; () banked
  6736  010E42  51B7               	movf	?___fltol& (0+255),w,b
  6737  010E44  0100               	movlb	0	; () banked
  6738  010E46  11B8               	iorwf	(?___fltol+1)& (0+255),w,b
  6739  010E48  0100               	movlb	0	; () banked
  6740  010E4A  11B9               	iorwf	(?___fltol+2)& (0+255),w,b
  6741  010E4C  0100               	movlb	0	; () banked
  6742  010E4E  11BA               	iorwf	(?___fltol+3)& (0+255),w,b
  6743  010E50  A4D8               	btfss	status,2,c
  6744  010E52  D059               	goto	l8430
  6745                           
  6746                           ; BSR set to: 0
  6747  010E54  0101               	movlb	1	; () banked
  6748  010E56  BF2E               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6749  010E58  D056               	goto	l8430
  6750  010E5A  0101               	movlb	1	; () banked
  6751  010E5C  512E               	movf	(sprintf@exp+1)& (0+255),w,b
  6752  010E5E  E105               	bnz	l8416
  6753  010E60  0E02               	movlw	2
  6754  010E62  0101               	movlb	1	; () banked
  6755  010E64  5D2D               	subwf	sprintf@exp& (0+255),w,b
  6756  010E66  A0D8               	btfss	status,0,c
  6757  010E68  D04E               	goto	l8430
  6758  010E6A                     l8416:
  6759                           
  6760                           ; BSR set to: 1
  6761                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6762  010E6A  C12F  F06F         	movff	sprintf@tmpval,___flge@ff1
  6763  010E6E  C130  F070         	movff	sprintf@tmpval+1,___flge@ff1+1
  6764  010E72  C131  F071         	movff	sprintf@tmpval+2,___flge@ff1+2
  6765  010E76  C132  F072         	movff	sprintf@tmpval+3,___flge@ff1+3
  6766  010E7A  0E5F               	movlw	95
  6767  010E7C  0100               	movlb	0	; () banked
  6768  010E7E  6F73               	movwf	___flge@ff2& (0+255),b
  6769  010E80  0E70               	movlw	112
  6770  010E82  6F74               	movwf	(___flge@ff2+1)& (0+255),b
  6771  010E84  0E89               	movlw	137
  6772  010E86  6F75               	movwf	(___flge@ff2+2)& (0+255),b
  6773  010E88  0E40               	movlw	64
  6774  010E8A  6F76               	movwf	(___flge@ff2+3)& (0+255),b
  6775  010E8C  EC9B  F0A6         	call	___flge	;wreg free
  6776  010E90  0100               	movlb	0	; () banked
  6777  010E92  B0D8               	btfsc	status,0,c
  6778  010E94  D003               	goto	l8420
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6782  010E96  0101               	movlb	1	; () banked
  6783  010E98  0EF7               	movlw	247
  6784  010E9A  D002               	goto	L3
  6785  010E9C                     l8420:
  6786                           
  6787                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6788  010E9C  0101               	movlb	1	; () banked
  6789  010E9E  0EF8               	movlw	248
  6790  010EA0                     L3:
  6791  010EA0  272D               	addwf	sprintf@exp& (0+255),f,b
  6792  010EA2  0EFF               	movlw	255
  6793  010EA4  232E               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6794                           
  6795                           ; BSR set to: 1
  6796                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6797                           
  6798                           ; BSR set to: 1
  6799  010EA6  0101               	movlb	1	; () banked
  6800  010EA8  512D               	movf	sprintf@exp& (0+255),w,b
  6801  010EAA  EC2E  F094         	call	_scale
  6802  010EAE  C096  F12F         	movff	?_scale,sprintf@tmpval
  6803  010EB2  C097  F130         	movff	?_scale+1,sprintf@tmpval+1
  6804  010EB6  C098  F131         	movff	?_scale+2,sprintf@tmpval+2
  6805  010EBA  C099  F132         	movff	?_scale+3,sprintf@tmpval+3
  6806  010EBE  C135  F06F         	movff	sprintf@fval,__div_to_l_@f1
  6807  010EC2  C136  F070         	movff	sprintf@fval+1,__div_to_l_@f1+1
  6808  010EC6  C137  F071         	movff	sprintf@fval+2,__div_to_l_@f1+2
  6809  010ECA  C138  F072         	movff	sprintf@fval+3,__div_to_l_@f1+3
  6810  010ECE  C12F  F073         	movff	sprintf@tmpval,__div_to_l_@f2
  6811  010ED2  C130  F074         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  6812  010ED6  C131  F075         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  6813  010EDA  C132  F076         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  6814  010EDE  EC63  F0A7         	call	__div_to_l_	;wreg free
  6815  010EE2  C06F  F129         	movff	?__div_to_l_,sprintf@val
  6816  010EE6  C070  F12A         	movff	?__div_to_l_+1,sprintf@val+1
  6817  010EEA  C071  F12B         	movff	?__div_to_l_+2,sprintf@val+2
  6818  010EEE  C072  F12C         	movff	?__div_to_l_+3,sprintf@val+3
  6819                           
  6820                           ;doprnt.c: 1129: fval = 0.0;
  6821  010EF2  0E00               	movlw	0
  6822  010EF4  0101               	movlb	1	; () banked
  6823  010EF6  6F35               	movwf	sprintf@fval& (0+255),b
  6824  010EF8  0E00               	movlw	0
  6825  010EFA  6F36               	movwf	(sprintf@fval+1)& (0+255),b
  6826  010EFC  0E00               	movlw	0
  6827  010EFE  6F37               	movwf	(sprintf@fval+2)& (0+255),b
  6828  010F00  0E00               	movlw	0
  6829  010F02  6F38               	movwf	(sprintf@fval+3)& (0+255),b
  6830                           
  6831                           ;doprnt.c: 1130: } else {
  6832  010F04  D03C               	goto	l8434
  6833  010F06                     l8430:
  6834                           
  6835                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6836  010F06  C135  F0B7         	movff	sprintf@fval,___fltol@f1
  6837  010F0A  C136  F0B8         	movff	sprintf@fval+1,___fltol@f1+1
  6838  010F0E  C137  F0B9         	movff	sprintf@fval+2,___fltol@f1+2
  6839  010F12  C138  F0BA         	movff	sprintf@fval+3,___fltol@f1+3
  6840  010F16  EC8C  F0A9         	call	___fltol	;wreg free
  6841  010F1A  C0B7  F129         	movff	?___fltol,sprintf@val
  6842  010F1E  C0B8  F12A         	movff	?___fltol+1,sprintf@val+1
  6843  010F22  C0B9  F12B         	movff	?___fltol+2,sprintf@val+2
  6844  010F26  C0BA  F12C         	movff	?___fltol+3,sprintf@val+3
  6845                           
  6846                           ;doprnt.c: 1132: fval -= (double)val;
  6847  010F2A  C135  F0B7         	movff	sprintf@fval,___flsub@b
  6848  010F2E  C136  F0B8         	movff	sprintf@fval+1,___flsub@b+1
  6849  010F32  C137  F0B9         	movff	sprintf@fval+2,___flsub@b+2
  6850  010F36  C138  F0BA         	movff	sprintf@fval+3,___flsub@b+3
  6851  010F3A  C129  F06F         	movff	sprintf@val,___xxtofl@val
  6852  010F3E  C12A  F070         	movff	sprintf@val+1,___xxtofl@val+1
  6853  010F42  C12B  F071         	movff	sprintf@val+2,___xxtofl@val+2
  6854  010F46  C12C  F072         	movff	sprintf@val+3,___xxtofl@val+3
  6855  010F4A  0E00               	movlw	0
  6856  010F4C  EC02  F0A4         	call	___xxtofl
  6857  010F50  C06F  F0BB         	movff	?___xxtofl,___flsub@a
  6858  010F54  C070  F0BC         	movff	?___xxtofl+1,___flsub@a+1
  6859  010F58  C071  F0BD         	movff	?___xxtofl+2,___flsub@a+2
  6860  010F5C  C072  F0BE         	movff	?___xxtofl+3,___flsub@a+3
  6861  010F60  EC91  F0AD         	call	___flsub	;wreg free
  6862  010F64  C0B7  F135         	movff	?___flsub,sprintf@fval
  6863  010F68  C0B8  F136         	movff	?___flsub+1,sprintf@fval+1
  6864  010F6C  C0B9  F137         	movff	?___flsub+2,sprintf@fval+2
  6865  010F70  C0BA  F138         	movff	?___flsub+3,sprintf@fval+3
  6866                           
  6867                           ;doprnt.c: 1133: exp = 0;
  6868  010F74  0E00               	movlw	0
  6869  010F76  0101               	movlb	1	; () banked
  6870  010F78  6F2E               	movwf	(sprintf@exp+1)& (0+255),b
  6871  010F7A  0E00               	movlw	0
  6872  010F7C  6F2D               	movwf	sprintf@exp& (0+255),b
  6873  010F7E                     l8434:
  6874                           
  6875                           ; BSR set to: 1
  6876                           ;doprnt.c: 1134: }
  6877                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6878  010F7E  0E01               	movlw	1
  6879  010F80  0101               	movlb	1	; () banked
  6880  010F82  6F39               	movwf	sprintf@c& (0+255),b
  6881  010F84                     l8436:
  6882                           
  6883                           ; BSR set to: 1
  6884  010F84  0E0A               	movlw	10
  6885  010F86  0101               	movlb	1	; () banked
  6886  010F88  1939               	xorwf	sprintf@c& (0+255),w,b
  6887  010F8A  B4D8               	btfsc	status,2,c
  6888  010F8C  D021               	goto	l8448
  6889                           
  6890                           ; BSR set to: 1
  6891                           ;doprnt.c: 1137: if(val < dpowers[c])
  6892                           
  6893                           ; BSR set to: 1
  6894                           
  6895                           ; BSR set to: 1
  6896  010F8E  0101               	movlb	1	; () banked
  6897  010F90  5139               	movf	sprintf@c& (0+255),w,b
  6898  010F92  0D04               	mullw	4
  6899  010F94  0E41               	movlw	low _dpowers
  6900  010F96  24F3               	addwf	prodl,w,c
  6901  010F98  6EF6               	movwf	tblptrl,c
  6902  010F9A  0EFF               	movlw	high _dpowers
  6903  010F9C  20F4               	addwfc	prodh,w,c
  6904  010F9E  6EF7               	movwf	tblptrh,c
  6905  010FA0                     	if	1	;There are 3 active tblptr bytes
  6906  010FA0  6AF8               	clrf	tblptru,c
  6907  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  6908  010FA4  22F8               	addwfc	tblptru,f,c
  6909  010FA6                     	endif
  6910  010FA6  0009               	tblrd		*+
  6911  010FA8  50F5               	movf	tablat,w,c
  6912  010FAA  0101               	movlb	1	; () banked
  6913  010FAC  5D29               	subwf	sprintf@val& (0+255),w,b
  6914  010FAE  0009               	tblrd		*+
  6915  010FB0  50F5               	movf	tablat,w,c
  6916  010FB2  0101               	movlb	1	; () banked
  6917  010FB4  592A               	subwfb	(sprintf@val+1)& (0+255),w,b
  6918  010FB6  0009               	tblrd		*+
  6919  010FB8  50F5               	movf	tablat,w,c
  6920  010FBA  0101               	movlb	1	; () banked
  6921  010FBC  592B               	subwfb	(sprintf@val+2)& (0+255),w,b
  6922  010FBE  0009               	tblrd		*+
  6923  010FC0  50F5               	movf	tablat,w,c
  6924  010FC2  0101               	movlb	1	; () banked
  6925  010FC4  592C               	subwfb	(sprintf@val+3)& (0+255),w,b
  6926  010FC6  A0D8               	btfss	status,0,c
  6927  010FC8  D003               	goto	l8448
  6928                           
  6929                           ; BSR set to: 1
  6930                           
  6931                           ; BSR set to: 1
  6932                           
  6933                           ; BSR set to: 1
  6934                           ;doprnt.c: 1138: break;
  6935  010FCA  0101               	movlb	1	; () banked
  6936  010FCC  2B39               	incf	sprintf@c& (0+255),f,b
  6937  010FCE  D7DA               	goto	l8436
  6938  010FD0                     l8448:
  6939                           
  6940                           ; BSR set to: 1
  6941                           ;doprnt.c: 1175: {
  6942                           ;doprnt.c: 1188: if(flag & 0x03)
  6943  010FD0  0E03               	movlw	3
  6944  010FD2  0101               	movlb	1	; () banked
  6945  010FD4  1527               	andwf	sprintf@flag& (0+255),w,b
  6946  010FD6  0100               	movlb	0	; () banked
  6947  010FD8  6FC9               	movwf	??_sprintf& (0+255),b
  6948  010FDA  0E00               	movlw	0
  6949  010FDC  0101               	movlb	1	; () banked
  6950  010FDE  1528               	andwf	(sprintf@flag+1)& (0+255),w,b
  6951  010FE0  0100               	movlb	0	; () banked
  6952  010FE2  6FCA               	movwf	(??_sprintf+1)& (0+255),b
  6953  010FE4  0100               	movlb	0	; () banked
  6954  010FE6  51C9               	movf	??_sprintf& (0+255),w,b
  6955  010FE8  0100               	movlb	0	; () banked
  6956  010FEA  11CA               	iorwf	(??_sprintf+1)& (0+255),w,b
  6957  010FEC  B4D8               	btfsc	status,2,c
  6958  010FEE  D058               	goto	l8462
  6959                           
  6960                           ; BSR set to: 0
  6961                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  6962  010FF0  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  6963  010FF4  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  6964  010FF8  0E2D               	movlw	45
  6965  010FFA  D050               	goto	L4
  6966  010FFC                     l8452:
  6967                           
  6968                           ; BSR set to: 0
  6969  010FFC  0100               	movlb	0	; () banked
  6970  010FFE  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  6971  011000  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  6972                           
  6973                           ; BSR set to: 0
  6974                           ;doprnt.c: 1195: }
  6975                           ;doprnt.c: 1196: while(c--) {
  6976  011002  D04E               	goto	l8462
  6977  011004                     l8454:
  6978                           
  6979                           ;doprnt.c: 1200: {
  6980                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  6981  011004  C129  F06F         	movff	sprintf@val,___lldiv@dividend
  6982  011008  C12A  F070         	movff	sprintf@val+1,___lldiv@dividend+1
  6983  01100C  C12B  F071         	movff	sprintf@val+2,___lldiv@dividend+2
  6984  011010  C12C  F072         	movff	sprintf@val+3,___lldiv@dividend+3
  6985  011014  0101               	movlb	1	; () banked
  6986  011016  5139               	movf	sprintf@c& (0+255),w,b
  6987  011018  0D04               	mullw	4
  6988  01101A  0E41               	movlw	low _dpowers
  6989  01101C  24F3               	addwf	prodl,w,c
  6990  01101E  6EF6               	movwf	tblptrl,c
  6991  011020  0EFF               	movlw	high _dpowers
  6992  011022  20F4               	addwfc	prodh,w,c
  6993  011024  6EF7               	movwf	tblptrh,c
  6994  011026                     	if	1	;There are 3 active tblptr bytes
  6995  011026  6AF8               	clrf	tblptru,c
  6996  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  6997  01102A  22F8               	addwfc	tblptru,f,c
  6998  01102C                     	endif
  6999  01102C  0009               	tblrd		*+
  7000  01102E  CFF5 F073          	movff	tablat,___lldiv@divisor
  7001  011032  0009               	tblrd		*+
  7002  011034  CFF5 F074          	movff	tablat,___lldiv@divisor+1
  7003  011038  0009               	tblrd		*+
  7004  01103A  CFF5 F075          	movff	tablat,___lldiv@divisor+2
  7005  01103E  000A               	tblrd		*-
  7006  011040  CFF5 F076          	movff	tablat,___lldiv@divisor+3
  7007  011044  EC48  F0AB         	call	___lldiv	;wreg free
  7008  011048  C06F  F12F         	movff	?___lldiv,sprintf@tmpval
  7009  01104C  C070  F130         	movff	?___lldiv+1,sprintf@tmpval+1
  7010  011050  C071  F131         	movff	?___lldiv+2,sprintf@tmpval+2
  7011  011054  C072  F132         	movff	?___lldiv+3,sprintf@tmpval+3
  7012                           
  7013                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7014  011058  C12F  F06F         	movff	sprintf@tmpval,___llmod@dividend
  7015  01105C  C130  F070         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7016  011060  C131  F071         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7017  011064  C132  F072         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7018  011068  0E0A               	movlw	10
  7019  01106A  0100               	movlb	0	; () banked
  7020  01106C  6F73               	movwf	___llmod@divisor& (0+255),b
  7021  01106E  0E00               	movlw	0
  7022  011070  6F74               	movwf	(___llmod@divisor+1)& (0+255),b
  7023  011072  0E00               	movlw	0
  7024  011074  6F75               	movwf	(___llmod@divisor+2)& (0+255),b
  7025  011076  0E00               	movlw	0
  7026  011078  6F76               	movwf	(___llmod@divisor+3)& (0+255),b
  7027  01107A  ECA9  F0AC         	call	___llmod	;wreg free
  7028  01107E  C06F  F12F         	movff	?___llmod,sprintf@tmpval
  7029  011082  C070  F130         	movff	?___llmod+1,sprintf@tmpval+1
  7030  011086  C071  F131         	movff	?___llmod+2,sprintf@tmpval+2
  7031  01108A  C072  F132         	movff	?___llmod+3,sprintf@tmpval+3
  7032                           
  7033                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7034  01108E  0101               	movlb	1	; () banked
  7035  011090  512F               	movf	sprintf@tmpval& (0+255),w,b
  7036  011092  0F30               	addlw	48
  7037  011094  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  7038  011098  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  7039  01109C                     L4:
  7040  01109C  6EDF               	movwf	indf2,c
  7041  01109E  D7AE               	goto	l8452
  7042  0110A0                     l8462:
  7043                           
  7044                           ; BSR set to: 0
  7045  0110A0  0101               	movlb	1	; () banked
  7046  0110A2  0739               	decf	sprintf@c& (0+255),f,b
  7047  0110A4  0101               	movlb	1	; () banked
  7048  0110A6  2939               	incf	sprintf@c& (0+255),w,b
  7049  0110A8  B4D8               	btfsc	status,2,c
  7050  0110AA  D00E               	goto	l8470
  7051  0110AC  D7AB               	goto	l8454
  7052  0110AE                     l8464:
  7053                           
  7054                           ; BSR set to: 1
  7055                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7056  0110AE  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  7057  0110B2  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  7058  0110B6  0E30               	movlw	48
  7059  0110B8  6EDF               	movwf	indf2,c
  7060                           
  7061                           ; BSR set to: 1
  7062  0110BA  0100               	movlb	0	; () banked
  7063  0110BC  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  7064  0110BE  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  7065                           
  7066                           ; BSR set to: 0
  7067                           ;doprnt.c: 1209: exp--;
  7068  0110C0  0101               	movlb	1	; () banked
  7069  0110C2  072D               	decf	sprintf@exp& (0+255),f,b
  7070  0110C4  A0D8               	btfss	status,0,c
  7071  0110C6  072E               	decf	(sprintf@exp+1)& (0+255),f,b
  7072  0110C8                     l8470:
  7073                           
  7074                           ; BSR set to: 1
  7075  0110C8  0101               	movlb	1	; () banked
  7076  0110CA  BF2E               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7077  0110CC  D007               	goto	l8472
  7078  0110CE  0101               	movlb	1	; () banked
  7079  0110D0  512E               	movf	(sprintf@exp+1)& (0+255),w,b
  7080  0110D2  E1ED               	bnz	l8464
  7081  0110D4  0101               	movlb	1	; () banked
  7082  0110D6  052D               	decf	sprintf@exp& (0+255),w,b
  7083  0110D8  B0D8               	btfsc	status,0,c
  7084  0110DA  D7E9               	goto	l8464
  7085  0110DC                     l8472:
  7086                           
  7087                           ; BSR set to: 1
  7088                           ;doprnt.c: 1210: }
  7089                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7090  0110DC  0101               	movlb	1	; () banked
  7091  0110DE  BF34               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7092  0110E0  D00C               	goto	l952
  7093  0110E2  0101               	movlb	1	; () banked
  7094  0110E4  5134               	movf	(sprintf@prec+1)& (0+255),w,b
  7095  0110E6  E105               	bnz	u11200
  7096  0110E8  0E09               	movlw	9
  7097  0110EA  0101               	movlb	1	; () banked
  7098  0110EC  5D33               	subwf	sprintf@prec& (0+255),w,b
  7099  0110EE  A0D8               	btfss	status,0,c
  7100  0110F0  D004               	goto	l952
  7101  0110F2                     u11200:
  7102                           
  7103                           ; BSR set to: 1
  7104                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7105  0110F2  0E08               	movlw	8
  7106  0110F4  0101               	movlb	1	; () banked
  7107  0110F6  6F39               	movwf	sprintf@c& (0+255),b
  7108  0110F8  D002               	goto	l8476
  7109  0110FA                     l952:
  7110                           
  7111                           ; BSR set to: 1
  7112                           ;doprnt.c: 1213: else
  7113                           ;doprnt.c: 1214: c = prec;
  7114  0110FA  C133  F139         	movff	sprintf@prec,sprintf@c
  7115  0110FE                     l8476:
  7116                           
  7117                           ; BSR set to: 1
  7118                           ;doprnt.c: 1215: prec -= c;
  7119  0110FE  0101               	movlb	1	; () banked
  7120  011100  5139               	movf	sprintf@c& (0+255),w,b
  7121  011102  0101               	movlb	1	; () banked
  7122  011104  5F33               	subwf	sprintf@prec& (0+255),f,b
  7123  011106  0E00               	movlw	0
  7124  011108  0101               	movlb	1	; () banked
  7125  01110A  BF39               	btfsc	sprintf@c& (0+255),7,b
  7126  01110C  0EFF               	movlw	255
  7127  01110E  0101               	movlb	1	; () banked
  7128  011110  5B34               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7129                           
  7130                           ; BSR set to: 1
  7131                           ;doprnt.c: 1219: if(c)
  7132  011112  0101               	movlb	1	; () banked
  7133  011114  5139               	movf	sprintf@c& (0+255),w,b
  7134  011116  0101               	movlb	1	; () banked
  7135  011118  B4D8               	btfsc	status,2,c
  7136  01111A  D009               	goto	l8484
  7137                           
  7138                           ; BSR set to: 1
  7139                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7140  01111C  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  7141  011120  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  7142  011124  0E2E               	movlw	46
  7143  011126  6EDF               	movwf	indf2,c
  7144                           
  7145                           ; BSR set to: 1
  7146  011128  0100               	movlb	0	; () banked
  7147  01112A  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  7148  01112C  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  7149  01112E                     l8484:
  7150                           
  7151                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7152  01112E  0101               	movlb	1	; () banked
  7153  011130  5139               	movf	sprintf@c& (0+255),w,b
  7154  011132  EC2E  F094         	call	_scale
  7155  011136  C096  F121         	movff	?_scale,_sprintf$4217
  7156  01113A  C097  F122         	movff	?_scale+1,_sprintf$4217+1
  7157  01113E  C098  F123         	movff	?_scale+2,_sprintf$4217+2
  7158  011142  C099  F124         	movff	?_scale+3,_sprintf$4217+3
  7159                           
  7160                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7161  011146  C135  F081         	movff	sprintf@fval,___flmul@a
  7162  01114A  C136  F082         	movff	sprintf@fval+1,___flmul@a+1
  7163  01114E  C137  F083         	movff	sprintf@fval+2,___flmul@a+2
  7164  011152  C138  F084         	movff	sprintf@fval+3,___flmul@a+3
  7165  011156  C121  F07D         	movff	_sprintf$4217,___flmul@b
  7166  01115A  C122  F07E         	movff	_sprintf$4217+1,___flmul@b+1
  7167  01115E  C123  F07F         	movff	_sprintf$4217+2,___flmul@b+2
  7168  011162  C124  F080         	movff	_sprintf$4217+3,___flmul@b+3
  7169  011166  EC95  F09B         	call	___flmul	;wreg free
  7170  01116A  C07D  F0B7         	movff	?___flmul,___fltol@f1
  7171  01116E  C07E  F0B8         	movff	?___flmul+1,___fltol@f1+1
  7172  011172  C07F  F0B9         	movff	?___flmul+2,___fltol@f1+2
  7173  011176  C080  F0BA         	movff	?___flmul+3,___fltol@f1+3
  7174  01117A  EC8C  F0A9         	call	___fltol	;wreg free
  7175  01117E  C0B7  F129         	movff	?___fltol,sprintf@val
  7176  011182  C0B8  F12A         	movff	?___fltol+1,sprintf@val+1
  7177  011186  C0B9  F12B         	movff	?___fltol+2,sprintf@val+2
  7178  01118A  C0BA  F12C         	movff	?___fltol+3,sprintf@val+3
  7179                           
  7180                           ;doprnt.c: 1228: while(c--) {
  7181  01118E  D07A               	goto	l8498
  7182  011190                     l8488:
  7183                           
  7184                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7185  011190  C129  F06F         	movff	sprintf@val,___lldiv@dividend
  7186  011194  C12A  F070         	movff	sprintf@val+1,___lldiv@dividend+1
  7187  011198  C12B  F071         	movff	sprintf@val+2,___lldiv@dividend+2
  7188  01119C  C12C  F072         	movff	sprintf@val+3,___lldiv@dividend+3
  7189  0111A0  0101               	movlb	1	; () banked
  7190  0111A2  5139               	movf	sprintf@c& (0+255),w,b
  7191  0111A4  0D04               	mullw	4
  7192  0111A6  0E41               	movlw	low _dpowers
  7193  0111A8  24F3               	addwf	prodl,w,c
  7194  0111AA  6EF6               	movwf	tblptrl,c
  7195  0111AC  0EFF               	movlw	high _dpowers
  7196  0111AE  20F4               	addwfc	prodh,w,c
  7197  0111B0  6EF7               	movwf	tblptrh,c
  7198  0111B2                     	if	1	;There are 3 active tblptr bytes
  7199  0111B2  6AF8               	clrf	tblptru,c
  7200  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  7201  0111B6  22F8               	addwfc	tblptru,f,c
  7202  0111B8                     	endif
  7203  0111B8  0009               	tblrd		*+
  7204  0111BA  CFF5 F073          	movff	tablat,___lldiv@divisor
  7205  0111BE  0009               	tblrd		*+
  7206  0111C0  CFF5 F074          	movff	tablat,___lldiv@divisor+1
  7207  0111C4  0009               	tblrd		*+
  7208  0111C6  CFF5 F075          	movff	tablat,___lldiv@divisor+2
  7209  0111CA  000A               	tblrd		*-
  7210  0111CC  CFF5 F076          	movff	tablat,___lldiv@divisor+3
  7211  0111D0  EC48  F0AB         	call	___lldiv	;wreg free
  7212  0111D4  C06F  F12F         	movff	?___lldiv,sprintf@tmpval
  7213  0111D8  C070  F130         	movff	?___lldiv+1,sprintf@tmpval+1
  7214  0111DC  C071  F131         	movff	?___lldiv+2,sprintf@tmpval+2
  7215  0111E0  C072  F132         	movff	?___lldiv+3,sprintf@tmpval+3
  7216                           
  7217                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7218  0111E4  C12F  F06F         	movff	sprintf@tmpval,___llmod@dividend
  7219  0111E8  C130  F070         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7220  0111EC  C131  F071         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7221  0111F0  C132  F072         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7222  0111F4  0E0A               	movlw	10
  7223  0111F6  0100               	movlb	0	; () banked
  7224  0111F8  6F73               	movwf	___llmod@divisor& (0+255),b
  7225  0111FA  0E00               	movlw	0
  7226  0111FC  6F74               	movwf	(___llmod@divisor+1)& (0+255),b
  7227  0111FE  0E00               	movlw	0
  7228  011200  6F75               	movwf	(___llmod@divisor+2)& (0+255),b
  7229  011202  0E00               	movlw	0
  7230  011204  6F76               	movwf	(___llmod@divisor+3)& (0+255),b
  7231  011206  ECA9  F0AC         	call	___llmod	;wreg free
  7232  01120A  C06F  F12F         	movff	?___llmod,sprintf@tmpval
  7233  01120E  C070  F130         	movff	?___llmod+1,sprintf@tmpval+1
  7234  011212  C071  F131         	movff	?___llmod+2,sprintf@tmpval+2
  7235  011216  C072  F132         	movff	?___llmod+3,sprintf@tmpval+3
  7236                           
  7237                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7238  01121A  0101               	movlb	1	; () banked
  7239  01121C  512F               	movf	sprintf@tmpval& (0+255),w,b
  7240  01121E  0F30               	addlw	48
  7241  011220  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  7242  011224  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  7243  011228  6EDF               	movwf	indf2,c
  7244                           
  7245                           ; BSR set to: 1
  7246  01122A  0100               	movlb	0	; () banked
  7247  01122C  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  7248  01122E  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;doprnt.c: 1232: val %= dpowers[c];
  7252  011230  C129  F06F         	movff	sprintf@val,___llmod@dividend
  7253  011234  C12A  F070         	movff	sprintf@val+1,___llmod@dividend+1
  7254  011238  C12B  F071         	movff	sprintf@val+2,___llmod@dividend+2
  7255  01123C  C12C  F072         	movff	sprintf@val+3,___llmod@dividend+3
  7256  011240  0101               	movlb	1	; () banked
  7257  011242  5139               	movf	sprintf@c& (0+255),w,b
  7258  011244  0D04               	mullw	4
  7259  011246  0E41               	movlw	low _dpowers
  7260  011248  24F3               	addwf	prodl,w,c
  7261  01124A  6EF6               	movwf	tblptrl,c
  7262  01124C  0EFF               	movlw	high _dpowers
  7263  01124E  20F4               	addwfc	prodh,w,c
  7264  011250  6EF7               	movwf	tblptrh,c
  7265  011252                     	if	1	;There are 3 active tblptr bytes
  7266  011252  6AF8               	clrf	tblptru,c
  7267  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  7268  011256  22F8               	addwfc	tblptru,f,c
  7269  011258                     	endif
  7270  011258  0009               	tblrd		*+
  7271  01125A  CFF5 F073          	movff	tablat,___llmod@divisor
  7272  01125E  0009               	tblrd		*+
  7273  011260  CFF5 F074          	movff	tablat,___llmod@divisor+1
  7274  011264  0009               	tblrd		*+
  7275  011266  CFF5 F075          	movff	tablat,___llmod@divisor+2
  7276  01126A  000A               	tblrd		*-
  7277  01126C  CFF5 F076          	movff	tablat,___llmod@divisor+3
  7278  011270  ECA9  F0AC         	call	___llmod	;wreg free
  7279  011274  C06F  F129         	movff	?___llmod,sprintf@val
  7280  011278  C070  F12A         	movff	?___llmod+1,sprintf@val+1
  7281  01127C  C071  F12B         	movff	?___llmod+2,sprintf@val+2
  7282  011280  C072  F12C         	movff	?___llmod+3,sprintf@val+3
  7283  011284                     l8498:
  7284  011284  0101               	movlb	1	; () banked
  7285  011286  0739               	decf	sprintf@c& (0+255),f,b
  7286  011288  0101               	movlb	1	; () banked
  7287  01128A  2939               	incf	sprintf@c& (0+255),w,b
  7288  01128C  B4D8               	btfsc	status,2,c
  7289  01128E  D00E               	goto	l8506
  7290  011290  D77F               	goto	l8488
  7291  011292                     l8500:
  7292                           
  7293                           ; BSR set to: 1
  7294                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7295  011292  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  7296  011296  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  7297  01129A  0E30               	movlw	48
  7298  01129C  6EDF               	movwf	indf2,c
  7299                           
  7300                           ; BSR set to: 1
  7301  01129E  0100               	movlb	0	; () banked
  7302  0112A0  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  7303  0112A2  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  7304                           
  7305                           ; BSR set to: 0
  7306                           ;doprnt.c: 1237: prec--;
  7307  0112A4  0101               	movlb	1	; () banked
  7308  0112A6  0733               	decf	sprintf@prec& (0+255),f,b
  7309  0112A8  A0D8               	btfss	status,0,c
  7310  0112AA  0734               	decf	(sprintf@prec+1)& (0+255),f,b
  7311  0112AC                     l8506:
  7312                           
  7313                           ; BSR set to: 1
  7314  0112AC  0101               	movlb	1	; () banked
  7315  0112AE  5133               	movf	sprintf@prec& (0+255),w,b
  7316  0112B0  0101               	movlb	1	; () banked
  7317  0112B2  1134               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7318  0112B4  B4D8               	btfsc	status,2,c
  7319  0112B6  D059               	goto	l8528
  7320  0112B8  D7EC               	goto	l8500
  7321  0112BA                     l8508:
  7322                           
  7323                           ; BSR set to: 1
  7324                           ;doprnt.c: 1246: }
  7325                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7326  0112BA  0101               	movlb	1	; () banked
  7327  0112BC  5133               	movf	sprintf@prec& (0+255),w,b
  7328  0112BE  0101               	movlb	1	; () banked
  7329  0112C0  1134               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7330  0112C2  A4D8               	btfss	status,2,c
  7331  0112C4  D00D               	goto	l8514
  7332                           
  7333                           ; BSR set to: 1
  7334  0112C6  0101               	movlb	1	; () banked
  7335  0112C8  5129               	movf	sprintf@val& (0+255),w,b
  7336  0112CA  0101               	movlb	1	; () banked
  7337  0112CC  112A               	iorwf	(sprintf@val+1)& (0+255),w,b
  7338  0112CE  0101               	movlb	1	; () banked
  7339  0112D0  112B               	iorwf	(sprintf@val+2)& (0+255),w,b
  7340  0112D2  0101               	movlb	1	; () banked
  7341  0112D4  112C               	iorwf	(sprintf@val+3)& (0+255),w,b
  7342  0112D6  A4D8               	btfss	status,2,c
  7343  0112D8  D003               	goto	l8514
  7344                           
  7345                           ; BSR set to: 1
  7346                           ;doprnt.c: 1291: prec++;
  7347  0112DA  0101               	movlb	1	; () banked
  7348  0112DC  4B33               	infsnz	sprintf@prec& (0+255),f,b
  7349  0112DE  2B34               	incf	(sprintf@prec+1)& (0+255),f,b
  7350  0112E0                     l8514:
  7351                           
  7352                           ; BSR set to: 1
  7353                           ;doprnt.c: 1339: if(c < prec)
  7354  0112E0  0E80               	movlw	128
  7355  0112E2  0101               	movlb	1	; () banked
  7356  0112E4  BF39               	btfsc	sprintf@c& (0+255),7,b
  7357  0112E6  0E7F               	movlw	127
  7358  0112E8  0100               	movlb	0	; () banked
  7359  0112EA  6FC9               	movwf	??_sprintf& (0+255),b
  7360  0112EC  0101               	movlb	1	; () banked
  7361  0112EE  5133               	movf	sprintf@prec& (0+255),w,b
  7362  0112F0  0101               	movlb	1	; () banked
  7363  0112F2  5D39               	subwf	sprintf@c& (0+255),w,b
  7364  0112F4  0101               	movlb	1	; () banked
  7365  0112F6  5134               	movf	(sprintf@prec+1)& (0+255),w,b
  7366  0112F8  0A80               	xorlw	128
  7367  0112FA  0100               	movlb	0	; () banked
  7368  0112FC  59C9               	subwfb	??_sprintf& (0+255),w,b
  7369  0112FE  B0D8               	btfsc	status,0,c
  7370  011300  D003               	goto	l8518
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;doprnt.c: 1340: c = prec;
  7374  011302  C133  F139         	movff	sprintf@prec,sprintf@c
  7375  011306  D018               	goto	l8522
  7376  011308                     l8518:
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;doprnt.c: 1341: else if(prec < c)
  7380  011308  0101               	movlb	1	; () banked
  7381  01130A  5134               	movf	(sprintf@prec+1)& (0+255),w,b
  7382  01130C  0A80               	xorlw	128
  7383  01130E  0100               	movlb	0	; () banked
  7384  011310  6FC9               	movwf	??_sprintf& (0+255),b
  7385  011312  0101               	movlb	1	; () banked
  7386  011314  5139               	movf	sprintf@c& (0+255),w,b
  7387  011316  0101               	movlb	1	; () banked
  7388  011318  5D33               	subwf	sprintf@prec& (0+255),w,b
  7389  01131A  0E80               	movlw	128
  7390  01131C  0101               	movlb	1	; () banked
  7391  01131E  BF39               	btfsc	sprintf@c& (0+255),7,b
  7392  011320  0E7F               	movlw	127
  7393  011322  0100               	movlb	0	; () banked
  7394  011324  59C9               	subwfb	??_sprintf& (0+255),w,b
  7395  011326  B0D8               	btfsc	status,0,c
  7396  011328  D007               	goto	l8522
  7397                           
  7398                           ; BSR set to: 0
  7399                           ;doprnt.c: 1342: prec = c;
  7400  01132A  0101               	movlb	1	; () banked
  7401  01132C  5139               	movf	sprintf@c& (0+255),w,b
  7402  01132E  0101               	movlb	1	; () banked
  7403  011330  6F33               	movwf	sprintf@prec& (0+255),b
  7404  011332  6B34               	clrf	(sprintf@prec+1)& (0+255),b
  7405  011334  BF33               	btfsc	sprintf@prec& (0+255),7,b
  7406  011336  0734               	decf	(sprintf@prec+1)& (0+255),f,b
  7407  011338                     l8522:
  7408                           
  7409                           ;doprnt.c: 1422: {
  7410                           ;doprnt.c: 1438: if(flag & 0x03)
  7411  011338  0E03               	movlw	3
  7412  01133A  0101               	movlb	1	; () banked
  7413  01133C  1527               	andwf	sprintf@flag& (0+255),w,b
  7414  01133E  0100               	movlb	0	; () banked
  7415  011340  6FC9               	movwf	??_sprintf& (0+255),b
  7416  011342  0E00               	movlw	0
  7417  011344  0101               	movlb	1	; () banked
  7418  011346  1528               	andwf	(sprintf@flag+1)& (0+255),w,b
  7419  011348  0100               	movlb	0	; () banked
  7420  01134A  6FCA               	movwf	(??_sprintf+1)& (0+255),b
  7421  01134C  0100               	movlb	0	; () banked
  7422  01134E  51C9               	movf	??_sprintf& (0+255),w,b
  7423  011350  0100               	movlb	0	; () banked
  7424  011352  11CA               	iorwf	(??_sprintf+1)& (0+255),w,b
  7425  011354  B4D8               	btfsc	status,2,c
  7426  011356  D009               	goto	l8528
  7427                           
  7428                           ; BSR set to: 0
  7429                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7430  011358  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  7431  01135C  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  7432  011360  0E2D               	movlw	45
  7433  011362  6EDF               	movwf	indf2,c
  7434  011364                     l8526:
  7435                           
  7436                           ; BSR set to: 0
  7437  011364  0100               	movlb	0	; () banked
  7438  011366  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  7439  011368  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  7440  01136A                     l8528:
  7441  01136A  C0C3  FFF6         	movff	sprintf@f,tblptrl
  7442  01136E  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  7443  011372  0100               	movlb	0	; () banked
  7444  011374  4BC3               	infsnz	sprintf@f& (0+255),f,b
  7445  011376  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  7446  011378                     	if	0	;tblptru may be non-zero
  7447  011378                     	endif
  7448  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7449  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  7450  01137A  6EF8               	movwf	tblptru,c
  7451  01137C                     	endif
  7452  01137C  0008               	tblrd		*
  7453  01137E  CFF5 F139          	movff	tablat,sprintf@c
  7454  011382  0101               	movlb	1	; () banked
  7455  011384  5139               	movf	sprintf@c& (0+255),w,b
  7456  011386  A4D8               	btfss	status,2,c
  7457  011388  EF8B  F085         	goto	l8330
  7458  01138C                     l8530:
  7459                           
  7460                           ; BSR set to: 1
  7461                           ;doprnt.c: 1538: *sp = 0;
  7462  01138C  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  7463  011390  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  7464  011394  0E00               	movlw	0
  7465  011396  6EDF               	movwf	indf2,c
  7466  011398  0012               	return	
  7467  01139A                     __end_of_sprintf:
  7468                           	opt stack 0
  7469                           tblptru	equ	0xFF8
  7470                           tblptrh	equ	0xFF7
  7471                           tblptrl	equ	0xFF6
  7472                           tablat	equ	0xFF5
  7473                           prodh	equ	0xFF4
  7474                           prodl	equ	0xFF3
  7475                           intcon	equ	0xFF2
  7476                           postinc0	equ	0xFEE
  7477                           wreg	equ	0xFE8
  7478                           indf2	equ	0xFDF
  7479                           postinc2	equ	0xFDE
  7480                           fsr2h	equ	0xFDA
  7481                           fsr2l	equ	0xFD9
  7482                           status	equ	0xFD8
  7483                           
  7484 ;; *************** function _scale *****************
  7485 ;; Defined at:
  7486 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;  scl             1    wreg     char 
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;  scl             1   62[BANK0 ] char 
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  4   54[BANK0 ] char 
  7493 ;; Registers used:
  7494 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7500 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7501 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7503 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7504 ;;Total ram usage:        9 bytes
  7505 ;; Hardware stack levels used:    1
  7506 ;; Hardware stack levels required when called:    4
  7507 ;; This function calls:
  7508 ;;		___awdiv
  7509 ;;		___awmod
  7510 ;;		___flmul
  7511 ;; This function is called by:
  7512 ;;		_sprintf
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           	psect	text9
  7517  01285C                     __ptext9:
  7518                           	opt stack 0
  7519  01285C                     _scale:
  7520                           	opt stack 24
  7521                           
  7522                           ; BSR set to: 1
  7523                           ;incstack = 0
  7524                           ;scale@scl stored from wreg
  7525  01285C  0100               	movlb	0	; () banked
  7526  01285E  6F9E               	movwf	scale@scl& (0+255),b
  7527                           
  7528                           ;doprnt.c: 428: if(scl < 0) {
  7529  012860  0100               	movlb	0	; () banked
  7530  012862  AF9E               	btfss	scale@scl& (0+255),7,b
  7531  012864  D145               	goto	l7962
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;doprnt.c: 429: scl = -scl;
  7535  012866  0100               	movlb	0	; () banked
  7536  012868  6D9E               	negf	scale@scl& (0+255),b
  7537                           
  7538                           ;doprnt.c: 430: if(scl>=110)
  7539  01286A  0100               	movlb	0	; () banked
  7540  01286C  519E               	movf	scale@scl& (0+255),w,b
  7541  01286E  0A80               	xorlw	128
  7542  012870  0F12               	addlw	-238
  7543  012872  A0D8               	btfss	status,0,c
  7544  012874  D0BB               	goto	l7952
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7548  012876  0E00               	movlw	0
  7549  012878  0100               	movlb	0	; () banked
  7550  01287A  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7551  01287C  0E0A               	movlw	10
  7552  01287E  6F77               	movwf	___awdiv@divisor& (0+255),b
  7553  012880  0E00               	movlw	0
  7554  012882  0100               	movlb	0	; () banked
  7555  012884  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7556  012886  0E64               	movlw	100
  7557  012888  6F71               	movwf	___awmod@divisor& (0+255),b
  7558  01288A  0100               	movlb	0	; () banked
  7559  01288C  519E               	movf	scale@scl& (0+255),w,b
  7560  01288E  0100               	movlb	0	; () banked
  7561  012890  6F6F               	movwf	___awmod@dividend& (0+255),b
  7562  012892  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  7563  012894  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  7564  012896  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  7565  012898  EC58  F0AC         	call	___awmod	;wreg free
  7566  01289C  C06F  F075         	movff	?___awmod,___awdiv@dividend
  7567  0128A0  C070  F076         	movff	?___awmod+1,___awdiv@dividend+1
  7568  0128A4  ECE9  F0AA         	call	___awdiv	;wreg free
  7569  0128A8  0100               	movlb	0	; () banked
  7570  0128AA  90D8               	bcf	status,0,c
  7571  0128AC  3775               	rlcf	?___awdiv& (0+255),f,b
  7572  0128AE  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7573  0128B0  0100               	movlb	0	; () banked
  7574  0128B2  90D8               	bcf	status,0,c
  7575  0128B4  3775               	rlcf	?___awdiv& (0+255),f,b
  7576  0128B6  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7577  0128B8  0E24               	movlw	36
  7578  0128BA  0100               	movlb	0	; () banked
  7579  0128BC  2775               	addwf	?___awdiv& (0+255),f,b
  7580  0128BE  0E00               	movlw	0
  7581  0128C0  0100               	movlb	0	; () banked
  7582  0128C2  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7583  0128C4  0ED9               	movlw	low __npowers_
  7584  0128C6  0100               	movlb	0	; () banked
  7585  0128C8  2575               	addwf	?___awdiv& (0+255),w,b
  7586  0128CA  6EF6               	movwf	tblptrl,c
  7587  0128CC  0EFE               	movlw	high __npowers_
  7588  0128CE  0100               	movlb	0	; () banked
  7589  0128D0  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7590  0128D2  6EF7               	movwf	tblptrh,c
  7591  0128D4                     	if	1	;There are 3 active tblptr bytes
  7592  0128D4  6AF8               	clrf	tblptru,c
  7593  0128D6  0E00               	movlw	low (__mediumconst shr (0+16))
  7594  0128D8  22F8               	addwfc	tblptru,f,c
  7595  0128DA                     	endif
  7596  0128DA  0009               	tblrd		*+
  7597  0128DC  CFF5 F081          	movff	tablat,___flmul@a
  7598  0128E0  0009               	tblrd		*+
  7599  0128E2  CFF5 F082          	movff	tablat,___flmul@a+1
  7600  0128E6  0009               	tblrd		*+
  7601  0128E8  CFF5 F083          	movff	tablat,___flmul@a+2
  7602  0128EC  000A               	tblrd		*-
  7603  0128EE  CFF5 F084          	movff	tablat,___flmul@a+3
  7604  0128F2  0E00               	movlw	0
  7605  0128F4  0100               	movlb	0	; () banked
  7606  0128F6  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7607  0128F8  0E64               	movlw	100
  7608  0128FA  6F77               	movwf	___awdiv@divisor& (0+255),b
  7609  0128FC  0100               	movlb	0	; () banked
  7610  0128FE  519E               	movf	scale@scl& (0+255),w,b
  7611  012900  0100               	movlb	0	; () banked
  7612  012902  6F75               	movwf	___awdiv@dividend& (0+255),b
  7613  012904  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  7614  012906  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  7615  012908  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7616  01290A  ECE9  F0AA         	call	___awdiv	;wreg free
  7617  01290E  0100               	movlb	0	; () banked
  7618  012910  90D8               	bcf	status,0,c
  7619  012912  3775               	rlcf	?___awdiv& (0+255),f,b
  7620  012914  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7621  012916  0100               	movlb	0	; () banked
  7622  012918  90D8               	bcf	status,0,c
  7623  01291A  3775               	rlcf	?___awdiv& (0+255),f,b
  7624  01291C  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7625  01291E  0E48               	movlw	72
  7626  012920  0100               	movlb	0	; () banked
  7627  012922  2775               	addwf	?___awdiv& (0+255),f,b
  7628  012924  0E00               	movlw	0
  7629  012926  0100               	movlb	0	; () banked
  7630  012928  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7631  01292A  0ED9               	movlw	low __npowers_
  7632  01292C  0100               	movlb	0	; () banked
  7633  01292E  2575               	addwf	?___awdiv& (0+255),w,b
  7634  012930  6EF6               	movwf	tblptrl,c
  7635  012932  0EFE               	movlw	high __npowers_
  7636  012934  0100               	movlb	0	; () banked
  7637  012936  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7638  012938  6EF7               	movwf	tblptrh,c
  7639  01293A                     	if	1	;There are 3 active tblptr bytes
  7640  01293A  6AF8               	clrf	tblptru,c
  7641  01293C  0E00               	movlw	low (__mediumconst shr (0+16))
  7642  01293E  22F8               	addwfc	tblptru,f,c
  7643  012940                     	endif
  7644  012940  0009               	tblrd		*+
  7645  012942  CFF5 F07D          	movff	tablat,___flmul@b
  7646  012946  0009               	tblrd		*+
  7647  012948  CFF5 F07E          	movff	tablat,___flmul@b+1
  7648  01294C  0009               	tblrd		*+
  7649  01294E  CFF5 F07F          	movff	tablat,___flmul@b+2
  7650  012952  000A               	tblrd		*-
  7651  012954  CFF5 F080          	movff	tablat,___flmul@b+3
  7652  012958  EC95  F09B         	call	___flmul	;wreg free
  7653  01295C  C07D  F09A         	movff	?___flmul,_scale$4216
  7654  012960  C07E  F09B         	movff	?___flmul+1,_scale$4216+1
  7655  012964  C07F  F09C         	movff	?___flmul+2,_scale$4216+2
  7656  012968  C080  F09D         	movff	?___flmul+3,_scale$4216+3
  7657                           
  7658                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7659  01296C  C09A  F07D         	movff	_scale$4216,___flmul@b
  7660  012970  C09B  F07E         	movff	_scale$4216+1,___flmul@b+1
  7661  012974  C09C  F07F         	movff	_scale$4216+2,___flmul@b+2
  7662  012978  C09D  F080         	movff	_scale$4216+3,___flmul@b+3
  7663  01297C  0E00               	movlw	0
  7664  01297E  0100               	movlb	0	; () banked
  7665  012980  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7666  012982  0E0A               	movlw	10
  7667  012984  6F71               	movwf	___awmod@divisor& (0+255),b
  7668  012986  0100               	movlb	0	; () banked
  7669  012988  519E               	movf	scale@scl& (0+255),w,b
  7670  01298A  0100               	movlb	0	; () banked
  7671  01298C  6F6F               	movwf	___awmod@dividend& (0+255),b
  7672  01298E  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  7673  012990  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  7674  012992  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  7675  012994  EC58  F0AC         	call	___awmod	;wreg free
  7676  012998  0100               	movlb	0	; () banked
  7677  01299A  90D8               	bcf	status,0,c
  7678  01299C  376F               	rlcf	?___awmod& (0+255),f,b
  7679  01299E  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7680  0129A0  0100               	movlb	0	; () banked
  7681  0129A2  90D8               	bcf	status,0,c
  7682  0129A4  376F               	rlcf	?___awmod& (0+255),f,b
  7683  0129A6  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7684  0129A8  0ED9               	movlw	low __npowers_
  7685  0129AA  0100               	movlb	0	; () banked
  7686  0129AC  256F               	addwf	?___awmod& (0+255),w,b
  7687  0129AE  6EF6               	movwf	tblptrl,c
  7688  0129B0  0EFE               	movlw	high __npowers_
  7689  0129B2  0100               	movlb	0	; () banked
  7690  0129B4  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  7691  0129B6  6EF7               	movwf	tblptrh,c
  7692  0129B8                     	if	1	;There are 3 active tblptr bytes
  7693  0129B8  6AF8               	clrf	tblptru,c
  7694  0129BA  0E00               	movlw	low (__mediumconst shr (0+16))
  7695  0129BC  22F8               	addwfc	tblptru,f,c
  7696  0129BE                     	endif
  7697  0129BE  0009               	tblrd		*+
  7698  0129C0  CFF5 F081          	movff	tablat,___flmul@a
  7699  0129C4  0009               	tblrd		*+
  7700  0129C6  CFF5 F082          	movff	tablat,___flmul@a+1
  7701  0129CA  0009               	tblrd		*+
  7702  0129CC  CFF5 F083          	movff	tablat,___flmul@a+2
  7703  0129D0  000A               	tblrd		*-
  7704  0129D2  CFF5 F084          	movff	tablat,___flmul@a+3
  7705  0129D6  EC95  F09B         	call	___flmul	;wreg free
  7706  0129DA  C07D  F096         	movff	?___flmul,?_scale
  7707  0129DE  C07E  F097         	movff	?___flmul+1,?_scale+1
  7708  0129E2  C07F  F098         	movff	?___flmul+2,?_scale+2
  7709  0129E6  C080  F099         	movff	?___flmul+3,?_scale+3
  7710  0129EA  0012               	return	
  7711  0129EC                     l7952:
  7712                           
  7713                           ;doprnt.c: 432: else if(scl > 10)
  7714  0129EC  0100               	movlb	0	; () banked
  7715  0129EE  519E               	movf	scale@scl& (0+255),w,b
  7716  0129F0  0A80               	xorlw	128
  7717  0129F2  0F75               	addlw	-139
  7718  0129F4  A0D8               	btfss	status,0,c
  7719  0129F6  D063               	goto	l7958
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7723  0129F8  0E00               	movlw	0
  7724  0129FA  0100               	movlb	0	; () banked
  7725  0129FC  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7726  0129FE  0E0A               	movlw	10
  7727  012A00  6F77               	movwf	___awdiv@divisor& (0+255),b
  7728  012A02  0100               	movlb	0	; () banked
  7729  012A04  519E               	movf	scale@scl& (0+255),w,b
  7730  012A06  0100               	movlb	0	; () banked
  7731  012A08  6F75               	movwf	___awdiv@dividend& (0+255),b
  7732  012A0A  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  7733  012A0C  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  7734  012A0E  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7735  012A10  ECE9  F0AA         	call	___awdiv	;wreg free
  7736  012A14  0100               	movlb	0	; () banked
  7737  012A16  90D8               	bcf	status,0,c
  7738  012A18  3775               	rlcf	?___awdiv& (0+255),f,b
  7739  012A1A  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7740  012A1C  0100               	movlb	0	; () banked
  7741  012A1E  90D8               	bcf	status,0,c
  7742  012A20  3775               	rlcf	?___awdiv& (0+255),f,b
  7743  012A22  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7744  012A24  0E24               	movlw	36
  7745  012A26  0100               	movlb	0	; () banked
  7746  012A28  2775               	addwf	?___awdiv& (0+255),f,b
  7747  012A2A  0E00               	movlw	0
  7748  012A2C  0100               	movlb	0	; () banked
  7749  012A2E  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7750  012A30  0ED9               	movlw	low __npowers_
  7751  012A32  0100               	movlb	0	; () banked
  7752  012A34  2575               	addwf	?___awdiv& (0+255),w,b
  7753  012A36  6EF6               	movwf	tblptrl,c
  7754  012A38  0EFE               	movlw	high __npowers_
  7755  012A3A  0100               	movlb	0	; () banked
  7756  012A3C  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7757  012A3E  6EF7               	movwf	tblptrh,c
  7758  012A40                     	if	1	;There are 3 active tblptr bytes
  7759  012A40  6AF8               	clrf	tblptru,c
  7760  012A42  0E00               	movlw	low (__mediumconst shr (0+16))
  7761  012A44  22F8               	addwfc	tblptru,f,c
  7762  012A46                     	endif
  7763  012A46  0009               	tblrd		*+
  7764  012A48  CFF5 F07D          	movff	tablat,___flmul@b
  7765  012A4C  0009               	tblrd		*+
  7766  012A4E  CFF5 F07E          	movff	tablat,___flmul@b+1
  7767  012A52  0009               	tblrd		*+
  7768  012A54  CFF5 F07F          	movff	tablat,___flmul@b+2
  7769  012A58  000A               	tblrd		*-
  7770  012A5A  CFF5 F080          	movff	tablat,___flmul@b+3
  7771  012A5E  0E00               	movlw	0
  7772  012A60  0100               	movlb	0	; () banked
  7773  012A62  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7774  012A64  0E0A               	movlw	10
  7775  012A66  6F71               	movwf	___awmod@divisor& (0+255),b
  7776  012A68  0100               	movlb	0	; () banked
  7777  012A6A  519E               	movf	scale@scl& (0+255),w,b
  7778  012A6C  0100               	movlb	0	; () banked
  7779  012A6E  6F6F               	movwf	___awmod@dividend& (0+255),b
  7780  012A70  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  7781  012A72  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  7782  012A74  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  7783  012A76  EC58  F0AC         	call	___awmod	;wreg free
  7784  012A7A  0100               	movlb	0	; () banked
  7785  012A7C  90D8               	bcf	status,0,c
  7786  012A7E  376F               	rlcf	?___awmod& (0+255),f,b
  7787  012A80  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7788  012A82  0100               	movlb	0	; () banked
  7789  012A84  90D8               	bcf	status,0,c
  7790  012A86  376F               	rlcf	?___awmod& (0+255),f,b
  7791  012A88  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7792  012A8A  0ED9               	movlw	low __npowers_
  7793  012A8C  0100               	movlb	0	; () banked
  7794  012A8E  256F               	addwf	?___awmod& (0+255),w,b
  7795  012A90  6EF6               	movwf	tblptrl,c
  7796  012A92  0EFE               	movlw	high __npowers_
  7797  012A94  0100               	movlb	0	; () banked
  7798  012A96  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  7799  012A98  6EF7               	movwf	tblptrh,c
  7800  012A9A                     	if	1	;There are 3 active tblptr bytes
  7801  012A9A  6AF8               	clrf	tblptru,c
  7802  012A9C  0E00               	movlw	low (__mediumconst shr (0+16))
  7803  012A9E  22F8               	addwfc	tblptru,f,c
  7804  012AA0                     	endif
  7805  012AA0  0009               	tblrd		*+
  7806  012AA2  CFF5 F081          	movff	tablat,___flmul@a
  7807  012AA6  0009               	tblrd		*+
  7808  012AA8  CFF5 F082          	movff	tablat,___flmul@a+1
  7809  012AAC  0009               	tblrd		*+
  7810  012AAE  CFF5 F083          	movff	tablat,___flmul@a+2
  7811  012AB2  000A               	tblrd		*-
  7812  012AB4  CFF5 F084          	movff	tablat,___flmul@a+3
  7813  012AB8  EC95  F09B         	call	___flmul	;wreg free
  7814  012ABC  D78E               	goto	L5
  7815  012ABE                     l7958:
  7816                           
  7817                           ;doprnt.c: 434: return _npowers_[scl];
  7818  012ABE  0100               	movlb	0	; () banked
  7819  012AC0  519E               	movf	scale@scl& (0+255),w,b
  7820  012AC2  0D04               	mullw	4
  7821  012AC4  0ED9               	movlw	low __npowers_
  7822  012AC6  24F3               	addwf	prodl,w,c
  7823  012AC8  6EF6               	movwf	tblptrl,c
  7824  012ACA  0EFE               	movlw	high __npowers_
  7825  012ACC  20F4               	addwfc	prodh,w,c
  7826  012ACE  6EF7               	movwf	tblptrh,c
  7827  012AD0                     	if	1	;There are 3 active tblptr bytes
  7828  012AD0  6AF8               	clrf	tblptru,c
  7829  012AD2  0E00               	movlw	low (__mediumconst shr (0+16))
  7830  012AD4  22F8               	addwfc	tblptru,f,c
  7831  012AD6                     	endif
  7832  012AD6  0009               	tblrd		*+
  7833  012AD8  CFF5 F096          	movff	tablat,?_scale
  7834  012ADC  0009               	tblrd		*+
  7835  012ADE  CFF5 F097          	movff	tablat,?_scale+1
  7836  012AE2  0009               	tblrd		*+
  7837  012AE4  CFF5 F098          	movff	tablat,?_scale+2
  7838  012AE8  000A               	tblrd		*-
  7839  012AEA  CFF5 F099          	movff	tablat,?_scale+3
  7840                           
  7841                           ; BSR set to: 0
  7842  012AEE  0012               	return	
  7843  012AF0                     l7962:
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;doprnt.c: 435: }
  7847                           ;doprnt.c: 436: if(scl>=110)
  7848  012AF0  0100               	movlb	0	; () banked
  7849  012AF2  519E               	movf	scale@scl& (0+255),w,b
  7850  012AF4  0A80               	xorlw	128
  7851  012AF6  0F12               	addlw	-238
  7852  012AF8  A0D8               	btfss	status,0,c
  7853  012AFA  D0BB               	goto	l7970
  7854                           
  7855                           ; BSR set to: 0
  7856                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7857  012AFC  0E00               	movlw	0
  7858  012AFE  0100               	movlb	0	; () banked
  7859  012B00  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7860  012B02  0E0A               	movlw	10
  7861  012B04  6F77               	movwf	___awdiv@divisor& (0+255),b
  7862  012B06  0E00               	movlw	0
  7863  012B08  0100               	movlb	0	; () banked
  7864  012B0A  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7865  012B0C  0E64               	movlw	100
  7866  012B0E  6F71               	movwf	___awmod@divisor& (0+255),b
  7867  012B10  0100               	movlb	0	; () banked
  7868  012B12  519E               	movf	scale@scl& (0+255),w,b
  7869  012B14  0100               	movlb	0	; () banked
  7870  012B16  6F6F               	movwf	___awmod@dividend& (0+255),b
  7871  012B18  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  7872  012B1A  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  7873  012B1C  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  7874  012B1E  EC58  F0AC         	call	___awmod	;wreg free
  7875  012B22  C06F  F075         	movff	?___awmod,___awdiv@dividend
  7876  012B26  C070  F076         	movff	?___awmod+1,___awdiv@dividend+1
  7877  012B2A  ECE9  F0AA         	call	___awdiv	;wreg free
  7878  012B2E  0100               	movlb	0	; () banked
  7879  012B30  90D8               	bcf	status,0,c
  7880  012B32  3775               	rlcf	?___awdiv& (0+255),f,b
  7881  012B34  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7882  012B36  0100               	movlb	0	; () banked
  7883  012B38  90D8               	bcf	status,0,c
  7884  012B3A  3775               	rlcf	?___awdiv& (0+255),f,b
  7885  012B3C  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7886  012B3E  0E24               	movlw	36
  7887  012B40  0100               	movlb	0	; () banked
  7888  012B42  2775               	addwf	?___awdiv& (0+255),f,b
  7889  012B44  0E00               	movlw	0
  7890  012B46  0100               	movlb	0	; () banked
  7891  012B48  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7892  012B4A  0E0D               	movlw	low __powers_
  7893  012B4C  0100               	movlb	0	; () banked
  7894  012B4E  2575               	addwf	?___awdiv& (0+255),w,b
  7895  012B50  6EF6               	movwf	tblptrl,c
  7896  012B52  0EFF               	movlw	high __powers_
  7897  012B54  0100               	movlb	0	; () banked
  7898  012B56  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7899  012B58  6EF7               	movwf	tblptrh,c
  7900  012B5A                     	if	1	;There are 3 active tblptr bytes
  7901  012B5A  6AF8               	clrf	tblptru,c
  7902  012B5C  0E00               	movlw	low (__mediumconst shr (0+16))
  7903  012B5E  22F8               	addwfc	tblptru,f,c
  7904  012B60                     	endif
  7905  012B60  0009               	tblrd		*+
  7906  012B62  CFF5 F081          	movff	tablat,___flmul@a
  7907  012B66  0009               	tblrd		*+
  7908  012B68  CFF5 F082          	movff	tablat,___flmul@a+1
  7909  012B6C  0009               	tblrd		*+
  7910  012B6E  CFF5 F083          	movff	tablat,___flmul@a+2
  7911  012B72  000A               	tblrd		*-
  7912  012B74  CFF5 F084          	movff	tablat,___flmul@a+3
  7913  012B78  0E00               	movlw	0
  7914  012B7A  0100               	movlb	0	; () banked
  7915  012B7C  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7916  012B7E  0E64               	movlw	100
  7917  012B80  6F77               	movwf	___awdiv@divisor& (0+255),b
  7918  012B82  0100               	movlb	0	; () banked
  7919  012B84  519E               	movf	scale@scl& (0+255),w,b
  7920  012B86  0100               	movlb	0	; () banked
  7921  012B88  6F75               	movwf	___awdiv@dividend& (0+255),b
  7922  012B8A  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  7923  012B8C  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  7924  012B8E  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7925  012B90  ECE9  F0AA         	call	___awdiv	;wreg free
  7926  012B94  0100               	movlb	0	; () banked
  7927  012B96  90D8               	bcf	status,0,c
  7928  012B98  3775               	rlcf	?___awdiv& (0+255),f,b
  7929  012B9A  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7930  012B9C  0100               	movlb	0	; () banked
  7931  012B9E  90D8               	bcf	status,0,c
  7932  012BA0  3775               	rlcf	?___awdiv& (0+255),f,b
  7933  012BA2  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7934  012BA4  0E48               	movlw	72
  7935  012BA6  0100               	movlb	0	; () banked
  7936  012BA8  2775               	addwf	?___awdiv& (0+255),f,b
  7937  012BAA  0E00               	movlw	0
  7938  012BAC  0100               	movlb	0	; () banked
  7939  012BAE  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7940  012BB0  0E0D               	movlw	low __powers_
  7941  012BB2  0100               	movlb	0	; () banked
  7942  012BB4  2575               	addwf	?___awdiv& (0+255),w,b
  7943  012BB6  6EF6               	movwf	tblptrl,c
  7944  012BB8  0EFF               	movlw	high __powers_
  7945  012BBA  0100               	movlb	0	; () banked
  7946  012BBC  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7947  012BBE  6EF7               	movwf	tblptrh,c
  7948  012BC0                     	if	1	;There are 3 active tblptr bytes
  7949  012BC0  6AF8               	clrf	tblptru,c
  7950  012BC2  0E00               	movlw	low (__mediumconst shr (0+16))
  7951  012BC4  22F8               	addwfc	tblptru,f,c
  7952  012BC6                     	endif
  7953  012BC6  0009               	tblrd		*+
  7954  012BC8  CFF5 F07D          	movff	tablat,___flmul@b
  7955  012BCC  0009               	tblrd		*+
  7956  012BCE  CFF5 F07E          	movff	tablat,___flmul@b+1
  7957  012BD2  0009               	tblrd		*+
  7958  012BD4  CFF5 F07F          	movff	tablat,___flmul@b+2
  7959  012BD8  000A               	tblrd		*-
  7960  012BDA  CFF5 F080          	movff	tablat,___flmul@b+3
  7961  012BDE  EC95  F09B         	call	___flmul	;wreg free
  7962  012BE2  C07D  F09A         	movff	?___flmul,_scale$4216
  7963  012BE6  C07E  F09B         	movff	?___flmul+1,_scale$4216+1
  7964  012BEA  C07F  F09C         	movff	?___flmul+2,_scale$4216+2
  7965  012BEE  C080  F09D         	movff	?___flmul+3,_scale$4216+3
  7966                           
  7967                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7968  012BF2  C09A  F07D         	movff	_scale$4216,___flmul@b
  7969  012BF6  C09B  F07E         	movff	_scale$4216+1,___flmul@b+1
  7970  012BFA  C09C  F07F         	movff	_scale$4216+2,___flmul@b+2
  7971  012BFE  C09D  F080         	movff	_scale$4216+3,___flmul@b+3
  7972  012C02  0E00               	movlw	0
  7973  012C04  0100               	movlb	0	; () banked
  7974  012C06  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7975  012C08  0E0A               	movlw	10
  7976  012C0A  6F71               	movwf	___awmod@divisor& (0+255),b
  7977  012C0C  0100               	movlb	0	; () banked
  7978  012C0E  519E               	movf	scale@scl& (0+255),w,b
  7979  012C10  0100               	movlb	0	; () banked
  7980  012C12  6F6F               	movwf	___awmod@dividend& (0+255),b
  7981  012C14  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  7982  012C16  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  7983  012C18  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  7984  012C1A  EC58  F0AC         	call	___awmod	;wreg free
  7985  012C1E  0100               	movlb	0	; () banked
  7986  012C20  90D8               	bcf	status,0,c
  7987  012C22  376F               	rlcf	?___awmod& (0+255),f,b
  7988  012C24  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7989  012C26  0100               	movlb	0	; () banked
  7990  012C28  90D8               	bcf	status,0,c
  7991  012C2A  376F               	rlcf	?___awmod& (0+255),f,b
  7992  012C2C  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7993  012C2E  0E0D               	movlw	low __powers_
  7994  012C30  0100               	movlb	0	; () banked
  7995  012C32  256F               	addwf	?___awmod& (0+255),w,b
  7996  012C34  6EF6               	movwf	tblptrl,c
  7997  012C36  0EFF               	movlw	high __powers_
  7998  012C38  0100               	movlb	0	; () banked
  7999  012C3A  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  8000  012C3C  6EF7               	movwf	tblptrh,c
  8001  012C3E                     	if	1	;There are 3 active tblptr bytes
  8002  012C3E  6AF8               	clrf	tblptru,c
  8003  012C40  0E00               	movlw	low (__mediumconst shr (0+16))
  8004  012C42  22F8               	addwfc	tblptru,f,c
  8005  012C44                     	endif
  8006  012C44  0009               	tblrd		*+
  8007  012C46  CFF5 F081          	movff	tablat,___flmul@a
  8008  012C4A  0009               	tblrd		*+
  8009  012C4C  CFF5 F082          	movff	tablat,___flmul@a+1
  8010  012C50  0009               	tblrd		*+
  8011  012C52  CFF5 F083          	movff	tablat,___flmul@a+2
  8012  012C56  000A               	tblrd		*-
  8013  012C58  CFF5 F084          	movff	tablat,___flmul@a+3
  8014  012C5C  EC95  F09B         	call	___flmul	;wreg free
  8015  012C60  C07D  F096         	movff	?___flmul,?_scale
  8016  012C64  C07E  F097         	movff	?___flmul+1,?_scale+1
  8017  012C68  C07F  F098         	movff	?___flmul+2,?_scale+2
  8018  012C6C  C080  F099         	movff	?___flmul+3,?_scale+3
  8019  012C70  0012               	return	
  8020  012C72                     l7970:
  8021                           
  8022                           ;doprnt.c: 438: else if(scl > 10)
  8023  012C72  0100               	movlb	0	; () banked
  8024  012C74  519E               	movf	scale@scl& (0+255),w,b
  8025  012C76  0A80               	xorlw	128
  8026  012C78  0F75               	addlw	-139
  8027  012C7A  A0D8               	btfss	status,0,c
  8028  012C7C  D063               	goto	l7976
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8032  012C7E  0E00               	movlw	0
  8033  012C80  0100               	movlb	0	; () banked
  8034  012C82  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8035  012C84  0E0A               	movlw	10
  8036  012C86  6F77               	movwf	___awdiv@divisor& (0+255),b
  8037  012C88  0100               	movlb	0	; () banked
  8038  012C8A  519E               	movf	scale@scl& (0+255),w,b
  8039  012C8C  0100               	movlb	0	; () banked
  8040  012C8E  6F75               	movwf	___awdiv@dividend& (0+255),b
  8041  012C90  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8042  012C92  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8043  012C94  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8044  012C96  ECE9  F0AA         	call	___awdiv	;wreg free
  8045  012C9A  0100               	movlb	0	; () banked
  8046  012C9C  90D8               	bcf	status,0,c
  8047  012C9E  3775               	rlcf	?___awdiv& (0+255),f,b
  8048  012CA0  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  8049  012CA2  0100               	movlb	0	; () banked
  8050  012CA4  90D8               	bcf	status,0,c
  8051  012CA6  3775               	rlcf	?___awdiv& (0+255),f,b
  8052  012CA8  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  8053  012CAA  0E24               	movlw	36
  8054  012CAC  0100               	movlb	0	; () banked
  8055  012CAE  2775               	addwf	?___awdiv& (0+255),f,b
  8056  012CB0  0E00               	movlw	0
  8057  012CB2  0100               	movlb	0	; () banked
  8058  012CB4  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  8059  012CB6  0E0D               	movlw	low __powers_
  8060  012CB8  0100               	movlb	0	; () banked
  8061  012CBA  2575               	addwf	?___awdiv& (0+255),w,b
  8062  012CBC  6EF6               	movwf	tblptrl,c
  8063  012CBE  0EFF               	movlw	high __powers_
  8064  012CC0  0100               	movlb	0	; () banked
  8065  012CC2  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8066  012CC4  6EF7               	movwf	tblptrh,c
  8067  012CC6                     	if	1	;There are 3 active tblptr bytes
  8068  012CC6  6AF8               	clrf	tblptru,c
  8069  012CC8  0E00               	movlw	low (__mediumconst shr (0+16))
  8070  012CCA  22F8               	addwfc	tblptru,f,c
  8071  012CCC                     	endif
  8072  012CCC  0009               	tblrd		*+
  8073  012CCE  CFF5 F07D          	movff	tablat,___flmul@b
  8074  012CD2  0009               	tblrd		*+
  8075  012CD4  CFF5 F07E          	movff	tablat,___flmul@b+1
  8076  012CD8  0009               	tblrd		*+
  8077  012CDA  CFF5 F07F          	movff	tablat,___flmul@b+2
  8078  012CDE  000A               	tblrd		*-
  8079  012CE0  CFF5 F080          	movff	tablat,___flmul@b+3
  8080  012CE4  0E00               	movlw	0
  8081  012CE6  0100               	movlb	0	; () banked
  8082  012CE8  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  8083  012CEA  0E0A               	movlw	10
  8084  012CEC  6F71               	movwf	___awmod@divisor& (0+255),b
  8085  012CEE  0100               	movlb	0	; () banked
  8086  012CF0  519E               	movf	scale@scl& (0+255),w,b
  8087  012CF2  0100               	movlb	0	; () banked
  8088  012CF4  6F6F               	movwf	___awmod@dividend& (0+255),b
  8089  012CF6  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  8090  012CF8  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  8091  012CFA  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  8092  012CFC  EC58  F0AC         	call	___awmod	;wreg free
  8093  012D00  0100               	movlb	0	; () banked
  8094  012D02  90D8               	bcf	status,0,c
  8095  012D04  376F               	rlcf	?___awmod& (0+255),f,b
  8096  012D06  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  8097  012D08  0100               	movlb	0	; () banked
  8098  012D0A  90D8               	bcf	status,0,c
  8099  012D0C  376F               	rlcf	?___awmod& (0+255),f,b
  8100  012D0E  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  8101  012D10  0E0D               	movlw	low __powers_
  8102  012D12  0100               	movlb	0	; () banked
  8103  012D14  256F               	addwf	?___awmod& (0+255),w,b
  8104  012D16  6EF6               	movwf	tblptrl,c
  8105  012D18  0EFF               	movlw	high __powers_
  8106  012D1A  0100               	movlb	0	; () banked
  8107  012D1C  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  8108  012D1E  6EF7               	movwf	tblptrh,c
  8109  012D20                     	if	1	;There are 3 active tblptr bytes
  8110  012D20  6AF8               	clrf	tblptru,c
  8111  012D22  0E00               	movlw	low (__mediumconst shr (0+16))
  8112  012D24  22F8               	addwfc	tblptru,f,c
  8113  012D26                     	endif
  8114  012D26  0009               	tblrd		*+
  8115  012D28  CFF5 F081          	movff	tablat,___flmul@a
  8116  012D2C  0009               	tblrd		*+
  8117  012D2E  CFF5 F082          	movff	tablat,___flmul@a+1
  8118  012D32  0009               	tblrd		*+
  8119  012D34  CFF5 F083          	movff	tablat,___flmul@a+2
  8120  012D38  000A               	tblrd		*-
  8121  012D3A  CFF5 F084          	movff	tablat,___flmul@a+3
  8122  012D3E  EC95  F09B         	call	___flmul	;wreg free
  8123  012D42  D78E               	goto	L6
  8124  012D44                     l7976:
  8125                           
  8126                           ;doprnt.c: 440: return _powers_[scl];
  8127  012D44  0100               	movlb	0	; () banked
  8128  012D46  519E               	movf	scale@scl& (0+255),w,b
  8129  012D48  0D04               	mullw	4
  8130  012D4A  0E0D               	movlw	low __powers_
  8131  012D4C  24F3               	addwf	prodl,w,c
  8132  012D4E  6EF6               	movwf	tblptrl,c
  8133  012D50  0EFF               	movlw	high __powers_
  8134  012D52  20F4               	addwfc	prodh,w,c
  8135  012D54  6EF7               	movwf	tblptrh,c
  8136  012D56                     	if	1	;There are 3 active tblptr bytes
  8137  012D56  6AF8               	clrf	tblptru,c
  8138  012D58  0E00               	movlw	low (__mediumconst shr (0+16))
  8139  012D5A  22F8               	addwfc	tblptru,f,c
  8140  012D5C                     	endif
  8141  012D5C  0009               	tblrd		*+
  8142  012D5E  CFF5 F096          	movff	tablat,?_scale
  8143  012D62  0009               	tblrd		*+
  8144  012D64  CFF5 F097          	movff	tablat,?_scale+1
  8145  012D68  0009               	tblrd		*+
  8146  012D6A  CFF5 F098          	movff	tablat,?_scale+2
  8147  012D6E  000A               	tblrd		*-
  8148  012D70  CFF5 F099          	movff	tablat,?_scale+3
  8149  012D74  0012               	return	
  8150  012D76                     __end_of_scale:
  8151                           	opt stack 0
  8152                           tblptru	equ	0xFF8
  8153                           tblptrh	equ	0xFF7
  8154                           tblptrl	equ	0xFF6
  8155                           tablat	equ	0xFF5
  8156                           prodh	equ	0xFF4
  8157                           prodl	equ	0xFF3
  8158                           intcon	equ	0xFF2
  8159                           postinc0	equ	0xFEE
  8160                           wreg	equ	0xFE8
  8161                           indf2	equ	0xFDF
  8162                           postinc2	equ	0xFDE
  8163                           fsr2h	equ	0xFDA
  8164                           fsr2l	equ	0xFD9
  8165                           status	equ	0xFD8
  8166                           
  8167 ;; *************** function _isdigit *****************
  8168 ;; Defined at:
  8169 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;  c               1    wreg     unsigned char 
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;  c               1   17[BANK0 ] unsigned char 
  8174 ;; Return value:  Size  Location     Type
  8175 ;;		None               void
  8176 ;; Registers used:
  8177 ;;		wreg, status,2, status,0
  8178 ;; Tracked objects:
  8179 ;;		On entry : 0/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8184 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8185 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8186 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8187 ;;Total ram usage:        3 bytes
  8188 ;; Hardware stack levels used:    1
  8189 ;; Hardware stack levels required when called:    3
  8190 ;; This function calls:
  8191 ;;		Nothing
  8192 ;; This function is called by:
  8193 ;;		_sprintf
  8194 ;; This function uses a non-reentrant model
  8195 ;;
  8196                           
  8197                           	psect	text10
  8198  015D28                     __ptext10:
  8199                           	opt stack 0
  8200  015D28                     _isdigit:
  8201                           	opt stack 25
  8202                           
  8203                           ;incstack = 0
  8204                           ;isdigit@c stored from wreg
  8205  015D28  0100               	movlb	0	; () banked
  8206  015D2A  6F71               	movwf	isdigit@c& (0+255),b
  8207  015D2C  0E00               	movlw	0
  8208  015D2E  0100               	movlb	0	; () banked
  8209  015D30  6F70               	movwf	_isdigit$3799& (0+255),b
  8210                           
  8211                           ; BSR set to: 0
  8212  015D32  0E3A               	movlw	58
  8213  015D34  0100               	movlb	0	; () banked
  8214  015D36  6171               	cpfslt	isdigit@c& (0+255),b
  8215  015D38  D007               	goto	l7988
  8216                           
  8217                           ; BSR set to: 0
  8218  015D3A  0E2F               	movlw	47
  8219  015D3C  0100               	movlb	0	; () banked
  8220  015D3E  6571               	cpfsgt	isdigit@c& (0+255),b
  8221  015D40  D003               	goto	l7988
  8222                           
  8223                           ; BSR set to: 0
  8224  015D42  0E01               	movlw	1
  8225  015D44  0100               	movlb	0	; () banked
  8226  015D46  6F70               	movwf	_isdigit$3799& (0+255),b
  8227  015D48                     l7988:
  8228                           
  8229                           ; BSR set to: 0
  8230  015D48  C070  F06F         	movff	_isdigit$3799,??_isdigit
  8231  015D4C  0100               	movlb	0	; () banked
  8232  015D4E  316F               	rrcf	??_isdigit& (0+255),w,b
  8233  015D50  0012               	return	
  8234  015D52                     __end_of_isdigit:
  8235                           	opt stack 0
  8236                           tblptru	equ	0xFF8
  8237                           tblptrh	equ	0xFF7
  8238                           tblptrl	equ	0xFF6
  8239                           tablat	equ	0xFF5
  8240                           prodh	equ	0xFF4
  8241                           prodl	equ	0xFF3
  8242                           intcon	equ	0xFF2
  8243                           postinc0	equ	0xFEE
  8244                           wreg	equ	0xFE8
  8245                           indf2	equ	0xFDF
  8246                           postinc2	equ	0xFDE
  8247                           fsr2h	equ	0xFDA
  8248                           fsr2l	equ	0xFD9
  8249                           status	equ	0xFD8
  8250                           
  8251 ;; *************** function _fround *****************
  8252 ;; Defined at:
  8253 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;  prec            1    wreg     unsigned char 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;  prec            1   66[BANK0 ] unsigned char 
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  4   54[BANK0 ] unsigned char 
  8260 ;; Registers used:
  8261 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8267 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8268 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8270 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8271 ;;Total ram usage:       13 bytes
  8272 ;; Hardware stack levels used:    1
  8273 ;; Hardware stack levels required when called:    4
  8274 ;; This function calls:
  8275 ;;		___awdiv
  8276 ;;		___awmod
  8277 ;;		___flmul
  8278 ;; This function is called by:
  8279 ;;		_sprintf
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283                           	psect	text11
  8284  01432E                     __ptext11:
  8285                           	opt stack 0
  8286  01432E                     _fround:
  8287                           	opt stack 24
  8288                           
  8289                           ; BSR set to: 0
  8290                           ;incstack = 0
  8291                           ;fround@prec stored from wreg
  8292  01432E  0100               	movlb	0	; () banked
  8293  014330  6FA2               	movwf	fround@prec& (0+255),b
  8294                           
  8295                           ;doprnt.c: 413: if(prec>=110)
  8296  014332  0E6D               	movlw	109
  8297  014334  0100               	movlb	0	; () banked
  8298  014336  65A2               	cpfsgt	fround@prec& (0+255),b
  8299  014338  D0CD               	goto	l7930
  8300                           
  8301                           ; BSR set to: 0
  8302                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8303  01433A  0E00               	movlw	0
  8304  01433C  0100               	movlb	0	; () banked
  8305  01433E  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8306  014340  0E0A               	movlw	10
  8307  014342  6F77               	movwf	___awdiv@divisor& (0+255),b
  8308  014344  0E00               	movlw	0
  8309  014346  0100               	movlb	0	; () banked
  8310  014348  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  8311  01434A  0E64               	movlw	100
  8312  01434C  6F71               	movwf	___awmod@divisor& (0+255),b
  8313  01434E  C0A2  F06F         	movff	fround@prec,___awmod@dividend
  8314  014352  0100               	movlb	0	; () banked
  8315  014354  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  8316  014356  EC58  F0AC         	call	___awmod	;wreg free
  8317  01435A  C06F  F075         	movff	?___awmod,___awdiv@dividend
  8318  01435E  C070  F076         	movff	?___awmod+1,___awdiv@dividend+1
  8319  014362  ECE9  F0AA         	call	___awdiv	;wreg free
  8320  014366  0100               	movlb	0	; () banked
  8321  014368  90D8               	bcf	status,0,c
  8322  01436A  3775               	rlcf	?___awdiv& (0+255),f,b
  8323  01436C  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  8324  01436E  0100               	movlb	0	; () banked
  8325  014370  90D8               	bcf	status,0,c
  8326  014372  3775               	rlcf	?___awdiv& (0+255),f,b
  8327  014374  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  8328  014376  0E24               	movlw	36
  8329  014378  0100               	movlb	0	; () banked
  8330  01437A  2775               	addwf	?___awdiv& (0+255),f,b
  8331  01437C  0E00               	movlw	0
  8332  01437E  0100               	movlb	0	; () banked
  8333  014380  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  8334  014382  0ED9               	movlw	low __npowers_
  8335  014384  0100               	movlb	0	; () banked
  8336  014386  2575               	addwf	?___awdiv& (0+255),w,b
  8337  014388  6EF6               	movwf	tblptrl,c
  8338  01438A  0EFE               	movlw	high __npowers_
  8339  01438C  0100               	movlb	0	; () banked
  8340  01438E  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8341  014390  6EF7               	movwf	tblptrh,c
  8342  014392                     	if	1	;There are 3 active tblptr bytes
  8343  014392  6AF8               	clrf	tblptru,c
  8344  014394  0E00               	movlw	low (__mediumconst shr (0+16))
  8345  014396  22F8               	addwfc	tblptru,f,c
  8346  014398                     	endif
  8347  014398  0009               	tblrd		*+
  8348  01439A  CFF5 F081          	movff	tablat,___flmul@a
  8349  01439E  0009               	tblrd		*+
  8350  0143A0  CFF5 F082          	movff	tablat,___flmul@a+1
  8351  0143A4  0009               	tblrd		*+
  8352  0143A6  CFF5 F083          	movff	tablat,___flmul@a+2
  8353  0143AA  000A               	tblrd		*-
  8354  0143AC  CFF5 F084          	movff	tablat,___flmul@a+3
  8355  0143B0  0E00               	movlw	0
  8356  0143B2  0100               	movlb	0	; () banked
  8357  0143B4  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8358  0143B6  0E64               	movlw	100
  8359  0143B8  6F77               	movwf	___awdiv@divisor& (0+255),b
  8360  0143BA  C0A2  F075         	movff	fround@prec,___awdiv@dividend
  8361  0143BE  0100               	movlb	0	; () banked
  8362  0143C0  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8363  0143C2  ECE9  F0AA         	call	___awdiv	;wreg free
  8364  0143C6  0100               	movlb	0	; () banked
  8365  0143C8  90D8               	bcf	status,0,c
  8366  0143CA  3775               	rlcf	?___awdiv& (0+255),f,b
  8367  0143CC  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  8368  0143CE  0100               	movlb	0	; () banked
  8369  0143D0  90D8               	bcf	status,0,c
  8370  0143D2  3775               	rlcf	?___awdiv& (0+255),f,b
  8371  0143D4  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  8372  0143D6  0E48               	movlw	72
  8373  0143D8  0100               	movlb	0	; () banked
  8374  0143DA  2775               	addwf	?___awdiv& (0+255),f,b
  8375  0143DC  0E00               	movlw	0
  8376  0143DE  0100               	movlb	0	; () banked
  8377  0143E0  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  8378  0143E2  0ED9               	movlw	low __npowers_
  8379  0143E4  0100               	movlb	0	; () banked
  8380  0143E6  2575               	addwf	?___awdiv& (0+255),w,b
  8381  0143E8  6EF6               	movwf	tblptrl,c
  8382  0143EA  0EFE               	movlw	high __npowers_
  8383  0143EC  0100               	movlb	0	; () banked
  8384  0143EE  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8385  0143F0  6EF7               	movwf	tblptrh,c
  8386  0143F2                     	if	1	;There are 3 active tblptr bytes
  8387  0143F2  6AF8               	clrf	tblptru,c
  8388  0143F4  0E00               	movlw	low (__mediumconst shr (0+16))
  8389  0143F6  22F8               	addwfc	tblptru,f,c
  8390  0143F8                     	endif
  8391  0143F8  0009               	tblrd		*+
  8392  0143FA  CFF5 F07D          	movff	tablat,___flmul@b
  8393  0143FE  0009               	tblrd		*+
  8394  014400  CFF5 F07E          	movff	tablat,___flmul@b+1
  8395  014404  0009               	tblrd		*+
  8396  014406  CFF5 F07F          	movff	tablat,___flmul@b+2
  8397  01440A  000A               	tblrd		*-
  8398  01440C  CFF5 F080          	movff	tablat,___flmul@b+3
  8399  014410  EC95  F09B         	call	___flmul	;wreg free
  8400  014414  C07D  F09E         	movff	?___flmul,_fround$4214
  8401  014418  C07E  F09F         	movff	?___flmul+1,_fround$4214+1
  8402  01441C  C07F  F0A0         	movff	?___flmul+2,_fround$4214+2
  8403  014420  C080  F0A1         	movff	?___flmul+3,_fround$4214+3
  8404                           
  8405                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8406  014424  0E00               	movlw	0
  8407  014426  0100               	movlb	0	; () banked
  8408  014428  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  8409  01442A  0E0A               	movlw	10
  8410  01442C  6F71               	movwf	___awmod@divisor& (0+255),b
  8411  01442E  C0A2  F06F         	movff	fround@prec,___awmod@dividend
  8412  014432  0100               	movlb	0	; () banked
  8413  014434  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  8414  014436  EC58  F0AC         	call	___awmod	;wreg free
  8415  01443A  0100               	movlb	0	; () banked
  8416  01443C  90D8               	bcf	status,0,c
  8417  01443E  376F               	rlcf	?___awmod& (0+255),f,b
  8418  014440  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  8419  014442  0100               	movlb	0	; () banked
  8420  014444  90D8               	bcf	status,0,c
  8421  014446  376F               	rlcf	?___awmod& (0+255),f,b
  8422  014448  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  8423  01444A  0ED9               	movlw	low __npowers_
  8424  01444C  0100               	movlb	0	; () banked
  8425  01444E  256F               	addwf	?___awmod& (0+255),w,b
  8426  014450  6EF6               	movwf	tblptrl,c
  8427  014452  0EFE               	movlw	high __npowers_
  8428  014454  0100               	movlb	0	; () banked
  8429  014456  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  8430  014458  6EF7               	movwf	tblptrh,c
  8431  01445A                     	if	1	;There are 3 active tblptr bytes
  8432  01445A  6AF8               	clrf	tblptru,c
  8433  01445C  0E00               	movlw	low (__mediumconst shr (0+16))
  8434  01445E  22F8               	addwfc	tblptru,f,c
  8435  014460                     	endif
  8436  014460  0009               	tblrd		*+
  8437  014462  CFF5 F081          	movff	tablat,___flmul@a
  8438  014466  0009               	tblrd		*+
  8439  014468  CFF5 F082          	movff	tablat,___flmul@a+1
  8440  01446C  0009               	tblrd		*+
  8441  01446E  CFF5 F083          	movff	tablat,___flmul@a+2
  8442  014472  000A               	tblrd		*-
  8443  014474  CFF5 F084          	movff	tablat,___flmul@a+3
  8444  014478  C09E  F07D         	movff	_fround$4214,___flmul@b
  8445  01447C  C09F  F07E         	movff	_fround$4214+1,___flmul@b+1
  8446  014480  C0A0  F07F         	movff	_fround$4214+2,___flmul@b+2
  8447  014484  C0A1  F080         	movff	_fround$4214+3,___flmul@b+3
  8448  014488  EC95  F09B         	call	___flmul	;wreg free
  8449  01448C  C07D  F09A         	movff	?___flmul,_fround$4215
  8450  014490  C07E  F09B         	movff	?___flmul+1,_fround$4215+1
  8451  014494  C07F  F09C         	movff	?___flmul+2,_fround$4215+2
  8452  014498  C080  F09D         	movff	?___flmul+3,_fround$4215+3
  8453                           
  8454                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8455  01449C  C09A  F07D         	movff	_fround$4215,___flmul@b
  8456  0144A0  C09B  F07E         	movff	_fround$4215+1,___flmul@b+1
  8457  0144A4  C09C  F07F         	movff	_fround$4215+2,___flmul@b+2
  8458  0144A8  C09D  F080         	movff	_fround$4215+3,___flmul@b+3
  8459  0144AC  0E00               	movlw	0
  8460  0144AE  0100               	movlb	0	; () banked
  8461  0144B0  6F81               	movwf	___flmul@a& (0+255),b
  8462  0144B2  0E00               	movlw	0
  8463  0144B4  6F82               	movwf	(___flmul@a+1)& (0+255),b
  8464  0144B6  0E00               	movlw	0
  8465  0144B8  6F83               	movwf	(___flmul@a+2)& (0+255),b
  8466  0144BA  0E3F               	movlw	63
  8467  0144BC  6F84               	movwf	(___flmul@a+3)& (0+255),b
  8468  0144BE  EC95  F09B         	call	___flmul	;wreg free
  8469  0144C2  C07D  F096         	movff	?___flmul,?_fround
  8470  0144C6  C07E  F097         	movff	?___flmul+1,?_fround+1
  8471  0144CA  C07F  F098         	movff	?___flmul+2,?_fround+2
  8472  0144CE  C080  F099         	movff	?___flmul+3,?_fround+3
  8473  0144D2  0012               	return	
  8474  0144D4                     l7930:
  8475                           
  8476                           ;doprnt.c: 415: else if(prec > 10)
  8477  0144D4  0E0A               	movlw	10
  8478  0144D6  0100               	movlb	0	; () banked
  8479  0144D8  65A2               	cpfsgt	fround@prec& (0+255),b
  8480  0144DA  D078               	goto	l7938
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8484  0144DC  0E00               	movlw	0
  8485  0144DE  0100               	movlb	0	; () banked
  8486  0144E0  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  8487  0144E2  0E0A               	movlw	10
  8488  0144E4  6F71               	movwf	___awmod@divisor& (0+255),b
  8489  0144E6  C0A2  F06F         	movff	fround@prec,___awmod@dividend
  8490  0144EA  0100               	movlb	0	; () banked
  8491  0144EC  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  8492  0144EE  EC58  F0AC         	call	___awmod	;wreg free
  8493  0144F2  0100               	movlb	0	; () banked
  8494  0144F4  90D8               	bcf	status,0,c
  8495  0144F6  376F               	rlcf	?___awmod& (0+255),f,b
  8496  0144F8  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  8497  0144FA  0100               	movlb	0	; () banked
  8498  0144FC  90D8               	bcf	status,0,c
  8499  0144FE  376F               	rlcf	?___awmod& (0+255),f,b
  8500  014500  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  8501  014502  0ED9               	movlw	low __npowers_
  8502  014504  0100               	movlb	0	; () banked
  8503  014506  256F               	addwf	?___awmod& (0+255),w,b
  8504  014508  6EF6               	movwf	tblptrl,c
  8505  01450A  0EFE               	movlw	high __npowers_
  8506  01450C  0100               	movlb	0	; () banked
  8507  01450E  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  8508  014510  6EF7               	movwf	tblptrh,c
  8509  014512                     	if	1	;There are 3 active tblptr bytes
  8510  014512  6AF8               	clrf	tblptru,c
  8511  014514  0E00               	movlw	low (__mediumconst shr (0+16))
  8512  014516  22F8               	addwfc	tblptru,f,c
  8513  014518                     	endif
  8514  014518  0009               	tblrd		*+
  8515  01451A  CFF5 F081          	movff	tablat,___flmul@a
  8516  01451E  0009               	tblrd		*+
  8517  014520  CFF5 F082          	movff	tablat,___flmul@a+1
  8518  014524  0009               	tblrd		*+
  8519  014526  CFF5 F083          	movff	tablat,___flmul@a+2
  8520  01452A  000A               	tblrd		*-
  8521  01452C  CFF5 F084          	movff	tablat,___flmul@a+3
  8522  014530  0E00               	movlw	0
  8523  014532  0100               	movlb	0	; () banked
  8524  014534  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8525  014536  0E0A               	movlw	10
  8526  014538  6F77               	movwf	___awdiv@divisor& (0+255),b
  8527  01453A  C0A2  F075         	movff	fround@prec,___awdiv@dividend
  8528  01453E  0100               	movlb	0	; () banked
  8529  014540  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8530  014542  ECE9  F0AA         	call	___awdiv	;wreg free
  8531  014546  0100               	movlb	0	; () banked
  8532  014548  90D8               	bcf	status,0,c
  8533  01454A  3775               	rlcf	?___awdiv& (0+255),f,b
  8534  01454C  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  8535  01454E  0100               	movlb	0	; () banked
  8536  014550  90D8               	bcf	status,0,c
  8537  014552  3775               	rlcf	?___awdiv& (0+255),f,b
  8538  014554  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  8539  014556  0E24               	movlw	36
  8540  014558  0100               	movlb	0	; () banked
  8541  01455A  2775               	addwf	?___awdiv& (0+255),f,b
  8542  01455C  0E00               	movlw	0
  8543  01455E  0100               	movlb	0	; () banked
  8544  014560  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  8545  014562  0ED9               	movlw	low __npowers_
  8546  014564  0100               	movlb	0	; () banked
  8547  014566  2575               	addwf	?___awdiv& (0+255),w,b
  8548  014568  6EF6               	movwf	tblptrl,c
  8549  01456A  0EFE               	movlw	high __npowers_
  8550  01456C  0100               	movlb	0	; () banked
  8551  01456E  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8552  014570  6EF7               	movwf	tblptrh,c
  8553  014572                     	if	1	;There are 3 active tblptr bytes
  8554  014572  6AF8               	clrf	tblptru,c
  8555  014574  0E00               	movlw	low (__mediumconst shr (0+16))
  8556  014576  22F8               	addwfc	tblptru,f,c
  8557  014578                     	endif
  8558  014578  0009               	tblrd		*+
  8559  01457A  CFF5 F07D          	movff	tablat,___flmul@b
  8560  01457E  0009               	tblrd		*+
  8561  014580  CFF5 F07E          	movff	tablat,___flmul@b+1
  8562  014584  0009               	tblrd		*+
  8563  014586  CFF5 F07F          	movff	tablat,___flmul@b+2
  8564  01458A  000A               	tblrd		*-
  8565  01458C  CFF5 F080          	movff	tablat,___flmul@b+3
  8566  014590  EC95  F09B         	call	___flmul	;wreg free
  8567  014594  C07D  F09E         	movff	?___flmul,_fround$4214
  8568  014598  C07E  F09F         	movff	?___flmul+1,_fround$4214+1
  8569  01459C  C07F  F0A0         	movff	?___flmul+2,_fround$4214+2
  8570  0145A0  C080  F0A1         	movff	?___flmul+3,_fround$4214+3
  8571                           
  8572                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8573  0145A4  C09E  F07D         	movff	_fround$4214,___flmul@b
  8574  0145A8  C09F  F07E         	movff	_fround$4214+1,___flmul@b+1
  8575  0145AC  C0A0  F07F         	movff	_fround$4214+2,___flmul@b+2
  8576  0145B0  C0A1  F080         	movff	_fround$4214+3,___flmul@b+3
  8577  0145B4  0E00               	movlw	0
  8578  0145B6  0100               	movlb	0	; () banked
  8579  0145B8  6F81               	movwf	___flmul@a& (0+255),b
  8580  0145BA  0E00               	movlw	0
  8581  0145BC  6F82               	movwf	(___flmul@a+1)& (0+255),b
  8582  0145BE  0E00               	movlw	0
  8583  0145C0  6F83               	movwf	(___flmul@a+2)& (0+255),b
  8584  0145C2  0E3F               	movlw	63
  8585  0145C4  6F84               	movwf	(___flmul@a+3)& (0+255),b
  8586  0145C6  EC95  F09B         	call	___flmul	;wreg free
  8587  0145CA  D77B               	goto	L7
  8588  0145CC                     l7938:
  8589                           
  8590                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8591  0145CC  0100               	movlb	0	; () banked
  8592  0145CE  51A2               	movf	fround@prec& (0+255),w,b
  8593  0145D0  0D04               	mullw	4
  8594  0145D2  0ED9               	movlw	low __npowers_
  8595  0145D4  24F3               	addwf	prodl,w,c
  8596  0145D6  6EF6               	movwf	tblptrl,c
  8597  0145D8  0EFE               	movlw	high __npowers_
  8598  0145DA  20F4               	addwfc	prodh,w,c
  8599  0145DC  6EF7               	movwf	tblptrh,c
  8600  0145DE                     	if	1	;There are 3 active tblptr bytes
  8601  0145DE  6AF8               	clrf	tblptru,c
  8602  0145E0  0E00               	movlw	low (__mediumconst shr (0+16))
  8603  0145E2  22F8               	addwfc	tblptru,f,c
  8604  0145E4                     	endif
  8605  0145E4  0009               	tblrd		*+
  8606  0145E6  CFF5 F07D          	movff	tablat,___flmul@b
  8607  0145EA  0009               	tblrd		*+
  8608  0145EC  CFF5 F07E          	movff	tablat,___flmul@b+1
  8609  0145F0  0009               	tblrd		*+
  8610  0145F2  CFF5 F07F          	movff	tablat,___flmul@b+2
  8611  0145F6  000A               	tblrd		*-
  8612  0145F8  CFF5 F080          	movff	tablat,___flmul@b+3
  8613  0145FC  0E00               	movlw	0
  8614  0145FE  0100               	movlb	0	; () banked
  8615  014600  6F81               	movwf	___flmul@a& (0+255),b
  8616  014602  0E00               	movlw	0
  8617  014604  6F82               	movwf	(___flmul@a+1)& (0+255),b
  8618  014606  0E00               	movlw	0
  8619  014608  6F83               	movwf	(___flmul@a+2)& (0+255),b
  8620  01460A  0E3F               	movlw	63
  8621  01460C  6F84               	movwf	(___flmul@a+3)& (0+255),b
  8622  01460E  EC95  F09B         	call	___flmul	;wreg free
  8623  014612  C07D  F096         	movff	?___flmul,?_fround
  8624  014616  C07E  F097         	movff	?___flmul+1,?_fround+1
  8625  01461A  C07F  F098         	movff	?___flmul+2,?_fround+2
  8626  01461E  C080  F099         	movff	?___flmul+3,?_fround+3
  8627  014622  0012               	return	
  8628  014624                     __end_of_fround:
  8629                           	opt stack 0
  8630                           tblptru	equ	0xFF8
  8631                           tblptrh	equ	0xFF7
  8632                           tblptrl	equ	0xFF6
  8633                           tablat	equ	0xFF5
  8634                           prodh	equ	0xFF4
  8635                           prodl	equ	0xFF3
  8636                           intcon	equ	0xFF2
  8637                           postinc0	equ	0xFEE
  8638                           wreg	equ	0xFE8
  8639                           indf2	equ	0xFDF
  8640                           postinc2	equ	0xFDE
  8641                           fsr2h	equ	0xFDA
  8642                           fsr2l	equ	0xFD9
  8643                           status	equ	0xFD8
  8644                           
  8645 ;; *************** function ___flmul *****************
  8646 ;; Defined at:
  8647 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8648 ;; Parameters:    Size  Location     Type
  8649 ;;  b               4   29[BANK0 ] unsigned char 
  8650 ;;  a               4   33[BANK0 ] unsigned char 
  8651 ;; Auto vars:     Size  Location     Type
  8652 ;;  prod            4   48[BANK0 ] struct .
  8653 ;;  grs             4   43[BANK0 ] unsigned long 
  8654 ;;  temp            2   52[BANK0 ] struct .
  8655 ;;  bexp            1   47[BANK0 ] unsigned char 
  8656 ;;  aexp            1   42[BANK0 ] unsigned char 
  8657 ;;  sign            1   41[BANK0 ] unsigned char 
  8658 ;; Return value:  Size  Location     Type
  8659 ;;                  4   29[BANK0 ] unsigned char 
  8660 ;; Registers used:
  8661 ;;		wreg, status,2, status,0, prodl, prodh
  8662 ;; Tracked objects:
  8663 ;;		On entry : 0/0
  8664 ;;		On exit  : 0/0
  8665 ;;		Unchanged: 0/0
  8666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8667 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8668 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8669 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8670 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8671 ;;Total ram usage:       25 bytes
  8672 ;; Hardware stack levels used:    1
  8673 ;; Hardware stack levels required when called:    3
  8674 ;; This function calls:
  8675 ;;		Nothing
  8676 ;; This function is called by:
  8677 ;;		_main
  8678 ;;		_fround
  8679 ;;		_scale
  8680 ;;		_sprintf
  8681 ;; This function uses a non-reentrant model
  8682 ;;
  8683                           
  8684                           	psect	text12
  8685  01372A                     __ptext12:
  8686                           	opt stack 0
  8687  01372A                     ___flmul:
  8688                           	opt stack 27
  8689                           
  8690                           ;incstack = 0
  8691  01372A  0100               	movlb	0	; () banked
  8692  01372C  5180               	movf	(___flmul@b+3)& (0+255),w,b
  8693  01372E  0B80               	andlw	128
  8694  013730  0100               	movlb	0	; () banked
  8695  013732  6F89               	movwf	___flmul@sign& (0+255),b
  8696  013734  0100               	movlb	0	; () banked
  8697  013736  5180               	movf	(___flmul@b+3)& (0+255),w,b
  8698  013738  2580               	addwf	(___flmul@b+3)& (0+255),w,b
  8699  01373A  0100               	movlb	0	; () banked
  8700  01373C  6F8F               	movwf	___flmul@bexp& (0+255),b
  8701                           
  8702                           ; BSR set to: 0
  8703  01373E  0100               	movlb	0	; () banked
  8704  013740  AF7F               	btfss	(___flmul@b+2)& (0+255),7,b
  8705  013742  D002               	goto	l7674
  8706                           
  8707                           ; BSR set to: 0
  8708  013744  0100               	movlb	0	; () banked
  8709  013746  818F               	bsf	___flmul@bexp& (0+255),0,b
  8710  013748                     l7674:
  8711                           
  8712                           ; BSR set to: 0
  8713  013748  0100               	movlb	0	; () banked
  8714  01374A  518F               	movf	___flmul@bexp& (0+255),w,b
  8715  01374C  0100               	movlb	0	; () banked
  8716  01374E  B4D8               	btfsc	status,2,c
  8717  013750  D010               	goto	l7682
  8718                           
  8719                           ; BSR set to: 0
  8720  013752  0100               	movlb	0	; () banked
  8721  013754  298F               	incf	___flmul@bexp& (0+255),w,b
  8722  013756  A4D8               	btfss	status,2,c
  8723  013758  D009               	goto	l7680
  8724                           
  8725                           ; BSR set to: 0
  8726  01375A  0E00               	movlw	0
  8727  01375C  0100               	movlb	0	; () banked
  8728  01375E  6F7D               	movwf	___flmul@b& (0+255),b
  8729  013760  0E00               	movlw	0
  8730  013762  6F7E               	movwf	(___flmul@b+1)& (0+255),b
  8731  013764  0E00               	movlw	0
  8732  013766  6F7F               	movwf	(___flmul@b+2)& (0+255),b
  8733  013768  0E00               	movlw	0
  8734  01376A  6F80               	movwf	(___flmul@b+3)& (0+255),b
  8735  01376C                     l7680:
  8736                           
  8737                           ; BSR set to: 0
  8738  01376C  0100               	movlb	0	; () banked
  8739  01376E  8F7F               	bsf	(___flmul@b+2)& (0+255),7,b
  8740  013770  D009               	goto	l7684
  8741  013772                     l7682:
  8742                           
  8743                           ; BSR set to: 0
  8744  013772  0E00               	movlw	0
  8745  013774  0100               	movlb	0	; () banked
  8746  013776  6F7D               	movwf	___flmul@b& (0+255),b
  8747  013778  0E00               	movlw	0
  8748  01377A  6F7E               	movwf	(___flmul@b+1)& (0+255),b
  8749  01377C  0E00               	movlw	0
  8750  01377E  6F7F               	movwf	(___flmul@b+2)& (0+255),b
  8751  013780  0E00               	movlw	0
  8752  013782  6F80               	movwf	(___flmul@b+3)& (0+255),b
  8753  013784                     l7684:
  8754                           
  8755                           ; BSR set to: 0
  8756  013784  0100               	movlb	0	; () banked
  8757  013786  5184               	movf	(___flmul@a+3)& (0+255),w,b
  8758  013788  0B80               	andlw	128
  8759  01378A  0100               	movlb	0	; () banked
  8760  01378C  1B89               	xorwf	___flmul@sign& (0+255),f,b
  8761                           
  8762                           ; BSR set to: 0
  8763  01378E  0100               	movlb	0	; () banked
  8764  013790  5184               	movf	(___flmul@a+3)& (0+255),w,b
  8765  013792  2584               	addwf	(___flmul@a+3)& (0+255),w,b
  8766  013794  0100               	movlb	0	; () banked
  8767  013796  6F8A               	movwf	___flmul@aexp& (0+255),b
  8768                           
  8769                           ; BSR set to: 0
  8770  013798  0100               	movlb	0	; () banked
  8771  01379A  AF83               	btfss	(___flmul@a+2)& (0+255),7,b
  8772  01379C  D002               	goto	l7692
  8773                           
  8774                           ; BSR set to: 0
  8775  01379E  0100               	movlb	0	; () banked
  8776  0137A0  818A               	bsf	___flmul@aexp& (0+255),0,b
  8777  0137A2                     l7692:
  8778                           
  8779                           ; BSR set to: 0
  8780  0137A2  0100               	movlb	0	; () banked
  8781  0137A4  518A               	movf	___flmul@aexp& (0+255),w,b
  8782  0137A6  0100               	movlb	0	; () banked
  8783  0137A8  B4D8               	btfsc	status,2,c
  8784  0137AA  D010               	goto	l7700
  8785                           
  8786                           ; BSR set to: 0
  8787  0137AC  0100               	movlb	0	; () banked
  8788  0137AE  298A               	incf	___flmul@aexp& (0+255),w,b
  8789  0137B0  A4D8               	btfss	status,2,c
  8790  0137B2  D009               	goto	l7698
  8791                           
  8792                           ; BSR set to: 0
  8793  0137B4  0E00               	movlw	0
  8794  0137B6  0100               	movlb	0	; () banked
  8795  0137B8  6F81               	movwf	___flmul@a& (0+255),b
  8796  0137BA  0E00               	movlw	0
  8797  0137BC  6F82               	movwf	(___flmul@a+1)& (0+255),b
  8798  0137BE  0E00               	movlw	0
  8799  0137C0  6F83               	movwf	(___flmul@a+2)& (0+255),b
  8800  0137C2  0E00               	movlw	0
  8801  0137C4  6F84               	movwf	(___flmul@a+3)& (0+255),b
  8802  0137C6                     l7698:
  8803                           
  8804                           ; BSR set to: 0
  8805  0137C6  0100               	movlb	0	; () banked
  8806  0137C8  8F83               	bsf	(___flmul@a+2)& (0+255),7,b
  8807  0137CA  D009               	goto	l1550
  8808  0137CC                     l7700:
  8809                           
  8810                           ; BSR set to: 0
  8811  0137CC  0E00               	movlw	0
  8812  0137CE  0100               	movlb	0	; () banked
  8813  0137D0  6F81               	movwf	___flmul@a& (0+255),b
  8814  0137D2  0E00               	movlw	0
  8815  0137D4  6F82               	movwf	(___flmul@a+1)& (0+255),b
  8816  0137D6  0E00               	movlw	0
  8817  0137D8  6F83               	movwf	(___flmul@a+2)& (0+255),b
  8818  0137DA  0E00               	movlw	0
  8819  0137DC  6F84               	movwf	(___flmul@a+3)& (0+255),b
  8820  0137DE                     l1550:
  8821                           
  8822                           ; BSR set to: 0
  8823  0137DE  0100               	movlb	0	; () banked
  8824  0137E0  518A               	movf	___flmul@aexp& (0+255),w,b
  8825  0137E2  0100               	movlb	0	; () banked
  8826  0137E4  B4D8               	btfsc	status,2,c
  8827  0137E6  D005               	goto	l7704
  8828                           
  8829                           ; BSR set to: 0
  8830  0137E8  0100               	movlb	0	; () banked
  8831  0137EA  518F               	movf	___flmul@bexp& (0+255),w,b
  8832  0137EC  0100               	movlb	0	; () banked
  8833  0137EE  A4D8               	btfss	status,2,c
  8834  0137F0  D00A               	goto	l7708
  8835  0137F2                     l7704:
  8836                           
  8837                           ; BSR set to: 0
  8838  0137F2  0E00               	movlw	0
  8839  0137F4  0100               	movlb	0	; () banked
  8840  0137F6  6F7D               	movwf	?___flmul& (0+255),b
  8841  0137F8  0E00               	movlw	0
  8842  0137FA  6F7E               	movwf	(?___flmul+1)& (0+255),b
  8843  0137FC  0E00               	movlw	0
  8844  0137FE  6F7F               	movwf	(?___flmul+2)& (0+255),b
  8845  013800  0E00               	movlw	0
  8846  013802  6F80               	movwf	(?___flmul+3)& (0+255),b
  8847                           
  8848                           ; BSR set to: 0
  8849  013804  0012               	return	
  8850  013806                     l7708:
  8851                           
  8852                           ; BSR set to: 0
  8853  013806  0100               	movlb	0	; () banked
  8854  013808  5183               	movf	(___flmul@a+2)& (0+255),w,b
  8855  01380A  0100               	movlb	0	; () banked
  8856  01380C  037D               	mulwf	___flmul@b& (0+255),b
  8857  01380E  CFF3 F094          	movff	prodl,___flmul@temp
  8858  013812  CFF4 F095          	movff	prodh,___flmul@temp+1
  8859                           
  8860                           ; BSR set to: 0
  8861  013816  0100               	movlb	0	; () banked
  8862  013818  5194               	movf	___flmul@temp& (0+255),w,b
  8863  01381A  0100               	movlb	0	; () banked
  8864  01381C  6F8B               	movwf	___flmul@grs& (0+255),b
  8865  01381E  6B8C               	clrf	(___flmul@grs+1)& (0+255),b
  8866  013820  6B8D               	clrf	(___flmul@grs+2)& (0+255),b
  8867  013822  6B8E               	clrf	(___flmul@grs+3)& (0+255),b
  8868                           
  8869                           ; BSR set to: 0
  8870  013824  0100               	movlb	0	; () banked
  8871  013826  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8872  013828  0100               	movlb	0	; () banked
  8873  01382A  6F90               	movwf	___flmul@prod& (0+255),b
  8874  01382C  6B91               	clrf	(___flmul@prod+1)& (0+255),b
  8875  01382E  6B92               	clrf	(___flmul@prod+2)& (0+255),b
  8876  013830  6B93               	clrf	(___flmul@prod+3)& (0+255),b
  8877  013832  0100               	movlb	0	; () banked
  8878  013834  5182               	movf	(___flmul@a+1)& (0+255),w,b
  8879  013836  0100               	movlb	0	; () banked
  8880  013838  037E               	mulwf	(___flmul@b+1)& (0+255),b
  8881  01383A  CFF3 F094          	movff	prodl,___flmul@temp
  8882  01383E  CFF4 F095          	movff	prodh,___flmul@temp+1
  8883                           
  8884                           ; BSR set to: 0
  8885  013842  0100               	movlb	0	; () banked
  8886  013844  5194               	movf	___flmul@temp& (0+255),w,b
  8887  013846  0100               	movlb	0	; () banked
  8888  013848  278B               	addwf	___flmul@grs& (0+255),f,b
  8889  01384A  0E00               	movlw	0
  8890  01384C  238C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8891  01384E  238D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8892  013850  238E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8893                           
  8894                           ; BSR set to: 0
  8895  013852  0100               	movlb	0	; () banked
  8896  013854  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8897  013856  0100               	movlb	0	; () banked
  8898  013858  2790               	addwf	___flmul@prod& (0+255),f,b
  8899  01385A  0E00               	movlw	0
  8900  01385C  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8901  01385E  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8902  013860  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8903  013862  0100               	movlb	0	; () banked
  8904  013864  5181               	movf	___flmul@a& (0+255),w,b
  8905  013866  0100               	movlb	0	; () banked
  8906  013868  037F               	mulwf	(___flmul@b+2)& (0+255),b
  8907  01386A  CFF3 F094          	movff	prodl,___flmul@temp
  8908  01386E  CFF4 F095          	movff	prodh,___flmul@temp+1
  8909                           
  8910                           ; BSR set to: 0
  8911  013872  0100               	movlb	0	; () banked
  8912  013874  5194               	movf	___flmul@temp& (0+255),w,b
  8913  013876  0100               	movlb	0	; () banked
  8914  013878  278B               	addwf	___flmul@grs& (0+255),f,b
  8915  01387A  0E00               	movlw	0
  8916  01387C  238C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8917  01387E  238D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8918  013880  238E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8919                           
  8920                           ; BSR set to: 0
  8921  013882  0100               	movlb	0	; () banked
  8922  013884  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8923  013886  0100               	movlb	0	; () banked
  8924  013888  2790               	addwf	___flmul@prod& (0+255),f,b
  8925  01388A  0E00               	movlw	0
  8926  01388C  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8927  01388E  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8928  013890  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8929                           
  8930                           ; BSR set to: 0
  8931  013892  C08D  F08E         	movff	___flmul@grs+2,___flmul@grs+3
  8932  013896  C08C  F08D         	movff	___flmul@grs+1,___flmul@grs+2
  8933  01389A  C08B  F08C         	movff	___flmul@grs,___flmul@grs+1
  8934  01389E  0100               	movlb	0	; () banked
  8935  0138A0  6B8B               	clrf	___flmul@grs& (0+255),b
  8936                           
  8937                           ; BSR set to: 0
  8938  0138A2  0100               	movlb	0	; () banked
  8939  0138A4  5181               	movf	___flmul@a& (0+255),w,b
  8940  0138A6  0100               	movlb	0	; () banked
  8941  0138A8  037E               	mulwf	(___flmul@b+1)& (0+255),b
  8942  0138AA  CFF3 F094          	movff	prodl,___flmul@temp
  8943  0138AE  CFF4 F095          	movff	prodh,___flmul@temp+1
  8944                           
  8945                           ; BSR set to: 0
  8946  0138B2  0100               	movlb	0	; () banked
  8947  0138B4  5194               	movf	___flmul@temp& (0+255),w,b
  8948  0138B6  0100               	movlb	0	; () banked
  8949  0138B8  278B               	addwf	___flmul@grs& (0+255),f,b
  8950  0138BA  0100               	movlb	0	; () banked
  8951  0138BC  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8952  0138BE  0100               	movlb	0	; () banked
  8953  0138C0  238C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8954  0138C2  0E00               	movlw	0
  8955  0138C4  0100               	movlb	0	; () banked
  8956  0138C6  238D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8957  0138C8  0E00               	movlw	0
  8958  0138CA  0100               	movlb	0	; () banked
  8959  0138CC  238E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8960                           
  8961                           ; BSR set to: 0
  8962  0138CE  0100               	movlb	0	; () banked
  8963  0138D0  5182               	movf	(___flmul@a+1)& (0+255),w,b
  8964  0138D2  0100               	movlb	0	; () banked
  8965  0138D4  037D               	mulwf	___flmul@b& (0+255),b
  8966  0138D6  CFF3 F094          	movff	prodl,___flmul@temp
  8967  0138DA  CFF4 F095          	movff	prodh,___flmul@temp+1
  8968                           
  8969                           ; BSR set to: 0
  8970  0138DE  0100               	movlb	0	; () banked
  8971  0138E0  5194               	movf	___flmul@temp& (0+255),w,b
  8972  0138E2  0100               	movlb	0	; () banked
  8973  0138E4  278B               	addwf	___flmul@grs& (0+255),f,b
  8974  0138E6  0100               	movlb	0	; () banked
  8975  0138E8  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8976  0138EA  0100               	movlb	0	; () banked
  8977  0138EC  238C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8978  0138EE  0E00               	movlw	0
  8979  0138F0  0100               	movlb	0	; () banked
  8980  0138F2  238D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8981  0138F4  0E00               	movlw	0
  8982  0138F6  0100               	movlb	0	; () banked
  8983  0138F8  238E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8984                           
  8985                           ; BSR set to: 0
  8986  0138FA  C08D  F08E         	movff	___flmul@grs+2,___flmul@grs+3
  8987  0138FE  C08C  F08D         	movff	___flmul@grs+1,___flmul@grs+2
  8988  013902  C08B  F08C         	movff	___flmul@grs,___flmul@grs+1
  8989  013906  0100               	movlb	0	; () banked
  8990  013908  6B8B               	clrf	___flmul@grs& (0+255),b
  8991  01390A  0100               	movlb	0	; () banked
  8992  01390C  5181               	movf	___flmul@a& (0+255),w,b
  8993  01390E  0100               	movlb	0	; () banked
  8994  013910  037D               	mulwf	___flmul@b& (0+255),b
  8995  013912  CFF3 F094          	movff	prodl,___flmul@temp
  8996  013916  CFF4 F095          	movff	prodh,___flmul@temp+1
  8997                           
  8998                           ; BSR set to: 0
  8999  01391A  0100               	movlb	0	; () banked
  9000  01391C  5194               	movf	___flmul@temp& (0+255),w,b
  9001  01391E  0100               	movlb	0	; () banked
  9002  013920  278B               	addwf	___flmul@grs& (0+255),f,b
  9003  013922  0100               	movlb	0	; () banked
  9004  013924  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  9005  013926  0100               	movlb	0	; () banked
  9006  013928  238C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9007  01392A  0E00               	movlw	0
  9008  01392C  0100               	movlb	0	; () banked
  9009  01392E  238D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9010  013930  0E00               	movlw	0
  9011  013932  0100               	movlb	0	; () banked
  9012  013934  238E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9013                           
  9014                           ; BSR set to: 0
  9015  013936  0100               	movlb	0	; () banked
  9016  013938  5183               	movf	(___flmul@a+2)& (0+255),w,b
  9017  01393A  0100               	movlb	0	; () banked
  9018  01393C  037E               	mulwf	(___flmul@b+1)& (0+255),b
  9019  01393E  CFF3 F094          	movff	prodl,___flmul@temp
  9020  013942  CFF4 F095          	movff	prodh,___flmul@temp+1
  9021  013946  0100               	movlb	0	; () banked
  9022  013948  5194               	movf	___flmul@temp& (0+255),w,b
  9023  01394A  0100               	movlb	0	; () banked
  9024  01394C  2790               	addwf	___flmul@prod& (0+255),f,b
  9025  01394E  0100               	movlb	0	; () banked
  9026  013950  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  9027  013952  0100               	movlb	0	; () banked
  9028  013954  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9029  013956  0E00               	movlw	0
  9030  013958  0100               	movlb	0	; () banked
  9031  01395A  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9032  01395C  0E00               	movlw	0
  9033  01395E  0100               	movlb	0	; () banked
  9034  013960  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9035                           
  9036                           ; BSR set to: 0
  9037  013962  0100               	movlb	0	; () banked
  9038  013964  5182               	movf	(___flmul@a+1)& (0+255),w,b
  9039  013966  0100               	movlb	0	; () banked
  9040  013968  037F               	mulwf	(___flmul@b+2)& (0+255),b
  9041  01396A  CFF3 F094          	movff	prodl,___flmul@temp
  9042  01396E  CFF4 F095          	movff	prodh,___flmul@temp+1
  9043                           
  9044                           ; BSR set to: 0
  9045  013972  0100               	movlb	0	; () banked
  9046  013974  5194               	movf	___flmul@temp& (0+255),w,b
  9047  013976  0100               	movlb	0	; () banked
  9048  013978  2790               	addwf	___flmul@prod& (0+255),f,b
  9049  01397A  0100               	movlb	0	; () banked
  9050  01397C  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  9051  01397E  0100               	movlb	0	; () banked
  9052  013980  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9053  013982  0E00               	movlw	0
  9054  013984  0100               	movlb	0	; () banked
  9055  013986  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9056  013988  0E00               	movlw	0
  9057  01398A  0100               	movlb	0	; () banked
  9058  01398C  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9059  01398E  0100               	movlb	0	; () banked
  9060  013990  5183               	movf	(___flmul@a+2)& (0+255),w,b
  9061  013992  0100               	movlb	0	; () banked
  9062  013994  037F               	mulwf	(___flmul@b+2)& (0+255),b
  9063  013996  CFF3 F094          	movff	prodl,___flmul@temp
  9064  01399A  CFF4 F095          	movff	prodh,___flmul@temp+1
  9065                           
  9066                           ; BSR set to: 0
  9067  01399E  0100               	movlb	0	; () banked
  9068  0139A0  5194               	movf	___flmul@temp& (0+255),w,b
  9069  0139A2  0100               	movlb	0	; () banked
  9070  0139A4  6F85               	movwf	??___flmul& (0+255),b
  9071  0139A6  0100               	movlb	0	; () banked
  9072  0139A8  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  9073  0139AA  0100               	movlb	0	; () banked
  9074  0139AC  6F86               	movwf	(??___flmul+1)& (0+255),b
  9075  0139AE  0100               	movlb	0	; () banked
  9076  0139B0  6B87               	clrf	(??___flmul+2)& (0+255),b
  9077  0139B2  0100               	movlb	0	; () banked
  9078  0139B4  6B88               	clrf	(??___flmul+3)& (0+255),b
  9079  0139B6  C087  F088         	movff	??___flmul+2,??___flmul+3
  9080  0139BA  C086  F087         	movff	??___flmul+1,??___flmul+2
  9081  0139BE  C085  F086         	movff	??___flmul,??___flmul+1
  9082  0139C2  0100               	movlb	0	; () banked
  9083  0139C4  6B85               	clrf	??___flmul& (0+255),b
  9084  0139C6  0100               	movlb	0	; () banked
  9085  0139C8  5185               	movf	??___flmul& (0+255),w,b
  9086  0139CA  0100               	movlb	0	; () banked
  9087  0139CC  2790               	addwf	___flmul@prod& (0+255),f,b
  9088  0139CE  0100               	movlb	0	; () banked
  9089  0139D0  5186               	movf	(??___flmul+1)& (0+255),w,b
  9090  0139D2  0100               	movlb	0	; () banked
  9091  0139D4  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9092  0139D6  0100               	movlb	0	; () banked
  9093  0139D8  5187               	movf	(??___flmul+2)& (0+255),w,b
  9094  0139DA  0100               	movlb	0	; () banked
  9095  0139DC  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9096  0139DE  0100               	movlb	0	; () banked
  9097  0139E0  5188               	movf	(??___flmul+3)& (0+255),w,b
  9098  0139E2  0100               	movlb	0	; () banked
  9099  0139E4  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9100                           
  9101                           ; BSR set to: 0
  9102  0139E6  C08B  F085         	movff	___flmul@grs,??___flmul
  9103  0139EA  C08C  F086         	movff	___flmul@grs+1,??___flmul+1
  9104  0139EE  C08D  F087         	movff	___flmul@grs+2,??___flmul+2
  9105  0139F2  C08E  F088         	movff	___flmul@grs+3,??___flmul+3
  9106  0139F6  0E19               	movlw	25
  9107  0139F8  D006               	goto	u10180
  9108  0139FA                     u10185:
  9109  0139FA  0100               	movlb	0	; () banked
  9110  0139FC  90D8               	bcf	status,0,c
  9111  0139FE  3388               	rrcf	(??___flmul+3)& (0+255),f,b
  9112  013A00  3387               	rrcf	(??___flmul+2)& (0+255),f,b
  9113  013A02  3386               	rrcf	(??___flmul+1)& (0+255),f,b
  9114  013A04  3385               	rrcf	??___flmul& (0+255),f,b
  9115  013A06                     u10180:
  9116  013A06  2EE8               	decfsz	wreg,f,c
  9117  013A08  D7F8               	goto	u10185
  9118  013A0A  0100               	movlb	0	; () banked
  9119  013A0C  5185               	movf	??___flmul& (0+255),w,b
  9120  013A0E  0100               	movlb	0	; () banked
  9121  013A10  2790               	addwf	___flmul@prod& (0+255),f,b
  9122  013A12  0100               	movlb	0	; () banked
  9123  013A14  5186               	movf	(??___flmul+1)& (0+255),w,b
  9124  013A16  0100               	movlb	0	; () banked
  9125  013A18  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9126  013A1A  0100               	movlb	0	; () banked
  9127  013A1C  5187               	movf	(??___flmul+2)& (0+255),w,b
  9128  013A1E  0100               	movlb	0	; () banked
  9129  013A20  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9130  013A22  0100               	movlb	0	; () banked
  9131  013A24  5188               	movf	(??___flmul+3)& (0+255),w,b
  9132  013A26  0100               	movlb	0	; () banked
  9133  013A28  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9134                           
  9135                           ; BSR set to: 0
  9136  013A2A  C08D  F08E         	movff	___flmul@grs+2,___flmul@grs+3
  9137  013A2E  C08C  F08D         	movff	___flmul@grs+1,___flmul@grs+2
  9138  013A32  C08B  F08C         	movff	___flmul@grs,___flmul@grs+1
  9139  013A36  0100               	movlb	0	; () banked
  9140  013A38  6B8B               	clrf	___flmul@grs& (0+255),b
  9141                           
  9142                           ; BSR set to: 0
  9143  013A3A  0100               	movlb	0	; () banked
  9144  013A3C  518A               	movf	___flmul@aexp& (0+255),w,b
  9145  013A3E  C08F  F085         	movff	___flmul@bexp,??___flmul
  9146  013A42  0100               	movlb	0	; () banked
  9147  013A44  6B86               	clrf	(??___flmul+1)& (0+255),b
  9148  013A46  0100               	movlb	0	; () banked
  9149  013A48  2785               	addwf	??___flmul& (0+255),f,b
  9150  013A4A  0E00               	movlw	0
  9151  013A4C  2386               	addwfc	(??___flmul+1)& (0+255),f,b
  9152  013A4E  0E82               	movlw	130
  9153  013A50  0100               	movlb	0	; () banked
  9154  013A52  2585               	addwf	??___flmul& (0+255),w,b
  9155  013A54  0100               	movlb	0	; () banked
  9156  013A56  6F94               	movwf	___flmul@temp& (0+255),b
  9157  013A58  0EFF               	movlw	255
  9158  013A5A  0100               	movlb	0	; () banked
  9159  013A5C  2186               	addwfc	(??___flmul+1)& (0+255),w,b
  9160  013A5E  0100               	movlb	0	; () banked
  9161  013A60  6F95               	movwf	(___flmul@temp+1)& (0+255),b
  9162  013A62  D015               	goto	l7756
  9163  013A64                     l7750:
  9164                           
  9165                           ; BSR set to: 0
  9166  013A64  0100               	movlb	0	; () banked
  9167  013A66  90D8               	bcf	status,0,c
  9168  013A68  3790               	rlcf	___flmul@prod& (0+255),f,b
  9169  013A6A  3791               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9170  013A6C  3792               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9171  013A6E  3793               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9172                           
  9173                           ; BSR set to: 0
  9174  013A70  0100               	movlb	0	; () banked
  9175  013A72  AF8E               	btfss	(___flmul@grs+3)& (0+255),7,b
  9176  013A74  D002               	goto	l1557
  9177                           
  9178                           ; BSR set to: 0
  9179  013A76  0100               	movlb	0	; () banked
  9180  013A78  8190               	bsf	___flmul@prod& (0+255),0,b
  9181  013A7A                     l1557:
  9182                           
  9183                           ; BSR set to: 0
  9184  013A7A  0100               	movlb	0	; () banked
  9185  013A7C  90D8               	bcf	status,0,c
  9186  013A7E  378B               	rlcf	___flmul@grs& (0+255),f,b
  9187  013A80  378C               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9188  013A82  378D               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9189  013A84  378E               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9190  013A86  0100               	movlb	0	; () banked
  9191  013A88  0794               	decf	___flmul@temp& (0+255),f,b
  9192  013A8A  A0D8               	btfss	status,0,c
  9193  013A8C  0795               	decf	(___flmul@temp+1)& (0+255),f,b
  9194  013A8E                     l7756:
  9195                           
  9196                           ; BSR set to: 0
  9197  013A8E  0100               	movlb	0	; () banked
  9198  013A90  AF92               	btfss	(___flmul@prod+2)& (0+255),7,b
  9199  013A92  D7E8               	goto	l7750
  9200                           
  9201                           ; BSR set to: 0
  9202                           
  9203                           ; BSR set to: 0
  9204  013A94  0E00               	movlw	0
  9205  013A96  0100               	movlb	0	; () banked
  9206  013A98  6F8A               	movwf	___flmul@aexp& (0+255),b
  9207                           
  9208                           ; BSR set to: 0
  9209  013A9A  0100               	movlb	0	; () banked
  9210  013A9C  AF8E               	btfss	(___flmul@grs+3)& (0+255),7,b
  9211  013A9E  D024               	goto	l1559
  9212                           
  9213                           ; BSR set to: 0
  9214  013AA0  0EFF               	movlw	255
  9215  013AA2  0100               	movlb	0	; () banked
  9216  013AA4  158B               	andwf	___flmul@grs& (0+255),w,b
  9217  013AA6  0100               	movlb	0	; () banked
  9218  013AA8  6F85               	movwf	??___flmul& (0+255),b
  9219  013AAA  0EFF               	movlw	255
  9220  013AAC  0100               	movlb	0	; () banked
  9221  013AAE  158C               	andwf	(___flmul@grs+1)& (0+255),w,b
  9222  013AB0  0100               	movlb	0	; () banked
  9223  013AB2  6F86               	movwf	(??___flmul+1)& (0+255),b
  9224  013AB4  0EFF               	movlw	255
  9225  013AB6  0100               	movlb	0	; () banked
  9226  013AB8  158D               	andwf	(___flmul@grs+2)& (0+255),w,b
  9227  013ABA  0100               	movlb	0	; () banked
  9228  013ABC  6F87               	movwf	(??___flmul+2)& (0+255),b
  9229  013ABE  0E7F               	movlw	127
  9230  013AC0  0100               	movlb	0	; () banked
  9231  013AC2  158E               	andwf	(___flmul@grs+3)& (0+255),w,b
  9232  013AC4  0100               	movlb	0	; () banked
  9233  013AC6  6F88               	movwf	(??___flmul+3)& (0+255),b
  9234  013AC8  0100               	movlb	0	; () banked
  9235  013ACA  5185               	movf	??___flmul& (0+255),w,b
  9236  013ACC  0100               	movlb	0	; () banked
  9237  013ACE  1186               	iorwf	(??___flmul+1)& (0+255),w,b
  9238  013AD0  0100               	movlb	0	; () banked
  9239  013AD2  1187               	iorwf	(??___flmul+2)& (0+255),w,b
  9240  013AD4  0100               	movlb	0	; () banked
  9241  013AD6  1188               	iorwf	(??___flmul+3)& (0+255),w,b
  9242  013AD8  A4D8               	btfss	status,2,c
  9243  013ADA  D003               	goto	l7766
  9244                           
  9245                           ; BSR set to: 0
  9246                           
  9247                           ; BSR set to: 0
  9248  013ADC  0100               	movlb	0	; () banked
  9249  013ADE  A190               	btfss	___flmul@prod& (0+255),0,b
  9250  013AE0  D003               	goto	l1559
  9251  013AE2                     l7766:
  9252                           
  9253                           ; BSR set to: 0
  9254  013AE2  0E01               	movlw	1
  9255  013AE4  0100               	movlb	0	; () banked
  9256  013AE6  6F8A               	movwf	___flmul@aexp& (0+255),b
  9257  013AE8                     l1559:
  9258                           
  9259                           ; BSR set to: 0
  9260  013AE8  0100               	movlb	0	; () banked
  9261  013AEA  518A               	movf	___flmul@aexp& (0+255),w,b
  9262  013AEC  0100               	movlb	0	; () banked
  9263  013AEE  B4D8               	btfsc	status,2,c
  9264  013AF0  D023               	goto	l7776
  9265                           
  9266                           ; BSR set to: 0
  9267  013AF2  0E01               	movlw	1
  9268  013AF4  0100               	movlb	0	; () banked
  9269  013AF6  2790               	addwf	___flmul@prod& (0+255),f,b
  9270  013AF8  0E00               	movlw	0
  9271  013AFA  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9272  013AFC  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9273  013AFE  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9274                           
  9275                           ; BSR set to: 0
  9276  013B00  0100               	movlb	0	; () banked
  9277  013B02  A193               	btfss	(___flmul@prod+3)& (0+255),0,b
  9278  013B04  D019               	goto	l7776
  9279                           
  9280                           ; BSR set to: 0
  9281  013B06  C090  F085         	movff	___flmul@prod,??___flmul
  9282  013B0A  C091  F086         	movff	___flmul@prod+1,??___flmul+1
  9283  013B0E  C092  F087         	movff	___flmul@prod+2,??___flmul+2
  9284  013B12  C093  F088         	movff	___flmul@prod+3,??___flmul+3
  9285  013B16  0100               	movlb	0	; () banked
  9286  013B18  3588               	rlcf	(??___flmul+3)& (0+255),w,b
  9287  013B1A  3388               	rrcf	(??___flmul+3)& (0+255),f,b
  9288  013B1C  3387               	rrcf	(??___flmul+2)& (0+255),f,b
  9289  013B1E  3386               	rrcf	(??___flmul+1)& (0+255),f,b
  9290  013B20  3385               	rrcf	??___flmul& (0+255),f,b
  9291  013B22  C085  F090         	movff	??___flmul,___flmul@prod
  9292  013B26  C086  F091         	movff	??___flmul+1,___flmul@prod+1
  9293  013B2A  C087  F092         	movff	??___flmul+2,___flmul@prod+2
  9294  013B2E  C088  F093         	movff	??___flmul+3,___flmul@prod+3
  9295                           
  9296                           ; BSR set to: 0
  9297  013B32  0100               	movlb	0	; () banked
  9298  013B34  4B94               	infsnz	___flmul@temp& (0+255),f,b
  9299  013B36  2B95               	incf	(___flmul@temp+1)& (0+255),f,b
  9300  013B38                     l7776:
  9301                           
  9302                           ; BSR set to: 0
  9303  013B38  0100               	movlb	0	; () banked
  9304  013B3A  BF95               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9305  013B3C  D010               	goto	l7780
  9306  013B3E  0100               	movlb	0	; () banked
  9307  013B40  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  9308  013B42  E104               	bnz	u10260
  9309  013B44  0100               	movlb	0	; () banked
  9310  013B46  2994               	incf	___flmul@temp& (0+255),w,b
  9311  013B48  A0D8               	btfss	status,0,c
  9312  013B4A  D009               	goto	l7780
  9313  013B4C                     u10260:
  9314                           
  9315                           ; BSR set to: 0
  9316  013B4C  0E00               	movlw	0
  9317  013B4E  0100               	movlb	0	; () banked
  9318  013B50  6F90               	movwf	___flmul@prod& (0+255),b
  9319  013B52  0E00               	movlw	0
  9320  013B54  6F91               	movwf	(___flmul@prod+1)& (0+255),b
  9321  013B56  0E80               	movlw	128
  9322  013B58  6F92               	movwf	(___flmul@prod+2)& (0+255),b
  9323  013B5A  0E7F               	movlw	127
  9324  013B5C  D02B               	goto	L8
  9325  013B5E                     l7780:
  9326                           
  9327                           ; BSR set to: 0
  9328  013B5E  0100               	movlb	0	; () banked
  9329  013B60  BF95               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9330  013B62  D007               	goto	l7782
  9331  013B64  0100               	movlb	0	; () banked
  9332  013B66  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  9333  013B68  E111               	bnz	l1567
  9334  013B6A  0100               	movlb	0	; () banked
  9335  013B6C  0594               	decf	___flmul@temp& (0+255),w,b
  9336  013B6E  B0D8               	btfsc	status,0,c
  9337  013B70  D00D               	goto	l1567
  9338  013B72                     l7782:
  9339                           
  9340                           ; BSR set to: 0
  9341  013B72  0E00               	movlw	0
  9342  013B74  0100               	movlb	0	; () banked
  9343  013B76  6F90               	movwf	___flmul@prod& (0+255),b
  9344  013B78  0E00               	movlw	0
  9345  013B7A  6F91               	movwf	(___flmul@prod+1)& (0+255),b
  9346  013B7C  0E00               	movlw	0
  9347  013B7E  6F92               	movwf	(___flmul@prod+2)& (0+255),b
  9348  013B80  0E00               	movlw	0
  9349  013B82  6F93               	movwf	(___flmul@prod+3)& (0+255),b
  9350  013B84  0E00               	movlw	0
  9351  013B86  0100               	movlb	0	; () banked
  9352  013B88  6F89               	movwf	___flmul@sign& (0+255),b
  9353  013B8A  D015               	goto	l7792
  9354  013B8C                     l1567:
  9355                           
  9356                           ; BSR set to: 0
  9357  013B8C  C094  F08F         	movff	___flmul@temp,___flmul@bexp
  9358                           
  9359                           ; BSR set to: 0
  9360  013B90  0EFF               	movlw	255
  9361  013B92  0100               	movlb	0	; () banked
  9362  013B94  1790               	andwf	___flmul@prod& (0+255),f,b
  9363  013B96  0EFF               	movlw	255
  9364  013B98  1791               	andwf	(___flmul@prod+1)& (0+255),f,b
  9365  013B9A  0E7F               	movlw	127
  9366  013B9C  1792               	andwf	(___flmul@prod+2)& (0+255),f,b
  9367  013B9E  0E00               	movlw	0
  9368  013BA0  1793               	andwf	(___flmul@prod+3)& (0+255),f,b
  9369                           
  9370                           ; BSR set to: 0
  9371  013BA2  0100               	movlb	0	; () banked
  9372  013BA4  A18F               	btfss	___flmul@bexp& (0+255),0,b
  9373  013BA6  D002               	goto	l7790
  9374                           
  9375                           ; BSR set to: 0
  9376  013BA8  0100               	movlb	0	; () banked
  9377  013BAA  8F92               	bsf	(___flmul@prod+2)& (0+255),7,b
  9378  013BAC                     l7790:
  9379                           
  9380                           ; BSR set to: 0
  9381  013BAC  0100               	movlb	0	; () banked
  9382  013BAE  90D8               	bcf	status,0,c
  9383  013BB0  318F               	rrcf	___flmul@bexp& (0+255),w,b
  9384  013BB2  0100               	movlb	0	; () banked
  9385  013BB4                     L8:
  9386  013BB4  6F93               	movwf	(___flmul@prod+3)& (0+255),b
  9387  013BB6                     l7792:
  9388                           
  9389                           ; BSR set to: 0
  9390  013BB6  0100               	movlb	0	; () banked
  9391  013BB8  5189               	movf	___flmul@sign& (0+255),w,b
  9392  013BBA  0100               	movlb	0	; () banked
  9393  013BBC  1393               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9394                           
  9395                           ; BSR set to: 0
  9396  013BBE  C090  F07D         	movff	___flmul@prod,?___flmul
  9397  013BC2  C091  F07E         	movff	___flmul@prod+1,?___flmul+1
  9398  013BC6  C092  F07F         	movff	___flmul@prod+2,?___flmul+2
  9399  013BCA  C093  F080         	movff	___flmul@prod+3,?___flmul+3
  9400  013BCE  0012               	return	
  9401  013BD0                     __end_of___flmul:
  9402                           	opt stack 0
  9403                           tblptru	equ	0xFF8
  9404                           tblptrh	equ	0xFF7
  9405                           tblptrl	equ	0xFF6
  9406                           tablat	equ	0xFF5
  9407                           prodh	equ	0xFF4
  9408                           prodl	equ	0xFF3
  9409                           intcon	equ	0xFF2
  9410                           postinc0	equ	0xFEE
  9411                           wreg	equ	0xFE8
  9412                           indf2	equ	0xFDF
  9413                           postinc2	equ	0xFDE
  9414                           fsr2h	equ	0xFDA
  9415                           fsr2l	equ	0xFD9
  9416                           status	equ	0xFD8
  9417                           
  9418 ;; *************** function ___awmod *****************
  9419 ;; Defined at:
  9420 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;  dividend        2   15[BANK0 ] int 
  9423 ;;  divisor         2   17[BANK0 ] int 
  9424 ;; Auto vars:     Size  Location     Type
  9425 ;;  sign            1   20[BANK0 ] unsigned char 
  9426 ;;  counter         1   19[BANK0 ] unsigned char 
  9427 ;; Return value:  Size  Location     Type
  9428 ;;                  2   15[BANK0 ] int 
  9429 ;; Registers used:
  9430 ;;		wreg, status,2, status,0
  9431 ;; Tracked objects:
  9432 ;;		On entry : 0/0
  9433 ;;		On exit  : 0/0
  9434 ;;		Unchanged: 0/0
  9435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9436 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9437 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9439 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9440 ;;Total ram usage:        6 bytes
  9441 ;; Hardware stack levels used:    1
  9442 ;; Hardware stack levels required when called:    3
  9443 ;; This function calls:
  9444 ;;		Nothing
  9445 ;; This function is called by:
  9446 ;;		_fround
  9447 ;;		_scale
  9448 ;; This function uses a non-reentrant model
  9449 ;;
  9450                           
  9451                           	psect	text13
  9452  0158B0                     __ptext13:
  9453                           	opt stack 0
  9454  0158B0                     ___awmod:
  9455                           	opt stack 24
  9456                           
  9457                           ; BSR set to: 0
  9458                           ;incstack = 0
  9459  0158B0  0E00               	movlw	0
  9460  0158B2  0100               	movlb	0	; () banked
  9461  0158B4  6F74               	movwf	___awmod@sign& (0+255),b
  9462                           
  9463                           ; BSR set to: 0
  9464  0158B6  0100               	movlb	0	; () banked
  9465  0158B8  AF70               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9466  0158BA  D008               	goto	l7850
  9467                           
  9468                           ; BSR set to: 0
  9469  0158BC  0100               	movlb	0	; () banked
  9470  0158BE  6D6F               	negf	___awmod@dividend& (0+255),b
  9471  0158C0  1F70               	comf	(___awmod@dividend+1)& (0+255),f,b
  9472  0158C2  B0D8               	btfsc	status,0,c
  9473  0158C4  2B70               	incf	(___awmod@dividend+1)& (0+255),f,b
  9474                           
  9475                           ; BSR set to: 0
  9476  0158C6  0E01               	movlw	1
  9477  0158C8  0100               	movlb	0	; () banked
  9478  0158CA  6F74               	movwf	___awmod@sign& (0+255),b
  9479  0158CC                     l7850:
  9480                           
  9481                           ; BSR set to: 0
  9482  0158CC  0100               	movlb	0	; () banked
  9483  0158CE  AF72               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9484  0158D0  D005               	goto	l7854
  9485                           
  9486                           ; BSR set to: 0
  9487  0158D2  0100               	movlb	0	; () banked
  9488  0158D4  6D71               	negf	___awmod@divisor& (0+255),b
  9489  0158D6  1F72               	comf	(___awmod@divisor+1)& (0+255),f,b
  9490  0158D8  B0D8               	btfsc	status,0,c
  9491  0158DA  2B72               	incf	(___awmod@divisor+1)& (0+255),f,b
  9492  0158DC                     l7854:
  9493                           
  9494                           ; BSR set to: 0
  9495  0158DC  0100               	movlb	0	; () banked
  9496  0158DE  5171               	movf	___awmod@divisor& (0+255),w,b
  9497  0158E0  0100               	movlb	0	; () banked
  9498  0158E2  1172               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9499  0158E4  B4D8               	btfsc	status,2,c
  9500  0158E6  D026               	goto	l7870
  9501                           
  9502                           ; BSR set to: 0
  9503  0158E8  0E01               	movlw	1
  9504  0158EA  0100               	movlb	0	; () banked
  9505  0158EC  6F73               	movwf	___awmod@counter& (0+255),b
  9506  0158EE  D006               	goto	l7860
  9507  0158F0                     l7858:
  9508                           
  9509                           ; BSR set to: 0
  9510  0158F0  0100               	movlb	0	; () banked
  9511  0158F2  90D8               	bcf	status,0,c
  9512  0158F4  3771               	rlcf	___awmod@divisor& (0+255),f,b
  9513  0158F6  3772               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9514  0158F8  0100               	movlb	0	; () banked
  9515  0158FA  2B73               	incf	___awmod@counter& (0+255),f,b
  9516  0158FC                     l7860:
  9517                           
  9518                           ; BSR set to: 0
  9519  0158FC  0100               	movlb	0	; () banked
  9520  0158FE  AF72               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9521  015900  D7F7               	goto	l7858
  9522  015902                     l7862:
  9523                           
  9524                           ; BSR set to: 0
  9525  015902  0100               	movlb	0	; () banked
  9526  015904  5171               	movf	___awmod@divisor& (0+255),w,b
  9527  015906  0100               	movlb	0	; () banked
  9528  015908  5D6F               	subwf	___awmod@dividend& (0+255),w,b
  9529  01590A  0100               	movlb	0	; () banked
  9530  01590C  5172               	movf	(___awmod@divisor+1)& (0+255),w,b
  9531  01590E  0100               	movlb	0	; () banked
  9532  015910  5970               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9533  015912  A0D8               	btfss	status,0,c
  9534  015914  D008               	goto	l7866
  9535                           
  9536                           ; BSR set to: 0
  9537  015916  0100               	movlb	0	; () banked
  9538  015918  5171               	movf	___awmod@divisor& (0+255),w,b
  9539  01591A  0100               	movlb	0	; () banked
  9540  01591C  5F6F               	subwf	___awmod@dividend& (0+255),f,b
  9541  01591E  0100               	movlb	0	; () banked
  9542  015920  5172               	movf	(___awmod@divisor+1)& (0+255),w,b
  9543  015922  0100               	movlb	0	; () banked
  9544  015924  5B70               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9545  015926                     l7866:
  9546                           
  9547                           ; BSR set to: 0
  9548  015926  0100               	movlb	0	; () banked
  9549  015928  90D8               	bcf	status,0,c
  9550  01592A  3372               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9551  01592C  3371               	rrcf	___awmod@divisor& (0+255),f,b
  9552                           
  9553                           ; BSR set to: 0
  9554  01592E  0100               	movlb	0	; () banked
  9555  015930  2F73               	decfsz	___awmod@counter& (0+255),f,b
  9556  015932  D7E7               	goto	l7862
  9557  015934                     l7870:
  9558                           
  9559                           ; BSR set to: 0
  9560  015934  0100               	movlb	0	; () banked
  9561  015936  5174               	movf	___awmod@sign& (0+255),w,b
  9562  015938  0100               	movlb	0	; () banked
  9563  01593A  B4D8               	btfsc	status,2,c
  9564  01593C  D005               	goto	l7874
  9565                           
  9566                           ; BSR set to: 0
  9567  01593E  0100               	movlb	0	; () banked
  9568  015940  6D6F               	negf	___awmod@dividend& (0+255),b
  9569  015942  1F70               	comf	(___awmod@dividend+1)& (0+255),f,b
  9570  015944  B0D8               	btfsc	status,0,c
  9571  015946  2B70               	incf	(___awmod@dividend+1)& (0+255),f,b
  9572  015948                     l7874:
  9573                           
  9574                           ; BSR set to: 0
  9575  015948  C06F  F06F         	movff	___awmod@dividend,?___awmod
  9576  01594C  C070  F070         	movff	___awmod@dividend+1,?___awmod+1
  9577  015950  0012               	return	
  9578  015952                     __end_of___awmod:
  9579                           	opt stack 0
  9580                           tblptru	equ	0xFF8
  9581                           tblptrh	equ	0xFF7
  9582                           tblptrl	equ	0xFF6
  9583                           tablat	equ	0xFF5
  9584                           prodh	equ	0xFF4
  9585                           prodl	equ	0xFF3
  9586                           intcon	equ	0xFF2
  9587                           postinc0	equ	0xFEE
  9588                           wreg	equ	0xFE8
  9589                           indf2	equ	0xFDF
  9590                           postinc2	equ	0xFDE
  9591                           fsr2h	equ	0xFDA
  9592                           fsr2l	equ	0xFD9
  9593                           status	equ	0xFD8
  9594                           
  9595 ;; *************** function ___awdiv *****************
  9596 ;; Defined at:
  9597 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;  dividend        2   21[BANK0 ] int 
  9600 ;;  divisor         2   23[BANK0 ] int 
  9601 ;; Auto vars:     Size  Location     Type
  9602 ;;  quotient        2   27[BANK0 ] int 
  9603 ;;  sign            1   26[BANK0 ] unsigned char 
  9604 ;;  counter         1   25[BANK0 ] unsigned char 
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  2   21[BANK0 ] int 
  9607 ;; Registers used:
  9608 ;;		wreg, status,2, status,0
  9609 ;; Tracked objects:
  9610 ;;		On entry : 0/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9614 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9615 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9617 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9618 ;;Total ram usage:        8 bytes
  9619 ;; Hardware stack levels used:    1
  9620 ;; Hardware stack levels required when called:    3
  9621 ;; This function calls:
  9622 ;;		Nothing
  9623 ;; This function is called by:
  9624 ;;		_fround
  9625 ;;		_scale
  9626 ;;		_sprintf
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           	psect	text14
  9631  0155D2                     __ptext14:
  9632                           	opt stack 0
  9633  0155D2                     ___awdiv:
  9634                           	opt stack 24
  9635                           
  9636                           ; BSR set to: 0
  9637                           ;incstack = 0
  9638  0155D2  0E00               	movlw	0
  9639  0155D4  0100               	movlb	0	; () banked
  9640  0155D6  6F7A               	movwf	___awdiv@sign& (0+255),b
  9641                           
  9642                           ; BSR set to: 0
  9643  0155D8  0100               	movlb	0	; () banked
  9644  0155DA  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9645  0155DC  D008               	goto	l7806
  9646                           
  9647                           ; BSR set to: 0
  9648  0155DE  0100               	movlb	0	; () banked
  9649  0155E0  6D77               	negf	___awdiv@divisor& (0+255),b
  9650  0155E2  1F78               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9651  0155E4  B0D8               	btfsc	status,0,c
  9652  0155E6  2B78               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9653                           
  9654                           ; BSR set to: 0
  9655  0155E8  0E01               	movlw	1
  9656  0155EA  0100               	movlb	0	; () banked
  9657  0155EC  6F7A               	movwf	___awdiv@sign& (0+255),b
  9658  0155EE                     l7806:
  9659                           
  9660                           ; BSR set to: 0
  9661  0155EE  0100               	movlb	0	; () banked
  9662  0155F0  AF76               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9663  0155F2  D008               	goto	l7812
  9664                           
  9665                           ; BSR set to: 0
  9666  0155F4  0100               	movlb	0	; () banked
  9667  0155F6  6D75               	negf	___awdiv@dividend& (0+255),b
  9668  0155F8  1F76               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9669  0155FA  B0D8               	btfsc	status,0,c
  9670  0155FC  2B76               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9671                           
  9672                           ; BSR set to: 0
  9673  0155FE  0E01               	movlw	1
  9674  015600  0100               	movlb	0	; () banked
  9675  015602  1B7A               	xorwf	___awdiv@sign& (0+255),f,b
  9676  015604                     l7812:
  9677                           
  9678                           ; BSR set to: 0
  9679  015604  0E00               	movlw	0
  9680  015606  0100               	movlb	0	; () banked
  9681  015608  6F7C               	movwf	(___awdiv@quotient+1)& (0+255),b
  9682  01560A  0E00               	movlw	0
  9683  01560C  6F7B               	movwf	___awdiv@quotient& (0+255),b
  9684                           
  9685                           ; BSR set to: 0
  9686  01560E  0100               	movlb	0	; () banked
  9687  015610  5177               	movf	___awdiv@divisor& (0+255),w,b
  9688  015612  0100               	movlb	0	; () banked
  9689  015614  1178               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9690  015616  B4D8               	btfsc	status,2,c
  9691  015618  D02C               	goto	l7834
  9692                           
  9693                           ; BSR set to: 0
  9694  01561A  0E01               	movlw	1
  9695  01561C  0100               	movlb	0	; () banked
  9696  01561E  6F79               	movwf	___awdiv@counter& (0+255),b
  9697  015620  D006               	goto	l7820
  9698  015622                     l7818:
  9699                           
  9700                           ; BSR set to: 0
  9701  015622  0100               	movlb	0	; () banked
  9702  015624  90D8               	bcf	status,0,c
  9703  015626  3777               	rlcf	___awdiv@divisor& (0+255),f,b
  9704  015628  3778               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9705  01562A  0100               	movlb	0	; () banked
  9706  01562C  2B79               	incf	___awdiv@counter& (0+255),f,b
  9707  01562E                     l7820:
  9708                           
  9709                           ; BSR set to: 0
  9710  01562E  0100               	movlb	0	; () banked
  9711  015630  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9712  015632  D7F7               	goto	l7818
  9713  015634                     l7822:
  9714                           
  9715                           ; BSR set to: 0
  9716  015634  0100               	movlb	0	; () banked
  9717  015636  90D8               	bcf	status,0,c
  9718  015638  377B               	rlcf	___awdiv@quotient& (0+255),f,b
  9719  01563A  377C               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9720                           
  9721                           ; BSR set to: 0
  9722  01563C  0100               	movlb	0	; () banked
  9723  01563E  5177               	movf	___awdiv@divisor& (0+255),w,b
  9724  015640  0100               	movlb	0	; () banked
  9725  015642  5D75               	subwf	___awdiv@dividend& (0+255),w,b
  9726  015644  0100               	movlb	0	; () banked
  9727  015646  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9728  015648  0100               	movlb	0	; () banked
  9729  01564A  5976               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9730  01564C  A0D8               	btfss	status,0,c
  9731  01564E  D00A               	goto	l7830
  9732                           
  9733                           ; BSR set to: 0
  9734  015650  0100               	movlb	0	; () banked
  9735  015652  5177               	movf	___awdiv@divisor& (0+255),w,b
  9736  015654  0100               	movlb	0	; () banked
  9737  015656  5F75               	subwf	___awdiv@dividend& (0+255),f,b
  9738  015658  0100               	movlb	0	; () banked
  9739  01565A  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9740  01565C  0100               	movlb	0	; () banked
  9741  01565E  5B76               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9742                           
  9743                           ; BSR set to: 0
  9744  015660  0100               	movlb	0	; () banked
  9745  015662  817B               	bsf	___awdiv@quotient& (0+255),0,b
  9746  015664                     l7830:
  9747                           
  9748                           ; BSR set to: 0
  9749  015664  0100               	movlb	0	; () banked
  9750  015666  90D8               	bcf	status,0,c
  9751  015668  3378               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9752  01566A  3377               	rrcf	___awdiv@divisor& (0+255),f,b
  9753                           
  9754                           ; BSR set to: 0
  9755  01566C  0100               	movlb	0	; () banked
  9756  01566E  2F79               	decfsz	___awdiv@counter& (0+255),f,b
  9757  015670  D7E1               	goto	l7822
  9758  015672                     l7834:
  9759                           
  9760                           ; BSR set to: 0
  9761  015672  0100               	movlb	0	; () banked
  9762  015674  517A               	movf	___awdiv@sign& (0+255),w,b
  9763  015676  0100               	movlb	0	; () banked
  9764  015678  B4D8               	btfsc	status,2,c
  9765  01567A  D005               	goto	l7838
  9766                           
  9767                           ; BSR set to: 0
  9768  01567C  0100               	movlb	0	; () banked
  9769  01567E  6D7B               	negf	___awdiv@quotient& (0+255),b
  9770  015680  1F7C               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9771  015682  B0D8               	btfsc	status,0,c
  9772  015684  2B7C               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9773  015686                     l7838:
  9774                           
  9775                           ; BSR set to: 0
  9776  015686  C07B  F075         	movff	___awdiv@quotient,?___awdiv
  9777  01568A  C07C  F076         	movff	___awdiv@quotient+1,?___awdiv+1
  9778  01568E  0012               	return	
  9779  015690                     __end_of___awdiv:
  9780                           	opt stack 0
  9781                           tblptru	equ	0xFF8
  9782                           tblptrh	equ	0xFF7
  9783                           tblptrl	equ	0xFF6
  9784                           tablat	equ	0xFF5
  9785                           prodh	equ	0xFF4
  9786                           prodl	equ	0xFF3
  9787                           intcon	equ	0xFF2
  9788                           postinc0	equ	0xFEE
  9789                           wreg	equ	0xFE8
  9790                           indf2	equ	0xFDF
  9791                           postinc2	equ	0xFDE
  9792                           fsr2h	equ	0xFDA
  9793                           fsr2l	equ	0xFD9
  9794                           status	equ	0xFD8
  9795                           
  9796 ;; *************** function __tdiv_to_l_ *****************
  9797 ;; Defined at:
  9798 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  f1              4   15[BANK0 ] float 
  9801 ;;  f2              4   19[BANK0 ] float 
  9802 ;; Auto vars:     Size  Location     Type
  9803 ;;  quot            4   26[BANK0 ] unsigned long 
  9804 ;;  exp1            1   31[BANK0 ] unsigned char 
  9805 ;;  cntr            1   30[BANK0 ] unsigned char 
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  4   15[BANK0 ] unsigned long 
  9808 ;; Registers used:
  9809 ;;		wreg, status,2, status,0
  9810 ;; Tracked objects:
  9811 ;;		On entry : 0/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9815 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9816 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9817 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9818 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9819 ;;Total ram usage:       17 bytes
  9820 ;; Hardware stack levels used:    1
  9821 ;; Hardware stack levels required when called:    3
  9822 ;; This function calls:
  9823 ;;		Nothing
  9824 ;; This function is called by:
  9825 ;;		_sprintf
  9826 ;; This function uses a non-reentrant model
  9827 ;;
  9828                           
  9829                           	psect	text15
  9830  014B98                     __ptext15:
  9831                           	opt stack 0
  9832  014B98                     __tdiv_to_l_:
  9833                           	opt stack 25
  9834                           
  9835                           ; BSR set to: 0
  9836                           ;incstack = 0
  9837  014B98  C071  F077         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9838  014B9C  0100               	movlb	0	; () banked
  9839  014B9E  6B78               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9840  014BA0  6B79               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9841  014BA2  0100               	movlb	0	; () banked
  9842  014BA4  3570               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9843  014BA6  0100               	movlb	0	; () banked
  9844  014BA8  3777               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9845  014BAA  E301               	bnc	u10511
  9846  014BAC  8178               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9847  014BAE                     u10511:
  9848  014BAE  0100               	movlb	0	; () banked
  9849  014BB0  5177               	movf	??__tdiv_to_l_& (0+255),w,b
  9850  014BB2  0100               	movlb	0	; () banked
  9851  014BB4  6F7F               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9852  014BB6  0100               	movlb	0	; () banked
  9853  014BB8  517F               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9854  014BBA  A4D8               	btfss	status,2,c
  9855  014BBC  D00A               	goto	l7998
  9856                           
  9857                           ; BSR set to: 0
  9858  014BBE  0E00               	movlw	0
  9859  014BC0  0100               	movlb	0	; () banked
  9860  014BC2  6F6F               	movwf	?__tdiv_to_l_& (0+255),b
  9861  014BC4  0E00               	movlw	0
  9862  014BC6  6F70               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9863  014BC8  0E00               	movlw	0
  9864  014BCA  6F71               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9865  014BCC  0E00               	movlw	0
  9866  014BCE  6F72               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9867                           
  9868                           ; BSR set to: 0
  9869  014BD0  0012               	return	
  9870  014BD2                     l7998:
  9871                           
  9872                           ; BSR set to: 0
  9873  014BD2  C075  F077         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9874  014BD6  0100               	movlb	0	; () banked
  9875  014BD8  6B78               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9876  014BDA  6B79               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9877  014BDC  0100               	movlb	0	; () banked
  9878  014BDE  3574               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9879  014BE0  0100               	movlb	0	; () banked
  9880  014BE2  3777               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9881  014BE4  E301               	bnc	u10531
  9882  014BE6  8178               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9883  014BE8                     u10531:
  9884  014BE8  0100               	movlb	0	; () banked
  9885  014BEA  5177               	movf	??__tdiv_to_l_& (0+255),w,b
  9886  014BEC  0100               	movlb	0	; () banked
  9887  014BEE  6F7E               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9888  014BF0  0100               	movlb	0	; () banked
  9889  014BF2  517E               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9890  014BF4  A4D8               	btfss	status,2,c
  9891  014BF6  D00A               	goto	l8004
  9892                           
  9893                           ; BSR set to: 0
  9894  014BF8  0E00               	movlw	0
  9895  014BFA  0100               	movlb	0	; () banked
  9896  014BFC  6F6F               	movwf	?__tdiv_to_l_& (0+255),b
  9897  014BFE  0E00               	movlw	0
  9898  014C00  6F70               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9899  014C02  0E00               	movlw	0
  9900  014C04  6F71               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9901  014C06  0E00               	movlw	0
  9902  014C08  6F72               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9903                           
  9904                           ; BSR set to: 0
  9905  014C0A  0012               	return	
  9906  014C0C                     l8004:
  9907                           
  9908                           ; BSR set to: 0
  9909  014C0C  0100               	movlb	0	; () banked
  9910  014C0E  8F70               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9911                           
  9912                           ; BSR set to: 0
  9913  014C10  0EFF               	movlw	255
  9914  014C12  0100               	movlb	0	; () banked
  9915  014C14  176F               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9916  014C16  0EFF               	movlw	255
  9917  014C18  0100               	movlb	0	; () banked
  9918  014C1A  1770               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9919  014C1C  0E00               	movlw	0
  9920  014C1E  0100               	movlb	0	; () banked
  9921  014C20  1771               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9922  014C22  0100               	movlb	0	; () banked
  9923  014C24  8F74               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9924                           
  9925                           ; BSR set to: 0
  9926  014C26  0EFF               	movlw	255
  9927  014C28  0100               	movlb	0	; () banked
  9928  014C2A  1773               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9929  014C2C  0EFF               	movlw	255
  9930  014C2E  0100               	movlb	0	; () banked
  9931  014C30  1774               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9932  014C32  0E00               	movlw	0
  9933  014C34  0100               	movlb	0	; () banked
  9934  014C36  1775               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9935                           
  9936                           ; BSR set to: 0
  9937  014C38  0E00               	movlw	0
  9938  014C3A  0100               	movlb	0	; () banked
  9939  014C3C  6F7A               	movwf	__tdiv_to_l_@quot& (0+255),b
  9940  014C3E  0E00               	movlw	0
  9941  014C40  6F7B               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9942  014C42  0E00               	movlw	0
  9943  014C44  6F7C               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9944  014C46  0E00               	movlw	0
  9945  014C48  6F7D               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  9946                           
  9947                           ; BSR set to: 0
  9948  014C4A  0E7F               	movlw	127
  9949  014C4C  0100               	movlb	0	; () banked
  9950  014C4E  5F7F               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9951                           
  9952                           ; BSR set to: 0
  9953  014C50  0100               	movlb	0	; () banked
  9954  014C52  517E               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9955  014C54  0F98               	addlw	152
  9956  014C56  0100               	movlb	0	; () banked
  9957  014C58  5F7F               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9958                           
  9959                           ; BSR set to: 0
  9960  014C5A  0E18               	movlw	24
  9961  014C5C  0100               	movlb	0	; () banked
  9962  014C5E  6F7E               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9963  014C60                     l1274:
  9964                           
  9965                           ; BSR set to: 0
  9966  014C60  0100               	movlb	0	; () banked
  9967  014C62  90D8               	bcf	status,0,c
  9968  014C64  377A               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9969  014C66  377B               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9970  014C68  377C               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9971  014C6A  377D               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9972                           
  9973                           ; BSR set to: 0
  9974  014C6C  0100               	movlb	0	; () banked
  9975  014C6E  5173               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9976  014C70  0100               	movlb	0	; () banked
  9977  014C72  5D6F               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  9978  014C74  0100               	movlb	0	; () banked
  9979  014C76  5174               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9980  014C78  0100               	movlb	0	; () banked
  9981  014C7A  5970               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9982  014C7C  0100               	movlb	0	; () banked
  9983  014C7E  5175               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9984  014C80  0100               	movlb	0	; () banked
  9985  014C82  5971               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  9986  014C84  A0D8               	btfss	status,0,c
  9987  014C86  D00E               	goto	l1275
  9988                           
  9989                           ; BSR set to: 0
  9990  014C88  0100               	movlb	0	; () banked
  9991  014C8A  5173               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9992  014C8C  0100               	movlb	0	; () banked
  9993  014C8E  5F6F               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  9994  014C90  0100               	movlb	0	; () banked
  9995  014C92  5174               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9996  014C94  0100               	movlb	0	; () banked
  9997  014C96  5B70               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9998  014C98  0100               	movlb	0	; () banked
  9999  014C9A  5175               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10000  014C9C  0100               	movlb	0	; () banked
 10001  014C9E  5B71               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10002                           
 10003                           ; BSR set to: 0
 10004  014CA0  0100               	movlb	0	; () banked
 10005  014CA2  817A               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10006  014CA4                     l1275:
 10007                           
 10008                           ; BSR set to: 0
 10009  014CA4  0100               	movlb	0	; () banked
 10010  014CA6  90D8               	bcf	status,0,c
 10011  014CA8  376F               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10012  014CAA  3770               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10013  014CAC  3771               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10014                           
 10015                           ; BSR set to: 0
 10016  014CAE  0100               	movlb	0	; () banked
 10017  014CB0  2F7E               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10018  014CB2  D7D6               	goto	l1274
 10019                           
 10020                           ; BSR set to: 0
 10021                           
 10022                           ; BSR set to: 0
 10023  014CB4  0100               	movlb	0	; () banked
 10024  014CB6  AF7F               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10025  014CB8  D01A               	goto	l8038
 10026                           
 10027                           ; BSR set to: 0
 10028  014CBA  0100               	movlb	0	; () banked
 10029  014CBC  517F               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10030  014CBE  0A80               	xorlw	128
 10031  014CC0  0F97               	addlw	151
 10032  014CC2  B0D8               	btfsc	status,0,c
 10033  014CC4  D00A               	goto	l8034
 10034                           
 10035                           ; BSR set to: 0
 10036  014CC6  0E00               	movlw	0
 10037  014CC8  0100               	movlb	0	; () banked
 10038  014CCA  6F6F               	movwf	?__tdiv_to_l_& (0+255),b
 10039  014CCC  0E00               	movlw	0
 10040  014CCE  6F70               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10041  014CD0  0E00               	movlw	0
 10042  014CD2  6F71               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10043  014CD4  0E00               	movlw	0
 10044  014CD6  6F72               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10045                           
 10046                           ; BSR set to: 0
 10047  014CD8  0012               	return	
 10048  014CDA                     l8034:
 10049                           
 10050                           ; BSR set to: 0
 10051  014CDA  0100               	movlb	0	; () banked
 10052  014CDC  90D8               	bcf	status,0,c
 10053  014CDE  337D               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10054  014CE0  337C               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10055  014CE2  337B               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10056  014CE4  337A               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10057                           
 10058                           ; BSR set to: 0
 10059  014CE6  0100               	movlb	0	; () banked
 10060  014CE8  3F7F               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10061  014CEA  D7F7               	goto	l8034
 10062                           
 10063                           ; BSR set to: 0
 10064  014CEC  D01B               	goto	l1281
 10065  014CEE                     l8038:
 10066                           
 10067                           ; BSR set to: 0
 10068  014CEE  0E17               	movlw	23
 10069  014CF0  0100               	movlb	0	; () banked
 10070  014CF2  657F               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10071  014CF4  D012               	goto	l8046
 10072                           
 10073                           ; BSR set to: 0
 10074  014CF6  0E00               	movlw	0
 10075  014CF8  0100               	movlb	0	; () banked
 10076  014CFA  6F6F               	movwf	?__tdiv_to_l_& (0+255),b
 10077  014CFC  0E00               	movlw	0
 10078  014CFE  6F70               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10079  014D00  0E00               	movlw	0
 10080  014D02  6F71               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10081  014D04  0E00               	movlw	0
 10082  014D06  6F72               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10083                           
 10084                           ; BSR set to: 0
 10085  014D08  0012               	return	
 10086  014D0A                     l8044:
 10087                           
 10088                           ; BSR set to: 0
 10089  014D0A  0100               	movlb	0	; () banked
 10090  014D0C  90D8               	bcf	status,0,c
 10091  014D0E  377A               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10092  014D10  377B               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10093  014D12  377C               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10094  014D14  377D               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10095  014D16  0100               	movlb	0	; () banked
 10096  014D18  077F               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10097  014D1A                     l8046:
 10098                           
 10099                           ; BSR set to: 0
 10100  014D1A  0100               	movlb	0	; () banked
 10101  014D1C  517F               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10102  014D1E  0100               	movlb	0	; () banked
 10103  014D20  A4D8               	btfss	status,2,c
 10104  014D22  D7F3               	goto	l8044
 10105  014D24                     l1281:
 10106                           
 10107                           ; BSR set to: 0
 10108  014D24  C07A  F06F         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10109  014D28  C07B  F070         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10110  014D2C  C07C  F071         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10111  014D30  C07D  F072         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10112                           
 10113                           ; BSR set to: 0
 10114  014D34  0012               	return		;funcret
 10115  014D36                     __end_of__tdiv_to_l_:
 10116                           	opt stack 0
 10117                           tblptru	equ	0xFF8
 10118                           tblptrh	equ	0xFF7
 10119                           tblptrl	equ	0xFF6
 10120                           tablat	equ	0xFF5
 10121                           prodh	equ	0xFF4
 10122                           prodl	equ	0xFF3
 10123                           intcon	equ	0xFF2
 10124                           postinc0	equ	0xFEE
 10125                           wreg	equ	0xFE8
 10126                           indf2	equ	0xFDF
 10127                           postinc2	equ	0xFDE
 10128                           fsr2h	equ	0xFDA
 10129                           fsr2l	equ	0xFD9
 10130                           status	equ	0xFD8
 10131                           
 10132 ;; *************** function __div_to_l_ *****************
 10133 ;; Defined at:
 10134 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
 10135 ;; Parameters:    Size  Location     Type
 10136 ;;  f1              4   15[BANK0 ] unsigned long 
 10137 ;;  f2              4   19[BANK0 ] unsigned long 
 10138 ;; Auto vars:     Size  Location     Type
 10139 ;;  quot            4   23[BANK0 ] unsigned long 
 10140 ;;  exp1            1   28[BANK0 ] unsigned char 
 10141 ;;  cntr            1   27[BANK0 ] unsigned char 
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  4   15[BANK0 ] unsigned long 
 10144 ;; Registers used:
 10145 ;;		wreg, status,2, status,0
 10146 ;; Tracked objects:
 10147 ;;		On entry : 0/0
 10148 ;;		On exit  : 0/0
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10151 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10152 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10154 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10155 ;;Total ram usage:       14 bytes
 10156 ;; Hardware stack levels used:    1
 10157 ;; Hardware stack levels required when called:    3
 10158 ;; This function calls:
 10159 ;;		Nothing
 10160 ;; This function is called by:
 10161 ;;		_sprintf
 10162 ;; This function uses a non-reentrant model
 10163 ;;
 10164                           
 10165                           	psect	text16
 10166  014EC6                     __ptext16:
 10167                           	opt stack 0
 10168  014EC6                     __div_to_l_:
 10169                           	opt stack 25
 10170                           
 10171                           ; BSR set to: 0
 10172                           ;incstack = 0
 10173  014EC6  0100               	movlb	0	; () banked
 10174  014EC8  3571               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10175  014ECA  3572               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10176  014ECC  0100               	movlb	0	; () banked
 10177  014ECE  6F7C               	movwf	__div_to_l_@exp1& (0+255),b
 10178  014ED0  0100               	movlb	0	; () banked
 10179  014ED2  517C               	movf	__div_to_l_@exp1& (0+255),w,b
 10180  014ED4  A4D8               	btfss	status,2,c
 10181  014ED6  D00A               	goto	l8054
 10182                           
 10183                           ; BSR set to: 0
 10184  014ED8  0E00               	movlw	0
 10185  014EDA  0100               	movlb	0	; () banked
 10186  014EDC  6F6F               	movwf	?__div_to_l_& (0+255),b
 10187  014EDE  0E00               	movlw	0
 10188  014EE0  6F70               	movwf	(?__div_to_l_+1)& (0+255),b
 10189  014EE2  0E00               	movlw	0
 10190  014EE4  6F71               	movwf	(?__div_to_l_+2)& (0+255),b
 10191  014EE6  0E00               	movlw	0
 10192  014EE8  6F72               	movwf	(?__div_to_l_+3)& (0+255),b
 10193                           
 10194                           ; BSR set to: 0
 10195  014EEA  0012               	return	
 10196  014EEC                     l8054:
 10197                           
 10198                           ; BSR set to: 0
 10199  014EEC  0100               	movlb	0	; () banked
 10200  014EEE  3575               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10201  014EF0  3576               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10202  014EF2  0100               	movlb	0	; () banked
 10203  014EF4  6F7B               	movwf	__div_to_l_@cntr& (0+255),b
 10204  014EF6  0100               	movlb	0	; () banked
 10205  014EF8  517B               	movf	__div_to_l_@cntr& (0+255),w,b
 10206  014EFA  A4D8               	btfss	status,2,c
 10207  014EFC  D00A               	goto	l8060
 10208                           
 10209                           ; BSR set to: 0
 10210  014EFE  0E00               	movlw	0
 10211  014F00  0100               	movlb	0	; () banked
 10212  014F02  6F6F               	movwf	?__div_to_l_& (0+255),b
 10213  014F04  0E00               	movlw	0
 10214  014F06  6F70               	movwf	(?__div_to_l_+1)& (0+255),b
 10215  014F08  0E00               	movlw	0
 10216  014F0A  6F71               	movwf	(?__div_to_l_+2)& (0+255),b
 10217  014F0C  0E00               	movlw	0
 10218  014F0E  6F72               	movwf	(?__div_to_l_+3)& (0+255),b
 10219                           
 10220                           ; BSR set to: 0
 10221  014F10  0012               	return	
 10222  014F12                     l8060:
 10223                           
 10224                           ; BSR set to: 0
 10225  014F12  0100               	movlb	0	; () banked
 10226  014F14  8F71               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10227                           
 10228                           ; BSR set to: 0
 10229  014F16  0EFF               	movlw	255
 10230  014F18  0100               	movlb	0	; () banked
 10231  014F1A  176F               	andwf	__div_to_l_@f1& (0+255),f,b
 10232  014F1C  0EFF               	movlw	255
 10233  014F1E  1770               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10234  014F20  0EFF               	movlw	255
 10235  014F22  1771               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10236  014F24  0E00               	movlw	0
 10237  014F26  1772               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10238                           
 10239                           ; BSR set to: 0
 10240  014F28  0100               	movlb	0	; () banked
 10241  014F2A  8F75               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10242  014F2C  0EFF               	movlw	255
 10243  014F2E  0100               	movlb	0	; () banked
 10244  014F30  1773               	andwf	__div_to_l_@f2& (0+255),f,b
 10245  014F32  0EFF               	movlw	255
 10246  014F34  1774               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10247  014F36  0EFF               	movlw	255
 10248  014F38  1775               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10249  014F3A  0E00               	movlw	0
 10250  014F3C  1776               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10251                           
 10252                           ; BSR set to: 0
 10253  014F3E  0E00               	movlw	0
 10254  014F40  0100               	movlb	0	; () banked
 10255  014F42  6F77               	movwf	__div_to_l_@quot& (0+255),b
 10256  014F44  0E00               	movlw	0
 10257  014F46  6F78               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10258  014F48  0E00               	movlw	0
 10259  014F4A  6F79               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10260  014F4C  0E00               	movlw	0
 10261  014F4E  6F7A               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10262                           
 10263                           ; BSR set to: 0
 10264  014F50  0E7F               	movlw	127
 10265  014F52  0100               	movlb	0	; () banked
 10266  014F54  5F7C               	subwf	__div_to_l_@exp1& (0+255),f,b
 10267                           
 10268                           ; BSR set to: 0
 10269  014F56  0100               	movlb	0	; () banked
 10270  014F58  517B               	movf	__div_to_l_@cntr& (0+255),w,b
 10271  014F5A  0FA0               	addlw	160
 10272  014F5C  0100               	movlb	0	; () banked
 10273  014F5E  5F7C               	subwf	__div_to_l_@exp1& (0+255),f,b
 10274                           
 10275                           ; BSR set to: 0
 10276  014F60  0E20               	movlw	32
 10277  014F62  0100               	movlb	0	; () banked
 10278  014F64  6F7B               	movwf	__div_to_l_@cntr& (0+255),b
 10279  014F66                     l8074:
 10280                           
 10281                           ; BSR set to: 0
 10282  014F66  0100               	movlb	0	; () banked
 10283  014F68  90D8               	bcf	status,0,c
 10284  014F6A  3777               	rlcf	__div_to_l_@quot& (0+255),f,b
 10285  014F6C  3778               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10286  014F6E  3779               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10287  014F70  377A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10288                           
 10289                           ; BSR set to: 0
 10290  014F72  0100               	movlb	0	; () banked
 10291  014F74  5173               	movf	__div_to_l_@f2& (0+255),w,b
 10292  014F76  0100               	movlb	0	; () banked
 10293  014F78  5D6F               	subwf	__div_to_l_@f1& (0+255),w,b
 10294  014F7A  0100               	movlb	0	; () banked
 10295  014F7C  5174               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10296  014F7E  0100               	movlb	0	; () banked
 10297  014F80  5970               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10298  014F82  0100               	movlb	0	; () banked
 10299  014F84  5175               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10300  014F86  0100               	movlb	0	; () banked
 10301  014F88  5971               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10302  014F8A  0100               	movlb	0	; () banked
 10303  014F8C  5176               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10304  014F8E  0100               	movlb	0	; () banked
 10305  014F90  5972               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10306  014F92  A0D8               	btfss	status,0,c
 10307  014F94  D012               	goto	l8082
 10308                           
 10309                           ; BSR set to: 0
 10310  014F96  0100               	movlb	0	; () banked
 10311  014F98  5173               	movf	__div_to_l_@f2& (0+255),w,b
 10312  014F9A  0100               	movlb	0	; () banked
 10313  014F9C  5F6F               	subwf	__div_to_l_@f1& (0+255),f,b
 10314  014F9E  0100               	movlb	0	; () banked
 10315  014FA0  5174               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10316  014FA2  0100               	movlb	0	; () banked
 10317  014FA4  5B70               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10318  014FA6  0100               	movlb	0	; () banked
 10319  014FA8  5175               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10320  014FAA  0100               	movlb	0	; () banked
 10321  014FAC  5B71               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10322  014FAE  0100               	movlb	0	; () banked
 10323  014FB0  5176               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10324  014FB2  0100               	movlb	0	; () banked
 10325  014FB4  5B72               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10326                           
 10327                           ; BSR set to: 0
 10328  014FB6  0100               	movlb	0	; () banked
 10329  014FB8  8177               	bsf	__div_to_l_@quot& (0+255),0,b
 10330  014FBA                     l8082:
 10331                           
 10332                           ; BSR set to: 0
 10333  014FBA  0100               	movlb	0	; () banked
 10334  014FBC  90D8               	bcf	status,0,c
 10335  014FBE  376F               	rlcf	__div_to_l_@f1& (0+255),f,b
 10336  014FC0  3770               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10337  014FC2  3771               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10338  014FC4  3772               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10339                           
 10340                           ; BSR set to: 0
 10341  014FC6  0100               	movlb	0	; () banked
 10342  014FC8  2F7B               	decfsz	__div_to_l_@cntr& (0+255),f,b
 10343  014FCA  D7CD               	goto	l8074
 10344                           
 10345                           ; BSR set to: 0
 10346                           
 10347                           ; BSR set to: 0
 10348  014FCC  0100               	movlb	0	; () banked
 10349  014FCE  AF7C               	btfss	__div_to_l_@exp1& (0+255),7,b
 10350  014FD0  D01A               	goto	l8098
 10351                           
 10352                           ; BSR set to: 0
 10353  014FD2  0100               	movlb	0	; () banked
 10354  014FD4  517C               	movf	__div_to_l_@exp1& (0+255),w,b
 10355  014FD6  0A80               	xorlw	128
 10356  014FD8  0F9F               	addlw	159
 10357  014FDA  B0D8               	btfsc	status,0,c
 10358  014FDC  D00A               	goto	l8094
 10359                           
 10360                           ; BSR set to: 0
 10361  014FDE  0E00               	movlw	0
 10362  014FE0  0100               	movlb	0	; () banked
 10363  014FE2  6F6F               	movwf	?__div_to_l_& (0+255),b
 10364  014FE4  0E00               	movlw	0
 10365  014FE6  6F70               	movwf	(?__div_to_l_+1)& (0+255),b
 10366  014FE8  0E00               	movlw	0
 10367  014FEA  6F71               	movwf	(?__div_to_l_+2)& (0+255),b
 10368  014FEC  0E00               	movlw	0
 10369  014FEE  6F72               	movwf	(?__div_to_l_+3)& (0+255),b
 10370                           
 10371                           ; BSR set to: 0
 10372  014FF0  0012               	return	
 10373  014FF2                     l8094:
 10374                           
 10375                           ; BSR set to: 0
 10376  014FF2  0100               	movlb	0	; () banked
 10377  014FF4  90D8               	bcf	status,0,c
 10378  014FF6  337A               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 10379  014FF8  3379               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 10380  014FFA  3378               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 10381  014FFC  3377               	rrcf	__div_to_l_@quot& (0+255),f,b
 10382                           
 10383                           ; BSR set to: 0
 10384  014FFE  0100               	movlb	0	; () banked
 10385  015000  3F7C               	incfsz	__div_to_l_@exp1& (0+255),f,b
 10386  015002  D7F7               	goto	l8094
 10387                           
 10388                           ; BSR set to: 0
 10389  015004  D01B               	goto	l1177
 10390  015006                     l8098:
 10391                           
 10392                           ; BSR set to: 0
 10393  015006  0E1F               	movlw	31
 10394  015008  0100               	movlb	0	; () banked
 10395  01500A  657C               	cpfsgt	__div_to_l_@exp1& (0+255),b
 10396  01500C  D012               	goto	l8106
 10397                           
 10398                           ; BSR set to: 0
 10399  01500E  0E00               	movlw	0
 10400  015010  0100               	movlb	0	; () banked
 10401  015012  6F6F               	movwf	?__div_to_l_& (0+255),b
 10402  015014  0E00               	movlw	0
 10403  015016  6F70               	movwf	(?__div_to_l_+1)& (0+255),b
 10404  015018  0E00               	movlw	0
 10405  01501A  6F71               	movwf	(?__div_to_l_+2)& (0+255),b
 10406  01501C  0E00               	movlw	0
 10407  01501E  6F72               	movwf	(?__div_to_l_+3)& (0+255),b
 10408                           
 10409                           ; BSR set to: 0
 10410  015020  0012               	return	
 10411  015022                     l8104:
 10412                           
 10413                           ; BSR set to: 0
 10414  015022  0100               	movlb	0	; () banked
 10415  015024  90D8               	bcf	status,0,c
 10416  015026  3777               	rlcf	__div_to_l_@quot& (0+255),f,b
 10417  015028  3778               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10418  01502A  3779               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10419  01502C  377A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10420  01502E  0100               	movlb	0	; () banked
 10421  015030  077C               	decf	__div_to_l_@exp1& (0+255),f,b
 10422  015032                     l8106:
 10423                           
 10424                           ; BSR set to: 0
 10425  015032  0100               	movlb	0	; () banked
 10426  015034  517C               	movf	__div_to_l_@exp1& (0+255),w,b
 10427  015036  0100               	movlb	0	; () banked
 10428  015038  A4D8               	btfss	status,2,c
 10429  01503A  D7F3               	goto	l8104
 10430  01503C                     l1177:
 10431                           
 10432                           ; BSR set to: 0
 10433  01503C  C077  F06F         	movff	__div_to_l_@quot,?__div_to_l_
 10434  015040  C078  F070         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10435  015044  C079  F071         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10436  015048  C07A  F072         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10437                           
 10438                           ; BSR set to: 0
 10439  01504C  0012               	return		;funcret
 10440  01504E                     __end_of__div_to_l_:
 10441                           	opt stack 0
 10442                           tblptru	equ	0xFF8
 10443                           tblptrh	equ	0xFF7
 10444                           tblptrl	equ	0xFF6
 10445                           tablat	equ	0xFF5
 10446                           prodh	equ	0xFF4
 10447                           prodl	equ	0xFF3
 10448                           intcon	equ	0xFF2
 10449                           postinc0	equ	0xFEE
 10450                           wreg	equ	0xFE8
 10451                           indf2	equ	0xFDF
 10452                           postinc2	equ	0xFDE
 10453                           fsr2h	equ	0xFDA
 10454                           fsr2l	equ	0xFD9
 10455                           status	equ	0xFD8
 10456                           
 10457 ;; *************** function ___xxtofl *****************
 10458 ;; Defined at:
 10459 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 10460 ;; Parameters:    Size  Location     Type
 10461 ;;  sign            1    wreg     unsigned char 
 10462 ;;  val             4   15[BANK0 ] long 
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;  sign            1   23[BANK0 ] unsigned char 
 10465 ;;  arg             4   25[BANK0 ] unsigned long 
 10466 ;;  exp             1   24[BANK0 ] unsigned char 
 10467 ;; Return value:  Size  Location     Type
 10468 ;;                  4   15[BANK0 ] unsigned char 
 10469 ;; Registers used:
 10470 ;;		wreg, status,2, status,0
 10471 ;; Tracked objects:
 10472 ;;		On entry : 0/0
 10473 ;;		On exit  : 0/0
 10474 ;;		Unchanged: 0/0
 10475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10476 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10477 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10478 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10479 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10480 ;;Total ram usage:       14 bytes
 10481 ;; Hardware stack levels used:    1
 10482 ;; Hardware stack levels required when called:    3
 10483 ;; This function calls:
 10484 ;;		Nothing
 10485 ;; This function is called by:
 10486 ;;		_main
 10487 ;;		_LCD_Handler
 10488 ;;		_sprintf
 10489 ;; This function uses a non-reentrant model
 10490 ;;
 10491                           
 10492                           	psect	text17
 10493  014804                     __ptext17:
 10494                           	opt stack 0
 10495  014804                     ___xxtofl:
 10496                           	opt stack 27
 10497                           
 10498                           ; BSR set to: 0
 10499                           ;incstack = 0
 10500                           ;___xxtofl@sign stored from wreg
 10501  014804  0100               	movlb	0	; () banked
 10502  014806  6F77               	movwf	___xxtofl@sign& (0+255),b
 10503  014808  0100               	movlb	0	; () banked
 10504  01480A  5177               	movf	___xxtofl@sign& (0+255),w,b
 10505  01480C  0100               	movlb	0	; () banked
 10506  01480E  B4D8               	btfsc	status,2,c
 10507  014810  D01E               	goto	l1572
 10508                           
 10509                           ; BSR set to: 0
 10510  014812  0100               	movlb	0	; () banked
 10511  014814  AF72               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10512  014816  D01B               	goto	l1572
 10513                           
 10514                           ; BSR set to: 0
 10515  014818  C06F  F073         	movff	___xxtofl@val,??___xxtofl
 10516  01481C  C070  F074         	movff	___xxtofl@val+1,??___xxtofl+1
 10517  014820  C071  F075         	movff	___xxtofl@val+2,??___xxtofl+2
 10518  014824  C072  F076         	movff	___xxtofl@val+3,??___xxtofl+3
 10519  014828  0100               	movlb	0	; () banked
 10520  01482A  1F73               	comf	??___xxtofl& (0+255),f,b
 10521  01482C  1F74               	comf	(??___xxtofl+1)& (0+255),f,b
 10522  01482E  1F75               	comf	(??___xxtofl+2)& (0+255),f,b
 10523  014830  1F76               	comf	(??___xxtofl+3)& (0+255),f,b
 10524  014832  2B73               	incf	??___xxtofl& (0+255),f,b
 10525  014834  0E00               	movlw	0
 10526  014836  2374               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10527  014838  2375               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10528  01483A  2376               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10529  01483C  C073  F079         	movff	??___xxtofl,___xxtofl@arg
 10530  014840  C074  F07A         	movff	??___xxtofl+1,___xxtofl@arg+1
 10531  014844  C075  F07B         	movff	??___xxtofl+2,___xxtofl@arg+2
 10532  014848  C076  F07C         	movff	??___xxtofl+3,___xxtofl@arg+3
 10533  01484C  D008               	goto	l8232
 10534  01484E                     l1572:
 10535                           
 10536                           ; BSR set to: 0
 10537  01484E  C06F  F079         	movff	___xxtofl@val,___xxtofl@arg
 10538  014852  C070  F07A         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10539  014856  C071  F07B         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10540  01485A  C072  F07C         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10541  01485E                     l8232:
 10542                           
 10543                           ; BSR set to: 0
 10544  01485E  0100               	movlb	0	; () banked
 10545  014860  516F               	movf	___xxtofl@val& (0+255),w,b
 10546  014862  0100               	movlb	0	; () banked
 10547  014864  1170               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10548  014866  0100               	movlb	0	; () banked
 10549  014868  1171               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10550  01486A  0100               	movlb	0	; () banked
 10551  01486C  1172               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 10552  01486E  A4D8               	btfss	status,2,c
 10553  014870  D00A               	goto	l8238
 10554                           
 10555                           ; BSR set to: 0
 10556  014872  0E00               	movlw	0
 10557  014874  0100               	movlb	0	; () banked
 10558  014876  6F6F               	movwf	?___xxtofl& (0+255),b
 10559  014878  0E00               	movlw	0
 10560  01487A  6F70               	movwf	(?___xxtofl+1)& (0+255),b
 10561  01487C  0E00               	movlw	0
 10562  01487E  6F71               	movwf	(?___xxtofl+2)& (0+255),b
 10563  014880  0E00               	movlw	0
 10564  014882  6F72               	movwf	(?___xxtofl+3)& (0+255),b
 10565                           
 10566                           ; BSR set to: 0
 10567  014884  0012               	return	
 10568  014886                     l8238:
 10569                           
 10570                           ; BSR set to: 0
 10571  014886  0E96               	movlw	150
 10572  014888  0100               	movlb	0	; () banked
 10573  01488A  6F78               	movwf	___xxtofl@exp& (0+255),b
 10574  01488C  D008               	goto	l8242
 10575  01488E                     l8240:
 10576                           
 10577                           ; BSR set to: 0
 10578  01488E  0100               	movlb	0	; () banked
 10579  014890  2B78               	incf	___xxtofl@exp& (0+255),f,b
 10580  014892  0100               	movlb	0	; () banked
 10581  014894  90D8               	bcf	status,0,c
 10582  014896  337C               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10583  014898  337B               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10584  01489A  337A               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10585  01489C  3379               	rrcf	___xxtofl@arg& (0+255),f,b
 10586  01489E                     l8242:
 10587                           
 10588                           ; BSR set to: 0
 10589  01489E  0E00               	movlw	0
 10590  0148A0  0100               	movlb	0	; () banked
 10591  0148A2  1579               	andwf	___xxtofl@arg& (0+255),w,b
 10592  0148A4  0100               	movlb	0	; () banked
 10593  0148A6  6F73               	movwf	??___xxtofl& (0+255),b
 10594  0148A8  0E00               	movlw	0
 10595  0148AA  0100               	movlb	0	; () banked
 10596  0148AC  157A               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10597  0148AE  0100               	movlb	0	; () banked
 10598  0148B0  6F74               	movwf	(??___xxtofl+1)& (0+255),b
 10599  0148B2  0E00               	movlw	0
 10600  0148B4  0100               	movlb	0	; () banked
 10601  0148B6  157B               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10602  0148B8  0100               	movlb	0	; () banked
 10603  0148BA  6F75               	movwf	(??___xxtofl+2)& (0+255),b
 10604  0148BC  0EFE               	movlw	254
 10605  0148BE  0100               	movlb	0	; () banked
 10606  0148C0  157C               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10607  0148C2  0100               	movlb	0	; () banked
 10608  0148C4  6F76               	movwf	(??___xxtofl+3)& (0+255),b
 10609  0148C6  0100               	movlb	0	; () banked
 10610  0148C8  5173               	movf	??___xxtofl& (0+255),w,b
 10611  0148CA  0100               	movlb	0	; () banked
 10612  0148CC  1174               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10613  0148CE  0100               	movlb	0	; () banked
 10614  0148D0  1175               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10615  0148D2  0100               	movlb	0	; () banked
 10616  0148D4  1176               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10617  0148D6  B4D8               	btfsc	status,2,c
 10618  0148D8  D010               	goto	l1579
 10619  0148DA  D7D9               	goto	l8240
 10620  0148DC                     l8244:
 10621                           
 10622                           ; BSR set to: 0
 10623  0148DC  0100               	movlb	0	; () banked
 10624  0148DE  2B78               	incf	___xxtofl@exp& (0+255),f,b
 10625                           
 10626                           ; BSR set to: 0
 10627  0148E0  0E01               	movlw	1
 10628  0148E2  0100               	movlb	0	; () banked
 10629  0148E4  2779               	addwf	___xxtofl@arg& (0+255),f,b
 10630  0148E6  0E00               	movlw	0
 10631  0148E8  237A               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10632  0148EA  237B               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10633  0148EC  237C               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10634                           
 10635                           ; BSR set to: 0
 10636  0148EE  0100               	movlb	0	; () banked
 10637  0148F0  90D8               	bcf	status,0,c
 10638  0148F2  337C               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10639  0148F4  337B               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10640  0148F6  337A               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10641  0148F8  3379               	rrcf	___xxtofl@arg& (0+255),f,b
 10642  0148FA                     l1579:
 10643                           
 10644                           ; BSR set to: 0
 10645  0148FA  0E00               	movlw	0
 10646  0148FC  0100               	movlb	0	; () banked
 10647  0148FE  1579               	andwf	___xxtofl@arg& (0+255),w,b
 10648  014900  0100               	movlb	0	; () banked
 10649  014902  6F73               	movwf	??___xxtofl& (0+255),b
 10650  014904  0E00               	movlw	0
 10651  014906  0100               	movlb	0	; () banked
 10652  014908  157A               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10653  01490A  0100               	movlb	0	; () banked
 10654  01490C  6F74               	movwf	(??___xxtofl+1)& (0+255),b
 10655  01490E  0E00               	movlw	0
 10656  014910  0100               	movlb	0	; () banked
 10657  014912  157B               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10658  014914  0100               	movlb	0	; () banked
 10659  014916  6F75               	movwf	(??___xxtofl+2)& (0+255),b
 10660  014918  0EFF               	movlw	255
 10661  01491A  0100               	movlb	0	; () banked
 10662  01491C  157C               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10663  01491E  0100               	movlb	0	; () banked
 10664  014920  6F76               	movwf	(??___xxtofl+3)& (0+255),b
 10665  014922  0100               	movlb	0	; () banked
 10666  014924  5173               	movf	??___xxtofl& (0+255),w,b
 10667  014926  0100               	movlb	0	; () banked
 10668  014928  1174               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10669  01492A  0100               	movlb	0	; () banked
 10670  01492C  1175               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10671  01492E  0100               	movlb	0	; () banked
 10672  014930  1176               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10673  014932  B4D8               	btfsc	status,2,c
 10674  014934  D009               	goto	l8252
 10675  014936  D7D2               	goto	l8244
 10676  014938                     l8250:
 10677                           
 10678                           ; BSR set to: 0
 10679  014938  0100               	movlb	0	; () banked
 10680  01493A  0778               	decf	___xxtofl@exp& (0+255),f,b
 10681  01493C  0100               	movlb	0	; () banked
 10682  01493E  90D8               	bcf	status,0,c
 10683  014940  3779               	rlcf	___xxtofl@arg& (0+255),f,b
 10684  014942  377A               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10685  014944  377B               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10686  014946  377C               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10687  014948                     l8252:
 10688                           
 10689                           ; BSR set to: 0
 10690  014948  0100               	movlb	0	; () banked
 10691  01494A  BF7B               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10692  01494C  D004               	goto	l1586
 10693                           
 10694                           ; BSR set to: 0
 10695  01494E  0E02               	movlw	2
 10696  014950  0100               	movlb	0	; () banked
 10697  014952  6178               	cpfslt	___xxtofl@exp& (0+255),b
 10698  014954  D7F1               	goto	l8250
 10699  014956                     l1586:
 10700                           
 10701                           ; BSR set to: 0
 10702  014956  0100               	movlb	0	; () banked
 10703  014958  B178               	btfsc	___xxtofl@exp& (0+255),0,b
 10704  01495A  D009               	goto	l1587
 10705                           
 10706                           ; BSR set to: 0
 10707  01495C  0EFF               	movlw	255
 10708  01495E  0100               	movlb	0	; () banked
 10709  014960  1779               	andwf	___xxtofl@arg& (0+255),f,b
 10710  014962  0EFF               	movlw	255
 10711  014964  177A               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 10712  014966  0E7F               	movlw	127
 10713  014968  177B               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 10714  01496A  0EFF               	movlw	255
 10715  01496C  177C               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 10716  01496E                     l1587:
 10717                           
 10718                           ; BSR set to: 0
 10719  01496E  0100               	movlb	0	; () banked
 10720  014970  90D8               	bcf	status,0,c
 10721  014972  3378               	rrcf	___xxtofl@exp& (0+255),f,b
 10722  014974  C078  F073         	movff	___xxtofl@exp,??___xxtofl
 10723  014978  0100               	movlb	0	; () banked
 10724  01497A  6B74               	clrf	(??___xxtofl+1)& (0+255),b
 10725  01497C  6B75               	clrf	(??___xxtofl+2)& (0+255),b
 10726  01497E  6B76               	clrf	(??___xxtofl+3)& (0+255),b
 10727  014980  C073  F076         	movff	??___xxtofl,??___xxtofl+3
 10728  014984  0100               	movlb	0	; () banked
 10729  014986  6B75               	clrf	(??___xxtofl+2)& (0+255),b
 10730  014988  6B74               	clrf	(??___xxtofl+1)& (0+255),b
 10731  01498A  6B73               	clrf	??___xxtofl& (0+255),b
 10732  01498C  0100               	movlb	0	; () banked
 10733  01498E  5173               	movf	??___xxtofl& (0+255),w,b
 10734  014990  0100               	movlb	0	; () banked
 10735  014992  1379               	iorwf	___xxtofl@arg& (0+255),f,b
 10736  014994  0100               	movlb	0	; () banked
 10737  014996  5174               	movf	(??___xxtofl+1)& (0+255),w,b
 10738  014998  0100               	movlb	0	; () banked
 10739  01499A  137A               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10740  01499C  0100               	movlb	0	; () banked
 10741  01499E  5175               	movf	(??___xxtofl+2)& (0+255),w,b
 10742  0149A0  0100               	movlb	0	; () banked
 10743  0149A2  137B               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10744  0149A4  0100               	movlb	0	; () banked
 10745  0149A6  5176               	movf	(??___xxtofl+3)& (0+255),w,b
 10746  0149A8  0100               	movlb	0	; () banked
 10747  0149AA  137C               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10748                           
 10749                           ; BSR set to: 0
 10750  0149AC  0100               	movlb	0	; () banked
 10751  0149AE  5177               	movf	___xxtofl@sign& (0+255),w,b
 10752  0149B0  0100               	movlb	0	; () banked
 10753  0149B2  B4D8               	btfsc	status,2,c
 10754  0149B4  D005               	goto	l8264
 10755                           
 10756                           ; BSR set to: 0
 10757  0149B6  0100               	movlb	0	; () banked
 10758  0149B8  AF72               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10759  0149BA  D002               	goto	l8264
 10760                           
 10761                           ; BSR set to: 0
 10762  0149BC  0100               	movlb	0	; () banked
 10763  0149BE  8F7C               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10764  0149C0                     l8264:
 10765                           
 10766                           ; BSR set to: 0
 10767  0149C0  C079  F06F         	movff	___xxtofl@arg,?___xxtofl
 10768  0149C4  C07A  F070         	movff	___xxtofl@arg+1,?___xxtofl+1
 10769  0149C8  C07B  F071         	movff	___xxtofl@arg+2,?___xxtofl+2
 10770  0149CC  C07C  F072         	movff	___xxtofl@arg+3,?___xxtofl+3
 10771  0149D0  0012               	return	
 10772  0149D2                     __end_of___xxtofl:
 10773                           	opt stack 0
 10774                           tblptru	equ	0xFF8
 10775                           tblptrh	equ	0xFF7
 10776                           tblptrl	equ	0xFF6
 10777                           tablat	equ	0xFF5
 10778                           prodh	equ	0xFF4
 10779                           prodl	equ	0xFF3
 10780                           intcon	equ	0xFF2
 10781                           postinc0	equ	0xFEE
 10782                           wreg	equ	0xFE8
 10783                           indf2	equ	0xFDF
 10784                           postinc2	equ	0xFDE
 10785                           fsr2h	equ	0xFDA
 10786                           fsr2l	equ	0xFD9
 10787                           status	equ	0xFD8
 10788                           
 10789 ;; *************** function ___llmod *****************
 10790 ;; Defined at:
 10791 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 10792 ;; Parameters:    Size  Location     Type
 10793 ;;  dividend        4   15[BANK0 ] unsigned long 
 10794 ;;  divisor         4   19[BANK0 ] unsigned long 
 10795 ;; Auto vars:     Size  Location     Type
 10796 ;;  counter         1   23[BANK0 ] unsigned char 
 10797 ;; Return value:  Size  Location     Type
 10798 ;;                  4   15[BANK0 ] unsigned long 
 10799 ;; Registers used:
 10800 ;;		wreg, status,2, status,0
 10801 ;; Tracked objects:
 10802 ;;		On entry : 0/0
 10803 ;;		On exit  : 0/0
 10804 ;;		Unchanged: 0/0
 10805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10806 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;Total ram usage:        9 bytes
 10811 ;; Hardware stack levels used:    1
 10812 ;; Hardware stack levels required when called:    3
 10813 ;; This function calls:
 10814 ;;		Nothing
 10815 ;; This function is called by:
 10816 ;;		_sprintf
 10817 ;; This function uses a non-reentrant model
 10818 ;;
 10819                           
 10820                           	psect	text18
 10821  015952                     __ptext18:
 10822                           	opt stack 0
 10823  015952                     ___llmod:
 10824                           	opt stack 25
 10825                           
 10826                           ; BSR set to: 0
 10827                           ;incstack = 0
 10828  015952  0100               	movlb	0	; () banked
 10829  015954  5173               	movf	___llmod@divisor& (0+255),w,b
 10830  015956  0100               	movlb	0	; () banked
 10831  015958  1174               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10832  01595A  0100               	movlb	0	; () banked
 10833  01595C  1175               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10834  01595E  0100               	movlb	0	; () banked
 10835  015960  1176               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10836  015962  B4D8               	btfsc	status,2,c
 10837  015964  D03A               	goto	l1380
 10838                           
 10839                           ; BSR set to: 0
 10840  015966  0E01               	movlw	1
 10841  015968  0100               	movlb	0	; () banked
 10842  01596A  6F77               	movwf	___llmod@counter& (0+255),b
 10843  01596C  D008               	goto	l8216
 10844  01596E                     l8214:
 10845                           
 10846                           ; BSR set to: 0
 10847  01596E  0100               	movlb	0	; () banked
 10848  015970  90D8               	bcf	status,0,c
 10849  015972  3773               	rlcf	___llmod@divisor& (0+255),f,b
 10850  015974  3774               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10851  015976  3775               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10852  015978  3776               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10853  01597A  0100               	movlb	0	; () banked
 10854  01597C  2B77               	incf	___llmod@counter& (0+255),f,b
 10855  01597E                     l8216:
 10856                           
 10857                           ; BSR set to: 0
 10858  01597E  0100               	movlb	0	; () banked
 10859  015980  AF76               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10860  015982  D7F5               	goto	l8214
 10861  015984                     l8218:
 10862                           
 10863                           ; BSR set to: 0
 10864  015984  0100               	movlb	0	; () banked
 10865  015986  5173               	movf	___llmod@divisor& (0+255),w,b
 10866  015988  0100               	movlb	0	; () banked
 10867  01598A  5D6F               	subwf	___llmod@dividend& (0+255),w,b
 10868  01598C  0100               	movlb	0	; () banked
 10869  01598E  5174               	movf	(___llmod@divisor+1)& (0+255),w,b
 10870  015990  0100               	movlb	0	; () banked
 10871  015992  5970               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10872  015994  0100               	movlb	0	; () banked
 10873  015996  5175               	movf	(___llmod@divisor+2)& (0+255),w,b
 10874  015998  0100               	movlb	0	; () banked
 10875  01599A  5971               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10876  01599C  0100               	movlb	0	; () banked
 10877  01599E  5176               	movf	(___llmod@divisor+3)& (0+255),w,b
 10878  0159A0  0100               	movlb	0	; () banked
 10879  0159A2  5972               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10880  0159A4  A0D8               	btfss	status,0,c
 10881  0159A6  D010               	goto	l8222
 10882                           
 10883                           ; BSR set to: 0
 10884  0159A8  0100               	movlb	0	; () banked
 10885  0159AA  5173               	movf	___llmod@divisor& (0+255),w,b
 10886  0159AC  0100               	movlb	0	; () banked
 10887  0159AE  5F6F               	subwf	___llmod@dividend& (0+255),f,b
 10888  0159B0  0100               	movlb	0	; () banked
 10889  0159B2  5174               	movf	(___llmod@divisor+1)& (0+255),w,b
 10890  0159B4  0100               	movlb	0	; () banked
 10891  0159B6  5B70               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10892  0159B8  0100               	movlb	0	; () banked
 10893  0159BA  5175               	movf	(___llmod@divisor+2)& (0+255),w,b
 10894  0159BC  0100               	movlb	0	; () banked
 10895  0159BE  5B71               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10896  0159C0  0100               	movlb	0	; () banked
 10897  0159C2  5176               	movf	(___llmod@divisor+3)& (0+255),w,b
 10898  0159C4  0100               	movlb	0	; () banked
 10899  0159C6  5B72               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10900  0159C8                     l8222:
 10901                           
 10902                           ; BSR set to: 0
 10903  0159C8  0100               	movlb	0	; () banked
 10904  0159CA  90D8               	bcf	status,0,c
 10905  0159CC  3376               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10906  0159CE  3375               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10907  0159D0  3374               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10908  0159D2  3373               	rrcf	___llmod@divisor& (0+255),f,b
 10909                           
 10910                           ; BSR set to: 0
 10911  0159D4  0100               	movlb	0	; () banked
 10912  0159D6  2F77               	decfsz	___llmod@counter& (0+255),f,b
 10913  0159D8  D7D5               	goto	l8218
 10914  0159DA                     l1380:
 10915                           
 10916                           ; BSR set to: 0
 10917  0159DA  C06F  F06F         	movff	___llmod@dividend,?___llmod
 10918  0159DE  C070  F070         	movff	___llmod@dividend+1,?___llmod+1
 10919  0159E2  C071  F071         	movff	___llmod@dividend+2,?___llmod+2
 10920  0159E6  C072  F072         	movff	___llmod@dividend+3,?___llmod+3
 10921                           
 10922                           ; BSR set to: 0
 10923  0159EA  0012               	return		;funcret
 10924  0159EC                     __end_of___llmod:
 10925                           	opt stack 0
 10926                           tblptru	equ	0xFF8
 10927                           tblptrh	equ	0xFF7
 10928                           tblptrl	equ	0xFF6
 10929                           tablat	equ	0xFF5
 10930                           prodh	equ	0xFF4
 10931                           prodl	equ	0xFF3
 10932                           intcon	equ	0xFF2
 10933                           postinc0	equ	0xFEE
 10934                           wreg	equ	0xFE8
 10935                           indf2	equ	0xFDF
 10936                           postinc2	equ	0xFDE
 10937                           fsr2h	equ	0xFDA
 10938                           fsr2l	equ	0xFD9
 10939                           status	equ	0xFD8
 10940                           
 10941 ;; *************** function ___lldiv *****************
 10942 ;; Defined at:
 10943 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 10944 ;; Parameters:    Size  Location     Type
 10945 ;;  dividend        4   15[BANK0 ] unsigned long 
 10946 ;;  divisor         4   19[BANK0 ] unsigned long 
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;  quotient        4   23[BANK0 ] unsigned long 
 10949 ;;  counter         1   27[BANK0 ] unsigned char 
 10950 ;; Return value:  Size  Location     Type
 10951 ;;                  4   15[BANK0 ] unsigned long 
 10952 ;; Registers used:
 10953 ;;		wreg, status,2, status,0
 10954 ;; Tracked objects:
 10955 ;;		On entry : 0/0
 10956 ;;		On exit  : 0/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10959 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10960 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10962 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10963 ;;Total ram usage:       13 bytes
 10964 ;; Hardware stack levels used:    1
 10965 ;; Hardware stack levels required when called:    3
 10966 ;; This function calls:
 10967 ;;		Nothing
 10968 ;; This function is called by:
 10969 ;;		_sprintf
 10970 ;; This function uses a non-reentrant model
 10971 ;;
 10972                           
 10973                           	psect	text19
 10974  015690                     __ptext19:
 10975                           	opt stack 0
 10976  015690                     ___lldiv:
 10977                           	opt stack 25
 10978                           
 10979                           ; BSR set to: 0
 10980                           ;incstack = 0
 10981  015690  0E00               	movlw	0
 10982  015692  0100               	movlb	0	; () banked
 10983  015694  6F77               	movwf	___lldiv@quotient& (0+255),b
 10984  015696  0E00               	movlw	0
 10985  015698  6F78               	movwf	(___lldiv@quotient+1)& (0+255),b
 10986  01569A  0E00               	movlw	0
 10987  01569C  6F79               	movwf	(___lldiv@quotient+2)& (0+255),b
 10988  01569E  0E00               	movlw	0
 10989  0156A0  6F7A               	movwf	(___lldiv@quotient+3)& (0+255),b
 10990                           
 10991                           ; BSR set to: 0
 10992  0156A2  0100               	movlb	0	; () banked
 10993  0156A4  5173               	movf	___lldiv@divisor& (0+255),w,b
 10994  0156A6  0100               	movlb	0	; () banked
 10995  0156A8  1174               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10996  0156AA  0100               	movlb	0	; () banked
 10997  0156AC  1175               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10998  0156AE  0100               	movlb	0	; () banked
 10999  0156B0  1176               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11000  0156B2  B4D8               	btfsc	status,2,c
 11001  0156B4  D042               	goto	l1370
 11002                           
 11003                           ; BSR set to: 0
 11004  0156B6  0E01               	movlw	1
 11005  0156B8  0100               	movlb	0	; () banked
 11006  0156BA  6F7B               	movwf	___lldiv@counter& (0+255),b
 11007  0156BC  D008               	goto	l8196
 11008  0156BE                     l8194:
 11009                           
 11010                           ; BSR set to: 0
 11011  0156BE  0100               	movlb	0	; () banked
 11012  0156C0  90D8               	bcf	status,0,c
 11013  0156C2  3773               	rlcf	___lldiv@divisor& (0+255),f,b
 11014  0156C4  3774               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11015  0156C6  3775               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11016  0156C8  3776               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11017  0156CA  0100               	movlb	0	; () banked
 11018  0156CC  2B7B               	incf	___lldiv@counter& (0+255),f,b
 11019  0156CE                     l8196:
 11020                           
 11021                           ; BSR set to: 0
 11022  0156CE  0100               	movlb	0	; () banked
 11023  0156D0  AF76               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11024  0156D2  D7F5               	goto	l8194
 11025  0156D4                     l8198:
 11026                           
 11027                           ; BSR set to: 0
 11028  0156D4  0100               	movlb	0	; () banked
 11029  0156D6  90D8               	bcf	status,0,c
 11030  0156D8  3777               	rlcf	___lldiv@quotient& (0+255),f,b
 11031  0156DA  3778               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11032  0156DC  3779               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11033  0156DE  377A               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11034                           
 11035                           ; BSR set to: 0
 11036  0156E0  0100               	movlb	0	; () banked
 11037  0156E2  5173               	movf	___lldiv@divisor& (0+255),w,b
 11038  0156E4  0100               	movlb	0	; () banked
 11039  0156E6  5D6F               	subwf	___lldiv@dividend& (0+255),w,b
 11040  0156E8  0100               	movlb	0	; () banked
 11041  0156EA  5174               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11042  0156EC  0100               	movlb	0	; () banked
 11043  0156EE  5970               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11044  0156F0  0100               	movlb	0	; () banked
 11045  0156F2  5175               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11046  0156F4  0100               	movlb	0	; () banked
 11047  0156F6  5971               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11048  0156F8  0100               	movlb	0	; () banked
 11049  0156FA  5176               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11050  0156FC  0100               	movlb	0	; () banked
 11051  0156FE  5972               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11052  015700  A0D8               	btfss	status,0,c
 11053  015702  D012               	goto	l8206
 11054                           
 11055                           ; BSR set to: 0
 11056  015704  0100               	movlb	0	; () banked
 11057  015706  5173               	movf	___lldiv@divisor& (0+255),w,b
 11058  015708  0100               	movlb	0	; () banked
 11059  01570A  5F6F               	subwf	___lldiv@dividend& (0+255),f,b
 11060  01570C  0100               	movlb	0	; () banked
 11061  01570E  5174               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11062  015710  0100               	movlb	0	; () banked
 11063  015712  5B70               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11064  015714  0100               	movlb	0	; () banked
 11065  015716  5175               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11066  015718  0100               	movlb	0	; () banked
 11067  01571A  5B71               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11068  01571C  0100               	movlb	0	; () banked
 11069  01571E  5176               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11070  015720  0100               	movlb	0	; () banked
 11071  015722  5B72               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11072                           
 11073                           ; BSR set to: 0
 11074  015724  0100               	movlb	0	; () banked
 11075  015726  8177               	bsf	___lldiv@quotient& (0+255),0,b
 11076  015728                     l8206:
 11077                           
 11078                           ; BSR set to: 0
 11079  015728  0100               	movlb	0	; () banked
 11080  01572A  90D8               	bcf	status,0,c
 11081  01572C  3376               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11082  01572E  3375               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11083  015730  3374               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11084  015732  3373               	rrcf	___lldiv@divisor& (0+255),f,b
 11085                           
 11086                           ; BSR set to: 0
 11087  015734  0100               	movlb	0	; () banked
 11088  015736  2F7B               	decfsz	___lldiv@counter& (0+255),f,b
 11089  015738  D7CD               	goto	l8198
 11090  01573A                     l1370:
 11091                           
 11092                           ; BSR set to: 0
 11093  01573A  C077  F06F         	movff	___lldiv@quotient,?___lldiv
 11094  01573E  C078  F070         	movff	___lldiv@quotient+1,?___lldiv+1
 11095  015742  C079  F071         	movff	___lldiv@quotient+2,?___lldiv+2
 11096  015746  C07A  F072         	movff	___lldiv@quotient+3,?___lldiv+3
 11097                           
 11098                           ; BSR set to: 0
 11099  01574A  0012               	return		;funcret
 11100  01574C                     __end_of___lldiv:
 11101                           	opt stack 0
 11102                           tblptru	equ	0xFF8
 11103                           tblptrh	equ	0xFF7
 11104                           tblptrl	equ	0xFF6
 11105                           tablat	equ	0xFF5
 11106                           prodh	equ	0xFF4
 11107                           prodl	equ	0xFF3
 11108                           intcon	equ	0xFF2
 11109                           postinc0	equ	0xFEE
 11110                           wreg	equ	0xFE8
 11111                           indf2	equ	0xFDF
 11112                           postinc2	equ	0xFDE
 11113                           fsr2h	equ	0xFDA
 11114                           fsr2l	equ	0xFD9
 11115                           status	equ	0xFD8
 11116                           
 11117 ;; *************** function ___fltol *****************
 11118 ;; Defined at:
 11119 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;  f1              4   87[BANK0 ] unsigned long 
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;  exp1            1   96[BANK0 ] unsigned char 
 11124 ;;  sign1           1   95[BANK0 ] unsigned char 
 11125 ;; Return value:  Size  Location     Type
 11126 ;;                  4   87[BANK0 ] long 
 11127 ;; Registers used:
 11128 ;;		wreg, status,2, status,0
 11129 ;; Tracked objects:
 11130 ;;		On entry : 0/0
 11131 ;;		On exit  : 0/0
 11132 ;;		Unchanged: 0/0
 11133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11134 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11135 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11136 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11137 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11138 ;;Total ram usage:       10 bytes
 11139 ;; Hardware stack levels used:    1
 11140 ;; Hardware stack levels required when called:    3
 11141 ;; This function calls:
 11142 ;;		Nothing
 11143 ;; This function is called by:
 11144 ;;		_main
 11145 ;;		_sprintf
 11146 ;; This function uses a non-reentrant model
 11147 ;;
 11148                           
 11149                           	psect	text20
 11150  015318                     __ptext20:
 11151                           	opt stack 0
 11152  015318                     ___fltol:
 11153                           	opt stack 27
 11154                           
 11155                           ; BSR set to: 0
 11156                           ;incstack = 0
 11157  015318  0100               	movlb	0	; () banked
 11158  01531A  35B9               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11159  01531C  35BA               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11160  01531E  0100               	movlb	0	; () banked
 11161  015320  6FC0               	movwf	___fltol@exp1& (0+255),b
 11162  015322  0100               	movlb	0	; () banked
 11163  015324  51C0               	movf	___fltol@exp1& (0+255),w,b
 11164  015326  A4D8               	btfss	status,2,c
 11165  015328  D00A               	goto	l8150
 11166                           
 11167                           ; BSR set to: 0
 11168  01532A  0E00               	movlw	0
 11169  01532C  0100               	movlb	0	; () banked
 11170  01532E  6FB7               	movwf	?___fltol& (0+255),b
 11171  015330  0E00               	movlw	0
 11172  015332  6FB8               	movwf	(?___fltol+1)& (0+255),b
 11173  015334  0E00               	movlw	0
 11174  015336  6FB9               	movwf	(?___fltol+2)& (0+255),b
 11175  015338  0E00               	movlw	0
 11176  01533A  6FBA               	movwf	(?___fltol+3)& (0+255),b
 11177                           
 11178                           ; BSR set to: 0
 11179  01533C  0012               	return	
 11180  01533E                     l8150:
 11181                           
 11182                           ; BSR set to: 0
 11183  01533E  C0B7  F0BB         	movff	___fltol@f1,??___fltol
 11184  015342  C0B8  F0BC         	movff	___fltol@f1+1,??___fltol+1
 11185  015346  C0B9  F0BD         	movff	___fltol@f1+2,??___fltol+2
 11186  01534A  C0BA  F0BE         	movff	___fltol@f1+3,??___fltol+3
 11187  01534E  0E20               	movlw	32
 11188  015350  D006               	goto	u10740
 11189  015352                     u10745:
 11190  015352  0100               	movlb	0	; () banked
 11191  015354  90D8               	bcf	status,0,c
 11192  015356  33BE               	rrcf	(??___fltol+3)& (0+255),f,b
 11193  015358  33BD               	rrcf	(??___fltol+2)& (0+255),f,b
 11194  01535A  33BC               	rrcf	(??___fltol+1)& (0+255),f,b
 11195  01535C  33BB               	rrcf	??___fltol& (0+255),f,b
 11196  01535E                     u10740:
 11197  01535E  2EE8               	decfsz	wreg,f,c
 11198  015360  D7F8               	goto	u10745
 11199  015362  0100               	movlb	0	; () banked
 11200  015364  51BB               	movf	??___fltol& (0+255),w,b
 11201  015366  0100               	movlb	0	; () banked
 11202  015368  6FBF               	movwf	___fltol@sign1& (0+255),b
 11203                           
 11204                           ; BSR set to: 0
 11205  01536A  0100               	movlb	0	; () banked
 11206  01536C  8FB9               	bsf	(___fltol@f1+2)& (0+255),7,b
 11207                           
 11208                           ; BSR set to: 0
 11209  01536E  0EFF               	movlw	255
 11210  015370  0100               	movlb	0	; () banked
 11211  015372  17B7               	andwf	___fltol@f1& (0+255),f,b
 11212  015374  0EFF               	movlw	255
 11213  015376  17B8               	andwf	(___fltol@f1+1)& (0+255),f,b
 11214  015378  0EFF               	movlw	255
 11215  01537A  17B9               	andwf	(___fltol@f1+2)& (0+255),f,b
 11216  01537C  0E00               	movlw	0
 11217  01537E  17BA               	andwf	(___fltol@f1+3)& (0+255),f,b
 11218                           
 11219                           ; BSR set to: 0
 11220  015380  0E96               	movlw	150
 11221  015382  0100               	movlb	0	; () banked
 11222  015384  5FC0               	subwf	___fltol@exp1& (0+255),f,b
 11223                           
 11224                           ; BSR set to: 0
 11225  015386  0100               	movlb	0	; () banked
 11226  015388  AFC0               	btfss	___fltol@exp1& (0+255),7,b
 11227  01538A  D01A               	goto	l8170
 11228                           
 11229                           ; BSR set to: 0
 11230  01538C  0100               	movlb	0	; () banked
 11231  01538E  51C0               	movf	___fltol@exp1& (0+255),w,b
 11232  015390  0A80               	xorlw	128
 11233  015392  0F97               	addlw	151
 11234  015394  B0D8               	btfsc	status,0,c
 11235  015396  D00A               	goto	l8166
 11236                           
 11237                           ; BSR set to: 0
 11238  015398  0E00               	movlw	0
 11239  01539A  0100               	movlb	0	; () banked
 11240  01539C  6FB7               	movwf	?___fltol& (0+255),b
 11241  01539E  0E00               	movlw	0
 11242  0153A0  6FB8               	movwf	(?___fltol+1)& (0+255),b
 11243  0153A2  0E00               	movlw	0
 11244  0153A4  6FB9               	movwf	(?___fltol+2)& (0+255),b
 11245  0153A6  0E00               	movlw	0
 11246  0153A8  6FBA               	movwf	(?___fltol+3)& (0+255),b
 11247                           
 11248                           ; BSR set to: 0
 11249  0153AA  0012               	return	
 11250  0153AC                     l8166:
 11251                           
 11252                           ; BSR set to: 0
 11253  0153AC  0100               	movlb	0	; () banked
 11254  0153AE  90D8               	bcf	status,0,c
 11255  0153B0  33BA               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11256  0153B2  33B9               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11257  0153B4  33B8               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11258  0153B6  33B7               	rrcf	___fltol@f1& (0+255),f,b
 11259                           
 11260                           ; BSR set to: 0
 11261  0153B8  0100               	movlb	0	; () banked
 11262  0153BA  3FC0               	incfsz	___fltol@exp1& (0+255),f,b
 11263  0153BC  D7F7               	goto	l8166
 11264                           
 11265                           ; BSR set to: 0
 11266  0153BE  D01B               	goto	l8180
 11267  0153C0                     l8170:
 11268                           
 11269                           ; BSR set to: 0
 11270  0153C0  0E1F               	movlw	31
 11271  0153C2  0100               	movlb	0	; () banked
 11272  0153C4  65C0               	cpfsgt	___fltol@exp1& (0+255),b
 11273  0153C6  D012               	goto	l8178
 11274                           
 11275                           ; BSR set to: 0
 11276  0153C8  0E00               	movlw	0
 11277  0153CA  0100               	movlb	0	; () banked
 11278  0153CC  6FB7               	movwf	?___fltol& (0+255),b
 11279  0153CE  0E00               	movlw	0
 11280  0153D0  6FB8               	movwf	(?___fltol+1)& (0+255),b
 11281  0153D2  0E00               	movlw	0
 11282  0153D4  6FB9               	movwf	(?___fltol+2)& (0+255),b
 11283  0153D6  0E00               	movlw	0
 11284  0153D8  6FBA               	movwf	(?___fltol+3)& (0+255),b
 11285                           
 11286                           ; BSR set to: 0
 11287  0153DA  0012               	return	
 11288  0153DC                     l8176:
 11289                           
 11290                           ; BSR set to: 0
 11291  0153DC  0100               	movlb	0	; () banked
 11292  0153DE  90D8               	bcf	status,0,c
 11293  0153E0  37B7               	rlcf	___fltol@f1& (0+255),f,b
 11294  0153E2  37B8               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11295  0153E4  37B9               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11296  0153E6  37BA               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11297  0153E8  0100               	movlb	0	; () banked
 11298  0153EA  07C0               	decf	___fltol@exp1& (0+255),f,b
 11299  0153EC                     l8178:
 11300                           
 11301                           ; BSR set to: 0
 11302  0153EC  0100               	movlb	0	; () banked
 11303  0153EE  51C0               	movf	___fltol@exp1& (0+255),w,b
 11304  0153F0  0100               	movlb	0	; () banked
 11305  0153F2  A4D8               	btfss	status,2,c
 11306  0153F4  D7F3               	goto	l8176
 11307  0153F6                     l8180:
 11308                           
 11309                           ; BSR set to: 0
 11310  0153F6  0100               	movlb	0	; () banked
 11311  0153F8  51BF               	movf	___fltol@sign1& (0+255),w,b
 11312  0153FA  0100               	movlb	0	; () banked
 11313  0153FC  B4D8               	btfsc	status,2,c
 11314  0153FE  D009               	goto	l8184
 11315                           
 11316                           ; BSR set to: 0
 11317  015400  0100               	movlb	0	; () banked
 11318  015402  1FBA               	comf	(___fltol@f1+3)& (0+255),f,b
 11319  015404  1FB9               	comf	(___fltol@f1+2)& (0+255),f,b
 11320  015406  1FB8               	comf	(___fltol@f1+1)& (0+255),f,b
 11321  015408  6DB7               	negf	___fltol@f1& (0+255),b
 11322  01540A  0E00               	movlw	0
 11323  01540C  23B8               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11324  01540E  23B9               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11325  015410  23BA               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11326  015412                     l8184:
 11327                           
 11328                           ; BSR set to: 0
 11329  015412  C0B7  F0B7         	movff	___fltol@f1,?___fltol
 11330  015416  C0B8  F0B8         	movff	___fltol@f1+1,?___fltol+1
 11331  01541A  C0B9  F0B9         	movff	___fltol@f1+2,?___fltol+2
 11332  01541E  C0BA  F0BA         	movff	___fltol@f1+3,?___fltol+3
 11333  015422  0012               	return	
 11334  015424                     __end_of___fltol:
 11335                           	opt stack 0
 11336                           tblptru	equ	0xFF8
 11337                           tblptrh	equ	0xFF7
 11338                           tblptrl	equ	0xFF6
 11339                           tablat	equ	0xFF5
 11340                           prodh	equ	0xFF4
 11341                           prodl	equ	0xFF3
 11342                           intcon	equ	0xFF2
 11343                           postinc0	equ	0xFEE
 11344                           wreg	equ	0xFE8
 11345                           indf2	equ	0xFDF
 11346                           postinc2	equ	0xFDE
 11347                           fsr2h	equ	0xFDA
 11348                           fsr2l	equ	0xFD9
 11349                           status	equ	0xFD8
 11350                           
 11351 ;; *************** function ___flsub *****************
 11352 ;; Defined at:
 11353 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11354 ;; Parameters:    Size  Location     Type
 11355 ;;  b               4   87[BANK0 ] long 
 11356 ;;  a               4   91[BANK0 ] long 
 11357 ;; Auto vars:     Size  Location     Type
 11358 ;;		None
 11359 ;; Return value:  Size  Location     Type
 11360 ;;                  4   87[BANK0 ] long 
 11361 ;; Registers used:
 11362 ;;		wreg, status,2, status,0, cstack
 11363 ;; Tracked objects:
 11364 ;;		On entry : 0/0
 11365 ;;		On exit  : 0/0
 11366 ;;		Unchanged: 0/0
 11367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11368 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11371 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11372 ;;Total ram usage:        8 bytes
 11373 ;; Hardware stack levels used:    1
 11374 ;; Hardware stack levels required when called:    4
 11375 ;; This function calls:
 11376 ;;		___fladd
 11377 ;; This function is called by:
 11378 ;;		_sprintf
 11379 ;; This function uses a non-reentrant model
 11380 ;;
 11381                           
 11382                           	psect	text21
 11383  015B22                     __ptext21:
 11384                           	opt stack 0
 11385  015B22                     ___flsub:
 11386                           	opt stack 24
 11387                           
 11388                           ; BSR set to: 0
 11389                           ;incstack = 0
 11390  015B22  0E00               	movlw	0
 11391  015B24  0100               	movlb	0	; () banked
 11392  015B26  1BBB               	xorwf	___flsub@a& (0+255),f,b
 11393  015B28  0E00               	movlw	0
 11394  015B2A  1BBC               	xorwf	(___flsub@a+1)& (0+255),f,b
 11395  015B2C  0E00               	movlw	0
 11396  015B2E  1BBD               	xorwf	(___flsub@a+2)& (0+255),f,b
 11397  015B30  0E80               	movlw	128
 11398  015B32  1BBE               	xorwf	(___flsub@a+3)& (0+255),f,b
 11399                           
 11400                           ; BSR set to: 0
 11401  015B34  C0B7  F0A3         	movff	___flsub@b,___fladd@b
 11402  015B38  C0B8  F0A4         	movff	___flsub@b+1,___fladd@b+1
 11403  015B3C  C0B9  F0A5         	movff	___flsub@b+2,___fladd@b+2
 11404  015B40  C0BA  F0A6         	movff	___flsub@b+3,___fladd@b+3
 11405  015B44  C0BB  F0A7         	movff	___flsub@a,___fladd@a
 11406  015B48  C0BC  F0A8         	movff	___flsub@a+1,___fladd@a+1
 11407  015B4C  C0BD  F0A9         	movff	___flsub@a+2,___fladd@a+2
 11408  015B50  C0BE  F0AA         	movff	___flsub@a+3,___fladd@a+3
 11409  015B54  EC41  F099         	call	___fladd	;wreg free
 11410  015B58  C0A3  F0B7         	movff	?___fladd,?___flsub
 11411  015B5C  C0A4  F0B8         	movff	?___fladd+1,?___flsub+1
 11412  015B60  C0A5  F0B9         	movff	?___fladd+2,?___flsub+2
 11413  015B64  C0A6  F0BA         	movff	?___fladd+3,?___flsub+3
 11414  015B68  0012               	return	
 11415  015B6A                     __end_of___flsub:
 11416                           	opt stack 0
 11417                           tblptru	equ	0xFF8
 11418                           tblptrh	equ	0xFF7
 11419                           tblptrl	equ	0xFF6
 11420                           tablat	equ	0xFF5
 11421                           prodh	equ	0xFF4
 11422                           prodl	equ	0xFF3
 11423                           intcon	equ	0xFF2
 11424                           postinc0	equ	0xFEE
 11425                           wreg	equ	0xFE8
 11426                           indf2	equ	0xFDF
 11427                           postinc2	equ	0xFDE
 11428                           fsr2h	equ	0xFDA
 11429                           fsr2l	equ	0xFD9
 11430                           status	equ	0xFD8
 11431                           
 11432 ;; *************** function ___fladd *****************
 11433 ;; Defined at:
 11434 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11435 ;; Parameters:    Size  Location     Type
 11436 ;;  b               4   67[BANK0 ] long 
 11437 ;;  a               4   71[BANK0 ] long 
 11438 ;; Auto vars:     Size  Location     Type
 11439 ;;  grs             1   86[BANK0 ] unsigned char 
 11440 ;;  bexp            1   85[BANK0 ] unsigned char 
 11441 ;;  aexp            1   84[BANK0 ] unsigned char 
 11442 ;;  signs           1   83[BANK0 ] unsigned char 
 11443 ;; Return value:  Size  Location     Type
 11444 ;;                  4   67[BANK0 ] unsigned char 
 11445 ;; Registers used:
 11446 ;;		wreg, status,2, status,0
 11447 ;; Tracked objects:
 11448 ;;		On entry : 0/0
 11449 ;;		On exit  : 0/0
 11450 ;;		Unchanged: 0/0
 11451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11452 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11453 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11454 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11455 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11456 ;;Total ram usage:       20 bytes
 11457 ;; Hardware stack levels used:    1
 11458 ;; Hardware stack levels required when called:    3
 11459 ;; This function calls:
 11460 ;;		Nothing
 11461 ;; This function is called by:
 11462 ;;		_main
 11463 ;;		_sprintf
 11464 ;;		___flsub
 11465 ;; This function uses a non-reentrant model
 11466 ;;
 11467                           
 11468                           	psect	text22
 11469  013282                     __ptext22:
 11470                           	opt stack 0
 11471  013282                     ___fladd:
 11472                           	opt stack 27
 11473                           
 11474                           ;incstack = 0
 11475  013282  0100               	movlb	0	; () banked
 11476  013284  51A6               	movf	(___fladd@b+3)& (0+255),w,b
 11477  013286  0B80               	andlw	128
 11478  013288  0100               	movlb	0	; () banked
 11479  01328A  6FB3               	movwf	___fladd@signs& (0+255),b
 11480  01328C  0100               	movlb	0	; () banked
 11481  01328E  51A6               	movf	(___fladd@b+3)& (0+255),w,b
 11482  013290  25A6               	addwf	(___fladd@b+3)& (0+255),w,b
 11483  013292  0100               	movlb	0	; () banked
 11484  013294  6FB5               	movwf	___fladd@bexp& (0+255),b
 11485                           
 11486                           ; BSR set to: 0
 11487  013296  0100               	movlb	0	; () banked
 11488  013298  AFA5               	btfss	(___fladd@b+2)& (0+255),7,b
 11489  01329A  D002               	goto	l7472
 11490                           
 11491                           ; BSR set to: 0
 11492  01329C  0100               	movlb	0	; () banked
 11493  01329E  81B5               	bsf	___fladd@bexp& (0+255),0,b
 11494  0132A0                     l7472:
 11495                           
 11496                           ; BSR set to: 0
 11497  0132A0  0100               	movlb	0	; () banked
 11498  0132A2  51B5               	movf	___fladd@bexp& (0+255),w,b
 11499  0132A4  0100               	movlb	0	; () banked
 11500  0132A6  B4D8               	btfsc	status,2,c
 11501  0132A8  D012               	goto	l7482
 11502                           
 11503                           ; BSR set to: 0
 11504  0132AA  0100               	movlb	0	; () banked
 11505  0132AC  29B5               	incf	___fladd@bexp& (0+255),w,b
 11506  0132AE  A4D8               	btfss	status,2,c
 11507  0132B0  D009               	goto	l7478
 11508                           
 11509                           ; BSR set to: 0
 11510  0132B2  0E00               	movlw	0
 11511  0132B4  0100               	movlb	0	; () banked
 11512  0132B6  6FA3               	movwf	___fladd@b& (0+255),b
 11513  0132B8  0E00               	movlw	0
 11514  0132BA  6FA4               	movwf	(___fladd@b+1)& (0+255),b
 11515  0132BC  0E00               	movlw	0
 11516  0132BE  6FA5               	movwf	(___fladd@b+2)& (0+255),b
 11517  0132C0  0E00               	movlw	0
 11518  0132C2  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 11519  0132C4                     l7478:
 11520                           
 11521                           ; BSR set to: 0
 11522  0132C4  0100               	movlb	0	; () banked
 11523  0132C6  8FA5               	bsf	(___fladd@b+2)& (0+255),7,b
 11524                           
 11525                           ; BSR set to: 0
 11526  0132C8  0E00               	movlw	0
 11527  0132CA  0100               	movlb	0	; () banked
 11528  0132CC  D008               	goto	L9
 11529  0132CE                     l7482:
 11530                           
 11531                           ; BSR set to: 0
 11532  0132CE  0E00               	movlw	0
 11533  0132D0  0100               	movlb	0	; () banked
 11534  0132D2  6FA3               	movwf	___fladd@b& (0+255),b
 11535  0132D4  0E00               	movlw	0
 11536  0132D6  6FA4               	movwf	(___fladd@b+1)& (0+255),b
 11537  0132D8  0E00               	movlw	0
 11538  0132DA  6FA5               	movwf	(___fladd@b+2)& (0+255),b
 11539  0132DC  0E00               	movlw	0
 11540  0132DE                     L9:
 11541  0132DE  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 11542                           
 11543                           ; BSR set to: 0
 11544                           
 11545                           ; BSR set to: 0
 11546  0132E0  0100               	movlb	0	; () banked
 11547  0132E2  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 11548  0132E4  0B80               	andlw	128
 11549  0132E6  0100               	movlb	0	; () banked
 11550  0132E8  6FB4               	movwf	___fladd@aexp& (0+255),b
 11551                           
 11552                           ; BSR set to: 0
 11553  0132EA  0100               	movlb	0	; () banked
 11554  0132EC  51B3               	movf	___fladd@signs& (0+255),w,b
 11555  0132EE  0100               	movlb	0	; () banked
 11556  0132F0  19B4               	xorwf	___fladd@aexp& (0+255),w,b
 11557  0132F2  B4D8               	btfsc	status,2,c
 11558  0132F4  D002               	goto	l7490
 11559                           
 11560                           ; BSR set to: 0
 11561  0132F6  0100               	movlb	0	; () banked
 11562  0132F8  8DB3               	bsf	___fladd@signs& (0+255),6,b
 11563  0132FA                     l7490:
 11564                           
 11565                           ; BSR set to: 0
 11566  0132FA  0100               	movlb	0	; () banked
 11567  0132FC  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 11568  0132FE  25AA               	addwf	(___fladd@a+3)& (0+255),w,b
 11569  013300  0100               	movlb	0	; () banked
 11570  013302  6FB4               	movwf	___fladd@aexp& (0+255),b
 11571                           
 11572                           ; BSR set to: 0
 11573  013304  0100               	movlb	0	; () banked
 11574  013306  AFA9               	btfss	(___fladd@a+2)& (0+255),7,b
 11575  013308  D002               	goto	l7496
 11576                           
 11577                           ; BSR set to: 0
 11578  01330A  0100               	movlb	0	; () banked
 11579  01330C  81B4               	bsf	___fladd@aexp& (0+255),0,b
 11580  01330E                     l7496:
 11581                           
 11582                           ; BSR set to: 0
 11583  01330E  0100               	movlb	0	; () banked
 11584  013310  51B4               	movf	___fladd@aexp& (0+255),w,b
 11585  013312  0100               	movlb	0	; () banked
 11586  013314  B4D8               	btfsc	status,2,c
 11587  013316  D012               	goto	l7506
 11588                           
 11589                           ; BSR set to: 0
 11590  013318  0100               	movlb	0	; () banked
 11591  01331A  29B4               	incf	___fladd@aexp& (0+255),w,b
 11592  01331C  A4D8               	btfss	status,2,c
 11593  01331E  D009               	goto	l7502
 11594                           
 11595                           ; BSR set to: 0
 11596  013320  0E00               	movlw	0
 11597  013322  0100               	movlb	0	; () banked
 11598  013324  6FA7               	movwf	___fladd@a& (0+255),b
 11599  013326  0E00               	movlw	0
 11600  013328  6FA8               	movwf	(___fladd@a+1)& (0+255),b
 11601  01332A  0E00               	movlw	0
 11602  01332C  6FA9               	movwf	(___fladd@a+2)& (0+255),b
 11603  01332E  0E00               	movlw	0
 11604  013330  6FAA               	movwf	(___fladd@a+3)& (0+255),b
 11605  013332                     l7502:
 11606                           
 11607                           ; BSR set to: 0
 11608  013332  0100               	movlb	0	; () banked
 11609  013334  8FA9               	bsf	(___fladd@a+2)& (0+255),7,b
 11610                           
 11611                           ; BSR set to: 0
 11612  013336  0E00               	movlw	0
 11613  013338  0100               	movlb	0	; () banked
 11614  01333A  D008               	goto	L10
 11615  01333C                     l7506:
 11616                           
 11617                           ; BSR set to: 0
 11618  01333C  0E00               	movlw	0
 11619  01333E  0100               	movlb	0	; () banked
 11620  013340  6FA7               	movwf	___fladd@a& (0+255),b
 11621  013342  0E00               	movlw	0
 11622  013344  6FA8               	movwf	(___fladd@a+1)& (0+255),b
 11623  013346  0E00               	movlw	0
 11624  013348  6FA9               	movwf	(___fladd@a+2)& (0+255),b
 11625  01334A  0E00               	movlw	0
 11626  01334C                     L10:
 11627  01334C  6FAA               	movwf	(___fladd@a+3)& (0+255),b
 11628                           
 11629                           ; BSR set to: 0
 11630                           
 11631                           ; BSR set to: 0
 11632  01334E  0100               	movlb	0	; () banked
 11633  013350  51B5               	movf	___fladd@bexp& (0+255),w,b
 11634  013352  0100               	movlb	0	; () banked
 11635  013354  5DB4               	subwf	___fladd@aexp& (0+255),w,b
 11636  013356  B0D8               	btfsc	status,0,c
 11637  013358  D024               	goto	l7544
 11638                           
 11639                           ; BSR set to: 0
 11640  01335A  0100               	movlb	0	; () banked
 11641  01335C  ADB3               	btfss	___fladd@signs& (0+255),6,b
 11642  01335E  D003               	goto	l7514
 11643                           
 11644                           ; BSR set to: 0
 11645  013360  0E80               	movlw	128
 11646  013362  0100               	movlb	0	; () banked
 11647  013364  1BB3               	xorwf	___fladd@signs& (0+255),f,b
 11648  013366                     l7514:
 11649                           
 11650                           ; BSR set to: 0
 11651  013366  C0B5  F0B6         	movff	___fladd@bexp,___fladd@grs
 11652                           
 11653                           ; BSR set to: 0
 11654  01336A  C0B4  F0B5         	movff	___fladd@aexp,___fladd@bexp
 11655                           
 11656                           ; BSR set to: 0
 11657  01336E  C0B6  F0B4         	movff	___fladd@grs,___fladd@aexp
 11658                           
 11659                           ; BSR set to: 0
 11660  013372  C0A3  F0B6         	movff	___fladd@b,___fladd@grs
 11661                           
 11662                           ; BSR set to: 0
 11663  013376  C0A7  F0A3         	movff	___fladd@a,___fladd@b
 11664                           
 11665                           ; BSR set to: 0
 11666  01337A  C0B6  F0A7         	movff	___fladd@grs,___fladd@a
 11667                           
 11668                           ; BSR set to: 0
 11669  01337E  C0A4  F0B6         	movff	___fladd@b+1,___fladd@grs
 11670                           
 11671                           ; BSR set to: 0
 11672  013382  C0A8  F0A4         	movff	___fladd@a+1,___fladd@b+1
 11673                           
 11674                           ; BSR set to: 0
 11675  013386  C0B6  F0A8         	movff	___fladd@grs,___fladd@a+1
 11676                           
 11677                           ; BSR set to: 0
 11678  01338A  C0A5  F0B6         	movff	___fladd@b+2,___fladd@grs
 11679                           
 11680                           ; BSR set to: 0
 11681  01338E  C0A9  F0A5         	movff	___fladd@a+2,___fladd@b+2
 11682                           
 11683                           ; BSR set to: 0
 11684  013392  C0B6  F0A9         	movff	___fladd@grs,___fladd@a+2
 11685                           
 11686                           ; BSR set to: 0
 11687  013396  C0A6  F0B6         	movff	___fladd@b+3,___fladd@grs
 11688                           
 11689                           ; BSR set to: 0
 11690  01339A  C0AA  F0A6         	movff	___fladd@a+3,___fladd@b+3
 11691                           
 11692                           ; BSR set to: 0
 11693  01339E  C0B6  F0AA         	movff	___fladd@grs,___fladd@a+3
 11694  0133A2                     l7544:
 11695                           
 11696                           ; BSR set to: 0
 11697  0133A2  0E00               	movlw	0
 11698  0133A4  0100               	movlb	0	; () banked
 11699  0133A6  6FB6               	movwf	___fladd@grs& (0+255),b
 11700                           
 11701                           ; BSR set to: 0
 11702  0133A8  0100               	movlb	0	; () banked
 11703  0133AA  51B5               	movf	___fladd@bexp& (0+255),w,b
 11704  0133AC  0100               	movlb	0	; () banked
 11705  0133AE  6FAB               	movwf	??___fladd& (0+255),b
 11706  0133B0  6BAC               	clrf	(??___fladd+1)& (0+255),b
 11707  0133B2  0100               	movlb	0	; () banked
 11708  0133B4  1FAB               	comf	??___fladd& (0+255),f,b
 11709  0133B6  1FAC               	comf	(??___fladd+1)& (0+255),f,b
 11710  0133B8  4BAB               	infsnz	??___fladd& (0+255),f,b
 11711  0133BA  2BAC               	incf	(??___fladd+1)& (0+255),f,b
 11712  0133BC  0100               	movlb	0	; () banked
 11713  0133BE  51B4               	movf	___fladd@aexp& (0+255),w,b
 11714  0133C0  0100               	movlb	0	; () banked
 11715  0133C2  6FAD               	movwf	(??___fladd+2)& (0+255),b
 11716  0133C4  6BAE               	clrf	(??___fladd+3)& (0+255),b
 11717  0133C6  0100               	movlb	0	; () banked
 11718  0133C8  51AB               	movf	??___fladd& (0+255),w,b
 11719  0133CA  0100               	movlb	0	; () banked
 11720  0133CC  27AD               	addwf	(??___fladd+2)& (0+255),f,b
 11721  0133CE  0100               	movlb	0	; () banked
 11722  0133D0  51AC               	movf	(??___fladd+1)& (0+255),w,b
 11723  0133D2  0100               	movlb	0	; () banked
 11724  0133D4  23AE               	addwfc	(??___fladd+3)& (0+255),f,b
 11725  0133D6  0100               	movlb	0	; () banked
 11726  0133D8  BFAE               	btfsc	(??___fladd+3)& (0+255),7,b
 11727  0133DA  D03D               	goto	l1465
 11728  0133DC  0100               	movlb	0	; () banked
 11729  0133DE  51AE               	movf	(??___fladd+3)& (0+255),w,b
 11730  0133E0  E105               	bnz	u9800
 11731  0133E2  0E1A               	movlw	26
 11732  0133E4  0100               	movlb	0	; () banked
 11733  0133E6  5DAD               	subwf	(??___fladd+2)& (0+255),w,b
 11734  0133E8  A0D8               	btfss	status,0,c
 11735  0133EA  D035               	goto	l1465
 11736  0133EC                     u9800:
 11737                           
 11738                           ; BSR set to: 0
 11739  0133EC  0100               	movlb	0	; () banked
 11740  0133EE  51A3               	movf	___fladd@b& (0+255),w,b
 11741  0133F0  0100               	movlb	0	; () banked
 11742  0133F2  11A4               	iorwf	(___fladd@b+1)& (0+255),w,b
 11743  0133F4  0100               	movlb	0	; () banked
 11744  0133F6  11A5               	iorwf	(___fladd@b+2)& (0+255),w,b
 11745  0133F8  0100               	movlb	0	; () banked
 11746  0133FA  11A6               	iorwf	(___fladd@b+3)& (0+255),w,b
 11747  0133FC  B4D8               	btfsc	status,2,c
 11748  0133FE  D002               	goto	u9810
 11749  013400  0E01               	movlw	1
 11750  013402  D001               	goto	u9820
 11751  013404                     u9810:
 11752  013404  0E00               	movlw	0
 11753  013406                     u9820:
 11754  013406  0100               	movlb	0	; () banked
 11755  013408  6FB6               	movwf	___fladd@grs& (0+255),b
 11756                           
 11757                           ; BSR set to: 0
 11758  01340A  0E00               	movlw	0
 11759  01340C  0100               	movlb	0	; () banked
 11760  01340E  6FA3               	movwf	___fladd@b& (0+255),b
 11761  013410  0E00               	movlw	0
 11762  013412  6FA4               	movwf	(___fladd@b+1)& (0+255),b
 11763  013414  0E00               	movlw	0
 11764  013416  6FA5               	movwf	(___fladd@b+2)& (0+255),b
 11765  013418  0E00               	movlw	0
 11766  01341A  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 11767                           
 11768                           ; BSR set to: 0
 11769  01341C  C0B4  F0B5         	movff	___fladd@aexp,___fladd@bexp
 11770  013420  D020               	goto	l1464
 11771  013422                     l1466:
 11772                           
 11773                           ; BSR set to: 0
 11774  013422  0100               	movlb	0	; () banked
 11775  013424  A1B6               	btfss	___fladd@grs& (0+255),0,b
 11776  013426  D007               	goto	l7556
 11777                           
 11778                           ; BSR set to: 0
 11779  013428  0100               	movlb	0	; () banked
 11780  01342A  90D8               	bcf	status,0,c
 11781  01342C  31B6               	rrcf	___fladd@grs& (0+255),w,b
 11782  01342E  0901               	iorlw	1
 11783  013430  0100               	movlb	0	; () banked
 11784  013432  6FB6               	movwf	___fladd@grs& (0+255),b
 11785  013434  D003               	goto	l7558
 11786  013436                     l7556:
 11787                           
 11788                           ; BSR set to: 0
 11789  013436  0100               	movlb	0	; () banked
 11790  013438  90D8               	bcf	status,0,c
 11791  01343A  33B6               	rrcf	___fladd@grs& (0+255),f,b
 11792  01343C                     l7558:
 11793                           
 11794                           ; BSR set to: 0
 11795  01343C  0100               	movlb	0	; () banked
 11796  01343E  A1A3               	btfss	___fladd@b& (0+255),0,b
 11797  013440  D002               	goto	l7562
 11798                           
 11799                           ; BSR set to: 0
 11800  013442  0100               	movlb	0	; () banked
 11801  013444  8FB6               	bsf	___fladd@grs& (0+255),7,b
 11802  013446                     l7562:
 11803                           
 11804                           ; BSR set to: 0
 11805  013446  0100               	movlb	0	; () banked
 11806  013448  35A6               	rlcf	(___fladd@b+3)& (0+255),w,b
 11807  01344A  33A6               	rrcf	(___fladd@b+3)& (0+255),f,b
 11808  01344C  33A5               	rrcf	(___fladd@b+2)& (0+255),f,b
 11809  01344E  33A4               	rrcf	(___fladd@b+1)& (0+255),f,b
 11810  013450  33A3               	rrcf	___fladd@b& (0+255),f,b
 11811                           
 11812                           ; BSR set to: 0
 11813  013452  0100               	movlb	0	; () banked
 11814  013454  2BB5               	incf	___fladd@bexp& (0+255),f,b
 11815  013456                     l1465:
 11816                           
 11817                           ; BSR set to: 0
 11818  013456  0100               	movlb	0	; () banked
 11819  013458  51B4               	movf	___fladd@aexp& (0+255),w,b
 11820  01345A  0100               	movlb	0	; () banked
 11821  01345C  5DB5               	subwf	___fladd@bexp& (0+255),w,b
 11822  01345E  A0D8               	btfss	status,0,c
 11823  013460  D7E0               	goto	l1466
 11824  013462                     l1464:
 11825                           
 11826                           ; BSR set to: 0
 11827  013462  0100               	movlb	0	; () banked
 11828  013464  BDB3               	btfsc	___fladd@signs& (0+255),6,b
 11829  013466  D03F               	goto	l7590
 11830                           
 11831                           ; BSR set to: 0
 11832  013468  0100               	movlb	0	; () banked
 11833  01346A  51B5               	movf	___fladd@bexp& (0+255),w,b
 11834  01346C  0100               	movlb	0	; () banked
 11835  01346E  A4D8               	btfss	status,2,c
 11836  013470  D00A               	goto	l7572
 11837                           
 11838                           ; BSR set to: 0
 11839  013472  0E00               	movlw	0
 11840  013474  0100               	movlb	0	; () banked
 11841  013476  6FA3               	movwf	?___fladd& (0+255),b
 11842  013478  0E00               	movlw	0
 11843  01347A  6FA4               	movwf	(?___fladd+1)& (0+255),b
 11844  01347C  0E00               	movlw	0
 11845  01347E  6FA5               	movwf	(?___fladd+2)& (0+255),b
 11846  013480  0E00               	movlw	0
 11847  013482  6FA6               	movwf	(?___fladd+3)& (0+255),b
 11848                           
 11849                           ; BSR set to: 0
 11850  013484  0012               	return	
 11851  013486                     l7572:
 11852                           
 11853                           ; BSR set to: 0
 11854  013486  0100               	movlb	0	; () banked
 11855  013488  51A7               	movf	___fladd@a& (0+255),w,b
 11856  01348A  0100               	movlb	0	; () banked
 11857  01348C  27A3               	addwf	___fladd@b& (0+255),f,b
 11858  01348E  0100               	movlb	0	; () banked
 11859  013490  51A8               	movf	(___fladd@a+1)& (0+255),w,b
 11860  013492  0100               	movlb	0	; () banked
 11861  013494  23A4               	addwfc	(___fladd@b+1)& (0+255),f,b
 11862  013496  0100               	movlb	0	; () banked
 11863  013498  51A9               	movf	(___fladd@a+2)& (0+255),w,b
 11864  01349A  0100               	movlb	0	; () banked
 11865  01349C  23A5               	addwfc	(___fladd@b+2)& (0+255),f,b
 11866  01349E  0100               	movlb	0	; () banked
 11867  0134A0  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 11868  0134A2  0100               	movlb	0	; () banked
 11869  0134A4  23A6               	addwfc	(___fladd@b+3)& (0+255),f,b
 11870                           
 11871                           ; BSR set to: 0
 11872  0134A6  0100               	movlb	0	; () banked
 11873  0134A8  A1A6               	btfss	(___fladd@b+3)& (0+255),0,b
 11874  0134AA  D0CC               	goto	l7626
 11875                           
 11876                           ; BSR set to: 0
 11877  0134AC  0100               	movlb	0	; () banked
 11878  0134AE  A1B6               	btfss	___fladd@grs& (0+255),0,b
 11879  0134B0  D009               	goto	l7580
 11880                           
 11881                           ; BSR set to: 0
 11882  0134B2  0100               	movlb	0	; () banked
 11883  0134B4  90D8               	bcf	status,0,c
 11884  0134B6  33B6               	rrcf	___fladd@grs& (0+255),f,b
 11885  0134B8  0100               	movlb	0	; () banked
 11886  0134BA  51B6               	movf	___fladd@grs& (0+255),w,b
 11887  0134BC  0901               	iorlw	1
 11888  0134BE  0100               	movlb	0	; () banked
 11889  0134C0  6FB6               	movwf	___fladd@grs& (0+255),b
 11890  0134C2  D003               	goto	l7582
 11891  0134C4                     l7580:
 11892                           
 11893                           ; BSR set to: 0
 11894  0134C4  0100               	movlb	0	; () banked
 11895  0134C6  90D8               	bcf	status,0,c
 11896  0134C8  33B6               	rrcf	___fladd@grs& (0+255),f,b
 11897  0134CA                     l7582:
 11898                           
 11899                           ; BSR set to: 0
 11900  0134CA  0100               	movlb	0	; () banked
 11901  0134CC  A1A3               	btfss	___fladd@b& (0+255),0,b
 11902  0134CE  D002               	goto	l7586
 11903                           
 11904                           ; BSR set to: 0
 11905  0134D0  0100               	movlb	0	; () banked
 11906  0134D2  8FB6               	bsf	___fladd@grs& (0+255),7,b
 11907  0134D4                     l7586:
 11908                           
 11909                           ; BSR set to: 0
 11910  0134D4  0100               	movlb	0	; () banked
 11911  0134D6  35A6               	rlcf	(___fladd@b+3)& (0+255),w,b
 11912  0134D8  33A6               	rrcf	(___fladd@b+3)& (0+255),f,b
 11913  0134DA  33A5               	rrcf	(___fladd@b+2)& (0+255),f,b
 11914  0134DC  33A4               	rrcf	(___fladd@b+1)& (0+255),f,b
 11915  0134DE  33A3               	rrcf	___fladd@b& (0+255),f,b
 11916                           
 11917                           ; BSR set to: 0
 11918  0134E0  0100               	movlb	0	; () banked
 11919  0134E2  2BB5               	incf	___fladd@bexp& (0+255),f,b
 11920                           
 11921                           ; BSR set to: 0
 11922  0134E4  D0AF               	goto	l7626
 11923  0134E6                     l7590:
 11924                           
 11925                           ; BSR set to: 0
 11926  0134E6  0100               	movlb	0	; () banked
 11927  0134E8  51A7               	movf	___fladd@a& (0+255),w,b
 11928  0134EA  0100               	movlb	0	; () banked
 11929  0134EC  5DA3               	subwf	___fladd@b& (0+255),w,b
 11930  0134EE  0100               	movlb	0	; () banked
 11931  0134F0  51A8               	movf	(___fladd@a+1)& (0+255),w,b
 11932  0134F2  0100               	movlb	0	; () banked
 11933  0134F4  59A4               	subwfb	(___fladd@b+1)& (0+255),w,b
 11934  0134F6  0100               	movlb	0	; () banked
 11935  0134F8  51A9               	movf	(___fladd@a+2)& (0+255),w,b
 11936  0134FA  0100               	movlb	0	; () banked
 11937  0134FC  59A5               	subwfb	(___fladd@b+2)& (0+255),w,b
 11938  0134FE  0100               	movlb	0	; () banked
 11939  013500  51A6               	movf	(___fladd@b+3)& (0+255),w,b
 11940  013502  0A80               	xorlw	128
 11941  013504  0100               	movlb	0	; () banked
 11942  013506  6FAB               	movwf	??___fladd& (0+255),b
 11943  013508  0100               	movlb	0	; () banked
 11944  01350A  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 11945  01350C  0A80               	xorlw	128
 11946  01350E  0100               	movlb	0	; () banked
 11947  013510  59AB               	subwfb	??___fladd& (0+255),w,b
 11948  013512  B0D8               	btfsc	status,0,c
 11949  013514  D050               	goto	l7600
 11950                           
 11951                           ; BSR set to: 0
 11952  013516  C0A3  F0AB         	movff	___fladd@b,??___fladd
 11953  01351A  C0A4  F0AC         	movff	___fladd@b+1,??___fladd+1
 11954  01351E  C0A5  F0AD         	movff	___fladd@b+2,??___fladd+2
 11955  013522  C0A6  F0AE         	movff	___fladd@b+3,??___fladd+3
 11956  013526  0100               	movlb	0	; () banked
 11957  013528  1FAB               	comf	??___fladd& (0+255),f,b
 11958  01352A  1FAC               	comf	(??___fladd+1)& (0+255),f,b
 11959  01352C  1FAD               	comf	(??___fladd+2)& (0+255),f,b
 11960  01352E  1FAE               	comf	(??___fladd+3)& (0+255),f,b
 11961  013530  2BAB               	incf	??___fladd& (0+255),f,b
 11962  013532  0E00               	movlw	0
 11963  013534  23AC               	addwfc	(??___fladd+1)& (0+255),f,b
 11964  013536  23AD               	addwfc	(??___fladd+2)& (0+255),f,b
 11965  013538  23AE               	addwfc	(??___fladd+3)& (0+255),f,b
 11966  01353A  0100               	movlb	0	; () banked
 11967  01353C  51A7               	movf	___fladd@a& (0+255),w,b
 11968  01353E  0100               	movlb	0	; () banked
 11969  013540  25AB               	addwf	??___fladd& (0+255),w,b
 11970  013542  0100               	movlb	0	; () banked
 11971  013544  6FAF               	movwf	(??___fladd+4)& (0+255),b
 11972  013546  0100               	movlb	0	; () banked
 11973  013548  51A8               	movf	(___fladd@a+1)& (0+255),w,b
 11974  01354A  0100               	movlb	0	; () banked
 11975  01354C  21AC               	addwfc	(??___fladd+1)& (0+255),w,b
 11976  01354E  0100               	movlb	0	; () banked
 11977  013550  6FB0               	movwf	(??___fladd+5)& (0+255),b
 11978  013552  0100               	movlb	0	; () banked
 11979  013554  51A9               	movf	(___fladd@a+2)& (0+255),w,b
 11980  013556  0100               	movlb	0	; () banked
 11981  013558  21AD               	addwfc	(??___fladd+2)& (0+255),w,b
 11982  01355A  0100               	movlb	0	; () banked
 11983  01355C  6FB1               	movwf	(??___fladd+6)& (0+255),b
 11984  01355E  0100               	movlb	0	; () banked
 11985  013560  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 11986  013562  0100               	movlb	0	; () banked
 11987  013564  21AE               	addwfc	(??___fladd+3)& (0+255),w,b
 11988  013566  0100               	movlb	0	; () banked
 11989  013568  6FB2               	movwf	(??___fladd+7)& (0+255),b
 11990  01356A  0EFF               	movlw	255
 11991  01356C  0100               	movlb	0	; () banked
 11992  01356E  25AF               	addwf	(??___fladd+4)& (0+255),w,b
 11993  013570  0100               	movlb	0	; () banked
 11994  013572  6FA3               	movwf	___fladd@b& (0+255),b
 11995  013574  0EFF               	movlw	255
 11996  013576  0100               	movlb	0	; () banked
 11997  013578  21B0               	addwfc	(??___fladd+5)& (0+255),w,b
 11998  01357A  0100               	movlb	0	; () banked
 11999  01357C  6FA4               	movwf	(___fladd@b+1)& (0+255),b
 12000  01357E  0EFF               	movlw	255
 12001  013580  0100               	movlb	0	; () banked
 12002  013582  21B1               	addwfc	(??___fladd+6)& (0+255),w,b
 12003  013584  0100               	movlb	0	; () banked
 12004  013586  6FA5               	movwf	(___fladd@b+2)& (0+255),b
 12005  013588  0EFF               	movlw	255
 12006  01358A  0100               	movlb	0	; () banked
 12007  01358C  21B2               	addwfc	(??___fladd+7)& (0+255),w,b
 12008  01358E  0100               	movlb	0	; () banked
 12009  013590  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 12010  013592  0E80               	movlw	128
 12011  013594  0100               	movlb	0	; () banked
 12012  013596  1BB3               	xorwf	___fladd@signs& (0+255),f,b
 12013                           
 12014                           ; BSR set to: 0
 12015  013598  0100               	movlb	0	; () banked
 12016  01359A  6DB6               	negf	___fladd@grs& (0+255),b
 12017                           
 12018                           ; BSR set to: 0
 12019  01359C  0100               	movlb	0	; () banked
 12020  01359E  51B6               	movf	___fladd@grs& (0+255),w,b
 12021  0135A0  0100               	movlb	0	; () banked
 12022  0135A2  A4D8               	btfss	status,2,c
 12023  0135A4  D018               	goto	l1481
 12024                           
 12025                           ; BSR set to: 0
 12026  0135A6  0E01               	movlw	1
 12027  0135A8  0100               	movlb	0	; () banked
 12028  0135AA  27A3               	addwf	___fladd@b& (0+255),f,b
 12029  0135AC  0E00               	movlw	0
 12030  0135AE  23A4               	addwfc	(___fladd@b+1)& (0+255),f,b
 12031  0135B0  23A5               	addwfc	(___fladd@b+2)& (0+255),f,b
 12032  0135B2  23A6               	addwfc	(___fladd@b+3)& (0+255),f,b
 12033                           
 12034                           ; BSR set to: 0
 12035  0135B4  D010               	goto	l1481
 12036  0135B6                     l7600:
 12037                           
 12038                           ; BSR set to: 0
 12039  0135B6  0100               	movlb	0	; () banked
 12040  0135B8  51A7               	movf	___fladd@a& (0+255),w,b
 12041  0135BA  0100               	movlb	0	; () banked
 12042  0135BC  5FA3               	subwf	___fladd@b& (0+255),f,b
 12043  0135BE  0100               	movlb	0	; () banked
 12044  0135C0  51A8               	movf	(___fladd@a+1)& (0+255),w,b
 12045  0135C2  0100               	movlb	0	; () banked
 12046  0135C4  5BA4               	subwfb	(___fladd@b+1)& (0+255),f,b
 12047  0135C6  0100               	movlb	0	; () banked
 12048  0135C8  51A9               	movf	(___fladd@a+2)& (0+255),w,b
 12049  0135CA  0100               	movlb	0	; () banked
 12050  0135CC  5BA5               	subwfb	(___fladd@b+2)& (0+255),f,b
 12051  0135CE  0100               	movlb	0	; () banked
 12052  0135D0  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 12053  0135D2  0100               	movlb	0	; () banked
 12054  0135D4  5BA6               	subwfb	(___fladd@b+3)& (0+255),f,b
 12055  0135D6                     l1481:
 12056                           
 12057                           ; BSR set to: 0
 12058  0135D6  0100               	movlb	0	; () banked
 12059  0135D8  51A3               	movf	___fladd@b& (0+255),w,b
 12060  0135DA  0100               	movlb	0	; () banked
 12061  0135DC  11A4               	iorwf	(___fladd@b+1)& (0+255),w,b
 12062  0135DE  0100               	movlb	0	; () banked
 12063  0135E0  11A5               	iorwf	(___fladd@b+2)& (0+255),w,b
 12064  0135E2  0100               	movlb	0	; () banked
 12065  0135E4  11A6               	iorwf	(___fladd@b+3)& (0+255),w,b
 12066  0135E6  A4D8               	btfss	status,2,c
 12067  0135E8  D02A               	goto	l7624
 12068                           
 12069                           ; BSR set to: 0
 12070  0135EA  0100               	movlb	0	; () banked
 12071  0135EC  51B6               	movf	___fladd@grs& (0+255),w,b
 12072  0135EE  0100               	movlb	0	; () banked
 12073  0135F0  A4D8               	btfss	status,2,c
 12074  0135F2  D025               	goto	l7624
 12075                           
 12076                           ; BSR set to: 0
 12077  0135F4  0E00               	movlw	0
 12078  0135F6  0100               	movlb	0	; () banked
 12079  0135F8  6FA3               	movwf	?___fladd& (0+255),b
 12080  0135FA  0E00               	movlw	0
 12081  0135FC  6FA4               	movwf	(?___fladd+1)& (0+255),b
 12082  0135FE  0E00               	movlw	0
 12083  013600  6FA5               	movwf	(?___fladd+2)& (0+255),b
 12084  013602  0E00               	movlw	0
 12085  013604  6FA6               	movwf	(?___fladd+3)& (0+255),b
 12086                           
 12087                           ; BSR set to: 0
 12088  013606  0012               	return	
 12089  013608                     l7608:
 12090                           
 12091                           ; BSR set to: 0
 12092  013608  0100               	movlb	0	; () banked
 12093  01360A  90D8               	bcf	status,0,c
 12094  01360C  37A3               	rlcf	___fladd@b& (0+255),f,b
 12095  01360E  37A4               	rlcf	(___fladd@b+1)& (0+255),f,b
 12096  013610  37A5               	rlcf	(___fladd@b+2)& (0+255),f,b
 12097  013612  37A6               	rlcf	(___fladd@b+3)& (0+255),f,b
 12098                           
 12099                           ; BSR set to: 0
 12100  013614  0100               	movlb	0	; () banked
 12101  013616  AFB6               	btfss	___fladd@grs& (0+255),7,b
 12102  013618  D002               	goto	l7614
 12103                           
 12104                           ; BSR set to: 0
 12105  01361A  0100               	movlb	0	; () banked
 12106  01361C  81A3               	bsf	___fladd@b& (0+255),0,b
 12107  01361E                     l7614:
 12108                           
 12109                           ; BSR set to: 0
 12110  01361E  0100               	movlb	0	; () banked
 12111  013620  A1B6               	btfss	___fladd@grs& (0+255),0,b
 12112  013622  D003               	goto	l7618
 12113                           
 12114                           ; BSR set to: 0
 12115  013624  80D8               	bsf	status,0,c
 12116  013626  0100               	movlb	0	; () banked
 12117  013628  D002               	goto	L11
 12118  01362A                     l7618:
 12119                           
 12120                           ; BSR set to: 0
 12121  01362A  0100               	movlb	0	; () banked
 12122  01362C  90D8               	bcf	status,0,c
 12123  01362E                     L11:
 12124  01362E  37B6               	rlcf	___fladd@grs& (0+255),f,b
 12125                           
 12126                           ; BSR set to: 0
 12127                           
 12128                           ; BSR set to: 0
 12129  013630  0100               	movlb	0	; () banked
 12130  013632  51B5               	movf	___fladd@bexp& (0+255),w,b
 12131  013634  0100               	movlb	0	; () banked
 12132  013636  B4D8               	btfsc	status,2,c
 12133  013638  D002               	goto	l7624
 12134                           
 12135                           ; BSR set to: 0
 12136  01363A  0100               	movlb	0	; () banked
 12137  01363C  07B5               	decf	___fladd@bexp& (0+255),f,b
 12138  01363E                     l7624:
 12139                           
 12140                           ; BSR set to: 0
 12141  01363E  0100               	movlb	0	; () banked
 12142  013640  AFA5               	btfss	(___fladd@b+2)& (0+255),7,b
 12143  013642  D7E2               	goto	l7608
 12144  013644                     l7626:
 12145                           
 12146                           ; BSR set to: 0
 12147  013644  0E00               	movlw	0
 12148  013646  0100               	movlb	0	; () banked
 12149  013648  6FB4               	movwf	___fladd@aexp& (0+255),b
 12150                           
 12151                           ; BSR set to: 0
 12152  01364A  0100               	movlb	0	; () banked
 12153  01364C  AFB6               	btfss	___fladd@grs& (0+255),7,b
 12154  01364E  D00D               	goto	l1490
 12155                           
 12156                           ; BSR set to: 0
 12157  013650  C0B6  F0AB         	movff	___fladd@grs,??___fladd
 12158  013654  0E7F               	movlw	127
 12159  013656  0100               	movlb	0	; () banked
 12160  013658  17AB               	andwf	??___fladd& (0+255),f,b
 12161  01365A  A4D8               	btfss	status,2,c
 12162  01365C  D003               	goto	l7634
 12163                           
 12164                           ; BSR set to: 0
 12165                           
 12166                           ; BSR set to: 0
 12167  01365E  0100               	movlb	0	; () banked
 12168  013660  A1A3               	btfss	___fladd@b& (0+255),0,b
 12169  013662  D003               	goto	l1490
 12170  013664                     l7634:
 12171                           
 12172                           ; BSR set to: 0
 12173  013664  0E01               	movlw	1
 12174  013666  0100               	movlb	0	; () banked
 12175  013668  6FB4               	movwf	___fladd@aexp& (0+255),b
 12176  01366A                     l1490:
 12177                           
 12178                           ; BSR set to: 0
 12179  01366A  0100               	movlb	0	; () banked
 12180  01366C  51B4               	movf	___fladd@aexp& (0+255),w,b
 12181  01366E  0100               	movlb	0	; () banked
 12182  013670  B4D8               	btfsc	status,2,c
 12183  013672  D026               	goto	l7644
 12184                           
 12185                           ; BSR set to: 0
 12186  013674  0E01               	movlw	1
 12187  013676  0100               	movlb	0	; () banked
 12188  013678  27A3               	addwf	___fladd@b& (0+255),f,b
 12189  01367A  0E00               	movlw	0
 12190  01367C  23A4               	addwfc	(___fladd@b+1)& (0+255),f,b
 12191  01367E  23A5               	addwfc	(___fladd@b+2)& (0+255),f,b
 12192  013680  23A6               	addwfc	(___fladd@b+3)& (0+255),f,b
 12193                           
 12194                           ; BSR set to: 0
 12195  013682  0100               	movlb	0	; () banked
 12196  013684  A1A6               	btfss	(___fladd@b+3)& (0+255),0,b
 12197  013686  D01C               	goto	l7644
 12198                           
 12199                           ; BSR set to: 0
 12200  013688  C0A3  F0AB         	movff	___fladd@b,??___fladd
 12201  01368C  C0A4  F0AC         	movff	___fladd@b+1,??___fladd+1
 12202  013690  C0A5  F0AD         	movff	___fladd@b+2,??___fladd+2
 12203  013694  C0A6  F0AE         	movff	___fladd@b+3,??___fladd+3
 12204  013698  0100               	movlb	0	; () banked
 12205  01369A  35AE               	rlcf	(??___fladd+3)& (0+255),w,b
 12206  01369C  33AE               	rrcf	(??___fladd+3)& (0+255),f,b
 12207  01369E  33AD               	rrcf	(??___fladd+2)& (0+255),f,b
 12208  0136A0  33AC               	rrcf	(??___fladd+1)& (0+255),f,b
 12209  0136A2  33AB               	rrcf	??___fladd& (0+255),f,b
 12210  0136A4  C0AB  F0A3         	movff	??___fladd,___fladd@b
 12211  0136A8  C0AC  F0A4         	movff	??___fladd+1,___fladd@b+1
 12212  0136AC  C0AD  F0A5         	movff	??___fladd+2,___fladd@b+2
 12213  0136B0  C0AE  F0A6         	movff	??___fladd+3,___fladd@b+3
 12214  0136B4  0100               	movlb	0	; () banked
 12215  0136B6  29B5               	incf	___fladd@bexp& (0+255),w,b
 12216  0136B8  B4D8               	btfsc	status,2,c
 12217  0136BA  D002               	goto	l7644
 12218                           
 12219                           ; BSR set to: 0
 12220  0136BC  0100               	movlb	0	; () banked
 12221  0136BE  2BB5               	incf	___fladd@bexp& (0+255),f,b
 12222  0136C0                     l7644:
 12223                           
 12224                           ; BSR set to: 0
 12225  0136C0  0100               	movlb	0	; () banked
 12226  0136C2  29B5               	incf	___fladd@bexp& (0+255),w,b
 12227  0136C4  B4D8               	btfsc	status,2,c
 12228  0136C6  D005               	goto	l7648
 12229                           
 12230                           ; BSR set to: 0
 12231  0136C8  0100               	movlb	0	; () banked
 12232  0136CA  51B5               	movf	___fladd@bexp& (0+255),w,b
 12233  0136CC  0100               	movlb	0	; () banked
 12234  0136CE  A4D8               	btfss	status,2,c
 12235  0136D0  D011               	goto	l7652
 12236  0136D2                     l7648:
 12237                           
 12238                           ; BSR set to: 0
 12239  0136D2  0E00               	movlw	0
 12240  0136D4  0100               	movlb	0	; () banked
 12241  0136D6  6FA3               	movwf	___fladd@b& (0+255),b
 12242  0136D8  0E00               	movlw	0
 12243  0136DA  6FA4               	movwf	(___fladd@b+1)& (0+255),b
 12244  0136DC  0E00               	movlw	0
 12245  0136DE  6FA5               	movwf	(___fladd@b+2)& (0+255),b
 12246  0136E0  0E00               	movlw	0
 12247  0136E2  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 12248  0136E4  0100               	movlb	0	; () banked
 12249  0136E6  51B5               	movf	___fladd@bexp& (0+255),w,b
 12250  0136E8  0100               	movlb	0	; () banked
 12251  0136EA  A4D8               	btfss	status,2,c
 12252  0136EC  D003               	goto	l7652
 12253                           
 12254                           ; BSR set to: 0
 12255  0136EE  0E00               	movlw	0
 12256  0136F0  0100               	movlb	0	; () banked
 12257  0136F2  6FB3               	movwf	___fladd@signs& (0+255),b
 12258  0136F4                     l7652:
 12259                           
 12260                           ; BSR set to: 0
 12261  0136F4  0100               	movlb	0	; () banked
 12262  0136F6  A1B5               	btfss	___fladd@bexp& (0+255),0,b
 12263  0136F8  D003               	goto	l7656
 12264                           
 12265                           ; BSR set to: 0
 12266  0136FA  0100               	movlb	0	; () banked
 12267  0136FC  8FA5               	bsf	(___fladd@b+2)& (0+255),7,b
 12268  0136FE  D002               	goto	l7658
 12269  013700                     l7656:
 12270                           
 12271                           ; BSR set to: 0
 12272  013700  0100               	movlb	0	; () banked
 12273  013702  9FA5               	bcf	(___fladd@b+2)& (0+255),7,b
 12274  013704                     l7658:
 12275                           
 12276                           ; BSR set to: 0
 12277  013704  0100               	movlb	0	; () banked
 12278  013706  90D8               	bcf	status,0,c
 12279  013708  31B5               	rrcf	___fladd@bexp& (0+255),w,b
 12280  01370A  0100               	movlb	0	; () banked
 12281  01370C  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 12282                           
 12283                           ; BSR set to: 0
 12284  01370E  0100               	movlb	0	; () banked
 12285  013710  AFB3               	btfss	___fladd@signs& (0+255),7,b
 12286  013712  D002               	goto	l7664
 12287                           
 12288                           ; BSR set to: 0
 12289  013714  0100               	movlb	0	; () banked
 12290  013716  8FA6               	bsf	(___fladd@b+3)& (0+255),7,b
 12291  013718                     l7664:
 12292                           
 12293                           ; BSR set to: 0
 12294  013718  C0A3  F0A3         	movff	___fladd@b,?___fladd
 12295  01371C  C0A4  F0A4         	movff	___fladd@b+1,?___fladd+1
 12296  013720  C0A5  F0A5         	movff	___fladd@b+2,?___fladd+2
 12297  013724  C0A6  F0A6         	movff	___fladd@b+3,?___fladd+3
 12298  013728  0012               	return	
 12299  01372A                     __end_of___fladd:
 12300                           	opt stack 0
 12301                           tblptru	equ	0xFF8
 12302                           tblptrh	equ	0xFF7
 12303                           tblptrl	equ	0xFF6
 12304                           tablat	equ	0xFF5
 12305                           prodh	equ	0xFF4
 12306                           prodl	equ	0xFF3
 12307                           intcon	equ	0xFF2
 12308                           postinc0	equ	0xFEE
 12309                           wreg	equ	0xFE8
 12310                           indf2	equ	0xFDF
 12311                           postinc2	equ	0xFDE
 12312                           fsr2h	equ	0xFDA
 12313                           fsr2l	equ	0xFD9
 12314                           status	equ	0xFD8
 12315                           
 12316 ;; *************** function ___flneg *****************
 12317 ;; Defined at:
 12318 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 12319 ;; Parameters:    Size  Location     Type
 12320 ;;  f1              4   54[BANK0 ] unsigned char 
 12321 ;; Auto vars:     Size  Location     Type
 12322 ;;		None
 12323 ;; Return value:  Size  Location     Type
 12324 ;;                  4   54[BANK0 ] unsigned char 
 12325 ;; Registers used:
 12326 ;;		wreg, status,2, status,0
 12327 ;; Tracked objects:
 12328 ;;		On entry : 0/0
 12329 ;;		On exit  : 0/0
 12330 ;;		Unchanged: 0/0
 12331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12332 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12335 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12336 ;;Total ram usage:        4 bytes
 12337 ;; Hardware stack levels used:    1
 12338 ;; Hardware stack levels required when called:    3
 12339 ;; This function calls:
 12340 ;;		Nothing
 12341 ;; This function is called by:
 12342 ;;		_main
 12343 ;;		_sprintf
 12344 ;; This function uses a non-reentrant model
 12345 ;;
 12346                           
 12347                           	psect	text23
 12348  015C22                     __ptext23:
 12349                           	opt stack 0
 12350  015C22                     ___flneg:
 12351                           	opt stack 27
 12352                           
 12353                           ; BSR set to: 0
 12354                           ;incstack = 0
 12355  015C22  0100               	movlb	0	; () banked
 12356  015C24  5196               	movf	___flneg@f1& (0+255),w,b
 12357  015C26  0100               	movlb	0	; () banked
 12358  015C28  1197               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12359  015C2A  0100               	movlb	0	; () banked
 12360  015C2C  1198               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12361  015C2E  0100               	movlb	0	; () banked
 12362  015C30  1199               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12363  015C32  B4D8               	btfsc	status,2,c
 12364  015C34  D009               	goto	l8140
 12365                           
 12366                           ; BSR set to: 0
 12367  015C36  0E00               	movlw	0
 12368  015C38  0100               	movlb	0	; () banked
 12369  015C3A  1B96               	xorwf	___flneg@f1& (0+255),f,b
 12370  015C3C  0E00               	movlw	0
 12371  015C3E  1B97               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12372  015C40  0E00               	movlw	0
 12373  015C42  1B98               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12374  015C44  0E80               	movlw	128
 12375  015C46  1B99               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12376  015C48                     l8140:
 12377                           
 12378                           ; BSR set to: 0
 12379  015C48  C096  F096         	movff	___flneg@f1,?___flneg
 12380  015C4C  C097  F097         	movff	___flneg@f1+1,?___flneg+1
 12381  015C50  C098  F098         	movff	___flneg@f1+2,?___flneg+2
 12382  015C54  C099  F099         	movff	___flneg@f1+3,?___flneg+3
 12383  015C58  0012               	return	
 12384  015C5A                     __end_of___flneg:
 12385                           	opt stack 0
 12386                           tblptru	equ	0xFF8
 12387                           tblptrh	equ	0xFF7
 12388                           tblptrl	equ	0xFF6
 12389                           tablat	equ	0xFF5
 12390                           prodh	equ	0xFF4
 12391                           prodl	equ	0xFF3
 12392                           intcon	equ	0xFF2
 12393                           postinc0	equ	0xFEE
 12394                           wreg	equ	0xFE8
 12395                           indf2	equ	0xFDF
 12396                           postinc2	equ	0xFDE
 12397                           fsr2h	equ	0xFDA
 12398                           fsr2l	equ	0xFD9
 12399                           status	equ	0xFD8
 12400                           
 12401 ;; *************** function ___flge *****************
 12402 ;; Defined at:
 12403 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 12404 ;; Parameters:    Size  Location     Type
 12405 ;;  ff1             4   15[BANK0 ] unsigned char 
 12406 ;;  ff2             4   19[BANK0 ] unsigned char 
 12407 ;; Auto vars:     Size  Location     Type
 12408 ;;		None
 12409 ;; Return value:  Size  Location     Type
 12410 ;;		None               void
 12411 ;; Registers used:
 12412 ;;		wreg, status,2, status,0
 12413 ;; Tracked objects:
 12414 ;;		On entry : 0/0
 12415 ;;		On exit  : 0/0
 12416 ;;		Unchanged: 0/0
 12417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12418 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12420 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12421 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12422 ;;Total ram usage:       12 bytes
 12423 ;; Hardware stack levels used:    1
 12424 ;; Hardware stack levels required when called:    3
 12425 ;; This function calls:
 12426 ;;		Nothing
 12427 ;; This function is called by:
 12428 ;;		_sprintf
 12429 ;; This function uses a non-reentrant model
 12430 ;;
 12431                           
 12432                           	psect	text24
 12433  014D36                     __ptext24:
 12434                           	opt stack 0
 12435  014D36                     ___flge:
 12436                           	opt stack 25
 12437                           
 12438                           ; BSR set to: 0
 12439                           ;incstack = 0
 12440  014D36  0E00               	movlw	0
 12441  014D38  0100               	movlb	0	; () banked
 12442  014D3A  156F               	andwf	___flge@ff1& (0+255),w,b
 12443  014D3C  0100               	movlb	0	; () banked
 12444  014D3E  6F77               	movwf	??___flge& (0+255),b
 12445  014D40  0E00               	movlw	0
 12446  014D42  0100               	movlb	0	; () banked
 12447  014D44  1570               	andwf	(___flge@ff1+1)& (0+255),w,b
 12448  014D46  0100               	movlb	0	; () banked
 12449  014D48  6F78               	movwf	(??___flge+1)& (0+255),b
 12450  014D4A  0E80               	movlw	128
 12451  014D4C  0100               	movlb	0	; () banked
 12452  014D4E  1571               	andwf	(___flge@ff1+2)& (0+255),w,b
 12453  014D50  0100               	movlb	0	; () banked
 12454  014D52  6F79               	movwf	(??___flge+2)& (0+255),b
 12455  014D54  0E7F               	movlw	127
 12456  014D56  0100               	movlb	0	; () banked
 12457  014D58  1572               	andwf	(___flge@ff1+3)& (0+255),w,b
 12458  014D5A  0100               	movlb	0	; () banked
 12459  014D5C  6F7A               	movwf	(??___flge+3)& (0+255),b
 12460  014D5E  0100               	movlb	0	; () banked
 12461  014D60  5177               	movf	??___flge& (0+255),w,b
 12462  014D62  0100               	movlb	0	; () banked
 12463  014D64  1178               	iorwf	(??___flge+1)& (0+255),w,b
 12464  014D66  0100               	movlb	0	; () banked
 12465  014D68  1179               	iorwf	(??___flge+2)& (0+255),w,b
 12466  014D6A  0100               	movlb	0	; () banked
 12467  014D6C  117A               	iorwf	(??___flge+3)& (0+255),w,b
 12468  014D6E  A4D8               	btfss	status,2,c
 12469  014D70  D009               	goto	l8118
 12470                           
 12471                           ; BSR set to: 0
 12472  014D72  0E00               	movlw	0
 12473  014D74  0100               	movlb	0	; () banked
 12474  014D76  6F6F               	movwf	___flge@ff1& (0+255),b
 12475  014D78  0E00               	movlw	0
 12476  014D7A  6F70               	movwf	(___flge@ff1+1)& (0+255),b
 12477  014D7C  0E00               	movlw	0
 12478  014D7E  6F71               	movwf	(___flge@ff1+2)& (0+255),b
 12479  014D80  0E00               	movlw	0
 12480  014D82  6F72               	movwf	(___flge@ff1+3)& (0+255),b
 12481  014D84                     l8118:
 12482                           
 12483                           ; BSR set to: 0
 12484  014D84  0E00               	movlw	0
 12485  014D86  0100               	movlb	0	; () banked
 12486  014D88  1573               	andwf	___flge@ff2& (0+255),w,b
 12487  014D8A  0100               	movlb	0	; () banked
 12488  014D8C  6F77               	movwf	??___flge& (0+255),b
 12489  014D8E  0E00               	movlw	0
 12490  014D90  0100               	movlb	0	; () banked
 12491  014D92  1574               	andwf	(___flge@ff2+1)& (0+255),w,b
 12492  014D94  0100               	movlb	0	; () banked
 12493  014D96  6F78               	movwf	(??___flge+1)& (0+255),b
 12494  014D98  0E80               	movlw	128
 12495  014D9A  0100               	movlb	0	; () banked
 12496  014D9C  1575               	andwf	(___flge@ff2+2)& (0+255),w,b
 12497  014D9E  0100               	movlb	0	; () banked
 12498  014DA0  6F79               	movwf	(??___flge+2)& (0+255),b
 12499  014DA2  0E7F               	movlw	127
 12500  014DA4  0100               	movlb	0	; () banked
 12501  014DA6  1576               	andwf	(___flge@ff2+3)& (0+255),w,b
 12502  014DA8  0100               	movlb	0	; () banked
 12503  014DAA  6F7A               	movwf	(??___flge+3)& (0+255),b
 12504  014DAC  0100               	movlb	0	; () banked
 12505  014DAE  5177               	movf	??___flge& (0+255),w,b
 12506  014DB0  0100               	movlb	0	; () banked
 12507  014DB2  1178               	iorwf	(??___flge+1)& (0+255),w,b
 12508  014DB4  0100               	movlb	0	; () banked
 12509  014DB6  1179               	iorwf	(??___flge+2)& (0+255),w,b
 12510  014DB8  0100               	movlb	0	; () banked
 12511  014DBA  117A               	iorwf	(??___flge+3)& (0+255),w,b
 12512  014DBC  A4D8               	btfss	status,2,c
 12513  014DBE  D009               	goto	l8122
 12514                           
 12515                           ; BSR set to: 0
 12516  014DC0  0E00               	movlw	0
 12517  014DC2  0100               	movlb	0	; () banked
 12518  014DC4  6F73               	movwf	___flge@ff2& (0+255),b
 12519  014DC6  0E00               	movlw	0
 12520  014DC8  6F74               	movwf	(___flge@ff2+1)& (0+255),b
 12521  014DCA  0E00               	movlw	0
 12522  014DCC  6F75               	movwf	(___flge@ff2+2)& (0+255),b
 12523  014DCE  0E00               	movlw	0
 12524  014DD0  6F76               	movwf	(___flge@ff2+3)& (0+255),b
 12525  014DD2                     l8122:
 12526                           
 12527                           ; BSR set to: 0
 12528  014DD2  0100               	movlb	0	; () banked
 12529  014DD4  AF72               	btfss	(___flge@ff1+3)& (0+255),7,b
 12530  014DD6  D026               	goto	l8126
 12531                           
 12532                           ; BSR set to: 0
 12533  014DD8  C06F  F077         	movff	___flge@ff1,??___flge
 12534  014DDC  C070  F078         	movff	___flge@ff1+1,??___flge+1
 12535  014DE0  C071  F079         	movff	___flge@ff1+2,??___flge+2
 12536  014DE4  C072  F07A         	movff	___flge@ff1+3,??___flge+3
 12537  014DE8  0100               	movlb	0	; () banked
 12538  014DEA  1F77               	comf	??___flge& (0+255),f,b
 12539  014DEC  1F78               	comf	(??___flge+1)& (0+255),f,b
 12540  014DEE  1F79               	comf	(??___flge+2)& (0+255),f,b
 12541  014DF0  1F7A               	comf	(??___flge+3)& (0+255),f,b
 12542  014DF2  2B77               	incf	??___flge& (0+255),f,b
 12543  014DF4  0E00               	movlw	0
 12544  014DF6  2378               	addwfc	(??___flge+1)& (0+255),f,b
 12545  014DF8  2379               	addwfc	(??___flge+2)& (0+255),f,b
 12546  014DFA  237A               	addwfc	(??___flge+3)& (0+255),f,b
 12547  014DFC  0E00               	movlw	0
 12548  014DFE  0100               	movlb	0	; () banked
 12549  014E00  2577               	addwf	??___flge& (0+255),w,b
 12550  014E02  0100               	movlb	0	; () banked
 12551  014E04  6F6F               	movwf	___flge@ff1& (0+255),b
 12552  014E06  0E00               	movlw	0
 12553  014E08  0100               	movlb	0	; () banked
 12554  014E0A  2178               	addwfc	(??___flge+1)& (0+255),w,b
 12555  014E0C  0100               	movlb	0	; () banked
 12556  014E0E  6F70               	movwf	(___flge@ff1+1)& (0+255),b
 12557  014E10  0E00               	movlw	0
 12558  014E12  0100               	movlb	0	; () banked
 12559  014E14  2179               	addwfc	(??___flge+2)& (0+255),w,b
 12560  014E16  0100               	movlb	0	; () banked
 12561  014E18  6F71               	movwf	(___flge@ff1+2)& (0+255),b
 12562  014E1A  0E80               	movlw	128
 12563  014E1C  0100               	movlb	0	; () banked
 12564  014E1E  217A               	addwfc	(??___flge+3)& (0+255),w,b
 12565  014E20  0100               	movlb	0	; () banked
 12566  014E22  6F72               	movwf	(___flge@ff1+3)& (0+255),b
 12567  014E24                     l8126:
 12568                           
 12569                           ; BSR set to: 0
 12570  014E24  0100               	movlb	0	; () banked
 12571  014E26  AF76               	btfss	(___flge@ff2+3)& (0+255),7,b
 12572  014E28  D026               	goto	l1187
 12573                           
 12574                           ; BSR set to: 0
 12575  014E2A  C073  F077         	movff	___flge@ff2,??___flge
 12576  014E2E  C074  F078         	movff	___flge@ff2+1,??___flge+1
 12577  014E32  C075  F079         	movff	___flge@ff2+2,??___flge+2
 12578  014E36  C076  F07A         	movff	___flge@ff2+3,??___flge+3
 12579  014E3A  0100               	movlb	0	; () banked
 12580  014E3C  1F77               	comf	??___flge& (0+255),f,b
 12581  014E3E  1F78               	comf	(??___flge+1)& (0+255),f,b
 12582  014E40  1F79               	comf	(??___flge+2)& (0+255),f,b
 12583  014E42  1F7A               	comf	(??___flge+3)& (0+255),f,b
 12584  014E44  2B77               	incf	??___flge& (0+255),f,b
 12585  014E46  0E00               	movlw	0
 12586  014E48  2378               	addwfc	(??___flge+1)& (0+255),f,b
 12587  014E4A  2379               	addwfc	(??___flge+2)& (0+255),f,b
 12588  014E4C  237A               	addwfc	(??___flge+3)& (0+255),f,b
 12589  014E4E  0E00               	movlw	0
 12590  014E50  0100               	movlb	0	; () banked
 12591  014E52  2577               	addwf	??___flge& (0+255),w,b
 12592  014E54  0100               	movlb	0	; () banked
 12593  014E56  6F73               	movwf	___flge@ff2& (0+255),b
 12594  014E58  0E00               	movlw	0
 12595  014E5A  0100               	movlb	0	; () banked
 12596  014E5C  2178               	addwfc	(??___flge+1)& (0+255),w,b
 12597  014E5E  0100               	movlb	0	; () banked
 12598  014E60  6F74               	movwf	(___flge@ff2+1)& (0+255),b
 12599  014E62  0E00               	movlw	0
 12600  014E64  0100               	movlb	0	; () banked
 12601  014E66  2179               	addwfc	(??___flge+2)& (0+255),w,b
 12602  014E68  0100               	movlb	0	; () banked
 12603  014E6A  6F75               	movwf	(___flge@ff2+2)& (0+255),b
 12604  014E6C  0E80               	movlw	128
 12605  014E6E  0100               	movlb	0	; () banked
 12606  014E70  217A               	addwfc	(??___flge+3)& (0+255),w,b
 12607  014E72  0100               	movlb	0	; () banked
 12608  014E74  6F76               	movwf	(___flge@ff2+3)& (0+255),b
 12609  014E76                     l1187:
 12610                           
 12611                           ; BSR set to: 0
 12612  014E76  0E00               	movlw	0
 12613  014E78  0100               	movlb	0	; () banked
 12614  014E7A  1B6F               	xorwf	___flge@ff1& (0+255),f,b
 12615  014E7C  0E00               	movlw	0
 12616  014E7E  1B70               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12617  014E80  0E00               	movlw	0
 12618  014E82  1B71               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12619  014E84  0E80               	movlw	128
 12620  014E86  1B72               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12621  014E88  0E00               	movlw	0
 12622  014E8A  0100               	movlb	0	; () banked
 12623  014E8C  1B73               	xorwf	___flge@ff2& (0+255),f,b
 12624  014E8E  0E00               	movlw	0
 12625  014E90  1B74               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12626  014E92  0E00               	movlw	0
 12627  014E94  1B75               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12628  014E96  0E80               	movlw	128
 12629  014E98  1B76               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12630  014E9A  0100               	movlb	0	; () banked
 12631  014E9C  5173               	movf	___flge@ff2& (0+255),w,b
 12632  014E9E  0100               	movlb	0	; () banked
 12633  014EA0  5D6F               	subwf	___flge@ff1& (0+255),w,b
 12634  014EA2  0100               	movlb	0	; () banked
 12635  014EA4  5174               	movf	(___flge@ff2+1)& (0+255),w,b
 12636  014EA6  0100               	movlb	0	; () banked
 12637  014EA8  5970               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12638  014EAA  0100               	movlb	0	; () banked
 12639  014EAC  5175               	movf	(___flge@ff2+2)& (0+255),w,b
 12640  014EAE  0100               	movlb	0	; () banked
 12641  014EB0  5971               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12642  014EB2  0100               	movlb	0	; () banked
 12643  014EB4  5176               	movf	(___flge@ff2+3)& (0+255),w,b
 12644  014EB6  0100               	movlb	0	; () banked
 12645  014EB8  5972               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12646  014EBA  B0D8               	btfsc	status,0,c
 12647  014EBC  D002               	goto	l8132
 12648                           
 12649                           ; BSR set to: 0
 12650  014EBE  90D8               	bcf	status,0,c
 12651  014EC0  0012               	return	
 12652  014EC2                     l8132:
 12653                           
 12654                           ; BSR set to: 0
 12655  014EC2  80D8               	bsf	status,0,c
 12656                           
 12657                           ; BSR set to: 0
 12658  014EC4  0012               	return	
 12659  014EC6                     __end_of___flge:
 12660                           	opt stack 0
 12661                           tblptru	equ	0xFF8
 12662                           tblptrh	equ	0xFF7
 12663                           tblptrl	equ	0xFF6
 12664                           tablat	equ	0xFF5
 12665                           prodh	equ	0xFF4
 12666                           prodl	equ	0xFF3
 12667                           intcon	equ	0xFF2
 12668                           postinc0	equ	0xFEE
 12669                           wreg	equ	0xFE8
 12670                           indf2	equ	0xFDF
 12671                           postinc2	equ	0xFDE
 12672                           fsr2h	equ	0xFDA
 12673                           fsr2l	equ	0xFD9
 12674                           status	equ	0xFD8
 12675                           
 12676 ;; *************** function ___fldiv *****************
 12677 ;; Defined at:
 12678 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 12679 ;; Parameters:    Size  Location     Type
 12680 ;;  b               4   29[BANK0 ] unsigned char 
 12681 ;;  a               4   33[BANK0 ] unsigned char 
 12682 ;; Auto vars:     Size  Location     Type
 12683 ;;  grs             4   48[BANK0 ] unsigned long 
 12684 ;;  rem             4   42[BANK0 ] unsigned long 
 12685 ;;  new_exp         2   46[BANK0 ] int 
 12686 ;;  aexp            1   53[BANK0 ] unsigned char 
 12687 ;;  bexp            1   52[BANK0 ] unsigned char 
 12688 ;;  sign            1   41[BANK0 ] unsigned char 
 12689 ;; Return value:  Size  Location     Type
 12690 ;;                  4   29[BANK0 ] unsigned char 
 12691 ;; Registers used:
 12692 ;;		wreg, status,2, status,0
 12693 ;; Tracked objects:
 12694 ;;		On entry : 0/0
 12695 ;;		On exit  : 0/0
 12696 ;;		Unchanged: 0/0
 12697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12698 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12699 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12700 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12701 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12702 ;;Total ram usage:       25 bytes
 12703 ;; Hardware stack levels used:    1
 12704 ;; Hardware stack levels required when called:    3
 12705 ;; This function calls:
 12706 ;;		Nothing
 12707 ;; This function is called by:
 12708 ;;		_LCD_Handler
 12709 ;; This function uses a non-reentrant model
 12710 ;;
 12711                           
 12712                           	psect	text25
 12713  013BD0                     __ptext25:
 12714                           	opt stack 0
 12715  013BD0                     ___fldiv:
 12716                           	opt stack 26
 12717                           
 12718                           ; BSR set to: 0
 12719                           ;incstack = 0
 12720  013BD0  0100               	movlb	0	; () banked
 12721  013BD2  5180               	movf	(___fldiv@b+3)& (0+255),w,b
 12722  013BD4  0B80               	andlw	128
 12723  013BD6  0100               	movlb	0	; () banked
 12724  013BD8  6F89               	movwf	___fldiv@sign& (0+255),b
 12725  013BDA  0100               	movlb	0	; () banked
 12726  013BDC  5180               	movf	(___fldiv@b+3)& (0+255),w,b
 12727  013BDE  2580               	addwf	(___fldiv@b+3)& (0+255),w,b
 12728  013BE0  0100               	movlb	0	; () banked
 12729  013BE2  6F94               	movwf	___fldiv@bexp& (0+255),b
 12730                           
 12731                           ; BSR set to: 0
 12732  013BE4  0100               	movlb	0	; () banked
 12733  013BE6  AF7F               	btfss	(___fldiv@b+2)& (0+255),7,b
 12734  013BE8  D002               	goto	l6332
 12735                           
 12736                           ; BSR set to: 0
 12737  013BEA  0100               	movlb	0	; () banked
 12738  013BEC  8194               	bsf	___fldiv@bexp& (0+255),0,b
 12739  013BEE                     l6332:
 12740                           
 12741                           ; BSR set to: 0
 12742  013BEE  0100               	movlb	0	; () banked
 12743  013BF0  5194               	movf	___fldiv@bexp& (0+255),w,b
 12744  013BF2  0100               	movlb	0	; () banked
 12745  013BF4  B4D8               	btfsc	status,2,c
 12746  013BF6  D012               	goto	l6342
 12747                           
 12748                           ; BSR set to: 0
 12749  013BF8  0100               	movlb	0	; () banked
 12750  013BFA  2994               	incf	___fldiv@bexp& (0+255),w,b
 12751  013BFC  A4D8               	btfss	status,2,c
 12752  013BFE  D009               	goto	l6338
 12753                           
 12754                           ; BSR set to: 0
 12755  013C00  0E00               	movlw	0
 12756  013C02  0100               	movlb	0	; () banked
 12757  013C04  6F7D               	movwf	___fldiv@b& (0+255),b
 12758  013C06  0E00               	movlw	0
 12759  013C08  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 12760  013C0A  0E00               	movlw	0
 12761  013C0C  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 12762  013C0E  0E00               	movlw	0
 12763  013C10  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 12764  013C12                     l6338:
 12765                           
 12766                           ; BSR set to: 0
 12767  013C12  0100               	movlb	0	; () banked
 12768  013C14  8F7F               	bsf	(___fldiv@b+2)& (0+255),7,b
 12769                           
 12770                           ; BSR set to: 0
 12771  013C16  0E00               	movlw	0
 12772  013C18  0100               	movlb	0	; () banked
 12773  013C1A  D008               	goto	L12
 12774  013C1C                     l6342:
 12775                           
 12776                           ; BSR set to: 0
 12777  013C1C  0E00               	movlw	0
 12778  013C1E  0100               	movlb	0	; () banked
 12779  013C20  6F7D               	movwf	___fldiv@b& (0+255),b
 12780  013C22  0E00               	movlw	0
 12781  013C24  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 12782  013C26  0E00               	movlw	0
 12783  013C28  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 12784  013C2A  0E00               	movlw	0
 12785  013C2C                     L12:
 12786  013C2C  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 12787                           
 12788                           ; BSR set to: 0
 12789                           
 12790                           ; BSR set to: 0
 12791  013C2E  0100               	movlb	0	; () banked
 12792  013C30  5184               	movf	(___fldiv@a+3)& (0+255),w,b
 12793  013C32  0B80               	andlw	128
 12794  013C34  0100               	movlb	0	; () banked
 12795  013C36  1B89               	xorwf	___fldiv@sign& (0+255),f,b
 12796                           
 12797                           ; BSR set to: 0
 12798  013C38  0100               	movlb	0	; () banked
 12799  013C3A  5184               	movf	(___fldiv@a+3)& (0+255),w,b
 12800  013C3C  2584               	addwf	(___fldiv@a+3)& (0+255),w,b
 12801  013C3E  0100               	movlb	0	; () banked
 12802  013C40  6F95               	movwf	___fldiv@aexp& (0+255),b
 12803                           
 12804                           ; BSR set to: 0
 12805  013C42  0100               	movlb	0	; () banked
 12806  013C44  AF83               	btfss	(___fldiv@a+2)& (0+255),7,b
 12807  013C46  D002               	goto	l6352
 12808                           
 12809                           ; BSR set to: 0
 12810  013C48  0100               	movlb	0	; () banked
 12811  013C4A  8195               	bsf	___fldiv@aexp& (0+255),0,b
 12812  013C4C                     l6352:
 12813                           
 12814                           ; BSR set to: 0
 12815  013C4C  0100               	movlb	0	; () banked
 12816  013C4E  5195               	movf	___fldiv@aexp& (0+255),w,b
 12817  013C50  0100               	movlb	0	; () banked
 12818  013C52  B4D8               	btfsc	status,2,c
 12819  013C54  D012               	goto	l6362
 12820                           
 12821                           ; BSR set to: 0
 12822  013C56  0100               	movlb	0	; () banked
 12823  013C58  2995               	incf	___fldiv@aexp& (0+255),w,b
 12824  013C5A  A4D8               	btfss	status,2,c
 12825  013C5C  D009               	goto	l6358
 12826                           
 12827                           ; BSR set to: 0
 12828  013C5E  0E00               	movlw	0
 12829  013C60  0100               	movlb	0	; () banked
 12830  013C62  6F81               	movwf	___fldiv@a& (0+255),b
 12831  013C64  0E00               	movlw	0
 12832  013C66  6F82               	movwf	(___fldiv@a+1)& (0+255),b
 12833  013C68  0E00               	movlw	0
 12834  013C6A  6F83               	movwf	(___fldiv@a+2)& (0+255),b
 12835  013C6C  0E00               	movlw	0
 12836  013C6E  6F84               	movwf	(___fldiv@a+3)& (0+255),b
 12837  013C70                     l6358:
 12838                           
 12839                           ; BSR set to: 0
 12840  013C70  0100               	movlb	0	; () banked
 12841  013C72  8F83               	bsf	(___fldiv@a+2)& (0+255),7,b
 12842                           
 12843                           ; BSR set to: 0
 12844  013C74  0E00               	movlw	0
 12845  013C76  0100               	movlb	0	; () banked
 12846  013C78  D008               	goto	L13
 12847  013C7A                     l6362:
 12848                           
 12849                           ; BSR set to: 0
 12850  013C7A  0E00               	movlw	0
 12851  013C7C  0100               	movlb	0	; () banked
 12852  013C7E  6F81               	movwf	___fldiv@a& (0+255),b
 12853  013C80  0E00               	movlw	0
 12854  013C82  6F82               	movwf	(___fldiv@a+1)& (0+255),b
 12855  013C84  0E00               	movlw	0
 12856  013C86  6F83               	movwf	(___fldiv@a+2)& (0+255),b
 12857  013C88  0E00               	movlw	0
 12858  013C8A                     L13:
 12859  013C8A  6F84               	movwf	(___fldiv@a+3)& (0+255),b
 12860                           
 12861                           ; BSR set to: 0
 12862                           
 12863                           ; BSR set to: 0
 12864  013C8C  0100               	movlb	0	; () banked
 12865  013C8E  5181               	movf	___fldiv@a& (0+255),w,b
 12866  013C90  0100               	movlb	0	; () banked
 12867  013C92  1182               	iorwf	(___fldiv@a+1)& (0+255),w,b
 12868  013C94  0100               	movlb	0	; () banked
 12869  013C96  1183               	iorwf	(___fldiv@a+2)& (0+255),w,b
 12870  013C98  0100               	movlb	0	; () banked
 12871  013C9A  1184               	iorwf	(___fldiv@a+3)& (0+255),w,b
 12872  013C9C  A4D8               	btfss	status,2,c
 12873  013C9E  D017               	goto	l6374
 12874                           
 12875                           ; BSR set to: 0
 12876  013CA0  0E00               	movlw	0
 12877  013CA2  0100               	movlb	0	; () banked
 12878  013CA4  6F7D               	movwf	___fldiv@b& (0+255),b
 12879  013CA6  0E00               	movlw	0
 12880  013CA8  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 12881  013CAA  0E00               	movlw	0
 12882  013CAC  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 12883  013CAE  0E00               	movlw	0
 12884  013CB0  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 12885                           
 12886                           ; BSR set to: 0
 12887  013CB2  0100               	movlb	0	; () banked
 12888  013CB4  0E80               	movlw	128
 12889  013CB6  137F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 12890  013CB8  0E7F               	movlw	127
 12891  013CBA  1380               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12892                           
 12893                           ; BSR set to: 0
 12894  013CBC  C07D  F07D         	movff	___fldiv@b,?___fldiv
 12895  013CC0  C07E  F07E         	movff	___fldiv@b+1,?___fldiv+1
 12896  013CC4  C07F  F07F         	movff	___fldiv@b+2,?___fldiv+2
 12897  013CC8  C080  F080         	movff	___fldiv@b+3,?___fldiv+3
 12898                           
 12899                           ; BSR set to: 0
 12900  013CCC  0012               	return	
 12901  013CCE                     l6374:
 12902                           
 12903                           ; BSR set to: 0
 12904  013CCE  0100               	movlb	0	; () banked
 12905  013CD0  5194               	movf	___fldiv@bexp& (0+255),w,b
 12906  013CD2  0100               	movlb	0	; () banked
 12907  013CD4  A4D8               	btfss	status,2,c
 12908  013CD6  D012               	goto	l6382
 12909                           
 12910                           ; BSR set to: 0
 12911  013CD8  0E00               	movlw	0
 12912  013CDA  0100               	movlb	0	; () banked
 12913  013CDC  6F7D               	movwf	___fldiv@b& (0+255),b
 12914  013CDE  0E00               	movlw	0
 12915  013CE0  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 12916  013CE2  0E00               	movlw	0
 12917  013CE4  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 12918  013CE6  0E00               	movlw	0
 12919  013CE8  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 12920                           
 12921                           ; BSR set to: 0
 12922  013CEA  C07D  F07D         	movff	___fldiv@b,?___fldiv
 12923  013CEE  C07E  F07E         	movff	___fldiv@b+1,?___fldiv+1
 12924  013CF2  C07F  F07F         	movff	___fldiv@b+2,?___fldiv+2
 12925  013CF6  C080  F080         	movff	___fldiv@b+3,?___fldiv+3
 12926                           
 12927                           ; BSR set to: 0
 12928  013CFA  0012               	return	
 12929  013CFC                     l6382:
 12930                           
 12931                           ; BSR set to: 0
 12932  013CFC  0100               	movlb	0	; () banked
 12933  013CFE  5195               	movf	___fldiv@aexp& (0+255),w,b
 12934  013D00  0100               	movlb	0	; () banked
 12935  013D02  6F85               	movwf	??___fldiv& (0+255),b
 12936  013D04  6B86               	clrf	(??___fldiv+1)& (0+255),b
 12937  013D06  0100               	movlb	0	; () banked
 12938  013D08  1F85               	comf	??___fldiv& (0+255),f,b
 12939  013D0A  1F86               	comf	(??___fldiv+1)& (0+255),f,b
 12940  013D0C  4B85               	infsnz	??___fldiv& (0+255),f,b
 12941  013D0E  2B86               	incf	(??___fldiv+1)& (0+255),f,b
 12942  013D10  0100               	movlb	0	; () banked
 12943  013D12  5194               	movf	___fldiv@bexp& (0+255),w,b
 12944  013D14  0100               	movlb	0	; () banked
 12945  013D16  6F87               	movwf	(??___fldiv+2)& (0+255),b
 12946  013D18  6B88               	clrf	(??___fldiv+3)& (0+255),b
 12947  013D1A  0100               	movlb	0	; () banked
 12948  013D1C  5185               	movf	??___fldiv& (0+255),w,b
 12949  013D1E  0100               	movlb	0	; () banked
 12950  013D20  2787               	addwf	(??___fldiv+2)& (0+255),f,b
 12951  013D22  0100               	movlb	0	; () banked
 12952  013D24  5186               	movf	(??___fldiv+1)& (0+255),w,b
 12953  013D26  0100               	movlb	0	; () banked
 12954  013D28  2388               	addwfc	(??___fldiv+3)& (0+255),f,b
 12955  013D2A  0E7F               	movlw	127
 12956  013D2C  0100               	movlb	0	; () banked
 12957  013D2E  2587               	addwf	(??___fldiv+2)& (0+255),w,b
 12958  013D30  0100               	movlb	0	; () banked
 12959  013D32  6F8E               	movwf	___fldiv@new_exp& (0+255),b
 12960  013D34  0E00               	movlw	0
 12961  013D36  0100               	movlb	0	; () banked
 12962  013D38  2188               	addwfc	(??___fldiv+3)& (0+255),w,b
 12963  013D3A  0100               	movlb	0	; () banked
 12964  013D3C  6F8F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12965                           
 12966                           ; BSR set to: 0
 12967  013D3E  C07D  F08A         	movff	___fldiv@b,___fldiv@rem
 12968  013D42  C07E  F08B         	movff	___fldiv@b+1,___fldiv@rem+1
 12969  013D46  C07F  F08C         	movff	___fldiv@b+2,___fldiv@rem+2
 12970  013D4A  C080  F08D         	movff	___fldiv@b+3,___fldiv@rem+3
 12971                           
 12972                           ; BSR set to: 0
 12973  013D4E  0E00               	movlw	0
 12974  013D50  0100               	movlb	0	; () banked
 12975  013D52  6F7D               	movwf	___fldiv@b& (0+255),b
 12976  013D54  0E00               	movlw	0
 12977  013D56  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 12978  013D58  0E00               	movlw	0
 12979  013D5A  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 12980  013D5C  0E00               	movlw	0
 12981  013D5E  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 12982                           
 12983                           ; BSR set to: 0
 12984  013D60  0E00               	movlw	0
 12985  013D62  0100               	movlb	0	; () banked
 12986  013D64  6F90               	movwf	___fldiv@grs& (0+255),b
 12987  013D66  0E00               	movlw	0
 12988  013D68  6F91               	movwf	(___fldiv@grs+1)& (0+255),b
 12989  013D6A  0E00               	movlw	0
 12990  013D6C  6F92               	movwf	(___fldiv@grs+2)& (0+255),b
 12991  013D6E  0E00               	movlw	0
 12992  013D70  6F93               	movwf	(___fldiv@grs+3)& (0+255),b
 12993                           
 12994                           ; BSR set to: 0
 12995  013D72  0E00               	movlw	0
 12996  013D74  0100               	movlb	0	; () banked
 12997  013D76  6F95               	movwf	___fldiv@aexp& (0+255),b
 12998  013D78  D042               	goto	l1520
 12999  013D7A                     l6392:
 13000                           
 13001                           ; BSR set to: 0
 13002  013D7A  0100               	movlb	0	; () banked
 13003  013D7C  5195               	movf	___fldiv@aexp& (0+255),w,b
 13004  013D7E  0100               	movlb	0	; () banked
 13005  013D80  B4D8               	btfsc	status,2,c
 13006  013D82  D017               	goto	l6400
 13007                           
 13008                           ; BSR set to: 0
 13009  013D84  0100               	movlb	0	; () banked
 13010  013D86  90D8               	bcf	status,0,c
 13011  013D88  378A               	rlcf	___fldiv@rem& (0+255),f,b
 13012  013D8A  378B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13013  013D8C  378C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13014  013D8E  378D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13015  013D90  0100               	movlb	0	; () banked
 13016  013D92  90D8               	bcf	status,0,c
 13017  013D94  377D               	rlcf	___fldiv@b& (0+255),f,b
 13018  013D96  377E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13019  013D98  377F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13020  013D9A  3780               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13021                           
 13022                           ; BSR set to: 0
 13023  013D9C  0100               	movlb	0	; () banked
 13024  013D9E  AF93               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13025  013DA0  D002               	goto	l1523
 13026                           
 13027                           ; BSR set to: 0
 13028  013DA2  0100               	movlb	0	; () banked
 13029  013DA4  817D               	bsf	___fldiv@b& (0+255),0,b
 13030  013DA6                     l1523:
 13031                           
 13032                           ; BSR set to: 0
 13033  013DA6  0100               	movlb	0	; () banked
 13034  013DA8  90D8               	bcf	status,0,c
 13035  013DAA  3790               	rlcf	___fldiv@grs& (0+255),f,b
 13036  013DAC  3791               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13037  013DAE  3792               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13038  013DB0  3793               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13039  013DB2                     l6400:
 13040                           
 13041                           ; BSR set to: 0
 13042  013DB2  0100               	movlb	0	; () banked
 13043  013DB4  5181               	movf	___fldiv@a& (0+255),w,b
 13044  013DB6  0100               	movlb	0	; () banked
 13045  013DB8  5D8A               	subwf	___fldiv@rem& (0+255),w,b
 13046  013DBA  0100               	movlb	0	; () banked
 13047  013DBC  5182               	movf	(___fldiv@a+1)& (0+255),w,b
 13048  013DBE  0100               	movlb	0	; () banked
 13049  013DC0  598B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13050  013DC2  0100               	movlb	0	; () banked
 13051  013DC4  5183               	movf	(___fldiv@a+2)& (0+255),w,b
 13052  013DC6  0100               	movlb	0	; () banked
 13053  013DC8  598C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13054  013DCA  0100               	movlb	0	; () banked
 13055  013DCC  5184               	movf	(___fldiv@a+3)& (0+255),w,b
 13056  013DCE  0100               	movlb	0	; () banked
 13057  013DD0  598D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13058  013DD2  A0D8               	btfss	status,0,c
 13059  013DD4  D012               	goto	l6406
 13060                           
 13061                           ; BSR set to: 0
 13062  013DD6  0100               	movlb	0	; () banked
 13063  013DD8  8D93               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13064                           
 13065                           ; BSR set to: 0
 13066  013DDA  0100               	movlb	0	; () banked
 13067  013DDC  5181               	movf	___fldiv@a& (0+255),w,b
 13068  013DDE  0100               	movlb	0	; () banked
 13069  013DE0  5F8A               	subwf	___fldiv@rem& (0+255),f,b
 13070  013DE2  0100               	movlb	0	; () banked
 13071  013DE4  5182               	movf	(___fldiv@a+1)& (0+255),w,b
 13072  013DE6  0100               	movlb	0	; () banked
 13073  013DE8  5B8B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13074  013DEA  0100               	movlb	0	; () banked
 13075  013DEC  5183               	movf	(___fldiv@a+2)& (0+255),w,b
 13076  013DEE  0100               	movlb	0	; () banked
 13077  013DF0  5B8C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13078  013DF2  0100               	movlb	0	; () banked
 13079  013DF4  5184               	movf	(___fldiv@a+3)& (0+255),w,b
 13080  013DF6  0100               	movlb	0	; () banked
 13081  013DF8  5B8D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13082  013DFA                     l6406:
 13083                           
 13084                           ; BSR set to: 0
 13085  013DFA  0100               	movlb	0	; () banked
 13086  013DFC  2B95               	incf	___fldiv@aexp& (0+255),f,b
 13087  013DFE                     l1520:
 13088                           
 13089                           ; BSR set to: 0
 13090  013DFE  0E19               	movlw	25
 13091  013E00  0100               	movlb	0	; () banked
 13092  013E02  6595               	cpfsgt	___fldiv@aexp& (0+255),b
 13093  013E04  D7BA               	goto	l6392
 13094                           
 13095                           ; BSR set to: 0
 13096                           
 13097                           ; BSR set to: 0
 13098  013E06  0100               	movlb	0	; () banked
 13099  013E08  518A               	movf	___fldiv@rem& (0+255),w,b
 13100  013E0A  0100               	movlb	0	; () banked
 13101  013E0C  118B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13102  013E0E  0100               	movlb	0	; () banked
 13103  013E10  118C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13104  013E12  0100               	movlb	0	; () banked
 13105  013E14  118D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13106  013E16  B4D8               	btfsc	status,2,c
 13107  013E18  D018               	goto	l6418
 13108                           
 13109                           ; BSR set to: 0
 13110  013E1A  0100               	movlb	0	; () banked
 13111  013E1C  8190               	bsf	___fldiv@grs& (0+255),0,b
 13112                           
 13113                           ; BSR set to: 0
 13114  013E1E  D015               	goto	l6418
 13115  013E20                     l6412:
 13116                           
 13117                           ; BSR set to: 0
 13118  013E20  0100               	movlb	0	; () banked
 13119  013E22  90D8               	bcf	status,0,c
 13120  013E24  377D               	rlcf	___fldiv@b& (0+255),f,b
 13121  013E26  377E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13122  013E28  377F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13123  013E2A  3780               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13124                           
 13125                           ; BSR set to: 0
 13126  013E2C  0100               	movlb	0	; () banked
 13127  013E2E  AF93               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13128  013E30  D002               	goto	l1529
 13129                           
 13130                           ; BSR set to: 0
 13131  013E32  0100               	movlb	0	; () banked
 13132  013E34  817D               	bsf	___fldiv@b& (0+255),0,b
 13133  013E36                     l1529:
 13134                           
 13135                           ; BSR set to: 0
 13136  013E36  0100               	movlb	0	; () banked
 13137  013E38  90D8               	bcf	status,0,c
 13138  013E3A  3790               	rlcf	___fldiv@grs& (0+255),f,b
 13139  013E3C  3791               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13140  013E3E  3792               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13141  013E40  3793               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13142  013E42  0100               	movlb	0	; () banked
 13143  013E44  078E               	decf	___fldiv@new_exp& (0+255),f,b
 13144  013E46  A0D8               	btfss	status,0,c
 13145  013E48  078F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13146  013E4A                     l6418:
 13147                           
 13148                           ; BSR set to: 0
 13149  013E4A  0100               	movlb	0	; () banked
 13150  013E4C  AF7F               	btfss	(___fldiv@b+2)& (0+255),7,b
 13151  013E4E  D7E8               	goto	l6412
 13152                           
 13153                           ; BSR set to: 0
 13154                           
 13155                           ; BSR set to: 0
 13156  013E50  0E00               	movlw	0
 13157  013E52  0100               	movlb	0	; () banked
 13158  013E54  6F95               	movwf	___fldiv@aexp& (0+255),b
 13159                           
 13160                           ; BSR set to: 0
 13161  013E56  0100               	movlb	0	; () banked
 13162  013E58  AF93               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13163  013E5A  D024               	goto	l1531
 13164                           
 13165                           ; BSR set to: 0
 13166  013E5C  0EFF               	movlw	255
 13167  013E5E  0100               	movlb	0	; () banked
 13168  013E60  1590               	andwf	___fldiv@grs& (0+255),w,b
 13169  013E62  0100               	movlb	0	; () banked
 13170  013E64  6F85               	movwf	??___fldiv& (0+255),b
 13171  013E66  0EFF               	movlw	255
 13172  013E68  0100               	movlb	0	; () banked
 13173  013E6A  1591               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13174  013E6C  0100               	movlb	0	; () banked
 13175  013E6E  6F86               	movwf	(??___fldiv+1)& (0+255),b
 13176  013E70  0EFF               	movlw	255
 13177  013E72  0100               	movlb	0	; () banked
 13178  013E74  1592               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13179  013E76  0100               	movlb	0	; () banked
 13180  013E78  6F87               	movwf	(??___fldiv+2)& (0+255),b
 13181  013E7A  0E7F               	movlw	127
 13182  013E7C  0100               	movlb	0	; () banked
 13183  013E7E  1593               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13184  013E80  0100               	movlb	0	; () banked
 13185  013E82  6F88               	movwf	(??___fldiv+3)& (0+255),b
 13186  013E84  0100               	movlb	0	; () banked
 13187  013E86  5185               	movf	??___fldiv& (0+255),w,b
 13188  013E88  0100               	movlb	0	; () banked
 13189  013E8A  1186               	iorwf	(??___fldiv+1)& (0+255),w,b
 13190  013E8C  0100               	movlb	0	; () banked
 13191  013E8E  1187               	iorwf	(??___fldiv+2)& (0+255),w,b
 13192  013E90  0100               	movlb	0	; () banked
 13193  013E92  1188               	iorwf	(??___fldiv+3)& (0+255),w,b
 13194  013E94  A4D8               	btfss	status,2,c
 13195  013E96  D003               	goto	l6428
 13196                           
 13197                           ; BSR set to: 0
 13198                           
 13199                           ; BSR set to: 0
 13200  013E98  0100               	movlb	0	; () banked
 13201  013E9A  A17D               	btfss	___fldiv@b& (0+255),0,b
 13202  013E9C  D003               	goto	l1531
 13203  013E9E                     l6428:
 13204                           
 13205                           ; BSR set to: 0
 13206  013E9E  0E01               	movlw	1
 13207  013EA0  0100               	movlb	0	; () banked
 13208  013EA2  6F95               	movwf	___fldiv@aexp& (0+255),b
 13209  013EA4                     l1531:
 13210                           
 13211                           ; BSR set to: 0
 13212  013EA4  0100               	movlb	0	; () banked
 13213  013EA6  5195               	movf	___fldiv@aexp& (0+255),w,b
 13214  013EA8  0100               	movlb	0	; () banked
 13215  013EAA  B4D8               	btfsc	status,2,c
 13216  013EAC  D023               	goto	l6438
 13217                           
 13218                           ; BSR set to: 0
 13219  013EAE  0E01               	movlw	1
 13220  013EB0  0100               	movlb	0	; () banked
 13221  013EB2  277D               	addwf	___fldiv@b& (0+255),f,b
 13222  013EB4  0E00               	movlw	0
 13223  013EB6  237E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 13224  013EB8  237F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 13225  013EBA  2380               	addwfc	(___fldiv@b+3)& (0+255),f,b
 13226                           
 13227                           ; BSR set to: 0
 13228  013EBC  0100               	movlb	0	; () banked
 13229  013EBE  A180               	btfss	(___fldiv@b+3)& (0+255),0,b
 13230  013EC0  D019               	goto	l6438
 13231                           
 13232                           ; BSR set to: 0
 13233  013EC2  C07D  F085         	movff	___fldiv@b,??___fldiv
 13234  013EC6  C07E  F086         	movff	___fldiv@b+1,??___fldiv+1
 13235  013ECA  C07F  F087         	movff	___fldiv@b+2,??___fldiv+2
 13236  013ECE  C080  F088         	movff	___fldiv@b+3,??___fldiv+3
 13237  013ED2  0100               	movlb	0	; () banked
 13238  013ED4  3588               	rlcf	(??___fldiv+3)& (0+255),w,b
 13239  013ED6  3388               	rrcf	(??___fldiv+3)& (0+255),f,b
 13240  013ED8  3387               	rrcf	(??___fldiv+2)& (0+255),f,b
 13241  013EDA  3386               	rrcf	(??___fldiv+1)& (0+255),f,b
 13242  013EDC  3385               	rrcf	??___fldiv& (0+255),f,b
 13243  013EDE  C085  F07D         	movff	??___fldiv,___fldiv@b
 13244  013EE2  C086  F07E         	movff	??___fldiv+1,___fldiv@b+1
 13245  013EE6  C087  F07F         	movff	??___fldiv+2,___fldiv@b+2
 13246  013EEA  C088  F080         	movff	??___fldiv+3,___fldiv@b+3
 13247                           
 13248                           ; BSR set to: 0
 13249  013EEE  0100               	movlb	0	; () banked
 13250  013EF0  4B8E               	infsnz	___fldiv@new_exp& (0+255),f,b
 13251  013EF2  2B8F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13252  013EF4                     l6438:
 13253                           
 13254                           ; BSR set to: 0
 13255  013EF4  0100               	movlb	0	; () banked
 13256  013EF6  BF8F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13257  013EF8  D014               	goto	l6442
 13258  013EFA  0100               	movlb	0	; () banked
 13259  013EFC  518F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13260  013EFE  E104               	bnz	u8060
 13261  013F00  0100               	movlb	0	; () banked
 13262  013F02  298E               	incf	___fldiv@new_exp& (0+255),w,b
 13263  013F04  A0D8               	btfss	status,0,c
 13264  013F06  D00D               	goto	l6442
 13265  013F08                     u8060:
 13266                           
 13267                           ; BSR set to: 0
 13268  013F08  0E00               	movlw	0
 13269  013F0A  0100               	movlb	0	; () banked
 13270  013F0C  6F8F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13271  013F0E  698E               	setf	___fldiv@new_exp& (0+255),b
 13272  013F10  0E00               	movlw	0
 13273  013F12  0100               	movlb	0	; () banked
 13274  013F14  6F7D               	movwf	___fldiv@b& (0+255),b
 13275  013F16  0E00               	movlw	0
 13276  013F18  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 13277  013F1A  0E00               	movlw	0
 13278  013F1C  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 13279  013F1E  0E00               	movlw	0
 13280  013F20  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 13281  013F22                     l6442:
 13282                           
 13283                           ; BSR set to: 0
 13284  013F22  0100               	movlb	0	; () banked
 13285  013F24  BF8F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13286  013F26  D007               	goto	l6444
 13287  013F28  0100               	movlb	0	; () banked
 13288  013F2A  518F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13289  013F2C  E115               	bnz	l6446
 13290  013F2E  0100               	movlb	0	; () banked
 13291  013F30  058E               	decf	___fldiv@new_exp& (0+255),w,b
 13292  013F32  B0D8               	btfsc	status,0,c
 13293  013F34  D011               	goto	l6446
 13294  013F36                     l6444:
 13295                           
 13296                           ; BSR set to: 0
 13297  013F36  0E00               	movlw	0
 13298  013F38  0100               	movlb	0	; () banked
 13299  013F3A  6F8F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13300  013F3C  0E00               	movlw	0
 13301  013F3E  6F8E               	movwf	___fldiv@new_exp& (0+255),b
 13302  013F40  0E00               	movlw	0
 13303  013F42  0100               	movlb	0	; () banked
 13304  013F44  6F7D               	movwf	___fldiv@b& (0+255),b
 13305  013F46  0E00               	movlw	0
 13306  013F48  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 13307  013F4A  0E00               	movlw	0
 13308  013F4C  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 13309  013F4E  0E00               	movlw	0
 13310  013F50  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 13311  013F52  0E00               	movlw	0
 13312  013F54  0100               	movlb	0	; () banked
 13313  013F56  6F89               	movwf	___fldiv@sign& (0+255),b
 13314  013F58                     l6446:
 13315                           
 13316                           ; BSR set to: 0
 13317  013F58  C08E  F094         	movff	___fldiv@new_exp,___fldiv@bexp
 13318                           
 13319                           ; BSR set to: 0
 13320  013F5C  0100               	movlb	0	; () banked
 13321  013F5E  A194               	btfss	___fldiv@bexp& (0+255),0,b
 13322  013F60  D003               	goto	l6452
 13323                           
 13324                           ; BSR set to: 0
 13325  013F62  0100               	movlb	0	; () banked
 13326  013F64  8F7F               	bsf	(___fldiv@b+2)& (0+255),7,b
 13327  013F66  D002               	goto	l6454
 13328  013F68                     l6452:
 13329                           
 13330                           ; BSR set to: 0
 13331  013F68  0100               	movlb	0	; () banked
 13332  013F6A  9F7F               	bcf	(___fldiv@b+2)& (0+255),7,b
 13333  013F6C                     l6454:
 13334                           
 13335                           ; BSR set to: 0
 13336  013F6C  0100               	movlb	0	; () banked
 13337  013F6E  90D8               	bcf	status,0,c
 13338  013F70  3194               	rrcf	___fldiv@bexp& (0+255),w,b
 13339  013F72  0100               	movlb	0	; () banked
 13340  013F74  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 13341                           
 13342                           ; BSR set to: 0
 13343  013F76  0100               	movlb	0	; () banked
 13344  013F78  5189               	movf	___fldiv@sign& (0+255),w,b
 13345  013F7A  0100               	movlb	0	; () banked
 13346  013F7C  1380               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13347                           
 13348                           ; BSR set to: 0
 13349  013F7E  C07D  F07D         	movff	___fldiv@b,?___fldiv
 13350  013F82  C07E  F07E         	movff	___fldiv@b+1,?___fldiv+1
 13351  013F86  C07F  F07F         	movff	___fldiv@b+2,?___fldiv+2
 13352  013F8A  C080  F080         	movff	___fldiv@b+3,?___fldiv+3
 13353  013F8E  0012               	return	
 13354  013F90                     __end_of___fldiv:
 13355                           	opt stack 0
 13356                           tblptru	equ	0xFF8
 13357                           tblptrh	equ	0xFF7
 13358                           tblptrl	equ	0xFF6
 13359                           tablat	equ	0xFF5
 13360                           prodh	equ	0xFF4
 13361                           prodl	equ	0xFF3
 13362                           intcon	equ	0xFF2
 13363                           postinc0	equ	0xFEE
 13364                           wreg	equ	0xFE8
 13365                           indf2	equ	0xFDF
 13366                           postinc2	equ	0xFDE
 13367                           fsr2h	equ	0xFDA
 13368                           fsr2l	equ	0xFD9
 13369                           status	equ	0xFD8
 13370                           
 13371 ;; *************** function _LCD_write_string *****************
 13372 ;; Defined at:
 13373 ;;		line 194 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13374 ;; Parameters:    Size  Location     Type
 13375 ;;  buffer          2   32[BANK0 ] PTR unsigned char 
 13376 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 13377 ;; Auto vars:     Size  Location     Type
 13378 ;;		None
 13379 ;; Return value:  Size  Location     Type
 13380 ;;		None               void
 13381 ;; Registers used:
 13382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13383 ;; Tracked objects:
 13384 ;;		On entry : 0/0
 13385 ;;		On exit  : 0/0
 13386 ;;		Unchanged: 0/0
 13387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13388 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13391 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13392 ;;Total ram usage:        2 bytes
 13393 ;; Hardware stack levels used:    1
 13394 ;; Hardware stack levels required when called:    8
 13395 ;; This function calls:
 13396 ;;		_LCD_write_char
 13397 ;; This function is called by:
 13398 ;;		_LCD_Handler
 13399 ;;		_LCD_write_integer
 13400 ;; This function uses a non-reentrant model
 13401 ;;
 13402                           
 13403                           	psect	text26
 13404  015D52                     __ptext26:
 13405                           	opt stack 0
 13406  015D52                     _LCD_write_string:
 13407                           	opt stack 21
 13408                           
 13409                           ;src\LCD_44780.c: 197: while(*buffer){
 13410                           
 13411                           ; BSR set to: 0
 13412                           ;incstack = 0
 13413  015D52  D00A               	goto	l8284
 13414  015D54                     l8280:
 13415                           
 13416                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 13417  015D54  C080  FFD9         	movff	LCD_write_string@buffer,fsr2l
 13418  015D58  C081  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 13419  015D5C  50DF               	movf	indf2,w,c
 13420  015D5E  ECF6  F0AC         	call	_LCD_write_char
 13421                           
 13422                           ;src\LCD_44780.c: 202: buffer++;
 13423  015D62  0100               	movlb	0	; () banked
 13424  015D64  4B80               	infsnz	LCD_write_string@buffer& (0+255),f,b
 13425  015D66  2B81               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 13426  015D68                     l8284:
 13427  015D68  C080  FFD9         	movff	LCD_write_string@buffer,fsr2l
 13428  015D6C  C081  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 13429  015D70  50DF               	movf	indf2,w,c
 13430  015D72  B4D8               	btfsc	status,2,c
 13431  015D74  0012               	return	
 13432  015D76  D7EE               	goto	l8280
 13433  015D78                     __end_of_LCD_write_string:
 13434                           	opt stack 0
 13435                           tblptru	equ	0xFF8
 13436                           tblptrh	equ	0xFF7
 13437                           tblptrl	equ	0xFF6
 13438                           tablat	equ	0xFF5
 13439                           prodh	equ	0xFF4
 13440                           prodl	equ	0xFF3
 13441                           intcon	equ	0xFF2
 13442                           postinc0	equ	0xFEE
 13443                           wreg	equ	0xFE8
 13444                           indf2	equ	0xFDF
 13445                           postinc2	equ	0xFDE
 13446                           fsr2h	equ	0xFDA
 13447                           fsr2l	equ	0xFD9
 13448                           status	equ	0xFD8
 13449                           
 13450 ;; *************** function _LCD_write_message *****************
 13451 ;; Defined at:
 13452 ;;		line 178 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13453 ;; Parameters:    Size  Location     Type
 13454 ;;  buffer          2   32[BANK0 ] PTR const unsigned char 
 13455 ;;		 -> STR_15(8), STR_14(6), STR_13(6), STR_12(2), 
 13456 ;;		 -> STR_11(5), STR_10(4), STR_9(21), STR_8(17), 
 13457 ;;		 -> STR_7(12), STR_6(21), STR_4(21), STR_3(21), 
 13458 ;;		 -> STR_2(21), STR_1(21), 
 13459 ;; Auto vars:     Size  Location     Type
 13460 ;;		None
 13461 ;; Return value:  Size  Location     Type
 13462 ;;		None               void
 13463 ;; Registers used:
 13464 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13465 ;; Tracked objects:
 13466 ;;		On entry : 0/0
 13467 ;;		On exit  : 0/0
 13468 ;;		Unchanged: 0/0
 13469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13470 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13473 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13474 ;;Total ram usage:        2 bytes
 13475 ;; Hardware stack levels used:    1
 13476 ;; Hardware stack levels required when called:    8
 13477 ;; This function calls:
 13478 ;;		_LCD_write_char
 13479 ;; This function is called by:
 13480 ;;		_main
 13481 ;;		_LCD_Handler
 13482 ;;		_board_initialization
 13483 ;; This function uses a non-reentrant model
 13484 ;;
 13485                           
 13486                           	psect	text27
 13487  015C90                     __ptext27:
 13488                           	opt stack 0
 13489  015C90                     _LCD_write_message:
 13490                           	opt stack 21
 13491                           
 13492                           ;src\LCD_44780.c: 181: while(*buffer) {
 13493                           
 13494                           ;incstack = 0
 13495  015C90  D00D               	goto	l8276
 13496  015C92                     l8272:
 13497                           
 13498                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 13499  015C92  C080  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13500  015C96  C081  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13501  015C9A                     	if	0	;tblptru may be non-zero
 13502  015C9A                     	endif
 13503  015C9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13504  015C9A  0E00               	movlw	low (__mediumconst shr (0+16))
 13505  015C9C  6EF8               	movwf	tblptru,c
 13506  015C9E                     	endif
 13507  015C9E  0008               	tblrd		*
 13508  015CA0  50F5               	movf	tablat,w,c
 13509  015CA2  ECF6  F0AC         	call	_LCD_write_char
 13510                           
 13511                           ;src\LCD_44780.c: 186: buffer++;
 13512  015CA6  0100               	movlb	0	; () banked
 13513  015CA8  4B80               	infsnz	LCD_write_message@buffer& (0+255),f,b
 13514  015CAA  2B81               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 13515  015CAC                     l8276:
 13516  015CAC  C080  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13517  015CB0  C081  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13518  015CB4                     	if	0	;tblptru may be non-zero
 13519  015CB4                     	endif
 13520  015CB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13521  015CB4  0E00               	movlw	low (__mediumconst shr (0+16))
 13522  015CB6  6EF8               	movwf	tblptru,c
 13523  015CB8                     	endif
 13524  015CB8  0008               	tblrd		*
 13525  015CBA  50F5               	movf	tablat,w,c
 13526  015CBC  0900               	iorlw	0
 13527  015CBE  B4D8               	btfsc	status,2,c
 13528  015CC0  0012               	return	
 13529  015CC2  D7E7               	goto	l8272
 13530  015CC4                     __end_of_LCD_write_message:
 13531                           	opt stack 0
 13532                           tblptru	equ	0xFF8
 13533                           tblptrh	equ	0xFF7
 13534                           tblptrl	equ	0xFF6
 13535                           tablat	equ	0xFF5
 13536                           prodh	equ	0xFF4
 13537                           prodl	equ	0xFF3
 13538                           intcon	equ	0xFF2
 13539                           postinc0	equ	0xFEE
 13540                           wreg	equ	0xFE8
 13541                           indf2	equ	0xFDF
 13542                           postinc2	equ	0xFDE
 13543                           fsr2h	equ	0xFDA
 13544                           fsr2l	equ	0xFD9
 13545                           status	equ	0xFD8
 13546                           
 13547 ;; *************** function _LCD_write_char *****************
 13548 ;; Defined at:
 13549 ;;		line 145 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13550 ;; Parameters:    Size  Location     Type
 13551 ;;  value           1    wreg     unsigned char 
 13552 ;; Auto vars:     Size  Location     Type
 13553 ;;  value           1   31[BANK0 ] unsigned char 
 13554 ;;  D0              1   30[BANK0 ] unsigned char 
 13555 ;;  D1              1   29[BANK0 ] unsigned char 
 13556 ;;  D2              1   28[BANK0 ] unsigned char 
 13557 ;;  D3              1   27[BANK0 ] unsigned char 
 13558 ;; Return value:  Size  Location     Type
 13559 ;;		None               void
 13560 ;; Registers used:
 13561 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13562 ;; Tracked objects:
 13563 ;;		On entry : 0/0
 13564 ;;		On exit  : 0/0
 13565 ;;		Unchanged: 0/0
 13566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13568 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13570 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13571 ;;Total ram usage:        5 bytes
 13572 ;; Hardware stack levels used:    1
 13573 ;; Hardware stack levels required when called:    7
 13574 ;; This function calls:
 13575 ;;		_LCD_send_command
 13576 ;; This function is called by:
 13577 ;;		_LCD_write_message
 13578 ;;		_LCD_write_string
 13579 ;; This function uses a non-reentrant model
 13580 ;;
 13581                           
 13582                           	psect	text28
 13583  0159EC                     __ptext28:
 13584                           	opt stack 0
 13585  0159EC                     _LCD_write_char:
 13586                           	opt stack 21
 13587                           
 13588                           ;incstack = 0
 13589                           ;LCD_write_char@value stored from wreg
 13590  0159EC  0100               	movlb	0	; () banked
 13591  0159EE  6F7F               	movwf	LCD_write_char@value& (0+255),b
 13592                           
 13593                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 13594                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 13595  0159F0  848D               	bsf	3981,2,c	;volatile
 13596                           
 13597                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 13598  0159F2  0100               	movlb	0	; () banked
 13599  0159F4  457F               	rlncf	LCD_write_char@value& (0+255),w,b
 13600  0159F6  0B01               	andlw	1
 13601  0159F8  0100               	movlb	0	; () banked
 13602  0159FA  6F7B               	movwf	LCD_write_char@D3& (0+255),b
 13603                           
 13604                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 13605  0159FC  0100               	movlb	0	; () banked
 13606  0159FE  457F               	rlncf	LCD_write_char@value& (0+255),w,b
 13607  015A00  46E8               	rlncf	wreg,f,c
 13608  015A02  0B03               	andlw	3
 13609  015A04  0B01               	andlw	1
 13610  015A06  0100               	movlb	0	; () banked
 13611  015A08  6F7C               	movwf	LCD_write_char@D2& (0+255),b
 13612                           
 13613                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 13614  015A0A  0100               	movlb	0	; () banked
 13615  015A0C  397F               	swapf	LCD_write_char@value& (0+255),w,b
 13616  015A0E  42E8               	rrncf	wreg,f,c
 13617  015A10  0B07               	andlw	7
 13618  015A12  0B01               	andlw	1
 13619  015A14  0100               	movlb	0	; () banked
 13620  015A16  6F7D               	movwf	LCD_write_char@D1& (0+255),b
 13621                           
 13622                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 13623  015A18  0100               	movlb	0	; () banked
 13624  015A1A  397F               	swapf	LCD_write_char@value& (0+255),w,b
 13625  015A1C  0B0F               	andlw	15
 13626  015A1E  0B01               	andlw	1
 13627  015A20  0100               	movlb	0	; () banked
 13628  015A22  6F7E               	movwf	LCD_write_char@D0& (0+255),b
 13629                           
 13630                           ; BSR set to: 0
 13631                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 13632  015A24  C07C  F077         	movff	LCD_write_char@D2,LCD_send_command@D2
 13633  015A28  C07D  F078         	movff	LCD_write_char@D1,LCD_send_command@D1
 13634  015A2C  C07E  F079         	movff	LCD_write_char@D0,LCD_send_command@D0
 13635  015A30  0100               	movlb	0	; () banked
 13636  015A32  517B               	movf	LCD_write_char@D3& (0+255),w,b
 13637  015A34  ECD7  F0AD         	call	_LCD_send_command
 13638                           
 13639                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 13640  015A38  0100               	movlb	0	; () banked
 13641  015A3A  397F               	swapf	LCD_write_char@value& (0+255),w,b
 13642  015A3C  46E8               	rlncf	wreg,f,c
 13643  015A3E  0B1F               	andlw	31
 13644  015A40  0B01               	andlw	1
 13645  015A42  0100               	movlb	0	; () banked
 13646  015A44  6F7B               	movwf	LCD_write_char@D3& (0+255),b
 13647                           
 13648                           ; BSR set to: 0
 13649                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 13650  015A46  0100               	movlb	0	; () banked
 13651  015A48  417F               	rrncf	LCD_write_char@value& (0+255),w,b
 13652  015A4A  42E8               	rrncf	wreg,f,c
 13653  015A4C  0B3F               	andlw	63
 13654  015A4E  0B01               	andlw	1
 13655  015A50  0100               	movlb	0	; () banked
 13656  015A52  6F7C               	movwf	LCD_write_char@D2& (0+255),b
 13657                           
 13658                           ; BSR set to: 0
 13659                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 13660  015A54  0100               	movlb	0	; () banked
 13661  015A56  90D8               	bcf	status,0,c
 13662  015A58  317F               	rrcf	LCD_write_char@value& (0+255),w,b
 13663  015A5A  0B01               	andlw	1
 13664  015A5C  0100               	movlb	0	; () banked
 13665  015A5E  6F7D               	movwf	LCD_write_char@D1& (0+255),b
 13666                           
 13667                           ; BSR set to: 0
 13668                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 13669  015A60  0100               	movlb	0	; () banked
 13670  015A62  517F               	movf	LCD_write_char@value& (0+255),w,b
 13671  015A64  0B01               	andlw	1
 13672  015A66  0100               	movlb	0	; () banked
 13673  015A68  6F7E               	movwf	LCD_write_char@D0& (0+255),b
 13674                           
 13675                           ; BSR set to: 0
 13676                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 13677  015A6A  C07C  F077         	movff	LCD_write_char@D2,LCD_send_command@D2
 13678  015A6E  C07D  F078         	movff	LCD_write_char@D1,LCD_send_command@D1
 13679  015A72  C07E  F079         	movff	LCD_write_char@D0,LCD_send_command@D0
 13680  015A76  0100               	movlb	0	; () banked
 13681  015A78  517B               	movf	LCD_write_char@D3& (0+255),w,b
 13682  015A7A  ECD7  F0AD         	call	_LCD_send_command
 13683                           
 13684                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 13685  015A7E  948D               	bcf	3981,2,c	;volatile
 13686  015A80  0012               	return		;funcret
 13687  015A82                     __end_of_LCD_write_char:
 13688                           	opt stack 0
 13689                           tblptru	equ	0xFF8
 13690                           tblptrh	equ	0xFF7
 13691                           tblptrl	equ	0xFF6
 13692                           tablat	equ	0xFF5
 13693                           prodh	equ	0xFF4
 13694                           prodl	equ	0xFF3
 13695                           intcon	equ	0xFF2
 13696                           postinc0	equ	0xFEE
 13697                           wreg	equ	0xFE8
 13698                           indf2	equ	0xFDF
 13699                           postinc2	equ	0xFDE
 13700                           fsr2h	equ	0xFDA
 13701                           fsr2l	equ	0xFD9
 13702                           status	equ	0xFD8
 13703                           
 13704 ;; *************** function _LCD_initialize *****************
 13705 ;; Defined at:
 13706 ;;		line 283 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13707 ;; Parameters:    Size  Location     Type
 13708 ;;  quartz_frequ    1    wreg     unsigned char 
 13709 ;; Auto vars:     Size  Location     Type
 13710 ;;  quartz_frequ    1   29[BANK0 ] unsigned char 
 13711 ;; Return value:  Size  Location     Type
 13712 ;;		None               void
 13713 ;; Registers used:
 13714 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13715 ;; Tracked objects:
 13716 ;;		On entry : 0/0
 13717 ;;		On exit  : 0/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13723 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13724 ;;Total ram usage:        1 bytes
 13725 ;; Hardware stack levels used:    1
 13726 ;; Hardware stack levels required when called:    8
 13727 ;; This function calls:
 13728 ;;		_LCD_clear
 13729 ;;		_LCD_cursor
 13730 ;;		_LCD_send_command
 13731 ;;		_delay_ms
 13732 ;;		_delay_set_quartz
 13733 ;; This function is called by:
 13734 ;;		_main
 13735 ;;		_LCD_Handler
 13736 ;;		_board_initialization
 13737 ;; This function uses a non-reentrant model
 13738 ;;
 13739                           
 13740                           	psect	text29
 13741  01504E                     __ptext29:
 13742                           	opt stack 0
 13743  01504E                     _LCD_initialize:
 13744                           	opt stack 21
 13745                           
 13746                           ;incstack = 0
 13747                           ;LCD_initialize@quartz_frequency stored from wreg
 13748  01504E  0100               	movlb	0	; () banked
 13749  015050  6F7D               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 13750                           
 13751                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 13752  015052  0100               	movlb	0	; () banked
 13753  015054  517D               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 13754  015056  EC3C  F0AF         	call	_delay_set_quartz
 13755                           
 13756                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 13757  01505A  948D               	bcf	3981,2,c	;volatile
 13758                           
 13759                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 13760  01505C  928B               	bcf	3979,1,c	;volatile
 13761                           
 13762                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 13763  01505E  908B               	bcf	3979,0,c	;volatile
 13764                           
 13765                           ;src\LCD_44780.c: 291: delay_ms (100);
 13766  015060  0E00               	movlw	0
 13767  015062  0100               	movlb	0	; () banked
 13768  015064  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13769  015066  0E64               	movlw	100
 13770  015068  6F75               	movwf	delay_ms@value_ms& (0+255),b
 13771  01506A  ECF4  F0AD         	call	_delay_ms	;wreg free
 13772                           
 13773                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 13774  01506E  0E00               	movlw	0
 13775  015070  0100               	movlb	0	; () banked
 13776  015072  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13777  015074  0E01               	movlw	1
 13778  015076  0100               	movlb	0	; () banked
 13779  015078  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13780  01507A  0E01               	movlw	1
 13781  01507C  0100               	movlb	0	; () banked
 13782  01507E  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13783  015080  0E00               	movlw	0
 13784  015082  ECD7  F0AD         	call	_LCD_send_command
 13785                           
 13786                           ;src\LCD_44780.c: 293: delay_ms (100);
 13787  015086  0E00               	movlw	0
 13788  015088  0100               	movlb	0	; () banked
 13789  01508A  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13790  01508C  0E64               	movlw	100
 13791  01508E  6F75               	movwf	delay_ms@value_ms& (0+255),b
 13792  015090  ECF4  F0AD         	call	_delay_ms	;wreg free
 13793                           
 13794                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 13795  015094  0E00               	movlw	0
 13796  015096  0100               	movlb	0	; () banked
 13797  015098  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13798  01509A  0E01               	movlw	1
 13799  01509C  0100               	movlb	0	; () banked
 13800  01509E  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13801  0150A0  0E01               	movlw	1
 13802  0150A2  0100               	movlb	0	; () banked
 13803  0150A4  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13804  0150A6  0E00               	movlw	0
 13805  0150A8  ECD7  F0AD         	call	_LCD_send_command
 13806                           
 13807                           ;src\LCD_44780.c: 295: delay_ms (10);
 13808  0150AC  0E00               	movlw	0
 13809  0150AE  0100               	movlb	0	; () banked
 13810  0150B0  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13811  0150B2  0E0A               	movlw	10
 13812  0150B4  6F75               	movwf	delay_ms@value_ms& (0+255),b
 13813  0150B6  ECF4  F0AD         	call	_delay_ms	;wreg free
 13814                           
 13815                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 13816  0150BA  0E00               	movlw	0
 13817  0150BC  0100               	movlb	0	; () banked
 13818  0150BE  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13819  0150C0  0E01               	movlw	1
 13820  0150C2  0100               	movlb	0	; () banked
 13821  0150C4  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13822  0150C6  0E01               	movlw	1
 13823  0150C8  0100               	movlb	0	; () banked
 13824  0150CA  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13825  0150CC  0E00               	movlw	0
 13826  0150CE  ECD7  F0AD         	call	_LCD_send_command
 13827                           
 13828                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 13829  0150D2  0E00               	movlw	0
 13830  0150D4  0100               	movlb	0	; () banked
 13831  0150D6  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13832  0150D8  0E01               	movlw	1
 13833  0150DA  0100               	movlb	0	; () banked
 13834  0150DC  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13835  0150DE  0E00               	movlw	0
 13836  0150E0  0100               	movlb	0	; () banked
 13837  0150E2  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13838  0150E4  0E00               	movlw	0
 13839  0150E6  ECD7  F0AD         	call	_LCD_send_command
 13840                           
 13841                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 13842  0150EA  0E00               	movlw	0
 13843  0150EC  0100               	movlb	0	; () banked
 13844  0150EE  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13845  0150F0  0E01               	movlw	1
 13846  0150F2  0100               	movlb	0	; () banked
 13847  0150F4  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13848  0150F6  0E00               	movlw	0
 13849  0150F8  0100               	movlb	0	; () banked
 13850  0150FA  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13851  0150FC  0E00               	movlw	0
 13852  0150FE  ECD7  F0AD         	call	_LCD_send_command
 13853                           
 13854                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 13855  015102  0E00               	movlw	0
 13856  015104  0100               	movlb	0	; () banked
 13857  015106  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13858  015108  0E00               	movlw	0
 13859  01510A  0100               	movlb	0	; () banked
 13860  01510C  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13861  01510E  0E00               	movlw	0
 13862  015110  0100               	movlb	0	; () banked
 13863  015112  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13864  015114  0E01               	movlw	1
 13865  015116  ECD7  F0AD         	call	_LCD_send_command
 13866                           
 13867                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 13868  01511A  0E00               	movlw	0
 13869  01511C  0100               	movlb	0	; () banked
 13870  01511E  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13871  015120  0E00               	movlw	0
 13872  015122  0100               	movlb	0	; () banked
 13873  015124  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13874  015126  0E00               	movlw	0
 13875  015128  0100               	movlb	0	; () banked
 13876  01512A  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13877  01512C  0E00               	movlw	0
 13878  01512E  ECD7  F0AD         	call	_LCD_send_command
 13879                           
 13880                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 13881  015132  0E00               	movlw	0
 13882  015134  0100               	movlb	0	; () banked
 13883  015136  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13884  015138  0E00               	movlw	0
 13885  01513A  0100               	movlb	0	; () banked
 13886  01513C  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13887  01513E  0E00               	movlw	0
 13888  015140  0100               	movlb	0	; () banked
 13889  015142  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13890  015144  0E01               	movlw	1
 13891  015146  ECD7  F0AD         	call	_LCD_send_command
 13892                           
 13893                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 13894  01514A  0E00               	movlw	0
 13895  01514C  0100               	movlb	0	; () banked
 13896  01514E  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13897  015150  0E00               	movlw	0
 13898  015152  0100               	movlb	0	; () banked
 13899  015154  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13900  015156  0E00               	movlw	0
 13901  015158  0100               	movlb	0	; () banked
 13902  01515A  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13903  01515C  0E00               	movlw	0
 13904  01515E  ECD7  F0AD         	call	_LCD_send_command
 13905                           
 13906                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 13907  015162  0E00               	movlw	0
 13908  015164  0100               	movlb	0	; () banked
 13909  015166  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13910  015168  0E00               	movlw	0
 13911  01516A  0100               	movlb	0	; () banked
 13912  01516C  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13913  01516E  0E01               	movlw	1
 13914  015170  0100               	movlb	0	; () banked
 13915  015172  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13916  015174  0E00               	movlw	0
 13917  015176  ECD7  F0AD         	call	_LCD_send_command
 13918                           
 13919                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 13920  01517A  0E00               	movlw	0
 13921  01517C  0100               	movlb	0	; () banked
 13922  01517E  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13923  015180  0E00               	movlw	0
 13924  015182  0100               	movlb	0	; () banked
 13925  015184  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13926  015186  0E00               	movlw	0
 13927  015188  0100               	movlb	0	; () banked
 13928  01518A  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13929  01518C  0E00               	movlw	0
 13930  01518E  ECD7  F0AD         	call	_LCD_send_command
 13931                           
 13932                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 13933  015192  0E01               	movlw	1
 13934  015194  0100               	movlb	0	; () banked
 13935  015196  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13936  015198  0E01               	movlw	1
 13937  01519A  0100               	movlb	0	; () banked
 13938  01519C  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13939  01519E  0E00               	movlw	0
 13940  0151A0  0100               	movlb	0	; () banked
 13941  0151A2  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13942  0151A4  0E00               	movlw	0
 13943  0151A6  ECD7  F0AD         	call	_LCD_send_command
 13944                           
 13945                           ;src\LCD_44780.c: 312: LCD_clear ();
 13946  0151AA  EC7B  F0AE         	call	_LCD_clear	;wreg free
 13947                           
 13948                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 13949  0151AE  0E00               	movlw	0
 13950  0151B0  0100               	movlb	0	; () banked
 13951  0151B2  6F7B               	movwf	LCD_cursor@blinking& (0+255),b
 13952  0151B4  0E00               	movlw	0
 13953  0151B6  EC62  F0AE         	call	_LCD_cursor
 13954  0151BA  0012               	return		;funcret
 13955  0151BC                     __end_of_LCD_initialize:
 13956                           	opt stack 0
 13957                           tblptru	equ	0xFF8
 13958                           tblptrh	equ	0xFF7
 13959                           tblptrl	equ	0xFF6
 13960                           tablat	equ	0xFF5
 13961                           prodh	equ	0xFF4
 13962                           prodl	equ	0xFF3
 13963                           intcon	equ	0xFF2
 13964                           postinc0	equ	0xFEE
 13965                           wreg	equ	0xFE8
 13966                           indf2	equ	0xFDF
 13967                           postinc2	equ	0xFDE
 13968                           fsr2h	equ	0xFDA
 13969                           fsr2l	equ	0xFD9
 13970                           status	equ	0xFD8
 13971                           
 13972 ;; *************** function _delay_set_quartz *****************
 13973 ;; Defined at:
 13974 ;;		line 115 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 13975 ;; Parameters:    Size  Location     Type
 13976 ;;  frequency       1    wreg     unsigned char 
 13977 ;; Auto vars:     Size  Location     Type
 13978 ;;  frequency       1   15[BANK0 ] unsigned char 
 13979 ;; Return value:  Size  Location     Type
 13980 ;;		None               void
 13981 ;; Registers used:
 13982 ;;		wreg
 13983 ;; Tracked objects:
 13984 ;;		On entry : 0/0
 13985 ;;		On exit  : 0/0
 13986 ;;		Unchanged: 0/0
 13987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13989 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13991 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13992 ;;Total ram usage:        1 bytes
 13993 ;; Hardware stack levels used:    1
 13994 ;; Hardware stack levels required when called:    3
 13995 ;; This function calls:
 13996 ;;		Nothing
 13997 ;; This function is called by:
 13998 ;;		_LCD_initialize
 13999 ;; This function uses a non-reentrant model
 14000 ;;
 14001                           
 14002                           	psect	text30
 14003  015E78                     __ptext30:
 14004                           	opt stack 0
 14005  015E78                     _delay_set_quartz:
 14006                           	opt stack 25
 14007                           
 14008                           ;incstack = 0
 14009                           ;delay_set_quartz@frequency stored from wreg
 14010  015E78  0100               	movlb	0	; () banked
 14011  015E7A  6F6F               	movwf	delay_set_quartz@frequency& (0+255),b
 14012                           
 14013                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 14014  015E7C  C06F  F0EA         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 14015  015E80  0012               	return		;funcret
 14016  015E82                     __end_of_delay_set_quartz:
 14017                           	opt stack 0
 14018                           tblptru	equ	0xFF8
 14019                           tblptrh	equ	0xFF7
 14020                           tblptrl	equ	0xFF6
 14021                           tablat	equ	0xFF5
 14022                           prodh	equ	0xFF4
 14023                           prodl	equ	0xFF3
 14024                           intcon	equ	0xFF2
 14025                           postinc0	equ	0xFEE
 14026                           wreg	equ	0xFE8
 14027                           indf2	equ	0xFDF
 14028                           postinc2	equ	0xFDE
 14029                           fsr2h	equ	0xFDA
 14030                           fsr2l	equ	0xFD9
 14031                           status	equ	0xFD8
 14032                           
 14033 ;; *************** function _LCD_cursor *****************
 14034 ;; Defined at:
 14035 ;;		line 266 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14036 ;; Parameters:    Size  Location     Type
 14037 ;;  active          1    wreg     unsigned char 
 14038 ;;  blinking        1   27[BANK0 ] unsigned char 
 14039 ;; Auto vars:     Size  Location     Type
 14040 ;;  active          1   28[BANK0 ] unsigned char 
 14041 ;; Return value:  Size  Location     Type
 14042 ;;		None               void
 14043 ;; Registers used:
 14044 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14045 ;; Tracked objects:
 14046 ;;		On entry : 0/0
 14047 ;;		On exit  : 0/0
 14048 ;;		Unchanged: 0/0
 14049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14050 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14051 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14053 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14054 ;;Total ram usage:        2 bytes
 14055 ;; Hardware stack levels used:    1
 14056 ;; Hardware stack levels required when called:    7
 14057 ;; This function calls:
 14058 ;;		_LCD_send_command
 14059 ;; This function is called by:
 14060 ;;		_LCD_initialize
 14061 ;; This function uses a non-reentrant model
 14062 ;;
 14063                           
 14064                           	psect	text31
 14065  015CC4                     __ptext31:
 14066                           	opt stack 0
 14067  015CC4                     _LCD_cursor:
 14068                           	opt stack 21
 14069                           
 14070                           ;incstack = 0
 14071                           ;LCD_cursor@active stored from wreg
 14072  015CC4  0100               	movlb	0	; () banked
 14073  015CC6  6F7C               	movwf	LCD_cursor@active& (0+255),b
 14074                           
 14075                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 14076  015CC8  0E00               	movlw	0
 14077  015CCA  0100               	movlb	0	; () banked
 14078  015CCC  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14079  015CCE  0E00               	movlw	0
 14080  015CD0  0100               	movlb	0	; () banked
 14081  015CD2  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14082  015CD4  0E00               	movlw	0
 14083  015CD6  0100               	movlb	0	; () banked
 14084  015CD8  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14085  015CDA  0E00               	movlw	0
 14086  015CDC  ECD7  F0AD         	call	_LCD_send_command
 14087                           
 14088                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 14089  015CE0  0E01               	movlw	1
 14090  015CE2  0100               	movlb	0	; () banked
 14091  015CE4  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14092  015CE6  C07C  F078         	movff	LCD_cursor@active,LCD_send_command@D1
 14093  015CEA  C07B  F079         	movff	LCD_cursor@blinking,LCD_send_command@D0
 14094  015CEE  0E01               	movlw	1
 14095  015CF0  ECD7  F0AD         	call	_LCD_send_command
 14096  015CF4  0012               	return		;funcret
 14097  015CF6                     __end_of_LCD_cursor:
 14098                           	opt stack 0
 14099                           tblptru	equ	0xFF8
 14100                           tblptrh	equ	0xFF7
 14101                           tblptrl	equ	0xFF6
 14102                           tablat	equ	0xFF5
 14103                           prodh	equ	0xFF4
 14104                           prodl	equ	0xFF3
 14105                           intcon	equ	0xFF2
 14106                           postinc0	equ	0xFEE
 14107                           wreg	equ	0xFE8
 14108                           indf2	equ	0xFDF
 14109                           postinc2	equ	0xFDE
 14110                           fsr2h	equ	0xFDA
 14111                           fsr2l	equ	0xFD9
 14112                           status	equ	0xFD8
 14113                           
 14114 ;; *************** function _LCD_clear *****************
 14115 ;; Defined at:
 14116 ;;		line 257 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14117 ;; Parameters:    Size  Location     Type
 14118 ;;		None
 14119 ;; Auto vars:     Size  Location     Type
 14120 ;;		None
 14121 ;; Return value:  Size  Location     Type
 14122 ;;		None               void
 14123 ;; Registers used:
 14124 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14125 ;; Tracked objects:
 14126 ;;		On entry : 0/0
 14127 ;;		On exit  : 0/0
 14128 ;;		Unchanged: 0/0
 14129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14134 ;;Total ram usage:        0 bytes
 14135 ;; Hardware stack levels used:    1
 14136 ;; Hardware stack levels required when called:    7
 14137 ;; This function calls:
 14138 ;;		_LCD_send_command
 14139 ;; This function is called by:
 14140 ;;		_LCD_initialize
 14141 ;;		_LCD_Handler
 14142 ;;		_board_initialization
 14143 ;; This function uses a non-reentrant model
 14144 ;;
 14145                           
 14146                           	psect	text32
 14147  015CF6                     __ptext32:
 14148                           	opt stack 0
 14149  015CF6                     _LCD_clear:
 14150                           	opt stack 21
 14151                           
 14152                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 14153                           
 14154                           ;incstack = 0
 14155  015CF6  0E00               	movlw	0
 14156  015CF8  0100               	movlb	0	; () banked
 14157  015CFA  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14158  015CFC  0E00               	movlw	0
 14159  015CFE  0100               	movlb	0	; () banked
 14160  015D00  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14161  015D02  0E00               	movlw	0
 14162  015D04  0100               	movlb	0	; () banked
 14163  015D06  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14164  015D08  0E00               	movlw	0
 14165  015D0A  ECD7  F0AD         	call	_LCD_send_command
 14166                           
 14167                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 14168  015D0E  0E00               	movlw	0
 14169  015D10  0100               	movlb	0	; () banked
 14170  015D12  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14171  015D14  0E00               	movlw	0
 14172  015D16  0100               	movlb	0	; () banked
 14173  015D18  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14174  015D1A  0E01               	movlw	1
 14175  015D1C  0100               	movlb	0	; () banked
 14176  015D1E  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14177  015D20  0E00               	movlw	0
 14178  015D22  ECD7  F0AD         	call	_LCD_send_command
 14179  015D26  0012               	return		;funcret
 14180  015D28                     __end_of_LCD_clear:
 14181                           	opt stack 0
 14182                           tblptru	equ	0xFF8
 14183                           tblptrh	equ	0xFF7
 14184                           tblptrl	equ	0xFF6
 14185                           tablat	equ	0xFF5
 14186                           prodh	equ	0xFF4
 14187                           prodl	equ	0xFF3
 14188                           intcon	equ	0xFF2
 14189                           postinc0	equ	0xFEE
 14190                           wreg	equ	0xFE8
 14191                           indf2	equ	0xFDF
 14192                           postinc2	equ	0xFDE
 14193                           fsr2h	equ	0xFDA
 14194                           fsr2l	equ	0xFD9
 14195                           status	equ	0xFD8
 14196                           
 14197 ;; *************** function _LCD_goto_xy *****************
 14198 ;; Defined at:
 14199 ;;		line 136 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14200 ;; Parameters:    Size  Location     Type
 14201 ;;  x               1    wreg     unsigned char 
 14202 ;;  y               1   30[BANK0 ] unsigned char 
 14203 ;; Auto vars:     Size  Location     Type
 14204 ;;  x               1   31[BANK0 ] unsigned char 
 14205 ;; Return value:  Size  Location     Type
 14206 ;;		None               void
 14207 ;; Registers used:
 14208 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14209 ;; Tracked objects:
 14210 ;;		On entry : 0/0
 14211 ;;		On exit  : 0/0
 14212 ;;		Unchanged: 0/0
 14213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14214 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14215 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14217 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14218 ;;Total ram usage:        2 bytes
 14219 ;; Hardware stack levels used:    1
 14220 ;; Hardware stack levels required when called:    8
 14221 ;; This function calls:
 14222 ;;		_LCD_goto_line
 14223 ;;		_LCD_shift_cursor
 14224 ;; This function is called by:
 14225 ;;		_LCD_Handler
 14226 ;; This function uses a non-reentrant model
 14227 ;;
 14228                           
 14229                           	psect	text33
 14230  015DF8                     __ptext33:
 14231                           	opt stack 0
 14232  015DF8                     _LCD_goto_xy:
 14233                           	opt stack 21
 14234                           
 14235                           ;incstack = 0
 14236                           ;LCD_goto_xy@x stored from wreg
 14237  015DF8  0100               	movlb	0	; () banked
 14238  015DFA  6F7F               	movwf	LCD_goto_xy@x& (0+255),b
 14239                           
 14240                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 14241  015DFC  0100               	movlb	0	; () banked
 14242  015DFE  517E               	movf	LCD_goto_xy@y& (0+255),w,b
 14243  015E00  EC12  F0AA         	call	_LCD_goto_line
 14244                           
 14245                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 14246  015E04  0100               	movlb	0	; () banked
 14247  015E06  057F               	decf	LCD_goto_xy@x& (0+255),w,b
 14248  015E08  0100               	movlb	0	; () banked
 14249  015E0A  6F7B               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 14250  015E0C  0E01               	movlw	1
 14251  015E0E  EC6B  F0AD         	call	_LCD_shift_cursor
 14252  015E12  0012               	return		;funcret
 14253  015E14                     __end_of_LCD_goto_xy:
 14254                           	opt stack 0
 14255                           tblptru	equ	0xFF8
 14256                           tblptrh	equ	0xFF7
 14257                           tblptrl	equ	0xFF6
 14258                           tablat	equ	0xFF5
 14259                           prodh	equ	0xFF4
 14260                           prodl	equ	0xFF3
 14261                           intcon	equ	0xFF2
 14262                           postinc0	equ	0xFEE
 14263                           wreg	equ	0xFE8
 14264                           indf2	equ	0xFDF
 14265                           postinc2	equ	0xFDE
 14266                           fsr2h	equ	0xFDA
 14267                           fsr2l	equ	0xFD9
 14268                           status	equ	0xFD8
 14269                           
 14270 ;; *************** function _LCD_shift_cursor *****************
 14271 ;; Defined at:
 14272 ;;		line 98 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14273 ;; Parameters:    Size  Location     Type
 14274 ;;  shift           1    wreg     unsigned char 
 14275 ;;  number_of_sh    1   27[BANK0 ] unsigned char 
 14276 ;; Auto vars:     Size  Location     Type
 14277 ;;  shift           1   28[BANK0 ] unsigned char 
 14278 ;;  i               1   29[BANK0 ] unsigned char 
 14279 ;; Return value:  Size  Location     Type
 14280 ;;		None               void
 14281 ;; Registers used:
 14282 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14283 ;; Tracked objects:
 14284 ;;		On entry : 0/0
 14285 ;;		On exit  : 0/0
 14286 ;;		Unchanged: 0/0
 14287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14288 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14289 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14291 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14292 ;;Total ram usage:        3 bytes
 14293 ;; Hardware stack levels used:    1
 14294 ;; Hardware stack levels required when called:    7
 14295 ;; This function calls:
 14296 ;;		_LCD_send_command
 14297 ;; This function is called by:
 14298 ;;		_LCD_goto_xy
 14299 ;; This function uses a non-reentrant model
 14300 ;;
 14301                           
 14302                           	psect	text34
 14303  015AD6                     __ptext34:
 14304                           	opt stack 0
 14305  015AD6                     _LCD_shift_cursor:
 14306                           	opt stack 21
 14307                           
 14308                           ;incstack = 0
 14309                           ;LCD_shift_cursor@shift stored from wreg
 14310  015AD6  0100               	movlb	0	; () banked
 14311  015AD8  6F7C               	movwf	LCD_shift_cursor@shift& (0+255),b
 14312                           
 14313                           ;src\LCD_44780.c: 100: unsigned char i;
 14314                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 14315  015ADA  0E00               	movlw	0
 14316  015ADC  0100               	movlb	0	; () banked
 14317  015ADE  6F7D               	movwf	LCD_shift_cursor@i& (0+255),b
 14318  015AE0  D019               	goto	l7884
 14319  015AE2                     l7880:
 14320                           
 14321                           ; BSR set to: 0
 14322                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 14323  015AE2  0E00               	movlw	0
 14324  015AE4  0100               	movlb	0	; () banked
 14325  015AE6  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14326  015AE8  0E00               	movlw	0
 14327  015AEA  0100               	movlb	0	; () banked
 14328  015AEC  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14329  015AEE  0E01               	movlw	1
 14330  015AF0  0100               	movlb	0	; () banked
 14331  015AF2  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14332  015AF4  0E00               	movlw	0
 14333  015AF6  ECD7  F0AD         	call	_LCD_send_command
 14334                           
 14335                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 14336  015AFA  C07C  F077         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 14337  015AFE  0E00               	movlw	0
 14338  015B00  0100               	movlb	0	; () banked
 14339  015B02  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14340  015B04  0E00               	movlw	0
 14341  015B06  0100               	movlb	0	; () banked
 14342  015B08  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14343  015B0A  0E00               	movlw	0
 14344  015B0C  ECD7  F0AD         	call	_LCD_send_command
 14345  015B10  0100               	movlb	0	; () banked
 14346  015B12  2B7D               	incf	LCD_shift_cursor@i& (0+255),f,b
 14347  015B14                     l7884:
 14348                           
 14349                           ; BSR set to: 0
 14350  015B14  0100               	movlb	0	; () banked
 14351  015B16  517B               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 14352  015B18  0100               	movlb	0	; () banked
 14353  015B1A  5D7D               	subwf	LCD_shift_cursor@i& (0+255),w,b
 14354  015B1C  B0D8               	btfsc	status,0,c
 14355  015B1E  0012               	return	
 14356  015B20  D7E0               	goto	l7880
 14357  015B22                     __end_of_LCD_shift_cursor:
 14358                           	opt stack 0
 14359                           tblptru	equ	0xFF8
 14360                           tblptrh	equ	0xFF7
 14361                           tblptrl	equ	0xFF6
 14362                           tablat	equ	0xFF5
 14363                           prodh	equ	0xFF4
 14364                           prodl	equ	0xFF3
 14365                           intcon	equ	0xFF2
 14366                           postinc0	equ	0xFEE
 14367                           wreg	equ	0xFE8
 14368                           indf2	equ	0xFDF
 14369                           postinc2	equ	0xFDE
 14370                           fsr2h	equ	0xFDA
 14371                           fsr2l	equ	0xFD9
 14372                           status	equ	0xFD8
 14373                           
 14374 ;; *************** function _LCD_goto_line *****************
 14375 ;; Defined at:
 14376 ;;		line 111 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14377 ;; Parameters:    Size  Location     Type
 14378 ;;  line            1    wreg     unsigned char 
 14379 ;; Auto vars:     Size  Location     Type
 14380 ;;  line            1   27[BANK0 ] unsigned char 
 14381 ;; Return value:  Size  Location     Type
 14382 ;;		None               void
 14383 ;; Registers used:
 14384 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14385 ;; Tracked objects:
 14386 ;;		On entry : 0/0
 14387 ;;		On exit  : 0/0
 14388 ;;		Unchanged: 0/0
 14389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14391 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14393 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14394 ;;Total ram usage:        1 bytes
 14395 ;; Hardware stack levels used:    1
 14396 ;; Hardware stack levels required when called:    7
 14397 ;; This function calls:
 14398 ;;		_LCD_send_command
 14399 ;; This function is called by:
 14400 ;;		_LCD_goto_xy
 14401 ;;		_main
 14402 ;;		_LCD_Handler
 14403 ;;		_board_initialization
 14404 ;; This function uses a non-reentrant model
 14405 ;;
 14406                           
 14407                           	psect	text35
 14408  015424                     __ptext35:
 14409                           	opt stack 0
 14410  015424                     _LCD_goto_line:
 14411                           	opt stack 22
 14412                           
 14413                           ; BSR set to: 0
 14414                           ;incstack = 0
 14415                           ;LCD_goto_line@line stored from wreg
 14416  015424  0100               	movlb	0	; () banked
 14417  015426  6F7B               	movwf	LCD_goto_line@line& (0+255),b
 14418                           
 14419                           ;src\LCD_44780.c: 113: switch(line) {
 14420  015428  D064               	goto	l7896
 14421  01542A                     l7888:
 14422  01542A  0E00               	movlw	0
 14423  01542C  0100               	movlb	0	; () banked
 14424  01542E  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14425  015430  0E00               	movlw	0
 14426  015432  0100               	movlb	0	; () banked
 14427  015434  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14428  015436  0E00               	movlw	0
 14429  015438  0100               	movlb	0	; () banked
 14430  01543A  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14431  01543C  0E01               	movlw	1
 14432  01543E  ECD7  F0AD         	call	_LCD_send_command
 14433                           
 14434                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 14435  015442  0E00               	movlw	0
 14436  015444  0100               	movlb	0	; () banked
 14437  015446  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14438  015448  0E00               	movlw	0
 14439  01544A  0100               	movlb	0	; () banked
 14440  01544C  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14441  01544E  0E00               	movlw	0
 14442  015450  0100               	movlb	0	; () banked
 14443  015452  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14444  015454  0E00               	movlw	0
 14445  015456  ECD7  F0AD         	call	_LCD_send_command
 14446                           
 14447                           ;src\LCD_44780.c: 117: break;
 14448  01545A  0012               	return	
 14449  01545C                     l7890:
 14450  01545C  0E01               	movlw	1
 14451  01545E  0100               	movlb	0	; () banked
 14452  015460  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14453  015462  0E00               	movlw	0
 14454  015464  0100               	movlb	0	; () banked
 14455  015466  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14456  015468  0E00               	movlw	0
 14457  01546A  0100               	movlb	0	; () banked
 14458  01546C  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14459  01546E  0E01               	movlw	1
 14460  015470  ECD7  F0AD         	call	_LCD_send_command
 14461                           
 14462                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 14463  015474  0E00               	movlw	0
 14464  015476  0100               	movlb	0	; () banked
 14465  015478  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14466  01547A  0E00               	movlw	0
 14467  01547C  0100               	movlb	0	; () banked
 14468  01547E  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14469  015480  0E00               	movlw	0
 14470  015482  0100               	movlb	0	; () banked
 14471  015484  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14472  015486  0E00               	movlw	0
 14473  015488  ECD7  F0AD         	call	_LCD_send_command
 14474                           
 14475                           ;src\LCD_44780.c: 121: break;
 14476  01548C  0012               	return	
 14477  01548E                     l7892:
 14478  01548E  0E00               	movlw	0
 14479  015490  0100               	movlb	0	; () banked
 14480  015492  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14481  015494  0E00               	movlw	0
 14482  015496  0100               	movlb	0	; () banked
 14483  015498  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14484  01549A  0E01               	movlw	1
 14485  01549C  0100               	movlb	0	; () banked
 14486  01549E  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14487  0154A0  0E01               	movlw	1
 14488  0154A2  ECD7  F0AD         	call	_LCD_send_command
 14489                           
 14490                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 14491  0154A6  0E01               	movlw	1
 14492  0154A8  0100               	movlb	0	; () banked
 14493  0154AA  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14494  0154AC  0E00               	movlw	0
 14495  0154AE  0100               	movlb	0	; () banked
 14496  0154B0  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14497  0154B2  0E00               	movlw	0
 14498  0154B4  0100               	movlb	0	; () banked
 14499  0154B6  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14500  0154B8  0E00               	movlw	0
 14501  0154BA  ECD7  F0AD         	call	_LCD_send_command
 14502                           
 14503                           ;src\LCD_44780.c: 125: break;
 14504  0154BE  0012               	return	
 14505  0154C0                     l7894:
 14506  0154C0  0E01               	movlw	1
 14507  0154C2  0100               	movlb	0	; () banked
 14508  0154C4  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14509  0154C6  0E00               	movlw	0
 14510  0154C8  0100               	movlb	0	; () banked
 14511  0154CA  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14512  0154CC  0E01               	movlw	1
 14513  0154CE  0100               	movlb	0	; () banked
 14514  0154D0  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14515  0154D2  0E01               	movlw	1
 14516  0154D4  ECD7  F0AD         	call	_LCD_send_command
 14517                           
 14518                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 14519  0154D8  0E01               	movlw	1
 14520  0154DA  0100               	movlb	0	; () banked
 14521  0154DC  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14522  0154DE  0E00               	movlw	0
 14523  0154E0  0100               	movlb	0	; () banked
 14524  0154E2  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14525  0154E4  0E00               	movlw	0
 14526  0154E6  0100               	movlb	0	; () banked
 14527  0154E8  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14528  0154EA  0E00               	movlw	0
 14529  0154EC  ECD7  F0AD         	call	_LCD_send_command
 14530                           
 14531                           ;src\LCD_44780.c: 129: }
 14532  0154F0  0012               	return	
 14533  0154F2                     l7896:
 14534  0154F2  0100               	movlb	0	; () banked
 14535  0154F4  517B               	movf	LCD_goto_line@line& (0+255),w,b
 14536                           
 14537                           ; Switch size 1, requested type "space"
 14538                           ; Number of cases is 4, Range of values is 1 to 4
 14539                           ; switch strategies available:
 14540                           ; Name         Instructions Cycles
 14541                           ; simple_byte           13     7 (average)
 14542                           ;	Chosen strategy is simple_byte
 14543  0154F6  0A01               	xorlw	1	; case 1
 14544  0154F8  B4D8               	btfsc	status,2,c
 14545  0154FA  D797               	goto	l7888
 14546  0154FC  0A03               	xorlw	3	; case 2
 14547  0154FE  B4D8               	btfsc	status,2,c
 14548  015500  D7AD               	goto	l7890
 14549  015502  0A01               	xorlw	1	; case 3
 14550  015504  B4D8               	btfsc	status,2,c
 14551  015506  D7C3               	goto	l7892
 14552  015508  0A07               	xorlw	7	; case 4
 14553  01550A  A4D8               	btfss	status,2,c
 14554  01550C  0012               	return	
 14555  01550E  D7D8               	goto	l7894
 14556  015510                     __end_of_LCD_goto_line:
 14557                           	opt stack 0
 14558                           tblptru	equ	0xFF8
 14559                           tblptrh	equ	0xFF7
 14560                           tblptrl	equ	0xFF6
 14561                           tablat	equ	0xFF5
 14562                           prodh	equ	0xFF4
 14563                           prodl	equ	0xFF3
 14564                           intcon	equ	0xFF2
 14565                           postinc0	equ	0xFEE
 14566                           wreg	equ	0xFE8
 14567                           indf2	equ	0xFDF
 14568                           postinc2	equ	0xFDE
 14569                           fsr2h	equ	0xFDA
 14570                           fsr2l	equ	0xFD9
 14571                           status	equ	0xFD8
 14572                           
 14573 ;; *************** function _LCD_send_command *****************
 14574 ;; Defined at:
 14575 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14576 ;; Parameters:    Size  Location     Type
 14577 ;;  D3              1    wreg     unsigned char 
 14578 ;;  D2              1   23[BANK0 ] unsigned char 
 14579 ;;  D1              1   24[BANK0 ] unsigned char 
 14580 ;;  D0              1   25[BANK0 ] unsigned char 
 14581 ;; Auto vars:     Size  Location     Type
 14582 ;;  D3              1   26[BANK0 ] unsigned char 
 14583 ;; Return value:  Size  Location     Type
 14584 ;;		None               void
 14585 ;; Registers used:
 14586 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14587 ;; Tracked objects:
 14588 ;;		On entry : 0/0
 14589 ;;		On exit  : 0/0
 14590 ;;		Unchanged: 0/0
 14591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14592 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14593 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14595 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14596 ;;Total ram usage:        4 bytes
 14597 ;; Hardware stack levels used:    1
 14598 ;; Hardware stack levels required when called:    6
 14599 ;; This function calls:
 14600 ;;		_LCD_enable_pulse
 14601 ;; This function is called by:
 14602 ;;		_LCD_shift_cursor
 14603 ;;		_LCD_goto_line
 14604 ;;		_LCD_write_char
 14605 ;;		_LCD_clear
 14606 ;;		_LCD_cursor
 14607 ;;		_LCD_initialize
 14608 ;;		_LCD_home
 14609 ;;		_LCD_shift
 14610 ;; This function uses a non-reentrant model
 14611 ;;
 14612                           
 14613                           	psect	text36
 14614  015BAE                     __ptext36:
 14615                           	opt stack 0
 14616  015BAE                     _LCD_send_command:
 14617                           	opt stack 21
 14618                           
 14619                           ;incstack = 0
 14620                           ;LCD_send_command@D3 stored from wreg
 14621  015BAE  0100               	movlb	0	; () banked
 14622  015BB0  6F7A               	movwf	LCD_send_command@D3& (0+255),b
 14623                           
 14624                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 14625  015BB2  0100               	movlb	0	; () banked
 14626  015BB4  B179               	btfsc	LCD_send_command@D0& (0+255),0,b
 14627  015BB6  D002               	bra	u9675
 14628  015BB8  948B               	bcf	3979,2,c	;volatile
 14629  015BBA  D001               	bra	u9676
 14630  015BBC                     u9675:
 14631  015BBC  848B               	bsf	3979,2,c	;volatile
 14632  015BBE                     u9676:
 14633                           
 14634                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 14635  015BBE  0100               	movlb	0	; () banked
 14636  015BC0  B178               	btfsc	LCD_send_command@D1& (0+255),0,b
 14637  015BC2  D002               	bra	u9685
 14638  015BC4  968B               	bcf	3979,3,c	;volatile
 14639  015BC6  D001               	bra	u9686
 14640  015BC8                     u9685:
 14641  015BC8  868B               	bsf	3979,3,c	;volatile
 14642  015BCA                     u9686:
 14643                           
 14644                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 14645  015BCA  0100               	movlb	0	; () banked
 14646  015BCC  B177               	btfsc	LCD_send_command@D2& (0+255),0,b
 14647  015BCE  D002               	bra	u9695
 14648  015BD0  908C               	bcf	3980,0,c	;volatile
 14649  015BD2  D001               	bra	u9696
 14650  015BD4                     u9695:
 14651  015BD4  808C               	bsf	3980,0,c	;volatile
 14652  015BD6                     u9696:
 14653                           
 14654                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 14655  015BD6  0100               	movlb	0	; () banked
 14656  015BD8  B17A               	btfsc	LCD_send_command@D3& (0+255),0,b
 14657  015BDA  D002               	bra	u9705
 14658  015BDC  928C               	bcf	3980,1,c	;volatile
 14659  015BDE  D001               	bra	u9706
 14660  015BE0                     u9705:
 14661  015BE0  828C               	bsf	3980,1,c	;volatile
 14662  015BE2                     u9706:
 14663                           
 14664                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 14665  015BE2  ECCE  F0AE         	call	_LCD_enable_pulse	;wreg free
 14666  015BE6  0012               	return		;funcret
 14667  015BE8                     __end_of_LCD_send_command:
 14668                           	opt stack 0
 14669                           tblptru	equ	0xFF8
 14670                           tblptrh	equ	0xFF7
 14671                           tblptrl	equ	0xFF6
 14672                           tablat	equ	0xFF5
 14673                           prodh	equ	0xFF4
 14674                           prodl	equ	0xFF3
 14675                           intcon	equ	0xFF2
 14676                           postinc0	equ	0xFEE
 14677                           wreg	equ	0xFE8
 14678                           indf2	equ	0xFDF
 14679                           postinc2	equ	0xFDE
 14680                           fsr2h	equ	0xFDA
 14681                           fsr2l	equ	0xFD9
 14682                           status	equ	0xFD8
 14683                           
 14684 ;; *************** function _LCD_enable_pulse *****************
 14685 ;; Defined at:
 14686 ;;		line 49 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14687 ;; Parameters:    Size  Location     Type
 14688 ;;		None
 14689 ;; Auto vars:     Size  Location     Type
 14690 ;;		None
 14691 ;; Return value:  Size  Location     Type
 14692 ;;		None               void
 14693 ;; Registers used:
 14694 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14695 ;; Tracked objects:
 14696 ;;		On entry : 0/0
 14697 ;;		On exit  : 0/0
 14698 ;;		Unchanged: 0/0
 14699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14704 ;;Total ram usage:        0 bytes
 14705 ;; Hardware stack levels used:    1
 14706 ;; Hardware stack levels required when called:    5
 14707 ;; This function calls:
 14708 ;;		_delay_ms
 14709 ;; This function is called by:
 14710 ;;		_LCD_send_command
 14711 ;; This function uses a non-reentrant model
 14712 ;;
 14713                           
 14714                           	psect	text37
 14715  015D9C                     __ptext37:
 14716                           	opt stack 0
 14717  015D9C                     _LCD_enable_pulse:
 14718                           	opt stack 21
 14719                           
 14720                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 14721                           
 14722                           ;incstack = 0
 14723  015D9C  828B               	bsf	3979,1,c	;volatile
 14724                           
 14725                           ;src\LCD_44780.c: 52: delay_ms (1);
 14726  015D9E  0E00               	movlw	0
 14727  015DA0  0100               	movlb	0	; () banked
 14728  015DA2  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14729  015DA4  0E01               	movlw	1
 14730  015DA6  6F75               	movwf	delay_ms@value_ms& (0+255),b
 14731  015DA8  ECF4  F0AD         	call	_delay_ms	;wreg free
 14732                           
 14733                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 14734  015DAC  928B               	bcf	3979,1,c	;volatile
 14735                           
 14736                           ;src\LCD_44780.c: 54: delay_ms (1);
 14737  015DAE  0E00               	movlw	0
 14738  015DB0  0100               	movlb	0	; () banked
 14739  015DB2  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14740  015DB4  0E01               	movlw	1
 14741  015DB6  6F75               	movwf	delay_ms@value_ms& (0+255),b
 14742  015DB8  ECF4  F0AD         	call	_delay_ms	;wreg free
 14743  015DBC  0012               	return		;funcret
 14744  015DBE                     __end_of_LCD_enable_pulse:
 14745                           	opt stack 0
 14746                           tblptru	equ	0xFF8
 14747                           tblptrh	equ	0xFF7
 14748                           tblptrl	equ	0xFF6
 14749                           tablat	equ	0xFF5
 14750                           prodh	equ	0xFF4
 14751                           prodl	equ	0xFF3
 14752                           intcon	equ	0xFF2
 14753                           postinc0	equ	0xFEE
 14754                           wreg	equ	0xFE8
 14755                           indf2	equ	0xFDF
 14756                           postinc2	equ	0xFDE
 14757                           fsr2h	equ	0xFDA
 14758                           fsr2l	equ	0xFD9
 14759                           status	equ	0xFD8
 14760                           
 14761 ;; *************** function _delay_ms *****************
 14762 ;; Defined at:
 14763 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 14764 ;; Parameters:    Size  Location     Type
 14765 ;;  value_ms        2   21[BANK0 ] unsigned int 
 14766 ;; Auto vars:     Size  Location     Type
 14767 ;;		None
 14768 ;; Return value:  Size  Location     Type
 14769 ;;		None               void
 14770 ;; Registers used:
 14771 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14772 ;; Tracked objects:
 14773 ;;		On entry : 0/0
 14774 ;;		On exit  : 0/0
 14775 ;;		Unchanged: 0/0
 14776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14777 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14780 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14781 ;;Total ram usage:        2 bytes
 14782 ;; Hardware stack levels used:    1
 14783 ;; Hardware stack levels required when called:    4
 14784 ;; This function calls:
 14785 ;;		___wmul
 14786 ;; This function is called by:
 14787 ;;		_LCD_enable_pulse
 14788 ;;		_LCD_initialize
 14789 ;;		_main
 14790 ;;		_board_initialization
 14791 ;;		_delay_s
 14792 ;; This function uses a non-reentrant model
 14793 ;;
 14794                           
 14795                           	psect	text38
 14796  015BE8                     __ptext38:
 14797                           	opt stack 0
 14798  015BE8                     _delay_ms:
 14799                           	opt stack 26
 14800                           
 14801                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 14802                           
 14803                           ;incstack = 0
 14804  015BE8  C0EA  F06F         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 14805  015BEC  0100               	movlb	0	; () banked
 14806  015BEE  6B70               	clrf	(___wmul@multiplier+1)& (0+255),b
 14807  015BF0  C075  F071         	movff	delay_ms@value_ms,___wmul@multiplicand
 14808  015BF4  C076  F072         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 14809  015BF8  EC2D  F0AE         	call	___wmul	;wreg free
 14810  015BFC  C06F  F0DF         	movff	?___wmul,_clock_counter_reference	;volatile
 14811  015C00  C070  F0E0         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 14812                           
 14813                           ;src\delay.c: 75: while (clock_counter_reference) {
 14814  015C04  D007               	goto	l581
 14815  015C06                     l7450:
 14816                           
 14817                           ;src\delay.c: 85: _delay(240);
 14818  015C06  0E50               	movlw	80
 14819  015C08                     u12487:
 14820  015C08  2EE8               	decfsz	wreg,f,c
 14821  015C0A  D7FE               	goto	u12487
 14822                           
 14823                           ;src\delay.c: 88: clock_counter_reference--;
 14824  015C0C  0100               	movlb	0	; () banked
 14825  015C0E  07DF               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 14826  015C10  A0D8               	btfss	status,0,c
 14827  015C12  07E0               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 14828  015C14                     l581:
 14829  015C14  0100               	movlb	0	; () banked
 14830  015C16  51DF               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 14831  015C18  0100               	movlb	0	; () banked
 14832  015C1A  11E0               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 14833  015C1C  B4D8               	btfsc	status,2,c
 14834  015C1E  0012               	return	
 14835  015C20  D7F2               	goto	l7450
 14836  015C22                     __end_of_delay_ms:
 14837                           	opt stack 0
 14838                           tblptru	equ	0xFF8
 14839                           tblptrh	equ	0xFF7
 14840                           tblptrl	equ	0xFF6
 14841                           tablat	equ	0xFF5
 14842                           prodh	equ	0xFF4
 14843                           prodl	equ	0xFF3
 14844                           intcon	equ	0xFF2
 14845                           postinc0	equ	0xFEE
 14846                           wreg	equ	0xFE8
 14847                           indf2	equ	0xFDF
 14848                           postinc2	equ	0xFDE
 14849                           fsr2h	equ	0xFDA
 14850                           fsr2l	equ	0xFD9
 14851                           status	equ	0xFD8
 14852                           
 14853 ;; *************** function ___wmul *****************
 14854 ;; Defined at:
 14855 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 14856 ;; Parameters:    Size  Location     Type
 14857 ;;  multiplier      2   15[BANK0 ] unsigned int 
 14858 ;;  multiplicand    2   17[BANK0 ] unsigned int 
 14859 ;; Auto vars:     Size  Location     Type
 14860 ;;  product         2   19[BANK0 ] unsigned int 
 14861 ;; Return value:  Size  Location     Type
 14862 ;;                  2   15[BANK0 ] unsigned int 
 14863 ;; Registers used:
 14864 ;;		wreg, status,2, status,0, prodl, prodh
 14865 ;; Tracked objects:
 14866 ;;		On entry : 0/0
 14867 ;;		On exit  : 0/0
 14868 ;;		Unchanged: 0/0
 14869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14870 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14871 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14873 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14874 ;;Total ram usage:        6 bytes
 14875 ;; Hardware stack levels used:    1
 14876 ;; Hardware stack levels required when called:    3
 14877 ;; This function calls:
 14878 ;;		Nothing
 14879 ;; This function is called by:
 14880 ;;		_delay_ms
 14881 ;;		_sprintf
 14882 ;; This function uses a non-reentrant model
 14883 ;;
 14884                           
 14885                           	psect	text39
 14886  015C5A                     __ptext39:
 14887                           	opt stack 0
 14888  015C5A                     ___wmul:
 14889                           	opt stack 26
 14890                           
 14891                           ; BSR set to: 0
 14892                           ;incstack = 0
 14893  015C5A  0100               	movlb	0	; () banked
 14894  015C5C  516F               	movf	___wmul@multiplier& (0+255),w,b
 14895  015C5E  0100               	movlb	0	; () banked
 14896  015C60  0371               	mulwf	___wmul@multiplicand& (0+255),b
 14897  015C62  CFF3 F073          	movff	prodl,___wmul@product
 14898  015C66  CFF4 F074          	movff	prodh,___wmul@product+1
 14899  015C6A  0100               	movlb	0	; () banked
 14900  015C6C  516F               	movf	___wmul@multiplier& (0+255),w,b
 14901  015C6E  0100               	movlb	0	; () banked
 14902  015C70  0372               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14903  015C72  50F3               	movf	prodl,w,c
 14904  015C74  0100               	movlb	0	; () banked
 14905  015C76  2774               	addwf	(___wmul@product+1)& (0+255),f,b
 14906  015C78  0100               	movlb	0	; () banked
 14907  015C7A  5170               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14908  015C7C  0100               	movlb	0	; () banked
 14909  015C7E  0371               	mulwf	___wmul@multiplicand& (0+255),b
 14910  015C80  50F3               	movf	prodl,w,c
 14911  015C82  0100               	movlb	0	; () banked
 14912  015C84  2774               	addwf	(___wmul@product+1)& (0+255),f,b
 14913                           
 14914                           ; BSR set to: 0
 14915  015C86  C073  F06F         	movff	___wmul@product,?___wmul
 14916  015C8A  C074  F070         	movff	___wmul@product+1,?___wmul+1
 14917  015C8E  0012               	return	
 14918  015C90                     __end_of___wmul:
 14919                           	opt stack 0
 14920                           tblptru	equ	0xFF8
 14921                           tblptrh	equ	0xFF7
 14922                           tblptrl	equ	0xFF6
 14923                           tablat	equ	0xFF5
 14924                           prodh	equ	0xFF4
 14925                           prodl	equ	0xFF3
 14926                           intcon	equ	0xFF2
 14927                           postinc0	equ	0xFEE
 14928                           wreg	equ	0xFE8
 14929                           indf2	equ	0xFDF
 14930                           postinc2	equ	0xFDE
 14931                           fsr2h	equ	0xFDA
 14932                           fsr2l	equ	0xFD9
 14933                           status	equ	0xFD8
 14934                           
 14935 ;; *************** function _Joystick_Polling *****************
 14936 ;; Defined at:
 14937 ;;		line 419 in file "RemoteCan.c"
 14938 ;; Parameters:    Size  Location     Type
 14939 ;;		None
 14940 ;; Auto vars:     Size  Location     Type
 14941 ;;  i               1   16[BANK0 ] unsigned char 
 14942 ;; Return value:  Size  Location     Type
 14943 ;;		None               void
 14944 ;; Registers used:
 14945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14946 ;; Tracked objects:
 14947 ;;		On entry : 0/0
 14948 ;;		On exit  : 0/0
 14949 ;;		Unchanged: 0/0
 14950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14952 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14953 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14954 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14955 ;;Total ram usage:        2 bytes
 14956 ;; Hardware stack levels used:    1
 14957 ;; Hardware stack levels required when called:    3
 14958 ;; This function calls:
 14959 ;;		Nothing
 14960 ;; This function is called by:
 14961 ;;		_main
 14962 ;; This function uses a non-reentrant model
 14963 ;;
 14964                           
 14965                           	psect	text40
 14966  015A82                     __ptext40:
 14967                           	opt stack 0
 14968  015A82                     _Joystick_Polling:
 14969                           	opt stack 27
 14970                           
 14971                           ;RemoteCan.c: 420: for (unsigned char i = 0; i < 2; i++) {
 14972                           
 14973                           ; BSR set to: 0
 14974                           ;incstack = 0
 14975  015A82  0E00               	movlw	0
 14976  015A84  0100               	movlb	0	; () banked
 14977  015A86  6F70               	movwf	Joystick_Polling@i& (0+255),b
 14978  015A88                     l6722:
 14979                           
 14980                           ; BSR set to: 0
 14981  015A88  0E01               	movlw	1
 14982  015A8A  0100               	movlb	0	; () banked
 14983  015A8C  6570               	cpfsgt	Joystick_Polling@i& (0+255),b
 14984  015A8E  D001               	goto	l866
 14985  015A90  0012               	return	
 14986  015A92                     l866:
 14987                           
 14988                           ; BSR set to: 0
 14989                           ;RemoteCan.c: 421: ADCON0bits.GO = 1;
 14990  015A92  82C2               	bsf	4034,1,c	;volatile
 14991  015A94                     l868:
 14992  015A94  B2C2               	btfsc	4034,1,c	;volatile
 14993  015A96  D7FE               	goto	l868
 14994                           
 14995                           ;RemoteCan.c: 423: JoystickValues[i] = ADRESH;
 14996  015A98  0100               	movlb	0	; () banked
 14997  015A9A  5170               	movf	Joystick_Polling@i& (0+255),w,b
 14998  015A9C  0D01               	mullw	1
 14999  015A9E  0EDB               	movlw	low _JoystickValues
 15000  015AA0  24F3               	addwf	prodl,w,c
 15001  015AA2  6ED9               	movwf	fsr2l,c
 15002  015AA4  0E00               	movlw	high _JoystickValues
 15003  015AA6  20F4               	addwfc	prodh,w,c
 15004  015AA8  6EDA               	movwf	fsr2h,c
 15005  015AAA  CFC4 FFDF          	movff	4036,indf2	;volatile
 15006                           
 15007                           ; BSR set to: 0
 15008                           ;RemoteCan.c: 424: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 15009  015AAE  A4C2               	btfss	4034,2,c	;volatile
 15010  015AB0  D002               	goto	u8550
 15011  015AB2  0E01               	movlw	1
 15012  015AB4  D001               	goto	u8556
 15013  015AB6                     u8550:
 15014  015AB6  0E00               	movlw	0
 15015  015AB8                     u8556:
 15016  015AB8  0AFF               	xorlw	255
 15017  015ABA  0100               	movlb	0	; () banked
 15018  015ABC  6F6F               	movwf	??_Joystick_Polling& (0+255),b
 15019  015ABE  0100               	movlb	0	; () banked
 15020  015AC0  476F               	rlncf	??_Joystick_Polling& (0+255),f,b
 15021  015AC2  476F               	rlncf	??_Joystick_Polling& (0+255),f,b
 15022  015AC4  50C2               	movf	4034,w,c	;volatile
 15023  015AC6  0100               	movlb	0	; () banked
 15024  015AC8  196F               	xorwf	??_Joystick_Polling& (0+255),w,b
 15025  015ACA  0BFB               	andlw	-5
 15026  015ACC  196F               	xorwf	??_Joystick_Polling& (0+255),w,b
 15027  015ACE  6EC2               	movwf	4034,c	;volatile
 15028                           
 15029                           ; BSR set to: 0
 15030  015AD0  0100               	movlb	0	; () banked
 15031  015AD2  2B70               	incf	Joystick_Polling@i& (0+255),f,b
 15032  015AD4  D7D9               	goto	l6722
 15033  015AD6                     __end_of_Joystick_Polling:
 15034                           	opt stack 0
 15035                           tblptru	equ	0xFF8
 15036                           tblptrh	equ	0xFF7
 15037                           tblptrl	equ	0xFF6
 15038                           tablat	equ	0xFF5
 15039                           prodh	equ	0xFF4
 15040                           prodl	equ	0xFF3
 15041                           intcon	equ	0xFF2
 15042                           postinc0	equ	0xFEE
 15043                           wreg	equ	0xFE8
 15044                           indf2	equ	0xFDF
 15045                           postinc2	equ	0xFDE
 15046                           fsr2h	equ	0xFDA
 15047                           fsr2l	equ	0xFD9
 15048                           status	equ	0xFD8
 15049                           
 15050 ;; *************** function _F2_Button_Polling *****************
 15051 ;; Defined at:
 15052 ;;		line 409 in file "RemoteCan.c"
 15053 ;; Parameters:    Size  Location     Type
 15054 ;;		None
 15055 ;; Auto vars:     Size  Location     Type
 15056 ;;		None
 15057 ;; Return value:  Size  Location     Type
 15058 ;;		None               void
 15059 ;; Registers used:
 15060 ;;		None
 15061 ;; Tracked objects:
 15062 ;;		On entry : 0/0
 15063 ;;		On exit  : 0/0
 15064 ;;		Unchanged: 0/0
 15065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15070 ;;Total ram usage:        0 bytes
 15071 ;; Hardware stack levels used:    1
 15072 ;; Hardware stack levels required when called:    3
 15073 ;; This function calls:
 15074 ;;		Nothing
 15075 ;; This function is called by:
 15076 ;;		_main
 15077 ;; This function uses a non-reentrant model
 15078 ;;
 15079                           
 15080                           	psect	text41
 15081  015E14                     __ptext41:
 15082                           	opt stack 0
 15083  015E14                     _F2_Button_Polling:
 15084                           	opt stack 27
 15085                           
 15086                           ;RemoteCan.c: 410: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 15087                           
 15088                           ; BSR set to: 0
 15089                           ;incstack = 0
 15090  015E14  A281               	btfss	3969,1,c	;volatile
 15091  015E16  D002               	goto	l861
 15092  015E18  B64D               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15093  015E1A  0012               	return	
 15094  015E1C                     l861:
 15095                           
 15096                           ;RemoteCan.c: 411: wait_low_3 = 0;
 15097  015E1C  964D               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15098                           
 15099                           ;RemoteCan.c: 412: if (PORTBbits.RB1 == 1) {
 15100  015E1E  A281               	btfss	3969,1,c	;volatile
 15101  015E20  0012               	return	
 15102                           
 15103                           ;RemoteCan.c: 413: F2_switch = ~F2_switch;
 15104  015E22  B44C               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 15105  015E24  D002               	goto	u8480
 15106  015E26  844C               	bsf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 15107  015E28  D001               	goto	u8495
 15108  015E2A                     u8480:
 15109  015E2A  944C               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 15110  015E2C                     u8495:
 15111                           
 15112                           ;RemoteCan.c: 414: wait_low_3 = 1;
 15113  015E2C  864D               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15114  015E2E  0012               	return	
 15115  015E30                     __end_of_F2_Button_Polling:
 15116                           	opt stack 0
 15117                           tblptru	equ	0xFF8
 15118                           tblptrh	equ	0xFF7
 15119                           tblptrl	equ	0xFF6
 15120                           tablat	equ	0xFF5
 15121                           prodh	equ	0xFF4
 15122                           prodl	equ	0xFF3
 15123                           intcon	equ	0xFF2
 15124                           postinc0	equ	0xFEE
 15125                           wreg	equ	0xFE8
 15126                           indf2	equ	0xFDF
 15127                           postinc2	equ	0xFDE
 15128                           fsr2h	equ	0xFDA
 15129                           fsr2l	equ	0xFD9
 15130                           status	equ	0xFD8
 15131                           
 15132 ;; *************** function _F1_Button_Polling *****************
 15133 ;; Defined at:
 15134 ;;		line 399 in file "RemoteCan.c"
 15135 ;; Parameters:    Size  Location     Type
 15136 ;;		None
 15137 ;; Auto vars:     Size  Location     Type
 15138 ;;		None
 15139 ;; Return value:  Size  Location     Type
 15140 ;;		None               void
 15141 ;; Registers used:
 15142 ;;		None
 15143 ;; Tracked objects:
 15144 ;;		On entry : 0/0
 15145 ;;		On exit  : 0/0
 15146 ;;		Unchanged: 0/0
 15147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15152 ;;Total ram usage:        0 bytes
 15153 ;; Hardware stack levels used:    1
 15154 ;; Hardware stack levels required when called:    3
 15155 ;; This function calls:
 15156 ;;		Nothing
 15157 ;; This function is called by:
 15158 ;;		_main
 15159 ;; This function uses a non-reentrant model
 15160 ;;
 15161                           
 15162                           	psect	text42
 15163  015E30                     __ptext42:
 15164                           	opt stack 0
 15165  015E30                     _F1_Button_Polling:
 15166                           	opt stack 27
 15167                           
 15168                           ;RemoteCan.c: 400: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 15169                           
 15170                           ;incstack = 0
 15171  015E30  A881               	btfss	3969,4,c	;volatile
 15172  015E32  D002               	goto	l854
 15173  015E34  B44D               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15174  015E36  0012               	return	
 15175  015E38                     l854:
 15176                           
 15177                           ;RemoteCan.c: 401: wait_low_2 = 0;
 15178  015E38  944D               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15179                           
 15180                           ;RemoteCan.c: 402: if (PORTBbits.RB4 == 1) {
 15181  015E3A  A881               	btfss	3969,4,c	;volatile
 15182  015E3C  0012               	return	
 15183                           
 15184                           ;RemoteCan.c: 403: F1_switch = ~F1_switch;
 15185  015E3E  B24C               	btfsc	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 15186  015E40  D002               	goto	u8430
 15187  015E42  824C               	bsf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 15188  015E44  D001               	goto	u8445
 15189  015E46                     u8430:
 15190  015E46  924C               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 15191  015E48                     u8445:
 15192                           
 15193                           ;RemoteCan.c: 404: wait_low_2 = 1;
 15194  015E48  844D               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15195  015E4A  0012               	return	
 15196  015E4C                     __end_of_F1_Button_Polling:
 15197                           	opt stack 0
 15198                           tblptru	equ	0xFF8
 15199                           tblptrh	equ	0xFF7
 15200                           tblptrl	equ	0xFF6
 15201                           tablat	equ	0xFF5
 15202                           prodh	equ	0xFF4
 15203                           prodl	equ	0xFF3
 15204                           intcon	equ	0xFF2
 15205                           postinc0	equ	0xFEE
 15206                           wreg	equ	0xFE8
 15207                           indf2	equ	0xFDF
 15208                           postinc2	equ	0xFDE
 15209                           fsr2h	equ	0xFDA
 15210                           fsr2l	equ	0xFD9
 15211                           status	equ	0xFD8
 15212                           
 15213 ;; *************** function _CAN_interpreter *****************
 15214 ;; Defined at:
 15215 ;;		line 351 in file "RemoteCan.c"
 15216 ;; Parameters:    Size  Location     Type
 15217 ;;		None
 15218 ;; Auto vars:     Size  Location     Type
 15219 ;;		None
 15220 ;; Return value:  Size  Location     Type
 15221 ;;		None               void
 15222 ;; Registers used:
 15223 ;;		wreg, status,2, status,0
 15224 ;; Tracked objects:
 15225 ;;		On entry : 0/0
 15226 ;;		On exit  : 0/0
 15227 ;;		Unchanged: 0/0
 15228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15231 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15232 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15233 ;;Total ram usage:        4 bytes
 15234 ;; Hardware stack levels used:    1
 15235 ;; Hardware stack levels required when called:    3
 15236 ;; This function calls:
 15237 ;;		Nothing
 15238 ;; This function is called by:
 15239 ;;		_main
 15240 ;; This function uses a non-reentrant model
 15241 ;;
 15242                           
 15243                           	psect	text43
 15244  015806                     __ptext43:
 15245                           	opt stack 0
 15246  015806                     _CAN_interpreter:
 15247                           	opt stack 27
 15248                           
 15249                           ;RemoteCan.c: 352: if (id == 0b00000000010) {
 15250                           
 15251                           ;incstack = 0
 15252  015806  0E02               	movlw	2
 15253  015808  180C               	xorwf	_id,w,c	;volatile
 15254  01580A  100D               	iorwf	_id+1,w,c	;volatile
 15255  01580C  100E               	iorwf	_id+2,w,c	;volatile
 15256  01580E  100F               	iorwf	_id+3,w,c	;volatile
 15257  015810  A4D8               	btfss	status,2,c
 15258  015812  D015               	goto	l6750
 15259                           
 15260                           ;RemoteCan.c: 353: if (RTR_Flag == 1) {
 15261  015814  A84C               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 15262  015816  D00C               	goto	l6740
 15263                           
 15264                           ;RemoteCan.c: 354: pr_time_4 = time_counter;
 15265  015818  C020  F014         	movff	_time_counter,_pr_time_4	;volatile
 15266  01581C  C021  F015         	movff	_time_counter+1,_pr_time_4+1	;volatile
 15267  015820  C022  F016         	movff	_time_counter+2,_pr_time_4+2	;volatile
 15268  015824  C023  F017         	movff	_time_counter+3,_pr_time_4+3	;volatile
 15269                           
 15270                           ;RemoteCan.c: 358: MotoreFlag = 1;
 15271  015828  864C               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 15272                           
 15273                           ;RemoteCan.c: 359: AbsFlag = 0;
 15274  01582A  904C               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 15275                           
 15276                           ;RemoteCan.c: 360: SterzoFlag = 0;
 15277  01582C  9A4C               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 15278                           
 15279                           ;RemoteCan.c: 361: } else {
 15280  01582E  D007               	goto	l6750
 15281  015830                     l6740:
 15282                           
 15283                           ;RemoteCan.c: 362: if (data[0] == 0x01) {
 15284  015830  042A               	decf	_data,w,c
 15285  015832  B4D8               	btfsc	status,2,c
 15286                           
 15287                           ;RemoteCan.c: 363: AbsFlag = 1;
 15288  015834  804C               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 15289                           
 15290                           ;RemoteCan.c: 365: }
 15291                           ;RemoteCan.c: 366: if (data[0] == 0x02) {
 15292  015836  0E02               	movlw	2
 15293  015838  182A               	xorwf	_data,w,c
 15294  01583A  B4D8               	btfsc	status,2,c
 15295                           
 15296                           ;RemoteCan.c: 367: SterzoFlag = 1;
 15297  01583C  8A4C               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 15298  01583E                     l6750:
 15299                           
 15300                           ;RemoteCan.c: 373: }
 15301                           ;RemoteCan.c: 374: }
 15302                           ;RemoteCan.c: 376: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 15303  01583E  0E06               	movlw	6
 15304  015840  180C               	xorwf	_id,w,c	;volatile
 15305  015842  100D               	iorwf	_id+1,w,c	;volatile
 15306  015844  100E               	iorwf	_id+2,w,c	;volatile
 15307  015846  100F               	iorwf	_id+3,w,c	;volatile
 15308  015848  B4D8               	btfsc	status,2,c
 15309  01584A  B84C               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 15310  01584C  D027               	goto	l6762
 15311                           
 15312                           ;RemoteCan.c: 377: left_speed = data_speed_rx[1];
 15313  01584E  C002  F024         	movff	_data_speed_rx+1,_left_speed
 15314  015852  6A25               	clrf	_left_speed+1,c
 15315                           
 15316                           ;RemoteCan.c: 378: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 15317  015854  5024               	movf	_left_speed,w,c
 15318  015856  0100               	movlb	0	; () banked
 15319  015858  6F6F               	movwf	??_CAN_interpreter& (0+255),b
 15320  01585A  5001               	movf	_data_speed_rx,w,c
 15321  01585C  6E24               	movwf	_left_speed,c
 15322  01585E  C06F  F025         	movff	??_CAN_interpreter,_left_speed+1
 15323                           
 15324                           ; BSR set to: 0
 15325                           ;RemoteCan.c: 379: right_speed = data_speed_rx[3];
 15326  015862  C004  F026         	movff	_data_speed_rx+3,_right_speed
 15327  015866  6A27               	clrf	_right_speed+1,c
 15328                           
 15329                           ;RemoteCan.c: 380: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 15330  015868  5026               	movf	_right_speed,w,c
 15331  01586A  0100               	movlb	0	; () banked
 15332  01586C  6F6F               	movwf	??_CAN_interpreter& (0+255),b
 15333  01586E  5003               	movf	_data_speed_rx+2,w,c
 15334  015870  6E26               	movwf	_right_speed,c
 15335  015872  C06F  F027         	movff	??_CAN_interpreter,_right_speed+1
 15336                           
 15337                           ; BSR set to: 0
 15338                           ;RemoteCan.c: 381: actual_speed = (right_speed + left_speed) / 2;
 15339  015876  5024               	movf	_left_speed,w,c
 15340  015878  2426               	addwf	_right_speed,w,c
 15341  01587A  0100               	movlb	0	; () banked
 15342  01587C  6F6F               	movwf	??_CAN_interpreter& (0+255),b
 15343  01587E  5025               	movf	_left_speed+1,w,c
 15344  015880  2027               	addwfc	_right_speed+1,w,c
 15345  015882  0100               	movlb	0	; () banked
 15346  015884  6F70               	movwf	(??_CAN_interpreter+1)& (0+255),b
 15347  015886  90D8               	bcf	status,0,c
 15348  015888  0100               	movlb	0	; () banked
 15349  01588A  3170               	rrcf	(??_CAN_interpreter+1)& (0+255),w,b
 15350  01588C  0100               	movlb	0	; () banked
 15351  01588E  6F71               	movwf	(??_CAN_interpreter+2)& (0+255),b
 15352  015890  0100               	movlb	0	; () banked
 15353  015892  316F               	rrcf	??_CAN_interpreter& (0+255),w,b
 15354  015894  0100               	movlb	0	; () banked
 15355  015896  6FDD               	movwf	_actual_speed& (0+255),b
 15356  015898  C071  F0DE         	movff	??_CAN_interpreter+2,_actual_speed+1
 15357  01589C                     l6762:
 15358                           
 15359                           ;RemoteCan.c: 382: }
 15360                           ;RemoteCan.c: 384: if (id == 0b00000001001) {
 15361  01589C  0E09               	movlw	9
 15362  01589E  180C               	xorwf	_id,w,c	;volatile
 15363  0158A0  100D               	iorwf	_id+1,w,c	;volatile
 15364  0158A2  100E               	iorwf	_id+2,w,c	;volatile
 15365  0158A4  100F               	iorwf	_id+3,w,c	;volatile
 15366  0158A6  A4D8               	btfss	status,2,c
 15367  0158A8  0012               	return	
 15368                           
 15369                           ;RemoteCan.c: 385: battery = data[0];
 15370  0158AA  C02A  F028         	movff	_data,_battery	;volatile
 15371  0158AE  0012               	return	
 15372  0158B0                     __end_of_CAN_interpreter:
 15373                           	opt stack 0
 15374                           tblptru	equ	0xFF8
 15375                           tblptrh	equ	0xFF7
 15376                           tblptrl	equ	0xFF6
 15377                           tablat	equ	0xFF5
 15378                           prodh	equ	0xFF4
 15379                           prodl	equ	0xFF3
 15380                           intcon	equ	0xFF2
 15381                           postinc0	equ	0xFEE
 15382                           wreg	equ	0xFE8
 15383                           indf2	equ	0xFDF
 15384                           postinc2	equ	0xFDE
 15385                           fsr2h	equ	0xFDA
 15386                           fsr2l	equ	0xFD9
 15387                           status	equ	0xFD8
 15388                           
 15389 ;; *************** function _CAN_Send *****************
 15390 ;; Defined at:
 15391 ;;		line 286 in file "RemoteCan.c"
 15392 ;; Parameters:    Size  Location     Type
 15393 ;;		None
 15394 ;; Auto vars:     Size  Location     Type
 15395 ;;		None
 15396 ;; Return value:  Size  Location     Type
 15397 ;;		None               void
 15398 ;; Registers used:
 15399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15400 ;; Tracked objects:
 15401 ;;		On entry : 0/0
 15402 ;;		On exit  : 0/0
 15403 ;;		Unchanged: 0/0
 15404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15409 ;;Total ram usage:        0 bytes
 15410 ;; Hardware stack levels used:    1
 15411 ;; Hardware stack levels required when called:    4
 15412 ;; This function calls:
 15413 ;;		_CANisTxReady
 15414 ;;		_CANsendMessage
 15415 ;; This function is called by:
 15416 ;;		_main
 15417 ;; This function uses a non-reentrant model
 15418 ;;
 15419                           
 15420                           	psect	text44
 15421  01574C                     __ptext44:
 15422                           	opt stack 0
 15423  01574C                     _CAN_Send:
 15424                           	opt stack 26
 15425  01574C                     l6702:
 15426  01574C  ECBC  F0AE         	call	_CANisTxReady	;wreg free
 15427  015750  06E8               	decf	wreg,f,c
 15428  015752  A4D8               	btfss	status,2,c
 15429  015754  D7FB               	goto	l6702
 15430                           
 15431                           ;RemoteCan.c: 288: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 15432  015756  0E05               	movlw	5
 15433  015758  0100               	movlb	0	; () banked
 15434  01575A  6F6F               	movwf	CANsendMessage@identifier& (0+255),b
 15435  01575C  0E00               	movlw	0
 15436  01575E  6F70               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15437  015760  0E00               	movlw	0
 15438  015762  6F71               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15439  015764  0E00               	movlw	0
 15440  015766  6F72               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15441  015768  0EE9               	movlw	low _data_steering
 15442  01576A  0100               	movlb	0	; () banked
 15443  01576C  6F73               	movwf	CANsendMessage@data& (0+255),b
 15444  01576E  0E00               	movlw	high _data_steering
 15445  015770  0100               	movlb	0	; () banked
 15446  015772  6F74               	movwf	(CANsendMessage@data+1)& (0+255),b
 15447  015774  0E08               	movlw	8
 15448  015776  0100               	movlb	0	; () banked
 15449  015778  6F75               	movwf	CANsendMessage@dataLength& (0+255),b
 15450  01577A  0EBC               	movlw	188
 15451  01577C  0100               	movlb	0	; () banked
 15452  01577E  6F76               	movwf	CANsendMessage@flags& (0+255),b
 15453  015780  ECCD  F089         	call	_CANsendMessage	;wreg free
 15454                           
 15455                           ;RemoteCan.c: 289: data_speed[0] = set_speed;
 15456  015784  C0E1  F0E8         	movff	_set_speed,_data_speed	;volatile
 15457                           
 15458                           ;RemoteCan.c: 290: data_speed[1] = (set_speed >> 8);
 15459  015788  0100               	movlb	0	; () banked
 15460  01578A  51E2               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 15461  01578C  0100               	movlb	0	; () banked
 15462  01578E  6FE9               	movwf	(_data_speed+1)& (0+255),b
 15463                           
 15464                           ; BSR set to: 0
 15465                           ;RemoteCan.c: 291: data_speed[2] = dir;
 15466  015790  C0E3  F0EA         	movff	_dir,_data_speed+2	;volatile
 15467  015794                     l6712:
 15468  015794  ECBC  F0AE         	call	_CANisTxReady	;wreg free
 15469  015798  06E8               	decf	wreg,f,c
 15470  01579A  A4D8               	btfss	status,2,c
 15471  01579C  D7FB               	goto	l6712
 15472                           
 15473                           ;RemoteCan.c: 293: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 15474  01579E  0E03               	movlw	3
 15475  0157A0  0100               	movlb	0	; () banked
 15476  0157A2  6F6F               	movwf	CANsendMessage@identifier& (0+255),b
 15477  0157A4  0E00               	movlw	0
 15478  0157A6  6F70               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15479  0157A8  0E00               	movlw	0
 15480  0157AA  6F71               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15481  0157AC  0E00               	movlw	0
 15482  0157AE  6F72               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15483  0157B0  0EE8               	movlw	low _data_speed
 15484  0157B2  0100               	movlb	0	; () banked
 15485  0157B4  6F73               	movwf	CANsendMessage@data& (0+255),b
 15486  0157B6  0E00               	movlw	high _data_speed
 15487  0157B8  0100               	movlb	0	; () banked
 15488  0157BA  6F74               	movwf	(CANsendMessage@data+1)& (0+255),b
 15489  0157BC  0E08               	movlw	8
 15490  0157BE  0100               	movlb	0	; () banked
 15491  0157C0  6F75               	movwf	CANsendMessage@dataLength& (0+255),b
 15492  0157C2  0EBC               	movlw	188
 15493  0157C4  0100               	movlb	0	; () banked
 15494  0157C6  6F76               	movwf	CANsendMessage@flags& (0+255),b
 15495  0157C8  ECCD  F089         	call	_CANsendMessage	;wreg free
 15496  0157CC                     l6716:
 15497  0157CC  ECBC  F0AE         	call	_CANisTxReady	;wreg free
 15498  0157D0  06E8               	decf	wreg,f,c
 15499  0157D2  A4D8               	btfss	status,2,c
 15500  0157D4  D7FB               	goto	l6716
 15501                           
 15502                           ;RemoteCan.c: 295: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_1);
 15503  0157D6  0E04               	movlw	4
 15504  0157D8  0100               	movlb	0	; () banked
 15505  0157DA  6F6F               	movwf	CANsendMessage@identifier& (0+255),b
 15506  0157DC  0E00               	movlw	0
 15507  0157DE  6F70               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15508  0157E0  0E00               	movlw	0
 15509  0157E2  6F71               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15510  0157E4  0E00               	movlw	0
 15511  0157E6  6F72               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15512  0157E8  0EE7               	movlw	low _data_brake
 15513  0157EA  0100               	movlb	0	; () banked
 15514  0157EC  6F73               	movwf	CANsendMessage@data& (0+255),b
 15515  0157EE  0E00               	movlw	high _data_brake
 15516  0157F0  0100               	movlb	0	; () banked
 15517  0157F2  6F74               	movwf	(CANsendMessage@data+1)& (0+255),b
 15518  0157F4  0E08               	movlw	8
 15519  0157F6  0100               	movlb	0	; () banked
 15520  0157F8  6F75               	movwf	CANsendMessage@dataLength& (0+255),b
 15521  0157FA  0EBD               	movlw	189
 15522  0157FC  0100               	movlb	0	; () banked
 15523  0157FE  6F76               	movwf	CANsendMessage@flags& (0+255),b
 15524  015800  ECCD  F089         	call	_CANsendMessage	;wreg free
 15525  015804  0012               	return		;funcret
 15526  015806                     __end_of_CAN_Send:
 15527                           	opt stack 0
 15528                           tblptru	equ	0xFF8
 15529                           tblptrh	equ	0xFF7
 15530                           tblptrl	equ	0xFF6
 15531                           tablat	equ	0xFF5
 15532                           prodh	equ	0xFF4
 15533                           prodl	equ	0xFF3
 15534                           intcon	equ	0xFF2
 15535                           postinc0	equ	0xFEE
 15536                           wreg	equ	0xFE8
 15537                           indf2	equ	0xFDF
 15538                           postinc2	equ	0xFDE
 15539                           fsr2h	equ	0xFDA
 15540                           fsr2l	equ	0xFD9
 15541                           status	equ	0xFD8
 15542                           
 15543 ;; *************** function _CANsendMessage *****************
 15544 ;; Defined at:
 15545 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 15546 ;; Parameters:    Size  Location     Type
 15547 ;;  identifier      4   15[BANK0 ] unsigned long 
 15548 ;;  data            2   19[BANK0 ] PTR unsigned char 
 15549 ;;		 -> data_speed(1), RAM(3327), data_brake(1), data_steering(1), 
 15550 ;;		 -> data(1), 
 15551 ;;  dataLength      1   21[BANK0 ] unsigned char 
 15552 ;;  flags           1   22[BANK0 ] enum E16909
 15553 ;; Auto vars:     Size  Location     Type
 15554 ;;  tamp            4   27[BANK0 ] unsigned long 
 15555 ;; Return value:  Size  Location     Type
 15556 ;;		None               void
 15557 ;; Registers used:
 15558 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15559 ;; Tracked objects:
 15560 ;;		On entry : 0/0
 15561 ;;		On exit  : 0/0
 15562 ;;		Unchanged: 0/0
 15563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15564 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15565 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15566 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15567 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15568 ;;Total ram usage:       16 bytes
 15569 ;; Hardware stack levels used:    1
 15570 ;; Hardware stack levels required when called:    3
 15571 ;; This function calls:
 15572 ;;		Nothing
 15573 ;; This function is called by:
 15574 ;;		_main
 15575 ;;		_CAN_Send
 15576 ;;		_LCD_Handler
 15577 ;; This function uses a non-reentrant model
 15578 ;;
 15579                           
 15580                           	psect	text45
 15581  01139A                     __ptext45:
 15582                           	opt stack 0
 15583  01139A                     _CANsendMessage:
 15584                           	opt stack 26
 15585                           
 15586                           ;inc\CANlib.h: 296: unsigned long tamp;
 15587                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 15588                           
 15589                           ;incstack = 0
 15590  01139A  010F               	movlb	15	; () banked
 15591  01139C  B740               	btfsc	64,3,b	;volatile
 15592  01139E  D13F               	goto	l375
 15593                           
 15594                           ; BSR set to: 15
 15595                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 15596  0113A0  C075  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 15597                           
 15598                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 15599  0113A4  0100               	movlb	0	; () banked
 15600  0113A6  AD76               	btfss	CANsendMessage@flags& (0+255),6,b
 15601  0113A8  D003               	goto	l376
 15602                           
 15603                           ; BSR set to: 0
 15604                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 15605  0113AA  010F               	movlb	15	; () banked
 15606  0113AC  8D45               	bsf	69,6,b	;volatile
 15607  0113AE  D002               	goto	l377
 15608  0113B0                     l376:
 15609                           
 15610                           ; BSR set to: 0
 15611                           ;inc\CANlib.h: 302: else
 15612                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 15613  0113B0  010F               	movlb	15	; () banked
 15614  0113B2  9D45               	bcf	69,6,b	;volatile
 15615  0113B4                     l377:
 15616                           
 15617                           ; BSR set to: 15
 15618                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 15619  0113B4  0100               	movlb	0	; () banked
 15620  0113B6  A776               	btfss	CANsendMessage@flags& (0+255),3,b
 15621  0113B8  D079               	goto	l378
 15622                           
 15623                           ; BSR set to: 0
 15624                           ;inc\CANlib.h: 306: {
 15625                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 15626  0113BA  0100               	movlb	0	; () banked
 15627  0113BC  516F               	movf	CANsendMessage@identifier& (0+255),w,b
 15628  0113BE  0100               	movlb	0	; () banked
 15629  0113C0  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15630  0113C2  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15631  0113C4  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15632  0113C6  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15633                           
 15634                           ; BSR set to: 0
 15635                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 15636  0113C8  C07B  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 15637                           
 15638                           ; BSR set to: 0
 15639                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 15640  0113CC  0E00               	movlw	0
 15641  0113CE  0100               	movlb	0	; () banked
 15642  0113D0  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 15643  0113D2  0100               	movlb	0	; () banked
 15644  0113D4  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15645  0113D6  0EFF               	movlw	255
 15646  0113D8  0100               	movlb	0	; () banked
 15647  0113DA  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15648  0113DC  0100               	movlb	0	; () banked
 15649  0113DE  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15650  0113E0  0E00               	movlw	0
 15651  0113E2  0100               	movlb	0	; () banked
 15652  0113E4  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15653  0113E6  0100               	movlb	0	; () banked
 15654  0113E8  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15655  0113EA  0E00               	movlw	0
 15656  0113EC  0100               	movlb	0	; () banked
 15657  0113EE  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15658  0113F0  0100               	movlb	0	; () banked
 15659  0113F2  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15660                           
 15661                           ; BSR set to: 0
 15662                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 15663  0113F4  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 15664  0113F8  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15665  0113FC  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15666  011400  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15667  011404  C078  F077         	movff	??_CANsendMessage+1,??_CANsendMessage
 15668  011408  C079  F078         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 15669  01140C  C07A  F079         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 15670  011410  0100               	movlb	0	; () banked
 15671  011412  6B7A               	clrf	(??_CANsendMessage+3)& (0+255),b
 15672  011414  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 15673  011418  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15674  01141C  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15675  011420  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15676                           
 15677                           ; BSR set to: 0
 15678                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 15679  011424  C07B  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 15680                           
 15681                           ; BSR set to: 0
 15682                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 15683  011428  0E00               	movlw	0
 15684  01142A  010F               	movlb	15	; () banked
 15685  01142C  6F42               	movwf	66,b	;volatile
 15686                           
 15687                           ; BSR set to: 15
 15688                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 15689  01142E  010F               	movlb	15	; () banked
 15690  011430  8742               	bsf	66,3,b	;volatile
 15691                           
 15692                           ; BSR set to: 15
 15693                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 15694  011432  0100               	movlb	0	; () banked
 15695  011434  A171               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 15696  011436  D002               	goto	l379
 15697                           
 15698                           ; BSR set to: 0
 15699                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 15700  011438  010F               	movlb	15	; () banked
 15701  01143A  8142               	bsf	66,0,b	;volatile
 15702  01143C                     l379:
 15703                           
 15704                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 15705  01143C  0100               	movlb	0	; () banked
 15706  01143E  A371               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 15707  011440  D002               	goto	l380
 15708                           
 15709                           ; BSR set to: 0
 15710                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 15711  011442  010F               	movlb	15	; () banked
 15712  011444  8342               	bsf	66,1,b	;volatile
 15713  011446                     l380:
 15714                           
 15715                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 15716  011446  0100               	movlb	0	; () banked
 15717  011448  A571               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 15718  01144A  D002               	goto	l381
 15719                           
 15720                           ; BSR set to: 0
 15721                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 15722  01144C  010F               	movlb	15	; () banked
 15723  01144E  8B42               	bsf	66,5,b	;volatile
 15724  011450                     l381:
 15725                           
 15726                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 15727  011450  0100               	movlb	0	; () banked
 15728  011452  A771               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 15729  011454  D002               	goto	l382
 15730                           
 15731                           ; BSR set to: 0
 15732                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 15733  011456  010F               	movlb	15	; () banked
 15734  011458  8D42               	bsf	66,6,b	;volatile
 15735  01145A                     l382:
 15736                           
 15737                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 15738  01145A  0100               	movlb	0	; () banked
 15739  01145C  A971               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 15740  01145E  D002               	goto	l5850
 15741                           
 15742                           ; BSR set to: 0
 15743                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 15744  011460  010F               	movlb	15	; () banked
 15745  011462  8F42               	bsf	66,7,b	;volatile
 15746  011464                     l5850:
 15747                           
 15748                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 15749  011464  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 15750  011468  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15751  01146C  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15752  011470  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15753  011474  0E16               	movlw	22
 15754  011476  D006               	goto	u7180
 15755  011478                     u7185:
 15756  011478  0100               	movlb	0	; () banked
 15757  01147A  90D8               	bcf	status,0,c
 15758  01147C  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15759  01147E  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15760  011480  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15761  011482  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 15762  011484                     u7180:
 15763  011484  2EE8               	decfsz	wreg,f,c
 15764  011486  D7F8               	goto	u7185
 15765  011488  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 15766  01148C  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15767  011490  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15768  011494  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15769                           
 15770                           ; BSR set to: 0
 15771                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 15772  011498  0100               	movlb	0	; () banked
 15773  01149A  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 15774  01149C  0100               	movlb	0	; () banked
 15775  01149E  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15776  0114A0  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15777  0114A2  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15778  0114A4  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15779                           
 15780                           ; BSR set to: 0
 15781                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 15782  0114A6  C07B  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 15783                           
 15784                           ;inc\CANlib.h: 332: }
 15785  0114AA  D059               	goto	l5870
 15786  0114AC                     l378:
 15787                           
 15788                           ; BSR set to: 0
 15789                           ;inc\CANlib.h: 334: else
 15790                           ;inc\CANlib.h: 336: {
 15791                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 15792  0114AC  010F               	movlb	15	; () banked
 15793  0114AE  9742               	bcf	66,3,b	;volatile
 15794                           
 15795                           ; BSR set to: 15
 15796                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 15797  0114B0  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 15798  0114B4  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15799  0114B8  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15800  0114BC  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15801  0114C0  0E04               	movlw	4
 15802  0114C2  D006               	goto	u7190
 15803  0114C4                     u7195:
 15804  0114C4  0100               	movlb	0	; () banked
 15805  0114C6  90D8               	bcf	status,0,c
 15806  0114C8  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15807  0114CA  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15808  0114CC  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15809  0114CE  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 15810  0114D0                     u7190:
 15811  0114D0  2EE8               	decfsz	wreg,f,c
 15812  0114D2  D7F8               	goto	u7195
 15813  0114D4  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 15814  0114D8  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15815  0114DC  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15816  0114E0  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15817                           
 15818                           ; BSR set to: 0
 15819                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 15820  0114E4  0100               	movlb	0	; () banked
 15821  0114E6  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 15822  0114E8  0100               	movlb	0	; () banked
 15823  0114EA  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15824  0114EC  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15825  0114EE  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15826  0114F0  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15827                           
 15828                           ; BSR set to: 0
 15829                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 15830  0114F2  C07B  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 15831                           
 15832                           ; BSR set to: 0
 15833                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 15834  0114F6  0E07               	movlw	7
 15835  0114F8  0100               	movlb	0	; () banked
 15836  0114FA  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 15837  0114FC  0100               	movlb	0	; () banked
 15838  0114FE  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15839  011500  0E00               	movlw	0
 15840  011502  0100               	movlb	0	; () banked
 15841  011504  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15842  011506  0100               	movlb	0	; () banked
 15843  011508  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15844  01150A  0E00               	movlw	0
 15845  01150C  0100               	movlb	0	; () banked
 15846  01150E  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15847  011510  0100               	movlb	0	; () banked
 15848  011512  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15849  011514  0E00               	movlw	0
 15850  011516  0100               	movlb	0	; () banked
 15851  011518  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15852  01151A  0100               	movlb	0	; () banked
 15853  01151C  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15854                           
 15855                           ; BSR set to: 0
 15856                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 15857  01151E  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 15858  011522  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15859  011526  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15860  01152A  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15861  01152E  0E05               	movlw	5
 15862  011530                     u7205:
 15863  011530  90D8               	bcf	status,0,c
 15864  011532  0100               	movlb	0	; () banked
 15865  011534  3777               	rlcf	??_CANsendMessage& (0+255),f,b
 15866  011536  3778               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 15867  011538  3779               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 15868  01153A  377A               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 15869  01153C  2EE8               	decfsz	wreg,f,c
 15870  01153E  D7F8               	goto	u7205
 15871  011540  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 15872  011544  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15873  011548  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15874  01154C  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15875                           
 15876                           ; BSR set to: 0
 15877                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 15878  011550  010F               	movlb	15	; () banked
 15879  011552  5142               	movf	66,w,b	;volatile
 15880  011554  0B1F               	andlw	31
 15881  011556  010F               	movlb	15	; () banked
 15882  011558  6F42               	movwf	66,b	;volatile
 15883                           
 15884                           ; BSR set to: 15
 15885                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 15886  01155A  C07B  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 15887  01155E                     l5870:
 15888                           
 15889                           ;inc\CANlib.h: 347: }
 15890                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 15891  01155E  0100               	movlb	0	; () banked
 15892  011560  A176               	btfss	CANsendMessage@flags& (0+255),0,b
 15893  011562  D003               	goto	l385
 15894                           
 15895                           ; BSR set to: 0
 15896                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 15897  011564  010F               	movlb	15	; () banked
 15898  011566  8140               	bsf	64,0,b	;volatile
 15899  011568  D002               	goto	l386
 15900  01156A                     l385:
 15901                           
 15902                           ; BSR set to: 0
 15903                           ;inc\CANlib.h: 351: else
 15904                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 15905  01156A  010F               	movlb	15	; () banked
 15906  01156C  9140               	bcf	64,0,b	;volatile
 15907  01156E                     l386:
 15908                           
 15909                           ; BSR set to: 15
 15910                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 15911  01156E  0100               	movlb	0	; () banked
 15912  011570  A376               	btfss	CANsendMessage@flags& (0+255),1,b
 15913  011572  D003               	goto	l387
 15914                           
 15915                           ; BSR set to: 0
 15916                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 15917  011574  010F               	movlb	15	; () banked
 15918  011576  8340               	bsf	64,1,b	;volatile
 15919  011578  D002               	goto	l5876
 15920  01157A                     l387:
 15921                           
 15922                           ; BSR set to: 0
 15923                           ;inc\CANlib.h: 355: else
 15924                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 15925  01157A  010F               	movlb	15	; () banked
 15926  01157C  9340               	bcf	64,1,b	;volatile
 15927  01157E                     l5876:
 15928                           
 15929                           ; BSR set to: 15
 15930                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 15931  01157E  C073  FFD9         	movff	CANsendMessage@data,fsr2l
 15932  011582  C074  FFDA         	movff	CANsendMessage@data+1,fsr2h
 15933  011586  50DF               	movf	indf2,w,c
 15934  011588  010F               	movlb	15	; () banked
 15935  01158A  6F46               	movwf	70,b	;volatile
 15936                           
 15937                           ; BSR set to: 15
 15938                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 15939  01158C  0100               	movlb	0	; () banked
 15940  01158E  EE20 F001          	lfsr	2,1
 15941  011592  5173               	movf	CANsendMessage@data& (0+255),w,b
 15942  011594  26D9               	addwf	fsr2l,f,c
 15943  011596  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15944  011598  22DA               	addwfc	fsr2h,f,c
 15945  01159A  50DF               	movf	indf2,w,c
 15946  01159C  010F               	movlb	15	; () banked
 15947  01159E  6F47               	movwf	71,b	;volatile
 15948                           
 15949                           ; BSR set to: 15
 15950                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 15951  0115A0  0100               	movlb	0	; () banked
 15952  0115A2  EE20 F002          	lfsr	2,2
 15953  0115A6  5173               	movf	CANsendMessage@data& (0+255),w,b
 15954  0115A8  26D9               	addwf	fsr2l,f,c
 15955  0115AA  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15956  0115AC  22DA               	addwfc	fsr2h,f,c
 15957  0115AE  50DF               	movf	indf2,w,c
 15958  0115B0  010F               	movlb	15	; () banked
 15959  0115B2  6F48               	movwf	72,b	;volatile
 15960                           
 15961                           ; BSR set to: 15
 15962                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 15963  0115B4  0100               	movlb	0	; () banked
 15964  0115B6  EE20 F003          	lfsr	2,3
 15965  0115BA  5173               	movf	CANsendMessage@data& (0+255),w,b
 15966  0115BC  26D9               	addwf	fsr2l,f,c
 15967  0115BE  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15968  0115C0  22DA               	addwfc	fsr2h,f,c
 15969  0115C2  50DF               	movf	indf2,w,c
 15970  0115C4  010F               	movlb	15	; () banked
 15971  0115C6  6F49               	movwf	73,b	;volatile
 15972                           
 15973                           ; BSR set to: 15
 15974                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 15975  0115C8  0100               	movlb	0	; () banked
 15976  0115CA  EE20 F004          	lfsr	2,4
 15977  0115CE  5173               	movf	CANsendMessage@data& (0+255),w,b
 15978  0115D0  26D9               	addwf	fsr2l,f,c
 15979  0115D2  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15980  0115D4  22DA               	addwfc	fsr2h,f,c
 15981  0115D6  50DF               	movf	indf2,w,c
 15982  0115D8  010F               	movlb	15	; () banked
 15983  0115DA  6F4A               	movwf	74,b	;volatile
 15984                           
 15985                           ; BSR set to: 15
 15986                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 15987  0115DC  0100               	movlb	0	; () banked
 15988  0115DE  EE20 F005          	lfsr	2,5
 15989  0115E2  5173               	movf	CANsendMessage@data& (0+255),w,b
 15990  0115E4  26D9               	addwf	fsr2l,f,c
 15991  0115E6  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15992  0115E8  22DA               	addwfc	fsr2h,f,c
 15993  0115EA  50DF               	movf	indf2,w,c
 15994  0115EC  010F               	movlb	15	; () banked
 15995  0115EE  6F4B               	movwf	75,b	;volatile
 15996                           
 15997                           ; BSR set to: 15
 15998                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 15999  0115F0  0100               	movlb	0	; () banked
 16000  0115F2  EE20 F006          	lfsr	2,6
 16001  0115F6  5173               	movf	CANsendMessage@data& (0+255),w,b
 16002  0115F8  26D9               	addwf	fsr2l,f,c
 16003  0115FA  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16004  0115FC  22DA               	addwfc	fsr2h,f,c
 16005  0115FE  50DF               	movf	indf2,w,c
 16006  011600  010F               	movlb	15	; () banked
 16007  011602  6F4C               	movwf	76,b	;volatile
 16008                           
 16009                           ; BSR set to: 15
 16010                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 16011  011604  0100               	movlb	0	; () banked
 16012  011606  EE20 F007          	lfsr	2,7
 16013  01160A  5173               	movf	CANsendMessage@data& (0+255),w,b
 16014  01160C  26D9               	addwf	fsr2l,f,c
 16015  01160E  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16016  011610  22DA               	addwfc	fsr2h,f,c
 16017  011612  50DF               	movf	indf2,w,c
 16018  011614  010F               	movlb	15	; () banked
 16019  011616  6F4D               	movwf	77,b	;volatile
 16020                           
 16021                           ; BSR set to: 15
 16022                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 16023  011618  010F               	movlb	15	; () banked
 16024  01161A  8740               	bsf	64,3,b	;volatile
 16025                           
 16026                           ; BSR set to: 15
 16027                           ;inc\CANlib.h: 368: return;
 16028  01161C  0012               	return	
 16029  01161E                     l375:
 16030                           
 16031                           ; BSR set to: 15
 16032                           ;inc\CANlib.h: 369: }
 16033                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 16034  01161E  010F               	movlb	15	; () banked
 16035  011620  B730               	btfsc	48,3,b	;volatile
 16036  011622  D13F               	goto	l390
 16037                           
 16038                           ; BSR set to: 15
 16039                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 16040  011624  C075  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 16041                           
 16042                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 16043  011628  0100               	movlb	0	; () banked
 16044  01162A  AD76               	btfss	CANsendMessage@flags& (0+255),6,b
 16045  01162C  D003               	goto	l391
 16046                           
 16047                           ; BSR set to: 0
 16048                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 16049  01162E  010F               	movlb	15	; () banked
 16050  011630  8D35               	bsf	53,6,b	;volatile
 16051  011632  D002               	goto	l392
 16052  011634                     l391:
 16053                           
 16054                           ; BSR set to: 0
 16055                           ;inc\CANlib.h: 378: else
 16056                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 16057  011634  010F               	movlb	15	; () banked
 16058  011636  9D35               	bcf	53,6,b	;volatile
 16059  011638                     l392:
 16060                           
 16061                           ; BSR set to: 15
 16062                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 16063  011638  0100               	movlb	0	; () banked
 16064  01163A  A776               	btfss	CANsendMessage@flags& (0+255),3,b
 16065  01163C  D079               	goto	l393
 16066                           
 16067                           ; BSR set to: 0
 16068                           ;inc\CANlib.h: 382: {
 16069                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 16070  01163E  0100               	movlb	0	; () banked
 16071  011640  516F               	movf	CANsendMessage@identifier& (0+255),w,b
 16072  011642  0100               	movlb	0	; () banked
 16073  011644  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16074  011646  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16075  011648  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16076  01164A  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16077                           
 16078                           ; BSR set to: 0
 16079                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 16080  01164C  C07B  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 16081                           
 16082                           ; BSR set to: 0
 16083                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 16084  011650  0E00               	movlw	0
 16085  011652  0100               	movlb	0	; () banked
 16086  011654  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 16087  011656  0100               	movlb	0	; () banked
 16088  011658  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16089  01165A  0EFF               	movlw	255
 16090  01165C  0100               	movlb	0	; () banked
 16091  01165E  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16092  011660  0100               	movlb	0	; () banked
 16093  011662  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16094  011664  0E00               	movlw	0
 16095  011666  0100               	movlb	0	; () banked
 16096  011668  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16097  01166A  0100               	movlb	0	; () banked
 16098  01166C  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16099  01166E  0E00               	movlw	0
 16100  011670  0100               	movlb	0	; () banked
 16101  011672  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16102  011674  0100               	movlb	0	; () banked
 16103  011676  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16104                           
 16105                           ; BSR set to: 0
 16106                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 16107  011678  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 16108  01167C  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16109  011680  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16110  011684  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16111  011688  C078  F077         	movff	??_CANsendMessage+1,??_CANsendMessage
 16112  01168C  C079  F078         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16113  011690  C07A  F079         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16114  011694  0100               	movlb	0	; () banked
 16115  011696  6B7A               	clrf	(??_CANsendMessage+3)& (0+255),b
 16116  011698  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 16117  01169C  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16118  0116A0  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16119  0116A4  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16120                           
 16121                           ; BSR set to: 0
 16122                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 16123  0116A8  C07B  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 16124                           
 16125                           ; BSR set to: 0
 16126                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 16127  0116AC  0E00               	movlw	0
 16128  0116AE  010F               	movlb	15	; () banked
 16129  0116B0  6F32               	movwf	50,b	;volatile
 16130                           
 16131                           ; BSR set to: 15
 16132                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 16133  0116B2  010F               	movlb	15	; () banked
 16134  0116B4  8732               	bsf	50,3,b	;volatile
 16135                           
 16136                           ; BSR set to: 15
 16137                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 16138  0116B6  0100               	movlb	0	; () banked
 16139  0116B8  A171               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16140  0116BA  D002               	goto	l394
 16141                           
 16142                           ; BSR set to: 0
 16143                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 16144  0116BC  010F               	movlb	15	; () banked
 16145  0116BE  8132               	bsf	50,0,b	;volatile
 16146  0116C0                     l394:
 16147                           
 16148                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 16149  0116C0  0100               	movlb	0	; () banked
 16150  0116C2  A371               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16151  0116C4  D002               	goto	l395
 16152                           
 16153                           ; BSR set to: 0
 16154                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 16155  0116C6  010F               	movlb	15	; () banked
 16156  0116C8  8332               	bsf	50,1,b	;volatile
 16157  0116CA                     l395:
 16158                           
 16159                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 16160  0116CA  0100               	movlb	0	; () banked
 16161  0116CC  A571               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16162  0116CE  D002               	goto	l396
 16163                           
 16164                           ; BSR set to: 0
 16165                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 16166  0116D0  010F               	movlb	15	; () banked
 16167  0116D2  8B32               	bsf	50,5,b	;volatile
 16168  0116D4                     l396:
 16169                           
 16170                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 16171  0116D4  0100               	movlb	0	; () banked
 16172  0116D6  A771               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16173  0116D8  D002               	goto	l397
 16174                           
 16175                           ; BSR set to: 0
 16176                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 16177  0116DA  010F               	movlb	15	; () banked
 16178  0116DC  8D32               	bsf	50,6,b	;volatile
 16179  0116DE                     l397:
 16180                           
 16181                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 16182  0116DE  0100               	movlb	0	; () banked
 16183  0116E0  A971               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16184  0116E2  D002               	goto	l5926
 16185                           
 16186                           ; BSR set to: 0
 16187                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 16188  0116E4  010F               	movlb	15	; () banked
 16189  0116E6  8F32               	bsf	50,7,b	;volatile
 16190  0116E8                     l5926:
 16191                           
 16192                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 16193  0116E8  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 16194  0116EC  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16195  0116F0  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16196  0116F4  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16197  0116F8  0E16               	movlw	22
 16198  0116FA  D006               	goto	u7310
 16199  0116FC                     u7315:
 16200  0116FC  0100               	movlb	0	; () banked
 16201  0116FE  90D8               	bcf	status,0,c
 16202  011700  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16203  011702  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16204  011704  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16205  011706  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 16206  011708                     u7310:
 16207  011708  2EE8               	decfsz	wreg,f,c
 16208  01170A  D7F8               	goto	u7315
 16209  01170C  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 16210  011710  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16211  011714  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16212  011718  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16213                           
 16214                           ; BSR set to: 0
 16215                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 16216  01171C  0100               	movlb	0	; () banked
 16217  01171E  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 16218  011720  0100               	movlb	0	; () banked
 16219  011722  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16220  011724  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16221  011726  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16222  011728  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16223                           
 16224                           ; BSR set to: 0
 16225                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 16226  01172A  C07B  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 16227                           
 16228                           ;inc\CANlib.h: 407: }
 16229  01172E  D059               	goto	l5946
 16230  011730                     l393:
 16231                           
 16232                           ; BSR set to: 0
 16233                           ;inc\CANlib.h: 409: else
 16234                           ;inc\CANlib.h: 411: {
 16235                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 16236  011730  010F               	movlb	15	; () banked
 16237  011732  9732               	bcf	50,3,b	;volatile
 16238                           
 16239                           ; BSR set to: 15
 16240                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 16241  011734  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 16242  011738  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16243  01173C  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16244  011740  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16245  011744  0E04               	movlw	4
 16246  011746  D006               	goto	u7320
 16247  011748                     u7325:
 16248  011748  0100               	movlb	0	; () banked
 16249  01174A  90D8               	bcf	status,0,c
 16250  01174C  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16251  01174E  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16252  011750  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16253  011752  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 16254  011754                     u7320:
 16255  011754  2EE8               	decfsz	wreg,f,c
 16256  011756  D7F8               	goto	u7325
 16257  011758  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 16258  01175C  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16259  011760  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16260  011764  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16261                           
 16262                           ; BSR set to: 0
 16263                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 16264  011768  0100               	movlb	0	; () banked
 16265  01176A  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 16266  01176C  0100               	movlb	0	; () banked
 16267  01176E  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16268  011770  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16269  011772  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16270  011774  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16271                           
 16272                           ; BSR set to: 0
 16273                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 16274  011776  C07B  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 16275                           
 16276                           ; BSR set to: 0
 16277                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 16278  01177A  0E07               	movlw	7
 16279  01177C  0100               	movlb	0	; () banked
 16280  01177E  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 16281  011780  0100               	movlb	0	; () banked
 16282  011782  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16283  011784  0E00               	movlw	0
 16284  011786  0100               	movlb	0	; () banked
 16285  011788  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16286  01178A  0100               	movlb	0	; () banked
 16287  01178C  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16288  01178E  0E00               	movlw	0
 16289  011790  0100               	movlb	0	; () banked
 16290  011792  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16291  011794  0100               	movlb	0	; () banked
 16292  011796  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16293  011798  0E00               	movlw	0
 16294  01179A  0100               	movlb	0	; () banked
 16295  01179C  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16296  01179E  0100               	movlb	0	; () banked
 16297  0117A0  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16298                           
 16299                           ; BSR set to: 0
 16300                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 16301  0117A2  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 16302  0117A6  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16303  0117AA  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16304  0117AE  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16305  0117B2  0E05               	movlw	5
 16306  0117B4                     u7335:
 16307  0117B4  90D8               	bcf	status,0,c
 16308  0117B6  0100               	movlb	0	; () banked
 16309  0117B8  3777               	rlcf	??_CANsendMessage& (0+255),f,b
 16310  0117BA  3778               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 16311  0117BC  3779               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 16312  0117BE  377A               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 16313  0117C0  2EE8               	decfsz	wreg,f,c
 16314  0117C2  D7F8               	goto	u7335
 16315  0117C4  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 16316  0117C8  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16317  0117CC  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16318  0117D0  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16319                           
 16320                           ; BSR set to: 0
 16321                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 16322  0117D4  010F               	movlb	15	; () banked
 16323  0117D6  5132               	movf	50,w,b	;volatile
 16324  0117D8  0B1F               	andlw	31
 16325  0117DA  010F               	movlb	15	; () banked
 16326  0117DC  6F32               	movwf	50,b	;volatile
 16327                           
 16328                           ; BSR set to: 15
 16329                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 16330  0117DE  C07B  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 16331  0117E2                     l5946:
 16332                           
 16333                           ;inc\CANlib.h: 422: }
 16334                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 16335  0117E2  0100               	movlb	0	; () banked
 16336  0117E4  A176               	btfss	CANsendMessage@flags& (0+255),0,b
 16337  0117E6  D003               	goto	l400
 16338                           
 16339                           ; BSR set to: 0
 16340                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 16341  0117E8  010F               	movlb	15	; () banked
 16342  0117EA  8130               	bsf	48,0,b	;volatile
 16343  0117EC  D002               	goto	l401
 16344  0117EE                     l400:
 16345                           
 16346                           ; BSR set to: 0
 16347                           ;inc\CANlib.h: 426: else
 16348                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 16349  0117EE  010F               	movlb	15	; () banked
 16350  0117F0  9130               	bcf	48,0,b	;volatile
 16351  0117F2                     l401:
 16352                           
 16353                           ; BSR set to: 15
 16354                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 16355  0117F2  0100               	movlb	0	; () banked
 16356  0117F4  A376               	btfss	CANsendMessage@flags& (0+255),1,b
 16357  0117F6  D003               	goto	l402
 16358                           
 16359                           ; BSR set to: 0
 16360                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 16361  0117F8  010F               	movlb	15	; () banked
 16362  0117FA  8330               	bsf	48,1,b	;volatile
 16363  0117FC  D002               	goto	l5952
 16364  0117FE                     l402:
 16365                           
 16366                           ; BSR set to: 0
 16367                           ;inc\CANlib.h: 430: else
 16368                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 16369  0117FE  010F               	movlb	15	; () banked
 16370  011800  9330               	bcf	48,1,b	;volatile
 16371  011802                     l5952:
 16372                           
 16373                           ; BSR set to: 15
 16374                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 16375  011802  C073  FFD9         	movff	CANsendMessage@data,fsr2l
 16376  011806  C074  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16377  01180A  50DF               	movf	indf2,w,c
 16378  01180C  010F               	movlb	15	; () banked
 16379  01180E  6F36               	movwf	54,b	;volatile
 16380                           
 16381                           ; BSR set to: 15
 16382                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 16383  011810  0100               	movlb	0	; () banked
 16384  011812  EE20 F001          	lfsr	2,1
 16385  011816  5173               	movf	CANsendMessage@data& (0+255),w,b
 16386  011818  26D9               	addwf	fsr2l,f,c
 16387  01181A  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16388  01181C  22DA               	addwfc	fsr2h,f,c
 16389  01181E  50DF               	movf	indf2,w,c
 16390  011820  010F               	movlb	15	; () banked
 16391  011822  6F37               	movwf	55,b	;volatile
 16392                           
 16393                           ; BSR set to: 15
 16394                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 16395  011824  0100               	movlb	0	; () banked
 16396  011826  EE20 F002          	lfsr	2,2
 16397  01182A  5173               	movf	CANsendMessage@data& (0+255),w,b
 16398  01182C  26D9               	addwf	fsr2l,f,c
 16399  01182E  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16400  011830  22DA               	addwfc	fsr2h,f,c
 16401  011832  50DF               	movf	indf2,w,c
 16402  011834  010F               	movlb	15	; () banked
 16403  011836  6F38               	movwf	56,b	;volatile
 16404                           
 16405                           ; BSR set to: 15
 16406                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 16407  011838  0100               	movlb	0	; () banked
 16408  01183A  EE20 F003          	lfsr	2,3
 16409  01183E  5173               	movf	CANsendMessage@data& (0+255),w,b
 16410  011840  26D9               	addwf	fsr2l,f,c
 16411  011842  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16412  011844  22DA               	addwfc	fsr2h,f,c
 16413  011846  50DF               	movf	indf2,w,c
 16414  011848  010F               	movlb	15	; () banked
 16415  01184A  6F39               	movwf	57,b	;volatile
 16416                           
 16417                           ; BSR set to: 15
 16418                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 16419  01184C  0100               	movlb	0	; () banked
 16420  01184E  EE20 F004          	lfsr	2,4
 16421  011852  5173               	movf	CANsendMessage@data& (0+255),w,b
 16422  011854  26D9               	addwf	fsr2l,f,c
 16423  011856  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16424  011858  22DA               	addwfc	fsr2h,f,c
 16425  01185A  50DF               	movf	indf2,w,c
 16426  01185C  010F               	movlb	15	; () banked
 16427  01185E  6F3A               	movwf	58,b	;volatile
 16428                           
 16429                           ; BSR set to: 15
 16430                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 16431  011860  0100               	movlb	0	; () banked
 16432  011862  EE20 F005          	lfsr	2,5
 16433  011866  5173               	movf	CANsendMessage@data& (0+255),w,b
 16434  011868  26D9               	addwf	fsr2l,f,c
 16435  01186A  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16436  01186C  22DA               	addwfc	fsr2h,f,c
 16437  01186E  50DF               	movf	indf2,w,c
 16438  011870  010F               	movlb	15	; () banked
 16439  011872  6F3B               	movwf	59,b	;volatile
 16440                           
 16441                           ; BSR set to: 15
 16442                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 16443  011874  0100               	movlb	0	; () banked
 16444  011876  EE20 F006          	lfsr	2,6
 16445  01187A  5173               	movf	CANsendMessage@data& (0+255),w,b
 16446  01187C  26D9               	addwf	fsr2l,f,c
 16447  01187E  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16448  011880  22DA               	addwfc	fsr2h,f,c
 16449  011882  50DF               	movf	indf2,w,c
 16450  011884  010F               	movlb	15	; () banked
 16451  011886  6F3C               	movwf	60,b	;volatile
 16452                           
 16453                           ; BSR set to: 15
 16454                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 16455  011888  0100               	movlb	0	; () banked
 16456  01188A  EE20 F007          	lfsr	2,7
 16457  01188E  5173               	movf	CANsendMessage@data& (0+255),w,b
 16458  011890  26D9               	addwf	fsr2l,f,c
 16459  011892  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16460  011894  22DA               	addwfc	fsr2h,f,c
 16461  011896  50DF               	movf	indf2,w,c
 16462  011898  010F               	movlb	15	; () banked
 16463  01189A  6F3D               	movwf	61,b	;volatile
 16464                           
 16465                           ; BSR set to: 15
 16466                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 16467  01189C  010F               	movlb	15	; () banked
 16468  01189E  8730               	bsf	48,3,b	;volatile
 16469                           
 16470                           ; BSR set to: 15
 16471                           ;inc\CANlib.h: 444: return;
 16472  0118A0  0012               	return	
 16473  0118A2                     l390:
 16474                           
 16475                           ; BSR set to: 15
 16476                           ;inc\CANlib.h: 445: }
 16477                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 16478  0118A2  010F               	movlb	15	; () banked
 16479  0118A4  B720               	btfsc	32,3,b	;volatile
 16480  0118A6  0012               	return	
 16481                           
 16482                           ; BSR set to: 15
 16483                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 16484  0118A8  C075  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 16485                           
 16486                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 16487  0118AC  0100               	movlb	0	; () banked
 16488  0118AE  AD76               	btfss	CANsendMessage@flags& (0+255),6,b
 16489  0118B0  D003               	goto	l405
 16490                           
 16491                           ; BSR set to: 0
 16492                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 16493  0118B2  010F               	movlb	15	; () banked
 16494  0118B4  8D25               	bsf	37,6,b	;volatile
 16495  0118B6  D002               	goto	l406
 16496  0118B8                     l405:
 16497                           
 16498                           ; BSR set to: 0
 16499                           ;inc\CANlib.h: 454: else
 16500                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 16501  0118B8  010F               	movlb	15	; () banked
 16502  0118BA  9D25               	bcf	37,6,b	;volatile
 16503  0118BC                     l406:
 16504                           
 16505                           ; BSR set to: 15
 16506                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 16507  0118BC  0100               	movlb	0	; () banked
 16508  0118BE  A776               	btfss	CANsendMessage@flags& (0+255),3,b
 16509  0118C0  D079               	goto	l407
 16510                           
 16511                           ; BSR set to: 0
 16512                           ;inc\CANlib.h: 458: {
 16513                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 16514  0118C2  0100               	movlb	0	; () banked
 16515  0118C4  516F               	movf	CANsendMessage@identifier& (0+255),w,b
 16516  0118C6  0100               	movlb	0	; () banked
 16517  0118C8  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16518  0118CA  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16519  0118CC  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16520  0118CE  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16521                           
 16522                           ; BSR set to: 0
 16523                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 16524  0118D0  C07B  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 16525                           
 16526                           ; BSR set to: 0
 16527                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 16528  0118D4  0E00               	movlw	0
 16529  0118D6  0100               	movlb	0	; () banked
 16530  0118D8  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 16531  0118DA  0100               	movlb	0	; () banked
 16532  0118DC  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16533  0118DE  0EFF               	movlw	255
 16534  0118E0  0100               	movlb	0	; () banked
 16535  0118E2  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16536  0118E4  0100               	movlb	0	; () banked
 16537  0118E6  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16538  0118E8  0E00               	movlw	0
 16539  0118EA  0100               	movlb	0	; () banked
 16540  0118EC  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16541  0118EE  0100               	movlb	0	; () banked
 16542  0118F0  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16543  0118F2  0E00               	movlw	0
 16544  0118F4  0100               	movlb	0	; () banked
 16545  0118F6  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16546  0118F8  0100               	movlb	0	; () banked
 16547  0118FA  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16548                           
 16549                           ; BSR set to: 0
 16550                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 16551  0118FC  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 16552  011900  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16553  011904  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16554  011908  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16555  01190C  C078  F077         	movff	??_CANsendMessage+1,??_CANsendMessage
 16556  011910  C079  F078         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16557  011914  C07A  F079         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16558  011918  0100               	movlb	0	; () banked
 16559  01191A  6B7A               	clrf	(??_CANsendMessage+3)& (0+255),b
 16560  01191C  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 16561  011920  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16562  011924  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16563  011928  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16564                           
 16565                           ; BSR set to: 0
 16566                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 16567  01192C  C07B  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 16568                           
 16569                           ; BSR set to: 0
 16570                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 16571  011930  0E00               	movlw	0
 16572  011932  010F               	movlb	15	; () banked
 16573  011934  6F22               	movwf	34,b	;volatile
 16574                           
 16575                           ; BSR set to: 15
 16576                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 16577  011936  010F               	movlb	15	; () banked
 16578  011938  8722               	bsf	34,3,b	;volatile
 16579                           
 16580                           ; BSR set to: 15
 16581                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 16582  01193A  0100               	movlb	0	; () banked
 16583  01193C  A171               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16584  01193E  D002               	goto	l408
 16585                           
 16586                           ; BSR set to: 0
 16587                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 16588  011940  010F               	movlb	15	; () banked
 16589  011942  8122               	bsf	34,0,b	;volatile
 16590  011944                     l408:
 16591                           
 16592                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 16593  011944  0100               	movlb	0	; () banked
 16594  011946  A371               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16595  011948  D002               	goto	l409
 16596                           
 16597                           ; BSR set to: 0
 16598                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 16599  01194A  010F               	movlb	15	; () banked
 16600  01194C  8322               	bsf	34,1,b	;volatile
 16601  01194E                     l409:
 16602                           
 16603                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 16604  01194E  0100               	movlb	0	; () banked
 16605  011950  A571               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16606  011952  D002               	goto	l410
 16607                           
 16608                           ; BSR set to: 0
 16609                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 16610  011954  010F               	movlb	15	; () banked
 16611  011956  8B22               	bsf	34,5,b	;volatile
 16612  011958                     l410:
 16613                           
 16614                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 16615  011958  0100               	movlb	0	; () banked
 16616  01195A  A771               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16617  01195C  D002               	goto	l411
 16618                           
 16619                           ; BSR set to: 0
 16620                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 16621  01195E  010F               	movlb	15	; () banked
 16622  011960  8D22               	bsf	34,6,b	;volatile
 16623  011962                     l411:
 16624                           
 16625                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 16626  011962  0100               	movlb	0	; () banked
 16627  011964  A971               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16628  011966  D002               	goto	l6002
 16629                           
 16630                           ; BSR set to: 0
 16631                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 16632  011968  010F               	movlb	15	; () banked
 16633  01196A  8F22               	bsf	34,7,b	;volatile
 16634  01196C                     l6002:
 16635                           
 16636                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 16637  01196C  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 16638  011970  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16639  011974  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16640  011978  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16641  01197C  0E16               	movlw	22
 16642  01197E  D006               	goto	u7440
 16643  011980                     u7445:
 16644  011980  0100               	movlb	0	; () banked
 16645  011982  90D8               	bcf	status,0,c
 16646  011984  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16647  011986  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16648  011988  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16649  01198A  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 16650  01198C                     u7440:
 16651  01198C  2EE8               	decfsz	wreg,f,c
 16652  01198E  D7F8               	goto	u7445
 16653  011990  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 16654  011994  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16655  011998  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16656  01199C  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16657                           
 16658                           ; BSR set to: 0
 16659                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 16660  0119A0  0100               	movlb	0	; () banked
 16661  0119A2  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 16662  0119A4  0100               	movlb	0	; () banked
 16663  0119A6  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16664  0119A8  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16665  0119AA  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16666  0119AC  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16667                           
 16668                           ; BSR set to: 0
 16669                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 16670  0119AE  C07B  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 16671                           
 16672                           ;inc\CANlib.h: 483: }
 16673  0119B2  D059               	goto	l6022
 16674  0119B4                     l407:
 16675                           
 16676                           ; BSR set to: 0
 16677                           ;inc\CANlib.h: 485: else
 16678                           ;inc\CANlib.h: 487: {
 16679                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 16680  0119B4  010F               	movlb	15	; () banked
 16681  0119B6  9722               	bcf	34,3,b	;volatile
 16682                           
 16683                           ; BSR set to: 15
 16684                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 16685  0119B8  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 16686  0119BC  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16687  0119C0  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16688  0119C4  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16689  0119C8  0E04               	movlw	4
 16690  0119CA  D006               	goto	u7450
 16691  0119CC                     u7455:
 16692  0119CC  0100               	movlb	0	; () banked
 16693  0119CE  90D8               	bcf	status,0,c
 16694  0119D0  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16695  0119D2  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16696  0119D4  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16697  0119D6  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 16698  0119D8                     u7450:
 16699  0119D8  2EE8               	decfsz	wreg,f,c
 16700  0119DA  D7F8               	goto	u7455
 16701  0119DC  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 16702  0119E0  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16703  0119E4  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16704  0119E8  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16705                           
 16706                           ; BSR set to: 0
 16707                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 16708  0119EC  0100               	movlb	0	; () banked
 16709  0119EE  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 16710  0119F0  0100               	movlb	0	; () banked
 16711  0119F2  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16712  0119F4  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16713  0119F6  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16714  0119F8  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16715                           
 16716                           ; BSR set to: 0
 16717                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 16718  0119FA  C07B  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 16719                           
 16720                           ; BSR set to: 0
 16721                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 16722  0119FE  0E07               	movlw	7
 16723  011A00  0100               	movlb	0	; () banked
 16724  011A02  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 16725  011A04  0100               	movlb	0	; () banked
 16726  011A06  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16727  011A08  0E00               	movlw	0
 16728  011A0A  0100               	movlb	0	; () banked
 16729  011A0C  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16730  011A0E  0100               	movlb	0	; () banked
 16731  011A10  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16732  011A12  0E00               	movlw	0
 16733  011A14  0100               	movlb	0	; () banked
 16734  011A16  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16735  011A18  0100               	movlb	0	; () banked
 16736  011A1A  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16737  011A1C  0E00               	movlw	0
 16738  011A1E  0100               	movlb	0	; () banked
 16739  011A20  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16740  011A22  0100               	movlb	0	; () banked
 16741  011A24  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16742                           
 16743                           ; BSR set to: 0
 16744                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 16745  011A26  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 16746  011A2A  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16747  011A2E  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16748  011A32  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16749  011A36  0E05               	movlw	5
 16750  011A38                     u7465:
 16751  011A38  90D8               	bcf	status,0,c
 16752  011A3A  0100               	movlb	0	; () banked
 16753  011A3C  3777               	rlcf	??_CANsendMessage& (0+255),f,b
 16754  011A3E  3778               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 16755  011A40  3779               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 16756  011A42  377A               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 16757  011A44  2EE8               	decfsz	wreg,f,c
 16758  011A46  D7F8               	goto	u7465
 16759  011A48  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 16760  011A4C  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16761  011A50  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16762  011A54  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16763                           
 16764                           ; BSR set to: 0
 16765                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 16766  011A58  010F               	movlb	15	; () banked
 16767  011A5A  5122               	movf	34,w,b	;volatile
 16768  011A5C  0B1F               	andlw	31
 16769  011A5E  010F               	movlb	15	; () banked
 16770  011A60  6F22               	movwf	34,b	;volatile
 16771                           
 16772                           ; BSR set to: 15
 16773                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 16774  011A62  C07B  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 16775  011A66                     l6022:
 16776                           
 16777                           ;inc\CANlib.h: 498: }
 16778                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 16779  011A66  0100               	movlb	0	; () banked
 16780  011A68  A176               	btfss	CANsendMessage@flags& (0+255),0,b
 16781  011A6A  D003               	goto	l414
 16782                           
 16783                           ; BSR set to: 0
 16784                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 16785  011A6C  010F               	movlb	15	; () banked
 16786  011A6E  8120               	bsf	32,0,b	;volatile
 16787  011A70  D002               	goto	l415
 16788  011A72                     l414:
 16789                           
 16790                           ; BSR set to: 0
 16791                           ;inc\CANlib.h: 502: else
 16792                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 16793  011A72  010F               	movlb	15	; () banked
 16794  011A74  9120               	bcf	32,0,b	;volatile
 16795  011A76                     l415:
 16796                           
 16797                           ; BSR set to: 15
 16798                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 16799  011A76  0100               	movlb	0	; () banked
 16800  011A78  A376               	btfss	CANsendMessage@flags& (0+255),1,b
 16801  011A7A  D003               	goto	l416
 16802                           
 16803                           ; BSR set to: 0
 16804                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 16805  011A7C  010F               	movlb	15	; () banked
 16806  011A7E  8320               	bsf	32,1,b	;volatile
 16807  011A80  D002               	goto	l6028
 16808  011A82                     l416:
 16809                           
 16810                           ; BSR set to: 0
 16811                           ;inc\CANlib.h: 506: else
 16812                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 16813  011A82  010F               	movlb	15	; () banked
 16814  011A84  9320               	bcf	32,1,b	;volatile
 16815  011A86                     l6028:
 16816                           
 16817                           ; BSR set to: 15
 16818                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 16819  011A86  C073  FFD9         	movff	CANsendMessage@data,fsr2l
 16820  011A8A  C074  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16821  011A8E  50DF               	movf	indf2,w,c
 16822  011A90  010F               	movlb	15	; () banked
 16823  011A92  6F26               	movwf	38,b	;volatile
 16824                           
 16825                           ; BSR set to: 15
 16826                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 16827  011A94  0100               	movlb	0	; () banked
 16828  011A96  EE20 F001          	lfsr	2,1
 16829  011A9A  5173               	movf	CANsendMessage@data& (0+255),w,b
 16830  011A9C  26D9               	addwf	fsr2l,f,c
 16831  011A9E  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16832  011AA0  22DA               	addwfc	fsr2h,f,c
 16833  011AA2  50DF               	movf	indf2,w,c
 16834  011AA4  010F               	movlb	15	; () banked
 16835  011AA6  6F27               	movwf	39,b	;volatile
 16836                           
 16837                           ; BSR set to: 15
 16838                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 16839  011AA8  0100               	movlb	0	; () banked
 16840  011AAA  EE20 F002          	lfsr	2,2
 16841  011AAE  5173               	movf	CANsendMessage@data& (0+255),w,b
 16842  011AB0  26D9               	addwf	fsr2l,f,c
 16843  011AB2  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16844  011AB4  22DA               	addwfc	fsr2h,f,c
 16845  011AB6  50DF               	movf	indf2,w,c
 16846  011AB8  010F               	movlb	15	; () banked
 16847  011ABA  6F28               	movwf	40,b	;volatile
 16848                           
 16849                           ; BSR set to: 15
 16850                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 16851  011ABC  0100               	movlb	0	; () banked
 16852  011ABE  EE20 F003          	lfsr	2,3
 16853  011AC2  5173               	movf	CANsendMessage@data& (0+255),w,b
 16854  011AC4  26D9               	addwf	fsr2l,f,c
 16855  011AC6  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16856  011AC8  22DA               	addwfc	fsr2h,f,c
 16857  011ACA  50DF               	movf	indf2,w,c
 16858  011ACC  010F               	movlb	15	; () banked
 16859  011ACE  6F29               	movwf	41,b	;volatile
 16860                           
 16861                           ; BSR set to: 15
 16862                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 16863  011AD0  0100               	movlb	0	; () banked
 16864  011AD2  EE20 F004          	lfsr	2,4
 16865  011AD6  5173               	movf	CANsendMessage@data& (0+255),w,b
 16866  011AD8  26D9               	addwf	fsr2l,f,c
 16867  011ADA  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16868  011ADC  22DA               	addwfc	fsr2h,f,c
 16869  011ADE  50DF               	movf	indf2,w,c
 16870  011AE0  010F               	movlb	15	; () banked
 16871  011AE2  6F2A               	movwf	42,b	;volatile
 16872                           
 16873                           ; BSR set to: 15
 16874                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 16875  011AE4  0100               	movlb	0	; () banked
 16876  011AE6  EE20 F005          	lfsr	2,5
 16877  011AEA  5173               	movf	CANsendMessage@data& (0+255),w,b
 16878  011AEC  26D9               	addwf	fsr2l,f,c
 16879  011AEE  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16880  011AF0  22DA               	addwfc	fsr2h,f,c
 16881  011AF2  50DF               	movf	indf2,w,c
 16882  011AF4  010F               	movlb	15	; () banked
 16883  011AF6  6F2B               	movwf	43,b	;volatile
 16884                           
 16885                           ; BSR set to: 15
 16886                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 16887  011AF8  0100               	movlb	0	; () banked
 16888  011AFA  EE20 F006          	lfsr	2,6
 16889  011AFE  5173               	movf	CANsendMessage@data& (0+255),w,b
 16890  011B00  26D9               	addwf	fsr2l,f,c
 16891  011B02  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16892  011B04  22DA               	addwfc	fsr2h,f,c
 16893  011B06  50DF               	movf	indf2,w,c
 16894  011B08  010F               	movlb	15	; () banked
 16895  011B0A  6F2C               	movwf	44,b	;volatile
 16896                           
 16897                           ; BSR set to: 15
 16898                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 16899  011B0C  0100               	movlb	0	; () banked
 16900  011B0E  EE20 F007          	lfsr	2,7
 16901  011B12  5173               	movf	CANsendMessage@data& (0+255),w,b
 16902  011B14  26D9               	addwf	fsr2l,f,c
 16903  011B16  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16904  011B18  22DA               	addwfc	fsr2h,f,c
 16905  011B1A  50DF               	movf	indf2,w,c
 16906  011B1C  010F               	movlb	15	; () banked
 16907  011B1E  6F2D               	movwf	45,b	;volatile
 16908                           
 16909                           ; BSR set to: 15
 16910                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 16911  011B20  010F               	movlb	15	; () banked
 16912  011B22  8720               	bsf	32,3,b	;volatile
 16913                           
 16914                           ; BSR set to: 15
 16915                           ;inc\CANlib.h: 520: return;
 16916  011B24  0012               	return	
 16917  011B26                     __end_of_CANsendMessage:
 16918                           	opt stack 0
 16919                           tblptru	equ	0xFF8
 16920                           tblptrh	equ	0xFF7
 16921                           tblptrl	equ	0xFF6
 16922                           tablat	equ	0xFF5
 16923                           prodh	equ	0xFF4
 16924                           prodl	equ	0xFF3
 16925                           intcon	equ	0xFF2
 16926                           postinc0	equ	0xFEE
 16927                           wreg	equ	0xFE8
 16928                           indf2	equ	0xFDF
 16929                           postinc2	equ	0xFDE
 16930                           fsr2h	equ	0xFDA
 16931                           fsr2l	equ	0xFD9
 16932                           status	equ	0xFD8
 16933                           
 16934 ;; *************** function _CANisTxReady *****************
 16935 ;; Defined at:
 16936 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 16937 ;; Parameters:    Size  Location     Type
 16938 ;;		None
 16939 ;; Auto vars:     Size  Location     Type
 16940 ;;		None
 16941 ;; Return value:  Size  Location     Type
 16942 ;;                  1    wreg      unsigned char 
 16943 ;; Registers used:
 16944 ;;		wreg, status,2
 16945 ;; Tracked objects:
 16946 ;;		On entry : 0/0
 16947 ;;		On exit  : 0/0
 16948 ;;		Unchanged: 0/0
 16949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16951 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16953 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16954 ;;Total ram usage:        1 bytes
 16955 ;; Hardware stack levels used:    1
 16956 ;; Hardware stack levels required when called:    3
 16957 ;; This function calls:
 16958 ;;		Nothing
 16959 ;; This function is called by:
 16960 ;;		_main
 16961 ;;		_CAN_Send
 16962 ;;		_LCD_Handler
 16963 ;; This function uses a non-reentrant model
 16964 ;;
 16965                           
 16966                           	psect	text46
 16967  015D78                     __ptext46:
 16968                           	opt stack 0
 16969  015D78                     _CANisTxReady:
 16970                           	opt stack 26
 16971                           
 16972                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 16973                           
 16974                           ; BSR set to: 15
 16975                           ;incstack = 0
 16976  015D78  0E01               	movlw	1
 16977  015D7A  0100               	movlb	0	; () banked
 16978  015D7C  6F6F               	movwf	_CANisTxReady$3235& (0+255),b
 16979                           
 16980                           ; BSR set to: 0
 16981  015D7E  010F               	movlb	15	; () banked
 16982  015D80  A740               	btfss	64,3,b	;volatile
 16983  015D82  D009               	goto	l568
 16984                           
 16985                           ; BSR set to: 15
 16986  015D84  010F               	movlb	15	; () banked
 16987  015D86  A730               	btfss	48,3,b	;volatile
 16988  015D88  D006               	goto	l568
 16989                           
 16990                           ; BSR set to: 15
 16991  015D8A  010F               	movlb	15	; () banked
 16992  015D8C  A720               	btfss	32,3,b	;volatile
 16993  015D8E  D003               	goto	l568
 16994                           
 16995                           ; BSR set to: 15
 16996  015D90  0E00               	movlw	0
 16997  015D92  0100               	movlb	0	; () banked
 16998  015D94  6F6F               	movwf	_CANisTxReady$3235& (0+255),b
 16999  015D96                     l568:
 17000  015D96  0100               	movlb	0	; () banked
 17001  015D98  516F               	movf	_CANisTxReady$3235& (0+255),w,b
 17002  015D9A  0012               	return	
 17003  015D9C                     __end_of_CANisTxReady:
 17004                           	opt stack 0
 17005                           tblptru	equ	0xFF8
 17006                           tblptrh	equ	0xFF7
 17007                           tblptrl	equ	0xFF6
 17008                           tablat	equ	0xFF5
 17009                           prodh	equ	0xFF4
 17010                           prodl	equ	0xFF3
 17011                           intcon	equ	0xFF2
 17012                           postinc0	equ	0xFEE
 17013                           wreg	equ	0xFE8
 17014                           indf2	equ	0xFDF
 17015                           postinc2	equ	0xFDE
 17016                           fsr2h	equ	0xFDA
 17017                           fsr2l	equ	0xFD9
 17018                           status	equ	0xFD8
 17019                           
 17020 ;; *************** function _ISR_bassa *****************
 17021 ;; Defined at:
 17022 ;;		line 139 in file "RemoteCan.c"
 17023 ;; Parameters:    Size  Location     Type
 17024 ;;		None
 17025 ;; Auto vars:     Size  Location     Type
 17026 ;;		None
 17027 ;; Return value:  Size  Location     Type
 17028 ;;		None               void
 17029 ;; Registers used:
 17030 ;;		wreg, status,2, status,0
 17031 ;; Tracked objects:
 17032 ;;		On entry : 0/0
 17033 ;;		On exit  : 0/0
 17034 ;;		Unchanged: 0/0
 17035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17038 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17039 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17040 ;;Total ram usage:       17 bytes
 17041 ;; Hardware stack levels used:    1
 17042 ;; Hardware stack levels required when called:    2
 17043 ;; This function calls:
 17044 ;;		Nothing
 17045 ;; This function is called by:
 17046 ;;		Interrupt level 1
 17047 ;; This function uses a non-reentrant model
 17048 ;;
 17049                           
 17050                           	psect	intcodelo
 17051  000018                     __pintcodelo:
 17052                           	opt stack 0
 17053  000018                     _ISR_bassa:
 17054                           	opt stack 21
 17055                           
 17056                           ; BSR set to: 0
 17057                           ;incstack = 0
 17058  000018  804E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 17059  00001A  CFD8 F02B          	movff	status,??_ISR_bassa
 17060  00001E  CFE8 F02C          	movff	wreg,??_ISR_bassa+1
 17061  000022  CFE0 F02D          	movff	bsr,??_ISR_bassa+2
 17062  000026  CFFA F02E          	movff	pclath,??_ISR_bassa+3
 17063  00002A  CFFB F02F          	movff	pclatu,??_ISR_bassa+4
 17064  00002E  CFE9 F030          	movff	fsr0l,??_ISR_bassa+5
 17065  000032  CFEA F031          	movff	fsr0h,??_ISR_bassa+6
 17066  000036  CFE1 F032          	movff	fsr1l,??_ISR_bassa+7
 17067  00003A  CFE2 F033          	movff	fsr1h,??_ISR_bassa+8
 17068  00003E  CFD9 F034          	movff	fsr2l,??_ISR_bassa+9
 17069  000042  CFDA F035          	movff	fsr2h,??_ISR_bassa+10
 17070  000046  CFF3 F036          	movff	prodl,??_ISR_bassa+11
 17071  00004A  CFF4 F037          	movff	prodh,??_ISR_bassa+12
 17072  00004E  CFF6 F038          	movff	tblptrl,??_ISR_bassa+13
 17073  000052  CFF7 F039          	movff	tblptrh,??_ISR_bassa+14
 17074  000056  CFF8 F03A          	movff	tblptru,??_ISR_bassa+15
 17075  00005A  CFF5 F03B          	movff	tablat,??_ISR_bassa+16
 17076                           
 17077                           ;RemoteCan.c: 140: if (PIR2bits.TMR3IF == 1) {
 17078  00005E  A2A1               	btfss	4001,1,c	;volatile
 17079  000060  D00B               	goto	i1l768
 17080                           
 17081                           ;RemoteCan.c: 141: time_counter++;
 17082  000062  0E01               	movlw	1
 17083  000064  2620               	addwf	_time_counter,f,c	;volatile
 17084  000066  0E00               	movlw	0
 17085  000068  2221               	addwfc	_time_counter+1,f,c	;volatile
 17086  00006A  2222               	addwfc	_time_counter+2,f,c	;volatile
 17087  00006C  2223               	addwfc	_time_counter+3,f,c	;volatile
 17088                           
 17089                           ;RemoteCan.c: 142: TMR3H = 0x63;
 17090  00006E  0E63               	movlw	99
 17091  000070  6EB3               	movwf	4019,c	;volatile
 17092                           
 17093                           ;RemoteCan.c: 143: TMR3L = 0xC0;
 17094  000072  0EC0               	movlw	192
 17095  000074  6EB2               	movwf	4018,c	;volatile
 17096                           
 17097                           ;RemoteCan.c: 144: PIR2bits.TMR3IF = 0;
 17098  000076  92A1               	bcf	4001,1,c	;volatile
 17099  000078                     i1l768:
 17100  000078  C03B  FFF5         	movff	??_ISR_bassa+16,tablat
 17101  00007C  C03A  FFF8         	movff	??_ISR_bassa+15,tblptru
 17102  000080  C039  FFF7         	movff	??_ISR_bassa+14,tblptrh
 17103  000084  C038  FFF6         	movff	??_ISR_bassa+13,tblptrl
 17104  000088  C037  FFF4         	movff	??_ISR_bassa+12,prodh
 17105  00008C  C036  FFF3         	movff	??_ISR_bassa+11,prodl
 17106  000090  C035  FFDA         	movff	??_ISR_bassa+10,fsr2h
 17107  000094  C034  FFD9         	movff	??_ISR_bassa+9,fsr2l
 17108  000098  C033  FFE2         	movff	??_ISR_bassa+8,fsr1h
 17109  00009C  C032  FFE1         	movff	??_ISR_bassa+7,fsr1l
 17110  0000A0  C031  FFEA         	movff	??_ISR_bassa+6,fsr0h
 17111  0000A4  C030  FFE9         	movff	??_ISR_bassa+5,fsr0l
 17112  0000A8  C02F  FFFB         	movff	??_ISR_bassa+4,pclatu
 17113  0000AC  C02E  FFFA         	movff	??_ISR_bassa+3,pclath
 17114  0000B0  C02D  FFE0         	movff	??_ISR_bassa+2,bsr
 17115  0000B4  C02C  FFE8         	movff	??_ISR_bassa+1,wreg
 17116  0000B8  C02B  FFD8         	movff	??_ISR_bassa,status
 17117  0000BC  904E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 17118  0000BE  0010               	retfie	
 17119  0000C0                     __end_of_ISR_bassa:
 17120                           	opt stack 0
 17121                           pclatu	equ	0xFFB
 17122                           pclath	equ	0xFFA
 17123                           tblptru	equ	0xFF8
 17124                           tblptrh	equ	0xFF7
 17125                           tblptrl	equ	0xFF6
 17126                           tablat	equ	0xFF5
 17127                           prodh	equ	0xFF4
 17128                           prodl	equ	0xFF3
 17129                           intcon	equ	0xFF2
 17130                           postinc0	equ	0xFEE
 17131                           fsr0h	equ	0xFEA
 17132                           fsr0l	equ	0xFE9
 17133                           wreg	equ	0xFE8
 17134                           fsr1h	equ	0xFE2
 17135                           fsr1l	equ	0xFE1
 17136                           bsr	equ	0xFE0
 17137                           indf2	equ	0xFDF
 17138                           postinc2	equ	0xFDE
 17139                           fsr2h	equ	0xFDA
 17140                           fsr2l	equ	0xFD9
 17141                           status	equ	0xFD8
 17142                           
 17143 ;; *************** function _ISR_alta *****************
 17144 ;; Defined at:
 17145 ;;		line 104 in file "RemoteCan.c"
 17146 ;; Parameters:    Size  Location     Type
 17147 ;;		None
 17148 ;; Auto vars:     Size  Location     Type
 17149 ;;  i               1   14[BANK0 ] unsigned char 
 17150 ;; Return value:  Size  Location     Type
 17151 ;;		None               void
 17152 ;; Registers used:
 17153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17154 ;; Tracked objects:
 17155 ;;		On entry : 0/0
 17156 ;;		On exit  : 0/0
 17157 ;;		Unchanged: 0/0
 17158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17161 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17162 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17163 ;;Total ram usage:       15 bytes
 17164 ;; Hardware stack levels used:    1
 17165 ;; Hardware stack levels required when called:    1
 17166 ;; This function calls:
 17167 ;;		_CANisRxReady
 17168 ;;		_CANreceiveMessage
 17169 ;;		i2_CANisTxReady
 17170 ;;		i2_CANsendMessage
 17171 ;; This function is called by:
 17172 ;;		Interrupt level 2
 17173 ;; This function uses a non-reentrant model
 17174 ;;
 17175                           
 17176                           	psect	intcode
 17177  000008                     __pintcode:
 17178                           	opt stack 0
 17179  000008                     _ISR_alta:
 17180                           	opt stack 21
 17181                           
 17182                           ;incstack = 0
 17183  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17184  00000A  CFFA F060          	movff	pclath,??_ISR_alta
 17185  00000E  CFFB F061          	movff	pclatu,??_ISR_alta+1
 17186  000012  EFDE  F0A8         	goto	int_func
 17187                           pclatu	equ	0xFFB
 17188                           pclath	equ	0xFFA
 17189                           tblptru	equ	0xFF8
 17190                           tblptrh	equ	0xFF7
 17191                           tblptrl	equ	0xFF6
 17192                           tablat	equ	0xFF5
 17193                           prodh	equ	0xFF4
 17194                           prodl	equ	0xFF3
 17195                           intcon	equ	0xFF2
 17196                           postinc0	equ	0xFEE
 17197                           fsr0h	equ	0xFEA
 17198                           fsr0l	equ	0xFE9
 17199                           wreg	equ	0xFE8
 17200                           fsr1h	equ	0xFE2
 17201                           fsr1l	equ	0xFE1
 17202                           bsr	equ	0xFE0
 17203                           indf2	equ	0xFDF
 17204                           postinc2	equ	0xFDE
 17205                           fsr2h	equ	0xFDA
 17206                           fsr2l	equ	0xFD9
 17207                           status	equ	0xFD8
 17208                           
 17209                           	psect	intcode_body
 17210  0151BC                     __pintcode_body:
 17211                           	opt stack 21
 17212  0151BC                     int_func:
 17213                           	opt stack 21
 17214  0151BC  CFE9 F062          	movff	fsr0l,??_ISR_alta+2
 17215  0151C0  CFEA F063          	movff	fsr0h,??_ISR_alta+3
 17216  0151C4  CFE1 F064          	movff	fsr1l,??_ISR_alta+4
 17217  0151C8  CFE2 F065          	movff	fsr1h,??_ISR_alta+5
 17218  0151CC  CFD9 F066          	movff	fsr2l,??_ISR_alta+6
 17219  0151D0  CFDA F067          	movff	fsr2h,??_ISR_alta+7
 17220  0151D4  CFF3 F068          	movff	prodl,??_ISR_alta+8
 17221  0151D8  CFF4 F069          	movff	prodh,??_ISR_alta+9
 17222  0151DC  CFF6 F06A          	movff	tblptrl,??_ISR_alta+10
 17223  0151E0  CFF7 F06B          	movff	tblptrh,??_ISR_alta+11
 17224  0151E4  CFF8 F06C          	movff	tblptru,??_ISR_alta+12
 17225  0151E8  CFF5 F06D          	movff	tablat,??_ISR_alta+13
 17226                           
 17227                           ;RemoteCan.c: 105: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 17228  0151EC  A2A4               	btfss	4004,1,c	;volatile
 17229  0151EE  B0A4               	btfsc	4004,0,c	;volatile
 17230  0151F0  D001               	goto	i2l9114
 17231  0151F2  D074               	goto	i2l764
 17232  0151F4                     i2l9114:
 17233                           
 17234                           ;RemoteCan.c: 106: if (CANisRxReady()) {
 17235  0151F4  EC31  F0AF         	call	_CANisRxReady	;wreg free
 17236  0151F8  0900               	iorlw	0
 17237  0151FA  B4D8               	btfsc	status,2,c
 17238  0151FC  D06B               	goto	i2l9158
 17239                           
 17240                           ;RemoteCan.c: 107: CANreceiveMessage(&msg);
 17241  0151FE  0E06               	movlw	low _msg
 17242  015200  6E3C               	movwf	CANreceiveMessage@msg,c
 17243  015202  0E01               	movlw	high _msg
 17244  015204  6E3D               	movwf	CANreceiveMessage@msg+1,c
 17245  015206  ECBB  F096         	call	_CANreceiveMessage	;wreg free
 17246                           
 17247                           ;RemoteCan.c: 108: RTR_Flag = msg.RTR;
 17248  01520A  0101               	movlb	1	; () banked
 17249  01520C  A114               	btfss	(_msg+14)& (0+255),0,b
 17250  01520E  D002               	goto	i2u1216_40
 17251  015210  884C               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17252  015212  D001               	goto	i2l9120
 17253  015214                     i2u1216_40:
 17254  015214  984C               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17255  015216                     i2l9120:
 17256                           
 17257                           ;RemoteCan.c: 109: id = msg.identifier;
 17258  015216  C106  F00C         	movff	_msg,_id	;volatile
 17259  01521A  C107  F00D         	movff	_msg+1,_id+1	;volatile
 17260  01521E  C108  F00E         	movff	_msg+2,_id+2	;volatile
 17261  015222  C109  F00F         	movff	_msg+3,_id+3	;volatile
 17262                           
 17263                           ;RemoteCan.c: 110: newMessageCan = 1;
 17264  015226  8E4C               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 17265                           
 17266                           ;RemoteCan.c: 111: if (id == 0b00000000110) {
 17267  015228  0E06               	movlw	6
 17268  01522A  180C               	xorwf	_id,w,c	;volatile
 17269  01522C  100D               	iorwf	_id+1,w,c	;volatile
 17270  01522E  100E               	iorwf	_id+2,w,c	;volatile
 17271  015230  100F               	iorwf	_id+3,w,c	;volatile
 17272  015232  A4D8               	btfss	status,2,c
 17273  015234  D01F               	goto	i2l9138
 17274                           
 17275                           ;RemoteCan.c: 112: for (unsigned char i = 0; i < 8; i++) {
 17276  015236  0E00               	movlw	0
 17277  015238  0100               	movlb	0	; () banked
 17278  01523A  6F6E               	movwf	ISR_alta@i& (0+255),b
 17279  01523C                     i2l9128:
 17280                           
 17281                           ; BSR set to: 0
 17282  01523C  0E07               	movlw	7
 17283  01523E  0100               	movlb	0	; () banked
 17284  015240  656E               	cpfsgt	ISR_alta@i& (0+255),b
 17285  015242  D001               	goto	i2l9132
 17286  015244  D017               	goto	i2l9138
 17287  015246                     i2l9132:
 17288                           
 17289                           ; BSR set to: 0
 17290                           ;RemoteCan.c: 113: data_speed_rx[i] = msg.data[i];
 17291  015246  0100               	movlb	0	; () banked
 17292  015248  516E               	movf	ISR_alta@i& (0+255),w,b
 17293  01524A  0D01               	mullw	1
 17294  01524C  0E0A               	movlw	low (_msg+4)
 17295  01524E  24F3               	addwf	prodl,w,c
 17296  015250  6ED9               	movwf	fsr2l,c
 17297  015252  0E01               	movlw	high (_msg+4)
 17298  015254  20F4               	addwfc	prodh,w,c
 17299  015256  6EDA               	movwf	fsr2h,c
 17300  015258  0100               	movlb	0	; () banked
 17301  01525A  516E               	movf	ISR_alta@i& (0+255),w,b
 17302  01525C  0D01               	mullw	1
 17303  01525E  0E01               	movlw	low _data_speed_rx
 17304  015260  24F3               	addwf	prodl,w,c
 17305  015262  6EE1               	movwf	fsr1l,c
 17306  015264  0E00               	movlw	high _data_speed_rx
 17307  015266  20F4               	addwfc	prodh,w,c
 17308  015268  6EE2               	movwf	fsr1h,c
 17309  01526A  CFDF FFE7          	movff	indf2,indf1
 17310                           
 17311                           ; BSR set to: 0
 17312  01526E  0100               	movlb	0	; () banked
 17313  015270  2B6E               	incf	ISR_alta@i& (0+255),f,b
 17314  015272  D7E4               	goto	i2l9128
 17315  015274                     i2l9138:
 17316                           
 17317                           ;RemoteCan.c: 114: }
 17318                           ;RemoteCan.c: 115: }
 17319                           ;RemoteCan.c: 116: if (id == 0b00000000010) {
 17320  015274  0E02               	movlw	2
 17321  015276  180C               	xorwf	_id,w,c	;volatile
 17322  015278  100D               	iorwf	_id+1,w,c	;volatile
 17323  01527A  100E               	iorwf	_id+2,w,c	;volatile
 17324  01527C  100F               	iorwf	_id+3,w,c	;volatile
 17325  01527E  B4D8               	btfsc	status,2,c
 17326                           
 17327                           ;RemoteCan.c: 117: if (RTR_Flag == 1) {
 17328  015280  A84C               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17329  015282  D028               	goto	i2l9158
 17330                           
 17331                           ;RemoteCan.c: 118: pr_time_4 = time_counter;
 17332  015284  C020  F014         	movff	_time_counter,_pr_time_4	;volatile
 17333  015288  C021  F015         	movff	_time_counter+1,_pr_time_4+1	;volatile
 17334  01528C  C022  F016         	movff	_time_counter+2,_pr_time_4+2	;volatile
 17335  015290  C023  F017         	movff	_time_counter+3,_pr_time_4+3	;volatile
 17336                           
 17337                           ;RemoteCan.c: 119: data[0] = 0x03;
 17338  015294  0E03               	movlw	3
 17339  015296  6E2A               	movwf	_data,c
 17340                           
 17341                           ;RemoteCan.c: 120: _delay((unsigned long)((10)*(16000000/4000000.0)));
 17342  015298  0E0D               	movlw	13
 17343  01529A                     i2u1249_47:
 17344  01529A  2EE8               	decfsz	wreg,f,c
 17345  01529C  D7FE               	goto	i2u1249_47
 17346  01529E  F000               	nop	
 17347  0152A0                     i2l9148:
 17348  0152A0  ECDF  F0AE         	call	i2_CANisTxReady	;wreg free
 17349  0152A4  06E8               	decf	wreg,f,c
 17350  0152A6  A4D8               	btfss	status,2,c
 17351  0152A8  D7FB               	goto	i2l9148
 17352                           
 17353                           ;RemoteCan.c: 122: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 17354  0152AA  0E02               	movlw	2
 17355  0152AC  6E3C               	movwf	i2CANsendMessage@identifier,c
 17356  0152AE  0E00               	movlw	0
 17357  0152B0  6E3D               	movwf	i2CANsendMessage@identifier+1,c
 17358  0152B2  0E00               	movlw	0
 17359  0152B4  6E3E               	movwf	i2CANsendMessage@identifier+2,c
 17360  0152B6  0E00               	movlw	0
 17361  0152B8  6E3F               	movwf	i2CANsendMessage@identifier+3,c
 17362  0152BA  0E2A               	movlw	low _data
 17363  0152BC  6E40               	movwf	i2CANsendMessage@data,c
 17364  0152BE  0E00               	movlw	high _data
 17365  0152C0  6E41               	movwf	i2CANsendMessage@data+1,c
 17366  0152C2  0E08               	movlw	8
 17367  0152C4  6E42               	movwf	i2CANsendMessage@dataLength,c
 17368  0152C6  0EBC               	movlw	188
 17369  0152C8  6E43               	movwf	i2CANsendMessage@flags,c
 17370  0152CA  ECE6  F090         	call	i2_CANsendMessage	;wreg free
 17371                           
 17372                           ;RemoteCan.c: 125: MotoreFlag = 1;
 17373  0152CE  864C               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 17374                           
 17375                           ;RemoteCan.c: 126: AbsFlag = 0;
 17376  0152D0  904C               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 17377                           
 17378                           ;RemoteCan.c: 127: SterzoFlag = 0;
 17379  0152D2  9A4C               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 17380  0152D4                     i2l9158:
 17381                           
 17382                           ;RemoteCan.c: 128: }
 17383                           ;RemoteCan.c: 130: }
 17384                           ;RemoteCan.c: 131: }
 17385                           ;RemoteCan.c: 132: PIR3bits.RXB1IF = 0;
 17386  0152D4  92A4               	bcf	4004,1,c	;volatile
 17387                           
 17388                           ;RemoteCan.c: 133: PIR3bits.RXB0IF = 0;
 17389  0152D6  90A4               	bcf	4004,0,c	;volatile
 17390                           
 17391                           ;RemoteCan.c: 134: LATDbits.LATD2 = 1;
 17392  0152D8  848C               	bsf	3980,2,c	;volatile
 17393                           
 17394                           ;RemoteCan.c: 135: LATDbits.LATD3 = 1;
 17395  0152DA  868C               	bsf	3980,3,c	;volatile
 17396  0152DC                     i2l764:
 17397  0152DC  C06D  FFF5         	movff	??_ISR_alta+13,tablat
 17398  0152E0  C06C  FFF8         	movff	??_ISR_alta+12,tblptru
 17399  0152E4  C06B  FFF7         	movff	??_ISR_alta+11,tblptrh
 17400  0152E8  C06A  FFF6         	movff	??_ISR_alta+10,tblptrl
 17401  0152EC  C069  FFF4         	movff	??_ISR_alta+9,prodh
 17402  0152F0  C068  FFF3         	movff	??_ISR_alta+8,prodl
 17403  0152F4  C067  FFDA         	movff	??_ISR_alta+7,fsr2h
 17404  0152F8  C066  FFD9         	movff	??_ISR_alta+6,fsr2l
 17405  0152FC  C065  FFE2         	movff	??_ISR_alta+5,fsr1h
 17406  015300  C064  FFE1         	movff	??_ISR_alta+4,fsr1l
 17407  015304  C063  FFEA         	movff	??_ISR_alta+3,fsr0h
 17408  015308  C062  FFE9         	movff	??_ISR_alta+2,fsr0l
 17409  01530C  C061  FFFB         	movff	??_ISR_alta+1,pclatu
 17410  015310  C060  FFFA         	movff	??_ISR_alta,pclath
 17411  015314  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17412  015316  0011               	retfie		f
 17413  015318                     __end_of_ISR_alta:
 17414                           	opt stack 0
 17415                           pclatu	equ	0xFFB
 17416                           pclath	equ	0xFFA
 17417                           tblptru	equ	0xFF8
 17418                           tblptrh	equ	0xFF7
 17419                           tblptrl	equ	0xFF6
 17420                           tablat	equ	0xFF5
 17421                           prodh	equ	0xFF4
 17422                           prodl	equ	0xFF3
 17423                           intcon	equ	0xFF2
 17424                           postinc0	equ	0xFEE
 17425                           fsr0h	equ	0xFEA
 17426                           fsr0l	equ	0xFE9
 17427                           wreg	equ	0xFE8
 17428                           indf1	equ	0xFE7
 17429                           fsr1h	equ	0xFE2
 17430                           fsr1l	equ	0xFE1
 17431                           bsr	equ	0xFE0
 17432                           indf2	equ	0xFDF
 17433                           postinc2	equ	0xFDE
 17434                           fsr2h	equ	0xFDA
 17435                           fsr2l	equ	0xFD9
 17436                           status	equ	0xFD8
 17437                           
 17438 ;; *************** function i2_CANsendMessage *****************
 17439 ;; Defined at:
 17440 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 17441 ;; Parameters:    Size  Location     Type
 17442 ;;  identifier      4   17[COMRAM] unsigned long 
 17443 ;;  data            2   21[COMRAM] PTR unsigned char 
 17444 ;;		 -> data_speed(1), RAM(3327), data_brake(1), data_steering(1), 
 17445 ;;		 -> data(1), 
 17446 ;;  dataLength      1   23[COMRAM] unsigned char 
 17447 ;;  flags           1   24[COMRAM] enum E16909
 17448 ;; Auto vars:     Size  Location     Type
 17449 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 17450 ;; Return value:  Size  Location     Type
 17451 ;;		None               void
 17452 ;; Registers used:
 17453 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17454 ;; Tracked objects:
 17455 ;;		On entry : 0/0
 17456 ;;		On exit  : 0/0
 17457 ;;		Unchanged: 0/0
 17458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17459 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17460 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17461 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17462 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17463 ;;Total ram usage:       16 bytes
 17464 ;; Hardware stack levels used:    1
 17465 ;; This function calls:
 17466 ;;		Nothing
 17467 ;; This function is called by:
 17468 ;;		_ISR_alta
 17469 ;; This function uses a non-reentrant model
 17470 ;;
 17471                           
 17472                           	psect	text49
 17473  0121CC                     __ptext49:
 17474                           	opt stack 0
 17475  0121CC                     i2_CANsendMessage:
 17476                           	opt stack 21
 17477                           
 17478                           ;inc\CANlib.h: 296: unsigned long tamp;
 17479                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 17480                           
 17481                           ;incstack = 0
 17482  0121CC  010F               	movlb	15	; () banked
 17483  0121CE  B740               	btfsc	64,3,b	;volatile
 17484  0121D0  D115               	goto	i2l375
 17485                           
 17486                           ; BSR set to: 15
 17487                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 17488  0121D2  C042  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 17489                           
 17490                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 17491  0121D6  AC43               	btfss	i2CANsendMessage@flags,6,c
 17492  0121D8  D003               	goto	i2l376
 17493                           
 17494                           ; BSR set to: 15
 17495                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 17496  0121DA  010F               	movlb	15	; () banked
 17497  0121DC  8D45               	bsf	69,6,b	;volatile
 17498  0121DE  D002               	goto	i2l377
 17499  0121E0                     i2l376:
 17500                           
 17501                           ; BSR set to: 15
 17502                           ;inc\CANlib.h: 302: else
 17503                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 17504  0121E0  010F               	movlb	15	; () banked
 17505  0121E2  9D45               	bcf	69,6,b	;volatile
 17506  0121E4                     i2l377:
 17507                           
 17508                           ; BSR set to: 15
 17509                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 17510  0121E4  A643               	btfss	i2CANsendMessage@flags,3,c
 17511  0121E6  D066               	goto	i2l378
 17512                           
 17513                           ; BSR set to: 15
 17514                           ;inc\CANlib.h: 306: {
 17515                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 17516  0121E8  503C               	movf	i2CANsendMessage@identifier,w,c
 17517  0121EA  6E48               	movwf	i2CANsendMessage@tamp,c
 17518  0121EC  6A49               	clrf	i2CANsendMessage@tamp+1,c
 17519  0121EE  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 17520  0121F0  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 17521                           
 17522                           ; BSR set to: 15
 17523                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 17524  0121F2  C048  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 17525                           
 17526                           ; BSR set to: 15
 17527                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 17528  0121F6  0E00               	movlw	0
 17529  0121F8  143C               	andwf	i2CANsendMessage@identifier,w,c
 17530  0121FA  6E48               	movwf	i2CANsendMessage@tamp,c
 17531  0121FC  0EFF               	movlw	255
 17532  0121FE  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 17533  012200  6E49               	movwf	i2CANsendMessage@tamp+1,c
 17534  012202  0E00               	movlw	0
 17535  012204  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 17536  012206  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 17537  012208  0E00               	movlw	0
 17538  01220A  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 17539  01220C  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 17540                           
 17541                           ; BSR set to: 15
 17542                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 17543  01220E  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17544  012212  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17545  012216  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17546  01221A  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17547  01221E  C045  F044         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 17548  012222  C046  F045         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 17549  012226  C047  F046         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 17550  01222A  6A47               	clrf	??i2_CANsendMessage+3,c
 17551  01222C  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17552  012230  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17553  012234  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17554  012238  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17555                           
 17556                           ; BSR set to: 15
 17557                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 17558  01223C  C048  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 17559                           
 17560                           ; BSR set to: 15
 17561                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 17562  012240  0E00               	movlw	0
 17563  012242  010F               	movlb	15	; () banked
 17564  012244  6F42               	movwf	66,b	;volatile
 17565                           
 17566                           ; BSR set to: 15
 17567                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 17568  012246  010F               	movlb	15	; () banked
 17569  012248  8742               	bsf	66,3,b	;volatile
 17570                           
 17571                           ; BSR set to: 15
 17572                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 17573  01224A  A03E               	btfss	i2CANsendMessage@identifier+2,0,c
 17574  01224C  D002               	goto	i2l379
 17575                           
 17576                           ; BSR set to: 15
 17577                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 17578  01224E  010F               	movlb	15	; () banked
 17579  012250  8142               	bsf	66,0,b	;volatile
 17580  012252                     i2l379:
 17581                           
 17582                           ; BSR set to: 15
 17583                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 17584  012252  A23E               	btfss	i2CANsendMessage@identifier+2,1,c
 17585  012254  D002               	goto	i2l380
 17586                           
 17587                           ; BSR set to: 15
 17588                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 17589  012256  010F               	movlb	15	; () banked
 17590  012258  8342               	bsf	66,1,b	;volatile
 17591  01225A                     i2l380:
 17592                           
 17593                           ; BSR set to: 15
 17594                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 17595  01225A  A43E               	btfss	i2CANsendMessage@identifier+2,2,c
 17596  01225C  D002               	goto	i2l381
 17597                           
 17598                           ; BSR set to: 15
 17599                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 17600  01225E  010F               	movlb	15	; () banked
 17601  012260  8B42               	bsf	66,5,b	;volatile
 17602  012262                     i2l381:
 17603                           
 17604                           ; BSR set to: 15
 17605                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 17606  012262  A63E               	btfss	i2CANsendMessage@identifier+2,3,c
 17607  012264  D002               	goto	i2l382
 17608                           
 17609                           ; BSR set to: 15
 17610                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 17611  012266  010F               	movlb	15	; () banked
 17612  012268  8D42               	bsf	66,6,b	;volatile
 17613  01226A                     i2l382:
 17614                           
 17615                           ; BSR set to: 15
 17616                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 17617  01226A  A83E               	btfss	i2CANsendMessage@identifier+2,4,c
 17618  01226C  D002               	goto	i2l8850
 17619                           
 17620                           ; BSR set to: 15
 17621                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 17622  01226E  010F               	movlb	15	; () banked
 17623  012270  8F42               	bsf	66,7,b	;volatile
 17624  012272                     i2l8850:
 17625                           
 17626                           ; BSR set to: 15
 17627                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 17628  012272  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17629  012276  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17630  01227A  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17631  01227E  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17632  012282  0E16               	movlw	22
 17633  012284  D005               	goto	i2u1170_40
 17634  012286                     i2u1170_45:
 17635  012286  90D8               	bcf	status,0,c
 17636  012288  3247               	rrcf	??i2_CANsendMessage+3,f,c
 17637  01228A  3246               	rrcf	??i2_CANsendMessage+2,f,c
 17638  01228C  3245               	rrcf	??i2_CANsendMessage+1,f,c
 17639  01228E  3244               	rrcf	??i2_CANsendMessage,f,c
 17640  012290                     i2u1170_40:
 17641  012290  2EE8               	decfsz	wreg,f,c
 17642  012292  D7F9               	goto	i2u1170_45
 17643  012294  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17644  012298  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17645  01229C  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17646  0122A0  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17647                           
 17648                           ; BSR set to: 15
 17649                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17650  0122A4  5048               	movf	i2CANsendMessage@tamp,w,c
 17651  0122A6  6E48               	movwf	i2CANsendMessage@tamp,c
 17652  0122A8  6A49               	clrf	i2CANsendMessage@tamp+1,c
 17653  0122AA  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 17654  0122AC  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 17655                           
 17656                           ; BSR set to: 15
 17657                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17658  0122AE  C048  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 17659                           
 17660                           ;inc\CANlib.h: 332: }
 17661  0122B2  D04D               	goto	i2l8870
 17662  0122B4                     i2l378:
 17663                           
 17664                           ; BSR set to: 15
 17665                           ;inc\CANlib.h: 334: else
 17666                           ;inc\CANlib.h: 336: {
 17667                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17668  0122B4  010F               	movlb	15	; () banked
 17669  0122B6  9742               	bcf	66,3,b	;volatile
 17670                           
 17671                           ; BSR set to: 15
 17672                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17673  0122B8  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17674  0122BC  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17675  0122C0  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17676  0122C4  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17677  0122C8  0E04               	movlw	4
 17678  0122CA  D005               	goto	i2u1171_40
 17679  0122CC                     i2u1171_45:
 17680  0122CC  90D8               	bcf	status,0,c
 17681  0122CE  3247               	rrcf	??i2_CANsendMessage+3,f,c
 17682  0122D0  3246               	rrcf	??i2_CANsendMessage+2,f,c
 17683  0122D2  3245               	rrcf	??i2_CANsendMessage+1,f,c
 17684  0122D4  3244               	rrcf	??i2_CANsendMessage,f,c
 17685  0122D6                     i2u1171_40:
 17686  0122D6  2EE8               	decfsz	wreg,f,c
 17687  0122D8  D7F9               	goto	i2u1171_45
 17688  0122DA  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17689  0122DE  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17690  0122E2  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17691  0122E6  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17692                           
 17693                           ; BSR set to: 15
 17694                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17695  0122EA  5048               	movf	i2CANsendMessage@tamp,w,c
 17696  0122EC  6E48               	movwf	i2CANsendMessage@tamp,c
 17697  0122EE  6A49               	clrf	i2CANsendMessage@tamp+1,c
 17698  0122F0  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 17699  0122F2  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 17700                           
 17701                           ; BSR set to: 15
 17702                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17703  0122F4  C048  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 17704                           
 17705                           ; BSR set to: 15
 17706                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17707  0122F8  0E07               	movlw	7
 17708  0122FA  143C               	andwf	i2CANsendMessage@identifier,w,c
 17709  0122FC  6E48               	movwf	i2CANsendMessage@tamp,c
 17710  0122FE  0E00               	movlw	0
 17711  012300  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 17712  012302  6E49               	movwf	i2CANsendMessage@tamp+1,c
 17713  012304  0E00               	movlw	0
 17714  012306  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 17715  012308  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 17716  01230A  0E00               	movlw	0
 17717  01230C  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 17718  01230E  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 17719                           
 17720                           ; BSR set to: 15
 17721                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17722  012310  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17723  012314  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17724  012318  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17725  01231C  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17726  012320  0E05               	movlw	5
 17727  012322                     i2u1172_45:
 17728  012322  90D8               	bcf	status,0,c
 17729  012324  3644               	rlcf	??i2_CANsendMessage,f,c
 17730  012326  3645               	rlcf	??i2_CANsendMessage+1,f,c
 17731  012328  3646               	rlcf	??i2_CANsendMessage+2,f,c
 17732  01232A  3647               	rlcf	??i2_CANsendMessage+3,f,c
 17733  01232C  2EE8               	decfsz	wreg,f,c
 17734  01232E  D7F9               	goto	i2u1172_45
 17735  012330  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17736  012334  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17737  012338  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17738  01233C  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17739                           
 17740                           ; BSR set to: 15
 17741                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17742  012340  010F               	movlb	15	; () banked
 17743  012342  5142               	movf	66,w,b	;volatile
 17744  012344  0B1F               	andlw	31
 17745  012346  010F               	movlb	15	; () banked
 17746  012348  6F42               	movwf	66,b	;volatile
 17747                           
 17748                           ; BSR set to: 15
 17749                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17750  01234A  C048  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 17751  01234E                     i2l8870:
 17752                           
 17753                           ; BSR set to: 15
 17754                           ;inc\CANlib.h: 347: }
 17755                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17756  01234E  A043               	btfss	i2CANsendMessage@flags,0,c
 17757  012350  D003               	goto	i2l385
 17758                           
 17759                           ; BSR set to: 15
 17760                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17761  012352  010F               	movlb	15	; () banked
 17762  012354  8140               	bsf	64,0,b	;volatile
 17763  012356  D002               	goto	i2l386
 17764  012358                     i2l385:
 17765                           
 17766                           ; BSR set to: 15
 17767                           ;inc\CANlib.h: 351: else
 17768                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17769  012358  010F               	movlb	15	; () banked
 17770  01235A  9140               	bcf	64,0,b	;volatile
 17771  01235C                     i2l386:
 17772                           
 17773                           ; BSR set to: 15
 17774                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17775  01235C  A243               	btfss	i2CANsendMessage@flags,1,c
 17776  01235E  D003               	goto	i2l387
 17777                           
 17778                           ; BSR set to: 15
 17779                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 17780  012360  010F               	movlb	15	; () banked
 17781  012362  8340               	bsf	64,1,b	;volatile
 17782  012364  D002               	goto	i2l8876
 17783  012366                     i2l387:
 17784                           
 17785                           ; BSR set to: 15
 17786                           ;inc\CANlib.h: 355: else
 17787                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 17788  012366  010F               	movlb	15	; () banked
 17789  012368  9340               	bcf	64,1,b	;volatile
 17790  01236A                     i2l8876:
 17791                           
 17792                           ; BSR set to: 15
 17793                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 17794  01236A  C040  FFD9         	movff	i2CANsendMessage@data,fsr2l
 17795  01236E  C041  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 17796  012372  50DF               	movf	indf2,w,c
 17797  012374  010F               	movlb	15	; () banked
 17798  012376  6F46               	movwf	70,b	;volatile
 17799                           
 17800                           ; BSR set to: 15
 17801                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 17802  012378  EE20 F001          	lfsr	2,1
 17803  01237C  5040               	movf	i2CANsendMessage@data,w,c
 17804  01237E  26D9               	addwf	fsr2l,f,c
 17805  012380  5041               	movf	i2CANsendMessage@data+1,w,c
 17806  012382  22DA               	addwfc	fsr2h,f,c
 17807  012384  50DF               	movf	indf2,w,c
 17808  012386  010F               	movlb	15	; () banked
 17809  012388  6F47               	movwf	71,b	;volatile
 17810                           
 17811                           ; BSR set to: 15
 17812                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 17813  01238A  EE20 F002          	lfsr	2,2
 17814  01238E  5040               	movf	i2CANsendMessage@data,w,c
 17815  012390  26D9               	addwf	fsr2l,f,c
 17816  012392  5041               	movf	i2CANsendMessage@data+1,w,c
 17817  012394  22DA               	addwfc	fsr2h,f,c
 17818  012396  50DF               	movf	indf2,w,c
 17819  012398  010F               	movlb	15	; () banked
 17820  01239A  6F48               	movwf	72,b	;volatile
 17821                           
 17822                           ; BSR set to: 15
 17823                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 17824  01239C  EE20 F003          	lfsr	2,3
 17825  0123A0  5040               	movf	i2CANsendMessage@data,w,c
 17826  0123A2  26D9               	addwf	fsr2l,f,c
 17827  0123A4  5041               	movf	i2CANsendMessage@data+1,w,c
 17828  0123A6  22DA               	addwfc	fsr2h,f,c
 17829  0123A8  50DF               	movf	indf2,w,c
 17830  0123AA  010F               	movlb	15	; () banked
 17831  0123AC  6F49               	movwf	73,b	;volatile
 17832                           
 17833                           ; BSR set to: 15
 17834                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 17835  0123AE  EE20 F004          	lfsr	2,4
 17836  0123B2  5040               	movf	i2CANsendMessage@data,w,c
 17837  0123B4  26D9               	addwf	fsr2l,f,c
 17838  0123B6  5041               	movf	i2CANsendMessage@data+1,w,c
 17839  0123B8  22DA               	addwfc	fsr2h,f,c
 17840  0123BA  50DF               	movf	indf2,w,c
 17841  0123BC  010F               	movlb	15	; () banked
 17842  0123BE  6F4A               	movwf	74,b	;volatile
 17843                           
 17844                           ; BSR set to: 15
 17845                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17846  0123C0  EE20 F005          	lfsr	2,5
 17847  0123C4  5040               	movf	i2CANsendMessage@data,w,c
 17848  0123C6  26D9               	addwf	fsr2l,f,c
 17849  0123C8  5041               	movf	i2CANsendMessage@data+1,w,c
 17850  0123CA  22DA               	addwfc	fsr2h,f,c
 17851  0123CC  50DF               	movf	indf2,w,c
 17852  0123CE  010F               	movlb	15	; () banked
 17853  0123D0  6F4B               	movwf	75,b	;volatile
 17854                           
 17855                           ; BSR set to: 15
 17856                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17857  0123D2  EE20 F006          	lfsr	2,6
 17858  0123D6  5040               	movf	i2CANsendMessage@data,w,c
 17859  0123D8  26D9               	addwf	fsr2l,f,c
 17860  0123DA  5041               	movf	i2CANsendMessage@data+1,w,c
 17861  0123DC  22DA               	addwfc	fsr2h,f,c
 17862  0123DE  50DF               	movf	indf2,w,c
 17863  0123E0  010F               	movlb	15	; () banked
 17864  0123E2  6F4C               	movwf	76,b	;volatile
 17865                           
 17866                           ; BSR set to: 15
 17867                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17868  0123E4  EE20 F007          	lfsr	2,7
 17869  0123E8  5040               	movf	i2CANsendMessage@data,w,c
 17870  0123EA  26D9               	addwf	fsr2l,f,c
 17871  0123EC  5041               	movf	i2CANsendMessage@data+1,w,c
 17872  0123EE  22DA               	addwfc	fsr2h,f,c
 17873  0123F0  50DF               	movf	indf2,w,c
 17874  0123F2  010F               	movlb	15	; () banked
 17875  0123F4  6F4D               	movwf	77,b	;volatile
 17876                           
 17877                           ; BSR set to: 15
 17878                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17879  0123F6  010F               	movlb	15	; () banked
 17880  0123F8  8740               	bsf	64,3,b	;volatile
 17881                           
 17882                           ; BSR set to: 15
 17883                           ;inc\CANlib.h: 368: return;
 17884  0123FA  0012               	return	
 17885  0123FC                     i2l375:
 17886                           
 17887                           ; BSR set to: 15
 17888                           ;inc\CANlib.h: 369: }
 17889                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17890  0123FC  010F               	movlb	15	; () banked
 17891  0123FE  B730               	btfsc	48,3,b	;volatile
 17892  012400  D115               	goto	i2l390
 17893                           
 17894                           ; BSR set to: 15
 17895                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17896  012402  C042  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 17897                           
 17898                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17899  012406  AC43               	btfss	i2CANsendMessage@flags,6,c
 17900  012408  D003               	goto	i2l391
 17901                           
 17902                           ; BSR set to: 15
 17903                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17904  01240A  010F               	movlb	15	; () banked
 17905  01240C  8D35               	bsf	53,6,b	;volatile
 17906  01240E  D002               	goto	i2l392
 17907  012410                     i2l391:
 17908                           
 17909                           ; BSR set to: 15
 17910                           ;inc\CANlib.h: 378: else
 17911                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17912  012410  010F               	movlb	15	; () banked
 17913  012412  9D35               	bcf	53,6,b	;volatile
 17914  012414                     i2l392:
 17915                           
 17916                           ; BSR set to: 15
 17917                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 17918  012414  A643               	btfss	i2CANsendMessage@flags,3,c
 17919  012416  D066               	goto	i2l393
 17920                           
 17921                           ; BSR set to: 15
 17922                           ;inc\CANlib.h: 382: {
 17923                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 17924  012418  503C               	movf	i2CANsendMessage@identifier,w,c
 17925  01241A  6E48               	movwf	i2CANsendMessage@tamp,c
 17926  01241C  6A49               	clrf	i2CANsendMessage@tamp+1,c
 17927  01241E  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 17928  012420  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 17929                           
 17930                           ; BSR set to: 15
 17931                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 17932  012422  C048  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 17933                           
 17934                           ; BSR set to: 15
 17935                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 17936  012426  0E00               	movlw	0
 17937  012428  143C               	andwf	i2CANsendMessage@identifier,w,c
 17938  01242A  6E48               	movwf	i2CANsendMessage@tamp,c
 17939  01242C  0EFF               	movlw	255
 17940  01242E  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 17941  012430  6E49               	movwf	i2CANsendMessage@tamp+1,c
 17942  012432  0E00               	movlw	0
 17943  012434  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 17944  012436  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 17945  012438  0E00               	movlw	0
 17946  01243A  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 17947  01243C  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 17948                           
 17949                           ; BSR set to: 15
 17950                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 17951  01243E  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17952  012442  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17953  012446  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17954  01244A  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17955  01244E  C045  F044         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 17956  012452  C046  F045         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 17957  012456  C047  F046         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 17958  01245A  6A47               	clrf	??i2_CANsendMessage+3,c
 17959  01245C  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17960  012460  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17961  012464  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17962  012468  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17963                           
 17964                           ; BSR set to: 15
 17965                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 17966  01246C  C048  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 17967                           
 17968                           ; BSR set to: 15
 17969                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 17970  012470  0E00               	movlw	0
 17971  012472  010F               	movlb	15	; () banked
 17972  012474  6F32               	movwf	50,b	;volatile
 17973                           
 17974                           ; BSR set to: 15
 17975                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 17976  012476  010F               	movlb	15	; () banked
 17977  012478  8732               	bsf	50,3,b	;volatile
 17978                           
 17979                           ; BSR set to: 15
 17980                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 17981  01247A  A03E               	btfss	i2CANsendMessage@identifier+2,0,c
 17982  01247C  D002               	goto	i2l394
 17983                           
 17984                           ; BSR set to: 15
 17985                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 17986  01247E  010F               	movlb	15	; () banked
 17987  012480  8132               	bsf	50,0,b	;volatile
 17988  012482                     i2l394:
 17989                           
 17990                           ; BSR set to: 15
 17991                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 17992  012482  A23E               	btfss	i2CANsendMessage@identifier+2,1,c
 17993  012484  D002               	goto	i2l395
 17994                           
 17995                           ; BSR set to: 15
 17996                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 17997  012486  010F               	movlb	15	; () banked
 17998  012488  8332               	bsf	50,1,b	;volatile
 17999  01248A                     i2l395:
 18000                           
 18001                           ; BSR set to: 15
 18002                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 18003  01248A  A43E               	btfss	i2CANsendMessage@identifier+2,2,c
 18004  01248C  D002               	goto	i2l396
 18005                           
 18006                           ; BSR set to: 15
 18007                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 18008  01248E  010F               	movlb	15	; () banked
 18009  012490  8B32               	bsf	50,5,b	;volatile
 18010  012492                     i2l396:
 18011                           
 18012                           ; BSR set to: 15
 18013                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 18014  012492  A63E               	btfss	i2CANsendMessage@identifier+2,3,c
 18015  012494  D002               	goto	i2l397
 18016                           
 18017                           ; BSR set to: 15
 18018                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 18019  012496  010F               	movlb	15	; () banked
 18020  012498  8D32               	bsf	50,6,b	;volatile
 18021  01249A                     i2l397:
 18022                           
 18023                           ; BSR set to: 15
 18024                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 18025  01249A  A83E               	btfss	i2CANsendMessage@identifier+2,4,c
 18026  01249C  D002               	goto	i2l8926
 18027                           
 18028                           ; BSR set to: 15
 18029                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 18030  01249E  010F               	movlb	15	; () banked
 18031  0124A0  8F32               	bsf	50,7,b	;volatile
 18032  0124A2                     i2l8926:
 18033                           
 18034                           ; BSR set to: 15
 18035                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 18036  0124A2  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18037  0124A6  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18038  0124AA  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18039  0124AE  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18040  0124B2  0E16               	movlw	22
 18041  0124B4  D005               	goto	i2u1183_40
 18042  0124B6                     i2u1183_45:
 18043  0124B6  90D8               	bcf	status,0,c
 18044  0124B8  3247               	rrcf	??i2_CANsendMessage+3,f,c
 18045  0124BA  3246               	rrcf	??i2_CANsendMessage+2,f,c
 18046  0124BC  3245               	rrcf	??i2_CANsendMessage+1,f,c
 18047  0124BE  3244               	rrcf	??i2_CANsendMessage,f,c
 18048  0124C0                     i2u1183_40:
 18049  0124C0  2EE8               	decfsz	wreg,f,c
 18050  0124C2  D7F9               	goto	i2u1183_45
 18051  0124C4  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18052  0124C8  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18053  0124CC  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18054  0124D0  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18055                           
 18056                           ; BSR set to: 15
 18057                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 18058  0124D4  5048               	movf	i2CANsendMessage@tamp,w,c
 18059  0124D6  6E48               	movwf	i2CANsendMessage@tamp,c
 18060  0124D8  6A49               	clrf	i2CANsendMessage@tamp+1,c
 18061  0124DA  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 18062  0124DC  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 18063                           
 18064                           ; BSR set to: 15
 18065                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 18066  0124DE  C048  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 18067                           
 18068                           ;inc\CANlib.h: 407: }
 18069  0124E2  D04D               	goto	i2l8946
 18070  0124E4                     i2l393:
 18071                           
 18072                           ; BSR set to: 15
 18073                           ;inc\CANlib.h: 409: else
 18074                           ;inc\CANlib.h: 411: {
 18075                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 18076  0124E4  010F               	movlb	15	; () banked
 18077  0124E6  9732               	bcf	50,3,b	;volatile
 18078                           
 18079                           ; BSR set to: 15
 18080                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 18081  0124E8  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18082  0124EC  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18083  0124F0  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18084  0124F4  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18085  0124F8  0E04               	movlw	4
 18086  0124FA  D005               	goto	i2u1184_40
 18087  0124FC                     i2u1184_45:
 18088  0124FC  90D8               	bcf	status,0,c
 18089  0124FE  3247               	rrcf	??i2_CANsendMessage+3,f,c
 18090  012500  3246               	rrcf	??i2_CANsendMessage+2,f,c
 18091  012502  3245               	rrcf	??i2_CANsendMessage+1,f,c
 18092  012504  3244               	rrcf	??i2_CANsendMessage,f,c
 18093  012506                     i2u1184_40:
 18094  012506  2EE8               	decfsz	wreg,f,c
 18095  012508  D7F9               	goto	i2u1184_45
 18096  01250A  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18097  01250E  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18098  012512  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18099  012516  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18100                           
 18101                           ; BSR set to: 15
 18102                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 18103  01251A  5048               	movf	i2CANsendMessage@tamp,w,c
 18104  01251C  6E48               	movwf	i2CANsendMessage@tamp,c
 18105  01251E  6A49               	clrf	i2CANsendMessage@tamp+1,c
 18106  012520  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 18107  012522  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 18108                           
 18109                           ; BSR set to: 15
 18110                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 18111  012524  C048  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 18112                           
 18113                           ; BSR set to: 15
 18114                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 18115  012528  0E07               	movlw	7
 18116  01252A  143C               	andwf	i2CANsendMessage@identifier,w,c
 18117  01252C  6E48               	movwf	i2CANsendMessage@tamp,c
 18118  01252E  0E00               	movlw	0
 18119  012530  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 18120  012532  6E49               	movwf	i2CANsendMessage@tamp+1,c
 18121  012534  0E00               	movlw	0
 18122  012536  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 18123  012538  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 18124  01253A  0E00               	movlw	0
 18125  01253C  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 18126  01253E  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 18127                           
 18128                           ; BSR set to: 15
 18129                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 18130  012540  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18131  012544  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18132  012548  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18133  01254C  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18134  012550  0E05               	movlw	5
 18135  012552                     i2u1185_45:
 18136  012552  90D8               	bcf	status,0,c
 18137  012554  3644               	rlcf	??i2_CANsendMessage,f,c
 18138  012556  3645               	rlcf	??i2_CANsendMessage+1,f,c
 18139  012558  3646               	rlcf	??i2_CANsendMessage+2,f,c
 18140  01255A  3647               	rlcf	??i2_CANsendMessage+3,f,c
 18141  01255C  2EE8               	decfsz	wreg,f,c
 18142  01255E  D7F9               	goto	i2u1185_45
 18143  012560  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18144  012564  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18145  012568  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18146  01256C  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18147                           
 18148                           ; BSR set to: 15
 18149                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 18150  012570  010F               	movlb	15	; () banked
 18151  012572  5132               	movf	50,w,b	;volatile
 18152  012574  0B1F               	andlw	31
 18153  012576  010F               	movlb	15	; () banked
 18154  012578  6F32               	movwf	50,b	;volatile
 18155                           
 18156                           ; BSR set to: 15
 18157                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 18158  01257A  C048  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 18159  01257E                     i2l8946:
 18160                           
 18161                           ; BSR set to: 15
 18162                           ;inc\CANlib.h: 422: }
 18163                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 18164  01257E  A043               	btfss	i2CANsendMessage@flags,0,c
 18165  012580  D003               	goto	i2l400
 18166                           
 18167                           ; BSR set to: 15
 18168                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 18169  012582  010F               	movlb	15	; () banked
 18170  012584  8130               	bsf	48,0,b	;volatile
 18171  012586  D002               	goto	i2l401
 18172  012588                     i2l400:
 18173                           
 18174                           ; BSR set to: 15
 18175                           ;inc\CANlib.h: 426: else
 18176                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 18177  012588  010F               	movlb	15	; () banked
 18178  01258A  9130               	bcf	48,0,b	;volatile
 18179  01258C                     i2l401:
 18180                           
 18181                           ; BSR set to: 15
 18182                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 18183  01258C  A243               	btfss	i2CANsendMessage@flags,1,c
 18184  01258E  D003               	goto	i2l402
 18185                           
 18186                           ; BSR set to: 15
 18187                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 18188  012590  010F               	movlb	15	; () banked
 18189  012592  8330               	bsf	48,1,b	;volatile
 18190  012594  D002               	goto	i2l8952
 18191  012596                     i2l402:
 18192                           
 18193                           ; BSR set to: 15
 18194                           ;inc\CANlib.h: 430: else
 18195                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 18196  012596  010F               	movlb	15	; () banked
 18197  012598  9330               	bcf	48,1,b	;volatile
 18198  01259A                     i2l8952:
 18199                           
 18200                           ; BSR set to: 15
 18201                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 18202  01259A  C040  FFD9         	movff	i2CANsendMessage@data,fsr2l
 18203  01259E  C041  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 18204  0125A2  50DF               	movf	indf2,w,c
 18205  0125A4  010F               	movlb	15	; () banked
 18206  0125A6  6F36               	movwf	54,b	;volatile
 18207                           
 18208                           ; BSR set to: 15
 18209                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 18210  0125A8  EE20 F001          	lfsr	2,1
 18211  0125AC  5040               	movf	i2CANsendMessage@data,w,c
 18212  0125AE  26D9               	addwf	fsr2l,f,c
 18213  0125B0  5041               	movf	i2CANsendMessage@data+1,w,c
 18214  0125B2  22DA               	addwfc	fsr2h,f,c
 18215  0125B4  50DF               	movf	indf2,w,c
 18216  0125B6  010F               	movlb	15	; () banked
 18217  0125B8  6F37               	movwf	55,b	;volatile
 18218                           
 18219                           ; BSR set to: 15
 18220                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 18221  0125BA  EE20 F002          	lfsr	2,2
 18222  0125BE  5040               	movf	i2CANsendMessage@data,w,c
 18223  0125C0  26D9               	addwf	fsr2l,f,c
 18224  0125C2  5041               	movf	i2CANsendMessage@data+1,w,c
 18225  0125C4  22DA               	addwfc	fsr2h,f,c
 18226  0125C6  50DF               	movf	indf2,w,c
 18227  0125C8  010F               	movlb	15	; () banked
 18228  0125CA  6F38               	movwf	56,b	;volatile
 18229                           
 18230                           ; BSR set to: 15
 18231                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 18232  0125CC  EE20 F003          	lfsr	2,3
 18233  0125D0  5040               	movf	i2CANsendMessage@data,w,c
 18234  0125D2  26D9               	addwf	fsr2l,f,c
 18235  0125D4  5041               	movf	i2CANsendMessage@data+1,w,c
 18236  0125D6  22DA               	addwfc	fsr2h,f,c
 18237  0125D8  50DF               	movf	indf2,w,c
 18238  0125DA  010F               	movlb	15	; () banked
 18239  0125DC  6F39               	movwf	57,b	;volatile
 18240                           
 18241                           ; BSR set to: 15
 18242                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 18243  0125DE  EE20 F004          	lfsr	2,4
 18244  0125E2  5040               	movf	i2CANsendMessage@data,w,c
 18245  0125E4  26D9               	addwf	fsr2l,f,c
 18246  0125E6  5041               	movf	i2CANsendMessage@data+1,w,c
 18247  0125E8  22DA               	addwfc	fsr2h,f,c
 18248  0125EA  50DF               	movf	indf2,w,c
 18249  0125EC  010F               	movlb	15	; () banked
 18250  0125EE  6F3A               	movwf	58,b	;volatile
 18251                           
 18252                           ; BSR set to: 15
 18253                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 18254  0125F0  EE20 F005          	lfsr	2,5
 18255  0125F4  5040               	movf	i2CANsendMessage@data,w,c
 18256  0125F6  26D9               	addwf	fsr2l,f,c
 18257  0125F8  5041               	movf	i2CANsendMessage@data+1,w,c
 18258  0125FA  22DA               	addwfc	fsr2h,f,c
 18259  0125FC  50DF               	movf	indf2,w,c
 18260  0125FE  010F               	movlb	15	; () banked
 18261  012600  6F3B               	movwf	59,b	;volatile
 18262                           
 18263                           ; BSR set to: 15
 18264                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 18265  012602  EE20 F006          	lfsr	2,6
 18266  012606  5040               	movf	i2CANsendMessage@data,w,c
 18267  012608  26D9               	addwf	fsr2l,f,c
 18268  01260A  5041               	movf	i2CANsendMessage@data+1,w,c
 18269  01260C  22DA               	addwfc	fsr2h,f,c
 18270  01260E  50DF               	movf	indf2,w,c
 18271  012610  010F               	movlb	15	; () banked
 18272  012612  6F3C               	movwf	60,b	;volatile
 18273                           
 18274                           ; BSR set to: 15
 18275                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 18276  012614  EE20 F007          	lfsr	2,7
 18277  012618  5040               	movf	i2CANsendMessage@data,w,c
 18278  01261A  26D9               	addwf	fsr2l,f,c
 18279  01261C  5041               	movf	i2CANsendMessage@data+1,w,c
 18280  01261E  22DA               	addwfc	fsr2h,f,c
 18281  012620  50DF               	movf	indf2,w,c
 18282  012622  010F               	movlb	15	; () banked
 18283  012624  6F3D               	movwf	61,b	;volatile
 18284                           
 18285                           ; BSR set to: 15
 18286                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 18287  012626  010F               	movlb	15	; () banked
 18288  012628  8730               	bsf	48,3,b	;volatile
 18289                           
 18290                           ; BSR set to: 15
 18291                           ;inc\CANlib.h: 444: return;
 18292  01262A  0012               	return	
 18293  01262C                     i2l390:
 18294                           
 18295                           ; BSR set to: 15
 18296                           ;inc\CANlib.h: 445: }
 18297                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 18298  01262C  010F               	movlb	15	; () banked
 18299  01262E  B720               	btfsc	32,3,b	;volatile
 18300  012630  0012               	return	
 18301                           
 18302                           ; BSR set to: 15
 18303                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 18304  012632  C042  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 18305                           
 18306                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 18307  012636  AC43               	btfss	i2CANsendMessage@flags,6,c
 18308  012638  D003               	goto	i2l405
 18309                           
 18310                           ; BSR set to: 15
 18311                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 18312  01263A  010F               	movlb	15	; () banked
 18313  01263C  8D25               	bsf	37,6,b	;volatile
 18314  01263E  D002               	goto	i2l406
 18315  012640                     i2l405:
 18316                           
 18317                           ; BSR set to: 15
 18318                           ;inc\CANlib.h: 454: else
 18319                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 18320  012640  010F               	movlb	15	; () banked
 18321  012642  9D25               	bcf	37,6,b	;volatile
 18322  012644                     i2l406:
 18323                           
 18324                           ; BSR set to: 15
 18325                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 18326  012644  A643               	btfss	i2CANsendMessage@flags,3,c
 18327  012646  D066               	goto	i2l407
 18328                           
 18329                           ; BSR set to: 15
 18330                           ;inc\CANlib.h: 458: {
 18331                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 18332  012648  503C               	movf	i2CANsendMessage@identifier,w,c
 18333  01264A  6E48               	movwf	i2CANsendMessage@tamp,c
 18334  01264C  6A49               	clrf	i2CANsendMessage@tamp+1,c
 18335  01264E  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 18336  012650  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 18337                           
 18338                           ; BSR set to: 15
 18339                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 18340  012652  C048  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 18341                           
 18342                           ; BSR set to: 15
 18343                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 18344  012656  0E00               	movlw	0
 18345  012658  143C               	andwf	i2CANsendMessage@identifier,w,c
 18346  01265A  6E48               	movwf	i2CANsendMessage@tamp,c
 18347  01265C  0EFF               	movlw	255
 18348  01265E  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 18349  012660  6E49               	movwf	i2CANsendMessage@tamp+1,c
 18350  012662  0E00               	movlw	0
 18351  012664  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 18352  012666  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 18353  012668  0E00               	movlw	0
 18354  01266A  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 18355  01266C  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 18356                           
 18357                           ; BSR set to: 15
 18358                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 18359  01266E  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18360  012672  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18361  012676  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18362  01267A  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18363  01267E  C045  F044         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 18364  012682  C046  F045         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 18365  012686  C047  F046         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 18366  01268A  6A47               	clrf	??i2_CANsendMessage+3,c
 18367  01268C  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18368  012690  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18369  012694  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18370  012698  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18371                           
 18372                           ; BSR set to: 15
 18373                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 18374  01269C  C048  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 18375                           
 18376                           ; BSR set to: 15
 18377                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 18378  0126A0  0E00               	movlw	0
 18379  0126A2  010F               	movlb	15	; () banked
 18380  0126A4  6F22               	movwf	34,b	;volatile
 18381                           
 18382                           ; BSR set to: 15
 18383                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 18384  0126A6  010F               	movlb	15	; () banked
 18385  0126A8  8722               	bsf	34,3,b	;volatile
 18386                           
 18387                           ; BSR set to: 15
 18388                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 18389  0126AA  A03E               	btfss	i2CANsendMessage@identifier+2,0,c
 18390  0126AC  D002               	goto	i2l408
 18391                           
 18392                           ; BSR set to: 15
 18393                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 18394  0126AE  010F               	movlb	15	; () banked
 18395  0126B0  8122               	bsf	34,0,b	;volatile
 18396  0126B2                     i2l408:
 18397                           
 18398                           ; BSR set to: 15
 18399                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 18400  0126B2  A23E               	btfss	i2CANsendMessage@identifier+2,1,c
 18401  0126B4  D002               	goto	i2l409
 18402                           
 18403                           ; BSR set to: 15
 18404                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 18405  0126B6  010F               	movlb	15	; () banked
 18406  0126B8  8322               	bsf	34,1,b	;volatile
 18407  0126BA                     i2l409:
 18408                           
 18409                           ; BSR set to: 15
 18410                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 18411  0126BA  A43E               	btfss	i2CANsendMessage@identifier+2,2,c
 18412  0126BC  D002               	goto	i2l410
 18413                           
 18414                           ; BSR set to: 15
 18415                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 18416  0126BE  010F               	movlb	15	; () banked
 18417  0126C0  8B22               	bsf	34,5,b	;volatile
 18418  0126C2                     i2l410:
 18419                           
 18420                           ; BSR set to: 15
 18421                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 18422  0126C2  A63E               	btfss	i2CANsendMessage@identifier+2,3,c
 18423  0126C4  D002               	goto	i2l411
 18424                           
 18425                           ; BSR set to: 15
 18426                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 18427  0126C6  010F               	movlb	15	; () banked
 18428  0126C8  8D22               	bsf	34,6,b	;volatile
 18429  0126CA                     i2l411:
 18430                           
 18431                           ; BSR set to: 15
 18432                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 18433  0126CA  A83E               	btfss	i2CANsendMessage@identifier+2,4,c
 18434  0126CC  D002               	goto	i2l9002
 18435                           
 18436                           ; BSR set to: 15
 18437                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 18438  0126CE  010F               	movlb	15	; () banked
 18439  0126D0  8F22               	bsf	34,7,b	;volatile
 18440  0126D2                     i2l9002:
 18441                           
 18442                           ; BSR set to: 15
 18443                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 18444  0126D2  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18445  0126D6  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18446  0126DA  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18447  0126DE  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18448  0126E2  0E16               	movlw	22
 18449  0126E4  D005               	goto	i2u1196_40
 18450  0126E6                     i2u1196_45:
 18451  0126E6  90D8               	bcf	status,0,c
 18452  0126E8  3247               	rrcf	??i2_CANsendMessage+3,f,c
 18453  0126EA  3246               	rrcf	??i2_CANsendMessage+2,f,c
 18454  0126EC  3245               	rrcf	??i2_CANsendMessage+1,f,c
 18455  0126EE  3244               	rrcf	??i2_CANsendMessage,f,c
 18456  0126F0                     i2u1196_40:
 18457  0126F0  2EE8               	decfsz	wreg,f,c
 18458  0126F2  D7F9               	goto	i2u1196_45
 18459  0126F4  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18460  0126F8  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18461  0126FC  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18462  012700  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18463                           
 18464                           ; BSR set to: 15
 18465                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 18466  012704  5048               	movf	i2CANsendMessage@tamp,w,c
 18467  012706  6E48               	movwf	i2CANsendMessage@tamp,c
 18468  012708  6A49               	clrf	i2CANsendMessage@tamp+1,c
 18469  01270A  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 18470  01270C  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 18471                           
 18472                           ; BSR set to: 15
 18473                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 18474  01270E  C048  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 18475                           
 18476                           ;inc\CANlib.h: 483: }
 18477  012712  D04D               	goto	i2l9022
 18478  012714                     i2l407:
 18479                           
 18480                           ; BSR set to: 15
 18481                           ;inc\CANlib.h: 485: else
 18482                           ;inc\CANlib.h: 487: {
 18483                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 18484  012714  010F               	movlb	15	; () banked
 18485  012716  9722               	bcf	34,3,b	;volatile
 18486                           
 18487                           ; BSR set to: 15
 18488                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 18489  012718  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18490  01271C  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18491  012720  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18492  012724  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18493  012728  0E04               	movlw	4
 18494  01272A  D005               	goto	i2u1197_40
 18495  01272C                     i2u1197_45:
 18496  01272C  90D8               	bcf	status,0,c
 18497  01272E  3247               	rrcf	??i2_CANsendMessage+3,f,c
 18498  012730  3246               	rrcf	??i2_CANsendMessage+2,f,c
 18499  012732  3245               	rrcf	??i2_CANsendMessage+1,f,c
 18500  012734  3244               	rrcf	??i2_CANsendMessage,f,c
 18501  012736                     i2u1197_40:
 18502  012736  2EE8               	decfsz	wreg,f,c
 18503  012738  D7F9               	goto	i2u1197_45
 18504  01273A  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18505  01273E  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18506  012742  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18507  012746  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18508                           
 18509                           ; BSR set to: 15
 18510                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 18511  01274A  5048               	movf	i2CANsendMessage@tamp,w,c
 18512  01274C  6E48               	movwf	i2CANsendMessage@tamp,c
 18513  01274E  6A49               	clrf	i2CANsendMessage@tamp+1,c
 18514  012750  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 18515  012752  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 18516                           
 18517                           ; BSR set to: 15
 18518                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 18519  012754  C048  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 18520                           
 18521                           ; BSR set to: 15
 18522                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 18523  012758  0E07               	movlw	7
 18524  01275A  143C               	andwf	i2CANsendMessage@identifier,w,c
 18525  01275C  6E48               	movwf	i2CANsendMessage@tamp,c
 18526  01275E  0E00               	movlw	0
 18527  012760  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 18528  012762  6E49               	movwf	i2CANsendMessage@tamp+1,c
 18529  012764  0E00               	movlw	0
 18530  012766  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 18531  012768  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 18532  01276A  0E00               	movlw	0
 18533  01276C  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 18534  01276E  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 18535                           
 18536                           ; BSR set to: 15
 18537                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 18538  012770  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18539  012774  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18540  012778  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18541  01277C  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18542  012780  0E05               	movlw	5
 18543  012782                     i2u1198_45:
 18544  012782  90D8               	bcf	status,0,c
 18545  012784  3644               	rlcf	??i2_CANsendMessage,f,c
 18546  012786  3645               	rlcf	??i2_CANsendMessage+1,f,c
 18547  012788  3646               	rlcf	??i2_CANsendMessage+2,f,c
 18548  01278A  3647               	rlcf	??i2_CANsendMessage+3,f,c
 18549  01278C  2EE8               	decfsz	wreg,f,c
 18550  01278E  D7F9               	goto	i2u1198_45
 18551  012790  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18552  012794  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18553  012798  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18554  01279C  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18555                           
 18556                           ; BSR set to: 15
 18557                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 18558  0127A0  010F               	movlb	15	; () banked
 18559  0127A2  5122               	movf	34,w,b	;volatile
 18560  0127A4  0B1F               	andlw	31
 18561  0127A6  010F               	movlb	15	; () banked
 18562  0127A8  6F22               	movwf	34,b	;volatile
 18563                           
 18564                           ; BSR set to: 15
 18565                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18566  0127AA  C048  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 18567  0127AE                     i2l9022:
 18568                           
 18569                           ; BSR set to: 15
 18570                           ;inc\CANlib.h: 498: }
 18571                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18572  0127AE  A043               	btfss	i2CANsendMessage@flags,0,c
 18573  0127B0  D003               	goto	i2l414
 18574                           
 18575                           ; BSR set to: 15
 18576                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18577  0127B2  010F               	movlb	15	; () banked
 18578  0127B4  8120               	bsf	32,0,b	;volatile
 18579  0127B6  D002               	goto	i2l415
 18580  0127B8                     i2l414:
 18581                           
 18582                           ; BSR set to: 15
 18583                           ;inc\CANlib.h: 502: else
 18584                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18585  0127B8  010F               	movlb	15	; () banked
 18586  0127BA  9120               	bcf	32,0,b	;volatile
 18587  0127BC                     i2l415:
 18588                           
 18589                           ; BSR set to: 15
 18590                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18591  0127BC  A243               	btfss	i2CANsendMessage@flags,1,c
 18592  0127BE  D003               	goto	i2l416
 18593                           
 18594                           ; BSR set to: 15
 18595                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18596  0127C0  010F               	movlb	15	; () banked
 18597  0127C2  8320               	bsf	32,1,b	;volatile
 18598  0127C4  D002               	goto	i2l9028
 18599  0127C6                     i2l416:
 18600                           
 18601                           ; BSR set to: 15
 18602                           ;inc\CANlib.h: 506: else
 18603                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18604  0127C6  010F               	movlb	15	; () banked
 18605  0127C8  9320               	bcf	32,1,b	;volatile
 18606  0127CA                     i2l9028:
 18607                           
 18608                           ; BSR set to: 15
 18609                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18610  0127CA  C040  FFD9         	movff	i2CANsendMessage@data,fsr2l
 18611  0127CE  C041  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 18612  0127D2  50DF               	movf	indf2,w,c
 18613  0127D4  010F               	movlb	15	; () banked
 18614  0127D6  6F26               	movwf	38,b	;volatile
 18615                           
 18616                           ; BSR set to: 15
 18617                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18618  0127D8  EE20 F001          	lfsr	2,1
 18619  0127DC  5040               	movf	i2CANsendMessage@data,w,c
 18620  0127DE  26D9               	addwf	fsr2l,f,c
 18621  0127E0  5041               	movf	i2CANsendMessage@data+1,w,c
 18622  0127E2  22DA               	addwfc	fsr2h,f,c
 18623  0127E4  50DF               	movf	indf2,w,c
 18624  0127E6  010F               	movlb	15	; () banked
 18625  0127E8  6F27               	movwf	39,b	;volatile
 18626                           
 18627                           ; BSR set to: 15
 18628                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18629  0127EA  EE20 F002          	lfsr	2,2
 18630  0127EE  5040               	movf	i2CANsendMessage@data,w,c
 18631  0127F0  26D9               	addwf	fsr2l,f,c
 18632  0127F2  5041               	movf	i2CANsendMessage@data+1,w,c
 18633  0127F4  22DA               	addwfc	fsr2h,f,c
 18634  0127F6  50DF               	movf	indf2,w,c
 18635  0127F8  010F               	movlb	15	; () banked
 18636  0127FA  6F28               	movwf	40,b	;volatile
 18637                           
 18638                           ; BSR set to: 15
 18639                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18640  0127FC  EE20 F003          	lfsr	2,3
 18641  012800  5040               	movf	i2CANsendMessage@data,w,c
 18642  012802  26D9               	addwf	fsr2l,f,c
 18643  012804  5041               	movf	i2CANsendMessage@data+1,w,c
 18644  012806  22DA               	addwfc	fsr2h,f,c
 18645  012808  50DF               	movf	indf2,w,c
 18646  01280A  010F               	movlb	15	; () banked
 18647  01280C  6F29               	movwf	41,b	;volatile
 18648                           
 18649                           ; BSR set to: 15
 18650                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18651  01280E  EE20 F004          	lfsr	2,4
 18652  012812  5040               	movf	i2CANsendMessage@data,w,c
 18653  012814  26D9               	addwf	fsr2l,f,c
 18654  012816  5041               	movf	i2CANsendMessage@data+1,w,c
 18655  012818  22DA               	addwfc	fsr2h,f,c
 18656  01281A  50DF               	movf	indf2,w,c
 18657  01281C  010F               	movlb	15	; () banked
 18658  01281E  6F2A               	movwf	42,b	;volatile
 18659                           
 18660                           ; BSR set to: 15
 18661                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18662  012820  EE20 F005          	lfsr	2,5
 18663  012824  5040               	movf	i2CANsendMessage@data,w,c
 18664  012826  26D9               	addwf	fsr2l,f,c
 18665  012828  5041               	movf	i2CANsendMessage@data+1,w,c
 18666  01282A  22DA               	addwfc	fsr2h,f,c
 18667  01282C  50DF               	movf	indf2,w,c
 18668  01282E  010F               	movlb	15	; () banked
 18669  012830  6F2B               	movwf	43,b	;volatile
 18670                           
 18671                           ; BSR set to: 15
 18672                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18673  012832  EE20 F006          	lfsr	2,6
 18674  012836  5040               	movf	i2CANsendMessage@data,w,c
 18675  012838  26D9               	addwf	fsr2l,f,c
 18676  01283A  5041               	movf	i2CANsendMessage@data+1,w,c
 18677  01283C  22DA               	addwfc	fsr2h,f,c
 18678  01283E  50DF               	movf	indf2,w,c
 18679  012840  010F               	movlb	15	; () banked
 18680  012842  6F2C               	movwf	44,b	;volatile
 18681                           
 18682                           ; BSR set to: 15
 18683                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18684  012844  EE20 F007          	lfsr	2,7
 18685  012848  5040               	movf	i2CANsendMessage@data,w,c
 18686  01284A  26D9               	addwf	fsr2l,f,c
 18687  01284C  5041               	movf	i2CANsendMessage@data+1,w,c
 18688  01284E  22DA               	addwfc	fsr2h,f,c
 18689  012850  50DF               	movf	indf2,w,c
 18690  012852  010F               	movlb	15	; () banked
 18691  012854  6F2D               	movwf	45,b	;volatile
 18692                           
 18693                           ; BSR set to: 15
 18694                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 18695  012856  010F               	movlb	15	; () banked
 18696  012858  8720               	bsf	32,3,b	;volatile
 18697                           
 18698                           ; BSR set to: 15
 18699                           ;inc\CANlib.h: 520: return;
 18700  01285A  0012               	return	
 18701  01285C                     __end_ofi2_CANsendMessage:
 18702                           	opt stack 0
 18703                           pclatu	equ	0xFFB
 18704                           pclath	equ	0xFFA
 18705                           tblptru	equ	0xFF8
 18706                           tblptrh	equ	0xFF7
 18707                           tblptrl	equ	0xFF6
 18708                           tablat	equ	0xFF5
 18709                           prodh	equ	0xFF4
 18710                           prodl	equ	0xFF3
 18711                           intcon	equ	0xFF2
 18712                           postinc0	equ	0xFEE
 18713                           fsr0h	equ	0xFEA
 18714                           fsr0l	equ	0xFE9
 18715                           wreg	equ	0xFE8
 18716                           indf1	equ	0xFE7
 18717                           fsr1h	equ	0xFE2
 18718                           fsr1l	equ	0xFE1
 18719                           bsr	equ	0xFE0
 18720                           indf2	equ	0xFDF
 18721                           postinc2	equ	0xFDE
 18722                           fsr2h	equ	0xFDA
 18723                           fsr2l	equ	0xFD9
 18724                           status	equ	0xFD8
 18725                           
 18726 ;; *************** function i2_CANisTxReady *****************
 18727 ;; Defined at:
 18728 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 18729 ;; Parameters:    Size  Location     Type
 18730 ;;		None
 18731 ;; Auto vars:     Size  Location     Type
 18732 ;;		None
 18733 ;; Return value:  Size  Location     Type
 18734 ;;                  1    wreg      unsigned char 
 18735 ;; Registers used:
 18736 ;;		wreg, status,2
 18737 ;; Tracked objects:
 18738 ;;		On entry : 0/0
 18739 ;;		On exit  : 0/0
 18740 ;;		Unchanged: 0/0
 18741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18745 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18746 ;;Total ram usage:        1 bytes
 18747 ;; Hardware stack levels used:    1
 18748 ;; This function calls:
 18749 ;;		Nothing
 18750 ;; This function is called by:
 18751 ;;		_ISR_alta
 18752 ;; This function uses a non-reentrant model
 18753 ;;
 18754                           
 18755                           	psect	text50
 18756  015DBE                     __ptext50:
 18757                           	opt stack 0
 18758  015DBE                     i2_CANisTxReady:
 18759                           	opt stack 21
 18760                           
 18761                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 18762                           
 18763                           ; BSR set to: 15
 18764                           ;incstack = 0
 18765  015DBE  0E01               	movlw	1
 18766  015DC0  6E3C               	movwf	i2_CANisTxReady$3235,c
 18767  015DC2  010F               	movlb	15	; () banked
 18768  015DC4  A740               	btfss	64,3,b	;volatile
 18769  015DC6  D008               	goto	i2l568
 18770                           
 18771                           ; BSR set to: 15
 18772  015DC8  010F               	movlb	15	; () banked
 18773  015DCA  A730               	btfss	48,3,b	;volatile
 18774  015DCC  D005               	goto	i2l568
 18775                           
 18776                           ; BSR set to: 15
 18777  015DCE  010F               	movlb	15	; () banked
 18778  015DD0  A720               	btfss	32,3,b	;volatile
 18779  015DD2  D002               	goto	i2l568
 18780                           
 18781                           ; BSR set to: 15
 18782  015DD4  0E00               	movlw	0
 18783  015DD6  6E3C               	movwf	i2_CANisTxReady$3235,c
 18784  015DD8                     i2l568:
 18785                           
 18786                           ; BSR set to: 15
 18787  015DD8  503C               	movf	i2_CANisTxReady$3235,w,c
 18788  015DDA  0012               	return	
 18789  015DDC                     __end_ofi2_CANisTxReady:
 18790                           	opt stack 0
 18791                           pclatu	equ	0xFFB
 18792                           pclath	equ	0xFFA
 18793                           tblptru	equ	0xFF8
 18794                           tblptrh	equ	0xFF7
 18795                           tblptrl	equ	0xFF6
 18796                           tablat	equ	0xFF5
 18797                           prodh	equ	0xFF4
 18798                           prodl	equ	0xFF3
 18799                           intcon	equ	0xFF2
 18800                           postinc0	equ	0xFEE
 18801                           fsr0h	equ	0xFEA
 18802                           fsr0l	equ	0xFE9
 18803                           wreg	equ	0xFE8
 18804                           indf1	equ	0xFE7
 18805                           fsr1h	equ	0xFE2
 18806                           fsr1l	equ	0xFE1
 18807                           bsr	equ	0xFE0
 18808                           indf2	equ	0xFDF
 18809                           postinc2	equ	0xFDE
 18810                           fsr2h	equ	0xFDA
 18811                           fsr2l	equ	0xFD9
 18812                           status	equ	0xFD8
 18813                           
 18814 ;; *************** function _CANreceiveMessage *****************
 18815 ;; Defined at:
 18816 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 18817 ;; Parameters:    Size  Location     Type
 18818 ;;  msg             2   17[COMRAM] PTR struct .
 18819 ;;		 -> msg(15), 
 18820 ;; Auto vars:     Size  Location     Type
 18821 ;;  tamp            1   28[COMRAM] unsigned char 
 18822 ;;  error           1   27[COMRAM] unsigned char 
 18823 ;; Return value:  Size  Location     Type
 18824 ;;                  1    wreg      unsigned char 
 18825 ;; Registers used:
 18826 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18827 ;; Tracked objects:
 18828 ;;		On entry : 0/0
 18829 ;;		On exit  : 0/0
 18830 ;;		Unchanged: 0/0
 18831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18833 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18834 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18835 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18836 ;;Total ram usage:       12 bytes
 18837 ;; Hardware stack levels used:    1
 18838 ;; This function calls:
 18839 ;;		Nothing
 18840 ;; This function is called by:
 18841 ;;		_ISR_alta
 18842 ;; This function uses a non-reentrant model
 18843 ;;
 18844                           
 18845                           	psect	text51
 18846  012D76                     __ptext51:
 18847                           	opt stack 0
 18848  012D76                     _CANreceiveMessage:
 18849                           	opt stack 21
 18850                           
 18851                           ;inc\CANlib.h: 530: BYTE tamp;
 18852                           ;inc\CANlib.h: 531: BYTE error = 0;
 18853                           
 18854                           ; BSR set to: 15
 18855                           ;incstack = 0
 18856  012D76  0E00               	movlw	0
 18857  012D78  6E46               	movwf	CANreceiveMessage@error,c
 18858                           
 18859                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 18860  012D7A  BE74               	btfsc	3956,7,c	;volatile
 18861                           
 18862                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 18863  012D7C  8046               	bsf	CANreceiveMessage@error,0,c
 18864                           
 18865                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 18866  012D7E  BC74               	btfsc	3956,6,c	;volatile
 18867                           
 18868                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 18869  012D80  8246               	bsf	CANreceiveMessage@error,1,c
 18870                           
 18871                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 18872  012D82  010F               	movlb	15	; () banked
 18873  012D84  AF50               	btfss	80,7,b	;volatile
 18874  012D86  D143               	goto	i2l422
 18875                           
 18876                           ; BSR set to: 15
 18877                           ;inc\CANlib.h: 541: {
 18878                           ;inc\CANlib.h: 542: msg->identifier = 0;
 18879  012D88  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18880  012D8C  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18881  012D90  6ADE               	clrf	postinc2,c
 18882  012D92  6ADE               	clrf	postinc2,c
 18883  012D94  6ADE               	clrf	postinc2,c
 18884  012D96  6ADD               	clrf	postdec2,c
 18885                           
 18886                           ; BSR set to: 15
 18887                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 18888  012D98  EE20 F004          	lfsr	2,4
 18889  012D9C  503C               	movf	CANreceiveMessage@msg,w,c
 18890  012D9E  26D9               	addwf	fsr2l,f,c
 18891  012DA0  503D               	movf	CANreceiveMessage@msg+1,w,c
 18892  012DA2  22DA               	addwfc	fsr2h,f,c
 18893  012DA4  CF56 FFDF          	movff	3926,indf2	;volatile
 18894                           
 18895                           ; BSR set to: 15
 18896                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 18897  012DA8  EE20 F005          	lfsr	2,5
 18898  012DAC  503C               	movf	CANreceiveMessage@msg,w,c
 18899  012DAE  26D9               	addwf	fsr2l,f,c
 18900  012DB0  503D               	movf	CANreceiveMessage@msg+1,w,c
 18901  012DB2  22DA               	addwfc	fsr2h,f,c
 18902  012DB4  CF57 FFDF          	movff	3927,indf2	;volatile
 18903                           
 18904                           ; BSR set to: 15
 18905                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 18906  012DB8  EE20 F006          	lfsr	2,6
 18907  012DBC  503C               	movf	CANreceiveMessage@msg,w,c
 18908  012DBE  26D9               	addwf	fsr2l,f,c
 18909  012DC0  503D               	movf	CANreceiveMessage@msg+1,w,c
 18910  012DC2  22DA               	addwfc	fsr2h,f,c
 18911  012DC4  CF58 FFDF          	movff	3928,indf2	;volatile
 18912                           
 18913                           ; BSR set to: 15
 18914                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 18915  012DC8  EE20 F007          	lfsr	2,7
 18916  012DCC  503C               	movf	CANreceiveMessage@msg,w,c
 18917  012DCE  26D9               	addwf	fsr2l,f,c
 18918  012DD0  503D               	movf	CANreceiveMessage@msg+1,w,c
 18919  012DD2  22DA               	addwfc	fsr2h,f,c
 18920  012DD4  CF59 FFDF          	movff	3929,indf2	;volatile
 18921                           
 18922                           ; BSR set to: 15
 18923                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 18924  012DD8  EE20 F008          	lfsr	2,8
 18925  012DDC  503C               	movf	CANreceiveMessage@msg,w,c
 18926  012DDE  26D9               	addwf	fsr2l,f,c
 18927  012DE0  503D               	movf	CANreceiveMessage@msg+1,w,c
 18928  012DE2  22DA               	addwfc	fsr2h,f,c
 18929  012DE4  CF5A FFDF          	movff	3930,indf2	;volatile
 18930                           
 18931                           ; BSR set to: 15
 18932                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 18933  012DE8  EE20 F009          	lfsr	2,9
 18934  012DEC  503C               	movf	CANreceiveMessage@msg,w,c
 18935  012DEE  26D9               	addwf	fsr2l,f,c
 18936  012DF0  503D               	movf	CANreceiveMessage@msg+1,w,c
 18937  012DF2  22DA               	addwfc	fsr2h,f,c
 18938  012DF4  CF5B FFDF          	movff	3931,indf2	;volatile
 18939                           
 18940                           ; BSR set to: 15
 18941                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 18942  012DF8  EE20 F00A          	lfsr	2,10
 18943  012DFC  503C               	movf	CANreceiveMessage@msg,w,c
 18944  012DFE  26D9               	addwf	fsr2l,f,c
 18945  012E00  503D               	movf	CANreceiveMessage@msg+1,w,c
 18946  012E02  22DA               	addwfc	fsr2h,f,c
 18947  012E04  CF5C FFDF          	movff	3932,indf2	;volatile
 18948                           
 18949                           ; BSR set to: 15
 18950                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 18951  012E08  EE20 F00B          	lfsr	2,11
 18952  012E0C  503C               	movf	CANreceiveMessage@msg,w,c
 18953  012E0E  26D9               	addwf	fsr2l,f,c
 18954  012E10  503D               	movf	CANreceiveMessage@msg+1,w,c
 18955  012E12  22DA               	addwfc	fsr2h,f,c
 18956  012E14  CF5D FFDF          	movff	3933,indf2	;volatile
 18957                           
 18958                           ; BSR set to: 15
 18959                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 18960  012E18  EE20 F00E          	lfsr	2,14
 18961  012E1C  503C               	movf	CANreceiveMessage@msg,w,c
 18962  012E1E  26D9               	addwf	fsr2l,f,c
 18963  012E20  503D               	movf	CANreceiveMessage@msg+1,w,c
 18964  012E22  22DA               	addwfc	fsr2h,f,c
 18965  012E24  010F               	movlb	15	; () banked
 18966  012E26  AD55               	btfss	85,6,b	;volatile
 18967  012E28  D002               	goto	i2u1133_40
 18968  012E2A  0E01               	movlw	1
 18969  012E2C  D001               	goto	i2u1133_46
 18970  012E2E                     i2u1133_40:
 18971  012E2E  0E00               	movlw	0
 18972  012E30                     i2u1133_46:
 18973  012E30  6EDF               	movwf	indf2,c
 18974                           
 18975                           ; BSR set to: 15
 18976                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 18977  012E32  EE20 F00D          	lfsr	2,13
 18978  012E36  503C               	movf	CANreceiveMessage@msg,w,c
 18979  012E38  26D9               	addwf	fsr2l,f,c
 18980  012E3A  503D               	movf	CANreceiveMessage@msg+1,w,c
 18981  012E3C  22DA               	addwfc	fsr2h,f,c
 18982  012E3E  010F               	movlb	15	; () banked
 18983  012E40  5155               	movf	85,w,b	;volatile
 18984  012E42  0B0F               	andlw	15
 18985  012E44  6EDF               	movwf	indf2,c
 18986                           
 18987                           ; BSR set to: 15
 18988                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 18989  012E46  EE20 F00C          	lfsr	2,12
 18990  012E4A  503C               	movf	CANreceiveMessage@msg,w,c
 18991  012E4C  26D9               	addwf	fsr2l,f,c
 18992  012E4E  503D               	movf	CANreceiveMessage@msg+1,w,c
 18993  012E50  22DA               	addwfc	fsr2h,f,c
 18994  012E52  010F               	movlb	15	; () banked
 18995  012E54  A752               	btfss	82,3,b	;volatile
 18996  012E56  D002               	goto	i2u1134_40
 18997  012E58  0E01               	movlw	1
 18998  012E5A  D001               	goto	i2u1134_46
 18999  012E5C                     i2u1134_40:
 19000  012E5C  0E00               	movlw	0
 19001  012E5E                     i2u1134_46:
 19002  012E5E  6EDF               	movwf	indf2,c
 19003                           
 19004                           ; BSR set to: 15
 19005                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 19006  012E60  010F               	movlb	15	; () banked
 19007  012E62  B752               	btfsc	82,3,b	;volatile
 19008  012E64  D044               	goto	i2l8578
 19009                           
 19010                           ; BSR set to: 15
 19011                           ;inc\CANlib.h: 559: {
 19012                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 19013  012E66  CF51 F03E          	movff	3921,??_CANreceiveMessage	;volatile
 19014  012E6A  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19015  012E6C  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19016  012E6E  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19017  012E70  0E03               	movlw	3
 19018  012E72                     i2u1136_45:
 19019  012E72  90D8               	bcf	status,0,c
 19020  012E74  363E               	rlcf	??_CANreceiveMessage,f,c
 19021  012E76  363F               	rlcf	??_CANreceiveMessage+1,f,c
 19022  012E78  3640               	rlcf	??_CANreceiveMessage+2,f,c
 19023  012E7A  3641               	rlcf	??_CANreceiveMessage+3,f,c
 19024  012E7C  2EE8               	decfsz	wreg,f,c
 19025  012E7E  D7F9               	goto	i2u1136_45
 19026  012E80  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19027  012E84  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19028  012E88  C03E  FFDE         	movff	??_CANreceiveMessage,postinc2
 19029  012E8C  C03F  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19030  012E90  C040  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19031  012E94  C041  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19032                           
 19033                           ; BSR set to: 15
 19034                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 19035  012E98  010F               	movlb	15	; () banked
 19036  012E9A  3952               	swapf	82,w,b	;volatile
 19037  012E9C  42E8               	rrncf	wreg,f,c
 19038  012E9E  0B07               	andlw	7
 19039  012EA0  0B07               	andlw	7
 19040  012EA2  6E47               	movwf	CANreceiveMessage@tamp,c
 19041                           
 19042                           ; BSR set to: 15
 19043                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 19044  012EA4  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19045  012EA8  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19046  012EAC  CFDE F03E          	movff	postinc2,??_CANreceiveMessage
 19047  012EB0  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+1
 19048  012EB4  CFDE F040          	movff	postinc2,??_CANreceiveMessage+2
 19049  012EB8  CFDE F041          	movff	postinc2,??_CANreceiveMessage+3
 19050  012EBC  5047               	movf	CANreceiveMessage@tamp,w,c
 19051  012EBE  243E               	addwf	??_CANreceiveMessage,w,c
 19052  012EC0  6E42               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 19053  012EC2  0E00               	movlw	0
 19054  012EC4  203F               	addwfc	??_CANreceiveMessage+1,w,c
 19055  012EC6  6E43               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 19056  012EC8  0E00               	movlw	0
 19057  012ECA  2040               	addwfc	??_CANreceiveMessage+2,w,c
 19058  012ECC  6E44               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 19059  012ECE  0E00               	movlw	0
 19060  012ED0  2041               	addwfc	??_CANreceiveMessage+3,w,c
 19061  012ED2  6E45               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 19062  012ED4  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19063  012ED8  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19064  012EDC  C042  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 19065  012EE0  C043  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 19066  012EE4  C044  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 19067  012EE8  C045  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 19068                           
 19069                           ;inc\CANlib.h: 563: }
 19070  012EEC  D08D               	goto	i2l8604
 19071  012EEE                     i2l8578:
 19072                           
 19073                           ; BSR set to: 15
 19074                           ;inc\CANlib.h: 564: else
 19075                           ;inc\CANlib.h: 565: {
 19076                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 19077  012EEE  CF54 F03E          	movff	3924,??_CANreceiveMessage	;volatile
 19078  012EF2  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19079  012EF4  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19080  012EF6  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19081  012EF8  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19082  012EFC  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19083  012F00  C03E  FFDE         	movff	??_CANreceiveMessage,postinc2
 19084  012F04  C03F  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19085  012F08  C040  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19086  012F0C  C041  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19087                           
 19088                           ; BSR set to: 15
 19089                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 19090  012F10  CF53 F03E          	movff	3923,??_CANreceiveMessage	;volatile
 19091  012F14  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19092  012F16  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19093  012F18  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19094  012F1A  C040  F041         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 19095  012F1E  C03F  F040         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 19096  012F22  C03E  F03F         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 19097  012F26  6A3E               	clrf	??_CANreceiveMessage,c
 19098  012F28  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19099  012F2C  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19100  012F30  503E               	movf	??_CANreceiveMessage,w,c
 19101  012F32  26DE               	addwf	postinc2,f,c
 19102  012F34  503F               	movf	??_CANreceiveMessage+1,w,c
 19103  012F36  22DE               	addwfc	postinc2,f,c
 19104  012F38  5040               	movf	??_CANreceiveMessage+2,w,c
 19105  012F3A  22DE               	addwfc	postinc2,f,c
 19106  012F3C  5041               	movf	??_CANreceiveMessage+3,w,c
 19107  012F3E  22DE               	addwfc	postinc2,f,c
 19108                           
 19109                           ; BSR set to: 15
 19110                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 19111  012F40  010F               	movlb	15	; () banked
 19112  012F42  A152               	btfss	82,0,b	;volatile
 19113  012F44  D00C               	goto	i2l8586
 19114                           
 19115                           ; BSR set to: 15
 19116                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 19117  012F46  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19118  012F4A  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19119  012F4E  0E00               	movlw	0
 19120  012F50  12DE               	iorwf	postinc2,f,c
 19121  012F52  0E00               	movlw	0
 19122  012F54  12DE               	iorwf	postinc2,f,c
 19123  012F56  0E01               	movlw	1
 19124  012F58  12DE               	iorwf	postinc2,f,c
 19125  012F5A  0E00               	movlw	0
 19126  012F5C  12DE               	iorwf	postinc2,f,c
 19127  012F5E                     i2l8586:
 19128                           
 19129                           ; BSR set to: 15
 19130                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 19131  012F5E  010F               	movlb	15	; () banked
 19132  012F60  A352               	btfss	82,1,b	;volatile
 19133  012F62  D00C               	goto	i2l8590
 19134                           
 19135                           ; BSR set to: 15
 19136                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 19137  012F64  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19138  012F68  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19139  012F6C  0E00               	movlw	0
 19140  012F6E  12DE               	iorwf	postinc2,f,c
 19141  012F70  0E00               	movlw	0
 19142  012F72  12DE               	iorwf	postinc2,f,c
 19143  012F74  0E02               	movlw	2
 19144  012F76  12DE               	iorwf	postinc2,f,c
 19145  012F78  0E00               	movlw	0
 19146  012F7A  12DE               	iorwf	postinc2,f,c
 19147  012F7C                     i2l8590:
 19148                           
 19149                           ; BSR set to: 15
 19150                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 19151  012F7C  010F               	movlb	15	; () banked
 19152  012F7E  AB52               	btfss	82,5,b	;volatile
 19153  012F80  D00C               	goto	i2l8594
 19154                           
 19155                           ; BSR set to: 15
 19156                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 19157  012F82  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19158  012F86  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19159  012F8A  0E00               	movlw	0
 19160  012F8C  12DE               	iorwf	postinc2,f,c
 19161  012F8E  0E00               	movlw	0
 19162  012F90  12DE               	iorwf	postinc2,f,c
 19163  012F92  0E04               	movlw	4
 19164  012F94  12DE               	iorwf	postinc2,f,c
 19165  012F96  0E00               	movlw	0
 19166  012F98  12DE               	iorwf	postinc2,f,c
 19167  012F9A                     i2l8594:
 19168                           
 19169                           ; BSR set to: 15
 19170                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 19171  012F9A  010F               	movlb	15	; () banked
 19172  012F9C  AD52               	btfss	82,6,b	;volatile
 19173  012F9E  D00C               	goto	i2l8598
 19174                           
 19175                           ; BSR set to: 15
 19176                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 19177  012FA0  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19178  012FA4  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19179  012FA8  0E00               	movlw	0
 19180  012FAA  12DE               	iorwf	postinc2,f,c
 19181  012FAC  0E00               	movlw	0
 19182  012FAE  12DE               	iorwf	postinc2,f,c
 19183  012FB0  0E08               	movlw	8
 19184  012FB2  12DE               	iorwf	postinc2,f,c
 19185  012FB4  0E00               	movlw	0
 19186  012FB6  12DE               	iorwf	postinc2,f,c
 19187  012FB8                     i2l8598:
 19188                           
 19189                           ; BSR set to: 15
 19190                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 19191  012FB8  010F               	movlb	15	; () banked
 19192  012FBA  AF52               	btfss	82,7,b	;volatile
 19193  012FBC  D00C               	goto	i2l8602
 19194                           
 19195                           ; BSR set to: 15
 19196                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 19197  012FBE  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19198  012FC2  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19199  012FC6  0E00               	movlw	0
 19200  012FC8  12DE               	iorwf	postinc2,f,c
 19201  012FCA  0E00               	movlw	0
 19202  012FCC  12DE               	iorwf	postinc2,f,c
 19203  012FCE  0E10               	movlw	16
 19204  012FD0  12DE               	iorwf	postinc2,f,c
 19205  012FD2  0E00               	movlw	0
 19206  012FD4  12DE               	iorwf	postinc2,f,c
 19207  012FD6                     i2l8602:
 19208                           
 19209                           ; BSR set to: 15
 19210                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 19211  012FD6  CF51 F03E          	movff	3921,??_CANreceiveMessage	;volatile
 19212  012FDA  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19213  012FDC  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19214  012FDE  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19215  012FE0  0E15               	movlw	21
 19216  012FE2                     i2u1142_45:
 19217  012FE2  90D8               	bcf	status,0,c
 19218  012FE4  363E               	rlcf	??_CANreceiveMessage,f,c
 19219  012FE6  363F               	rlcf	??_CANreceiveMessage+1,f,c
 19220  012FE8  3640               	rlcf	??_CANreceiveMessage+2,f,c
 19221  012FEA  3641               	rlcf	??_CANreceiveMessage+3,f,c
 19222  012FEC  2EE8               	decfsz	wreg,f,c
 19223  012FEE  D7F9               	goto	i2u1142_45
 19224  012FF0  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19225  012FF4  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19226  012FF8  503E               	movf	??_CANreceiveMessage,w,c
 19227  012FFA  12DE               	iorwf	postinc2,f,c
 19228  012FFC  503F               	movf	??_CANreceiveMessage+1,w,c
 19229  012FFE  12DE               	iorwf	postinc2,f,c
 19230  013000  5040               	movf	??_CANreceiveMessage+2,w,c
 19231  013002  12DE               	iorwf	postinc2,f,c
 19232  013004  5041               	movf	??_CANreceiveMessage+3,w,c
 19233  013006  12DE               	iorwf	postinc2,f,c
 19234  013008                     i2l8604:
 19235                           
 19236                           ; BSR set to: 15
 19237                           ;inc\CANlib.h: 581: }
 19238                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 19239  013008  010F               	movlb	15	; () banked
 19240  01300A  9F50               	bcf	80,7,b	;volatile
 19241                           
 19242                           ; BSR set to: 15
 19243                           ;inc\CANlib.h: 584: return (error);
 19244                           ;	Return value of _CANreceiveMessage is never used
 19245  01300C  0012               	return	
 19246  01300E                     i2l422:
 19247                           
 19248                           ; BSR set to: 15
 19249                           ;inc\CANlib.h: 585: }
 19250                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 19251  01300E  AE60               	btfss	3936,7,c	;volatile
 19252  013010  0012               	return	
 19253                           
 19254                           ; BSR set to: 15
 19255                           ;inc\CANlib.h: 588: {
 19256                           ;inc\CANlib.h: 589: msg->identifier = 0;
 19257  013012  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19258  013016  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19259  01301A  6ADE               	clrf	postinc2,c
 19260  01301C  6ADE               	clrf	postinc2,c
 19261  01301E  6ADE               	clrf	postinc2,c
 19262  013020  6ADD               	clrf	postdec2,c
 19263                           
 19264                           ; BSR set to: 15
 19265                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 19266  013022  EE20 F004          	lfsr	2,4
 19267  013026  503C               	movf	CANreceiveMessage@msg,w,c
 19268  013028  26D9               	addwf	fsr2l,f,c
 19269  01302A  503D               	movf	CANreceiveMessage@msg+1,w,c
 19270  01302C  22DA               	addwfc	fsr2h,f,c
 19271  01302E  CF66 FFDF          	movff	3942,indf2	;volatile
 19272                           
 19273                           ; BSR set to: 15
 19274                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 19275  013032  EE20 F005          	lfsr	2,5
 19276  013036  503C               	movf	CANreceiveMessage@msg,w,c
 19277  013038  26D9               	addwf	fsr2l,f,c
 19278  01303A  503D               	movf	CANreceiveMessage@msg+1,w,c
 19279  01303C  22DA               	addwfc	fsr2h,f,c
 19280  01303E  CF67 FFDF          	movff	3943,indf2	;volatile
 19281                           
 19282                           ; BSR set to: 15
 19283                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 19284  013042  EE20 F006          	lfsr	2,6
 19285  013046  503C               	movf	CANreceiveMessage@msg,w,c
 19286  013048  26D9               	addwf	fsr2l,f,c
 19287  01304A  503D               	movf	CANreceiveMessage@msg+1,w,c
 19288  01304C  22DA               	addwfc	fsr2h,f,c
 19289  01304E  CF68 FFDF          	movff	3944,indf2	;volatile
 19290                           
 19291                           ; BSR set to: 15
 19292                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 19293  013052  EE20 F007          	lfsr	2,7
 19294  013056  503C               	movf	CANreceiveMessage@msg,w,c
 19295  013058  26D9               	addwf	fsr2l,f,c
 19296  01305A  503D               	movf	CANreceiveMessage@msg+1,w,c
 19297  01305C  22DA               	addwfc	fsr2h,f,c
 19298  01305E  CF69 FFDF          	movff	3945,indf2	;volatile
 19299                           
 19300                           ; BSR set to: 15
 19301                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 19302  013062  EE20 F008          	lfsr	2,8
 19303  013066  503C               	movf	CANreceiveMessage@msg,w,c
 19304  013068  26D9               	addwf	fsr2l,f,c
 19305  01306A  503D               	movf	CANreceiveMessage@msg+1,w,c
 19306  01306C  22DA               	addwfc	fsr2h,f,c
 19307  01306E  CF6A FFDF          	movff	3946,indf2	;volatile
 19308                           
 19309                           ; BSR set to: 15
 19310                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 19311  013072  EE20 F009          	lfsr	2,9
 19312  013076  503C               	movf	CANreceiveMessage@msg,w,c
 19313  013078  26D9               	addwf	fsr2l,f,c
 19314  01307A  503D               	movf	CANreceiveMessage@msg+1,w,c
 19315  01307C  22DA               	addwfc	fsr2h,f,c
 19316  01307E  CF6B FFDF          	movff	3947,indf2	;volatile
 19317                           
 19318                           ; BSR set to: 15
 19319                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 19320  013082  EE20 F00A          	lfsr	2,10
 19321  013086  503C               	movf	CANreceiveMessage@msg,w,c
 19322  013088  26D9               	addwf	fsr2l,f,c
 19323  01308A  503D               	movf	CANreceiveMessage@msg+1,w,c
 19324  01308C  22DA               	addwfc	fsr2h,f,c
 19325  01308E  CF6C FFDF          	movff	3948,indf2	;volatile
 19326                           
 19327                           ; BSR set to: 15
 19328                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 19329  013092  EE20 F00B          	lfsr	2,11
 19330  013096  503C               	movf	CANreceiveMessage@msg,w,c
 19331  013098  26D9               	addwf	fsr2l,f,c
 19332  01309A  503D               	movf	CANreceiveMessage@msg+1,w,c
 19333  01309C  22DA               	addwfc	fsr2h,f,c
 19334  01309E  CF6D FFDF          	movff	3949,indf2	;volatile
 19335                           
 19336                           ; BSR set to: 15
 19337                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 19338  0130A2  EE20 F00E          	lfsr	2,14
 19339  0130A6  503C               	movf	CANreceiveMessage@msg,w,c
 19340  0130A8  26D9               	addwf	fsr2l,f,c
 19341  0130AA  503D               	movf	CANreceiveMessage@msg+1,w,c
 19342  0130AC  22DA               	addwfc	fsr2h,f,c
 19343  0130AE  AC65               	btfss	3941,6,c	;volatile
 19344  0130B0  D002               	goto	i2u1144_40
 19345  0130B2  0E01               	movlw	1
 19346  0130B4  D001               	goto	i2u1144_46
 19347  0130B6                     i2u1144_40:
 19348  0130B6  0E00               	movlw	0
 19349  0130B8                     i2u1144_46:
 19350  0130B8  6EDF               	movwf	indf2,c
 19351                           
 19352                           ; BSR set to: 15
 19353                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 19354  0130BA  EE20 F00D          	lfsr	2,13
 19355  0130BE  503C               	movf	CANreceiveMessage@msg,w,c
 19356  0130C0  26D9               	addwf	fsr2l,f,c
 19357  0130C2  503D               	movf	CANreceiveMessage@msg+1,w,c
 19358  0130C4  22DA               	addwfc	fsr2h,f,c
 19359  0130C6  5065               	movf	3941,w,c	;volatile
 19360  0130C8  0B0F               	andlw	15
 19361  0130CA  6EDF               	movwf	indf2,c
 19362                           
 19363                           ; BSR set to: 15
 19364                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 19365  0130CC  EE20 F00C          	lfsr	2,12
 19366  0130D0  503C               	movf	CANreceiveMessage@msg,w,c
 19367  0130D2  26D9               	addwf	fsr2l,f,c
 19368  0130D4  503D               	movf	CANreceiveMessage@msg+1,w,c
 19369  0130D6  22DA               	addwfc	fsr2h,f,c
 19370  0130D8  A662               	btfss	3938,3,c	;volatile
 19371  0130DA  D002               	goto	i2u1145_40
 19372  0130DC  0E01               	movlw	1
 19373  0130DE  D001               	goto	i2u1145_46
 19374  0130E0                     i2u1145_40:
 19375  0130E0  0E00               	movlw	0
 19376  0130E2                     i2u1145_46:
 19377  0130E2  6EDF               	movwf	indf2,c
 19378                           
 19379                           ; BSR set to: 15
 19380                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 19381  0130E4  B662               	btfsc	3938,3,c	;volatile
 19382  0130E6  D043               	goto	i2l8640
 19383                           
 19384                           ; BSR set to: 15
 19385                           ;inc\CANlib.h: 606: {
 19386                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 19387  0130E8  CF61 F03E          	movff	3937,??_CANreceiveMessage	;volatile
 19388  0130EC  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19389  0130EE  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19390  0130F0  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19391  0130F2  0E03               	movlw	3
 19392  0130F4                     i2u1147_45:
 19393  0130F4  90D8               	bcf	status,0,c
 19394  0130F6  363E               	rlcf	??_CANreceiveMessage,f,c
 19395  0130F8  363F               	rlcf	??_CANreceiveMessage+1,f,c
 19396  0130FA  3640               	rlcf	??_CANreceiveMessage+2,f,c
 19397  0130FC  3641               	rlcf	??_CANreceiveMessage+3,f,c
 19398  0130FE  2EE8               	decfsz	wreg,f,c
 19399  013100  D7F9               	goto	i2u1147_45
 19400  013102  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19401  013106  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19402  01310A  C03E  FFDE         	movff	??_CANreceiveMessage,postinc2
 19403  01310E  C03F  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19404  013112  C040  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19405  013116  C041  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19406                           
 19407                           ; BSR set to: 15
 19408                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 19409  01311A  3862               	swapf	3938,w,c	;volatile
 19410  01311C  42E8               	rrncf	wreg,f,c
 19411  01311E  0B07               	andlw	7
 19412  013120  0B07               	andlw	7
 19413  013122  6E47               	movwf	CANreceiveMessage@tamp,c
 19414                           
 19415                           ; BSR set to: 15
 19416                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 19417  013124  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19418  013128  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19419  01312C  CFDE F03E          	movff	postinc2,??_CANreceiveMessage
 19420  013130  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+1
 19421  013134  CFDE F040          	movff	postinc2,??_CANreceiveMessage+2
 19422  013138  CFDE F041          	movff	postinc2,??_CANreceiveMessage+3
 19423  01313C  5047               	movf	CANreceiveMessage@tamp,w,c
 19424  01313E  243E               	addwf	??_CANreceiveMessage,w,c
 19425  013140  6E42               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 19426  013142  0E00               	movlw	0
 19427  013144  203F               	addwfc	??_CANreceiveMessage+1,w,c
 19428  013146  6E43               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 19429  013148  0E00               	movlw	0
 19430  01314A  2040               	addwfc	??_CANreceiveMessage+2,w,c
 19431  01314C  6E44               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 19432  01314E  0E00               	movlw	0
 19433  013150  2041               	addwfc	??_CANreceiveMessage+3,w,c
 19434  013152  6E45               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 19435  013154  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19436  013158  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19437  01315C  C042  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 19438  013160  C043  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 19439  013164  C044  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 19440  013168  C045  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 19441                           
 19442                           ;inc\CANlib.h: 610: }
 19443  01316C  D088               	goto	i2l8666
 19444  01316E                     i2l8640:
 19445                           
 19446                           ; BSR set to: 15
 19447                           ;inc\CANlib.h: 611: else
 19448                           ;inc\CANlib.h: 612: {
 19449                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 19450  01316E  CF64 F03E          	movff	3940,??_CANreceiveMessage	;volatile
 19451  013172  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19452  013174  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19453  013176  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19454  013178  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19455  01317C  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19456  013180  C03E  FFDE         	movff	??_CANreceiveMessage,postinc2
 19457  013184  C03F  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19458  013188  C040  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19459  01318C  C041  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19460                           
 19461                           ; BSR set to: 15
 19462                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 19463  013190  CF63 F03E          	movff	3939,??_CANreceiveMessage	;volatile
 19464  013194  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19465  013196  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19466  013198  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19467  01319A  C040  F041         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 19468  01319E  C03F  F040         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 19469  0131A2  C03E  F03F         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 19470  0131A6  6A3E               	clrf	??_CANreceiveMessage,c
 19471  0131A8  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19472  0131AC  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19473  0131B0  503E               	movf	??_CANreceiveMessage,w,c
 19474  0131B2  26DE               	addwf	postinc2,f,c
 19475  0131B4  503F               	movf	??_CANreceiveMessage+1,w,c
 19476  0131B6  22DE               	addwfc	postinc2,f,c
 19477  0131B8  5040               	movf	??_CANreceiveMessage+2,w,c
 19478  0131BA  22DE               	addwfc	postinc2,f,c
 19479  0131BC  5041               	movf	??_CANreceiveMessage+3,w,c
 19480  0131BE  22DE               	addwfc	postinc2,f,c
 19481                           
 19482                           ; BSR set to: 15
 19483                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 19484  0131C0  A062               	btfss	3938,0,c	;volatile
 19485  0131C2  D00C               	goto	i2l8648
 19486                           
 19487                           ; BSR set to: 15
 19488                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 19489  0131C4  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19490  0131C8  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19491  0131CC  0E00               	movlw	0
 19492  0131CE  12DE               	iorwf	postinc2,f,c
 19493  0131D0  0E00               	movlw	0
 19494  0131D2  12DE               	iorwf	postinc2,f,c
 19495  0131D4  0E01               	movlw	1
 19496  0131D6  12DE               	iorwf	postinc2,f,c
 19497  0131D8  0E00               	movlw	0
 19498  0131DA  12DE               	iorwf	postinc2,f,c
 19499  0131DC                     i2l8648:
 19500                           
 19501                           ; BSR set to: 15
 19502                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 19503  0131DC  A262               	btfss	3938,1,c	;volatile
 19504  0131DE  D00C               	goto	i2l8652
 19505                           
 19506                           ; BSR set to: 15
 19507                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 19508  0131E0  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19509  0131E4  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19510  0131E8  0E00               	movlw	0
 19511  0131EA  12DE               	iorwf	postinc2,f,c
 19512  0131EC  0E00               	movlw	0
 19513  0131EE  12DE               	iorwf	postinc2,f,c
 19514  0131F0  0E02               	movlw	2
 19515  0131F2  12DE               	iorwf	postinc2,f,c
 19516  0131F4  0E00               	movlw	0
 19517  0131F6  12DE               	iorwf	postinc2,f,c
 19518  0131F8                     i2l8652:
 19519                           
 19520                           ; BSR set to: 15
 19521                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 19522  0131F8  AA62               	btfss	3938,5,c	;volatile
 19523  0131FA  D00C               	goto	i2l8656
 19524                           
 19525                           ; BSR set to: 15
 19526                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 19527  0131FC  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19528  013200  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19529  013204  0E00               	movlw	0
 19530  013206  12DE               	iorwf	postinc2,f,c
 19531  013208  0E00               	movlw	0
 19532  01320A  12DE               	iorwf	postinc2,f,c
 19533  01320C  0E04               	movlw	4
 19534  01320E  12DE               	iorwf	postinc2,f,c
 19535  013210  0E00               	movlw	0
 19536  013212  12DE               	iorwf	postinc2,f,c
 19537  013214                     i2l8656:
 19538                           
 19539                           ; BSR set to: 15
 19540                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 19541  013214  AC62               	btfss	3938,6,c	;volatile
 19542  013216  D00C               	goto	i2l8660
 19543                           
 19544                           ; BSR set to: 15
 19545                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 19546  013218  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19547  01321C  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19548  013220  0E00               	movlw	0
 19549  013222  12DE               	iorwf	postinc2,f,c
 19550  013224  0E00               	movlw	0
 19551  013226  12DE               	iorwf	postinc2,f,c
 19552  013228  0E08               	movlw	8
 19553  01322A  12DE               	iorwf	postinc2,f,c
 19554  01322C  0E00               	movlw	0
 19555  01322E  12DE               	iorwf	postinc2,f,c
 19556  013230                     i2l8660:
 19557                           
 19558                           ; BSR set to: 15
 19559                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 19560  013230  AE62               	btfss	3938,7,c	;volatile
 19561  013232  D00C               	goto	i2l8664
 19562                           
 19563                           ; BSR set to: 15
 19564                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 19565  013234  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19566  013238  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19567  01323C  0E00               	movlw	0
 19568  01323E  12DE               	iorwf	postinc2,f,c
 19569  013240  0E00               	movlw	0
 19570  013242  12DE               	iorwf	postinc2,f,c
 19571  013244  0E10               	movlw	16
 19572  013246  12DE               	iorwf	postinc2,f,c
 19573  013248  0E00               	movlw	0
 19574  01324A  12DE               	iorwf	postinc2,f,c
 19575  01324C                     i2l8664:
 19576                           
 19577                           ; BSR set to: 15
 19578                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 19579  01324C  CF61 F03E          	movff	3937,??_CANreceiveMessage	;volatile
 19580  013250  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19581  013252  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19582  013254  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19583  013256  0E15               	movlw	21
 19584  013258                     i2u1153_45:
 19585  013258  90D8               	bcf	status,0,c
 19586  01325A  363E               	rlcf	??_CANreceiveMessage,f,c
 19587  01325C  363F               	rlcf	??_CANreceiveMessage+1,f,c
 19588  01325E  3640               	rlcf	??_CANreceiveMessage+2,f,c
 19589  013260  3641               	rlcf	??_CANreceiveMessage+3,f,c
 19590  013262  2EE8               	decfsz	wreg,f,c
 19591  013264  D7F9               	goto	i2u1153_45
 19592  013266  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19593  01326A  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19594  01326E  503E               	movf	??_CANreceiveMessage,w,c
 19595  013270  12DE               	iorwf	postinc2,f,c
 19596  013272  503F               	movf	??_CANreceiveMessage+1,w,c
 19597  013274  12DE               	iorwf	postinc2,f,c
 19598  013276  5040               	movf	??_CANreceiveMessage+2,w,c
 19599  013278  12DE               	iorwf	postinc2,f,c
 19600  01327A  5041               	movf	??_CANreceiveMessage+3,w,c
 19601  01327C  12DE               	iorwf	postinc2,f,c
 19602  01327E                     i2l8666:
 19603                           
 19604                           ; BSR set to: 15
 19605                           ;inc\CANlib.h: 629: }
 19606                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 19607  01327E  9E60               	bcf	3936,7,c	;volatile
 19608                           
 19609                           ; BSR set to: 15
 19610                           ;inc\CANlib.h: 632: return (error);
 19611                           ;	Return value of _CANreceiveMessage is never used
 19612  013280  0012               	return	
 19613  013282                     __end_of_CANreceiveMessage:
 19614                           	opt stack 0
 19615                           pclatu	equ	0xFFB
 19616                           pclath	equ	0xFFA
 19617                           tblptru	equ	0xFF8
 19618                           tblptrh	equ	0xFF7
 19619                           tblptrl	equ	0xFF6
 19620                           tablat	equ	0xFF5
 19621                           prodh	equ	0xFF4
 19622                           prodl	equ	0xFF3
 19623                           intcon	equ	0xFF2
 19624                           postinc0	equ	0xFEE
 19625                           fsr0h	equ	0xFEA
 19626                           fsr0l	equ	0xFE9
 19627                           wreg	equ	0xFE8
 19628                           indf1	equ	0xFE7
 19629                           fsr1h	equ	0xFE2
 19630                           fsr1l	equ	0xFE1
 19631                           bsr	equ	0xFE0
 19632                           indf2	equ	0xFDF
 19633                           postinc2	equ	0xFDE
 19634                           postdec2	equ	0xFDD
 19635                           fsr2h	equ	0xFDA
 19636                           fsr2l	equ	0xFD9
 19637                           status	equ	0xFD8
 19638                           
 19639 ;; *************** function _CANisRxReady *****************
 19640 ;; Defined at:
 19641 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 19642 ;; Parameters:    Size  Location     Type
 19643 ;;		None
 19644 ;; Auto vars:     Size  Location     Type
 19645 ;;		None
 19646 ;; Return value:  Size  Location     Type
 19647 ;;                  1    wreg      unsigned char 
 19648 ;; Registers used:
 19649 ;;		wreg, status,2
 19650 ;; Tracked objects:
 19651 ;;		On entry : 0/0
 19652 ;;		On exit  : 0/0
 19653 ;;		Unchanged: 0/0
 19654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19658 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19659 ;;Total ram usage:        1 bytes
 19660 ;; Hardware stack levels used:    1
 19661 ;; This function calls:
 19662 ;;		Nothing
 19663 ;; This function is called by:
 19664 ;;		_ISR_alta
 19665 ;; This function uses a non-reentrant model
 19666 ;;
 19667                           
 19668                           	psect	text52
 19669  015E62                     __ptext52:
 19670                           	opt stack 0
 19671  015E62                     _CANisRxReady:
 19672                           	opt stack 21
 19673                           
 19674                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 19675                           
 19676                           ; BSR set to: 15
 19677                           ;incstack = 0
 19678  015E62  0E01               	movlw	1
 19679  015E64  6E3C               	movwf	_CANisRxReady$3237,c
 19680  015E66  BE60               	btfsc	3936,7,c	;volatile
 19681  015E68  D005               	goto	i2l573
 19682  015E6A  010F               	movlb	15	; () banked
 19683  015E6C  BF50               	btfsc	80,7,b	;volatile
 19684  015E6E  D002               	goto	i2l573
 19685                           
 19686                           ; BSR set to: 15
 19687  015E70  0E00               	movlw	0
 19688  015E72  6E3C               	movwf	_CANisRxReady$3237,c
 19689  015E74                     i2l573:
 19690  015E74  503C               	movf	_CANisRxReady$3237,w,c
 19691  015E76  0012               	return	
 19692  015E78                     __end_of_CANisRxReady:
 19693                           	opt stack 0
 19694                           pclatu	equ	0xFFB
 19695                           pclath	equ	0xFFA
 19696                           tblptru	equ	0xFF8
 19697                           tblptrh	equ	0xFF7
 19698                           tblptrl	equ	0xFF6
 19699                           tablat	equ	0xFF5
 19700                           prodh	equ	0xFF4
 19701                           prodl	equ	0xFF3
 19702                           intcon	equ	0xFF2
 19703                           postinc0	equ	0xFEE
 19704                           fsr0h	equ	0xFEA
 19705                           fsr0l	equ	0xFE9
 19706                           wreg	equ	0xFE8
 19707                           indf1	equ	0xFE7
 19708                           fsr1h	equ	0xFE2
 19709                           fsr1l	equ	0xFE1
 19710                           bsr	equ	0xFE0
 19711                           indf2	equ	0xFDF
 19712                           postinc2	equ	0xFDE
 19713                           postdec2	equ	0xFDD
 19714                           fsr2h	equ	0xFDA
 19715                           fsr2l	equ	0xFD9
 19716                           status	equ	0xFD8
 19717                           pclatu	equ	0xFFB
 19718                           pclath	equ	0xFFA
 19719                           tblptru	equ	0xFF8
 19720                           tblptrh	equ	0xFF7
 19721                           tblptrl	equ	0xFF6
 19722                           tablat	equ	0xFF5
 19723                           prodh	equ	0xFF4
 19724                           prodl	equ	0xFF3
 19725                           intcon	equ	0xFF2
 19726                           postinc0	equ	0xFEE
 19727                           fsr0h	equ	0xFEA
 19728                           fsr0l	equ	0xFE9
 19729                           wreg	equ	0xFE8
 19730                           indf1	equ	0xFE7
 19731                           fsr1h	equ	0xFE2
 19732                           fsr1l	equ	0xFE1
 19733                           bsr	equ	0xFE0
 19734                           indf2	equ	0xFDF
 19735                           postinc2	equ	0xFDE
 19736                           postdec2	equ	0xFDD
 19737                           fsr2h	equ	0xFDA
 19738                           fsr2l	equ	0xFD9
 19739                           status	equ	0xFD8
 19740                           
 19741                           	psect	rparam
 19742  0000                     pclatu	equ	0xFFB
 19743                           pclath	equ	0xFFA
 19744                           tblptru	equ	0xFF8
 19745                           tblptrh	equ	0xFF7
 19746                           tblptrl	equ	0xFF6
 19747                           tablat	equ	0xFF5
 19748                           prodh	equ	0xFF4
 19749                           prodl	equ	0xFF3
 19750                           intcon	equ	0xFF2
 19751                           postinc0	equ	0xFEE
 19752                           fsr0h	equ	0xFEA
 19753                           fsr0l	equ	0xFE9
 19754                           wreg	equ	0xFE8
 19755                           indf1	equ	0xFE7
 19756                           fsr1h	equ	0xFE2
 19757                           fsr1l	equ	0xFE1
 19758                           bsr	equ	0xFE0
 19759                           indf2	equ	0xFDF
 19760                           postinc2	equ	0xFDE
 19761                           postdec2	equ	0xFDD
 19762                           fsr2h	equ	0xFDA
 19763                           fsr2l	equ	0xFD9
 19764                           status	equ	0xFD8
 19765                           
 19766                           	psect	temp
 19767  00004E                     btemp:
 19768                           	opt stack 0
 19769  00004E                     	ds	1
 19770  0000                     int$flags	set	btemp
 19771                           pclatu	equ	0xFFB
 19772                           pclath	equ	0xFFA
 19773                           tblptru	equ	0xFF8
 19774                           tblptrh	equ	0xFF7
 19775                           tblptrl	equ	0xFF6
 19776                           tablat	equ	0xFF5
 19777                           prodh	equ	0xFF4
 19778                           prodl	equ	0xFF3
 19779                           intcon	equ	0xFF2
 19780                           postinc0	equ	0xFEE
 19781                           fsr0h	equ	0xFEA
 19782                           fsr0l	equ	0xFE9
 19783                           wreg	equ	0xFE8
 19784                           indf1	equ	0xFE7
 19785                           fsr1h	equ	0xFE2
 19786                           fsr1l	equ	0xFE1
 19787                           bsr	equ	0xFE0
 19788                           indf2	equ	0xFDF
 19789                           postinc2	equ	0xFDE
 19790                           postdec2	equ	0xFDD
 19791                           fsr2h	equ	0xFDA
 19792                           fsr2l	equ	0xFD9
 19793                           status	equ	0xFD8


Data Sizes:
    Strings     149
    Constant    144
    Data        1
    BSS         106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      77
    BANK0           160    107     139
    BANK1           256     33      66
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_15(CODE[8]), STR_14(CODE[6]), STR_13(CODE[6]), STR_12(CODE[2]), 
		 -> STR_11(CODE[5]), STR_10(CODE[4]), STR_9(CODE[21]), STR_8(CODE[17]), 
		 -> STR_7(CODE[12]), STR_6(CODE[21]), STR_4(CODE[21]), STR_3(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 3327
		 -> data_speed(BANK0[1]), RAM(DATA[3327]), data_brake(BANK0[1]), data_steering(BANK0[1]), 
		 -> data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Send->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  265025
                                             25 BANK1      8     8      0
                           _CAN_Send
                    _CAN_interpreter
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                        _LCD_Handler
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   64260
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             29 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             15 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             15 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  132769
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41624
                                             97 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             54 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             15 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             54 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             29 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             15 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             21 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             15 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             15 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                             15 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             15 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             15 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             87 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             87 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             67 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             54 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             15 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             29 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9673
                                             32 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10597
                                             32 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9454
                                             27 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   28412
                                             29 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9073
                                             27 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8934
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18291
                                             30 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    9110
                                             27 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8965
                                             27 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    8934
                                             23 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1418
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1418
                                             21 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             15 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             15 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_interpreter                                      4     4      0       0
                                             15 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Send                                             0     0      0    4107
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4083
                                             15 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            15    15      0    4995
                                              0 BANK0     15    15      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (10) i2_CANsendMessage                                   16     8      8    3197
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (10) i2_CANisTxReady                                      1     1      0      37
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _CANreceiveMessage                                  12    10      2    1594
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (10) _CANisRxReady                                        1     1      0      37
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Send
     _CANisTxReady
     _CANsendMessage
   _CAN_interpreter
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      42       7       25.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6B      8B       5       86.9%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     21      4D       1       81.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11A      20        0.0%
DATA                 0      0     11A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Apr 14 12:41:59 2016

                   ___fldiv@aexp 0095                     ___fldiv@bexp 0094  
                              _x 026C                                _y 026D  
                              _z 026E        __size_of_delay_set_quartz 000A  
           __end_of_CANSetFilter 0B06                     ?_LCD_Handler 002B  
                   ___fldiv@sign 0089                     ___awdiv@sign 007A  
                             _id 000C                               bsr 000FE0  
            ___wmul@multiplicand 0071                      __CFG_BORV$3 000000  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                    __CFG_OSC$HS 000000                     __CFG_CP4$OFF 000000  
                   __CFG_CP5$OFF 000000                              l400 17EE  
                            l401 17F2                              l410 1958  
                            l402 17FE                              l411 1962  
                            l500 073A                              l405 18B8  
                            l501 0746                              l414 1A72  
                            l406 18BC                              l510 0852  
                            l502 074A                              l415 1A76  
                            l407 19B4                              l511 0856  
                            l503 0756                              l416 1A82  
                            l408 1944                              l520 0962  
                            l512 0862                              l504 075A  
                            l409 194E                              l521 096E  
                            l513 0866                              l505 0766  
                            l530 0A7A                              l522 0972  
                            l514 0872                              l450 41BA  
                            l370 4A8E                              l531 0A7E  
                            l523 097E                              l515 0876  
                            l451 41BE                              l371 4A98  
                            l380 1446                              l532 0A8A  
                            l524 0982                              l516 0882  
                            l508 0842                              l460 42C6  
                            l452 41CA                              l444 418A  
                            l381 1450                              l533 0A8E  
                            l525 098E                              l509 0846  
                            l461 42D2                              l445 418E  
                            l390 18A2                              l382 145A  
                            l534 0A9A                              l526 0992  
                            l462 42D6                              l446 419A  
                            l391 1634                              l375 161E  
                            l535 0A9E                              l527 099E  
                            l519 095E                              l463 42E2  
                            l455 42A2                              l447 419E  
                            l392 1638                              l376 13B0  
                            l536 0AAA                              l480 0514  
                            l456 42A6                              l448 41AA  
                            l393 1730                              l385 156A  
                            l377 13B4                              l537 0AAE  
                            l481 0520                              l457 42B2  
                            l449 41AE                              l394 16C0  
                            l386 156E                              l378 14AC  
                            l538 0ABA                              l490 062A  
                            l482 0524                              l458 42B6  
                            l395 16CA                              l387 157A  
                            l379 143C                              l491 062E  
                            l483 0530                              l475 04F0  
                            l459 42C2                              l396 16D4  
                            l492 063A                              l476 04F4  
                            l397 16DE                              l581 5C14  
                            l493 063E                              l477 0500  
                            l494 064A                              l486 060A  
                            l478 0504                              l487 060E  
                            l479 0510                              l568 5D96  
                            l488 061A                              l497 0726  
                            l489 061E                              l498 072A  
                            l499 0736                              l861 5E1C  
                            l781 1EBA                              l854 5E38  
                            l847 5DE4                              l952 10FA  
                            l777 1CBC                              l866 5A92  
                            l868 5A94             ??_PWR_Button_Polling 006F  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                    ?_LCD_cursor 007B                              _dir 00E3  
                            _msg 0106                              _str 0115  
                   ___awmod@sign 0074                              prod 000FF3  
                            wreg 000FE8                     ___flmul@aexp 008A  
                   ___flmul@bexp 008F                     ___flmul@sign 0089  
                   ___flmul@temp 0094                     ___flmul@prod 0090  
                   __CFG_LVP$OFF 000000           __size_of_LCD_goto_line 00EC  
                   ___fltol@exp1 00C0                     __CFG_WDT$OFF 000000  
                           l1520 3DFE                             l1177 503C  
                           l1281 4D24                             l1370 573A  
                           l1274 4C60                             l1531 3EA4  
                           l1523 3DA6                             l1187 4E76  
                           l1275 4CA4                             l1380 59DA  
                           l1550 37DE                             l1464 3462  
                           l1529 3E36                             l1481 35D6  
                           l1465 3456                             l1490 366A  
                           l1466 3422                             l1572 484E  
                           l1557 3A7A                             l5030 4214  
                           l1567 3B8C                             l1559 3AE8  
                           l5024 41CE                             l6002 196C  
                           l1586 4956                             l1587 496E  
                           l1579 48FA                             l5300 0886  
                           l5204 057A                             l5116 0230  
                           l6022 1A66                             l5134 02EA  
                           l5232 064E                             l5152 03A4  
                           l5080 00BE                             l5056 42E6  
                           l5306 08CC                             l5170 045E  
                           l6028 1A86                             l5340 09E8  
                           l5334 09A2                             l5238 0694  
                           l6400 3DB2                             l5272 07B0  
                           l5266 076A                             l5098 0176  
                           l6412 3E20                             l6332 3BEE  
                           l8004 4C0C                             l6406 3DFA  
                           l6342 3C1C                             l5198 0534  
                           l6352 3C4C                             l8104 5022  
                           l5368 0ABE                             l6442 3F22  
                           l6418 3E4A                             l6362 3C7A  
                           l6338 3C12                             l8122 4DD2  
                           l8106 5032                             l8034 4CDA  
                           l5810 4AA4                             l6452 3F68  
                           l6444 3F36                             l6428 3E9E  
                           l8132 4EC2                             l8140 5C48  
                           l8060 4F12                             l8044 4D0A  
                           l5812 4AE8                             l5804 4A86  
                           l6702 574C                             l6454 3F6C  
                           l6446 3F58                             l6438 3EF4  
                           l6382 3CFC                             l6374 3CCE  
                           l6358 3C70                             l8126 4E24  
                           l8118 4D84                             l7502 3332  
                           l8150 533E                             l8206 5728  
                           l8222 59C8                             l8214 596E  
                           l8054 4EEC                             l8046 4D1A  
                           l8038 4CEE                             l5806 4A9C  
                           l6712 5794                             l6392 3D7A  
                           l7600 35B6                             l8216 597E  
                           l8240 488E                             l8232 485E  
                           l8400 0D7E                             l5850 1464  
                           l6722 5A88                             l7450 5C06  
                           l7514 3366                             l7506 333C  
                           l8170 53C0                             l8218 5984  
                           l8250 4938                             l8242 489E  
                           l8082 4FBA                             l8074 4F66  
                           l8410 0E18                             l8330 0B16  
                           l6716 57CC                             l6740 5830  
                           l8180 53F6                             l8252 4948  
                           l8244 48DC                             l7700 37CC  
                           l8500 1292                             l8420 0E9C  
                           l8404 0DB0                             l4964 5E54  
                           l9220 1C92                             l5926 16E8  
                           l5870 155E                             l6750 583E  
                           l7614 361E                             l8166 53AC  
                           l8238 4886                             l8094 4FF2  
                           l8430 0F06                             l8406 0DC6  
                           l8350 0BCA                             l4982 4048  
                           l9214 1BFC                             l5952 1802  
                           l8272 5C92                             l8280 5D54  
                           l7608 3608                             l7624 363E  
                           l7544 33A2                             l7472 32A0  
                           l8184 5412                             l8176 53DC  
                           l8264 49C0                             l7704 37F2  
                           l8416 0E6A                             l8408 0E02  
                           l8360 0C0A                             l8344 0B66  
                           l8336 0B30                             l9320 2152  
                           l9304 204C                             l9224 1CA4  
                           l5946 17E2                             l6762 589C  
                           l7634 3664                             l7618 362A  
                           l7626 3644                             l7562 3446  
                           l7490 32FA                             l7482 32CE  
                           l8178 53EC                             l8194 56BE  
                           l8098 5006                             l8522 1338  
                           l8514 12E0                             l8506 12AC  
                           l8434 0F7E                             l8354 0BDA  
                           l8530 138C                             l9314 20DA  
                           l9234 1CCA                             l9226 1CAC  
                           l5876 157E                             l8276 5CAC  
                           l8284 5D68                             l7652 36F4  
                           l7644 36C0                             l7580 34C4  
                           l7572 3486                             l7556 3436  
                           l8196 56CE                             l7820 562E  
                           l7812 5604                             l7708 3806  
                           l8452 0FFC                             l8436 0F84  
                           l8508 12BA                             l8348 0BB0  
                           l9308 20D0                             l9252 1D92  
                           l9260 1DD8                             l9236 1CD6  
                           l7582 34CA                             l7590 34E6  
                           l7558 343C                             l7478 32C4  
                           l8198 56D4                             l7830 5664  
                           l7822 5634                             l7806 55EE  
                           l7750 3A64                             l8526 1364  
                           l8518 1308                             l8470 10C8  
                           l8454 1004                             l8462 10A0  
                           l8366 0C24                             l8358 0BE0  
                           l4998 40FE                             l9246 1D74  
                           l7664 3718                             l7656 3700  
                           l7648 36D2                             l7496 330E  
                           l7680 376C                             l8472 10DC  
                           l8464 10AE                             l8448 0FD0  
                           l8392 0CFA                             l8376 0C76  
                           l8528 136A                             l8800 47A2  
                           l9272 1E7C                             l9184 1B66  
                           l7658 3704                             l7586 34D4  
                           l7818 5622                             l7834 5672  
                           l7850 58CC                             l7682 3772  
                           l7674 3748                             l7930 44D4  
                           l9282 1EE0                             l9290 1F26  
                           l7860 58FC                             l7780 3B5E  
                           l7756 3A8E                             l7692 37A2  
                           l7684 3784                             l8484 112E  
                           l8476 10FE                             l8812 47E0  
                           l9268 1E72                             l7838 5686  
                           l7862 5902                             l7870 5934  
                           l7854 58DC                             l7790 3BAC  
                           l7782 3B72                             l7766 3AE2  
                           l8806 47C0                             l9294 1F2A  
                           l7880 5AE2                             l7792 3BB6  
                           l7776 3B38                             l7952 29EC  
                           l8488 1190                             l7890 545C  
                           l7874 5948                             l7866 5926  
                           l7858 58F0                             l7698 37C6  
                           l7938 45CC                             l7970 2C72  
                           l7962 2AF0                             l8498 1284  
                           l7892 548E                             l7884 5B14  
                           l8756 4624                             l7894 54C0  
                           l7958 2ABE                             l8782 4740  
                           l7888 542A                             l7896 54F2  
                           l7976 2D44                             l8792 4774  
                           l7988 5D48                             l8796 478C  
                           l7998 4BD2                             STR_1 FFA8  
                           STR_2 FF7E                             STR_3 FF69  
                           STR_4 FFA8                             STR_5 FFF3  
                           STR_6 FF93                             STR_7 FFCE  
                           STR_8 FFBD                             STR_9 FFA8  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             _LATD 000F8C  
                           _LATE 000F8D                             u6010 03DA  
                           u6100 0554                             u6015 03CE  
                           u6105 0548                             u6025 043A  
                           u5610 407A                             u6500 0ADE  
                           u6420 09C2                             u6340 08A6  
                           u6260 078A                             u6180 066E  
                           u5700 41EE                             u7205 1530  
                           u7310 1708                             u5615 406E  
                           u7320 1754                             u6505 0AD2  
                           u6425 09B6                             u6345 089A  
                           u6265 077E                             u6185 0662  
                           u5705 41E2                             u5625 40DA  
                           u5810 003A                             u5570 3FC4  
                           u7315 16FC                             u7180 1484  
                           u8060 3F08                _F2_Button_Polling 5E14  
                           u7325 1748                             u7190 14D0  
                           u7335 17B4                             u5815 002E  
                           u5575 3FB8                             u7440 198C  
                           u7185 1478                             u5905 020C  
                           u5825 009A                             u5585 4024  
                           u7450 19D8                             u5930 0266  
                           u5850 00F2                             u7195 14C4  
                           u5780 4306                             u7445 1980  
                           u8430 5E46                             u7455 19CC  
                           u5935 025A                             u5855 00E6  
                           u7465 1A38                             u5945 02C6  
                           u5865 0152                             u5785 42FA  
                           u5970 0320                             u5890 01AC  
                           u8380 5DF2                             u8445 5E48  
                           u8550 5AB6                             u5975 0314  
                           u5895 01A0                             u8480 5E2A  
                           u5985 0380                             u8395 5DF4  
                           u8556 5AB8                             u8495 5E2C  
                           u9800 33EC                             u9705 5BE0  
                           u9706 5BE2                             u9810 3404  
                           u9820 3406                             u9675 5BBC  
                           u9676 5BBE                             u9685 5BC8  
                           u9686 5BCA                             u9695 5BD4  
                           u9696 5BD6              __size_of_CANSetMask 039E  
                   ?_LCD_goto_xy 007E                             _data 002A  
                           _main 1B26               ?_F2_Button_Polling 002B  
      __size_of_LCD_send_command 003A                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             btemp 004E  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3                             start 00C0  
                  __CFG_IESO$OFF 000000                  ___fldiv@new_exp 008E  
             __size_of_LCD_clear 0032                 __end_of_CAN_Send 5806  
                   _sprintf$4217 0121                    __CFG_MCLRE$ON 000000  
                   ___param_bank 000010              ??_F2_Button_Polling 006F  
       __end_of_LCD_enable_pulse 5DBE                 _CANOperationMode 5E4C  
        __size_of_LCD_initialize 016E       __size_of_CANreceiveMessage 050C  
                  ___fltol@sign1 00BF                  __end_of___fladd 372A  
                          ?_main 002B                  __end_of___fldiv 3F90  
                __end_of___awdiv 5690                  __end_of___flneg 5C5A  
                          STR_10 FFF8                            STR_11 FFEE  
                          STR_12 FFFC                            STR_13 FFE2  
                          STR_14 FFE8                            STR_15 FFDA  
                __end_of___awmod 5952                  __end_of___flmul 3BD0  
                __end_of___flsub 5B6A                  __end_of___fltol 5424  
                __end_of___lldiv 574C                            u11200 10F2  
                          u10260 3B4C                            u10180 3A06  
                          u10511 4BAE                            u10185 39FA  
                          u10531 4BE8                  ___awdiv@divisor 0077  
                          u12310 1D40                            u12320 1D58  
                __end_of___llmod 59EC                            u12250 1C60  
                          u10740 535E                            u12260 1C78  
                          u12326 1D5A                            u10745 5352  
                          u12370 1E40                            u12266 1C7A  
                          u12460 213E                            u12380 1E58  
                          u12470 21B6                            _T3CON 000FB1  
                          u12386 1E5A                            u12487 5C08  
                          i2l400 2588                            i2l401 258C  
                          i2l410 26C2                            i2l402 2596  
                          i2l411 26CA                            i2l405 2640  
                          i2l422 300E                            i2l414 27B8  
                          i2l406 2644                            i2l415 27BC  
                          i2l407 2714                            i2l416 27C6  
                          i2l408 26B2                            i2l409 26BA  
                          i2l380 225A                            i2l381 2262  
                          i2l390 262C                            i2l382 226A  
                          i2l391 2410                            i2l375 23FC  
                          i2l392 2414                            i2l376 21E0  
                          i1l768 0078                            i2l393 24E4  
                          i2l385 2358                            i2l377 21E4  
                          i2l394 2482                            i2l386 235C  
                          i2l378 22B4                            i2l395 248A  
                          i2l387 2366                            i2l379 2252  
                          i2l396 2492                            i2l573 5E74  
                          i2l397 249A                            i2l568 5DD8  
                          i2l764 52DC                  ___awdiv@counter 0079  
                          _TMR3H 000FB3                            _TMR3L 000FB2  
              _CANisRxReady$3237 003C                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                  __CFG_PWRT$OFF 000000                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                    __CFG_WRT4$OFF 000000  
             __size_of_ISR_bassa 00A8                    __CFG_WRT5$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000               CANInitialize@flags 0081  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                 __CFG_EBTR4$OFF 000000                 __end_of_ISR_alta 5318  
                 __CFG_EBTR5$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000        __end_of_F2_Button_Polling 5E30  
                __end_of_dpowers FF69                            _scale 285C  
                __end_of_isdigit 5D52        __size_of_LCD_shift_cursor 004C  
                 __pbitbssCOMRAM 0260             __end_of_CANisRxReady 5E78  
                          tablat 000FF5             __end_of_CANisTxReady 5D9C  
                          status 000FD8                  __end_of_sprintf 139A  
            __size_of_LCD_cursor 0032                  __initialization 5B6A  
                   __end_of_main 21CC    __size_of_board_initialization 00C2  
                  _LCD_goto_line 5424                ?_Joystick_Polling 002B  
             ??_Joystick_Polling 006F                ?_LCD_write_string 0080  
                         ??_main 013A        __size_ofi2_CANsendMessage 0690  
                  __activetblptr 000003                   _JoystickValues 00DB  
             ??_LCD_write_string 0082             __size_of__tdiv_to_l_ 019E  
              _CANisTxReady$3235 006F         __size_of_CAN_interpreter 00AA  
              __end_of_LCD_clear 5D28            i2CANsendMessage@flags 0043  
         LCD_write_string@buffer 0080                           _ADCON1 000FC1  
                         _CANCON 000F6F                 ___llmod@dividend 006F  
                         ?_scale 0096                           _ADRESH 000FC4  
               ___awdiv@dividend 0075                  __CFG_BBSIZ$1024 000000  
                         i2l9002 26D2                           i2l9022 27AE  
                         i2l9120 5216                           i2l9114 51F4  
                         i2l9028 27CA                           i2l9132 5246  
                         i2l9128 523C                           i2l8602 2FD6  
                         i2l9138 5274                           i2l8604 3008  
                         i2l9148 52A0                           i2l9158 52D4  
                         i2l8640 316E                           i2l8660 3230  
                         i2l8652 31F8                           i2l8590 2F7C  
                         i2l8664 324C                           i2l8656 3214  
                         i2l8648 31DC                           i2l8666 327E  
                         i2l8594 2F9A                           i2l8586 2F5E  
                         i2l8578 2EEE                           i2l8850 2272  
                         i2l8598 2FB8                           i2l8926 24A2  
                         i2l8870 234E                           i2l8952 259A  
                         i2l8946 257E                           i2l8876 236A  
                         _RXB0D0 000F66                           _RXB0D1 000F67  
                         _RXB0D2 000F68                           _RXB0D3 000F69  
                         _RXB0D4 000F6A                           _RXB1D0 000F56  
                         _RXB0D5 000F6B                           _RXB1D1 000F57  
                         _RXB0D6 000F6C                           _RXB1D2 000F58  
                         _RXB0D7 000F6D                           _RXB1D3 000F59  
                         _RXB1D4 000F5A                           _RXB1D5 000F5B  
                         _RXB1D6 000F5C                           _RXB1D7 000F5D  
                         _TXB0D0 000F46                           _TXB0D1 000F47  
                         _TXB0D2 000F48                           _TXB0D3 000F49  
                         _TXB1D0 000F36                           _TXB0D4 000F4A  
                         _TXB1D1 000F37                           _TXB0D5 000F4B  
                         _TXB1D2 000F38                           _TXB0D6 000F4C  
                         _TXB1D3 000F39                           _TXB0D7 000F4D  
                         _TXB2D0 000F26                           _TXB1D4 000F3A  
                         _TXB2D1 000F27                           _TXB1D5 000F3B  
                         _TXB2D2 000F28                           _TXB1D6 000F3C  
                         _TXB2D3 000F29                           _TXB1D7 000F3D  
                         _TXB2D4 000F2A                           _TXB2D5 000F2B  
                         _TXB2D6 000F2C                           _TXB2D7 000F2D  
             CANsendMessage@data 0073               CANsendMessage@tamp 007B  
               __end_of___xxtofl 49D2                  _switch_position 00E6  
               __end_of_delay_ms 5C22            __size_of_CANSetFilter 0B06  
                 __CFG_XINST$OFF 000000                __end_of_ISR_bassa 00C0  
               __end_of__powers_ FF41                       _MotoreFlag 0263  
                 ?_LCD_goto_line 002B                           ___flge 4D36  
                      ??___fladd 00AB                 _delay_set_quartz 5E78  
                         ___wmul 5C5A                        ??___fldiv 0085  
                      ??___awdiv 0079                        ??___flneg 009A  
                 __CFG_STVREN$ON 000000                        ??___awmod 0073  
                      ??___flmul 0085                        ??___flsub 00BF  
                      ??___fltol 00BB                        ??___lldiv 0077  
                      ??___llmod 0077                     ??_CANSetMask 0074  
        __size_of_LCD_write_char 0096                           _fround 432E  
 LCD_initialize@quartz_frequency 007D                           clear_0 5B70  
                         clear_1 5B7C                           clear_2 5B8C  
               ___awdiv@quotient 007B                  ___awmod@divisor 0071  
           __size_of_LCD_Handler 01E0                  ___awmod@counter 0073  
                __CFG_BOREN$BOHW 000000                _JoystickConstants 00CB  
                      ??_isdigit 006F                     __mediumconst FED8  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ?_CAN_Send 002B  
     __size_of_F2_Button_Polling 001C                        ??_sprintf 00C9  
                   _CANSetFilter 0000                       ___flge@ff1 006F  
                     ___flge@ff2 0073                     ___xxtofl@arg 0079  
                   ___xxtofl@exp 0078                     ___xxtofl@val 006F  
                     __accesstop 0060          __end_of__initialization 5BA4  
             __end_of_CANSetMask 432E                  __CFG_PBADEN$OFF 000000  
                     _SterzoFlag 0265                       ___flneg@f1 0096  
               _LCD_send_command 5BAE                    ___rparam_used 000001  
                     ___fltol@f1 00B7             __size_of_LCD_goto_xy 001C  
                 __pcstackCOMRAM 002B                     __pidataBANK0 5E82  
                      ?_ISR_alta 002B                     LCD_goto_xy@x 007F  
                   LCD_goto_xy@y 007E                    __end_of_scale 2D76  
                 _LCD_initialize 504E                _LCD_write_message 5C90  
          CANSetFilter@numBuffer 0078               ?_LCD_write_message 0080  
                     __div_to_l_ 4EC6                     ??_LCD_cursor 007C  
                  _newMessageCan 0267                     _actual_speed 00DD  
          __size_of_CANisRxReady 0016            __size_of_CANisTxReady 0024  
                     ??_CAN_Send 007F                  __div_to_l_@exp1 007C  
            ??_LCD_write_message 0082                  __div_to_l_@cntr 007B  
                        ??_scale 009A                 _LCD_shift_cursor 5AD6  
                __div_to_l_@quot 0077         __end_of_CANOperationMode 5E62  
                     __pbssBANK0 00CB                       __pbssBANK1 0100  
              ??_CAN_interpreter 006F                       _data_brake 00E7  
        __size_of_CANsendMessage 078C                       _data_speed 00E8  
                  __div_to_l_@f1 006F                    __div_to_l_@f2 0073  
                ??_LCD_goto_line 007B               __end_of_LCD_cursor 5CF6  
         __end_of_LCD_initialize 51BC                          ?___flge 006F  
                        ?___wmul 006F                       ??_ISR_alta 0060  
      __end_of_LCD_write_message 5CC4                ?_LCD_enable_pulse 002B  
                        ?_fround 0096                     _CANisRxReady 5E62  
                        _CANSTAT 000F6E               ??_LCD_enable_pulse 0077  
                   _CANisTxReady 5D78                        ISR_alta@i 006E  
                        _BRGCON1 000F70                          _BRGCON2 000F71  
                        _BRGCON3 000F72                 i2_CANsendMessage 21CC  
    __size_of_PWR_Button_Polling 001C                        ?___xxtofl 006F  
        __size_ofi2_CANisTxReady 001E           __size_of_CANInitialize 01C6  
               LCD_cursor@active 007C                        ?_delay_ms 0075  
                        _RXB0DLC 000F65                          _RXB1DLC 000F55  
                        _RXB0CON 000F60                          _RXB1CON 000F50  
                        _TXB0DLC 000F45                          _TXB1DLC 000F35  
                        _TXB2DLC 000F25              CANsendMessage@flags 0076  
                        _AbsFlag 0260                __end_of__npowers_ FF0D  
                        __Hparam 0000                       _left_speed 0024  
                     _scale$4216 009A                          __Lparam 0000  
               delay_ms@value_ms 0075                  ?_LCD_initialize 002B  
                __size_of___flge 0190                          ___fladd 3282  
                        ___fldiv 3BD0                          ___awdiv 55D2  
                        ___flneg 5C22                          ___awmod 58B0  
                        ___flmul 372A                          ___flsub 5B22  
                        ___fltol 5318                          ___lldiv 5690  
                __size_of___wmul 0036                   _LCD_write_char 59EC  
                        ___llmod 5952             CANInitialize@propSeg 0086  
                        __pcinit 5B6A                          _battery 0028  
                __size_of_fround 02F6                          __ramtop 0D00  
            LCD_write_char@value 007F                          __ptext0 1B26  
                        __ptext1 5510                          __ptext2 49D2  
                        __ptext3 3F90                          __ptext4 0000  
                        __ptext5 5E4C                          __ptext6 5DDC  
                        __ptext7 4624                          __ptext8 0B06  
                        __ptext9 285C                      ?__div_to_l_ 006F  
               LCD_write_char@D0 007E                 LCD_write_char@D1 007D  
               LCD_write_char@D2 007C                 LCD_write_char@D3 007B  
                      _F1_switch 0261                          _dpowers FF41  
                      _F2_switch 0262                          _isdigit 5D28  
                     ??___xxtofl 0073                 ___awmod@dividend 006F  
                     ??_delay_ms 0077           CANreceiveMessage@error 0046  
   __end_of_board_initialization 55D2        __size_of_Joystick_Polling 0054  
       __end_of_delay_set_quartz 5E82                          _sprintf 0B06  
                 __pintcode_body 51BC                        _LCD_clear 5CF6  
           end_of_initialization 5BA4        __size_of_LCD_write_string 0026  
                        int_func 51BC                        i2u1133_40 2E2E  
                      i2u1133_46 2E30                        i2u1134_40 2E5C  
                      i2u1142_45 2FE2                        i2u1134_46 2E5E  
                      i2u1144_40 30B6                        i2u1216_40 5214  
                      i2u1136_45 2E72                        i2u1144_46 30B8  
                      i2u1145_40 30E0                        i2u1153_45 3258  
                      i2u1145_46 30E2                        i2u1170_40 2290  
                      i2u1170_45 2286                        i2u1171_40 22D6  
                      i2u1147_45 30F4                        i2u1171_45 22CC  
                      i2u1172_45 2322                        i2u1183_40 24C0  
                      i2u1183_45 24B6                        i2u1184_40 2506  
                      i2u1184_45 24FC                        i2u1185_45 2552  
                      i2u1249_47 529A                        i2u1196_40 26F0  
                      i2u1196_45 26E6                        i2u1197_40 2736  
                      i2u1197_45 272C                        i2u1198_45 2782  
                  _CANInitialize 49D2                  ___lldiv@divisor 0073  
             LCD_cursor@blinking 007B                    _parking_state 00E5  
                ___lldiv@counter 007B           __end_of_LCD_write_char 5A82  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE       __size_of_LCD_write_message 0034  
                 __tdiv_to_l_@f1 006F                   __tdiv_to_l_@f2 0073  
                     _wait_low_1 0269                       _wait_low_2 026A  
                     _wait_low_3 026B                        _ISR_bassa 0018  
                  ??__tdiv_to_l_ 0077                        _PORTAbits 000F80  
                      _PORTBbits 000F81                   CANSetMask@mask 006F  
                      _PORTDbits 000F83                   CANSetMask@tamp 0079  
       __end_of_LCD_send_command 5BE8                   CANSetMask@type 0073  
                    ___fladd@grs 00B6                    ___xxtofl@sign 0077  
                    ___fldiv@grs 0090                      ___fldiv@rem 008A  
              _F1_Button_Polling 5E30                       ?_LCD_clear 002B  
             ?_F1_Button_Polling 002B                __size_of_CAN_Send 00BA  
        _clock_counter_reference 00DF                      ___flmul@grs 008B  
                 _CANsendMessage 139A                 CANInitialize@BRP 0080  
               CANInitialize@SJW 007F                   ?_CANInitialize 007D  
            ??_F1_Button_Polling 006F              __size_of__div_to_l_ 0188  
        LCD_write_integer@F17272 0100                  ?_LCD_write_char 002B  
                  ??_LCD_Handler 00CB         __end_of_LCD_shift_cursor 5B22  
                 __end_of___flge 4EC6                       ?_ISR_bassa 002B  
                 __end_of___wmul 5C90                __size_of_ISR_alta 5310  
              LCD_shift_cursor@i 007D                   __end_of_fround 4624  
                _CAN_interpreter 5806                   i2_CANisTxReady 5DBE  
      __end_of_F1_Button_Polling 5E4C              start_initialization 5B6A  
            __end_of__tdiv_to_l_ 4D36              CANSetMask@numBuffer 0078  
                  _data_speed_rx 0001           __end_of_CANsendMessage 1B26  
              ?_CANOperationMode 002B                    _data_steering 00E9  
                  ??_LCD_goto_xy 007F       i2CANsendMessage@dataLength 0042  
           i2CANsendMessage@data 0040               ??_CANOperationMode 006F  
           i2CANsendMessage@tamp 0048                  ___llmod@divisor 0073  
       __end_ofi2_CANsendMessage 285C       CANInitialize@FilterConfig1 0087  
     CANInitialize@FilterConfig2 0088                  ___llmod@counter 0077  
                       ??___flge 0077             _board_initialization 5510  
                       ??___wmul 0073                      __pdataBANK0 00EA  
               __CFG_LPT1OSC$OFF 000000                         ??_fround 009A  
         __end_ofi2_CANisTxReady 5DDC                    sprintf@tmpval 012F  
                      ___fladd@a 00A7                        ___fladd@b 00A3  
         CANInitialize@phaseSeg1 007D           CANInitialize@phaseSeg2 007E  
                     fround@prec 00A2              __end_of_LCD_Handler 4804  
                      ___fldiv@a 0081                        ___fldiv@b 007D  
                      ___flmul@a 0081                        ___flmul@b 007D  
                    __pbssCOMRAM 0001                        ___flsub@a 00BB  
                      ___flsub@b 00B7                    __pcstackBANK0 0060  
                  __pcstackBANK1 0121                      _BRGCON2bits 000F71  
                    _BRGCON3bits 000F72                 _Joystick_Polling 5A82  
              __size_of___xxtofl 01CE        __size_of_LCD_enable_pulse 0022  
                   _isdigit$3799 0070       i2CANsendMessage@identifier 003C  
              _park_assist_state 00E4                __size_of_delay_ms 003A  
                    ??_LCD_clear 007B                  ?_CANsendMessage 006F  
        LCD_write_message@buffer 0080                 _LCD_write_string 5D52  
                ??_CANInitialize 0082                      sprintf@flag 0127  
                    sprintf@fval 0135                      sprintf@prec 0133  
               ??_LCD_initialize 007D               CANSetFilter@filter 006F  
      delay_set_quartz@frequency 006F               LCD_send_command@D0 0079  
             LCD_send_command@D1 0078               LCD_send_command@D2 0077  
             LCD_send_command@D3 007A              __end_of_LCD_goto_xy 5E14  
          __end_of_LCD_goto_line 5510            ?_board_initialization 002B  
                      __pintcode 0008                    __pmediumconst FED8  
                       ?___fladd 00A3                         ?___fldiv 007D  
                       ?___awdiv 0075                         ?___flneg 0096  
                       ?___awmod 006F                         ?___flmul 007D  
        __end_of_CAN_interpreter 58B0                         ?___flsub 00B7  
                       ?___fltol 00B7                         ?___lldiv 006F  
                       ?___llmod 006F                        __npowers_ FED9  
                    ??_ISR_bassa 002B                      __pintcodelo 0018  
     __end_of_PWR_Button_Polling 5DF8                  ?i2_CANisTxReady 002B  
                    __tdiv_to_l_ 4B98                     ??__div_to_l_ 0077  
                    _COMSTATbits 000F74                         ?_isdigit 002B  
     __size_of_F1_Button_Polling 001C                         _CAN_Send 574C  
                       ?_sprintf 00C1                   __size_of_scale 051A  
              ?_delay_set_quartz 002B            CANreceiveMessage@tamp 0047  
             ??_delay_set_quartz 006F                   ___wmul@product 0073  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                       _LATEbits 000F8D                         _IPR2bits 000FA2  
   _delay_quartz_frequency_value 00EA                         _IPR3bits 000FA5  
                       _PIE2bits 000FA0                         _PIE3bits 000FA3  
             __end_of__div_to_l_ 504E                         _PIR2bits 000FA1  
                       _PIR3bits 000FA4                         _RXB0EIDH 000F63  
                       _RXB0EIDL 000F64                         _RXB1EIDH 000F53  
                      _pr_time_1 00D3                        _pr_time_2 00D7  
                       _RXB1EIDL 000F54                        _pr_time_3 0010  
                      _pr_time_4 0014                        _pr_time_5 0018  
                      _pr_time_6 001C                        _set_speed 00E1  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                       _RXB0SIDH 000F61                         _RXB0SIDL 000F62  
                       _RXF0EIDH 000F02                         _RXB1SIDH 000F51  
                       _RXF0EIDL 000F03                         _RXB1SIDL 000F52  
                       _RXF1EIDH 000F06                         _RXF1EIDL 000F07  
                       _RXF2EIDH 000F0A                         _RXF2EIDL 000F0B  
                       _RXF3EIDH 000F0E                         _RXF3EIDL 000F0F  
                       _RXF4EIDH 000F12                         _RXF4EIDL 000F13  
                       _RXF5EIDH 000F16                         _RXF5EIDL 000F17  
                       _RXF0SIDH 000F00                         _RXF0SIDL 000F01  
                       _TXB0EIDH 000F43                         _RXF1SIDH 000F04  
                       _TXB0EIDL 000F44                         _RXF1SIDL 000F05  
                       _TXB1EIDH 000F33                         _RXF2SIDH 000F08  
                       _TXB1EIDL 000F34                         _RXF2SIDL 000F09  
                       _ISR_alta 0008                         _TXB2EIDH 000F23  
                       _RXF3SIDH 000F0C                         _TXB2EIDL 000F24  
                       _RXF3SIDL 000F0D                         _RXF4SIDH 000F10  
                       _RXF4SIDL 000F11                         _RXF5SIDH 000F14  
                       _RXF5SIDL 000F15                         _RXM0EIDH 000F1A  
                       _RXM0EIDL 000F1B                         _TXB0SIDH 000F41  
                       _RXM1EIDH 000F1E                         _TXB0SIDL 000F42  
                       _RXM1EIDL 000F1F                         _TXB1SIDH 000F31  
                       _TXB1SIDL 000F32                         _TXB2SIDH 000F21  
                       _TXB2SIDL 000F22                      _LCD_Handler 4624  
                       _RXM0SIDH 000F18                         _RXM0SIDL 000F19  
                       _RXM1SIDH 000F1C                         _RXM1SIDL 000F1D  
                       _RXERRCNT 000F75                         _TXERRCNT 000F76  
                     _ADCON0bits 000FC2                       _ADCON2bits 000FC0  
              ___wmul@multiplier 006F                         _RTR_Flag 0264  
              ?_LCD_send_command 0077                 _actual_speed_kmh 0008  
             ??_LCD_send_command 007A                    ?_CANSetFilter 006F  
                     _CANCONbits 000F6F                      _LCD_goto_xy 5DF8  
               ??_LCD_write_char 007B                LCD_goto_line@line 007B  
                       __Hrparam 0000                     _RXB0SIDLbits 000F62  
         ??_board_initialization 0089                         __Lrparam 0000  
                   _RXB1SIDLbits 000F52                 ?_CAN_interpreter 002B  
               __size_of___fladd 04A8                       _CANSetMask 3F90  
               __size_of___fldiv 03C0                 __size_of___awdiv 00BE  
               __size_of___flneg 0038                 __size_of___awmod 00A2  
               __size_of___flmul 04A6                ?_LCD_shift_cursor 007B  
               __size_of___flsub 0048                 __size_of___fltol 010C  
               __size_of___lldiv 00BC                 __size_of___llmod 009A  
                    _fround$4214 009E                      _fround$4215 009A  
             ??_LCD_shift_cursor 007C                       sprintf@exp 012D  
                     sprintf@val 0129                         ___xxtofl 4804  
                   _RXF0SIDLbits 000F01                 __size_of_isdigit 002A  
                       _delay_ms 5BE8                     _RXF1SIDLbits 000F05  
                 ??_CANSetFilter 0074                 _LCD_enable_pulse 5D9C  
                       __ptext10 5D28                         __ptext11 432E  
                       __ptext20 5318                         __ptext12 372A  
                       __ptext21 5B22                         __ptext13 58B0  
                       __ptext30 5E78                         __ptext22 3282  
                       __ptext14 55D2                         __ptext31 5CC4  
                       __ptext23 5C22                         __ptext15 4B98  
                       __ptext40 5A82                         __ptext32 5CF6  
                       __ptext24 4D36                         __ptext16 4EC6  
                       __ptext41 5E14                         __ptext33 5DF8  
                       __ptext25 3BD0                         __ptext17 4804  
                       __ptext50 5DBE                         __ptext42 5E30  
                       __ptext34 5AD6                         __ptext26 5D52  
                       __ptext18 5952                         __ptext51 2D76  
                       __ptext43 5806                         __ptext35 5424  
                       __ptext27 5C90                         __ptext19 5690  
                       __ptext52 5E62                         __ptext44 574C  
                       __ptext36 5BAE                         __ptext28 59EC  
                       __ptext45 139A                         __ptext37 5D9C  
                       __ptext29 504E                         __ptext46 5D78  
                       __ptext38 5BE8                         __ptext39 5C5A  
                       __ptext49 21CC                     _RXF2SIDLbits 000F09  
                       __powers_ FF0D                     _RXF3SIDLbits 000F0D  
               __size_of_sprintf 0894                     _RXF4SIDLbits 000F11  
                   _RXF5SIDLbits 000F15         CANsendMessage@dataLength 0075  
                  __size_of_main 06A6                ?i2_CANsendMessage 003C  
           CANreceiveMessage@msg 003C            LCD_shift_cursor@shift 007C  
            i2_CANisTxReady$3235 003C                     _TXB0SIDLbits 000F42  
              Joystick_Polling@i 0070               ??i2_CANsendMessage 0044  
                   _TXB1SIDLbits 000F32         __end_of_Joystick_Polling 5AD6  
                   _TXB2SIDLbits 000F22                         int$flags 004E  
      __size_of_CANOperationMode 0016                    ?_CANisRxReady 002B  
                  ?_CANisTxReady 002B         __end_of_LCD_write_string 5D78  
                    _RXB0DLCbits 000F65                      _RXB1DLCbits 000F55  
                   _RXM0SIDLbits 000F19                      _RXB0CONbits 000F60  
                     _LCD_cursor 5CC4                      _RXB1CONbits 000F50  
              _CANreceiveMessage 2D76                     _RXM1SIDLbits 000F1D  
                     _INTCONbits 000FF2                     _set_steering 0029  
               ??_CANsendMessage 0077               ?_CANreceiveMessage 003C  
                       isdigit@c 0071                         scale@scl 009E  
       CANsendMessage@identifier 006F                     _time_counter 0020  
                       intlevel1 0000                         intlevel2 0000  
                      sprintf@ap 0125                 __tdiv_to_l_@exp1 007F  
                      sprintf@sp 00C1                 __tdiv_to_l_@cntr 007E  
               CANSetFilter@tamp 0079                 __tdiv_to_l_@quot 007A  
               CANSetFilter@type 0073              ??_CANreceiveMessage 003E  
               ___lldiv@dividend 006F                      _TXB0DLCbits 000F45  
                    _right_speed 0026                      _TXB1DLCbits 000F35  
                    _TXB0CONbits 000F40                      _TXB2DLCbits 000F25  
                    _TXB1CONbits 000F30                      _TXB2CONbits 000F20  
                _display_refresh 0266                 ??i2_CANisTxReady 003C  
           CANOperationMode@mode 006F                   ??_CANisRxReady 003C  
                    ?_CANSetMask 006F                   ??_CANisTxReady 006F  
                   ?__tdiv_to_l_ 006F        __end_of_CANreceiveMessage 3282  
                       sprintf@c 0139                         sprintf@f 00C3  
               ___lldiv@quotient 0077  LCD_shift_cursor@number_of_shift 007B  
                  ___fladd@signs 00B3               _PWR_Button_Polling 5DDC  
                   ___fladd@aexp 00B4                     ___fladd@bexp 00B5  
          __end_of_CANInitialize 4B98              ?_PWR_Button_Polling 002B  
                   _power_switch 0268  
